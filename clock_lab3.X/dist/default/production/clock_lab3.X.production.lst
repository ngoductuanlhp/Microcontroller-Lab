

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Sep 21 15:05:16 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    63  0000                     
    64                           ; Version 2.10
    65                           ; Generated 31/07/2019 GMT
    66                           ; 
    67                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC18F8722 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     
    99                           	psect	idataBANK0
   100  00677A                     __pidataBANK0:
   101                           	opt callstack 0
   102                           
   103                           ;initializer for _secondReadRB0
   104  00677A  01                 	db	1
   105                           
   106                           ;initializer for _firstReadRB0
   107  00677B  01                 	db	1
   108                           
   109                           ;initializer for _secondReadRA5
   110  00677C  01                 	db	1
   111                           
   112                           ;initializer for _firstReadRA5
   113  00677D  01                 	db	1
   114                           
   115                           	psect	smallconst
   116  001000                     __psmallconst:
   117                           	opt callstack 0
   118  001000  00                 	db	0
   119  001001                     _dp_l:
   120                           	opt callstack 0
   121  001001  0000               	dw	0
   122  001003  0000               	dw	0
   123  001005  CFDC               	dw	53212
   124  001007  35D1               	dw	13777
   125  001009                     __end_of_dp_l:
   126                           	opt callstack 0
   127  001009                     _dp_h:
   128                           	opt callstack 0
   129  001009  0000               	dw	0
   130  00100B  0000               	dw	0
   131  00100D  C000               	dw	49152
   132  00100F  3F15               	dw	16149
   133  001011                     __end_of_dp_h:
   134                           	opt callstack 0
   135  001011  4260               	dw	16992
   136  001013  0DA2               	dw	3490
   137  001015                     __end_ofsqrtf@tiny:
   138                           	opt callstack 0
   139  001015  A570               	dw	42352
   140  001017  36EC               	dw	14060
   141  001019                     __end_of_ivln2_l:
   142                           	opt callstack 0
   143  001019  AA3B               	dw	43579
   144  00101B  3FB8               	dw	16312
   145  00101D                     __end_of_ivln2:
   146                           	opt callstack 0
   147  00101D  384F               	dw	14415
   148  00101F  3F76               	dw	16246
   149  001021                     __end_of_cp:
   150                           	opt callstack 0
   151  001021  AA3C               	dw	43580
   152  001023  3338               	dw	13112
   153  001025                     __end_of_ovt:
   154                           	opt callstack 0
   155  001025  BE8C               	dw	48780
   156  001027  35BF               	dw	13759
   157  001029                     __end_of_lg2_l:
   158                           	opt callstack 0
   159  001029  7200               	dw	29184
   160  00102B  3F31               	dw	16177
   161  00102D                     __end_of_lg2_h:
   162                           	opt callstack 0
   163  00102D  7218               	dw	29208
   164  00102F  3F31               	dw	16177
   165  001031                     __end_of_lg2:
   166                           	opt callstack 0
   167  001031  BB4C               	dw	47948
   168  001033  3331               	dw	13105
   169  001035                     __end_of_P5:
   170                           	opt callstack 0
   171  001035  EA0E               	dw	59918
   172  001037  B5DD               	dw	46557
   173  001039                     __end_of_P4:
   174                           	opt callstack 0
   175  001039  B355               	dw	45909
   176  00103B  388A               	dw	14474
   177  00103D                     __end_of_P3:
   178                           	opt callstack 0
   179  00103D  0B61               	dw	2913
   180  00103F  BB36               	dw	47926
   181  001041                     __end_of_P2:
   182                           	opt callstack 0
   183  001041  AAAB               	dw	43691
   184  001043  3E2A               	dw	15914
   185  001045                     __end_of_P1:
   186                           	opt callstack 0
   187  001045  F142               	dw	61762
   188  001047  3E53               	dw	15955
   189  001049                     __end_of_L6:
   190                           	opt callstack 0
   191  001049  3255               	dw	12885
   192  00104B  3E6C               	dw	15980
   193  00104D                     __end_of_L5:
   194                           	opt callstack 0
   195  00104D  A305               	dw	41733
   196  00104F  3E8B               	dw	16011
   197  001051                     __end_of_L4:
   198                           	opt callstack 0
   199  001051  AAAB               	dw	43691
   200  001053  3EAA               	dw	16042
   201  001055                     __end_of_L3:
   202                           	opt callstack 0
   203  001055  6DB7               	dw	28087
   204  001057  3EDB               	dw	16091
   205  001059                     __end_of_L2:
   206                           	opt callstack 0
   207  001059  999A               	dw	39322
   208  00105B  3F19               	dw	16153
   209  00105D                     __end_of_L1:
   210                           	opt callstack 0
   211  00105D  4260               	dw	16992
   212  00105F  0DA2               	dw	3490
   213  001061                     __end_of_tiny:
   214                           	opt callstack 0
   215  001061  F2CA               	dw	62154
   216  001063  7149               	dw	29001
   217  001065                     __end_of_huge:
   218                           	opt callstack 0
   219  001065  0000               	dw	0
   220  001067  4B80               	dw	19328
   221  001069                     __end_of_two24:
   222                           	opt callstack 0
   223  001069                     _bp:
   224                           	opt callstack 0
   225  001069  0000               	dw	0
   226  00106B  3F80               	dw	16256
   227  00106D  0000               	dw	0
   228  00106F  3FC0               	dw	16320
   229  001071                     __end_of_bp:
   230                           	opt callstack 0
   231  001071  AA00               	dw	43520
   232  001073  3FB8               	dw	16312
   233  001075                     __end_of_ivln2_h:
   234                           	opt callstack 0
   235  001075  23C6               	dw	9158
   236  001077  B8F6               	dw	47350
   237  001079                     __end_of_cp_l:
   238                           	opt callstack 0
   239  001079  4000               	dw	16384
   240  00107B  3F76               	dw	16246
   241  00107D                     __end_of_cp_h:
   242                           	opt callstack 0
   243  0000                     _PORTBbits	set	3969
   244  0000                     _PORTAbits	set	3968
   245  0000                     _LATCbits	set	3979
   246  0000                     _LATAbits	set	3977
   247  0000                     _TRISCbits	set	3988
   248  0000                     _TRISAbits	set	3986
   249  0000                     _LATFbits	set	3982
   250  0000                     _TRISFbits	set	3991
   251  0000                     _OSCCON	set	4051
   252  0000                     _ADCON1	set	4033
   253  0000                     _TRISC	set	3988
   254  0000                     _LATC	set	3979
   255  0000                     _TRISB	set	3987
   256  0000                     _LATB	set	3978
   257  0000                     _TRISA	set	3986
   258  0000                     _LATA	set	3977
   259  0000                     _LATD	set	3980
   260  0000                     _TRISD	set	3989
   261  0000                     _T0CONbits	set	4053
   262  0000                     _T0CON	set	4053
   263  0000                     _TMR0H	set	4055
   264  0000                     _TMR0L	set	4054
   265  0000                     _INTCONbits	set	4082
   266  00107D                     STR_9:
   267                           
   268                           ; BSR set to: 0
   269  00107D  53                 	db	83	;'S'
   270  00107E  74                 	db	116	;'t'
   271  00107F  6F                 	db	111	;'o'
   272  001080  70                 	db	112	;'p'
   273  001081  20                 	db	32
   274  001082  57                 	db	87	;'W'
   275  001083  20                 	db	32
   276  001084  20                 	db	32
   277  001085  52                 	db	82	;'R'
   278  001086  41                 	db	65	;'A'
   279  001087  35                 	db	53	;'5'
   280  001088  3D                 	db	61	;'='
   281  001089  4E                 	db	78	;'N'
   282  00108A  65                 	db	101	;'e'
   283  00108B  78                 	db	120	;'x'
   284  00108C  74                 	db	116	;'t'
   285  00108D  00                 	db	0
   286  00108E                     STR_6:
   287                           
   288                           ; BSR set to: 0
   289  00108E  4D                 	db	77	;'M'
   290  00108F  6F                 	db	111	;'o'
   291  001090  64                 	db	100	;'d'
   292  001091  20                 	db	32
   293  001092  48                 	db	72	;'H'
   294  001093  20                 	db	32
   295  001094  20                 	db	32
   296  001095  20                 	db	32
   297  001096  52                 	db	82	;'R'
   298  001097  41                 	db	65	;'A'
   299  001098  35                 	db	53	;'5'
   300  001099  3D                 	db	61	;'='
   301  00109A  4E                 	db	78	;'N'
   302  00109B  65                 	db	101	;'e'
   303  00109C  78                 	db	120	;'x'
   304  00109D  74                 	db	116	;'t'
   305  00109E  00                 	db	0
   306  00109F                     STR_7:
   307                           
   308                           ; BSR set to: 0
   309  00109F  4D                 	db	77	;'M'
   310  0010A0  6F                 	db	111	;'o'
   311  0010A1  64                 	db	100	;'d'
   312  0010A2  20                 	db	32
   313  0010A3  4D                 	db	77	;'M'
   314  0010A4  20                 	db	32
   315  0010A5  20                 	db	32
   316  0010A6  20                 	db	32
   317  0010A7  52                 	db	82	;'R'
   318  0010A8  41                 	db	65	;'A'
   319  0010A9  35                 	db	53	;'5'
   320  0010AA  3D                 	db	61	;'='
   321  0010AB  4E                 	db	78	;'N'
   322  0010AC  65                 	db	101	;'e'
   323  0010AD  78                 	db	120	;'x'
   324  0010AE  74                 	db	116	;'t'
   325  0010AF  00                 	db	0
   326  0010B0                     STR_8:
   327                           
   328                           ; BSR set to: 0
   329  0010B0  4D                 	db	77	;'M'
   330  0010B1  6F                 	db	111	;'o'
   331  0010B2  64                 	db	100	;'d'
   332  0010B3  20                 	db	32
   333  0010B4  53                 	db	83	;'S'
   334  0010B5  20                 	db	32
   335  0010B6  20                 	db	32
   336  0010B7  20                 	db	32
   337  0010B8  52                 	db	82	;'R'
   338  0010B9  41                 	db	65	;'A'
   339  0010BA  35                 	db	53	;'5'
   340  0010BB  3D                 	db	61	;'='
   341  0010BC  4E                 	db	78	;'N'
   342  0010BD  65                 	db	101	;'e'
   343  0010BE  78                 	db	120	;'x'
   344  0010BF  74                 	db	116	;'t'
   345  0010C0  00                 	db	0
   346  0010C1                     STR_5:
   347                           
   348                           ; BSR set to: 0
   349  0010C1  43                 	db	67	;'C'
   350  0010C2  6C                 	db	108	;'l'
   351  0010C3  6F                 	db	111	;'o'
   352  0010C4  63                 	db	99	;'c'
   353  0010C5  6B                 	db	107	;'k'
   354  0010C6  20                 	db	32
   355  0010C7  20                 	db	32
   356  0010C8  20                 	db	32
   357  0010C9  52                 	db	82	;'R'
   358  0010CA  41                 	db	65	;'A'
   359  0010CB  35                 	db	53	;'5'
   360  0010CC  3D                 	db	61	;'='
   361  0010CD  4E                 	db	78	;'N'
   362  0010CE  65                 	db	101	;'e'
   363  0010CF  78                 	db	120	;'x'
   364  0010D0  74                 	db	116	;'t'
   365  0010D1  00                 	db	0
   366  0010D2                     STR_10:
   367                           
   368                           ; BSR set to: 0
   369  0010D2  20                 	db	32
   370  0010D3  20                 	db	32
   371  0010D4  20                 	db	32
   372  0010D5  20                 	db	32
   373  0010D6  20                 	db	32
   374  0010D7  20                 	db	32
   375  0010D8  20                 	db	32
   376  0010D9  20                 	db	32
   377  0010DA  00                 	db	0
   378  0000                     
   379                           ; #config settings
   380  0010DB  00                 	db	0	; dummy byte at the end
   381  0000                     
   382                           	psect	cinit
   383  006556                     __pcinit:
   384                           	opt callstack 0
   385  006556                     start_initialization:
   386                           	opt callstack 0
   387  006556                     __initialization:
   388                           	opt callstack 0
   389                           
   390                           ; Initialize objects allocated to BANK0 (4 bytes)
   391                           ; load TBLPTR registers with __pidataBANK0
   392  006556  0E7A               	movlw	low __pidataBANK0
   393  006558  6EF6               	movwf	tblptrl,c
   394  00655A  0E67               	movlw	high __pidataBANK0
   395  00655C  6EF7               	movwf	tblptrh,c
   396  00655E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   397  006560  6EF8               	movwf	tblptru,c
   398  006562  EE00  F0CF         	lfsr	0,__pdataBANK0
   399  006566  EE10 F004          	lfsr	1,4
   400  00656A                     copy_data0:
   401  00656A  0009               	tblrd		*+
   402  00656C  CFF5 FFEE          	movff	tablat,postinc0
   403  006570  50E5               	movf	postdec1,w,c
   404  006572  50E1               	movf	fsr1l,w,c
   405  006574  E1FA               	bnz	copy_data0
   406                           
   407                           ; Clear objects allocated to BANK0 (32 bytes)
   408  006576  EE00  F0AF         	lfsr	0,__pbssBANK0
   409  00657A  0E20               	movlw	32
   410  00657C                     clear_0:
   411  00657C  6AEE               	clrf	postinc0,c
   412  00657E  06E8               	decf	wreg,f,c
   413  006580  E1FD               	bnz	clear_0
   414                           
   415                           ; Clear objects allocated to COMRAM (8 bytes)
   416  006582  EE00  F04F         	lfsr	0,__pbssCOMRAM
   417  006586  0E08               	movlw	8
   418  006588                     clear_1:
   419  006588  6AEE               	clrf	postinc0,c
   420  00658A  06E8               	decf	wreg,f,c
   421  00658C  E1FD               	bnz	clear_1
   422  00658E                     end_of_initialization:
   423                           	opt callstack 0
   424  00658E                     __end_of__initialization:
   425                           	opt callstack 0
   426  00658E  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   427  006590  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   428  006592  0100               	movlb	0
   429  006594  EF2E  F031         	goto	_main	;jump to C main() function
   430                           
   431                           	psect	bssCOMRAM
   432  00004F                     __pbssCOMRAM:
   433                           	opt callstack 0
   434  00004F                     _ms_sw:
   435                           	opt callstack 0
   436  00004F                     	ds	1
   437  000050                     _sec_sw:
   438                           	opt callstack 0
   439  000050                     	ds	1
   440  000051                     _min_sw:
   441                           	opt callstack 0
   442  000051                     	ds	1
   443  000052                     _sec:
   444                           	opt callstack 0
   445  000052                     	ds	1
   446  000053                     _min:
   447                           	opt callstack 0
   448  000053                     	ds	1
   449  000054                     _hr:
   450                           	opt callstack 0
   451  000054                     	ds	1
   452  000055                     _ledValue:
   453                           	opt callstack 0
   454  000055                     	ds	1
   455  000056                     _state:
   456                           	opt callstack 0
   457  000056                     	ds	1
   458                           
   459                           	psect	bssBANK0
   460  0000AF                     __pbssBANK0:
   461                           	opt callstack 0
   462  0000AF                     fabsf@F463:
   463                           	opt callstack 0
   464  0000AF                     	ds	4
   465  0000B3                     _errno:
   466                           	opt callstack 0
   467  0000B3                     	ds	2
   468  0000B5                     _countRB0_1:
   469                           	opt callstack 0
   470  0000B5                     	ds	2
   471  0000B7                     _countRB0:
   472                           	opt callstack 0
   473  0000B7                     	ds	2
   474  0000B9                     _countRA5_1:
   475                           	opt callstack 0
   476  0000B9                     	ds	2
   477  0000BB                     _countRA5:
   478                           	opt callstack 0
   479  0000BB                     	ds	2
   480  0000BD                     _count1:
   481                           	opt callstack 0
   482  0000BD                     	ds	2
   483  0000BF                     _count:
   484                           	opt callstack 0
   485  0000BF                     	ds	2
   486  0000C1                     _counter_high:
   487                           	opt callstack 0
   488  0000C1                     	ds	2
   489  0000C3                     _counter_low:
   490                           	opt callstack 0
   491  0000C3                     	ds	2
   492  0000C5                     _stateRB0:
   493                           	opt callstack 0
   494  0000C5                     	ds	1
   495  0000C6                     _stateRA5:
   496                           	opt callstack 0
   497  0000C6                     	ds	1
   498  0000C7                     _state_sw:
   499                           	opt callstack 0
   500  0000C7                     	ds	1
   501  0000C8                     _hr_sw:
   502                           	opt callstack 0
   503  0000C8                     	ds	1
   504  0000C9                     _timeset:
   505                           	opt callstack 0
   506  0000C9                     	ds	1
   507  0000CA                     _ms_flag:
   508                           	opt callstack 0
   509  0000CA                     	ds	1
   510  0000CB                     _hide_flag:
   511                           	opt callstack 0
   512  0000CB                     	ds	1
   513  0000CC                     _second_flag:
   514                           	opt callstack 0
   515  0000CC                     	ds	1
   516  0000CD                     _buttonRB0:
   517                           	opt callstack 0
   518  0000CD                     	ds	1
   519  0000CE                     _buttonRA5:
   520                           	opt callstack 0
   521  0000CE                     	ds	1
   522                           
   523                           	psect	dataBANK0
   524  0000CF                     __pdataBANK0:
   525                           	opt callstack 0
   526  0000CF                     _secondReadRB0:
   527                           	opt callstack 0
   528  0000CF                     	ds	1
   529  0000D0                     _firstReadRB0:
   530                           	opt callstack 0
   531  0000D0                     	ds	1
   532  0000D1                     _secondReadRA5:
   533                           	opt callstack 0
   534  0000D1                     	ds	1
   535  0000D2                     _firstReadRA5:
   536                           	opt callstack 0
   537  0000D2                     	ds	1
   538                           
   539                           	psect	cstackBANK1
   540  000100                     __pcstackBANK1:
   541                           	opt callstack 0
   542  000100                     _powf$1780:
   543                           	opt callstack 0
   544                           
   545                           ; 4 bytes @ 0x0
   546  000100                     	ds	4
   547  000104                     _powf$1781:
   548                           	opt callstack 0
   549                           
   550                           ; 4 bytes @ 0x4
   551  000104                     	ds	4
   552  000108                     _powf$1785:
   553                           	opt callstack 0
   554                           
   555                           ; 4 bytes @ 0x8
   556  000108                     	ds	4
   557  00010C                     _powf$1786:
   558                           	opt callstack 0
   559                           
   560                           ; 4 bytes @ 0xC
   561  00010C                     	ds	4
   562  000110                     _powf$1787:
   563                           	opt callstack 0
   564                           
   565                           ; 4 bytes @ 0x10
   566  000110                     	ds	4
   567  000114                     _powf$1788:
   568                           	opt callstack 0
   569                           
   570                           ; 4 bytes @ 0x14
   571  000114                     	ds	4
   572  000118                     _powf$1789:
   573                           	opt callstack 0
   574                           
   575                           ; 4 bytes @ 0x18
   576  000118                     	ds	4
   577  00011C                     powf@t2:
   578                           	opt callstack 0
   579                           
   580                           ; 4 bytes @ 0x1C
   581  00011C                     	ds	4
   582  000120                     powf@z_h:
   583                           	opt callstack 0
   584                           
   585                           ; 4 bytes @ 0x20
   586  000120                     	ds	4
   587  000124                     powf@z_l:
   588                           	opt callstack 0
   589                           
   590                           ; 4 bytes @ 0x24
   591  000124                     	ds	4
   592  000128                     powf@y1:
   593                           	opt callstack 0
   594                           
   595                           ; 4 bytes @ 0x28
   596  000128                     	ds	4
   597  00012C                     powf@i:
   598                           	opt callstack 0
   599                           
   600                           ; 4 bytes @ 0x2C
   601  00012C                     	ds	4
   602  000130                     powf@s_l:
   603                           	opt callstack 0
   604                           
   605                           ; 4 bytes @ 0x30
   606  000130                     	ds	4
   607  000134                     powf@t_l:
   608                           	opt callstack 0
   609                           
   610                           ; 4 bytes @ 0x34
   611  000134                     	ds	4
   612  000138                     _powf$1779:
   613                           	opt callstack 0
   614                           
   615                           ; 4 bytes @ 0x38
   616  000138                     	ds	4
   617  00013C                     _powf$1783:
   618                           	opt callstack 0
   619                           
   620                           ; 4 bytes @ 0x3C
   621  00013C                     	ds	4
   622  000140                     _powf$1784:
   623                           	opt callstack 0
   624                           
   625                           ; 4 bytes @ 0x40
   626  000140                     	ds	4
   627  000144                     powf@w:
   628                           	opt callstack 0
   629                           
   630                           ; 4 bytes @ 0x44
   631  000144                     	ds	4
   632  000148                     _powf$1777:
   633                           	opt callstack 0
   634                           
   635                           ; 4 bytes @ 0x48
   636  000148                     	ds	4
   637  00014C                     powf@r:
   638                           	opt callstack 0
   639                           
   640                           ; 4 bytes @ 0x4C
   641  00014C                     	ds	4
   642  000150                     powf@yisint:
   643                           	opt callstack 0
   644                           
   645                           ; 4 bytes @ 0x50
   646  000150                     	ds	4
   647  000154                     _powf$1776:
   648                           	opt callstack 0
   649                           
   650                           ; 4 bytes @ 0x54
   651  000154                     	ds	4
   652  000158                     _powf$1782:
   653                           	opt callstack 0
   654                           
   655                           ; 4 bytes @ 0x58
   656  000158                     	ds	4
   657  00015C                     powf@s:
   658                           	opt callstack 0
   659                           
   660                           ; 4 bytes @ 0x5C
   661  00015C                     	ds	4
   662  000160                     powf@hx:
   663                           	opt callstack 0
   664                           
   665                           ; 4 bytes @ 0x60
   666  000160                     	ds	4
   667  000164                     powf@p_l:
   668                           	opt callstack 0
   669                           
   670                           ; 4 bytes @ 0x64
   671  000164                     	ds	4
   672  000168                     powf@t_h:
   673                           	opt callstack 0
   674                           
   675                           ; 4 bytes @ 0x68
   676  000168                     	ds	4
   677  00016C                     powf@s_h:
   678                           	opt callstack 0
   679                           
   680                           ; 4 bytes @ 0x6C
   681  00016C                     	ds	4
   682  000170                     powf@ax:
   683                           	opt callstack 0
   684                           
   685                           ; 4 bytes @ 0x70
   686  000170                     	ds	4
   687  000174                     powf@u:
   688                           	opt callstack 0
   689                           
   690                           ; 4 bytes @ 0x74
   691  000174                     	ds	4
   692  000178                     powf@v:
   693                           	opt callstack 0
   694                           
   695                           ; 4 bytes @ 0x78
   696  000178                     	ds	4
   697  00017C                     powf@hy:
   698                           	opt callstack 0
   699                           
   700                           ; 4 bytes @ 0x7C
   701  00017C                     	ds	4
   702  000180                     powf@n:
   703                           	opt callstack 0
   704                           
   705                           ; 4 bytes @ 0x80
   706  000180                     	ds	4
   707  000184                     powf@t1:
   708                           	opt callstack 0
   709                           
   710                           ; 4 bytes @ 0x84
   711  000184                     	ds	4
   712  000188                     powf@sn:
   713                           	opt callstack 0
   714                           
   715                           ; 4 bytes @ 0x88
   716  000188                     	ds	4
   717  00018C                     powf@s2:
   718                           	opt callstack 0
   719                           
   720                           ; 4 bytes @ 0x8C
   721  00018C                     	ds	4
   722  000190                     powf@iy:
   723                           	opt callstack 0
   724                           
   725                           ; 4 bytes @ 0x90
   726  000190                     	ds	4
   727  000194                     powf@is:
   728                           	opt callstack 0
   729                           
   730                           ; 4 bytes @ 0x94
   731  000194                     	ds	4
   732  000198                     _powf$1778:
   733                           	opt callstack 0
   734                           
   735                           ; 4 bytes @ 0x98
   736  000198                     	ds	4
   737  00019C                     powf@p_h:
   738                           	opt callstack 0
   739                           
   740                           ; 4 bytes @ 0x9C
   741  00019C                     	ds	4
   742  0001A0                     powf@k:
   743                           	opt callstack 0
   744                           
   745                           ; 4 bytes @ 0xA0
   746  0001A0                     	ds	4
   747  0001A4                     _powf$1775:
   748                           	opt callstack 0
   749                           
   750                           ; 4 bytes @ 0xA4
   751  0001A4                     	ds	4
   752  0001A8                     powf@ix:
   753                           	opt callstack 0
   754                           
   755                           ; 4 bytes @ 0xA8
   756  0001A8                     	ds	4
   757  0001AC                     powf@j:
   758                           	opt callstack 0
   759                           
   760                           ; 4 bytes @ 0xAC
   761  0001AC                     	ds	4
   762  0001B0                     powf@t:
   763                           	opt callstack 0
   764                           
   765                           ; 4 bytes @ 0xB0
   766  0001B0                     	ds	4
   767  0001B4                     powf@z:
   768                           	opt callstack 0
   769                           
   770                           ; 4 bytes @ 0xB4
   771  0001B4                     	ds	4
   772  0001B8                     powf@__xc8_float_word:
   773                           	opt callstack 0
   774                           
   775                           ; 4 bytes @ 0xB8
   776  0001B8                     	ds	4
   777                           
   778                           	psect	cstackBANK0
   779  000060                     __pcstackBANK0:
   780                           	opt callstack 0
   781  000060                     ___fldiv@rem:
   782                           	opt callstack 0
   783                           
   784                           ; 4 bytes @ 0x0
   785  000060                     	ds	4
   786  000064                     ___fldiv@sign:
   787                           	opt callstack 0
   788  000064                     sqrtf@s:
   789                           	opt callstack 0
   790                           
   791                           ; 4 bytes @ 0x4
   792  000064                     	ds	1
   793  000065                     ___fldiv@new_exp:
   794                           	opt callstack 0
   795                           
   796                           ; 2 bytes @ 0x5
   797  000065                     	ds	2
   798  000067                     ___fldiv@grs:
   799                           	opt callstack 0
   800                           
   801                           ; 4 bytes @ 0x7
   802  000067                     	ds	1
   803  000068                     sqrtf@i:
   804                           	opt callstack 0
   805                           
   806                           ; 4 bytes @ 0x8
   807  000068                     	ds	3
   808  00006B                     ___fldiv@bexp:
   809                           	opt callstack 0
   810                           
   811                           ; 1 bytes @ 0xB
   812  00006B                     	ds	1
   813  00006C                     ___fldiv@aexp:
   814                           	opt callstack 0
   815  00006C                     sqrtf@__xc8_float_word:
   816                           	opt callstack 0
   817                           
   818                           ; 4 bytes @ 0xC
   819  00006C                     	ds	4
   820  000070                     sqrtf@q:
   821                           	opt callstack 0
   822                           
   823                           ; 4 bytes @ 0x10
   824  000070                     	ds	4
   825  000074                     sqrtf@t:
   826                           	opt callstack 0
   827                           
   828                           ; 4 bytes @ 0x14
   829  000074                     	ds	4
   830  000078                     sqrtf@z:
   831                           	opt callstack 0
   832                           
   833                           ; 4 bytes @ 0x18
   834  000078                     	ds	4
   835  00007C                     sqrtf@m:
   836                           	opt callstack 0
   837                           
   838                           ; 4 bytes @ 0x1C
   839  00007C                     	ds	4
   840  000080                     sqrtf@r:
   841                           	opt callstack 0
   842                           
   843                           ; 4 bytes @ 0x20
   844  000080                     	ds	4
   845  000084                     sqrtf@ix:
   846                           	opt callstack 0
   847                           
   848                           ; 4 bytes @ 0x24
   849  000084                     	ds	4
   850  000088                     ?_powf:
   851                           	opt callstack 0
   852  000088                     powf@x:
   853                           	opt callstack 0
   854                           
   855                           ; 4 bytes @ 0x28
   856  000088                     	ds	4
   857  00008C                     powf@y:
   858                           	opt callstack 0
   859                           
   860                           ; 4 bytes @ 0x2C
   861  00008C                     	ds	4
   862  000090                     ??_powf:
   863                           
   864                           ; 1 bytes @ 0x30
   865  000090                     	ds	9
   866  000099                     ?___fltol:
   867                           	opt callstack 0
   868  000099                     ___fltol@f1:
   869                           	opt callstack 0
   870                           
   871                           ; 4 bytes @ 0x39
   872  000099                     	ds	4
   873  00009D                     ??___fltol:
   874                           
   875                           ; 1 bytes @ 0x3D
   876  00009D                     	ds	4
   877  0000A1                     ___fltol@sign1:
   878                           	opt callstack 0
   879                           
   880                           ; 1 bytes @ 0x41
   881  0000A1                     	ds	1
   882  0000A2                     ___fltol@exp1:
   883                           	opt callstack 0
   884                           
   885                           ; 1 bytes @ 0x42
   886  0000A2                     	ds	1
   887  0000A3                     _preCalculate$1774:
   888                           	opt callstack 0
   889                           
   890                           ; 4 bytes @ 0x43
   891  0000A3                     	ds	4
   892  0000A7                     preCalculate@count:
   893                           	opt callstack 0
   894                           
   895                           ; 2 bytes @ 0x47
   896  0000A7                     	ds	2
   897  0000A9                     preCalculate@temp:
   898                           	opt callstack 0
   899                           
   900                           ; 2 bytes @ 0x49
   901  0000A9                     	ds	2
   902  0000AB                     preCalculate@count_scaled:
   903                           	opt callstack 0
   904                           
   905                           ; 2 bytes @ 0x4B
   906  0000AB                     	ds	2
   907  0000AD                     ??_main:
   908                           
   909                           ; 1 bytes @ 0x4D
   910  0000AD                     	ds	2
   911                           
   912                           	psect	cstackCOMRAM
   913  000001                     __pcstackCOMRAM:
   914                           	opt callstack 0
   915  000001                     ?_readButtonRA5:
   916                           	opt callstack 0
   917  000001                     ?_readButtonRB0:
   918                           	opt callstack 0
   919                           
   920                           ; 2 bytes @ 0x0
   921  000001                     	ds	2
   922  000003                     ??_handleButton:
   923  000003                     
   924                           ; 1 bytes @ 0x2
   925  000003                     	ds	2
   926  000005                     handleButton@checkRA5:
   927                           	opt callstack 0
   928                           
   929                           ; 2 bytes @ 0x4
   930  000005                     	ds	2
   931  000007                     handleButton@checkRB0:
   932                           	opt callstack 0
   933                           
   934                           ; 2 bytes @ 0x6
   935  000007                     	ds	2
   936  000009                     ?___awdiv:
   937                           	opt callstack 0
   938  000009                     ?___awmod:
   939                           	opt callstack 0
   940  000009                     ?___fladd:
   941                           	opt callstack 0
   942  000009                     ?_fabsf:
   943                           	opt callstack 0
   944  000009                     ?_nanf:
   945                           	opt callstack 0
   946  000009                     ?___flneg:
   947                           	opt callstack 0
   948  000009                     ?___xxtofl:
   949                           	opt callstack 0
   950  000009                     SendByteBBSPI@output:
   951                           	opt callstack 0
   952  000009                     ___awdiv@dividend:
   953                           	opt callstack 0
   954  000009                     ___awmod@dividend:
   955                           	opt callstack 0
   956  000009                     nanf@s:
   957                           	opt callstack 0
   958  000009                     ___flneg@f1:
   959                           	opt callstack 0
   960  000009                     ___fladd@b:
   961                           	opt callstack 0
   962  000009                     ___xxtofl@val:
   963                           	opt callstack 0
   964  000009                     fabsf@x:
   965                           	opt callstack 0
   966                           
   967                           ; 4 bytes @ 0x8
   968  000009                     	ds	1
   969  00000A                     SendByteBBSPI@bitcount:
   970                           	opt callstack 0
   971                           
   972                           ; 1 bytes @ 0x9
   973  00000A                     	ds	1
   974  00000B                     SendByteBBSPI@input:
   975                           	opt callstack 0
   976  00000B                     ___awdiv@divisor:
   977                           	opt callstack 0
   978  00000B                     ___awmod@divisor:
   979                           	opt callstack 0
   980                           
   981                           ; 2 bytes @ 0xA
   982  00000B                     	ds	1
   983  00000C                     Port_BBSPIInit@port_dir:
   984                           	opt callstack 0
   985  00000C                     WritePort_BBSPI@a:
   986                           	opt callstack 0
   987                           
   988                           ; 1 bytes @ 0xB
   989  00000C                     	ds	1
   990  00000D                     ??___xxtofl:
   991  00000D                     WritePort_BBSPI@port_add:
   992                           	opt callstack 0
   993  00000D                     ___awdiv@counter:
   994                           	opt callstack 0
   995  00000D                     ___awmod@counter:
   996                           	opt callstack 0
   997  00000D                     ___fladd@a:
   998                           	opt callstack 0
   999  00000D                     fabsf@u:
  1000                           	opt callstack 0
  1001  00000D                     nanf@u:
  1002                           	opt callstack 0
  1003                           
  1004                           ; 4 bytes @ 0xC
  1005  00000D                     	ds	1
  1006  00000E                     ??_LCDPutInst:
  1007  00000E                     ??_LCDPutChar:
  1008  00000E                     ___awdiv@sign:
  1009                           	opt callstack 0
  1010  00000E                     ___awmod@sign:
  1011                           	opt callstack 0
  1012                           
  1013                           ; 1 bytes @ 0xD
  1014  00000E                     	ds	1
  1015  00000F                     LCDPutChar@ch:
  1016                           	opt callstack 0
  1017  00000F                     LCDPutInst@ch:
  1018                           	opt callstack 0
  1019  00000F                     ___awdiv@quotient:
  1020                           	opt callstack 0
  1021                           
  1022                           ; 2 bytes @ 0xE
  1023  00000F                     	ds	1
  1024  000010                     ??_LCDInit:
  1025  000010                     LCDMoveCursor@pos:
  1026                           	opt callstack 0
  1027  000010                     LCDPutStr@ptr:
  1028                           	opt callstack 0
  1029                           
  1030                           ; 2 bytes @ 0xF
  1031  000010                     	ds	1
  1032  000011                     ??___fladd:
  1033  000011                     LCDMoveCursor@line:
  1034                           	opt callstack 0
  1035  000011                     ___xxtofl@sign:
  1036                           	opt callstack 0
  1037                           
  1038                           ; 1 bytes @ 0x10
  1039  000011                     	ds	1
  1040  000012                     ___xxtofl@exp:
  1041                           	opt callstack 0
  1042  000012                     _LCDMoveCursor$654:
  1043                           	opt callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x11
  1046  000012                     	ds	1
  1047  000013                     ___xxtofl@arg:
  1048                           	opt callstack 0
  1049                           
  1050                           ; 4 bytes @ 0x12
  1051  000013                     	ds	1
  1052  000014                     LCDMoveCursor@position:
  1053                           	opt callstack 0
  1054                           
  1055                           ; 1 bytes @ 0x13
  1056  000014                     	ds	1
  1057  000015                     ??_state_stop_watch:
  1058  000015                     LCDPrint@pos:
  1059                           	opt callstack 0
  1060  000015                     ___fladd@signs:
  1061                           	opt callstack 0
  1062  000015                     _state_clock$731:
  1063                           	opt callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x14
  1066  000015                     	ds	1
  1067  000016                     ___fladd@aexp:
  1068                           	opt callstack 0
  1069  000016                     LCDPrint@ptr:
  1070                           	opt callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x15
  1073  000016                     	ds	1
  1074  000017                     ___fladd@bexp:
  1075                           	opt callstack 0
  1076                           
  1077                           ; 1 bytes @ 0x16
  1078  000017                     	ds	1
  1079  000018                     LCDPrint@line:
  1080                           	opt callstack 0
  1081  000018                     ___fladd@grs:
  1082                           	opt callstack 0
  1083                           
  1084                           ; 1 bytes @ 0x17
  1085  000018                     	ds	1
  1086  000019                     ??_disp_Clock_Hide:
  1087  000019                     ?___flmul:
  1088                           	opt callstack 0
  1089  000019                     ___flmul@b:
  1090                           	opt callstack 0
  1091                           
  1092                           ; 4 bytes @ 0x18
  1093  000019                     	ds	2
  1094  00001B                     disp_Clock_Hide@state:
  1095                           	opt callstack 0
  1096                           
  1097                           ; 1 bytes @ 0x1A
  1098  00001B                     	ds	1
  1099  00001C                     _state_mod_hour$762:
  1100                           	opt callstack 0
  1101  00001C                     _state_mod_minute$766:
  1102                           	opt callstack 0
  1103  00001C                     _state_mod_second$769:
  1104                           	opt callstack 0
  1105                           
  1106                           ; 2 bytes @ 0x1B
  1107  00001C                     	ds	1
  1108  00001D                     ___flmul@a:
  1109                           	opt callstack 0
  1110                           
  1111                           ; 4 bytes @ 0x1C
  1112  00001D                     	ds	4
  1113  000021                     ??___flmul:
  1114                           
  1115                           ; 1 bytes @ 0x20
  1116  000021                     	ds	4
  1117  000025                     ___flmul@sign:
  1118                           	opt callstack 0
  1119                           
  1120                           ; 1 bytes @ 0x24
  1121  000025                     	ds	1
  1122  000026                     ___flmul@grs:
  1123                           	opt callstack 0
  1124                           
  1125                           ; 4 bytes @ 0x25
  1126  000026                     	ds	4
  1127  00002A                     ___flmul@aexp:
  1128                           	opt callstack 0
  1129                           
  1130                           ; 1 bytes @ 0x29
  1131  00002A                     	ds	1
  1132  00002B                     ___flmul@bexp:
  1133                           	opt callstack 0
  1134                           
  1135                           ; 1 bytes @ 0x2A
  1136  00002B                     	ds	1
  1137  00002C                     ___flmul@prod:
  1138                           	opt callstack 0
  1139                           
  1140                           ; 4 bytes @ 0x2B
  1141  00002C                     	ds	4
  1142  000030                     ___flmul@temp:
  1143                           	opt callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x2F
  1146  000030                     	ds	2
  1147  000032                     ?___flsub:
  1148                           	opt callstack 0
  1149  000032                     ?_scalbnf:
  1150                           	opt callstack 0
  1151  000032                     ___flsub@b:
  1152                           	opt callstack 0
  1153  000032                     scalbnf@x:
  1154                           	opt callstack 0
  1155                           
  1156                           ; 4 bytes @ 0x31
  1157  000032                     	ds	4
  1158  000036                     scalbnf@n:
  1159                           	opt callstack 0
  1160  000036                     ___flsub@a:
  1161                           	opt callstack 0
  1162                           
  1163                           ; 4 bytes @ 0x35
  1164  000036                     	ds	2
  1165  000038                     ??_scalbnf:
  1166                           
  1167                           ; 1 bytes @ 0x37
  1168  000038                     	ds	2
  1169  00003A                     ?___fldiv:
  1170                           	opt callstack 0
  1171  00003A                     ___flge@ff1:
  1172                           	opt callstack 0
  1173  00003A                     ___fldiv@b:
  1174                           	opt callstack 0
  1175                           
  1176                           ; 4 bytes @ 0x39
  1177  00003A                     	ds	2
  1178  00003C                     scalbnf@u:
  1179                           	opt callstack 0
  1180                           
  1181                           ; 4 bytes @ 0x3B
  1182  00003C                     	ds	2
  1183  00003E                     ___flge@ff2:
  1184                           	opt callstack 0
  1185  00003E                     ___fldiv@a:
  1186                           	opt callstack 0
  1187                           
  1188                           ; 4 bytes @ 0x3D
  1189  00003E                     	ds	2
  1190  000040                     scalbnf@y:
  1191                           	opt callstack 0
  1192                           
  1193                           ; 4 bytes @ 0x3F
  1194  000040                     	ds	2
  1195  000042                     ??___fldiv:
  1196  000042                     ??___flge:
  1197                           
  1198                           ; 1 bytes @ 0x41
  1199  000042                     	ds	4
  1200  000046                     ?_sqrtf:
  1201                           	opt callstack 0
  1202  000046                     sqrtf@x:
  1203                           	opt callstack 0
  1204                           
  1205                           ; 4 bytes @ 0x45
  1206  000046                     	ds	4
  1207  00004A                     ??_sqrtf:
  1208                           
  1209                           ; 1 bytes @ 0x49
  1210  00004A                     	ds	5
  1211  00004F                     
  1212                           ; 1 bytes @ 0x4E
  1213 ;;
  1214 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1215 ;;
  1216 ;; *************** function _main *****************
  1217 ;; Defined at:
  1218 ;;		line 9 in file "main.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;		None
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;		None
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  1    wreg      void 
  1225 ;; Registers used:
  1226 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1234 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1235 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1236 ;;Total ram usage:        2 bytes
  1237 ;; Hardware stack levels required when called:   10
  1238 ;; This function calls:
  1239 ;;		_SYSTEM_Initialize
  1240 ;;		_state_clock
  1241 ;;		_state_mod_hour
  1242 ;;		_state_mod_minute
  1243 ;;		_state_mod_second
  1244 ;;		_state_stop_watch
  1245 ;; This function is called by:
  1246 ;;		Startup code after reset
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           	psect	text0
  1251  00625C                     __ptext0:
  1252                           	opt callstack 0
  1253  00625C                     _main:
  1254                           	opt callstack 21
  1255  00625C                     
  1256                           ;main.c: 10:     SYSTEM_Initialize();
  1257  00625C  EC9A  F033         	call	_SYSTEM_Initialize	;wreg free
  1258  006260  EF44  F031         	goto	l6368
  1259  006264                     l6354:
  1260                           
  1261                           ; BSR set to: 0
  1262  006264  ECDD  F02E         	call	_state_clock	;wreg free
  1263                           
  1264                           ;main.c: 14:                 break;
  1265  006268  EF44  F031         	goto	l6368
  1266  00626C                     l6356:
  1267                           
  1268                           ; BSR set to: 0
  1269  00626C  EC92  F02A         	call	_state_mod_hour	;wreg free
  1270                           
  1271                           ;main.c: 16:                 break;
  1272  006270  EF44  F031         	goto	l6368
  1273  006274                     l6358:
  1274                           
  1275                           ; BSR set to: 0
  1276  006274  EC52  F02B         	call	_state_mod_minute	;wreg free
  1277                           
  1278                           ;main.c: 18:                 break;
  1279  006278  EF44  F031         	goto	l6368
  1280  00627C                     l6360:
  1281                           
  1282                           ; BSR set to: 0
  1283  00627C  ECCB  F02C         	call	_state_mod_second	;wreg free
  1284                           
  1285                           ;main.c: 20:                 break;
  1286  006280  EF44  F031         	goto	l6368
  1287  006284                     l6362:
  1288                           
  1289                           ; BSR set to: 0
  1290  006284  EC6C  F027         	call	_state_stop_watch	;wreg free
  1291  006288                     l6368:
  1292  006288  5056               	movf	_state^0,w,c	;volatile
  1293  00628A  0100               	movlb	0	; () banked
  1294  00628C  6FAD               	movwf	??_main& (0+255),b
  1295  00628E  6BAE               	clrf	(??_main+1)& (0+255),b
  1296                           
  1297                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1298                           ; Switch size 1, requested type "simple"
  1299                           ; Number of cases is 1, Range of values is 0 to 0
  1300                           ; switch strategies available:
  1301                           ; Name         Instructions Cycles
  1302                           ; simple_byte            4     3 (average)
  1303                           ;	Chosen strategy is simple_byte
  1304  006290  51AE               	movf	(??_main+1)& (0+255),w,b
  1305  006292  0A00               	xorlw	0	; case 0
  1306  006294  B4D8               	btfsc	status,2,c
  1307  006296  EF4F  F031         	goto	l6474
  1308  00629A  EF32  F031         	goto	l6354
  1309  00629E                     l6474:
  1310                           
  1311                           ; BSR set to: 0
  1312                           ; Switch size 1, requested type "simple"
  1313                           ; Number of cases is 5, Range of values is 0 to 4
  1314                           ; switch strategies available:
  1315                           ; Name         Instructions Cycles
  1316                           ; simple_byte           16     9 (average)
  1317                           ;	Chosen strategy is simple_byte
  1318  00629E  51AD               	movf	??_main& (0+255),w,b
  1319  0062A0  0A00               	xorlw	0	; case 0
  1320  0062A2  B4D8               	btfsc	status,2,c
  1321  0062A4  EF32  F031         	goto	l6354
  1322  0062A8  0A01               	xorlw	1	; case 1
  1323  0062AA  B4D8               	btfsc	status,2,c
  1324  0062AC  EF36  F031         	goto	l6356
  1325  0062B0  0A03               	xorlw	3	; case 2
  1326  0062B2  B4D8               	btfsc	status,2,c
  1327  0062B4  EF3A  F031         	goto	l6358
  1328  0062B8  0A01               	xorlw	1	; case 3
  1329  0062BA  B4D8               	btfsc	status,2,c
  1330  0062BC  EF3E  F031         	goto	l6360
  1331  0062C0  0A07               	xorlw	7	; case 4
  1332  0062C2  B4D8               	btfsc	status,2,c
  1333  0062C4  EF42  F031         	goto	l6362
  1334  0062C8  EF32  F031         	goto	l6354
  1335  0062CC  EF07  F000         	goto	start
  1336  0062D0                     __end_of_main:
  1337                           	opt callstack 0
  1338                           
  1339 ;; *************** function _state_stop_watch *****************
  1340 ;; Defined at:
  1341 ;;		line 16 in file "State_Stop_Watch.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;		None
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;		None
  1346 ;; Return value:  Size  Location     Type
  1347 ;;                  1    wreg      void 
  1348 ;; Registers used:
  1349 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1357 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1358 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1359 ;;Total ram usage:        2 bytes
  1360 ;; Hardware stack levels used:    1
  1361 ;; Hardware stack levels required when called:    7
  1362 ;; This function calls:
  1363 ;;		_LCDMoveCursor
  1364 ;;		_LCDPutChar
  1365 ;;		_LCDPutInst
  1366 ;;		_LCDPutStr
  1367 ;;		___awdiv
  1368 ;;		___awmod
  1369 ;;		_disp_Clock_SW
  1370 ;; This function is called by:
  1371 ;;		_main
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375                           	psect	text1
  1376  004ED8                     __ptext1:
  1377                           	opt callstack 0
  1378  004ED8                     _state_stop_watch:
  1379                           	opt callstack 23
  1380  004ED8                     
  1381                           ;State_Stop_Watch.c: 17:     LCDPutInst(0x80);
  1382  004ED8  0E80               	movlw	128
  1383  004EDA  ECD3  F031         	call	_LCDPutInst
  1384  004EDE                     
  1385                           ;State_Stop_Watch.c: 18:     LCDPutStr("Stop W  RA5=Next");
  1386  004EDE  0E7D               	movlw	low STR_9
  1387  004EE0  6E10               	movwf	LCDPutStr@ptr^0,c
  1388  004EE2  0E10               	movlw	high STR_9
  1389  004EE4  6E11               	movwf	(LCDPutStr@ptr+1)^0,c
  1390  004EE6  ECEB  F032         	call	_LCDPutStr	;wreg free
  1391  004EEA                     
  1392                           ;State_Stop_Watch.c: 19:     disp_Clock_SW();
  1393  004EEA  EC5C  F030         	call	_disp_Clock_SW	;wreg free
  1394                           
  1395                           ;State_Stop_Watch.c: 20:     LCDPutStr("        ");
  1396  004EEE  0ED2               	movlw	low STR_10
  1397  004EF0  6E10               	movwf	LCDPutStr@ptr^0,c
  1398  004EF2  0E10               	movlw	high STR_10
  1399  004EF4  6E11               	movwf	(LCDPutStr@ptr+1)^0,c
  1400  004EF6  ECEB  F032         	call	_LCDPutStr	;wreg free
  1401                           
  1402                           ;State_Stop_Watch.c: 21:     while(state == STATE_STOP_WATCH) {
  1403  004EFA  EF94  F028         	goto	l5458
  1404  004EFE                     l5390:
  1405                           
  1406                           ;State_Stop_Watch.c: 22:         if(buttonRA5) {
  1407  004EFE  0100               	movlb	0	; () banked
  1408  004F00  51CE               	movf	_buttonRA5& (0+255),w,b
  1409  004F02  B4D8               	btfsc	status,2,c
  1410  004F04  EF86  F027         	goto	u4881
  1411  004F08  EF88  F027         	goto	u4880
  1412  004F0C                     u4881:
  1413  004F0C  EF7F  F028         	goto	l5456
  1414  004F10                     u4880:
  1415  004F10                     
  1416                           ; BSR set to: 0
  1417                           ;State_Stop_Watch.c: 23:             state = STATE_CLOCK;
  1418  004F10  0E00               	movlw	0
  1419  004F12  6E56               	movwf	_state^0,c	;volatile
  1420                           
  1421                           ;State_Stop_Watch.c: 24:             buttonRA5 = 0;
  1422  004F14  0E00               	movlw	0
  1423  004F16  6FCE               	movwf	_buttonRA5& (0+255),b
  1424                           
  1425                           ;State_Stop_Watch.c: 25:             state_sw = 0;
  1426  004F18  0E00               	movlw	0
  1427  004F1A  6FC7               	movwf	_state_sw& (0+255),b
  1428                           
  1429                           ;State_Stop_Watch.c: 26:             hr_sw = 0;
  1430  004F1C  0E00               	movlw	0
  1431  004F1E  6FC8               	movwf	_hr_sw& (0+255),b	;volatile
  1432                           
  1433                           ;State_Stop_Watch.c: 27:             min_sw = 0;
  1434  004F20  0E00               	movlw	0
  1435  004F22  6E51               	movwf	_min_sw^0,c	;volatile
  1436                           
  1437                           ;State_Stop_Watch.c: 28:             sec_sw = 0;
  1438  004F24  0E00               	movlw	0
  1439  004F26  6E50               	movwf	_sec_sw^0,c	;volatile
  1440                           
  1441                           ;State_Stop_Watch.c: 29:             ms_sw = 0;
  1442  004F28  0E00               	movlw	0
  1443  004F2A  6E4F               	movwf	_ms_sw^0,c	;volatile
  1444  004F2C  EF7F  F028         	goto	l5456
  1445  004F30                     l5394:
  1446                           
  1447                           ; BSR set to: 0
  1448                           ;State_Stop_Watch.c: 33:                 if(buttonRB0) {
  1449  004F30  51CD               	movf	_buttonRB0& (0+255),w,b
  1450  004F32  B4D8               	btfsc	status,2,c
  1451  004F34  EF9E  F027         	goto	u4891
  1452  004F38  EFA0  F027         	goto	u4890
  1453  004F3C                     u4891:
  1454  004F3C  EF94  F028         	goto	l5458
  1455  004F40                     u4890:
  1456  004F40                     
  1457                           ; BSR set to: 0
  1458                           ;State_Stop_Watch.c: 34:                     buttonRB0 = 0;
  1459  004F40  0E00               	movlw	0
  1460  004F42  6FCD               	movwf	_buttonRB0& (0+255),b
  1461                           
  1462                           ;State_Stop_Watch.c: 35:                     state_sw = 1;
  1463  004F44  0E01               	movlw	1
  1464  004F46  6FC7               	movwf	_state_sw& (0+255),b
  1465  004F48  EF94  F028         	goto	l5458
  1466  004F4C                     l5398:
  1467                           
  1468                           ; BSR set to: 0
  1469                           ;State_Stop_Watch.c: 39:                 if(buttonRB0) {
  1470  004F4C  51CD               	movf	_buttonRB0& (0+255),w,b
  1471  004F4E  B4D8               	btfsc	status,2,c
  1472  004F50  EFAC  F027         	goto	u4901
  1473  004F54  EFAE  F027         	goto	u4900
  1474  004F58                     u4901:
  1475  004F58  EFB2  F027         	goto	l589
  1476  004F5C                     u4900:
  1477  004F5C                     
  1478                           ; BSR set to: 0
  1479                           ;State_Stop_Watch.c: 40:                     buttonRB0 = 0;
  1480  004F5C  0E00               	movlw	0
  1481  004F5E  6FCD               	movwf	_buttonRB0& (0+255),b
  1482                           
  1483                           ;State_Stop_Watch.c: 41:                     state_sw = 0;
  1484  004F60  0E00               	movlw	0
  1485  004F62  6FC7               	movwf	_state_sw& (0+255),b
  1486  004F64                     l589:
  1487                           
  1488                           ; BSR set to: 0
  1489                           ;State_Stop_Watch.c: 43:                 if(ms_flag) {
  1490  004F64  51CA               	movf	_ms_flag& (0+255),w,b
  1491  004F66  B4D8               	btfsc	status,2,c
  1492  004F68  EFB8  F027         	goto	u4911
  1493  004F6C  EFBA  F027         	goto	u4910
  1494  004F70                     u4911:
  1495  004F70  EF94  F028         	goto	l5458
  1496  004F74                     u4910:
  1497  004F74                     
  1498                           ; BSR set to: 0
  1499                           ;State_Stop_Watch.c: 44:                     ms_sw++;
  1500  004F74  2A4F               	incf	_ms_sw^0,f,c	;volatile
  1501  004F76                     
  1502                           ; BSR set to: 0
  1503                           ;State_Stop_Watch.c: 45:                     ms_flag = 0;
  1504  004F76  0E00               	movlw	0
  1505  004F78  6FCA               	movwf	_ms_flag& (0+255),b
  1506  004F7A                     
  1507                           ; BSR set to: 0
  1508                           ;State_Stop_Watch.c: 46:                     LCDMoveCursor(1, 6);
  1509  004F7A  0E06               	movlw	6
  1510  004F7C  6E10               	movwf	LCDMoveCursor@pos^0,c
  1511  004F7E  0E01               	movlw	1
  1512  004F80  EC0A  F033         	call	_LCDMoveCursor
  1513  004F84                     
  1514                           ;State_Stop_Watch.c: 47:                     LCDPutChar(ms_sw%10+'0');
  1515  004F84  C04F  F009         	movff	_ms_sw,___awmod@dividend	;volatile
  1516  004F88  6A0A               	clrf	(___awmod@dividend+1)^0,c
  1517  004F8A  0E00               	movlw	0
  1518  004F8C  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1519  004F8E  0E0A               	movlw	10
  1520  004F90  6E0B               	movwf	___awmod@divisor^0,c
  1521  004F92  EC04  F030         	call	___awmod	;wreg free
  1522  004F96  5009               	movf	?___awmod^0,w,c
  1523  004F98  0F30               	addlw	48
  1524  004F9A  ECA0  F031         	call	_LCDPutChar
  1525  004F9E                     
  1526                           ;State_Stop_Watch.c: 48:                     if(ms_sw > 9) {
  1527  004F9E  0E09               	movlw	9
  1528  004FA0  644F               	cpfsgt	_ms_sw^0,c	;volatile
  1529  004FA2  EFD5  F027         	goto	u4921
  1530  004FA6  EFD7  F027         	goto	u4920
  1531  004FAA                     u4921:
  1532  004FAA  EF0B  F028         	goto	l5426
  1533  004FAE                     u4920:
  1534  004FAE                     
  1535                           ;State_Stop_Watch.c: 49:                         ms_sw = 0;
  1536  004FAE  0E00               	movlw	0
  1537  004FB0  6E4F               	movwf	_ms_sw^0,c	;volatile
  1538  004FB2                     
  1539                           ;State_Stop_Watch.c: 50:                         sec_sw++;
  1540  004FB2  2A50               	incf	_sec_sw^0,f,c	;volatile
  1541  004FB4                     
  1542                           ;State_Stop_Watch.c: 51:                         LCDMoveCursor(1, 6);
  1543  004FB4  0E06               	movlw	6
  1544  004FB6  6E10               	movwf	LCDMoveCursor@pos^0,c
  1545  004FB8  0E01               	movlw	1
  1546  004FBA  EC0A  F033         	call	_LCDMoveCursor
  1547  004FBE                     
  1548                           ;State_Stop_Watch.c: 52:                         LCDPutChar(ms_sw%10+'0');
  1549  004FBE  C04F  F009         	movff	_ms_sw,___awmod@dividend	;volatile
  1550  004FC2  6A0A               	clrf	(___awmod@dividend+1)^0,c
  1551  004FC4  0E00               	movlw	0
  1552  004FC6  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1553  004FC8  0E0A               	movlw	10
  1554  004FCA  6E0B               	movwf	___awmod@divisor^0,c
  1555  004FCC  EC04  F030         	call	___awmod	;wreg free
  1556  004FD0  5009               	movf	?___awmod^0,w,c
  1557  004FD2  0F30               	addlw	48
  1558  004FD4  ECA0  F031         	call	_LCDPutChar
  1559  004FD8                     
  1560                           ;State_Stop_Watch.c: 53:                         LCDMoveCursor(1, 3);
  1561  004FD8  0E03               	movlw	3
  1562  004FDA  6E10               	movwf	LCDMoveCursor@pos^0,c
  1563  004FDC  0E01               	movlw	1
  1564  004FDE  EC0A  F033         	call	_LCDMoveCursor
  1565  004FE2                     
  1566                           ;State_Stop_Watch.c: 54:                         LCDPutChar(sec_sw/10+'0');
  1567  004FE2  C050  F009         	movff	_sec_sw,___awdiv@dividend	;volatile
  1568  004FE6  6A0A               	clrf	(___awdiv@dividend+1)^0,c
  1569  004FE8  0E00               	movlw	0
  1570  004FEA  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  1571  004FEC  0E0A               	movlw	10
  1572  004FEE  6E0B               	movwf	___awdiv@divisor^0,c
  1573  004FF0  EC44  F02F         	call	___awdiv	;wreg free
  1574  004FF4  5009               	movf	?___awdiv^0,w,c
  1575  004FF6  0F30               	addlw	48
  1576  004FF8  ECA0  F031         	call	_LCDPutChar
  1577  004FFC                     
  1578                           ;State_Stop_Watch.c: 55:                         LCDPutChar(sec_sw%10+'0');
  1579  004FFC  C050  F009         	movff	_sec_sw,___awmod@dividend	;volatile
  1580  005000  6A0A               	clrf	(___awmod@dividend+1)^0,c
  1581  005002  0E00               	movlw	0
  1582  005004  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1583  005006  0E0A               	movlw	10
  1584  005008  6E0B               	movwf	___awmod@divisor^0,c
  1585  00500A  EC04  F030         	call	___awmod	;wreg free
  1586  00500E  5009               	movf	?___awmod^0,w,c
  1587  005010  0F30               	addlw	48
  1588  005012  ECA0  F031         	call	_LCDPutChar
  1589  005016                     l5426:
  1590                           
  1591                           ;State_Stop_Watch.c: 57:                     if(sec_sw > 59) {
  1592  005016  0E3B               	movlw	59
  1593  005018  6450               	cpfsgt	_sec_sw^0,c	;volatile
  1594  00501A  EF11  F028         	goto	u4931
  1595  00501E  EF13  F028         	goto	u4930
  1596  005022                     u4931:
  1597  005022  EF54  F028         	goto	l5444
  1598  005026                     u4930:
  1599  005026                     
  1600                           ;State_Stop_Watch.c: 58:                         sec_sw = 0;
  1601  005026  0E00               	movlw	0
  1602  005028  6E50               	movwf	_sec_sw^0,c	;volatile
  1603  00502A                     
  1604                           ;State_Stop_Watch.c: 59:                         min_sw++;
  1605  00502A  2A51               	incf	_min_sw^0,f,c	;volatile
  1606  00502C                     
  1607                           ;State_Stop_Watch.c: 60:                         LCDMoveCursor(1, 3);
  1608  00502C  0E03               	movlw	3
  1609  00502E  6E10               	movwf	LCDMoveCursor@pos^0,c
  1610  005030  0E01               	movlw	1
  1611  005032  EC0A  F033         	call	_LCDMoveCursor
  1612  005036                     
  1613                           ;State_Stop_Watch.c: 61:                         LCDPutChar(sec_sw/10+'0');
  1614  005036  C050  F009         	movff	_sec_sw,___awdiv@dividend	;volatile
  1615  00503A  6A0A               	clrf	(___awdiv@dividend+1)^0,c
  1616  00503C  0E00               	movlw	0
  1617  00503E  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  1618  005040  0E0A               	movlw	10
  1619  005042  6E0B               	movwf	___awdiv@divisor^0,c
  1620  005044  EC44  F02F         	call	___awdiv	;wreg free
  1621  005048  5009               	movf	?___awdiv^0,w,c
  1622  00504A  0F30               	addlw	48
  1623  00504C  ECA0  F031         	call	_LCDPutChar
  1624  005050                     
  1625                           ;State_Stop_Watch.c: 62:                         LCDPutChar(sec_sw%10+'0');
  1626  005050  C050  F009         	movff	_sec_sw,___awmod@dividend	;volatile
  1627  005054  6A0A               	clrf	(___awmod@dividend+1)^0,c
  1628  005056  0E00               	movlw	0
  1629  005058  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1630  00505A  0E0A               	movlw	10
  1631  00505C  6E0B               	movwf	___awmod@divisor^0,c
  1632  00505E  EC04  F030         	call	___awmod	;wreg free
  1633  005062  5009               	movf	?___awmod^0,w,c
  1634  005064  0F30               	addlw	48
  1635  005066  ECA0  F031         	call	_LCDPutChar
  1636  00506A                     
  1637                           ;State_Stop_Watch.c: 63:                         LCDMoveCursor(1, 0);
  1638  00506A  0E00               	movlw	0
  1639  00506C  6E10               	movwf	LCDMoveCursor@pos^0,c
  1640  00506E  0E01               	movlw	1
  1641  005070  EC0A  F033         	call	_LCDMoveCursor
  1642  005074                     
  1643                           ;State_Stop_Watch.c: 64:                         LCDPutChar(min_sw/10+'0');
  1644  005074  C051  F009         	movff	_min_sw,___awdiv@dividend	;volatile
  1645  005078  6A0A               	clrf	(___awdiv@dividend+1)^0,c
  1646  00507A  0E00               	movlw	0
  1647  00507C  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  1648  00507E  0E0A               	movlw	10
  1649  005080  6E0B               	movwf	___awdiv@divisor^0,c
  1650  005082  EC44  F02F         	call	___awdiv	;wreg free
  1651  005086  5009               	movf	?___awdiv^0,w,c
  1652  005088  0F30               	addlw	48
  1653  00508A  ECA0  F031         	call	_LCDPutChar
  1654  00508E                     
  1655                           ;State_Stop_Watch.c: 65:                         LCDPutChar(min_sw%10+'0');
  1656  00508E  C051  F009         	movff	_min_sw,___awmod@dividend	;volatile
  1657  005092  6A0A               	clrf	(___awmod@dividend+1)^0,c
  1658  005094  0E00               	movlw	0
  1659  005096  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1660  005098  0E0A               	movlw	10
  1661  00509A  6E0B               	movwf	___awmod@divisor^0,c
  1662  00509C  EC04  F030         	call	___awmod	;wreg free
  1663  0050A0  5009               	movf	?___awmod^0,w,c
  1664  0050A2  0F30               	addlw	48
  1665  0050A4  ECA0  F031         	call	_LCDPutChar
  1666  0050A8                     l5444:
  1667                           
  1668                           ;State_Stop_Watch.c: 67:                     if(min_sw > 59) {
  1669  0050A8  0E3B               	movlw	59
  1670  0050AA  6451               	cpfsgt	_min_sw^0,c	;volatile
  1671  0050AC  EF5A  F028         	goto	u4941
  1672  0050B0  EF5C  F028         	goto	u4940
  1673  0050B4                     u4941:
  1674  0050B4  EF94  F028         	goto	l587
  1675  0050B8                     u4940:
  1676  0050B8                     
  1677                           ;State_Stop_Watch.c: 68:                         min_sw = 0;
  1678  0050B8  0E00               	movlw	0
  1679  0050BA  6E51               	movwf	_min_sw^0,c	;volatile
  1680  0050BC                     
  1681                           ;State_Stop_Watch.c: 69:                         LCDMoveCursor(1, 0);
  1682  0050BC  0E00               	movlw	0
  1683  0050BE  6E10               	movwf	LCDMoveCursor@pos^0,c
  1684  0050C0  0E01               	movlw	1
  1685  0050C2  EC0A  F033         	call	_LCDMoveCursor
  1686  0050C6                     
  1687                           ;State_Stop_Watch.c: 70:                         LCDPutChar(min_sw/10+'0');
  1688  0050C6  C051  F009         	movff	_min_sw,___awdiv@dividend	;volatile
  1689  0050CA  6A0A               	clrf	(___awdiv@dividend+1)^0,c
  1690  0050CC  0E00               	movlw	0
  1691  0050CE  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  1692  0050D0  0E0A               	movlw	10
  1693  0050D2  6E0B               	movwf	___awdiv@divisor^0,c
  1694  0050D4  EC44  F02F         	call	___awdiv	;wreg free
  1695  0050D8  5009               	movf	?___awdiv^0,w,c
  1696  0050DA  0F30               	addlw	48
  1697  0050DC  ECA0  F031         	call	_LCDPutChar
  1698  0050E0                     
  1699                           ;State_Stop_Watch.c: 71:                         LCDPutChar(min_sw%10+'0');
  1700  0050E0  C051  F009         	movff	_min_sw,___awmod@dividend	;volatile
  1701  0050E4  6A0A               	clrf	(___awmod@dividend+1)^0,c
  1702  0050E6  0E00               	movlw	0
  1703  0050E8  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1704  0050EA  0E0A               	movlw	10
  1705  0050EC  6E0B               	movwf	___awmod@divisor^0,c
  1706  0050EE  EC04  F030         	call	___awmod	;wreg free
  1707  0050F2  5009               	movf	?___awmod^0,w,c
  1708  0050F4  0F30               	addlw	48
  1709  0050F6  ECA0  F031         	call	_LCDPutChar
  1710  0050FA  EF94  F028         	goto	l5458
  1711  0050FE                     l5456:
  1712                           
  1713                           ; BSR set to: 0
  1714  0050FE  51C7               	movf	_state_sw& (0+255),w,b
  1715  005100  6E15               	movwf	??_state_stop_watch^0,c
  1716  005102  6A16               	clrf	(??_state_stop_watch+1)^0,c
  1717                           
  1718                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1719                           ; Switch size 1, requested type "simple"
  1720                           ; Number of cases is 1, Range of values is 0 to 0
  1721                           ; switch strategies available:
  1722                           ; Name         Instructions Cycles
  1723                           ; simple_byte            4     3 (average)
  1724                           ;	Chosen strategy is simple_byte
  1725  005104  5016               	movf	(??_state_stop_watch+1)^0,w,c
  1726  005106  0A00               	xorlw	0	; case 0
  1727  005108  B4D8               	btfsc	status,2,c
  1728  00510A  EF89  F028         	goto	l6476
  1729  00510E  EF94  F028         	goto	l5458
  1730  005112                     l6476:
  1731                           
  1732                           ; BSR set to: 0
  1733                           ; Switch size 1, requested type "simple"
  1734                           ; Number of cases is 2, Range of values is 0 to 1
  1735                           ; switch strategies available:
  1736                           ; Name         Instructions Cycles
  1737                           ; simple_byte            7     4 (average)
  1738                           ;	Chosen strategy is simple_byte
  1739  005112  5015               	movf	??_state_stop_watch^0,w,c
  1740  005114  0A00               	xorlw	0	; case 0
  1741  005116  B4D8               	btfsc	status,2,c
  1742  005118  EF98  F027         	goto	l5394
  1743  00511C  0A01               	xorlw	1	; case 1
  1744  00511E  B4D8               	btfsc	status,2,c
  1745  005120  EFA6  F027         	goto	l5398
  1746  005124  EF94  F028         	goto	l5458
  1747  005128                     l587:
  1748  005128                     l5458:
  1749                           
  1750                           ;State_Stop_Watch.c: 21:     while(state == STATE_STOP_WATCH) {
  1751  005128  0E04               	movlw	4
  1752  00512A  1856               	xorwf	_state^0,w,c	;volatile
  1753  00512C  B4D8               	btfsc	status,2,c
  1754  00512E  EF9B  F028         	goto	u4951
  1755  005132  EF9D  F028         	goto	u4950
  1756  005136                     u4951:
  1757  005136  EF7F  F027         	goto	l5390
  1758  00513A                     u4950:
  1759  00513A  0012               	return		;funcret
  1760  00513C                     __end_of_state_stop_watch:
  1761                           	opt callstack 0
  1762                           
  1763 ;; *************** function _disp_Clock_SW *****************
  1764 ;; Defined at:
  1765 ;;		line 4 in file "State_Stop_Watch.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;		None
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;		None
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  1    wreg      void 
  1772 ;; Registers used:
  1773 ;;		wreg, status,2, status,0, cstack
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1783 ;;Total ram usage:        0 bytes
  1784 ;; Hardware stack levels used:    1
  1785 ;; Hardware stack levels required when called:    6
  1786 ;; This function calls:
  1787 ;;		_LCDPutChar
  1788 ;;		_LCDPutInst
  1789 ;;		___awdiv
  1790 ;;		___awmod
  1791 ;; This function is called by:
  1792 ;;		_state_stop_watch
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           	psect	text2
  1797  0060B8                     __ptext2:
  1798                           	opt callstack 0
  1799  0060B8                     _disp_Clock_SW:
  1800                           	opt callstack 23
  1801  0060B8                     
  1802                           ;State_Stop_Watch.c: 6:     LCDPutInst(0xC0);
  1803  0060B8  0EC0               	movlw	192
  1804  0060BA  ECD3  F031         	call	_LCDPutInst
  1805                           
  1806                           ;State_Stop_Watch.c: 7:     LCDPutChar(min_sw/10+'0');
  1807  0060BE  C051  F009         	movff	_min_sw,___awdiv@dividend	;volatile
  1808  0060C2  6A0A               	clrf	(___awdiv@dividend+1)^0,c
  1809  0060C4  0E00               	movlw	0
  1810  0060C6  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  1811  0060C8  0E0A               	movlw	10
  1812  0060CA  6E0B               	movwf	___awdiv@divisor^0,c
  1813  0060CC  EC44  F02F         	call	___awdiv	;wreg free
  1814  0060D0  5009               	movf	?___awdiv^0,w,c
  1815  0060D2  0F30               	addlw	48
  1816  0060D4  ECA0  F031         	call	_LCDPutChar
  1817                           
  1818                           ;State_Stop_Watch.c: 8:     LCDPutChar(min_sw%10+'0');
  1819  0060D8  C051  F009         	movff	_min_sw,___awmod@dividend	;volatile
  1820  0060DC  6A0A               	clrf	(___awmod@dividend+1)^0,c
  1821  0060DE  0E00               	movlw	0
  1822  0060E0  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1823  0060E2  0E0A               	movlw	10
  1824  0060E4  6E0B               	movwf	___awmod@divisor^0,c
  1825  0060E6  EC04  F030         	call	___awmod	;wreg free
  1826  0060EA  5009               	movf	?___awmod^0,w,c
  1827  0060EC  0F30               	addlw	48
  1828  0060EE  ECA0  F031         	call	_LCDPutChar
  1829                           
  1830                           ;State_Stop_Watch.c: 9:     LCDPutChar(':');
  1831  0060F2  0E3A               	movlw	58
  1832  0060F4  ECA0  F031         	call	_LCDPutChar
  1833                           
  1834                           ;State_Stop_Watch.c: 10:     LCDPutChar(sec_sw/10+'0');
  1835  0060F8  C050  F009         	movff	_sec_sw,___awdiv@dividend	;volatile
  1836  0060FC  6A0A               	clrf	(___awdiv@dividend+1)^0,c
  1837  0060FE  0E00               	movlw	0
  1838  006100  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  1839  006102  0E0A               	movlw	10
  1840  006104  6E0B               	movwf	___awdiv@divisor^0,c
  1841  006106  EC44  F02F         	call	___awdiv	;wreg free
  1842  00610A  5009               	movf	?___awdiv^0,w,c
  1843  00610C  0F30               	addlw	48
  1844  00610E  ECA0  F031         	call	_LCDPutChar
  1845                           
  1846                           ;State_Stop_Watch.c: 11:     LCDPutChar(sec_sw%10+'0');
  1847  006112  C050  F009         	movff	_sec_sw,___awmod@dividend	;volatile
  1848  006116  6A0A               	clrf	(___awmod@dividend+1)^0,c
  1849  006118  0E00               	movlw	0
  1850  00611A  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1851  00611C  0E0A               	movlw	10
  1852  00611E  6E0B               	movwf	___awmod@divisor^0,c
  1853  006120  EC04  F030         	call	___awmod	;wreg free
  1854  006124  5009               	movf	?___awmod^0,w,c
  1855  006126  0F30               	addlw	48
  1856  006128  ECA0  F031         	call	_LCDPutChar
  1857                           
  1858                           ;State_Stop_Watch.c: 12:     LCDPutChar(':');
  1859  00612C  0E3A               	movlw	58
  1860  00612E  ECA0  F031         	call	_LCDPutChar
  1861                           
  1862                           ;State_Stop_Watch.c: 13:     LCDPutChar(ms_sw%10+'0');
  1863  006132  C04F  F009         	movff	_ms_sw,___awmod@dividend	;volatile
  1864  006136  6A0A               	clrf	(___awmod@dividend+1)^0,c
  1865  006138  0E00               	movlw	0
  1866  00613A  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1867  00613C  0E0A               	movlw	10
  1868  00613E  6E0B               	movwf	___awmod@divisor^0,c
  1869  006140  EC04  F030         	call	___awmod	;wreg free
  1870  006144  5009               	movf	?___awmod^0,w,c
  1871  006146  0F30               	addlw	48
  1872  006148  ECA0  F031         	call	_LCDPutChar
  1873  00614C  0012               	return		;funcret
  1874  00614E                     __end_of_disp_Clock_SW:
  1875                           	opt callstack 0
  1876                           
  1877 ;; *************** function _state_mod_second *****************
  1878 ;; Defined at:
  1879 ;;		line 80 in file "State_Mod.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;		None
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;		None
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  1    wreg      void 
  1886 ;; Registers used:
  1887 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1894 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1896 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1897 ;;Total ram usage:        2 bytes
  1898 ;; Hardware stack levels used:    1
  1899 ;; Hardware stack levels required when called:    9
  1900 ;; This function calls:
  1901 ;;		_LCDMoveCursor
  1902 ;;		_LCDPutChar
  1903 ;;		_LCDPutInst
  1904 ;;		_LCDPutStr
  1905 ;;		___awdiv
  1906 ;;		___awmod
  1907 ;;		_disp_Clock
  1908 ;;		_disp_Clock_Hide
  1909 ;;		_handle_Time
  1910 ;; This function is called by:
  1911 ;;		_main
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           	psect	text3
  1916  005996                     __ptext3:
  1917                           	opt callstack 0
  1918  005996                     _state_mod_second:
  1919                           	opt callstack 21
  1920  005996                     
  1921                           ;State_Mod.c: 81:     LCDPutInst(0x80);
  1922  005996  0E80               	movlw	128
  1923  005998  ECD3  F031         	call	_LCDPutInst
  1924  00599C                     
  1925                           ;State_Mod.c: 82:     LCDPutStr("Mod S   RA5=Next");
  1926  00599C  0EB0               	movlw	low STR_8
  1927  00599E  6E10               	movwf	LCDPutStr@ptr^0,c
  1928  0059A0  0E10               	movlw	high STR_8
  1929  0059A2  6E11               	movwf	(LCDPutStr@ptr+1)^0,c
  1930  0059A4  ECEB  F032         	call	_LCDPutStr	;wreg free
  1931  0059A8                     
  1932                           ;State_Mod.c: 83:     disp_Clock();
  1933  0059A8  ECA6  F02F         	call	_disp_Clock	;wreg free
  1934                           
  1935                           ;State_Mod.c: 84:     while(state == STATE_MOD_SECOND) {
  1936  0059AC  EF5F  F02D         	goto	l5382
  1937  0059B0                     l5340:
  1938                           
  1939                           ;State_Mod.c: 85:         if(buttonRA5) {
  1940  0059B0  0100               	movlb	0	; () banked
  1941  0059B2  51CE               	movf	_buttonRA5& (0+255),w,b
  1942  0059B4  B4D8               	btfsc	status,2,c
  1943  0059B6  EFDF  F02C         	goto	u4821
  1944  0059BA  EFE1  F02C         	goto	u4820
  1945  0059BE                     u4821:
  1946  0059BE  EFE5  F02C         	goto	l520
  1947  0059C2                     u4820:
  1948  0059C2                     
  1949                           ; BSR set to: 0
  1950                           ;State_Mod.c: 86:             state = STATE_STOP_WATCH;
  1951  0059C2  0E04               	movlw	4
  1952  0059C4  6E56               	movwf	_state^0,c	;volatile
  1953                           
  1954                           ;State_Mod.c: 87:             buttonRA5 = 0;
  1955  0059C6  0E00               	movlw	0
  1956  0059C8  6FCE               	movwf	_buttonRA5& (0+255),b
  1957  0059CA                     l520:
  1958                           
  1959                           ; BSR set to: 0
  1960                           ;State_Mod.c: 89:         if(second_flag) {
  1961  0059CA  51CC               	movf	_second_flag& (0+255),w,b
  1962  0059CC  B4D8               	btfsc	status,2,c
  1963  0059CE  EFEB  F02C         	goto	u4831
  1964  0059D2  EFED  F02C         	goto	u4830
  1965  0059D6                     u4831:
  1966  0059D6  EF24  F02D         	goto	l521
  1967  0059DA                     u4830:
  1968  0059DA                     
  1969                           ; BSR set to: 0
  1970                           ;State_Mod.c: 90:             second_flag = 0;
  1971  0059DA  0E00               	movlw	0
  1972  0059DC  6FCC               	movwf	_second_flag& (0+255),b
  1973  0059DE                     
  1974                           ; BSR set to: 0
  1975                           ;State_Mod.c: 91:             sec++;
  1976  0059DE  2A52               	incf	_sec^0,f,c	;volatile
  1977  0059E0                     
  1978                           ; BSR set to: 0
  1979                           ;State_Mod.c: 92:             LCDMoveCursor(1, 6);
  1980  0059E0  0E06               	movlw	6
  1981  0059E2  6E10               	movwf	LCDMoveCursor@pos^0,c
  1982  0059E4  0E01               	movlw	1
  1983  0059E6  EC0A  F033         	call	_LCDMoveCursor
  1984  0059EA                     
  1985                           ;State_Mod.c: 93:             LCDPutChar(sec/10+'0');
  1986  0059EA  C052  F009         	movff	_sec,___awdiv@dividend	;volatile
  1987  0059EE  6A0A               	clrf	(___awdiv@dividend+1)^0,c
  1988  0059F0  0E00               	movlw	0
  1989  0059F2  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  1990  0059F4  0E0A               	movlw	10
  1991  0059F6  6E0B               	movwf	___awdiv@divisor^0,c
  1992  0059F8  EC44  F02F         	call	___awdiv	;wreg free
  1993  0059FC  5009               	movf	?___awdiv^0,w,c
  1994  0059FE  0F30               	addlw	48
  1995  005A00  ECA0  F031         	call	_LCDPutChar
  1996  005A04                     
  1997                           ;State_Mod.c: 94:             LCDPutChar(sec%10+'0');
  1998  005A04  C052  F009         	movff	_sec,___awmod@dividend	;volatile
  1999  005A08  6A0A               	clrf	(___awmod@dividend+1)^0,c
  2000  005A0A  0E00               	movlw	0
  2001  005A0C  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2002  005A0E  0E0A               	movlw	10
  2003  005A10  6E0B               	movwf	___awmod@divisor^0,c
  2004  005A12  EC04  F030         	call	___awmod	;wreg free
  2005  005A16  5009               	movf	?___awmod^0,w,c
  2006  005A18  0F30               	addlw	48
  2007  005A1A  ECA0  F031         	call	_LCDPutChar
  2008  005A1E                     
  2009                           ;State_Mod.c: 95:             handle_Time();
  2010  005A1E  EC0F  F02C         	call	_handle_Time	;wreg free
  2011  005A22                     
  2012                           ;State_Mod.c: 96:             ledValue = (ledValue == 0) ? 255 : 0;
  2013  005A22  5055               	movf	_ledValue^0,w,c
  2014  005A24  B4D8               	btfsc	status,2,c
  2015  005A26  EF17  F02D         	goto	u4841
  2016  005A2A  EF19  F02D         	goto	u4840
  2017  005A2E                     u4841:
  2018  005A2E  EF1F  F02D         	goto	l5360
  2019  005A32                     u4840:
  2020  005A32  0E00               	movlw	0
  2021  005A34  6E1D               	movwf	(_state_mod_second$769+1)^0,c
  2022  005A36  0E00               	movlw	0
  2023  005A38  6E1C               	movwf	_state_mod_second$769^0,c
  2024  005A3A  EF22  F02D         	goto	l5362
  2025  005A3E                     l5360:
  2026  005A3E  0E00               	movlw	0
  2027  005A40  6E1D               	movwf	(_state_mod_second$769+1)^0,c
  2028  005A42  681C               	setf	_state_mod_second$769^0,c
  2029  005A44                     l5362:
  2030  005A44  C01C  F055         	movff	_state_mod_second$769,_ledValue
  2031  005A48                     l521:
  2032                           
  2033                           ;State_Mod.c: 98:         if(buttonRB0) {
  2034  005A48  0100               	movlb	0	; () banked
  2035  005A4A  51CD               	movf	_buttonRB0& (0+255),w,b
  2036  005A4C  B4D8               	btfsc	status,2,c
  2037  005A4E  EF2B  F02D         	goto	u4851
  2038  005A52  EF2D  F02D         	goto	u4850
  2039  005A56                     u4851:
  2040  005A56  EF51  F02D         	goto	l5376
  2041  005A5A                     u4850:
  2042  005A5A                     
  2043                           ; BSR set to: 0
  2044                           ;State_Mod.c: 99:             buttonRB0 = 0;
  2045  005A5A  0E00               	movlw	0
  2046  005A5C  6FCD               	movwf	_buttonRB0& (0+255),b
  2047  005A5E                     
  2048                           ; BSR set to: 0
  2049                           ;State_Mod.c: 100:             sec++;
  2050  005A5E  2A52               	incf	_sec^0,f,c	;volatile
  2051  005A60                     
  2052                           ; BSR set to: 0
  2053                           ;State_Mod.c: 101:             LCDMoveCursor(1, 6);
  2054  005A60  0E06               	movlw	6
  2055  005A62  6E10               	movwf	LCDMoveCursor@pos^0,c
  2056  005A64  0E01               	movlw	1
  2057  005A66  EC0A  F033         	call	_LCDMoveCursor
  2058  005A6A                     
  2059                           ;State_Mod.c: 102:             LCDPutChar(sec/10+'0');
  2060  005A6A  C052  F009         	movff	_sec,___awdiv@dividend	;volatile
  2061  005A6E  6A0A               	clrf	(___awdiv@dividend+1)^0,c
  2062  005A70  0E00               	movlw	0
  2063  005A72  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  2064  005A74  0E0A               	movlw	10
  2065  005A76  6E0B               	movwf	___awdiv@divisor^0,c
  2066  005A78  EC44  F02F         	call	___awdiv	;wreg free
  2067  005A7C  5009               	movf	?___awdiv^0,w,c
  2068  005A7E  0F30               	addlw	48
  2069  005A80  ECA0  F031         	call	_LCDPutChar
  2070  005A84                     
  2071                           ;State_Mod.c: 103:             LCDPutChar(sec%10+'0');
  2072  005A84  C052  F009         	movff	_sec,___awmod@dividend	;volatile
  2073  005A88  6A0A               	clrf	(___awmod@dividend+1)^0,c
  2074  005A8A  0E00               	movlw	0
  2075  005A8C  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2076  005A8E  0E0A               	movlw	10
  2077  005A90  6E0B               	movwf	___awmod@divisor^0,c
  2078  005A92  EC04  F030         	call	___awmod	;wreg free
  2079  005A96  5009               	movf	?___awmod^0,w,c
  2080  005A98  0F30               	addlw	48
  2081  005A9A  ECA0  F031         	call	_LCDPutChar
  2082  005A9E                     
  2083                           ;State_Mod.c: 104:             handle_Time();
  2084  005A9E  EC0F  F02C         	call	_handle_Time	;wreg free
  2085  005AA2                     l5376:
  2086                           
  2087                           ;State_Mod.c: 106:         if(hide_flag) {
  2088  005AA2  0100               	movlb	0	; () banked
  2089  005AA4  51CB               	movf	_hide_flag& (0+255),w,b
  2090  005AA6  B4D8               	btfsc	status,2,c
  2091  005AA8  EF58  F02D         	goto	u4861
  2092  005AAC  EF5A  F02D         	goto	u4860
  2093  005AB0                     u4861:
  2094  005AB0  EF5F  F02D         	goto	l5382
  2095  005AB4                     u4860:
  2096  005AB4                     
  2097                           ; BSR set to: 0
  2098                           ;State_Mod.c: 107:             hide_flag = 0;
  2099  005AB4  0E00               	movlw	0
  2100  005AB6  6FCB               	movwf	_hide_flag& (0+255),b
  2101  005AB8                     
  2102                           ; BSR set to: 0
  2103                           ;State_Mod.c: 108:             disp_Clock_Hide(state);
  2104  005AB8  5056               	movf	_state^0,w,c	;volatile
  2105  005ABA  ECF0  F030         	call	_disp_Clock_Hide
  2106  005ABE                     l5382:
  2107                           
  2108                           ;State_Mod.c: 84:     while(state == STATE_MOD_SECOND) {
  2109  005ABE  0E03               	movlw	3
  2110  005AC0  1856               	xorwf	_state^0,w,c	;volatile
  2111  005AC2  B4D8               	btfsc	status,2,c
  2112  005AC4  EF66  F02D         	goto	u4871
  2113  005AC8  EF68  F02D         	goto	u4870
  2114  005ACC                     u4871:
  2115  005ACC  EFD8  F02C         	goto	l5340
  2116  005AD0                     u4870:
  2117  005AD0  0012               	return		;funcret
  2118  005AD2                     __end_of_state_mod_second:
  2119                           	opt callstack 0
  2120                           
  2121 ;; *************** function _state_mod_minute *****************
  2122 ;; Defined at:
  2123 ;;		line 44 in file "State_Mod.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;		None
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;		None
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      void 
  2130 ;; Registers used:
  2131 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2138 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2140 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;Total ram usage:        2 bytes
  2142 ;; Hardware stack levels used:    1
  2143 ;; Hardware stack levels required when called:    9
  2144 ;; This function calls:
  2145 ;;		_LCDMoveCursor
  2146 ;;		_LCDPutChar
  2147 ;;		_LCDPutInst
  2148 ;;		_LCDPutStr
  2149 ;;		___awdiv
  2150 ;;		___awmod
  2151 ;;		_disp_Clock
  2152 ;;		_disp_Clock_Hide
  2153 ;;		_handle_Time
  2154 ;; This function is called by:
  2155 ;;		_main
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           	psect	text4
  2160  0056A4                     __ptext4:
  2161                           	opt callstack 0
  2162  0056A4                     _state_mod_minute:
  2163                           	opt callstack 21
  2164  0056A4                     
  2165                           ;State_Mod.c: 45:     LCDPutInst(0x80);
  2166  0056A4  0E80               	movlw	128
  2167  0056A6  ECD3  F031         	call	_LCDPutInst
  2168  0056AA                     
  2169                           ;State_Mod.c: 46:     LCDPutStr("Mod M   RA5=Next");
  2170  0056AA  0E9F               	movlw	low STR_7
  2171  0056AC  6E10               	movwf	LCDPutStr@ptr^0,c
  2172  0056AE  0E10               	movlw	high STR_7
  2173  0056B0  6E11               	movwf	(LCDPutStr@ptr+1)^0,c
  2174  0056B2  ECEB  F032         	call	_LCDPutStr	;wreg free
  2175  0056B6                     
  2176                           ;State_Mod.c: 47:     disp_Clock();
  2177  0056B6  ECA6  F02F         	call	_disp_Clock	;wreg free
  2178                           
  2179                           ;State_Mod.c: 48:     while(state == STATE_MOD_MINUTE) {
  2180  0056BA  EF05  F02C         	goto	l5332
  2181  0056BE                     l5284:
  2182                           
  2183                           ;State_Mod.c: 49:         if(buttonRA5) {
  2184  0056BE  0100               	movlb	0	; () banked
  2185  0056C0  51CE               	movf	_buttonRA5& (0+255),w,b
  2186  0056C2  B4D8               	btfsc	status,2,c
  2187  0056C4  EF66  F02B         	goto	u4761
  2188  0056C8  EF68  F02B         	goto	u4760
  2189  0056CC                     u4761:
  2190  0056CC  EF6C  F02B         	goto	l506
  2191  0056D0                     u4760:
  2192  0056D0                     
  2193                           ; BSR set to: 0
  2194                           ;State_Mod.c: 50:             state = STATE_MOD_SECOND;
  2195  0056D0  0E03               	movlw	3
  2196  0056D2  6E56               	movwf	_state^0,c	;volatile
  2197                           
  2198                           ;State_Mod.c: 51:             buttonRA5 = 0;
  2199  0056D4  0E00               	movlw	0
  2200  0056D6  6FCE               	movwf	_buttonRA5& (0+255),b
  2201  0056D8                     l506:
  2202                           
  2203                           ; BSR set to: 0
  2204                           ;State_Mod.c: 53:         if(second_flag) {
  2205  0056D8  51CC               	movf	_second_flag& (0+255),w,b
  2206  0056DA  B4D8               	btfsc	status,2,c
  2207  0056DC  EF72  F02B         	goto	u4771
  2208  0056E0  EF74  F02B         	goto	u4770
  2209  0056E4                     u4771:
  2210  0056E4  EFCA  F02B         	goto	l507
  2211  0056E8                     u4770:
  2212  0056E8                     
  2213                           ; BSR set to: 0
  2214                           ;State_Mod.c: 54:             second_flag = 0;
  2215  0056E8  0E00               	movlw	0
  2216  0056EA  6FCC               	movwf	_second_flag& (0+255),b
  2217  0056EC                     
  2218                           ; BSR set to: 0
  2219                           ;State_Mod.c: 55:             sec++;
  2220  0056EC  2A52               	incf	_sec^0,f,c	;volatile
  2221  0056EE                     
  2222                           ; BSR set to: 0
  2223                           ;State_Mod.c: 56:             LCDMoveCursor(1, 6);
  2224  0056EE  0E06               	movlw	6
  2225  0056F0  6E10               	movwf	LCDMoveCursor@pos^0,c
  2226  0056F2  0E01               	movlw	1
  2227  0056F4  EC0A  F033         	call	_LCDMoveCursor
  2228  0056F8                     
  2229                           ;State_Mod.c: 57:             LCDPutChar(sec/10+'0');
  2230  0056F8  C052  F009         	movff	_sec,___awdiv@dividend	;volatile
  2231  0056FC  6A0A               	clrf	(___awdiv@dividend+1)^0,c
  2232  0056FE  0E00               	movlw	0
  2233  005700  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  2234  005702  0E0A               	movlw	10
  2235  005704  6E0B               	movwf	___awdiv@divisor^0,c
  2236  005706  EC44  F02F         	call	___awdiv	;wreg free
  2237  00570A  5009               	movf	?___awdiv^0,w,c
  2238  00570C  0F30               	addlw	48
  2239  00570E  ECA0  F031         	call	_LCDPutChar
  2240  005712                     
  2241                           ;State_Mod.c: 58:             LCDPutChar(sec%10+'0');
  2242  005712  C052  F009         	movff	_sec,___awmod@dividend	;volatile
  2243  005716  6A0A               	clrf	(___awmod@dividend+1)^0,c
  2244  005718  0E00               	movlw	0
  2245  00571A  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2246  00571C  0E0A               	movlw	10
  2247  00571E  6E0B               	movwf	___awmod@divisor^0,c
  2248  005720  EC04  F030         	call	___awmod	;wreg free
  2249  005724  5009               	movf	?___awmod^0,w,c
  2250  005726  0F30               	addlw	48
  2251  005728  ECA0  F031         	call	_LCDPutChar
  2252  00572C                     
  2253                           ;State_Mod.c: 59:             LCDMoveCursor(1, 3);
  2254  00572C  0E03               	movlw	3
  2255  00572E  6E10               	movwf	LCDMoveCursor@pos^0,c
  2256  005730  0E01               	movlw	1
  2257  005732  EC0A  F033         	call	_LCDMoveCursor
  2258  005736                     
  2259                           ;State_Mod.c: 60:             LCDPutChar(min/10+'0');
  2260  005736  C053  F009         	movff	_min,___awdiv@dividend	;volatile
  2261  00573A  6A0A               	clrf	(___awdiv@dividend+1)^0,c
  2262  00573C  0E00               	movlw	0
  2263  00573E  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  2264  005740  0E0A               	movlw	10
  2265  005742  6E0B               	movwf	___awdiv@divisor^0,c
  2266  005744  EC44  F02F         	call	___awdiv	;wreg free
  2267  005748  5009               	movf	?___awdiv^0,w,c
  2268  00574A  0F30               	addlw	48
  2269  00574C  ECA0  F031         	call	_LCDPutChar
  2270  005750                     
  2271                           ;State_Mod.c: 61:             LCDPutChar(min%10+'0');
  2272  005750  C053  F009         	movff	_min,___awmod@dividend	;volatile
  2273  005754  6A0A               	clrf	(___awmod@dividend+1)^0,c
  2274  005756  0E00               	movlw	0
  2275  005758  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2276  00575A  0E0A               	movlw	10
  2277  00575C  6E0B               	movwf	___awmod@divisor^0,c
  2278  00575E  EC04  F030         	call	___awmod	;wreg free
  2279  005762  5009               	movf	?___awmod^0,w,c
  2280  005764  0F30               	addlw	48
  2281  005766  ECA0  F031         	call	_LCDPutChar
  2282  00576A                     
  2283                           ;State_Mod.c: 62:             handle_Time();
  2284  00576A  EC0F  F02C         	call	_handle_Time	;wreg free
  2285  00576E                     
  2286                           ;State_Mod.c: 63:             ledValue = (ledValue == 0) ? 255 : 0;
  2287  00576E  5055               	movf	_ledValue^0,w,c
  2288  005770  B4D8               	btfsc	status,2,c
  2289  005772  EFBD  F02B         	goto	u4781
  2290  005776  EFBF  F02B         	goto	u4780
  2291  00577A                     u4781:
  2292  00577A  EFC5  F02B         	goto	l5310
  2293  00577E                     u4780:
  2294  00577E  0E00               	movlw	0
  2295  005780  6E1D               	movwf	(_state_mod_minute$766+1)^0,c
  2296  005782  0E00               	movlw	0
  2297  005784  6E1C               	movwf	_state_mod_minute$766^0,c
  2298  005786  EFC8  F02B         	goto	l5312
  2299  00578A                     l5310:
  2300  00578A  0E00               	movlw	0
  2301  00578C  6E1D               	movwf	(_state_mod_minute$766+1)^0,c
  2302  00578E  681C               	setf	_state_mod_minute$766^0,c
  2303  005790                     l5312:
  2304  005790  C01C  F055         	movff	_state_mod_minute$766,_ledValue
  2305  005794                     l507:
  2306                           
  2307                           ;State_Mod.c: 65:         if(buttonRB0) {
  2308  005794  0100               	movlb	0	; () banked
  2309  005796  51CD               	movf	_buttonRB0& (0+255),w,b
  2310  005798  B4D8               	btfsc	status,2,c
  2311  00579A  EFD1  F02B         	goto	u4791
  2312  00579E  EFD3  F02B         	goto	u4790
  2313  0057A2                     u4791:
  2314  0057A2  EFF7  F02B         	goto	l5326
  2315  0057A6                     u4790:
  2316  0057A6                     
  2317                           ; BSR set to: 0
  2318                           ;State_Mod.c: 66:             buttonRB0 = 0;
  2319  0057A6  0E00               	movlw	0
  2320  0057A8  6FCD               	movwf	_buttonRB0& (0+255),b
  2321  0057AA                     
  2322                           ; BSR set to: 0
  2323                           ;State_Mod.c: 67:             min++;
  2324  0057AA  2A53               	incf	_min^0,f,c	;volatile
  2325  0057AC                     
  2326                           ; BSR set to: 0
  2327                           ;State_Mod.c: 68:             LCDMoveCursor(1, 3);
  2328  0057AC  0E03               	movlw	3
  2329  0057AE  6E10               	movwf	LCDMoveCursor@pos^0,c
  2330  0057B0  0E01               	movlw	1
  2331  0057B2  EC0A  F033         	call	_LCDMoveCursor
  2332  0057B6                     
  2333                           ;State_Mod.c: 69:             LCDPutChar(min/10+'0');
  2334  0057B6  C053  F009         	movff	_min,___awdiv@dividend	;volatile
  2335  0057BA  6A0A               	clrf	(___awdiv@dividend+1)^0,c
  2336  0057BC  0E00               	movlw	0
  2337  0057BE  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  2338  0057C0  0E0A               	movlw	10
  2339  0057C2  6E0B               	movwf	___awdiv@divisor^0,c
  2340  0057C4  EC44  F02F         	call	___awdiv	;wreg free
  2341  0057C8  5009               	movf	?___awdiv^0,w,c
  2342  0057CA  0F30               	addlw	48
  2343  0057CC  ECA0  F031         	call	_LCDPutChar
  2344  0057D0                     
  2345                           ;State_Mod.c: 70:             LCDPutChar(min%10+'0');
  2346  0057D0  C053  F009         	movff	_min,___awmod@dividend	;volatile
  2347  0057D4  6A0A               	clrf	(___awmod@dividend+1)^0,c
  2348  0057D6  0E00               	movlw	0
  2349  0057D8  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2350  0057DA  0E0A               	movlw	10
  2351  0057DC  6E0B               	movwf	___awmod@divisor^0,c
  2352  0057DE  EC04  F030         	call	___awmod	;wreg free
  2353  0057E2  5009               	movf	?___awmod^0,w,c
  2354  0057E4  0F30               	addlw	48
  2355  0057E6  ECA0  F031         	call	_LCDPutChar
  2356  0057EA                     
  2357                           ;State_Mod.c: 71:             handle_Time();
  2358  0057EA  EC0F  F02C         	call	_handle_Time	;wreg free
  2359  0057EE                     l5326:
  2360                           
  2361                           ;State_Mod.c: 73:         if(hide_flag) {
  2362  0057EE  0100               	movlb	0	; () banked
  2363  0057F0  51CB               	movf	_hide_flag& (0+255),w,b
  2364  0057F2  B4D8               	btfsc	status,2,c
  2365  0057F4  EFFE  F02B         	goto	u4801
  2366  0057F8  EF00  F02C         	goto	u4800
  2367  0057FC                     u4801:
  2368  0057FC  EF05  F02C         	goto	l5332
  2369  005800                     u4800:
  2370  005800                     
  2371                           ; BSR set to: 0
  2372                           ;State_Mod.c: 74:             hide_flag = 0;
  2373  005800  0E00               	movlw	0
  2374  005802  6FCB               	movwf	_hide_flag& (0+255),b
  2375  005804                     
  2376                           ; BSR set to: 0
  2377                           ;State_Mod.c: 75:             disp_Clock_Hide(state);
  2378  005804  5056               	movf	_state^0,w,c	;volatile
  2379  005806  ECF0  F030         	call	_disp_Clock_Hide
  2380  00580A                     l5332:
  2381                           
  2382                           ;State_Mod.c: 48:     while(state == STATE_MOD_MINUTE) {
  2383  00580A  0E02               	movlw	2
  2384  00580C  1856               	xorwf	_state^0,w,c	;volatile
  2385  00580E  B4D8               	btfsc	status,2,c
  2386  005810  EF0C  F02C         	goto	u4811
  2387  005814  EF0E  F02C         	goto	u4810
  2388  005818                     u4811:
  2389  005818  EF5F  F02B         	goto	l5284
  2390  00581C                     u4810:
  2391  00581C  0012               	return		;funcret
  2392  00581E                     __end_of_state_mod_minute:
  2393                           	opt callstack 0
  2394                           
  2395 ;; *************** function _state_mod_hour *****************
  2396 ;; Defined at:
  2397 ;;		line 6 in file "State_Mod.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;		None
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;		None
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  1    wreg      void 
  2404 ;; Registers used:
  2405 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2412 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2414 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2415 ;;Total ram usage:        2 bytes
  2416 ;; Hardware stack levels used:    1
  2417 ;; Hardware stack levels required when called:    9
  2418 ;; This function calls:
  2419 ;;		_LCDMoveCursor
  2420 ;;		_LCDPutChar
  2421 ;;		_LCDPutInst
  2422 ;;		_LCDPutStr
  2423 ;;		___awdiv
  2424 ;;		___awmod
  2425 ;;		_disp_Clock
  2426 ;;		_disp_Clock_Hide
  2427 ;;		_handle_Time
  2428 ;; This function is called by:
  2429 ;;		_main
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           	psect	text5
  2434  005524                     __ptext5:
  2435                           	opt callstack 0
  2436  005524                     _state_mod_hour:
  2437                           	opt callstack 21
  2438  005524                     
  2439                           ;State_Mod.c: 7:     LCDPutInst(0x80);
  2440  005524  0E80               	movlw	128
  2441  005526  ECD3  F031         	call	_LCDPutInst
  2442  00552A                     
  2443                           ;State_Mod.c: 8:     LCDPutStr("Mod H   RA5=Next");
  2444  00552A  0E8E               	movlw	low STR_6
  2445  00552C  6E10               	movwf	LCDPutStr@ptr^0,c
  2446  00552E  0E10               	movlw	high STR_6
  2447  005530  6E11               	movwf	(LCDPutStr@ptr+1)^0,c
  2448  005532  ECEB  F032         	call	_LCDPutStr	;wreg free
  2449  005536                     
  2450                           ;State_Mod.c: 9:     disp_Clock();
  2451  005536  ECA6  F02F         	call	_disp_Clock	;wreg free
  2452                           
  2453                           ;State_Mod.c: 10:     while(state == STATE_MOD_HOUR) {
  2454  00553A  EF49  F02B         	goto	l5276
  2455  00553E                     l491:
  2456                           
  2457                           ;State_Mod.c: 11:         LATD = ledValue;
  2458  00553E  C055  FF8C         	movff	_ledValue,3980	;volatile
  2459  005542                     
  2460                           ;State_Mod.c: 12:         if(buttonRA5) {
  2461  005542  0100               	movlb	0	; () banked
  2462  005544  51CE               	movf	_buttonRA5& (0+255),w,b
  2463  005546  B4D8               	btfsc	status,2,c
  2464  005548  EFA8  F02A         	goto	u4701
  2465  00554C  EFAA  F02A         	goto	u4700
  2466  005550                     u4701:
  2467  005550  EFB0  F02A         	goto	l5230
  2468  005554                     u4700:
  2469  005554                     
  2470                           ; BSR set to: 0
  2471                           ;State_Mod.c: 13:             state = STATE_MOD_MINUTE;
  2472  005554  0E02               	movlw	2
  2473  005556  6E56               	movwf	_state^0,c	;volatile
  2474                           
  2475                           ;State_Mod.c: 14:             buttonRA5 = 0;
  2476  005558  0E00               	movlw	0
  2477  00555A  6FCE               	movwf	_buttonRA5& (0+255),b
  2478  00555C  EF51  F02B         	goto	l493
  2479  005560                     l5230:
  2480                           
  2481                           ; BSR set to: 0
  2482                           ;State_Mod.c: 17:         if(second_flag) {
  2483  005560  51CC               	movf	_second_flag& (0+255),w,b
  2484  005562  B4D8               	btfsc	status,2,c
  2485  005564  EFB6  F02A         	goto	u4711
  2486  005568  EFB8  F02A         	goto	u4710
  2487  00556C                     u4711:
  2488  00556C  EF0E  F02B         	goto	l494
  2489  005570                     u4710:
  2490  005570                     
  2491                           ; BSR set to: 0
  2492                           ;State_Mod.c: 18:             second_flag = 0;
  2493  005570  0E00               	movlw	0
  2494  005572  6FCC               	movwf	_second_flag& (0+255),b
  2495  005574                     
  2496                           ; BSR set to: 0
  2497                           ;State_Mod.c: 19:             sec++;
  2498  005574  2A52               	incf	_sec^0,f,c	;volatile
  2499  005576                     
  2500                           ; BSR set to: 0
  2501                           ;State_Mod.c: 20:             LCDMoveCursor(1, 6);
  2502  005576  0E06               	movlw	6
  2503  005578  6E10               	movwf	LCDMoveCursor@pos^0,c
  2504  00557A  0E01               	movlw	1
  2505  00557C  EC0A  F033         	call	_LCDMoveCursor
  2506  005580                     
  2507                           ;State_Mod.c: 21:             LCDPutChar(sec/10+'0');
  2508  005580  C052  F009         	movff	_sec,___awdiv@dividend	;volatile
  2509  005584  6A0A               	clrf	(___awdiv@dividend+1)^0,c
  2510  005586  0E00               	movlw	0
  2511  005588  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  2512  00558A  0E0A               	movlw	10
  2513  00558C  6E0B               	movwf	___awdiv@divisor^0,c
  2514  00558E  EC44  F02F         	call	___awdiv	;wreg free
  2515  005592  5009               	movf	?___awdiv^0,w,c
  2516  005594  0F30               	addlw	48
  2517  005596  ECA0  F031         	call	_LCDPutChar
  2518  00559A                     
  2519                           ;State_Mod.c: 22:             LCDPutChar(sec%10+'0');
  2520  00559A  C052  F009         	movff	_sec,___awmod@dividend	;volatile
  2521  00559E  6A0A               	clrf	(___awmod@dividend+1)^0,c
  2522  0055A0  0E00               	movlw	0
  2523  0055A2  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2524  0055A4  0E0A               	movlw	10
  2525  0055A6  6E0B               	movwf	___awmod@divisor^0,c
  2526  0055A8  EC04  F030         	call	___awmod	;wreg free
  2527  0055AC  5009               	movf	?___awmod^0,w,c
  2528  0055AE  0F30               	addlw	48
  2529  0055B0  ECA0  F031         	call	_LCDPutChar
  2530  0055B4                     
  2531                           ;State_Mod.c: 23:             LCDMoveCursor(1, 0);
  2532  0055B4  0E00               	movlw	0
  2533  0055B6  6E10               	movwf	LCDMoveCursor@pos^0,c
  2534  0055B8  0E01               	movlw	1
  2535  0055BA  EC0A  F033         	call	_LCDMoveCursor
  2536  0055BE                     
  2537                           ;State_Mod.c: 24:             LCDPutChar(hr/10+'0');
  2538  0055BE  C054  F009         	movff	_hr,___awdiv@dividend	;volatile
  2539  0055C2  6A0A               	clrf	(___awdiv@dividend+1)^0,c
  2540  0055C4  0E00               	movlw	0
  2541  0055C6  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  2542  0055C8  0E0A               	movlw	10
  2543  0055CA  6E0B               	movwf	___awdiv@divisor^0,c
  2544  0055CC  EC44  F02F         	call	___awdiv	;wreg free
  2545  0055D0  5009               	movf	?___awdiv^0,w,c
  2546  0055D2  0F30               	addlw	48
  2547  0055D4  ECA0  F031         	call	_LCDPutChar
  2548  0055D8                     
  2549                           ;State_Mod.c: 25:             LCDPutChar(hr%10+'0');
  2550  0055D8  C054  F009         	movff	_hr,___awmod@dividend	;volatile
  2551  0055DC  6A0A               	clrf	(___awmod@dividend+1)^0,c
  2552  0055DE  0E00               	movlw	0
  2553  0055E0  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2554  0055E2  0E0A               	movlw	10
  2555  0055E4  6E0B               	movwf	___awmod@divisor^0,c
  2556  0055E6  EC04  F030         	call	___awmod	;wreg free
  2557  0055EA  5009               	movf	?___awmod^0,w,c
  2558  0055EC  0F30               	addlw	48
  2559  0055EE  ECA0  F031         	call	_LCDPutChar
  2560  0055F2                     
  2561                           ;State_Mod.c: 26:             handle_Time();
  2562  0055F2  EC0F  F02C         	call	_handle_Time	;wreg free
  2563  0055F6                     
  2564                           ;State_Mod.c: 27:             ledValue = (ledValue == 0) ? 255 : 0;
  2565  0055F6  5055               	movf	_ledValue^0,w,c
  2566  0055F8  B4D8               	btfsc	status,2,c
  2567  0055FA  EF01  F02B         	goto	u4721
  2568  0055FE  EF03  F02B         	goto	u4720
  2569  005602                     u4721:
  2570  005602  EF09  F02B         	goto	l5254
  2571  005606                     u4720:
  2572  005606  0E00               	movlw	0
  2573  005608  6E1D               	movwf	(_state_mod_hour$762+1)^0,c
  2574  00560A  0E00               	movlw	0
  2575  00560C  6E1C               	movwf	_state_mod_hour$762^0,c
  2576  00560E  EF0C  F02B         	goto	l5256
  2577  005612                     l5254:
  2578  005612  0E00               	movlw	0
  2579  005614  6E1D               	movwf	(_state_mod_hour$762+1)^0,c
  2580  005616  681C               	setf	_state_mod_hour$762^0,c
  2581  005618                     l5256:
  2582  005618  C01C  F055         	movff	_state_mod_hour$762,_ledValue
  2583  00561C                     l494:
  2584                           
  2585                           ;State_Mod.c: 29:         if(buttonRB0) {
  2586  00561C  0100               	movlb	0	; () banked
  2587  00561E  51CD               	movf	_buttonRB0& (0+255),w,b
  2588  005620  B4D8               	btfsc	status,2,c
  2589  005622  EF15  F02B         	goto	u4731
  2590  005626  EF17  F02B         	goto	u4730
  2591  00562A                     u4731:
  2592  00562A  EF3B  F02B         	goto	l5270
  2593  00562E                     u4730:
  2594  00562E                     
  2595                           ; BSR set to: 0
  2596                           ;State_Mod.c: 30:             buttonRB0 = 0;
  2597  00562E  0E00               	movlw	0
  2598  005630  6FCD               	movwf	_buttonRB0& (0+255),b
  2599  005632                     
  2600                           ; BSR set to: 0
  2601                           ;State_Mod.c: 31:             hr++;
  2602  005632  2A54               	incf	_hr^0,f,c	;volatile
  2603  005634                     
  2604                           ; BSR set to: 0
  2605                           ;State_Mod.c: 32:             LCDMoveCursor(1, 0);
  2606  005634  0E00               	movlw	0
  2607  005636  6E10               	movwf	LCDMoveCursor@pos^0,c
  2608  005638  0E01               	movlw	1
  2609  00563A  EC0A  F033         	call	_LCDMoveCursor
  2610  00563E                     
  2611                           ;State_Mod.c: 33:             LCDPutChar(hr/10+'0');
  2612  00563E  C054  F009         	movff	_hr,___awdiv@dividend	;volatile
  2613  005642  6A0A               	clrf	(___awdiv@dividend+1)^0,c
  2614  005644  0E00               	movlw	0
  2615  005646  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  2616  005648  0E0A               	movlw	10
  2617  00564A  6E0B               	movwf	___awdiv@divisor^0,c
  2618  00564C  EC44  F02F         	call	___awdiv	;wreg free
  2619  005650  5009               	movf	?___awdiv^0,w,c
  2620  005652  0F30               	addlw	48
  2621  005654  ECA0  F031         	call	_LCDPutChar
  2622  005658                     
  2623                           ;State_Mod.c: 34:             LCDPutChar(hr%10+'0');
  2624  005658  C054  F009         	movff	_hr,___awmod@dividend	;volatile
  2625  00565C  6A0A               	clrf	(___awmod@dividend+1)^0,c
  2626  00565E  0E00               	movlw	0
  2627  005660  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2628  005662  0E0A               	movlw	10
  2629  005664  6E0B               	movwf	___awmod@divisor^0,c
  2630  005666  EC04  F030         	call	___awmod	;wreg free
  2631  00566A  5009               	movf	?___awmod^0,w,c
  2632  00566C  0F30               	addlw	48
  2633  00566E  ECA0  F031         	call	_LCDPutChar
  2634  005672                     
  2635                           ;State_Mod.c: 35:             handle_Time();
  2636  005672  EC0F  F02C         	call	_handle_Time	;wreg free
  2637  005676                     l5270:
  2638                           
  2639                           ;State_Mod.c: 37:         if(hide_flag) {
  2640  005676  0100               	movlb	0	; () banked
  2641  005678  51CB               	movf	_hide_flag& (0+255),w,b
  2642  00567A  B4D8               	btfsc	status,2,c
  2643  00567C  EF42  F02B         	goto	u4741
  2644  005680  EF44  F02B         	goto	u4740
  2645  005684                     u4741:
  2646  005684  EF49  F02B         	goto	l5276
  2647  005688                     u4740:
  2648  005688                     
  2649                           ; BSR set to: 0
  2650                           ;State_Mod.c: 38:             hide_flag = 0;
  2651  005688  0E00               	movlw	0
  2652  00568A  6FCB               	movwf	_hide_flag& (0+255),b
  2653  00568C                     
  2654                           ; BSR set to: 0
  2655                           ;State_Mod.c: 39:             disp_Clock_Hide(state);
  2656  00568C  5056               	movf	_state^0,w,c	;volatile
  2657  00568E  ECF0  F030         	call	_disp_Clock_Hide
  2658  005692                     l5276:
  2659                           
  2660                           ;State_Mod.c: 10:     while(state == STATE_MOD_HOUR) {
  2661  005692  0456               	decf	_state^0,w,c	;volatile
  2662  005694  B4D8               	btfsc	status,2,c
  2663  005696  EF4F  F02B         	goto	u4751
  2664  00569A  EF51  F02B         	goto	u4750
  2665  00569E                     u4751:
  2666  00569E  EF9F  F02A         	goto	l491
  2667  0056A2                     u4750:
  2668  0056A2                     l493:
  2669  0056A2  0012               	return		;funcret
  2670  0056A4                     __end_of_state_mod_hour:
  2671                           	opt callstack 0
  2672                           
  2673 ;; *************** function _disp_Clock_Hide *****************
  2674 ;; Defined at:
  2675 ;;		line 52 in file "State_Clock.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;  state           1    wreg     unsigned char 
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;  state           1   26[COMRAM] unsigned char 
  2680 ;; Return value:  Size  Location     Type
  2681 ;;                  1    wreg      void 
  2682 ;; Registers used:
  2683 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2684 ;; Tracked objects:
  2685 ;;		On entry : 0/0
  2686 ;;		On exit  : 0/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2690 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2691 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2692 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2693 ;;Total ram usage:        3 bytes
  2694 ;; Hardware stack levels used:    1
  2695 ;; Hardware stack levels required when called:    8
  2696 ;; This function calls:
  2697 ;;		_LCDPrint
  2698 ;; This function is called by:
  2699 ;;		_state_mod_hour
  2700 ;;		_state_mod_minute
  2701 ;;		_state_mod_second
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           	psect	text6
  2706  0061E0                     __ptext6:
  2707                           	opt callstack 0
  2708  0061E0                     _disp_Clock_Hide:
  2709                           	opt callstack 21
  2710                           
  2711                           ;incstack = 0
  2712                           ;disp_Clock_Hide@state stored from wreg
  2713  0061E0  6E1B               	movwf	disp_Clock_Hide@state^0,c
  2714  0061E2                     
  2715                           ;State_Clock.c: 53:     switch(state) {
  2716  0061E2  EF14  F031         	goto	l5134
  2717  0061E6                     l5126:
  2718                           
  2719                           ;State_Clock.c: 55:             LCDPrint(1, 0, "  ");
  2720  0061E6  0E00               	movlw	0
  2721  0061E8  6E15               	movwf	LCDPrint@pos^0,c
  2722  0061EA  0ED8               	movlw	low (STR_10+6)
  2723  0061EC  6E16               	movwf	LCDPrint@ptr^0,c
  2724  0061EE  0E10               	movlw	high (STR_10+6)
  2725  0061F0  6E17               	movwf	(LCDPrint@ptr+1)^0,c
  2726  0061F2  0E01               	movlw	1
  2727  0061F4  ECCC  F032         	call	_LCDPrint
  2728                           
  2729                           ;State_Clock.c: 56:             break;
  2730  0061F8  EF2D  F031         	goto	l431
  2731  0061FC                     l5128:
  2732                           
  2733                           ;State_Clock.c: 58:             LCDPrint(1, 3, "  ");
  2734  0061FC  0E03               	movlw	3
  2735  0061FE  6E15               	movwf	LCDPrint@pos^0,c
  2736  006200  0ED8               	movlw	low (STR_10+6)
  2737  006202  6E16               	movwf	LCDPrint@ptr^0,c
  2738  006204  0E10               	movlw	high (STR_10+6)
  2739  006206  6E17               	movwf	(LCDPrint@ptr+1)^0,c
  2740  006208  0E01               	movlw	1
  2741  00620A  ECCC  F032         	call	_LCDPrint
  2742                           
  2743                           ;State_Clock.c: 59:             break;
  2744  00620E  EF2D  F031         	goto	l431
  2745  006212                     l5130:
  2746                           
  2747                           ;State_Clock.c: 61:             LCDPrint(1, 6, "  ");
  2748  006212  0E06               	movlw	6
  2749  006214  6E15               	movwf	LCDPrint@pos^0,c
  2750  006216  0ED8               	movlw	low (STR_10+6)
  2751  006218  6E16               	movwf	LCDPrint@ptr^0,c
  2752  00621A  0E10               	movlw	high (STR_10+6)
  2753  00621C  6E17               	movwf	(LCDPrint@ptr+1)^0,c
  2754  00621E  0E01               	movlw	1
  2755  006220  ECCC  F032         	call	_LCDPrint
  2756                           
  2757                           ;State_Clock.c: 62:             break;
  2758  006224  EF2D  F031         	goto	l431
  2759  006228                     l5134:
  2760  006228  501B               	movf	disp_Clock_Hide@state^0,w,c
  2761  00622A  6E19               	movwf	??_disp_Clock_Hide^0,c
  2762  00622C  6A1A               	clrf	(??_disp_Clock_Hide+1)^0,c
  2763                           
  2764                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2765                           ; Switch size 1, requested type "simple"
  2766                           ; Number of cases is 1, Range of values is 0 to 0
  2767                           ; switch strategies available:
  2768                           ; Name         Instructions Cycles
  2769                           ; simple_byte            4     3 (average)
  2770                           ;	Chosen strategy is simple_byte
  2771  00622E  501A               	movf	(??_disp_Clock_Hide+1)^0,w,c
  2772  006230  0A00               	xorlw	0	; case 0
  2773  006232  B4D8               	btfsc	status,2,c
  2774  006234  EF1E  F031         	goto	l6478
  2775  006238  EF2D  F031         	goto	l431
  2776  00623C                     l6478:
  2777                           
  2778                           ; Switch size 1, requested type "simple"
  2779                           ; Number of cases is 3, Range of values is 1 to 3
  2780                           ; switch strategies available:
  2781                           ; Name         Instructions Cycles
  2782                           ; simple_byte           10     6 (average)
  2783                           ;	Chosen strategy is simple_byte
  2784  00623C  5019               	movf	??_disp_Clock_Hide^0,w,c
  2785  00623E  0A01               	xorlw	1	; case 1
  2786  006240  B4D8               	btfsc	status,2,c
  2787  006242  EFF3  F030         	goto	l5126
  2788  006246  0A03               	xorlw	3	; case 2
  2789  006248  B4D8               	btfsc	status,2,c
  2790  00624A  EFFE  F030         	goto	l5128
  2791  00624E  0A01               	xorlw	1	; case 3
  2792  006250  B4D8               	btfsc	status,2,c
  2793  006252  EF09  F031         	goto	l5130
  2794  006256  EF2D  F031         	goto	l431
  2795  00625A                     l431:
  2796  00625A  0012               	return		;funcret
  2797  00625C                     __end_of_disp_Clock_Hide:
  2798                           	opt callstack 0
  2799                           
  2800 ;; *************** function _LCDPrint *****************
  2801 ;; Defined at:
  2802 ;;		line 209 in file "SPI_LCD.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;  line            1    wreg     unsigned char 
  2805 ;;  pos             1   20[COMRAM] unsigned char 
  2806 ;;  ptr             2   21[COMRAM] PTR const unsigned char 
  2807 ;;		 -> STR_4(3), STR_3(3), STR_2(3), 
  2808 ;; Auto vars:     Size  Location     Type
  2809 ;;  line            1   23[COMRAM] unsigned char 
  2810 ;; Return value:  Size  Location     Type
  2811 ;;                  1    wreg      void 
  2812 ;; Registers used:
  2813 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2814 ;; Tracked objects:
  2815 ;;		On entry : 0/0
  2816 ;;		On exit  : 0/0
  2817 ;;		Unchanged: 0/0
  2818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2819 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2820 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2822 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2823 ;;Total ram usage:        4 bytes
  2824 ;; Hardware stack levels used:    1
  2825 ;; Hardware stack levels required when called:    7
  2826 ;; This function calls:
  2827 ;;		_LCDMoveCursor
  2828 ;;		_LCDPutStr
  2829 ;; This function is called by:
  2830 ;;		_disp_Clock_Hide
  2831 ;; This function uses a non-reentrant model
  2832 ;;
  2833                           
  2834                           	psect	text7
  2835  006598                     __ptext7:
  2836                           	opt callstack 0
  2837  006598                     _LCDPrint:
  2838                           	opt callstack 21
  2839                           
  2840                           ;incstack = 0
  2841                           ;LCDPrint@line stored from wreg
  2842  006598  6E18               	movwf	LCDPrint@line^0,c
  2843  00659A                     
  2844                           ;SPI_LCD.c: 210:     if(line <0 || line > 2 || pos < 0 || pos > 15)
  2845  00659A  0E03               	movlw	3
  2846  00659C  6018               	cpfslt	LCDPrint@line^0,c
  2847  00659E  EFD3  F032         	goto	u4511
  2848  0065A2  EFD5  F032         	goto	u4510
  2849  0065A6                     u4511:
  2850  0065A6  EFEA  F032         	goto	l332
  2851  0065AA                     u4510:
  2852  0065AA  0E0F               	movlw	15
  2853  0065AC  6415               	cpfsgt	LCDPrint@pos^0,c
  2854  0065AE  EFDB  F032         	goto	u4521
  2855  0065B2  EFDD  F032         	goto	u4520
  2856  0065B6                     u4521:
  2857  0065B6  EFDF  F032         	goto	l5000
  2858  0065BA                     u4520:
  2859  0065BA  EFEA  F032         	goto	l332
  2860  0065BE                     l5000:
  2861                           
  2862                           ;SPI_LCD.c: 212:     LCDMoveCursor(line, pos);
  2863  0065BE  C015  F010         	movff	LCDPrint@pos,LCDMoveCursor@pos
  2864  0065C2  5018               	movf	LCDPrint@line^0,w,c
  2865  0065C4  EC0A  F033         	call	_LCDMoveCursor
  2866  0065C8                     
  2867                           ;SPI_LCD.c: 213:     LCDPutStr(ptr);
  2868  0065C8  C016  F010         	movff	LCDPrint@ptr,LCDPutStr@ptr
  2869  0065CC  C017  F011         	movff	LCDPrint@ptr+1,LCDPutStr@ptr+1
  2870  0065D0  ECEB  F032         	call	_LCDPutStr	;wreg free
  2871  0065D4                     l332:
  2872  0065D4  0012               	return		;funcret
  2873  0065D6                     __end_of_LCDPrint:
  2874                           	opt callstack 0
  2875                           
  2876 ;; *************** function _state_clock *****************
  2877 ;; Defined at:
  2878 ;;		line 68 in file "State_Clock.c"
  2879 ;; Parameters:    Size  Location     Type
  2880 ;;		None
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;		None
  2883 ;; Return value:  Size  Location     Type
  2884 ;;                  1    wreg      void 
  2885 ;; Registers used:
  2886 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2893 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2895 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2896 ;;Total ram usage:        2 bytes
  2897 ;; Hardware stack levels used:    1
  2898 ;; Hardware stack levels required when called:    8
  2899 ;; This function calls:
  2900 ;;		_LCDMoveCursor
  2901 ;;		_LCDPutChar
  2902 ;;		_LCDPutInst
  2903 ;;		_LCDPutStr
  2904 ;;		___awdiv
  2905 ;;		___awmod
  2906 ;;		_disp_Clock
  2907 ;;		_handle_Time
  2908 ;; This function is called by:
  2909 ;;		_main
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           	psect	text8
  2914  005DBA                     __ptext8:
  2915                           	opt callstack 0
  2916  005DBA                     _state_clock:
  2917                           	opt callstack 22
  2918  005DBA                     
  2919                           ;State_Clock.c: 70:     LCDPutInst(0x80);
  2920  005DBA  0E80               	movlw	128
  2921  005DBC  ECD3  F031         	call	_LCDPutInst
  2922  005DC0                     
  2923                           ;State_Clock.c: 71:     LCDPutStr("Clock   RA5=Next");
  2924  005DC0  0EC1               	movlw	low STR_5
  2925  005DC2  6E10               	movwf	LCDPutStr@ptr^0,c
  2926  005DC4  0E10               	movlw	high STR_5
  2927  005DC6  6E11               	movwf	(LCDPutStr@ptr+1)^0,c
  2928  005DC8  ECEB  F032         	call	_LCDPutStr	;wreg free
  2929  005DCC                     
  2930                           ;State_Clock.c: 72:     disp_Clock();
  2931  005DCC  ECA6  F02F         	call	_disp_Clock	;wreg free
  2932                           
  2933                           ;State_Clock.c: 73:     while(state == STATE_CLOCK) {
  2934  005DD0  EF3B  F02F         	goto	l434
  2935  005DD4                     l435:
  2936                           
  2937                           ;State_Clock.c: 74:         LATD = ledValue;
  2938  005DD4  C055  FF8C         	movff	_ledValue,3980	;volatile
  2939  005DD8                     
  2940                           ;State_Clock.c: 75:         if(buttonRA5) {
  2941  005DD8  0100               	movlb	0	; () banked
  2942  005DDA  51CE               	movf	_buttonRA5& (0+255),w,b
  2943  005DDC  B4D8               	btfsc	status,2,c
  2944  005DDE  EFF3  F02E         	goto	u4661
  2945  005DE2  EFF5  F02E         	goto	u4660
  2946  005DE6                     u4661:
  2947  005DE6  EFFB  F02E         	goto	l5198
  2948  005DEA                     u4660:
  2949  005DEA                     
  2950                           ; BSR set to: 0
  2951                           ;State_Clock.c: 76:             buttonRA5 = 0;
  2952  005DEA  0E00               	movlw	0
  2953  005DEC  6FCE               	movwf	_buttonRA5& (0+255),b
  2954                           
  2955                           ;State_Clock.c: 77:             state = STATE_MOD_HOUR;
  2956  005DEE  0E01               	movlw	1
  2957  005DF0  6E56               	movwf	_state^0,c	;volatile
  2958  005DF2  EF43  F02F         	goto	l437
  2959  005DF6                     l5198:
  2960                           
  2961                           ; BSR set to: 0
  2962                           ;State_Clock.c: 80:         if(second_flag == 1) {
  2963  005DF6  05CC               	decf	_second_flag& (0+255),w,b
  2964  005DF8  A4D8               	btfss	status,2,c
  2965  005DFA  EF01  F02F         	goto	u4671
  2966  005DFE  EF03  F02F         	goto	u4670
  2967  005E02                     u4671:
  2968  005E02  EF3B  F02F         	goto	l434
  2969  005E06                     u4670:
  2970  005E06                     
  2971                           ; BSR set to: 0
  2972                           ;State_Clock.c: 81:             sec++;
  2973  005E06  2A52               	incf	_sec^0,f,c	;volatile
  2974  005E08                     
  2975                           ; BSR set to: 0
  2976                           ;State_Clock.c: 82:             LCDMoveCursor(1, 6);
  2977  005E08  0E06               	movlw	6
  2978  005E0A  6E10               	movwf	LCDMoveCursor@pos^0,c
  2979  005E0C  0E01               	movlw	1
  2980  005E0E  EC0A  F033         	call	_LCDMoveCursor
  2981  005E12                     
  2982                           ;State_Clock.c: 83:             LCDPutChar(sec/10+'0');
  2983  005E12  C052  F009         	movff	_sec,___awdiv@dividend	;volatile
  2984  005E16  6A0A               	clrf	(___awdiv@dividend+1)^0,c
  2985  005E18  0E00               	movlw	0
  2986  005E1A  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  2987  005E1C  0E0A               	movlw	10
  2988  005E1E  6E0B               	movwf	___awdiv@divisor^0,c
  2989  005E20  EC44  F02F         	call	___awdiv	;wreg free
  2990  005E24  5009               	movf	?___awdiv^0,w,c
  2991  005E26  0F30               	addlw	48
  2992  005E28  ECA0  F031         	call	_LCDPutChar
  2993  005E2C                     
  2994                           ;State_Clock.c: 84:             LCDPutChar(sec%10+'0');
  2995  005E2C  C052  F009         	movff	_sec,___awmod@dividend	;volatile
  2996  005E30  6A0A               	clrf	(___awmod@dividend+1)^0,c
  2997  005E32  0E00               	movlw	0
  2998  005E34  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2999  005E36  0E0A               	movlw	10
  3000  005E38  6E0B               	movwf	___awmod@divisor^0,c
  3001  005E3A  EC04  F030         	call	___awmod	;wreg free
  3002  005E3E  5009               	movf	?___awmod^0,w,c
  3003  005E40  0F30               	addlw	48
  3004  005E42  ECA0  F031         	call	_LCDPutChar
  3005  005E46                     
  3006                           ;State_Clock.c: 85:             handle_Time();
  3007  005E46  EC0F  F02C         	call	_handle_Time	;wreg free
  3008  005E4A                     
  3009                           ;State_Clock.c: 86:             ledValue = (ledValue == 0) ? 255 : 0;
  3010  005E4A  5055               	movf	_ledValue^0,w,c
  3011  005E4C  B4D8               	btfsc	status,2,c
  3012  005E4E  EF2B  F02F         	goto	u4681
  3013  005E52  EF2D  F02F         	goto	u4680
  3014  005E56                     u4681:
  3015  005E56  EF33  F02F         	goto	l5214
  3016  005E5A                     u4680:
  3017  005E5A  0E00               	movlw	0
  3018  005E5C  6E16               	movwf	(_state_clock$731+1)^0,c
  3019  005E5E  0E00               	movlw	0
  3020  005E60  6E15               	movwf	_state_clock$731^0,c
  3021  005E62  EF36  F02F         	goto	l5216
  3022  005E66                     l5214:
  3023  005E66  0E00               	movlw	0
  3024  005E68  6E16               	movwf	(_state_clock$731+1)^0,c
  3025  005E6A  6815               	setf	_state_clock$731^0,c
  3026  005E6C                     l5216:
  3027  005E6C  C015  F055         	movff	_state_clock$731,_ledValue
  3028                           
  3029                           ;State_Clock.c: 87:             second_flag = 0;
  3030  005E70  0E00               	movlw	0
  3031  005E72  0100               	movlb	0	; () banked
  3032  005E74  6FCC               	movwf	_second_flag& (0+255),b
  3033  005E76                     l434:
  3034                           
  3035                           ;State_Clock.c: 73:     while(state == STATE_CLOCK) {
  3036  005E76  5056               	movf	_state^0,w,c	;volatile
  3037  005E78  B4D8               	btfsc	status,2,c
  3038  005E7A  EF41  F02F         	goto	u4691
  3039  005E7E  EF43  F02F         	goto	u4690
  3040  005E82                     u4691:
  3041  005E82  EFEA  F02E         	goto	l435
  3042  005E86                     u4690:
  3043  005E86                     l437:
  3044  005E86  0012               	return		;funcret
  3045  005E88                     __end_of_state_clock:
  3046                           	opt callstack 0
  3047                           
  3048 ;; *************** function _handle_Time *****************
  3049 ;; Defined at:
  3050 ;;		line 4 in file "State_Clock.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;		None
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;		None
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  1    wreg      void 
  3057 ;; Registers used:
  3058 ;;		wreg, status,2, status,0, cstack
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3068 ;;Total ram usage:        0 bytes
  3069 ;; Hardware stack levels used:    1
  3070 ;; Hardware stack levels required when called:    7
  3071 ;; This function calls:
  3072 ;;		_LCDMoveCursor
  3073 ;;		_LCDPutChar
  3074 ;;		___awdiv
  3075 ;;		___awmod
  3076 ;; This function is called by:
  3077 ;;		_state_clock
  3078 ;;		_state_mod_hour
  3079 ;;		_state_mod_minute
  3080 ;;		_state_mod_second
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           	psect	text9
  3085  00581E                     __ptext9:
  3086                           	opt callstack 0
  3087  00581E                     _handle_Time:
  3088                           	opt callstack 22
  3089  00581E                     
  3090                           ;State_Clock.c: 5:     if (sec > 59) {
  3091  00581E  0E3B               	movlw	59
  3092  005820  6452               	cpfsgt	_sec^0,c	;volatile
  3093  005822  EF15  F02C         	goto	u4591
  3094  005826  EF17  F02C         	goto	u4590
  3095  00582A                     u4591:
  3096  00582A  EF58  F02C         	goto	l5092
  3097  00582E                     u4590:
  3098  00582E                     
  3099                           ;State_Clock.c: 6:         sec = 0;
  3100  00582E  0E00               	movlw	0
  3101  005830  6E52               	movwf	_sec^0,c	;volatile
  3102  005832                     
  3103                           ;State_Clock.c: 7:         min++;
  3104  005832  2A53               	incf	_min^0,f,c	;volatile
  3105  005834                     
  3106                           ;State_Clock.c: 8:         LCDMoveCursor(1, 6);
  3107  005834  0E06               	movlw	6
  3108  005836  6E10               	movwf	LCDMoveCursor@pos^0,c
  3109  005838  0E01               	movlw	1
  3110  00583A  EC0A  F033         	call	_LCDMoveCursor
  3111  00583E                     
  3112                           ;State_Clock.c: 9:         LCDPutChar(sec/10+'0');
  3113  00583E  C052  F009         	movff	_sec,___awdiv@dividend	;volatile
  3114  005842  6A0A               	clrf	(___awdiv@dividend+1)^0,c
  3115  005844  0E00               	movlw	0
  3116  005846  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  3117  005848  0E0A               	movlw	10
  3118  00584A  6E0B               	movwf	___awdiv@divisor^0,c
  3119  00584C  EC44  F02F         	call	___awdiv	;wreg free
  3120  005850  5009               	movf	?___awdiv^0,w,c
  3121  005852  0F30               	addlw	48
  3122  005854  ECA0  F031         	call	_LCDPutChar
  3123  005858                     
  3124                           ;State_Clock.c: 10:         LCDPutChar(sec%10+'0');
  3125  005858  C052  F009         	movff	_sec,___awmod@dividend	;volatile
  3126  00585C  6A0A               	clrf	(___awmod@dividend+1)^0,c
  3127  00585E  0E00               	movlw	0
  3128  005860  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3129  005862  0E0A               	movlw	10
  3130  005864  6E0B               	movwf	___awmod@divisor^0,c
  3131  005866  EC04  F030         	call	___awmod	;wreg free
  3132  00586A  5009               	movf	?___awmod^0,w,c
  3133  00586C  0F30               	addlw	48
  3134  00586E  ECA0  F031         	call	_LCDPutChar
  3135  005872                     
  3136                           ;State_Clock.c: 11:         LCDMoveCursor(1, 3);
  3137  005872  0E03               	movlw	3
  3138  005874  6E10               	movwf	LCDMoveCursor@pos^0,c
  3139  005876  0E01               	movlw	1
  3140  005878  EC0A  F033         	call	_LCDMoveCursor
  3141  00587C                     
  3142                           ;State_Clock.c: 12:         LCDPutChar(min/10+'0');
  3143  00587C  C053  F009         	movff	_min,___awdiv@dividend	;volatile
  3144  005880  6A0A               	clrf	(___awdiv@dividend+1)^0,c
  3145  005882  0E00               	movlw	0
  3146  005884  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  3147  005886  0E0A               	movlw	10
  3148  005888  6E0B               	movwf	___awdiv@divisor^0,c
  3149  00588A  EC44  F02F         	call	___awdiv	;wreg free
  3150  00588E  5009               	movf	?___awdiv^0,w,c
  3151  005890  0F30               	addlw	48
  3152  005892  ECA0  F031         	call	_LCDPutChar
  3153  005896                     
  3154                           ;State_Clock.c: 13:         LCDPutChar(min%10+'0');
  3155  005896  C053  F009         	movff	_min,___awmod@dividend	;volatile
  3156  00589A  6A0A               	clrf	(___awmod@dividend+1)^0,c
  3157  00589C  0E00               	movlw	0
  3158  00589E  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3159  0058A0  0E0A               	movlw	10
  3160  0058A2  6E0B               	movwf	___awmod@divisor^0,c
  3161  0058A4  EC04  F030         	call	___awmod	;wreg free
  3162  0058A8  5009               	movf	?___awmod^0,w,c
  3163  0058AA  0F30               	addlw	48
  3164  0058AC  ECA0  F031         	call	_LCDPutChar
  3165  0058B0                     l5092:
  3166                           
  3167                           ;State_Clock.c: 15:     if (min > 59) {
  3168  0058B0  0E3B               	movlw	59
  3169  0058B2  6453               	cpfsgt	_min^0,c	;volatile
  3170  0058B4  EF5E  F02C         	goto	u4601
  3171  0058B8  EF60  F02C         	goto	u4600
  3172  0058BC                     u4601:
  3173  0058BC  EFA1  F02C         	goto	l5110
  3174  0058C0                     u4600:
  3175  0058C0                     
  3176                           ;State_Clock.c: 16:         min = 0;
  3177  0058C0  0E00               	movlw	0
  3178  0058C2  6E53               	movwf	_min^0,c	;volatile
  3179  0058C4                     
  3180                           ;State_Clock.c: 17:         hr++;
  3181  0058C4  2A54               	incf	_hr^0,f,c	;volatile
  3182  0058C6                     
  3183                           ;State_Clock.c: 18:         LCDMoveCursor(1, 3);
  3184  0058C6  0E03               	movlw	3
  3185  0058C8  6E10               	movwf	LCDMoveCursor@pos^0,c
  3186  0058CA  0E01               	movlw	1
  3187  0058CC  EC0A  F033         	call	_LCDMoveCursor
  3188  0058D0                     
  3189                           ;State_Clock.c: 19:         LCDPutChar(min/10+'0');
  3190  0058D0  C053  F009         	movff	_min,___awdiv@dividend	;volatile
  3191  0058D4  6A0A               	clrf	(___awdiv@dividend+1)^0,c
  3192  0058D6  0E00               	movlw	0
  3193  0058D8  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  3194  0058DA  0E0A               	movlw	10
  3195  0058DC  6E0B               	movwf	___awdiv@divisor^0,c
  3196  0058DE  EC44  F02F         	call	___awdiv	;wreg free
  3197  0058E2  5009               	movf	?___awdiv^0,w,c
  3198  0058E4  0F30               	addlw	48
  3199  0058E6  ECA0  F031         	call	_LCDPutChar
  3200  0058EA                     
  3201                           ;State_Clock.c: 20:         LCDPutChar(min%10+'0');
  3202  0058EA  C053  F009         	movff	_min,___awmod@dividend	;volatile
  3203  0058EE  6A0A               	clrf	(___awmod@dividend+1)^0,c
  3204  0058F0  0E00               	movlw	0
  3205  0058F2  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3206  0058F4  0E0A               	movlw	10
  3207  0058F6  6E0B               	movwf	___awmod@divisor^0,c
  3208  0058F8  EC04  F030         	call	___awmod	;wreg free
  3209  0058FC  5009               	movf	?___awmod^0,w,c
  3210  0058FE  0F30               	addlw	48
  3211  005900  ECA0  F031         	call	_LCDPutChar
  3212  005904                     
  3213                           ;State_Clock.c: 21:         LCDMoveCursor(1, 0);
  3214  005904  0E00               	movlw	0
  3215  005906  6E10               	movwf	LCDMoveCursor@pos^0,c
  3216  005908  0E01               	movlw	1
  3217  00590A  EC0A  F033         	call	_LCDMoveCursor
  3218  00590E                     
  3219                           ;State_Clock.c: 22:         LCDPutChar(hr/10+'0');
  3220  00590E  C054  F009         	movff	_hr,___awdiv@dividend	;volatile
  3221  005912  6A0A               	clrf	(___awdiv@dividend+1)^0,c
  3222  005914  0E00               	movlw	0
  3223  005916  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  3224  005918  0E0A               	movlw	10
  3225  00591A  6E0B               	movwf	___awdiv@divisor^0,c
  3226  00591C  EC44  F02F         	call	___awdiv	;wreg free
  3227  005920  5009               	movf	?___awdiv^0,w,c
  3228  005922  0F30               	addlw	48
  3229  005924  ECA0  F031         	call	_LCDPutChar
  3230  005928                     
  3231                           ;State_Clock.c: 23:         LCDPutChar(hr%10+'0');
  3232  005928  C054  F009         	movff	_hr,___awmod@dividend	;volatile
  3233  00592C  6A0A               	clrf	(___awmod@dividend+1)^0,c
  3234  00592E  0E00               	movlw	0
  3235  005930  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3236  005932  0E0A               	movlw	10
  3237  005934  6E0B               	movwf	___awmod@divisor^0,c
  3238  005936  EC04  F030         	call	___awmod	;wreg free
  3239  00593A  5009               	movf	?___awmod^0,w,c
  3240  00593C  0F30               	addlw	48
  3241  00593E  ECA0  F031         	call	_LCDPutChar
  3242  005942                     l5110:
  3243                           
  3244                           ;State_Clock.c: 25:     if (hr > 23 ) {
  3245  005942  0E17               	movlw	23
  3246  005944  6454               	cpfsgt	_hr^0,c	;volatile
  3247  005946  EFA7  F02C         	goto	u4611
  3248  00594A  EFA9  F02C         	goto	u4610
  3249  00594E                     u4611:
  3250  00594E  EFCA  F02C         	goto	l419
  3251  005952                     u4610:
  3252  005952                     
  3253                           ;State_Clock.c: 26:         hr = 0;
  3254  005952  0E00               	movlw	0
  3255  005954  6E54               	movwf	_hr^0,c	;volatile
  3256  005956                     
  3257                           ;State_Clock.c: 27:         LCDMoveCursor(1, 0);
  3258  005956  0E00               	movlw	0
  3259  005958  6E10               	movwf	LCDMoveCursor@pos^0,c
  3260  00595A  0E01               	movlw	1
  3261  00595C  EC0A  F033         	call	_LCDMoveCursor
  3262  005960                     
  3263                           ;State_Clock.c: 28:         LCDPutChar(hr/10+'0');
  3264  005960  C054  F009         	movff	_hr,___awdiv@dividend	;volatile
  3265  005964  6A0A               	clrf	(___awdiv@dividend+1)^0,c
  3266  005966  0E00               	movlw	0
  3267  005968  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  3268  00596A  0E0A               	movlw	10
  3269  00596C  6E0B               	movwf	___awdiv@divisor^0,c
  3270  00596E  EC44  F02F         	call	___awdiv	;wreg free
  3271  005972  5009               	movf	?___awdiv^0,w,c
  3272  005974  0F30               	addlw	48
  3273  005976  ECA0  F031         	call	_LCDPutChar
  3274  00597A                     
  3275                           ;State_Clock.c: 29:         LCDPutChar(hr%10+'0');
  3276  00597A  C054  F009         	movff	_hr,___awmod@dividend	;volatile
  3277  00597E  6A0A               	clrf	(___awmod@dividend+1)^0,c
  3278  005980  0E00               	movlw	0
  3279  005982  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3280  005984  0E0A               	movlw	10
  3281  005986  6E0B               	movwf	___awmod@divisor^0,c
  3282  005988  EC04  F030         	call	___awmod	;wreg free
  3283  00598C  5009               	movf	?___awmod^0,w,c
  3284  00598E  0F30               	addlw	48
  3285  005990  ECA0  F031         	call	_LCDPutChar
  3286  005994                     l419:
  3287  005994  0012               	return		;funcret
  3288  005996                     __end_of_handle_Time:
  3289                           	opt callstack 0
  3290                           
  3291 ;; *************** function _LCDMoveCursor *****************
  3292 ;; Defined at:
  3293 ;;		line 204 in file "SPI_LCD.c"
  3294 ;; Parameters:    Size  Location     Type
  3295 ;;  line            1    wreg     unsigned char 
  3296 ;;  pos             1   15[COMRAM] unsigned char 
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;  line            1   16[COMRAM] unsigned char 
  3299 ;;  position        1   19[COMRAM] unsigned char 
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  1    wreg      void 
  3302 ;; Registers used:
  3303 ;;		wreg, status,2, status,0, cstack
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3309 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3310 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3312 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3313 ;;Total ram usage:        5 bytes
  3314 ;; Hardware stack levels used:    1
  3315 ;; Hardware stack levels required when called:    6
  3316 ;; This function calls:
  3317 ;;		_LCDPutInst
  3318 ;; This function is called by:
  3319 ;;		_LCDPrint
  3320 ;;		_handle_Time
  3321 ;;		_state_clock
  3322 ;;		_state_mod_hour
  3323 ;;		_state_mod_minute
  3324 ;;		_state_mod_second
  3325 ;;		_state_stop_watch
  3326 ;; This function uses a non-reentrant model
  3327 ;;
  3328                           
  3329                           	psect	text10
  3330  006614                     __ptext10:
  3331                           	opt callstack 0
  3332  006614                     _LCDMoveCursor:
  3333                           	opt callstack 23
  3334                           
  3335                           ;incstack = 0
  3336                           ;LCDMoveCursor@line stored from wreg
  3337  006614  6E11               	movwf	LCDMoveCursor@line^0,c
  3338  006616                     
  3339                           ;SPI_LCD.c: 205:     unsigned char position = (line == 0) ? (128 + pos) : (192 + pos);
  3340  006616  5011               	movf	LCDMoveCursor@line^0,w,c
  3341  006618  B4D8               	btfsc	status,2,c
  3342  00661A  EF11  F033         	goto	u4361
  3343  00661E  EF13  F033         	goto	u4360
  3344  006622                     u4361:
  3345  006622  EF1B  F033         	goto	l4878
  3346  006626                     u4360:
  3347  006626  0EC0               	movlw	192
  3348  006628  2410               	addwf	LCDMoveCursor@pos^0,w,c
  3349  00662A  6E12               	movwf	_LCDMoveCursor$654^0,c
  3350  00662C  6A13               	clrf	(_LCDMoveCursor$654+1)^0,c
  3351  00662E  0E00               	movlw	0
  3352  006630  2213               	addwfc	(_LCDMoveCursor$654+1)^0,f,c
  3353  006632  EF21  F033         	goto	l4880
  3354  006636                     l4878:
  3355  006636  0E80               	movlw	128
  3356  006638  2410               	addwf	LCDMoveCursor@pos^0,w,c
  3357  00663A  6E12               	movwf	_LCDMoveCursor$654^0,c
  3358  00663C  6A13               	clrf	(_LCDMoveCursor$654+1)^0,c
  3359  00663E  0E00               	movlw	0
  3360  006640  2213               	addwfc	(_LCDMoveCursor$654+1)^0,f,c
  3361  006642                     l4880:
  3362  006642  C012  F014         	movff	_LCDMoveCursor$654,LCDMoveCursor@position
  3363  006646                     
  3364                           ;SPI_LCD.c: 206:     LCDPutInst(position);
  3365  006646  5014               	movf	LCDMoveCursor@position^0,w,c
  3366  006648  ECD3  F031         	call	_LCDPutInst
  3367  00664C  0012               	return		;funcret
  3368  00664E                     __end_of_LCDMoveCursor:
  3369                           	opt callstack 0
  3370                           
  3371 ;; *************** function _disp_Clock *****************
  3372 ;; Defined at:
  3373 ;;		line 33 in file "State_Clock.c"
  3374 ;; Parameters:    Size  Location     Type
  3375 ;;		None
  3376 ;; Auto vars:     Size  Location     Type
  3377 ;;		None
  3378 ;; Return value:  Size  Location     Type
  3379 ;;                  1    wreg      void 
  3380 ;; Registers used:
  3381 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3382 ;; Tracked objects:
  3383 ;;		On entry : 0/0
  3384 ;;		On exit  : 0/0
  3385 ;;		Unchanged: 0/0
  3386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3391 ;;Total ram usage:        0 bytes
  3392 ;; Hardware stack levels used:    1
  3393 ;; Hardware stack levels required when called:    7
  3394 ;; This function calls:
  3395 ;;		_LCDPutChar
  3396 ;;		_LCDPutInst
  3397 ;;		_LCDPutStr
  3398 ;;		___awdiv
  3399 ;;		___awmod
  3400 ;; This function is called by:
  3401 ;;		_state_clock
  3402 ;;		_state_mod_hour
  3403 ;;		_state_mod_minute
  3404 ;;		_state_mod_second
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           	psect	text11
  3409  005F4C                     __ptext11:
  3410                           	opt callstack 0
  3411  005F4C                     _disp_Clock:
  3412                           	opt callstack 22
  3413  005F4C                     
  3414                           ;State_Clock.c: 35:     LCDPutInst(0xC0);
  3415  005F4C  0EC0               	movlw	192
  3416  005F4E  ECD3  F031         	call	_LCDPutInst
  3417                           
  3418                           ;State_Clock.c: 36:     LCDPutChar(hr/10+'0');
  3419  005F52  C054  F009         	movff	_hr,___awdiv@dividend	;volatile
  3420  005F56  6A0A               	clrf	(___awdiv@dividend+1)^0,c
  3421  005F58  0E00               	movlw	0
  3422  005F5A  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  3423  005F5C  0E0A               	movlw	10
  3424  005F5E  6E0B               	movwf	___awdiv@divisor^0,c
  3425  005F60  EC44  F02F         	call	___awdiv	;wreg free
  3426  005F64  5009               	movf	?___awdiv^0,w,c
  3427  005F66  0F30               	addlw	48
  3428  005F68  ECA0  F031         	call	_LCDPutChar
  3429                           
  3430                           ;State_Clock.c: 37:     LCDPutChar(hr%10+'0');
  3431  005F6C  C054  F009         	movff	_hr,___awmod@dividend	;volatile
  3432  005F70  6A0A               	clrf	(___awmod@dividend+1)^0,c
  3433  005F72  0E00               	movlw	0
  3434  005F74  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3435  005F76  0E0A               	movlw	10
  3436  005F78  6E0B               	movwf	___awmod@divisor^0,c
  3437  005F7A  EC04  F030         	call	___awmod	;wreg free
  3438  005F7E  5009               	movf	?___awmod^0,w,c
  3439  005F80  0F30               	addlw	48
  3440  005F82  ECA0  F031         	call	_LCDPutChar
  3441                           
  3442                           ;State_Clock.c: 38:     LCDPutChar(':');
  3443  005F86  0E3A               	movlw	58
  3444  005F88  ECA0  F031         	call	_LCDPutChar
  3445                           
  3446                           ;State_Clock.c: 39:     LCDPutChar(min/10+'0');
  3447  005F8C  C053  F009         	movff	_min,___awdiv@dividend	;volatile
  3448  005F90  6A0A               	clrf	(___awdiv@dividend+1)^0,c
  3449  005F92  0E00               	movlw	0
  3450  005F94  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  3451  005F96  0E0A               	movlw	10
  3452  005F98  6E0B               	movwf	___awdiv@divisor^0,c
  3453  005F9A  EC44  F02F         	call	___awdiv	;wreg free
  3454  005F9E  5009               	movf	?___awdiv^0,w,c
  3455  005FA0  0F30               	addlw	48
  3456  005FA2  ECA0  F031         	call	_LCDPutChar
  3457                           
  3458                           ;State_Clock.c: 40:     LCDPutChar(min%10+'0');
  3459  005FA6  C053  F009         	movff	_min,___awmod@dividend	;volatile
  3460  005FAA  6A0A               	clrf	(___awmod@dividend+1)^0,c
  3461  005FAC  0E00               	movlw	0
  3462  005FAE  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3463  005FB0  0E0A               	movlw	10
  3464  005FB2  6E0B               	movwf	___awmod@divisor^0,c
  3465  005FB4  EC04  F030         	call	___awmod	;wreg free
  3466  005FB8  5009               	movf	?___awmod^0,w,c
  3467  005FBA  0F30               	addlw	48
  3468  005FBC  ECA0  F031         	call	_LCDPutChar
  3469                           
  3470                           ;State_Clock.c: 41:     LCDPutChar(':');
  3471  005FC0  0E3A               	movlw	58
  3472  005FC2  ECA0  F031         	call	_LCDPutChar
  3473                           
  3474                           ;State_Clock.c: 42:     LCDPutChar(sec/10+'0');
  3475  005FC6  C052  F009         	movff	_sec,___awdiv@dividend	;volatile
  3476  005FCA  6A0A               	clrf	(___awdiv@dividend+1)^0,c
  3477  005FCC  0E00               	movlw	0
  3478  005FCE  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  3479  005FD0  0E0A               	movlw	10
  3480  005FD2  6E0B               	movwf	___awdiv@divisor^0,c
  3481  005FD4  EC44  F02F         	call	___awdiv	;wreg free
  3482  005FD8  5009               	movf	?___awdiv^0,w,c
  3483  005FDA  0F30               	addlw	48
  3484  005FDC  ECA0  F031         	call	_LCDPutChar
  3485                           
  3486                           ;State_Clock.c: 43:     LCDPutChar(sec%10+'0');
  3487  005FE0  C052  F009         	movff	_sec,___awmod@dividend	;volatile
  3488  005FE4  6A0A               	clrf	(___awmod@dividend+1)^0,c
  3489  005FE6  0E00               	movlw	0
  3490  005FE8  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3491  005FEA  0E0A               	movlw	10
  3492  005FEC  6E0B               	movwf	___awmod@divisor^0,c
  3493  005FEE  EC04  F030         	call	___awmod	;wreg free
  3494  005FF2  5009               	movf	?___awmod^0,w,c
  3495  005FF4  0F30               	addlw	48
  3496  005FF6  ECA0  F031         	call	_LCDPutChar
  3497  005FFA                     
  3498                           ;State_Clock.c: 44:     LCDPutStr("       ");
  3499  005FFA  0ED3               	movlw	low (STR_10+1)
  3500  005FFC  6E10               	movwf	LCDPutStr@ptr^0,c
  3501  005FFE  0E10               	movlw	high (STR_10+1)
  3502  006000  6E11               	movwf	(LCDPutStr@ptr+1)^0,c
  3503  006002  ECEB  F032         	call	_LCDPutStr	;wreg free
  3504  006006  0012               	return		;funcret
  3505  006008                     __end_of_disp_Clock:
  3506                           	opt callstack 0
  3507                           
  3508 ;; *************** function ___awmod *****************
  3509 ;; Defined at:
  3510 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;  dividend        2    8[COMRAM] int 
  3513 ;;  divisor         2   10[COMRAM] int 
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;  sign            1   13[COMRAM] unsigned char 
  3516 ;;  counter         1   12[COMRAM] unsigned char 
  3517 ;; Return value:  Size  Location     Type
  3518 ;;                  2    8[COMRAM] int 
  3519 ;; Registers used:
  3520 ;;		wreg, status,2, status,0
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3526 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3527 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3529 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3530 ;;Total ram usage:        6 bytes
  3531 ;; Hardware stack levels used:    1
  3532 ;; Hardware stack levels required when called:    3
  3533 ;; This function calls:
  3534 ;;		Nothing
  3535 ;; This function is called by:
  3536 ;;		_handle_Time
  3537 ;;		_disp_Clock
  3538 ;;		_state_clock
  3539 ;;		_state_mod_hour
  3540 ;;		_state_mod_minute
  3541 ;;		_state_mod_second
  3542 ;;		_disp_Clock_SW
  3543 ;;		_state_stop_watch
  3544 ;; This function uses a non-reentrant model
  3545 ;;
  3546                           
  3547                           	psect	text12
  3548  006008                     __ptext12:
  3549                           	opt callstack 0
  3550  006008                     ___awmod:
  3551                           	opt callstack 25
  3552  006008  0E00               	movlw	0
  3553  00600A  6E0E               	movwf	___awmod@sign^0,c
  3554  00600C  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  3555  00600E  EF0D  F030         	goto	u4530
  3556  006012  EF0B  F030         	goto	u4531
  3557  006016                     u4531:
  3558  006016  EF13  F030         	goto	l5012
  3559  00601A                     u4530:
  3560  00601A  6C09               	negf	___awmod@dividend^0,c
  3561  00601C  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  3562  00601E  B0D8               	btfsc	status,0,c
  3563  006020  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  3564  006022  0E01               	movlw	1
  3565  006024  6E0E               	movwf	___awmod@sign^0,c
  3566  006026                     l5012:
  3567  006026  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  3568  006028  EF1A  F030         	goto	u4540
  3569  00602C  EF18  F030         	goto	u4541
  3570  006030                     u4541:
  3571  006030  EF1E  F030         	goto	l5016
  3572  006034                     u4540:
  3573  006034  6C0B               	negf	___awmod@divisor^0,c
  3574  006036  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  3575  006038  B0D8               	btfsc	status,0,c
  3576  00603A  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  3577  00603C                     l5016:
  3578  00603C  500B               	movf	___awmod@divisor^0,w,c
  3579  00603E  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  3580  006040  B4D8               	btfsc	status,2,c
  3581  006042  EF25  F030         	goto	u4551
  3582  006046  EF27  F030         	goto	u4550
  3583  00604A                     u4551:
  3584  00604A  EF4B  F030         	goto	l5032
  3585  00604E                     u4550:
  3586  00604E  0E01               	movlw	1
  3587  006050  6E0D               	movwf	___awmod@counter^0,c
  3588  006052  EF2F  F030         	goto	l5022
  3589  006056                     l5020:
  3590  006056  90D8               	bcf	status,0,c
  3591  006058  360B               	rlcf	___awmod@divisor^0,f,c
  3592  00605A  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  3593  00605C  2A0D               	incf	___awmod@counter^0,f,c
  3594  00605E                     l5022:
  3595  00605E  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  3596  006060  EF34  F030         	goto	u4561
  3597  006064  EF36  F030         	goto	u4560
  3598  006068                     u4561:
  3599  006068  EF2B  F030         	goto	l5020
  3600  00606C                     u4560:
  3601  00606C                     l5024:
  3602  00606C  500B               	movf	___awmod@divisor^0,w,c
  3603  00606E  5C09               	subwf	___awmod@dividend^0,w,c
  3604  006070  500C               	movf	(___awmod@divisor+1)^0,w,c
  3605  006072  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  3606  006074  A0D8               	btfss	status,0,c
  3607  006076  EF3F  F030         	goto	u4571
  3608  00607A  EF41  F030         	goto	u4570
  3609  00607E                     u4571:
  3610  00607E  EF45  F030         	goto	l5028
  3611  006082                     u4570:
  3612  006082  500B               	movf	___awmod@divisor^0,w,c
  3613  006084  5E09               	subwf	___awmod@dividend^0,f,c
  3614  006086  500C               	movf	(___awmod@divisor+1)^0,w,c
  3615  006088  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  3616  00608A                     l5028:
  3617  00608A  90D8               	bcf	status,0,c
  3618  00608C  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  3619  00608E  320B               	rrcf	___awmod@divisor^0,f,c
  3620  006090  2E0D               	decfsz	___awmod@counter^0,f,c
  3621  006092  EF36  F030         	goto	l5024
  3622  006096                     l5032:
  3623  006096  500E               	movf	___awmod@sign^0,w,c
  3624  006098  B4D8               	btfsc	status,2,c
  3625  00609A  EF51  F030         	goto	u4581
  3626  00609E  EF53  F030         	goto	u4580
  3627  0060A2                     u4581:
  3628  0060A2  EF57  F030         	goto	l5036
  3629  0060A6                     u4580:
  3630  0060A6  6C09               	negf	___awmod@dividend^0,c
  3631  0060A8  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  3632  0060AA  B0D8               	btfsc	status,0,c
  3633  0060AC  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  3634  0060AE                     l5036:
  3635  0060AE  C009  F009         	movff	___awmod@dividend,?___awmod
  3636  0060B2  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  3637  0060B6  0012               	return		;funcret
  3638  0060B8                     __end_of___awmod:
  3639                           	opt callstack 0
  3640                           
  3641 ;; *************** function _LCDPutStr *****************
  3642 ;; Defined at:
  3643 ;;		line 199 in file "SPI_LCD.c"
  3644 ;; Parameters:    Size  Location     Type
  3645 ;;  ptr             2   15[COMRAM] PTR const unsigned char 
  3646 ;;		 -> STR_10(9), STR_9(17), STR_8(17), STR_7(17), 
  3647 ;;		 -> STR_6(17), STR_5(17), STR_4(3), STR_3(3), 
  3648 ;;		 -> STR_2(3), STR_1(8), 
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;		None
  3651 ;; Return value:  Size  Location     Type
  3652 ;;                  1    wreg      void 
  3653 ;; Registers used:
  3654 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3655 ;; Tracked objects:
  3656 ;;		On entry : 0/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3660 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3663 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3664 ;;Total ram usage:        2 bytes
  3665 ;; Hardware stack levels used:    1
  3666 ;; Hardware stack levels required when called:    6
  3667 ;; This function calls:
  3668 ;;		_LCDPutChar
  3669 ;; This function is called by:
  3670 ;;		_LCDPrint
  3671 ;;		_disp_Clock
  3672 ;;		_state_clock
  3673 ;;		_state_mod_hour
  3674 ;;		_state_mod_minute
  3675 ;;		_state_mod_second
  3676 ;;		_state_stop_watch
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680                           	psect	text13
  3681  0065D6                     __ptext13:
  3682                           	opt callstack 0
  3683  0065D6                     _LCDPutStr:
  3684                           	opt callstack 23
  3685  0065D6                     
  3686                           ;SPI_LCD.c: 199: void LCDPutStr (const char *ptr);SPI_LCD.c: 200: {;SPI_LCD.c: 201:     
      +                          while(*ptr) LCDPutChar(*(ptr++));
  3687  0065D6  EFF9  F032         	goto	l4872
  3688  0065DA                     l4868:
  3689  0065DA  C010  FFF6         	movff	LCDPutStr@ptr,tblptrl
  3690  0065DE  C011  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
  3691  0065E2                     	if	0	;tblptru may be non-zero
  3692  0065E2                     	endif
  3693  0065E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3694  0065E2  0E00               	movlw	low (__mediumconst shr (0+16))
  3695  0065E4  6EF8               	movwf	tblptru,c
  3696  0065E6                     	endif
  3697  0065E6  0008               	tblrd		*
  3698  0065E8  50F5               	movf	tablat,w,c
  3699  0065EA  ECA0  F031         	call	_LCDPutChar
  3700  0065EE  4A10               	infsnz	LCDPutStr@ptr^0,f,c
  3701  0065F0  2A11               	incf	(LCDPutStr@ptr+1)^0,f,c
  3702  0065F2                     l4872:
  3703  0065F2  C010  FFF6         	movff	LCDPutStr@ptr,tblptrl
  3704  0065F6  C011  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
  3705  0065FA                     	if	0	;tblptru may be non-zero
  3706  0065FA                     	endif
  3707  0065FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3708  0065FA  0E00               	movlw	low (__mediumconst shr (0+16))
  3709  0065FC  6EF8               	movwf	tblptru,c
  3710  0065FE                     	endif
  3711  0065FE  0008               	tblrd		*
  3712  006600  50F5               	movf	tablat,w,c
  3713  006602  0900               	iorlw	0
  3714  006604  A4D8               	btfss	status,2,c
  3715  006606  EF07  F033         	goto	u4351
  3716  00660A  EF09  F033         	goto	u4350
  3717  00660E                     u4351:
  3718  00660E  EFED  F032         	goto	l4868
  3719  006612                     u4350:
  3720  006612  0012               	return		;funcret
  3721  006614                     __end_of_LCDPutStr:
  3722                           	opt callstack 0
  3723                           
  3724 ;; *************** function _LCDPutChar *****************
  3725 ;; Defined at:
  3726 ;;		line 161 in file "SPI_LCD.c"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;  ch              1    wreg     unsigned char 
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;  ch              1   14[COMRAM] unsigned char 
  3731 ;; Return value:  Size  Location     Type
  3732 ;;                  1    wreg      void 
  3733 ;; Registers used:
  3734 ;;		wreg, status,2, status,0, cstack
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3741 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3742 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3743 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3744 ;;Total ram usage:        2 bytes
  3745 ;; Hardware stack levels used:    1
  3746 ;; Hardware stack levels required when called:    5
  3747 ;; This function calls:
  3748 ;;		_WritePort_BBSPI
  3749 ;; This function is called by:
  3750 ;;		_LCDPutStr
  3751 ;;		_handle_Time
  3752 ;;		_disp_Clock
  3753 ;;		_state_clock
  3754 ;;		_state_mod_hour
  3755 ;;		_state_mod_minute
  3756 ;;		_state_mod_second
  3757 ;;		_disp_Clock_SW
  3758 ;;		_state_stop_watch
  3759 ;; This function uses a non-reentrant model
  3760 ;;
  3761                           
  3762                           	psect	text14
  3763  006340                     __ptext14:
  3764                           	opt callstack 0
  3765  006340                     _LCDPutChar:
  3766                           	opt callstack 23
  3767                           
  3768                           ;incstack = 0
  3769                           ;LCDPutChar@ch stored from wreg
  3770  006340  6E0F               	movwf	LCDPutChar@ch^0,c
  3771  006342                     
  3772                           ;SPI_LCD.c: 161: void LCDPutChar (unsigned char ch);SPI_LCD.c: 162: {;SPI_LCD.c: 163:   
      +                            _delay((unsigned long)((2)*(10000000/4000.0)));
  3773  006342  0E07               	movlw	7
  3774  006344  6E0E               	movwf	??_LCDPutChar^0,c
  3775  006346  0E7D               	movlw	125
  3776  006348                     u6017:
  3777  006348  2EE8               	decfsz	wreg,f,c
  3778  00634A  D7FE               	bra	u6017
  3779  00634C  2E0E               	decfsz	??_LCDPutChar^0,f,c
  3780  00634E  D7FC               	bra	u6017
  3781  006350  F000               	nop	
  3782  006352                     
  3783                           ;SPI_LCD.c: 164:     WritePort_BBSPI (0x12, 0x80);
  3784  006352  0E80               	movlw	128
  3785  006354  6E0C               	movwf	WritePort_BBSPI@a^0,c
  3786  006356  0E12               	movlw	18
  3787  006358  EC8D  F033         	call	_WritePort_BBSPI
  3788  00635C                     
  3789                           ;SPI_LCD.c: 165:     _delay((unsigned long)((1)*(10000000/4000.0)));
  3790  00635C  0E04               	movlw	4
  3791  00635E  6E0E               	movwf	??_LCDPutChar^0,c
  3792  006360  0E3E               	movlw	62
  3793  006362                     u6027:
  3794  006362  2EE8               	decfsz	wreg,f,c
  3795  006364  D7FE               	bra	u6027
  3796  006366  2E0E               	decfsz	??_LCDPutChar^0,f,c
  3797  006368  D7FC               	bra	u6027
  3798  00636A                     
  3799                           ;SPI_LCD.c: 166:     WritePort_BBSPI (0x13, ch);
  3800  00636A  C00F  F00C         	movff	LCDPutChar@ch,WritePort_BBSPI@a
  3801  00636E  0E13               	movlw	19
  3802  006370  EC8D  F033         	call	_WritePort_BBSPI
  3803  006374                     
  3804                           ;SPI_LCD.c: 167:     _delay((unsigned long)((1)*(10000000/4000.0)));
  3805  006374  0E04               	movlw	4
  3806  006376  6E0E               	movwf	??_LCDPutChar^0,c
  3807  006378  0E3E               	movlw	62
  3808  00637A                     u6037:
  3809  00637A  2EE8               	decfsz	wreg,f,c
  3810  00637C  D7FE               	bra	u6037
  3811  00637E  2E0E               	decfsz	??_LCDPutChar^0,f,c
  3812  006380  D7FC               	bra	u6037
  3813  006382                     
  3814                           ;SPI_LCD.c: 168:     WritePort_BBSPI (0x12, 0xC0);
  3815  006382  0EC0               	movlw	192
  3816  006384  6E0C               	movwf	WritePort_BBSPI@a^0,c
  3817  006386  0E12               	movlw	18
  3818  006388  EC8D  F033         	call	_WritePort_BBSPI
  3819  00638C                     
  3820                           ;SPI_LCD.c: 169:     _delay((unsigned long)((1)*(10000000/4000.0)));
  3821  00638C  0E04               	movlw	4
  3822  00638E  6E0E               	movwf	??_LCDPutChar^0,c
  3823  006390  0E3E               	movlw	62
  3824  006392                     u6047:
  3825  006392  2EE8               	decfsz	wreg,f,c
  3826  006394  D7FE               	bra	u6047
  3827  006396  2E0E               	decfsz	??_LCDPutChar^0,f,c
  3828  006398  D7FC               	bra	u6047
  3829  00639A                     
  3830                           ;SPI_LCD.c: 170:     WritePort_BBSPI (0x12, 0x00);
  3831  00639A  0E00               	movlw	0
  3832  00639C  6E0C               	movwf	WritePort_BBSPI@a^0,c
  3833  00639E  0E12               	movlw	18
  3834  0063A0  EC8D  F033         	call	_WritePort_BBSPI
  3835  0063A4  0012               	return		;funcret
  3836  0063A6                     __end_of_LCDPutChar:
  3837                           	opt callstack 0
  3838                           
  3839 ;; *************** function _SYSTEM_Initialize *****************
  3840 ;; Defined at:
  3841 ;;		line 3 in file "mcc.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;		None
  3844 ;; Auto vars:     Size  Location     Type
  3845 ;;		None
  3846 ;; Return value:  Size  Location     Type
  3847 ;;                  1    wreg      void 
  3848 ;; Registers used:
  3849 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3850 ;; Tracked objects:
  3851 ;;		On entry : 0/0
  3852 ;;		On exit  : 0/0
  3853 ;;		Unchanged: 0/0
  3854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3859 ;;Total ram usage:        0 bytes
  3860 ;; Hardware stack levels used:    1
  3861 ;; Hardware stack levels required when called:    8
  3862 ;; This function calls:
  3863 ;;		_LCDInit
  3864 ;;		_interrupt_init
  3865 ;;		_osc_init
  3866 ;;		_pin_init
  3867 ;;		_timer0_init
  3868 ;; This function is called by:
  3869 ;;		_main
  3870 ;; This function uses a non-reentrant model
  3871 ;;
  3872                           
  3873                           	psect	text15
  3874  006734                     __ptext15:
  3875                           	opt callstack 0
  3876  006734                     _SYSTEM_Initialize:
  3877                           	opt callstack 22
  3878  006734                     
  3879                           ;mcc.c: 5:     osc_init();
  3880  006734  ECBA  F033         	call	_osc_init	;wreg free
  3881                           
  3882                           ;mcc.c: 6:     pin_init();
  3883  006738  EC5D  F033         	call	_pin_init	;wreg free
  3884  00673C                     
  3885                           ;mcc.c: 7:     interrupt_init();
  3886  00673C  ECB5  F033         	call	_interrupt_init	;wreg free
  3887  006740                     
  3888                           ;mcc.c: 8:     timer0_init();
  3889  006740  ECAE  F033         	call	_timer0_init	;wreg free
  3890  006744                     
  3891                           ;mcc.c: 9:     LCDInit();
  3892  006744  EC06  F032         	call	_LCDInit	;wreg free
  3893  006748  0012               	return		;funcret
  3894  00674A                     __end_of_SYSTEM_Initialize:
  3895                           	opt callstack 0
  3896                           
  3897 ;; *************** function _timer0_init *****************
  3898 ;; Defined at:
  3899 ;;		line 19 in file "timer0_manager.c"
  3900 ;; Parameters:    Size  Location     Type
  3901 ;;		None
  3902 ;; Auto vars:     Size  Location     Type
  3903 ;;		None
  3904 ;; Return value:  Size  Location     Type
  3905 ;;                  1    wreg      void 
  3906 ;; Registers used:
  3907 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3908 ;; Tracked objects:
  3909 ;;		On entry : 0/0
  3910 ;;		On exit  : 0/0
  3911 ;;		Unchanged: 0/0
  3912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3917 ;;Total ram usage:        0 bytes
  3918 ;; Hardware stack levels used:    1
  3919 ;; Hardware stack levels required when called:    7
  3920 ;; This function calls:
  3921 ;;		_preCalculate
  3922 ;; This function is called by:
  3923 ;;		_SYSTEM_Initialize
  3924 ;; This function uses a non-reentrant model
  3925 ;;
  3926                           
  3927                           	psect	text16
  3928  00675C                     __ptext16:
  3929                           	opt callstack 0
  3930  00675C                     _timer0_init:
  3931                           	opt callstack 22
  3932  00675C                     
  3933                           ;timer0_manager.c: 20:     preCalculate();
  3934  00675C  EC6F  F02E         	call	_preCalculate	;wreg free
  3935  006760                     
  3936                           ;timer0_manager.c: 21:     TMR0L = counter_low;
  3937  006760  C0C3  FFD6         	movff	_counter_low,4054	;volatile
  3938  006764                     
  3939                           ;timer0_manager.c: 22:     TMR0H = counter_high;
  3940  006764  C0C1  FFD7         	movff	_counter_high,4055	;volatile
  3941  006768  0012               	return		;funcret
  3942  00676A                     __end_of_timer0_init:
  3943                           	opt callstack 0
  3944                           
  3945 ;; *************** function _preCalculate *****************
  3946 ;; Defined at:
  3947 ;;		line 5 in file "timer0_manager.c"
  3948 ;; Parameters:    Size  Location     Type
  3949 ;;		None
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;  temp            2   73[BANK0 ] unsigned int 
  3952 ;;  count_scaled    2   75[BANK0 ] int 
  3953 ;;  count           2   71[BANK0 ] int 
  3954 ;; Return value:  Size  Location     Type
  3955 ;;                  1    wreg      void 
  3956 ;; Registers used:
  3957 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3958 ;; Tracked objects:
  3959 ;;		On entry : 0/0
  3960 ;;		On exit  : 0/0
  3961 ;;		Unchanged: 0/0
  3962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3964 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3966 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3967 ;;Total ram usage:       10 bytes
  3968 ;; Hardware stack levels used:    1
  3969 ;; Hardware stack levels required when called:    6
  3970 ;; This function calls:
  3971 ;;		___awdiv
  3972 ;;		___flmul
  3973 ;;		___fltol
  3974 ;;		_powf
  3975 ;; This function is called by:
  3976 ;;		_timer0_init
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           	psect	text17
  3981  005CDE                     __ptext17:
  3982                           	opt callstack 0
  3983  005CDE                     _preCalculate:
  3984                           	opt callstack 22
  3985  005CDE                     
  3986                           ;timer0_manager.c: 6:     T0CON = 0b11000111;
  3987  005CDE  0EC7               	movlw	199
  3988  005CE0  6ED5               	movwf	213,c	;volatile
  3989  005CE2                     
  3990                           ;timer0_manager.c: 7:     int count = 10 * 2 * powf(10,3);
  3991  005CE2  0E00               	movlw	0
  3992  005CE4  0100               	movlb	0	; () banked
  3993  005CE6  6F8C               	movwf	powf@y& (0+255),b
  3994  005CE8  0E00               	movlw	0
  3995  005CEA  6F8D               	movwf	(powf@y+1)& (0+255),b
  3996  005CEC  0E40               	movlw	64
  3997  005CEE  6F8E               	movwf	(powf@y+2)& (0+255),b
  3998  005CF0  0E40               	movlw	64
  3999  005CF2  6F8F               	movwf	(powf@y+3)& (0+255),b
  4000  005CF4  0E00               	movlw	0
  4001  005CF6  6F88               	movwf	powf@x& (0+255),b
  4002  005CF8  0E00               	movlw	0
  4003  005CFA  6F89               	movwf	(powf@x+1)& (0+255),b
  4004  005CFC  0E20               	movlw	32
  4005  005CFE  6F8A               	movwf	(powf@x+2)& (0+255),b
  4006  005D00  0E41               	movlw	65
  4007  005D02  6F8B               	movwf	(powf@x+3)& (0+255),b
  4008  005D04  EC6E  F008         	call	_powf	;wreg free
  4009  005D08  C088  F0A3         	movff	?_powf,_preCalculate$1774
  4010  005D0C  C089  F0A4         	movff	?_powf+1,_preCalculate$1774+1
  4011  005D10  C08A  F0A5         	movff	?_powf+2,_preCalculate$1774+2
  4012  005D14  C08B  F0A6         	movff	?_powf+3,_preCalculate$1774+3
  4013  005D18                     
  4014                           ;timer0_manager.c: 7:     int count = 10 * 2 * powf(10,3);
  4015  005D18  0E00               	movlw	0
  4016  005D1A  6E1D               	movwf	___flmul@a^0,c
  4017  005D1C  0E00               	movlw	0
  4018  005D1E  6E1E               	movwf	(___flmul@a+1)^0,c
  4019  005D20  0EA0               	movlw	160
  4020  005D22  6E1F               	movwf	(___flmul@a+2)^0,c
  4021  005D24  0E41               	movlw	65
  4022  005D26  6E20               	movwf	(___flmul@a+3)^0,c
  4023  005D28  C0A3  F019         	movff	_preCalculate$1774,___flmul@b
  4024  005D2C  C0A4  F01A         	movff	_preCalculate$1774+1,___flmul@b+1
  4025  005D30  C0A5  F01B         	movff	_preCalculate$1774+2,___flmul@b+2
  4026  005D34  C0A6  F01C         	movff	_preCalculate$1774+3,___flmul@b+3
  4027  005D38  EC47  F022         	call	___flmul	;wreg free
  4028  005D3C  C019  F099         	movff	?___flmul,___fltol@f1
  4029  005D40  C01A  F09A         	movff	?___flmul+1,___fltol@f1+1
  4030  005D44  C01B  F09B         	movff	?___flmul+2,___fltol@f1+2
  4031  005D48  C01C  F09C         	movff	?___flmul+3,___fltol@f1+3
  4032  005D4C  EC69  F02D         	call	___fltol	;wreg free
  4033  005D50  C099  F0A7         	movff	?___fltol,preCalculate@count
  4034  005D54  C09A  F0A8         	movff	?___fltol+1,preCalculate@count+1
  4035  005D58                     
  4036                           ;timer0_manager.c: 8:     int count_scaled = count / 256;
  4037  005D58  C0A7  F009         	movff	preCalculate@count,___awdiv@dividend
  4038  005D5C  C0A8  F00A         	movff	preCalculate@count+1,___awdiv@dividend+1
  4039  005D60  0E01               	movlw	1
  4040  005D62  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  4041  005D64  0E00               	movlw	0
  4042  005D66  6E0B               	movwf	___awdiv@divisor^0,c
  4043  005D68  EC44  F02F         	call	___awdiv	;wreg free
  4044  005D6C  C009  F0AB         	movff	?___awdiv,preCalculate@count_scaled
  4045  005D70  C00A  F0AC         	movff	?___awdiv+1,preCalculate@count_scaled+1
  4046  005D74                     
  4047                           ;timer0_manager.c: 9:     if(count_scaled < 256) {
  4048  005D74  0100               	movlb	0	; () banked
  4049  005D76  BFAC               	btfsc	(preCalculate@count_scaled+1)& (0+255),7,b
  4050  005D78  EFC6  F02E         	goto	u6000
  4051  005D7C  05AC               	decf	(preCalculate@count_scaled+1)& (0+255),w,b
  4052  005D7E  B0D8               	btfsc	status,0,c
  4053  005D80  EFC4  F02E         	goto	u6001
  4054  005D84  EFC6  F02E         	goto	u6000
  4055  005D88                     u6001:
  4056  005D88  EFD0  F02E         	goto	l147
  4057  005D8C                     u6000:
  4058  005D8C                     
  4059                           ; BSR set to: 0
  4060                           ;timer0_manager.c: 10:         counter_low = 255 - count_scaled;
  4061  005D8C  51AB               	movf	preCalculate@count_scaled& (0+255),w,b
  4062  005D8E  08FF               	sublw	255
  4063  005D90  6FC3               	movwf	_counter_low& (0+255),b
  4064  005D92  51AC               	movf	(preCalculate@count_scaled+1)& (0+255),w,b
  4065  005D94  A0D8               	btfss	status,0,c
  4066  005D96  2AE8               	incf	wreg,f,c
  4067  005D98  0800               	sublw	0
  4068  005D9A  6FC4               	movwf	(_counter_low+1)& (0+255),b
  4069                           
  4070                           ;timer0_manager.c: 11:     } else {
  4071  005D9C  EFDC  F02E         	goto	l149
  4072  005DA0                     l147:
  4073                           
  4074                           ; BSR set to: 0
  4075                           ;timer0_manager.c: 12:         T0CONbits.T08BIT = 0;
  4076  005DA0  9CD5               	bcf	213,6,c	;volatile
  4077  005DA2                     
  4078                           ; BSR set to: 0
  4079                           ;timer0_manager.c: 13:         unsigned int temp = 65535 - count_scaled;
  4080  005DA2  1DAB               	comf	preCalculate@count_scaled& (0+255),w,b
  4081  005DA4  6FA9               	movwf	preCalculate@temp& (0+255),b
  4082  005DA6  1DAC               	comf	(preCalculate@count_scaled+1)& (0+255),w,b
  4083  005DA8  6FAA               	movwf	(preCalculate@temp+1)& (0+255),b
  4084  005DAA                     
  4085                           ; BSR set to: 0
  4086                           ;timer0_manager.c: 14:         counter_low = (unsigned short int)temp;
  4087  005DAA  C0A9  F0C3         	movff	preCalculate@temp,_counter_low
  4088  005DAE  C0AA  F0C4         	movff	preCalculate@temp+1,_counter_low+1
  4089  005DB2                     
  4090                           ; BSR set to: 0
  4091                           ;timer0_manager.c: 15:         counter_high = (unsigned short int)(temp >> 8);
  4092  005DB2  51AA               	movf	(preCalculate@temp+1)& (0+255),w,b
  4093  005DB4  6FC1               	movwf	_counter_high& (0+255),b
  4094  005DB6  6BC2               	clrf	(_counter_high+1)& (0+255),b
  4095  005DB8                     l149:
  4096                           
  4097                           ; BSR set to: 0
  4098  005DB8  0012               	return		;funcret
  4099  005DBA                     __end_of_preCalculate:
  4100                           	opt callstack 0
  4101                           
  4102 ;; *************** function _powf *****************
  4103 ;; Defined at:
  4104 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\powf.c"
  4105 ;; Parameters:    Size  Location     Type
  4106 ;;  x               4   40[BANK0 ] float 
  4107 ;;  y               4   44[BANK0 ] float 
  4108 ;; Auto vars:     Size  Location     Type
  4109 ;;  s2              4  140[BANK1 ] float 
  4110 ;;  s_h             4  108[BANK1 ] float 
  4111 ;;  t_h             4  104[BANK1 ] float 
  4112 ;;  t_l             4   52[BANK1 ] float 
  4113 ;;  s_l             4   48[BANK1 ] float 
  4114 ;;  __xc8_float_    4  184[BANK1 ] struct .
  4115 ;;  z               4  180[BANK1 ] float 
  4116 ;;  t               4  176[BANK1 ] float 
  4117 ;;  j               4  172[BANK1 ] long 
  4118 ;;  ix              4  168[BANK1 ] long 
  4119 ;;  k               4  160[BANK1 ] long 
  4120 ;;  p_h             4  156[BANK1 ] float 
  4121 ;;  is              4  148[BANK1 ] long 
  4122 ;;  iy              4  144[BANK1 ] long 
  4123 ;;  sn              4  136[BANK1 ] float 
  4124 ;;  t1              4  132[BANK1 ] float 
  4125 ;;  n               4  128[BANK1 ] long 
  4126 ;;  hy              4  124[BANK1 ] long 
  4127 ;;  v               4  120[BANK1 ] float 
  4128 ;;  u               4  116[BANK1 ] float 
  4129 ;;  ax              4  112[BANK1 ] float 
  4130 ;;  p_l             4  100[BANK1 ] float 
  4131 ;;  hx              4   96[BANK1 ] long 
  4132 ;;  s               4   92[BANK1 ] float 
  4133 ;;  yisint          4   80[BANK1 ] long 
  4134 ;;  r               4   76[BANK1 ] float 
  4135 ;;  w               4   68[BANK1 ] float 
  4136 ;;  i               4   44[BANK1 ] long 
  4137 ;;  y1              4   40[BANK1 ] float 
  4138 ;;  z_l             4   36[BANK1 ] float 
  4139 ;;  z_h             4   32[BANK1 ] float 
  4140 ;;  t2              4   28[BANK1 ] float 
  4141 ;; Return value:  Size  Location     Type
  4142 ;;                  4   40[BANK0 ] float 
  4143 ;; Registers used:
  4144 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4145 ;; Tracked objects:
  4146 ;;		On entry : 0/0
  4147 ;;		On exit  : 0/0
  4148 ;;		Unchanged: 0/0
  4149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4150 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4151 ;;      Locals:         0       0     188       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4152 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4153 ;;      Totals:         0      17     188       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4154 ;;Total ram usage:      205 bytes
  4155 ;; Hardware stack levels used:    1
  4156 ;; Hardware stack levels required when called:    5
  4157 ;; This function calls:
  4158 ;;		___fladd
  4159 ;;		___fldiv
  4160 ;;		___flge
  4161 ;;		___flmul
  4162 ;;		___flneg
  4163 ;;		___flsub
  4164 ;;		___xxtofl
  4165 ;;		_fabsf
  4166 ;;		_scalbnf
  4167 ;;		_sqrtf
  4168 ;; This function is called by:
  4169 ;;		_preCalculate
  4170 ;; This function uses a non-reentrant model
  4171 ;;
  4172                           
  4173                           	psect	text18
  4174  0010DC                     __ptext18:
  4175                           	opt callstack 0
  4176  0010DC                     _powf:
  4177                           	opt callstack 22
  4178  0010DC  C088  F1B8         	movff	powf@x,powf@__xc8_float_word
  4179  0010E0  C089  F1B9         	movff	powf@x+1,powf@__xc8_float_word+1
  4180  0010E4  C08A  F1BA         	movff	powf@x+2,powf@__xc8_float_word+2
  4181  0010E8  C08B  F1BB         	movff	powf@x+3,powf@__xc8_float_word+3
  4182  0010EC  C1B8  F160         	movff	powf@__xc8_float_word,powf@hx
  4183  0010F0  C1B9  F161         	movff	powf@__xc8_float_word+1,powf@hx+1
  4184  0010F4  C1BA  F162         	movff	powf@__xc8_float_word+2,powf@hx+2
  4185  0010F8  C1BB  F163         	movff	powf@__xc8_float_word+3,powf@hx+3
  4186  0010FC  C08C  F1B8         	movff	powf@y,powf@__xc8_float_word
  4187  001100  C08D  F1B9         	movff	powf@y+1,powf@__xc8_float_word+1
  4188  001104  C08E  F1BA         	movff	powf@y+2,powf@__xc8_float_word+2
  4189  001108  C08F  F1BB         	movff	powf@y+3,powf@__xc8_float_word+3
  4190  00110C  C1B8  F17C         	movff	powf@__xc8_float_word,powf@hy
  4191  001110  C1B9  F17D         	movff	powf@__xc8_float_word+1,powf@hy+1
  4192  001114  C1BA  F17E         	movff	powf@__xc8_float_word+2,powf@hy+2
  4193  001118  C1BB  F17F         	movff	powf@__xc8_float_word+3,powf@hy+3
  4194  00111C  0EFF               	movlw	255
  4195  00111E  0101               	movlb	1	; () banked
  4196  001120  1560               	andwf	powf@hx& (0+255),w,b
  4197  001122  6FA8               	movwf	powf@ix& (0+255),b
  4198  001124  0EFF               	movlw	255
  4199  001126  1561               	andwf	(powf@hx+1)& (0+255),w,b
  4200  001128  6FA9               	movwf	(powf@ix+1)& (0+255),b
  4201  00112A  0EFF               	movlw	255
  4202  00112C  1562               	andwf	(powf@hx+2)& (0+255),w,b
  4203  00112E  6FAA               	movwf	(powf@ix+2)& (0+255),b
  4204  001130  0E7F               	movlw	127
  4205  001132  1563               	andwf	(powf@hx+3)& (0+255),w,b
  4206  001134  6FAB               	movwf	(powf@ix+3)& (0+255),b
  4207  001136  0EFF               	movlw	255
  4208  001138  157C               	andwf	powf@hy& (0+255),w,b
  4209  00113A  6F90               	movwf	powf@iy& (0+255),b
  4210  00113C  0EFF               	movlw	255
  4211  00113E  157D               	andwf	(powf@hy+1)& (0+255),w,b
  4212  001140  6F91               	movwf	(powf@iy+1)& (0+255),b
  4213  001142  0EFF               	movlw	255
  4214  001144  157E               	andwf	(powf@hy+2)& (0+255),w,b
  4215  001146  6F92               	movwf	(powf@iy+2)& (0+255),b
  4216  001148  0E7F               	movlw	127
  4217  00114A  157F               	andwf	(powf@hy+3)& (0+255),w,b
  4218  00114C  6F93               	movwf	(powf@iy+3)& (0+255),b
  4219  00114E  5190               	movf	powf@iy& (0+255),w,b
  4220  001150  1191               	iorwf	(powf@iy+1)& (0+255),w,b
  4221  001152  1192               	iorwf	(powf@iy+2)& (0+255),w,b
  4222  001154  1193               	iorwf	(powf@iy+3)& (0+255),w,b
  4223  001156  A4D8               	btfss	status,2,c
  4224  001158  EFB0  F008         	goto	u5361
  4225  00115C  EFB2  F008         	goto	u5360
  4226  001160                     u5361:
  4227  001160  EFBD  F008         	goto	l5834
  4228  001164                     u5360:
  4229  001164                     
  4230                           ; BSR set to: 1
  4231  001164  0E00               	movlw	0
  4232  001166  0100               	movlb	0	; () banked
  4233  001168  6F88               	movwf	?_powf& (0+255),b
  4234  00116A  0E00               	movlw	0
  4235  00116C  6F89               	movwf	(?_powf+1)& (0+255),b
  4236  00116E  0E80               	movlw	128
  4237  001170  6F8A               	movwf	(?_powf+2)& (0+255),b
  4238  001172  0E3F               	movlw	63
  4239  001174  6F8B               	movwf	(?_powf+3)& (0+255),b
  4240  001176  EF86  F01D         	goto	l1435
  4241  00117A                     l5834:
  4242                           
  4243                           ; BSR set to: 1
  4244  00117A  0E80               	movlw	128
  4245  00117C  1962               	xorwf	(powf@hx+2)& (0+255),w,b
  4246  00117E  E109               	bnz	u5371
  4247  001180  0E3F               	movlw	63
  4248  001182  1963               	xorwf	(powf@hx+3)& (0+255),w,b
  4249  001184  1160               	iorwf	powf@hx& (0+255),w,b
  4250  001186  1161               	iorwf	(powf@hx+1)& (0+255),w,b
  4251  001188  A4D8               	btfss	status,2,c
  4252  00118A  EFC9  F008         	goto	u5371
  4253  00118E  EFCB  F008         	goto	u5370
  4254  001192                     u5371:
  4255  001192  EFD6  F008         	goto	l5840
  4256  001196                     u5370:
  4257  001196                     
  4258                           ; BSR set to: 1
  4259  001196  0E00               	movlw	0
  4260  001198  0100               	movlb	0	; () banked
  4261  00119A  6F88               	movwf	?_powf& (0+255),b
  4262  00119C  0E00               	movlw	0
  4263  00119E  6F89               	movwf	(?_powf+1)& (0+255),b
  4264  0011A0  0E80               	movlw	128
  4265  0011A2  6F8A               	movwf	(?_powf+2)& (0+255),b
  4266  0011A4  0E3F               	movlw	63
  4267  0011A6  6F8B               	movwf	(?_powf+3)& (0+255),b
  4268  0011A8  EF86  F01D         	goto	l1435
  4269  0011AC                     l5840:
  4270                           
  4271                           ; BSR set to: 1
  4272  0011AC  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  4273  0011AE  EFE7  F008         	goto	u5380
  4274  0011B2  05A8               	decf	powf@ix& (0+255),w,b
  4275  0011B4  0E00               	movlw	0
  4276  0011B6  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
  4277  0011B8  0E80               	movlw	128
  4278  0011BA  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
  4279  0011BC  0E7F               	movlw	127
  4280  0011BE  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
  4281  0011C0  B0D8               	btfsc	status,0,c
  4282  0011C2  EFE5  F008         	goto	u5381
  4283  0011C6  EFE7  F008         	goto	u5380
  4284  0011CA                     u5381:
  4285  0011CA  EFF8  F008         	goto	l5844
  4286  0011CE                     u5380:
  4287  0011CE                     
  4288                           ; BSR set to: 1
  4289  0011CE  BF93               	btfsc	(powf@iy+3)& (0+255),7,b
  4290  0011D0  EFF6  F008         	goto	u5391
  4291  0011D4  0590               	decf	powf@iy& (0+255),w,b
  4292  0011D6  0E00               	movlw	0
  4293  0011D8  5991               	subwfb	(powf@iy+1)& (0+255),w,b
  4294  0011DA  0E80               	movlw	128
  4295  0011DC  5992               	subwfb	(powf@iy+2)& (0+255),w,b
  4296  0011DE  0E7F               	movlw	127
  4297  0011E0  5993               	subwfb	(powf@iy+3)& (0+255),w,b
  4298  0011E2  A0D8               	btfss	status,0,c
  4299  0011E4  EFF6  F008         	goto	u5391
  4300  0011E8  EFF8  F008         	goto	u5390
  4301  0011EC                     u5391:
  4302  0011EC  EF14  F009         	goto	l5848
  4303  0011F0                     u5390:
  4304  0011F0                     l5844:
  4305                           
  4306                           ; BSR set to: 1
  4307  0011F0  C088  F009         	movff	powf@x,___fladd@b
  4308  0011F4  C089  F00A         	movff	powf@x+1,___fladd@b+1
  4309  0011F8  C08A  F00B         	movff	powf@x+2,___fladd@b+2
  4310  0011FC  C08B  F00C         	movff	powf@x+3,___fladd@b+3
  4311  001200  C08C  F00D         	movff	powf@y,___fladd@a
  4312  001204  C08D  F00E         	movff	powf@y+1,___fladd@a+1
  4313  001208  C08E  F00F         	movff	powf@y+2,___fladd@a+2
  4314  00120C  C08F  F010         	movff	powf@y+3,___fladd@a+3
  4315  001210  ECE7  F01F         	call	___fladd	;wreg free
  4316  001214  C009  F088         	movff	?___fladd,?_powf
  4317  001218  C00A  F089         	movff	?___fladd+1,?_powf+1
  4318  00121C  C00B  F08A         	movff	?___fladd+2,?_powf+2
  4319  001220  C00C  F08B         	movff	?___fladd+3,?_powf+3
  4320  001224  EF86  F01D         	goto	l1435
  4321  001228                     l5848:
  4322                           
  4323                           ; BSR set to: 1
  4324  001228  0E00               	movlw	0
  4325  00122A  6F50               	movwf	powf@yisint& (0+255),b
  4326  00122C  0E00               	movlw	0
  4327  00122E  6F51               	movwf	(powf@yisint+1)& (0+255),b
  4328  001230  0E00               	movlw	0
  4329  001232  6F52               	movwf	(powf@yisint+2)& (0+255),b
  4330  001234  0E00               	movlw	0
  4331  001236  6F53               	movwf	(powf@yisint+3)& (0+255),b
  4332  001238                     
  4333                           ; BSR set to: 1
  4334  001238  BF63               	btfsc	(powf@hx+3)& (0+255),7,b
  4335  00123A  EF23  F009         	goto	u5400
  4336  00123E  EF21  F009         	goto	u5401
  4337  001242                     u5401:
  4338  001242  EFEF  F009         	goto	l1440
  4339  001246                     u5400:
  4340  001246                     
  4341                           ; BSR set to: 1
  4342  001246  BF93               	btfsc	(powf@iy+3)& (0+255),7,b
  4343  001248  EF2F  F009         	goto	u5411
  4344  00124C  0E80               	movlw	128
  4345  00124E  5D92               	subwf	(powf@iy+2)& (0+255),w,b
  4346  001250  0E4B               	movlw	75
  4347  001252  5993               	subwfb	(powf@iy+3)& (0+255),w,b
  4348  001254  A0D8               	btfss	status,0,c
  4349  001256  EF2F  F009         	goto	u5411
  4350  00125A  EF31  F009         	goto	u5410
  4351  00125E                     u5411:
  4352  00125E  EF3B  F009         	goto	l5856
  4353  001262                     u5410:
  4354  001262                     
  4355                           ; BSR set to: 1
  4356  001262  0E02               	movlw	2
  4357  001264  6F50               	movwf	powf@yisint& (0+255),b
  4358  001266  0E00               	movlw	0
  4359  001268  6F51               	movwf	(powf@yisint+1)& (0+255),b
  4360  00126A  0E00               	movlw	0
  4361  00126C  6F52               	movwf	(powf@yisint+2)& (0+255),b
  4362  00126E  0E00               	movlw	0
  4363  001270  6F53               	movwf	(powf@yisint+3)& (0+255),b
  4364  001272  EFEF  F009         	goto	l1440
  4365  001276                     l5856:
  4366                           
  4367                           ; BSR set to: 1
  4368  001276  BF93               	btfsc	(powf@iy+3)& (0+255),7,b
  4369  001278  EF47  F009         	goto	u5421
  4370  00127C  0E80               	movlw	128
  4371  00127E  5D92               	subwf	(powf@iy+2)& (0+255),w,b
  4372  001280  0E3F               	movlw	63
  4373  001282  5993               	subwfb	(powf@iy+3)& (0+255),w,b
  4374  001284  A0D8               	btfss	status,0,c
  4375  001286  EF47  F009         	goto	u5421
  4376  00128A  EF49  F009         	goto	u5420
  4377  00128E                     u5421:
  4378  00128E  EFEF  F009         	goto	l1440
  4379  001292                     u5420:
  4380  001292                     
  4381                           ; BSR set to: 1
  4382  001292  0E17               	movlw	23
  4383  001294  0100               	movlb	0	; () banked
  4384  001296  6F90               	movwf	??_powf& (0+255),b
  4385  001298  C190  F091         	movff	powf@iy,??_powf+1
  4386  00129C  C191  F092         	movff	powf@iy+1,??_powf+2
  4387  0012A0  C192  F093         	movff	powf@iy+2,??_powf+3
  4388  0012A4  C193  F094         	movff	powf@iy+3,??_powf+4
  4389  0012A8                     u5435:
  4390  0012A8  6790               	tstfsz	??_powf& (0+255),b
  4391  0012AA  EF59  F009         	goto	u5436
  4392  0012AE  EF61  F009         	goto	u5437
  4393  0012B2                     u5436:
  4394  0012B2  3594               	rlcf	(??_powf+4)& (0+255),w,b
  4395  0012B4  3394               	rrcf	(??_powf+4)& (0+255),f,b
  4396  0012B6  3393               	rrcf	(??_powf+3)& (0+255),f,b
  4397  0012B8  3392               	rrcf	(??_powf+2)& (0+255),f,b
  4398  0012BA  3391               	rrcf	(??_powf+1)& (0+255),f,b
  4399  0012BC  2F90               	decfsz	??_powf& (0+255),f,b
  4400  0012BE  EF54  F009         	goto	u5435
  4401  0012C2                     u5437:
  4402  0012C2  0E81               	movlw	129
  4403  0012C4  0100               	movlb	0	; () banked
  4404  0012C6  2591               	addwf	(??_powf+1)& (0+255),w,b
  4405  0012C8  0101               	movlb	1	; () banked
  4406  0012CA  6FA0               	movwf	powf@k& (0+255),b
  4407  0012CC  0EFF               	movlw	255
  4408  0012CE  0100               	movlb	0	; () banked
  4409  0012D0  2192               	addwfc	(??_powf+2)& (0+255),w,b
  4410  0012D2  0101               	movlb	1	; () banked
  4411  0012D4  6FA1               	movwf	(powf@k+1)& (0+255),b
  4412  0012D6  0EFF               	movlw	255
  4413  0012D8  0100               	movlb	0	; () banked
  4414  0012DA  2193               	addwfc	(??_powf+3)& (0+255),w,b
  4415  0012DC  0101               	movlb	1	; () banked
  4416  0012DE  6FA2               	movwf	(powf@k+2)& (0+255),b
  4417  0012E0  0EFF               	movlw	255
  4418  0012E2  0100               	movlb	0	; () banked
  4419  0012E4  2194               	addwfc	(??_powf+4)& (0+255),w,b
  4420  0012E6  0101               	movlb	1	; () banked
  4421  0012E8  6FA3               	movwf	(powf@k+3)& (0+255),b
  4422  0012EA  51A0               	movf	powf@k& (0+255),w,b
  4423  0012EC  0817               	sublw	23
  4424  0012EE  0100               	movlb	0	; () banked
  4425  0012F0  6F90               	movwf	??_powf& (0+255),b
  4426  0012F2  C190  F091         	movff	powf@iy,??_powf+1
  4427  0012F6  C191  F092         	movff	powf@iy+1,??_powf+2
  4428  0012FA  C192  F093         	movff	powf@iy+2,??_powf+3
  4429  0012FE  C193  F094         	movff	powf@iy+3,??_powf+4
  4430  001302                     u5445:
  4431  001302  6790               	tstfsz	??_powf& (0+255),b
  4432  001304  EF86  F009         	goto	u5446
  4433  001308  EF8E  F009         	goto	u5447
  4434  00130C                     u5446:
  4435  00130C  3594               	rlcf	(??_powf+4)& (0+255),w,b
  4436  00130E  3394               	rrcf	(??_powf+4)& (0+255),f,b
  4437  001310  3393               	rrcf	(??_powf+3)& (0+255),f,b
  4438  001312  3392               	rrcf	(??_powf+2)& (0+255),f,b
  4439  001314  3391               	rrcf	(??_powf+1)& (0+255),f,b
  4440  001316  2F90               	decfsz	??_powf& (0+255),f,b
  4441  001318  EF81  F009         	goto	u5445
  4442  00131C                     u5447:
  4443  00131C  C091  F1AC         	movff	??_powf+1,powf@j
  4444  001320  C092  F1AD         	movff	??_powf+2,powf@j+1
  4445  001324  C093  F1AE         	movff	??_powf+3,powf@j+2
  4446  001328  C094  F1AF         	movff	??_powf+4,powf@j+3
  4447  00132C  0101               	movlb	1	; () banked
  4448  00132E  51A0               	movf	powf@k& (0+255),w,b
  4449  001330  0817               	sublw	23
  4450  001332  0100               	movlb	0	; () banked
  4451  001334  6F90               	movwf	??_powf& (0+255),b
  4452  001336  C1AC  F091         	movff	powf@j,??_powf+1
  4453  00133A  C1AD  F092         	movff	powf@j+1,??_powf+2
  4454  00133E  C1AE  F093         	movff	powf@j+2,??_powf+3
  4455  001342  C1AF  F094         	movff	powf@j+3,??_powf+4
  4456  001346  2B90               	incf	??_powf& (0+255),f,b
  4457  001348  EFAB  F009         	goto	u5450
  4458  00134C                     u5455:
  4459  00134C  90D8               	bcf	status,0,c
  4460  00134E  3791               	rlcf	(??_powf+1)& (0+255),f,b
  4461  001350  3792               	rlcf	(??_powf+2)& (0+255),f,b
  4462  001352  3793               	rlcf	(??_powf+3)& (0+255),f,b
  4463  001354  3794               	rlcf	(??_powf+4)& (0+255),f,b
  4464  001356                     u5450:
  4465  001356  2F90               	decfsz	??_powf& (0+255),f,b
  4466  001358  EFA6  F009         	goto	u5455
  4467  00135C  0101               	movlb	1	; () banked
  4468  00135E  5190               	movf	powf@iy& (0+255),w,b
  4469  001360  0100               	movlb	0	; () banked
  4470  001362  1991               	xorwf	(??_powf+1)& (0+255),w,b
  4471  001364  E113               	bnz	u5461
  4472  001366  0101               	movlb	1	; () banked
  4473  001368  5191               	movf	(powf@iy+1)& (0+255),w,b
  4474  00136A  0100               	movlb	0	; () banked
  4475  00136C  1992               	xorwf	(??_powf+2)& (0+255),w,b
  4476  00136E  E10E               	bnz	u5461
  4477  001370  0101               	movlb	1	; () banked
  4478  001372  5192               	movf	(powf@iy+2)& (0+255),w,b
  4479  001374  0100               	movlb	0	; () banked
  4480  001376  1993               	xorwf	(??_powf+3)& (0+255),w,b
  4481  001378  E109               	bnz	u5461
  4482  00137A  0101               	movlb	1	; () banked
  4483  00137C  5193               	movf	(powf@iy+3)& (0+255),w,b
  4484  00137E  0100               	movlb	0	; () banked
  4485  001380  1994               	xorwf	(??_powf+4)& (0+255),w,b
  4486  001382  A4D8               	btfss	status,2,c
  4487  001384  EFC6  F009         	goto	u5461
  4488  001388  EFC8  F009         	goto	u5460
  4489  00138C                     u5461:
  4490  00138C  EFEF  F009         	goto	l1440
  4491  001390                     u5460:
  4492  001390                     
  4493                           ; BSR set to: 0
  4494  001390  0E01               	movlw	1
  4495  001392  0101               	movlb	1	; () banked
  4496  001394  15AC               	andwf	powf@j& (0+255),w,b
  4497  001396  0100               	movlb	0	; () banked
  4498  001398  6F90               	movwf	??_powf& (0+255),b
  4499  00139A  0E00               	movlw	0
  4500  00139C  0101               	movlb	1	; () banked
  4501  00139E  15AD               	andwf	(powf@j+1)& (0+255),w,b
  4502  0013A0  0100               	movlb	0	; () banked
  4503  0013A2  6F91               	movwf	(??_powf+1)& (0+255),b
  4504  0013A4  0E00               	movlw	0
  4505  0013A6  0101               	movlb	1	; () banked
  4506  0013A8  15AE               	andwf	(powf@j+2)& (0+255),w,b
  4507  0013AA  0100               	movlb	0	; () banked
  4508  0013AC  6F92               	movwf	(??_powf+2)& (0+255),b
  4509  0013AE  0E00               	movlw	0
  4510  0013B0  0101               	movlb	1	; () banked
  4511  0013B2  15AF               	andwf	(powf@j+3)& (0+255),w,b
  4512  0013B4  0100               	movlb	0	; () banked
  4513  0013B6  6F93               	movwf	(??_powf+3)& (0+255),b
  4514  0013B8  5190               	movf	??_powf& (0+255),w,b
  4515  0013BA  0802               	sublw	2
  4516  0013BC  0101               	movlb	1	; () banked
  4517  0013BE  6F50               	movwf	powf@yisint& (0+255),b
  4518  0013C0  0E00               	movlw	0
  4519  0013C2  0100               	movlb	0	; () banked
  4520  0013C4  5591               	subfwb	(??_powf+1)& (0+255),w,b
  4521  0013C6  0101               	movlb	1	; () banked
  4522  0013C8  6F51               	movwf	(powf@yisint+1)& (0+255),b
  4523  0013CA  0E00               	movlw	0
  4524  0013CC  0100               	movlb	0	; () banked
  4525  0013CE  5592               	subfwb	(??_powf+2)& (0+255),w,b
  4526  0013D0  0101               	movlb	1	; () banked
  4527  0013D2  6F52               	movwf	(powf@yisint+2)& (0+255),b
  4528  0013D4  0E00               	movlw	0
  4529  0013D6  0100               	movlb	0	; () banked
  4530  0013D8  5593               	subfwb	(??_powf+3)& (0+255),w,b
  4531  0013DA  0101               	movlb	1	; () banked
  4532  0013DC  6F53               	movwf	(powf@yisint+3)& (0+255),b
  4533  0013DE                     l1440:
  4534  0013DE  0E80               	movlw	128
  4535  0013E0  0101               	movlb	1	; () banked
  4536  0013E2  1992               	xorwf	(powf@iy+2)& (0+255),w,b
  4537  0013E4  E109               	bnz	u5471
  4538  0013E6  0E7F               	movlw	127
  4539  0013E8  1993               	xorwf	(powf@iy+3)& (0+255),w,b
  4540  0013EA  1190               	iorwf	powf@iy& (0+255),w,b
  4541  0013EC  1191               	iorwf	(powf@iy+1)& (0+255),w,b
  4542  0013EE  A4D8               	btfss	status,2,c
  4543  0013F0  EFFC  F009         	goto	u5471
  4544  0013F4  EFFE  F009         	goto	u5470
  4545  0013F8                     u5471:
  4546  0013F8  EF6A  F00A         	goto	l5886
  4547  0013FC                     u5470:
  4548  0013FC                     
  4549                           ; BSR set to: 1
  4550  0013FC  0E80               	movlw	128
  4551  0013FE  19AA               	xorwf	(powf@ix+2)& (0+255),w,b
  4552  001400  E109               	bnz	u5481
  4553  001402  0E3F               	movlw	63
  4554  001404  19AB               	xorwf	(powf@ix+3)& (0+255),w,b
  4555  001406  11A8               	iorwf	powf@ix& (0+255),w,b
  4556  001408  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
  4557  00140A  A4D8               	btfss	status,2,c
  4558  00140C  EF0A  F00A         	goto	u5481
  4559  001410  EF0C  F00A         	goto	u5480
  4560  001414                     u5481:
  4561  001414  EF17  F00A         	goto	l5870
  4562  001418                     u5480:
  4563  001418                     
  4564                           ; BSR set to: 1
  4565  001418  0E00               	movlw	0
  4566  00141A  0100               	movlb	0	; () banked
  4567  00141C  6F88               	movwf	?_powf& (0+255),b
  4568  00141E  0E00               	movlw	0
  4569  001420  6F89               	movwf	(?_powf+1)& (0+255),b
  4570  001422  0E80               	movlw	128
  4571  001424  6F8A               	movwf	(?_powf+2)& (0+255),b
  4572  001426  0E3F               	movlw	63
  4573  001428  6F8B               	movwf	(?_powf+3)& (0+255),b
  4574  00142A  EF86  F01D         	goto	l1435
  4575  00142E                     l5870:
  4576                           
  4577                           ; BSR set to: 1
  4578  00142E  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  4579  001430  EF26  F00A         	goto	u5491
  4580  001434  05A8               	decf	powf@ix& (0+255),w,b
  4581  001436  0E00               	movlw	0
  4582  001438  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
  4583  00143A  0E80               	movlw	128
  4584  00143C  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
  4585  00143E  0E3F               	movlw	63
  4586  001440  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
  4587  001442  A0D8               	btfss	status,0,c
  4588  001444  EF26  F00A         	goto	u5491
  4589  001448  EF28  F00A         	goto	u5490
  4590  00144C                     u5491:
  4591  00144C  EF44  F00A         	goto	l5878
  4592  001450                     u5490:
  4593  001450                     
  4594                           ; BSR set to: 1
  4595  001450  BF7F               	btfsc	(powf@hy+3)& (0+255),7,b
  4596  001452  EF2F  F00A         	goto	u5500
  4597  001456  EF2D  F00A         	goto	u5501
  4598  00145A                     u5501:
  4599  00145A  EF3A  F00A         	goto	l1450
  4600  00145E                     u5500:
  4601  00145E                     
  4602                           ; BSR set to: 1
  4603  00145E  0E00               	movlw	0
  4604  001460  0100               	movlb	0	; () banked
  4605  001462  6F88               	movwf	?_powf& (0+255),b
  4606  001464  0E00               	movlw	0
  4607  001466  6F89               	movwf	(?_powf+1)& (0+255),b
  4608  001468  0E00               	movlw	0
  4609  00146A  6F8A               	movwf	(?_powf+2)& (0+255),b
  4610  00146C  0E00               	movlw	0
  4611  00146E  6F8B               	movwf	(?_powf+3)& (0+255),b
  4612  001470  EF86  F01D         	goto	l1435
  4613  001474                     l1450:
  4614                           
  4615                           ; BSR set to: 1
  4616  001474  C08C  F088         	movff	powf@y,?_powf
  4617  001478  C08D  F089         	movff	powf@y+1,?_powf+1
  4618  00147C  C08E  F08A         	movff	powf@y+2,?_powf+2
  4619  001480  C08F  F08B         	movff	powf@y+3,?_powf+3
  4620  001484  EF86  F01D         	goto	l1435
  4621  001488                     l5878:
  4622                           
  4623                           ; BSR set to: 1
  4624  001488  BF7F               	btfsc	(powf@hy+3)& (0+255),7,b
  4625  00148A  EF4B  F00A         	goto	u5510
  4626  00148E  EF49  F00A         	goto	u5511
  4627  001492                     u5511:
  4628  001492  EF5F  F00A         	goto	l5882
  4629  001496                     u5510:
  4630  001496                     
  4631                           ; BSR set to: 1
  4632  001496  C08C  F009         	movff	powf@y,___flneg@f1
  4633  00149A  C08D  F00A         	movff	powf@y+1,___flneg@f1+1
  4634  00149E  C08E  F00B         	movff	powf@y+2,___flneg@f1+2
  4635  0014A2  C08F  F00C         	movff	powf@y+3,___flneg@f1+3
  4636  0014A6  EC27  F033         	call	___flneg	;wreg free
  4637  0014AA  C009  F088         	movff	?___flneg,?_powf
  4638  0014AE  C00A  F089         	movff	?___flneg+1,?_powf+1
  4639  0014B2  C00B  F08A         	movff	?___flneg+2,?_powf+2
  4640  0014B6  C00C  F08B         	movff	?___flneg+3,?_powf+3
  4641  0014BA  EF86  F01D         	goto	l1435
  4642  0014BE                     l5882:
  4643                           
  4644                           ; BSR set to: 1
  4645  0014BE  0E00               	movlw	0
  4646  0014C0  0100               	movlb	0	; () banked
  4647  0014C2  6F88               	movwf	?_powf& (0+255),b
  4648  0014C4  0E00               	movlw	0
  4649  0014C6  6F89               	movwf	(?_powf+1)& (0+255),b
  4650  0014C8  0E00               	movlw	0
  4651  0014CA  6F8A               	movwf	(?_powf+2)& (0+255),b
  4652  0014CC  0E00               	movlw	0
  4653  0014CE  6F8B               	movwf	(?_powf+3)& (0+255),b
  4654  0014D0  EF86  F01D         	goto	l1435
  4655  0014D4                     l5886:
  4656                           
  4657                           ; BSR set to: 1
  4658  0014D4  0E80               	movlw	128
  4659  0014D6  1992               	xorwf	(powf@iy+2)& (0+255),w,b
  4660  0014D8  E109               	bnz	u5521
  4661  0014DA  0E3F               	movlw	63
  4662  0014DC  1993               	xorwf	(powf@iy+3)& (0+255),w,b
  4663  0014DE  1190               	iorwf	powf@iy& (0+255),w,b
  4664  0014E0  1191               	iorwf	(powf@iy+1)& (0+255),w,b
  4665  0014E2  A4D8               	btfss	status,2,c
  4666  0014E4  EF76  F00A         	goto	u5521
  4667  0014E8  EF78  F00A         	goto	u5520
  4668  0014EC                     u5521:
  4669  0014EC  EFA5  F00A         	goto	l5892
  4670  0014F0                     u5520:
  4671  0014F0                     
  4672                           ; BSR set to: 1
  4673  0014F0  BF7F               	btfsc	(powf@hy+3)& (0+255),7,b
  4674  0014F2  EF7F  F00A         	goto	u5530
  4675  0014F6  EF7D  F00A         	goto	u5531
  4676  0014FA                     u5531:
  4677  0014FA  EF9B  F00A         	goto	l1460
  4678  0014FE                     u5530:
  4679  0014FE                     
  4680                           ; BSR set to: 1
  4681  0014FE  0E00               	movlw	0
  4682  001500  6E3A               	movwf	___fldiv@b^0,c
  4683  001502  0E00               	movlw	0
  4684  001504  6E3B               	movwf	(___fldiv@b+1)^0,c
  4685  001506  0E80               	movlw	128
  4686  001508  6E3C               	movwf	(___fldiv@b+2)^0,c
  4687  00150A  0E3F               	movlw	63
  4688  00150C  6E3D               	movwf	(___fldiv@b+3)^0,c
  4689  00150E  C088  F03E         	movff	powf@x,___fldiv@a
  4690  001512  C089  F03F         	movff	powf@x+1,___fldiv@a+1
  4691  001516  C08A  F040         	movff	powf@x+2,___fldiv@a+2
  4692  00151A  C08B  F041         	movff	powf@x+3,___fldiv@a+3
  4693  00151E  EC5C  F024         	call	___fldiv	;wreg free
  4694  001522  C03A  F088         	movff	?___fldiv,?_powf
  4695  001526  C03B  F089         	movff	?___fldiv+1,?_powf+1
  4696  00152A  C03C  F08A         	movff	?___fldiv+2,?_powf+2
  4697  00152E  C03D  F08B         	movff	?___fldiv+3,?_powf+3
  4698  001532  EF86  F01D         	goto	l1435
  4699  001536                     l1460:
  4700                           
  4701                           ; BSR set to: 1
  4702  001536  C088  F088         	movff	powf@x,?_powf
  4703  00153A  C089  F089         	movff	powf@x+1,?_powf+1
  4704  00153E  C08A  F08A         	movff	powf@x+2,?_powf+2
  4705  001542  C08B  F08B         	movff	powf@x+3,?_powf+3
  4706  001546  EF86  F01D         	goto	l1435
  4707  00154A                     l5892:
  4708                           
  4709                           ; BSR set to: 1
  4710  00154A  0E40               	movlw	64
  4711  00154C  197F               	xorwf	(powf@hy+3)& (0+255),w,b
  4712  00154E  117C               	iorwf	powf@hy& (0+255),w,b
  4713  001550  117D               	iorwf	(powf@hy+1)& (0+255),w,b
  4714  001552  117E               	iorwf	(powf@hy+2)& (0+255),w,b
  4715  001554  A4D8               	btfss	status,2,c
  4716  001556  EFAF  F00A         	goto	u5541
  4717  00155A  EFB1  F00A         	goto	u5540
  4718  00155E                     u5541:
  4719  00155E  EFCD  F00A         	goto	l5898
  4720  001562                     u5540:
  4721  001562                     
  4722                           ; BSR set to: 1
  4723  001562  C088  F019         	movff	powf@x,___flmul@b
  4724  001566  C089  F01A         	movff	powf@x+1,___flmul@b+1
  4725  00156A  C08A  F01B         	movff	powf@x+2,___flmul@b+2
  4726  00156E  C08B  F01C         	movff	powf@x+3,___flmul@b+3
  4727  001572  C088  F01D         	movff	powf@x,___flmul@a
  4728  001576  C089  F01E         	movff	powf@x+1,___flmul@a+1
  4729  00157A  C08A  F01F         	movff	powf@x+2,___flmul@a+2
  4730  00157E  C08B  F020         	movff	powf@x+3,___flmul@a+3
  4731  001582  EC47  F022         	call	___flmul	;wreg free
  4732  001586  C019  F088         	movff	?___flmul,?_powf
  4733  00158A  C01A  F089         	movff	?___flmul+1,?_powf+1
  4734  00158E  C01B  F08A         	movff	?___flmul+2,?_powf+2
  4735  001592  C01C  F08B         	movff	?___flmul+3,?_powf+3
  4736  001596  EF86  F01D         	goto	l1435
  4737  00159A                     l5898:
  4738                           
  4739                           ; BSR set to: 1
  4740  00159A  0E3F               	movlw	63
  4741  00159C  197F               	xorwf	(powf@hy+3)& (0+255),w,b
  4742  00159E  117C               	iorwf	powf@hy& (0+255),w,b
  4743  0015A0  117D               	iorwf	(powf@hy+1)& (0+255),w,b
  4744  0015A2  117E               	iorwf	(powf@hy+2)& (0+255),w,b
  4745  0015A4  A4D8               	btfss	status,2,c
  4746  0015A6  EFD7  F00A         	goto	u5551
  4747  0015AA  EFD9  F00A         	goto	u5550
  4748  0015AE                     u5551:
  4749  0015AE  EFF4  F00A         	goto	l5906
  4750  0015B2                     u5550:
  4751  0015B2                     
  4752                           ; BSR set to: 1
  4753  0015B2  BF63               	btfsc	(powf@hx+3)& (0+255),7,b
  4754  0015B4  EFDE  F00A         	goto	u5561
  4755  0015B8  EFE0  F00A         	goto	u5560
  4756  0015BC                     u5561:
  4757  0015BC  EFF4  F00A         	goto	l5906
  4758  0015C0                     u5560:
  4759  0015C0                     
  4760                           ; BSR set to: 1
  4761  0015C0  C088  F046         	movff	powf@x,sqrtf@x
  4762  0015C4  C089  F047         	movff	powf@x+1,sqrtf@x+1
  4763  0015C8  C08A  F048         	movff	powf@x+2,sqrtf@x+2
  4764  0015CC  C08B  F049         	movff	powf@x+3,sqrtf@x+3
  4765  0015D0  EC87  F01D         	call	_sqrtf	;wreg free
  4766  0015D4  C046  F088         	movff	?_sqrtf,?_powf
  4767  0015D8  C047  F089         	movff	?_sqrtf+1,?_powf+1
  4768  0015DC  C048  F08A         	movff	?_sqrtf+2,?_powf+2
  4769  0015E0  C049  F08B         	movff	?_sqrtf+3,?_powf+3
  4770  0015E4  EF86  F01D         	goto	l1435
  4771  0015E8                     l5906:
  4772                           
  4773                           ; BSR set to: 1
  4774  0015E8  C088  F009         	movff	powf@x,fabsf@x
  4775  0015EC  C089  F00A         	movff	powf@x+1,fabsf@x+1
  4776  0015F0  C08A  F00B         	movff	powf@x+2,fabsf@x+2
  4777  0015F4  C08B  F00C         	movff	powf@x+3,fabsf@x+3
  4778  0015F8  EC43  F033         	call	_fabsf	;wreg free
  4779  0015FC  C009  F170         	movff	?_fabsf,powf@ax
  4780  001600  C00A  F171         	movff	?_fabsf+1,powf@ax+1
  4781  001604  C00B  F172         	movff	?_fabsf+2,powf@ax+2
  4782  001608  C00C  F173         	movff	?_fabsf+3,powf@ax+3
  4783  00160C  0E80               	movlw	128
  4784  00160E  0101               	movlb	1	; () banked
  4785  001610  19AA               	xorwf	(powf@ix+2)& (0+255),w,b
  4786  001612  E10B               	bnz	u5570
  4787  001614  0E7F               	movlw	127
  4788  001616  19AB               	xorwf	(powf@ix+3)& (0+255),w,b
  4789  001618  11A8               	iorwf	powf@ix& (0+255),w,b
  4790  00161A  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
  4791  00161C  B4D8               	btfsc	status,2,c
  4792  00161E  EF13  F00B         	goto	u5571
  4793  001622  EF15  F00B         	goto	u5570
  4794  001626                     u5571:
  4795  001626  EF2E  F00B         	goto	l1468
  4796  00162A                     u5570:
  4797  00162A                     
  4798                           ; BSR set to: 1
  4799  00162A  51A8               	movf	powf@ix& (0+255),w,b
  4800  00162C  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
  4801  00162E  11AA               	iorwf	(powf@ix+2)& (0+255),w,b
  4802  001630  11AB               	iorwf	(powf@ix+3)& (0+255),w,b
  4803  001632  B4D8               	btfsc	status,2,c
  4804  001634  EF1E  F00B         	goto	u5581
  4805  001638  EF20  F00B         	goto	u5580
  4806  00163C                     u5581:
  4807  00163C  EF2E  F00B         	goto	l1468
  4808  001640                     u5580:
  4809  001640                     
  4810                           ; BSR set to: 1
  4811  001640  0E80               	movlw	128
  4812  001642  19AA               	xorwf	(powf@ix+2)& (0+255),w,b
  4813  001644  E109               	bnz	u5591
  4814  001646  0E3F               	movlw	63
  4815  001648  19AB               	xorwf	(powf@ix+3)& (0+255),w,b
  4816  00164A  11A8               	iorwf	powf@ix& (0+255),w,b
  4817  00164C  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
  4818  00164E  A4D8               	btfss	status,2,c
  4819  001650  EF2C  F00B         	goto	u5591
  4820  001654  EF2E  F00B         	goto	u5590
  4821  001658                     u5591:
  4822  001658  EFF9  F00B         	goto	l5932
  4823  00165C                     u5590:
  4824  00165C                     l1468:
  4825                           
  4826                           ; BSR set to: 1
  4827  00165C  C170  F1B4         	movff	powf@ax,powf@z
  4828  001660  C171  F1B5         	movff	powf@ax+1,powf@z+1
  4829  001664  C172  F1B6         	movff	powf@ax+2,powf@z+2
  4830  001668  C173  F1B7         	movff	powf@ax+3,powf@z+3
  4831  00166C                     
  4832                           ; BSR set to: 1
  4833  00166C  BF7F               	btfsc	(powf@hy+3)& (0+255),7,b
  4834  00166E  EF3D  F00B         	goto	u5600
  4835  001672  EF3B  F00B         	goto	u5601
  4836  001676                     u5601:
  4837  001676  EF57  F00B         	goto	l5918
  4838  00167A                     u5600:
  4839  00167A                     
  4840                           ; BSR set to: 1
  4841  00167A  0E00               	movlw	0
  4842  00167C  6E3A               	movwf	___fldiv@b^0,c
  4843  00167E  0E00               	movlw	0
  4844  001680  6E3B               	movwf	(___fldiv@b+1)^0,c
  4845  001682  0E80               	movlw	128
  4846  001684  6E3C               	movwf	(___fldiv@b+2)^0,c
  4847  001686  0E3F               	movlw	63
  4848  001688  6E3D               	movwf	(___fldiv@b+3)^0,c
  4849  00168A  C1B4  F03E         	movff	powf@z,___fldiv@a
  4850  00168E  C1B5  F03F         	movff	powf@z+1,___fldiv@a+1
  4851  001692  C1B6  F040         	movff	powf@z+2,___fldiv@a+2
  4852  001696  C1B7  F041         	movff	powf@z+3,___fldiv@a+3
  4853  00169A  EC5C  F024         	call	___fldiv	;wreg free
  4854  00169E  C03A  F1B4         	movff	?___fldiv,powf@z
  4855  0016A2  C03B  F1B5         	movff	?___fldiv+1,powf@z+1
  4856  0016A6  C03C  F1B6         	movff	?___fldiv+2,powf@z+2
  4857  0016AA  C03D  F1B7         	movff	?___fldiv+3,powf@z+3
  4858  0016AE                     l5918:
  4859  0016AE  0101               	movlb	1	; () banked
  4860  0016B0  BF63               	btfsc	(powf@hx+3)& (0+255),7,b
  4861  0016B2  EF5F  F00B         	goto	u5610
  4862  0016B6  EF5D  F00B         	goto	u5611
  4863  0016BA                     u5611:
  4864  0016BA  EFEF  F00B         	goto	l5928
  4865  0016BE                     u5610:
  4866  0016BE                     
  4867                           ; BSR set to: 1
  4868  0016BE  0E00               	movlw	0
  4869  0016C0  25A8               	addwf	powf@ix& (0+255),w,b
  4870  0016C2  0100               	movlb	0	; () banked
  4871  0016C4  6F90               	movwf	??_powf& (0+255),b
  4872  0016C6  0E00               	movlw	0
  4873  0016C8  0101               	movlb	1	; () banked
  4874  0016CA  21A9               	addwfc	(powf@ix+1)& (0+255),w,b
  4875  0016CC  0100               	movlb	0	; () banked
  4876  0016CE  6F91               	movwf	(??_powf+1)& (0+255),b
  4877  0016D0  0E80               	movlw	128
  4878  0016D2  0101               	movlb	1	; () banked
  4879  0016D4  21AA               	addwfc	(powf@ix+2)& (0+255),w,b
  4880  0016D6  0100               	movlb	0	; () banked
  4881  0016D8  6F92               	movwf	(??_powf+2)& (0+255),b
  4882  0016DA  0EC0               	movlw	192
  4883  0016DC  0101               	movlb	1	; () banked
  4884  0016DE  21AB               	addwfc	(powf@ix+3)& (0+255),w,b
  4885  0016E0  0100               	movlb	0	; () banked
  4886  0016E2  6F93               	movwf	(??_powf+3)& (0+255),b
  4887  0016E4  0101               	movlb	1	; () banked
  4888  0016E6  5150               	movf	powf@yisint& (0+255),w,b
  4889  0016E8  0100               	movlb	0	; () banked
  4890  0016EA  1190               	iorwf	??_powf& (0+255),w,b
  4891  0016EC  6F94               	movwf	(??_powf+4)& (0+255),b
  4892  0016EE  0101               	movlb	1	; () banked
  4893  0016F0  5151               	movf	(powf@yisint+1)& (0+255),w,b
  4894  0016F2  0100               	movlb	0	; () banked
  4895  0016F4  1191               	iorwf	(??_powf+1)& (0+255),w,b
  4896  0016F6  6F95               	movwf	(??_powf+5)& (0+255),b
  4897  0016F8  0101               	movlb	1	; () banked
  4898  0016FA  5152               	movf	(powf@yisint+2)& (0+255),w,b
  4899  0016FC  0100               	movlb	0	; () banked
  4900  0016FE  1192               	iorwf	(??_powf+2)& (0+255),w,b
  4901  001700  6F96               	movwf	(??_powf+6)& (0+255),b
  4902  001702  0101               	movlb	1	; () banked
  4903  001704  5153               	movf	(powf@yisint+3)& (0+255),w,b
  4904  001706  0100               	movlb	0	; () banked
  4905  001708  1193               	iorwf	(??_powf+3)& (0+255),w,b
  4906  00170A  6F97               	movwf	(??_powf+7)& (0+255),b
  4907  00170C  5194               	movf	(??_powf+4)& (0+255),w,b
  4908  00170E  1195               	iorwf	(??_powf+5)& (0+255),w,b
  4909  001710  1196               	iorwf	(??_powf+6)& (0+255),w,b
  4910  001712  1197               	iorwf	(??_powf+7)& (0+255),w,b
  4911  001714  A4D8               	btfss	status,2,c
  4912  001716  EF8F  F00B         	goto	u5621
  4913  00171A  EF91  F00B         	goto	u5620
  4914  00171E                     u5621:
  4915  00171E  EFD1  F00B         	goto	l5924
  4916  001722                     u5620:
  4917  001722                     
  4918                           ; BSR set to: 0
  4919  001722  C1B4  F036         	movff	powf@z,___flsub@a
  4920  001726  C1B5  F037         	movff	powf@z+1,___flsub@a+1
  4921  00172A  C1B6  F038         	movff	powf@z+2,___flsub@a+2
  4922  00172E  C1B7  F039         	movff	powf@z+3,___flsub@a+3
  4923  001732  C1B4  F032         	movff	powf@z,___flsub@b
  4924  001736  C1B5  F033         	movff	powf@z+1,___flsub@b+1
  4925  00173A  C1B6  F034         	movff	powf@z+2,___flsub@b+2
  4926  00173E  C1B7  F035         	movff	powf@z+3,___flsub@b+3
  4927  001742  EC88  F032         	call	___flsub	;wreg free
  4928  001746  C032  F03A         	movff	?___flsub,___fldiv@b
  4929  00174A  C033  F03B         	movff	?___flsub+1,___fldiv@b+1
  4930  00174E  C034  F03C         	movff	?___flsub+2,___fldiv@b+2
  4931  001752  C035  F03D         	movff	?___flsub+3,___fldiv@b+3
  4932  001756  C1B4  F036         	movff	powf@z,___flsub@a
  4933  00175A  C1B5  F037         	movff	powf@z+1,___flsub@a+1
  4934  00175E  C1B6  F038         	movff	powf@z+2,___flsub@a+2
  4935  001762  C1B7  F039         	movff	powf@z+3,___flsub@a+3
  4936  001766  C1B4  F032         	movff	powf@z,___flsub@b
  4937  00176A  C1B5  F033         	movff	powf@z+1,___flsub@b+1
  4938  00176E  C1B6  F034         	movff	powf@z+2,___flsub@b+2
  4939  001772  C1B7  F035         	movff	powf@z+3,___flsub@b+3
  4940  001776  EC88  F032         	call	___flsub	;wreg free
  4941  00177A  C032  F03E         	movff	?___flsub,___fldiv@a
  4942  00177E  C033  F03F         	movff	?___flsub+1,___fldiv@a+1
  4943  001782  C034  F040         	movff	?___flsub+2,___fldiv@a+2
  4944  001786  C035  F041         	movff	?___flsub+3,___fldiv@a+3
  4945  00178A  EC5C  F024         	call	___fldiv	;wreg free
  4946  00178E  C03A  F1B4         	movff	?___fldiv,powf@z
  4947  001792  C03B  F1B5         	movff	?___fldiv+1,powf@z+1
  4948  001796  C03C  F1B6         	movff	?___fldiv+2,powf@z+2
  4949  00179A  C03D  F1B7         	movff	?___fldiv+3,powf@z+3
  4950  00179E  EFEF  F00B         	goto	l5928
  4951  0017A2                     l5924:
  4952                           
  4953                           ; BSR set to: 0
  4954  0017A2  0101               	movlb	1	; () banked
  4955  0017A4  0550               	decf	powf@yisint& (0+255),w,b
  4956  0017A6  1151               	iorwf	(powf@yisint+1)& (0+255),w,b
  4957  0017A8  1152               	iorwf	(powf@yisint+2)& (0+255),w,b
  4958  0017AA  1153               	iorwf	(powf@yisint+3)& (0+255),w,b
  4959  0017AC  A4D8               	btfss	status,2,c
  4960  0017AE  EFDB  F00B         	goto	u5631
  4961  0017B2  EFDD  F00B         	goto	u5630
  4962  0017B6                     u5631:
  4963  0017B6  EFEF  F00B         	goto	l5928
  4964  0017BA                     u5630:
  4965  0017BA                     
  4966                           ; BSR set to: 1
  4967  0017BA  C1B4  F009         	movff	powf@z,___flneg@f1
  4968  0017BE  C1B5  F00A         	movff	powf@z+1,___flneg@f1+1
  4969  0017C2  C1B6  F00B         	movff	powf@z+2,___flneg@f1+2
  4970  0017C6  C1B7  F00C         	movff	powf@z+3,___flneg@f1+3
  4971  0017CA  EC27  F033         	call	___flneg	;wreg free
  4972  0017CE  C009  F1B4         	movff	?___flneg,powf@z
  4973  0017D2  C00A  F1B5         	movff	?___flneg+1,powf@z+1
  4974  0017D6  C00B  F1B6         	movff	?___flneg+2,powf@z+2
  4975  0017DA  C00C  F1B7         	movff	?___flneg+3,powf@z+3
  4976  0017DE                     l5928:
  4977  0017DE  C1B4  F088         	movff	powf@z,?_powf
  4978  0017E2  C1B5  F089         	movff	powf@z+1,?_powf+1
  4979  0017E6  C1B6  F08A         	movff	powf@z+2,?_powf+2
  4980  0017EA  C1B7  F08B         	movff	powf@z+3,?_powf+3
  4981  0017EE  EF86  F01D         	goto	l1435
  4982  0017F2                     l5932:
  4983                           
  4984                           ; BSR set to: 1
  4985  0017F2  0E00               	movlw	0
  4986  0017F4  6F88               	movwf	powf@sn& (0+255),b
  4987  0017F6  0E00               	movlw	0
  4988  0017F8  6F89               	movwf	(powf@sn+1)& (0+255),b
  4989  0017FA  0E80               	movlw	128
  4990  0017FC  6F8A               	movwf	(powf@sn+2)& (0+255),b
  4991  0017FE  0E3F               	movlw	63
  4992  001800  6F8B               	movwf	(powf@sn+3)& (0+255),b
  4993  001802                     
  4994                           ; BSR set to: 1
  4995  001802  BF63               	btfsc	(powf@hx+3)& (0+255),7,b
  4996  001804  EF08  F00C         	goto	u5640
  4997  001808  EF06  F00C         	goto	u5641
  4998  00180C                     u5641:
  4999  00180C  EF66  F00C         	goto	l5946
  5000  001810                     u5640:
  5001  001810                     
  5002                           ; BSR set to: 1
  5003  001810  5150               	movf	powf@yisint& (0+255),w,b
  5004  001812  1151               	iorwf	(powf@yisint+1)& (0+255),w,b
  5005  001814  1152               	iorwf	(powf@yisint+2)& (0+255),w,b
  5006  001816  1153               	iorwf	(powf@yisint+3)& (0+255),w,b
  5007  001818  A4D8               	btfss	status,2,c
  5008  00181A  EF11  F00C         	goto	u5651
  5009  00181E  EF13  F00C         	goto	u5650
  5010  001822                     u5651:
  5011  001822  EF53  F00C         	goto	l5942
  5012  001826                     u5650:
  5013  001826                     
  5014                           ; BSR set to: 1
  5015  001826  C088  F036         	movff	powf@x,___flsub@a
  5016  00182A  C089  F037         	movff	powf@x+1,___flsub@a+1
  5017  00182E  C08A  F038         	movff	powf@x+2,___flsub@a+2
  5018  001832  C08B  F039         	movff	powf@x+3,___flsub@a+3
  5019  001836  C088  F032         	movff	powf@x,___flsub@b
  5020  00183A  C089  F033         	movff	powf@x+1,___flsub@b+1
  5021  00183E  C08A  F034         	movff	powf@x+2,___flsub@b+2
  5022  001842  C08B  F035         	movff	powf@x+3,___flsub@b+3
  5023  001846  EC88  F032         	call	___flsub	;wreg free
  5024  00184A  C032  F03A         	movff	?___flsub,___fldiv@b
  5025  00184E  C033  F03B         	movff	?___flsub+1,___fldiv@b+1
  5026  001852  C034  F03C         	movff	?___flsub+2,___fldiv@b+2
  5027  001856  C035  F03D         	movff	?___flsub+3,___fldiv@b+3
  5028  00185A  C088  F036         	movff	powf@x,___flsub@a
  5029  00185E  C089  F037         	movff	powf@x+1,___flsub@a+1
  5030  001862  C08A  F038         	movff	powf@x+2,___flsub@a+2
  5031  001866  C08B  F039         	movff	powf@x+3,___flsub@a+3
  5032  00186A  C088  F032         	movff	powf@x,___flsub@b
  5033  00186E  C089  F033         	movff	powf@x+1,___flsub@b+1
  5034  001872  C08A  F034         	movff	powf@x+2,___flsub@b+2
  5035  001876  C08B  F035         	movff	powf@x+3,___flsub@b+3
  5036  00187A  EC88  F032         	call	___flsub	;wreg free
  5037  00187E  C032  F03E         	movff	?___flsub,___fldiv@a
  5038  001882  C033  F03F         	movff	?___flsub+1,___fldiv@a+1
  5039  001886  C034  F040         	movff	?___flsub+2,___fldiv@a+2
  5040  00188A  C035  F041         	movff	?___flsub+3,___fldiv@a+3
  5041  00188E  EC5C  F024         	call	___fldiv	;wreg free
  5042  001892  C03A  F088         	movff	?___fldiv,?_powf
  5043  001896  C03B  F089         	movff	?___fldiv+1,?_powf+1
  5044  00189A  C03C  F08A         	movff	?___fldiv+2,?_powf+2
  5045  00189E  C03D  F08B         	movff	?___fldiv+3,?_powf+3
  5046  0018A2  EF86  F01D         	goto	l1435
  5047  0018A6                     l5942:
  5048                           
  5049                           ; BSR set to: 1
  5050  0018A6  0550               	decf	powf@yisint& (0+255),w,b
  5051  0018A8  1151               	iorwf	(powf@yisint+1)& (0+255),w,b
  5052  0018AA  1152               	iorwf	(powf@yisint+2)& (0+255),w,b
  5053  0018AC  1153               	iorwf	(powf@yisint+3)& (0+255),w,b
  5054  0018AE  A4D8               	btfss	status,2,c
  5055  0018B0  EF5C  F00C         	goto	u5661
  5056  0018B4  EF5E  F00C         	goto	u5660
  5057  0018B8                     u5661:
  5058  0018B8  EF66  F00C         	goto	l5946
  5059  0018BC                     u5660:
  5060  0018BC                     
  5061                           ; BSR set to: 1
  5062  0018BC  0E00               	movlw	0
  5063  0018BE  6F88               	movwf	powf@sn& (0+255),b
  5064  0018C0  0E00               	movlw	0
  5065  0018C2  6F89               	movwf	(powf@sn+1)& (0+255),b
  5066  0018C4  0E80               	movlw	128
  5067  0018C6  6F8A               	movwf	(powf@sn+2)& (0+255),b
  5068  0018C8  0EBF               	movlw	191
  5069  0018CA  6F8B               	movwf	(powf@sn+3)& (0+255),b
  5070  0018CC                     l5946:
  5071                           
  5072                           ; BSR set to: 1
  5073  0018CC  BF93               	btfsc	(powf@iy+3)& (0+255),7,b
  5074  0018CE  EF75  F00C         	goto	u5671
  5075  0018D2  0590               	decf	powf@iy& (0+255),w,b
  5076  0018D4  0E00               	movlw	0
  5077  0018D6  5991               	subwfb	(powf@iy+1)& (0+255),w,b
  5078  0018D8  0E00               	movlw	0
  5079  0018DA  5992               	subwfb	(powf@iy+2)& (0+255),w,b
  5080  0018DC  0E4D               	movlw	77
  5081  0018DE  5993               	subwfb	(powf@iy+3)& (0+255),w,b
  5082  0018E0  A0D8               	btfss	status,0,c
  5083  0018E2  EF75  F00C         	goto	u5671
  5084  0018E6  EF77  F00C         	goto	u5670
  5085  0018EA                     u5671:
  5086  0018EA  EFFC  F00E         	goto	l5994
  5087  0018EE                     u5670:
  5088  0018EE                     
  5089                           ; BSR set to: 1
  5090  0018EE  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  5091  0018F0  EF89  F00C         	goto	u5680
  5092  0018F4  0EF8               	movlw	248
  5093  0018F6  5DA8               	subwf	powf@ix& (0+255),w,b
  5094  0018F8  0EFF               	movlw	255
  5095  0018FA  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
  5096  0018FC  0E7F               	movlw	127
  5097  0018FE  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
  5098  001900  0E3F               	movlw	63
  5099  001902  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
  5100  001904  B0D8               	btfsc	status,0,c
  5101  001906  EF87  F00C         	goto	u5681
  5102  00190A  EF89  F00C         	goto	u5680
  5103  00190E                     u5681:
  5104  00190E  EFFC  F00C         	goto	l5958
  5105  001912                     u5680:
  5106  001912                     
  5107                           ; BSR set to: 1
  5108  001912  BF7F               	btfsc	(powf@hy+3)& (0+255),7,b
  5109  001914  EF8E  F00C         	goto	u5691
  5110  001918  EF90  F00C         	goto	u5690
  5111  00191C                     u5691:
  5112  00191C  EFC6  F00C         	goto	l5954
  5113  001920                     u5690:
  5114  001920                     
  5115                           ; BSR set to: 1
  5116  001920  0E60               	movlw	96
  5117  001922  6E1D               	movwf	___flmul@a^0,c
  5118  001924  0E42               	movlw	66
  5119  001926  6E1E               	movwf	(___flmul@a+1)^0,c
  5120  001928  0EA2               	movlw	162
  5121  00192A  6E1F               	movwf	(___flmul@a+2)^0,c
  5122  00192C  0E0D               	movlw	13
  5123  00192E  6E20               	movwf	(___flmul@a+3)^0,c
  5124  001930  C188  F019         	movff	powf@sn,___flmul@b
  5125  001934  C189  F01A         	movff	powf@sn+1,___flmul@b+1
  5126  001938  C18A  F01B         	movff	powf@sn+2,___flmul@b+2
  5127  00193C  C18B  F01C         	movff	powf@sn+3,___flmul@b+3
  5128  001940  EC47  F022         	call	___flmul	;wreg free
  5129  001944  C019  F1A4         	movff	?___flmul,_powf$1775
  5130  001948  C01A  F1A5         	movff	?___flmul+1,_powf$1775+1
  5131  00194C  C01B  F1A6         	movff	?___flmul+2,_powf$1775+2
  5132  001950  C01C  F1A7         	movff	?___flmul+3,_powf$1775+3
  5133  001954  C1A4  F019         	movff	_powf$1775,___flmul@b
  5134  001958  C1A5  F01A         	movff	_powf$1775+1,___flmul@b+1
  5135  00195C  C1A6  F01B         	movff	_powf$1775+2,___flmul@b+2
  5136  001960  C1A7  F01C         	movff	_powf$1775+3,___flmul@b+3
  5137  001964  0E60               	movlw	96
  5138  001966  6E1D               	movwf	___flmul@a^0,c
  5139  001968  0E42               	movlw	66
  5140  00196A  6E1E               	movwf	(___flmul@a+1)^0,c
  5141  00196C  0EA2               	movlw	162
  5142  00196E  6E1F               	movwf	(___flmul@a+2)^0,c
  5143  001970  0E0D               	movlw	13
  5144  001972  6E20               	movwf	(___flmul@a+3)^0,c
  5145  001974  EC47  F022         	call	___flmul	;wreg free
  5146  001978  C019  F088         	movff	?___flmul,?_powf
  5147  00197C  C01A  F089         	movff	?___flmul+1,?_powf+1
  5148  001980  C01B  F08A         	movff	?___flmul+2,?_powf+2
  5149  001984  C01C  F08B         	movff	?___flmul+3,?_powf+3
  5150  001988  EF86  F01D         	goto	l1435
  5151  00198C                     l5954:
  5152                           
  5153                           ; BSR set to: 1
  5154  00198C  0ECA               	movlw	202
  5155  00198E  6E1D               	movwf	___flmul@a^0,c
  5156  001990  0EF2               	movlw	242
  5157  001992  6E1E               	movwf	(___flmul@a+1)^0,c
  5158  001994  0E49               	movlw	73
  5159  001996  6E1F               	movwf	(___flmul@a+2)^0,c
  5160  001998  0E71               	movlw	113
  5161  00199A  6E20               	movwf	(___flmul@a+3)^0,c
  5162  00199C  C188  F019         	movff	powf@sn,___flmul@b
  5163  0019A0  C189  F01A         	movff	powf@sn+1,___flmul@b+1
  5164  0019A4  C18A  F01B         	movff	powf@sn+2,___flmul@b+2
  5165  0019A8  C18B  F01C         	movff	powf@sn+3,___flmul@b+3
  5166  0019AC  EC47  F022         	call	___flmul	;wreg free
  5167  0019B0  C019  F1A4         	movff	?___flmul,_powf$1775
  5168  0019B4  C01A  F1A5         	movff	?___flmul+1,_powf$1775+1
  5169  0019B8  C01B  F1A6         	movff	?___flmul+2,_powf$1775+2
  5170  0019BC  C01C  F1A7         	movff	?___flmul+3,_powf$1775+3
  5171  0019C0  C1A4  F019         	movff	_powf$1775,___flmul@b
  5172  0019C4  C1A5  F01A         	movff	_powf$1775+1,___flmul@b+1
  5173  0019C8  C1A6  F01B         	movff	_powf$1775+2,___flmul@b+2
  5174  0019CC  C1A7  F01C         	movff	_powf$1775+3,___flmul@b+3
  5175  0019D0  0ECA               	movlw	202
  5176  0019D2  6E1D               	movwf	___flmul@a^0,c
  5177  0019D4  0EF2               	movlw	242
  5178  0019D6  6E1E               	movwf	(___flmul@a+1)^0,c
  5179  0019D8  0E49               	movlw	73
  5180  0019DA  6E1F               	movwf	(___flmul@a+2)^0,c
  5181  0019DC  0E71               	movlw	113
  5182  0019DE  6E20               	movwf	(___flmul@a+3)^0,c
  5183  0019E0  EC47  F022         	call	___flmul	;wreg free
  5184  0019E4  C019  F088         	movff	?___flmul,?_powf
  5185  0019E8  C01A  F089         	movff	?___flmul+1,?_powf+1
  5186  0019EC  C01B  F08A         	movff	?___flmul+2,?_powf+2
  5187  0019F0  C01C  F08B         	movff	?___flmul+3,?_powf+3
  5188  0019F4  EF86  F01D         	goto	l1435
  5189  0019F8                     l5958:
  5190                           
  5191                           ; BSR set to: 1
  5192  0019F8  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  5193  0019FA  EF0C  F00D         	goto	u5701
  5194  0019FE  0E08               	movlw	8
  5195  001A00  5DA8               	subwf	powf@ix& (0+255),w,b
  5196  001A02  0E00               	movlw	0
  5197  001A04  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
  5198  001A06  0E80               	movlw	128
  5199  001A08  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
  5200  001A0A  0E3F               	movlw	63
  5201  001A0C  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
  5202  001A0E  A0D8               	btfss	status,0,c
  5203  001A10  EF0C  F00D         	goto	u5701
  5204  001A14  EF0E  F00D         	goto	u5700
  5205  001A18                     u5701:
  5206  001A18  EF89  F00D         	goto	l5968
  5207  001A1C                     u5700:
  5208  001A1C                     
  5209                           ; BSR set to: 1
  5210  001A1C  BF7F               	btfsc	(powf@hy+3)& (0+255),7,b
  5211  001A1E  EF1D  F00D         	goto	u5710
  5212  001A22  517F               	movf	(powf@hy+3)& (0+255),w,b
  5213  001A24  117E               	iorwf	(powf@hy+2)& (0+255),w,b
  5214  001A26  117D               	iorwf	(powf@hy+1)& (0+255),w,b
  5215  001A28  E106               	bnz	u5711
  5216  001A2A  057C               	decf	powf@hy& (0+255),w,b
  5217  001A2C  B0D8               	btfsc	status,0,c
  5218  001A2E  EF1B  F00D         	goto	u5711
  5219  001A32  EF1D  F00D         	goto	u5710
  5220  001A36                     u5711:
  5221  001A36  EF53  F00D         	goto	l5964
  5222  001A3A                     u5710:
  5223  001A3A                     
  5224                           ; BSR set to: 1
  5225  001A3A  0E60               	movlw	96
  5226  001A3C  6E1D               	movwf	___flmul@a^0,c
  5227  001A3E  0E42               	movlw	66
  5228  001A40  6E1E               	movwf	(___flmul@a+1)^0,c
  5229  001A42  0EA2               	movlw	162
  5230  001A44  6E1F               	movwf	(___flmul@a+2)^0,c
  5231  001A46  0E0D               	movlw	13
  5232  001A48  6E20               	movwf	(___flmul@a+3)^0,c
  5233  001A4A  C188  F019         	movff	powf@sn,___flmul@b
  5234  001A4E  C189  F01A         	movff	powf@sn+1,___flmul@b+1
  5235  001A52  C18A  F01B         	movff	powf@sn+2,___flmul@b+2
  5236  001A56  C18B  F01C         	movff	powf@sn+3,___flmul@b+3
  5237  001A5A  EC47  F022         	call	___flmul	;wreg free
  5238  001A5E  C019  F1A4         	movff	?___flmul,_powf$1775
  5239  001A62  C01A  F1A5         	movff	?___flmul+1,_powf$1775+1
  5240  001A66  C01B  F1A6         	movff	?___flmul+2,_powf$1775+2
  5241  001A6A  C01C  F1A7         	movff	?___flmul+3,_powf$1775+3
  5242  001A6E  C1A4  F019         	movff	_powf$1775,___flmul@b
  5243  001A72  C1A5  F01A         	movff	_powf$1775+1,___flmul@b+1
  5244  001A76  C1A6  F01B         	movff	_powf$1775+2,___flmul@b+2
  5245  001A7A  C1A7  F01C         	movff	_powf$1775+3,___flmul@b+3
  5246  001A7E  0E60               	movlw	96
  5247  001A80  6E1D               	movwf	___flmul@a^0,c
  5248  001A82  0E42               	movlw	66
  5249  001A84  6E1E               	movwf	(___flmul@a+1)^0,c
  5250  001A86  0EA2               	movlw	162
  5251  001A88  6E1F               	movwf	(___flmul@a+2)^0,c
  5252  001A8A  0E0D               	movlw	13
  5253  001A8C  6E20               	movwf	(___flmul@a+3)^0,c
  5254  001A8E  EC47  F022         	call	___flmul	;wreg free
  5255  001A92  C019  F088         	movff	?___flmul,?_powf
  5256  001A96  C01A  F089         	movff	?___flmul+1,?_powf+1
  5257  001A9A  C01B  F08A         	movff	?___flmul+2,?_powf+2
  5258  001A9E  C01C  F08B         	movff	?___flmul+3,?_powf+3
  5259  001AA2  EF86  F01D         	goto	l1435
  5260  001AA6                     l5964:
  5261                           
  5262                           ; BSR set to: 1
  5263  001AA6  0ECA               	movlw	202
  5264  001AA8  6E1D               	movwf	___flmul@a^0,c
  5265  001AAA  0EF2               	movlw	242
  5266  001AAC  6E1E               	movwf	(___flmul@a+1)^0,c
  5267  001AAE  0E49               	movlw	73
  5268  001AB0  6E1F               	movwf	(___flmul@a+2)^0,c
  5269  001AB2  0E71               	movlw	113
  5270  001AB4  6E20               	movwf	(___flmul@a+3)^0,c
  5271  001AB6  C188  F019         	movff	powf@sn,___flmul@b
  5272  001ABA  C189  F01A         	movff	powf@sn+1,___flmul@b+1
  5273  001ABE  C18A  F01B         	movff	powf@sn+2,___flmul@b+2
  5274  001AC2  C18B  F01C         	movff	powf@sn+3,___flmul@b+3
  5275  001AC6  EC47  F022         	call	___flmul	;wreg free
  5276  001ACA  C019  F1A4         	movff	?___flmul,_powf$1775
  5277  001ACE  C01A  F1A5         	movff	?___flmul+1,_powf$1775+1
  5278  001AD2  C01B  F1A6         	movff	?___flmul+2,_powf$1775+2
  5279  001AD6  C01C  F1A7         	movff	?___flmul+3,_powf$1775+3
  5280  001ADA  C1A4  F019         	movff	_powf$1775,___flmul@b
  5281  001ADE  C1A5  F01A         	movff	_powf$1775+1,___flmul@b+1
  5282  001AE2  C1A6  F01B         	movff	_powf$1775+2,___flmul@b+2
  5283  001AE6  C1A7  F01C         	movff	_powf$1775+3,___flmul@b+3
  5284  001AEA  0ECA               	movlw	202
  5285  001AEC  6E1D               	movwf	___flmul@a^0,c
  5286  001AEE  0EF2               	movlw	242
  5287  001AF0  6E1E               	movwf	(___flmul@a+1)^0,c
  5288  001AF2  0E49               	movlw	73
  5289  001AF4  6E1F               	movwf	(___flmul@a+2)^0,c
  5290  001AF6  0E71               	movlw	113
  5291  001AF8  6E20               	movwf	(___flmul@a+3)^0,c
  5292  001AFA  EC47  F022         	call	___flmul	;wreg free
  5293  001AFE  C019  F088         	movff	?___flmul,?_powf
  5294  001B02  C01A  F089         	movff	?___flmul+1,?_powf+1
  5295  001B06  C01B  F08A         	movff	?___flmul+2,?_powf+2
  5296  001B0A  C01C  F08B         	movff	?___flmul+3,?_powf+3
  5297  001B0E  EF86  F01D         	goto	l1435
  5298  001B12                     l5968:
  5299                           
  5300                           ; BSR set to: 1
  5301  001B12  C170  F009         	movff	powf@ax,___fladd@b
  5302  001B16  C171  F00A         	movff	powf@ax+1,___fladd@b+1
  5303  001B1A  C172  F00B         	movff	powf@ax+2,___fladd@b+2
  5304  001B1E  C173  F00C         	movff	powf@ax+3,___fladd@b+3
  5305  001B22  0E00               	movlw	0
  5306  001B24  6E0D               	movwf	___fladd@a^0,c
  5307  001B26  0E00               	movlw	0
  5308  001B28  6E0E               	movwf	(___fladd@a+1)^0,c
  5309  001B2A  0E80               	movlw	128
  5310  001B2C  6E0F               	movwf	(___fladd@a+2)^0,c
  5311  001B2E  0EBF               	movlw	191
  5312  001B30  6E10               	movwf	(___fladd@a+3)^0,c
  5313  001B32  ECE7  F01F         	call	___fladd	;wreg free
  5314  001B36  C009  F1B0         	movff	?___fladd,powf@t
  5315  001B3A  C00A  F1B1         	movff	?___fladd+1,powf@t+1
  5316  001B3E  C00B  F1B2         	movff	?___fladd+2,powf@t+2
  5317  001B42  C00C  F1B3         	movff	?___fladd+3,powf@t+3
  5318  001B46  0E00               	movlw	0
  5319  001B48  6E1D               	movwf	___flmul@a^0,c
  5320  001B4A  0E00               	movlw	0
  5321  001B4C  6E1E               	movwf	(___flmul@a+1)^0,c
  5322  001B4E  0E80               	movlw	128
  5323  001B50  6E1F               	movwf	(___flmul@a+2)^0,c
  5324  001B52  0E3E               	movlw	62
  5325  001B54  6E20               	movwf	(___flmul@a+3)^0,c
  5326  001B56  C1B0  F019         	movff	powf@t,___flmul@b
  5327  001B5A  C1B1  F01A         	movff	powf@t+1,___flmul@b+1
  5328  001B5E  C1B2  F01B         	movff	powf@t+2,___flmul@b+2
  5329  001B62  C1B3  F01C         	movff	powf@t+3,___flmul@b+3
  5330  001B66  EC47  F022         	call	___flmul	;wreg free
  5331  001B6A  C019  F036         	movff	?___flmul,___flsub@a
  5332  001B6E  C01A  F037         	movff	?___flmul+1,___flsub@a+1
  5333  001B72  C01B  F038         	movff	?___flmul+2,___flsub@a+2
  5334  001B76  C01C  F039         	movff	?___flmul+3,___flsub@a+3
  5335  001B7A  0EAB               	movlw	171
  5336  001B7C  6E32               	movwf	___flsub@b^0,c
  5337  001B7E  0EAA               	movlw	170
  5338  001B80  6E33               	movwf	(___flsub@b+1)^0,c
  5339  001B82  0EAA               	movlw	170
  5340  001B84  6E34               	movwf	(___flsub@b+2)^0,c
  5341  001B86  0E3E               	movlw	62
  5342  001B88  6E35               	movwf	(___flsub@b+3)^0,c
  5343  001B8A  EC88  F032         	call	___flsub	;wreg free
  5344  001B8E  C032  F1A4         	movff	?___flsub,_powf$1775
  5345  001B92  C033  F1A5         	movff	?___flsub+1,_powf$1775+1
  5346  001B96  C034  F1A6         	movff	?___flsub+2,_powf$1775+2
  5347  001B9A  C035  F1A7         	movff	?___flsub+3,_powf$1775+3
  5348  001B9E  C1B0  F01D         	movff	powf@t,___flmul@a
  5349  001BA2  C1B1  F01E         	movff	powf@t+1,___flmul@a+1
  5350  001BA6  C1B2  F01F         	movff	powf@t+2,___flmul@a+2
  5351  001BAA  C1B3  F020         	movff	powf@t+3,___flmul@a+3
  5352  001BAE  C1B0  F019         	movff	powf@t,___flmul@b
  5353  001BB2  C1B1  F01A         	movff	powf@t+1,___flmul@b+1
  5354  001BB6  C1B2  F01B         	movff	powf@t+2,___flmul@b+2
  5355  001BBA  C1B3  F01C         	movff	powf@t+3,___flmul@b+3
  5356  001BBE  EC47  F022         	call	___flmul	;wreg free
  5357  001BC2  C019  F154         	movff	?___flmul,_powf$1776
  5358  001BC6  C01A  F155         	movff	?___flmul+1,_powf$1776+1
  5359  001BCA  C01B  F156         	movff	?___flmul+2,_powf$1776+2
  5360  001BCE  C01C  F157         	movff	?___flmul+3,_powf$1776+3
  5361  001BD2  C1B0  F01D         	movff	powf@t,___flmul@a
  5362  001BD6  C1B1  F01E         	movff	powf@t+1,___flmul@a+1
  5363  001BDA  C1B2  F01F         	movff	powf@t+2,___flmul@a+2
  5364  001BDE  C1B3  F020         	movff	powf@t+3,___flmul@a+3
  5365  001BE2  C1A4  F019         	movff	_powf$1775,___flmul@b
  5366  001BE6  C1A5  F01A         	movff	_powf$1775+1,___flmul@b+1
  5367  001BEA  C1A6  F01B         	movff	_powf$1775+2,___flmul@b+2
  5368  001BEE  C1A7  F01C         	movff	_powf$1775+3,___flmul@b+3
  5369  001BF2  EC47  F022         	call	___flmul	;wreg free
  5370  001BF6  C019  F036         	movff	?___flmul,___flsub@a
  5371  001BFA  C01A  F037         	movff	?___flmul+1,___flsub@a+1
  5372  001BFE  C01B  F038         	movff	?___flmul+2,___flsub@a+2
  5373  001C02  C01C  F039         	movff	?___flmul+3,___flsub@a+3
  5374  001C06  0E00               	movlw	0
  5375  001C08  6E32               	movwf	___flsub@b^0,c
  5376  001C0A  0E00               	movlw	0
  5377  001C0C  6E33               	movwf	(___flsub@b+1)^0,c
  5378  001C0E  0E00               	movlw	0
  5379  001C10  6E34               	movwf	(___flsub@b+2)^0,c
  5380  001C12  0E3F               	movlw	63
  5381  001C14  6E35               	movwf	(___flsub@b+3)^0,c
  5382  001C16  EC88  F032         	call	___flsub	;wreg free
  5383  001C1A  C032  F148         	movff	?___flsub,_powf$1777
  5384  001C1E  C033  F149         	movff	?___flsub+1,_powf$1777+1
  5385  001C22  C034  F14A         	movff	?___flsub+2,_powf$1777+2
  5386  001C26  C035  F14B         	movff	?___flsub+3,_powf$1777+3
  5387  001C2A  C154  F019         	movff	_powf$1776,___flmul@b
  5388  001C2E  C155  F01A         	movff	_powf$1776+1,___flmul@b+1
  5389  001C32  C156  F01B         	movff	_powf$1776+2,___flmul@b+2
  5390  001C36  C157  F01C         	movff	_powf$1776+3,___flmul@b+3
  5391  001C3A  C148  F01D         	movff	_powf$1777,___flmul@a
  5392  001C3E  C149  F01E         	movff	_powf$1777+1,___flmul@a+1
  5393  001C42  C14A  F01F         	movff	_powf$1777+2,___flmul@a+2
  5394  001C46  C14B  F020         	movff	_powf$1777+3,___flmul@a+3
  5395  001C4A  EC47  F022         	call	___flmul	;wreg free
  5396  001C4E  C019  F144         	movff	?___flmul,powf@w
  5397  001C52  C01A  F145         	movff	?___flmul+1,powf@w+1
  5398  001C56  C01B  F146         	movff	?___flmul+2,powf@w+2
  5399  001C5A  C01C  F147         	movff	?___flmul+3,powf@w+3
  5400  001C5E  C1B0  F019         	movff	powf@t,___flmul@b
  5401  001C62  C1B1  F01A         	movff	powf@t+1,___flmul@b+1
  5402  001C66  C1B2  F01B         	movff	powf@t+2,___flmul@b+2
  5403  001C6A  C1B3  F01C         	movff	powf@t+3,___flmul@b+3
  5404  001C6E  0E00               	movlw	0
  5405  001C70  6E1D               	movwf	___flmul@a^0,c
  5406  001C72  0EAA               	movlw	170
  5407  001C74  6E1E               	movwf	(___flmul@a+1)^0,c
  5408  001C76  0EB8               	movlw	184
  5409  001C78  6E1F               	movwf	(___flmul@a+2)^0,c
  5410  001C7A  0E3F               	movlw	63
  5411  001C7C  6E20               	movwf	(___flmul@a+3)^0,c
  5412  001C7E  EC47  F022         	call	___flmul	;wreg free
  5413  001C82  C019  F174         	movff	?___flmul,powf@u
  5414  001C86  C01A  F175         	movff	?___flmul+1,powf@u+1
  5415  001C8A  C01B  F176         	movff	?___flmul+2,powf@u+2
  5416  001C8E  C01C  F177         	movff	?___flmul+3,powf@u+3
  5417  001C92  0E70               	movlw	112
  5418  001C94  6E1D               	movwf	___flmul@a^0,c
  5419  001C96  0EA5               	movlw	165
  5420  001C98  6E1E               	movwf	(___flmul@a+1)^0,c
  5421  001C9A  0EEC               	movlw	236
  5422  001C9C  6E1F               	movwf	(___flmul@a+2)^0,c
  5423  001C9E  0E36               	movlw	54
  5424  001CA0  6E20               	movwf	(___flmul@a+3)^0,c
  5425  001CA2  C1B0  F019         	movff	powf@t,___flmul@b
  5426  001CA6  C1B1  F01A         	movff	powf@t+1,___flmul@b+1
  5427  001CAA  C1B2  F01B         	movff	powf@t+2,___flmul@b+2
  5428  001CAE  C1B3  F01C         	movff	powf@t+3,___flmul@b+3
  5429  001CB2  EC47  F022         	call	___flmul	;wreg free
  5430  001CB6  C019  F032         	movff	?___flmul,___flsub@b
  5431  001CBA  C01A  F033         	movff	?___flmul+1,___flsub@b+1
  5432  001CBE  C01B  F034         	movff	?___flmul+2,___flsub@b+2
  5433  001CC2  C01C  F035         	movff	?___flmul+3,___flsub@b+3
  5434  001CC6  0E3B               	movlw	59
  5435  001CC8  6E1D               	movwf	___flmul@a^0,c
  5436  001CCA  0EAA               	movlw	170
  5437  001CCC  6E1E               	movwf	(___flmul@a+1)^0,c
  5438  001CCE  0EB8               	movlw	184
  5439  001CD0  6E1F               	movwf	(___flmul@a+2)^0,c
  5440  001CD2  0E3F               	movlw	63
  5441  001CD4  6E20               	movwf	(___flmul@a+3)^0,c
  5442  001CD6  C144  F019         	movff	powf@w,___flmul@b
  5443  001CDA  C145  F01A         	movff	powf@w+1,___flmul@b+1
  5444  001CDE  C146  F01B         	movff	powf@w+2,___flmul@b+2
  5445  001CE2  C147  F01C         	movff	powf@w+3,___flmul@b+3
  5446  001CE6  EC47  F022         	call	___flmul	;wreg free
  5447  001CEA  C019  F036         	movff	?___flmul,___flsub@a
  5448  001CEE  C01A  F037         	movff	?___flmul+1,___flsub@a+1
  5449  001CF2  C01B  F038         	movff	?___flmul+2,___flsub@a+2
  5450  001CF6  C01C  F039         	movff	?___flmul+3,___flsub@a+3
  5451  001CFA  EC88  F032         	call	___flsub	;wreg free
  5452  001CFE  C032  F178         	movff	?___flsub,powf@v
  5453  001D02  C033  F179         	movff	?___flsub+1,powf@v+1
  5454  001D06  C034  F17A         	movff	?___flsub+2,powf@v+2
  5455  001D0A  C035  F17B         	movff	?___flsub+3,powf@v+3
  5456  001D0E  C174  F009         	movff	powf@u,___fladd@b
  5457  001D12  C175  F00A         	movff	powf@u+1,___fladd@b+1
  5458  001D16  C176  F00B         	movff	powf@u+2,___fladd@b+2
  5459  001D1A  C177  F00C         	movff	powf@u+3,___fladd@b+3
  5460  001D1E  C178  F00D         	movff	powf@v,___fladd@a
  5461  001D22  C179  F00E         	movff	powf@v+1,___fladd@a+1
  5462  001D26  C17A  F00F         	movff	powf@v+2,___fladd@a+2
  5463  001D2A  C17B  F010         	movff	powf@v+3,___fladd@a+3
  5464  001D2E  ECE7  F01F         	call	___fladd	;wreg free
  5465  001D32  C009  F184         	movff	?___fladd,powf@t1
  5466  001D36  C00A  F185         	movff	?___fladd+1,powf@t1+1
  5467  001D3A  C00B  F186         	movff	?___fladd+2,powf@t1+2
  5468  001D3E  C00C  F187         	movff	?___fladd+3,powf@t1+3
  5469  001D42  C184  F1B8         	movff	powf@t1,powf@__xc8_float_word
  5470  001D46  C185  F1B9         	movff	powf@t1+1,powf@__xc8_float_word+1
  5471  001D4A  C186  F1BA         	movff	powf@t1+2,powf@__xc8_float_word+2
  5472  001D4E  C187  F1BB         	movff	powf@t1+3,powf@__xc8_float_word+3
  5473  001D52  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
  5474  001D56  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
  5475  001D5A  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
  5476  001D5E  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
  5477  001D62  0E00               	movlw	0
  5478  001D64  0101               	movlb	1	; () banked
  5479  001D66  1594               	andwf	powf@is& (0+255),w,b
  5480  001D68  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  5481  001D6A  0EF0               	movlw	240
  5482  001D6C  1595               	andwf	(powf@is+1)& (0+255),w,b
  5483  001D6E  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  5484  001D70  0EFF               	movlw	255
  5485  001D72  1596               	andwf	(powf@is+2)& (0+255),w,b
  5486  001D74  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  5487  001D76  0EFF               	movlw	255
  5488  001D78  1597               	andwf	(powf@is+3)& (0+255),w,b
  5489  001D7A  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  5490  001D7C                     
  5491                           ; BSR set to: 1
  5492  001D7C  C1B8  F184         	movff	powf@__xc8_float_word,powf@t1
  5493  001D80  C1B9  F185         	movff	powf@__xc8_float_word+1,powf@t1+1
  5494  001D84  C1BA  F186         	movff	powf@__xc8_float_word+2,powf@t1+2
  5495  001D88  C1BB  F187         	movff	powf@__xc8_float_word+3,powf@t1+3
  5496  001D8C                     
  5497                           ; BSR set to: 1
  5498  001D8C  C174  F036         	movff	powf@u,___flsub@a
  5499  001D90  C175  F037         	movff	powf@u+1,___flsub@a+1
  5500  001D94  C176  F038         	movff	powf@u+2,___flsub@a+2
  5501  001D98  C177  F039         	movff	powf@u+3,___flsub@a+3
  5502  001D9C  C184  F032         	movff	powf@t1,___flsub@b
  5503  001DA0  C185  F033         	movff	powf@t1+1,___flsub@b+1
  5504  001DA4  C186  F034         	movff	powf@t1+2,___flsub@b+2
  5505  001DA8  C187  F035         	movff	powf@t1+3,___flsub@b+3
  5506  001DAC  EC88  F032         	call	___flsub	;wreg free
  5507  001DB0  C032  F198         	movff	?___flsub,_powf$1778
  5508  001DB4  C033  F199         	movff	?___flsub+1,_powf$1778+1
  5509  001DB8  C034  F19A         	movff	?___flsub+2,_powf$1778+2
  5510  001DBC  C035  F19B         	movff	?___flsub+3,_powf$1778+3
  5511  001DC0  C178  F032         	movff	powf@v,___flsub@b
  5512  001DC4  C179  F033         	movff	powf@v+1,___flsub@b+1
  5513  001DC8  C17A  F034         	movff	powf@v+2,___flsub@b+2
  5514  001DCC  C17B  F035         	movff	powf@v+3,___flsub@b+3
  5515  001DD0  C198  F036         	movff	_powf$1778,___flsub@a
  5516  001DD4  C199  F037         	movff	_powf$1778+1,___flsub@a+1
  5517  001DD8  C19A  F038         	movff	_powf$1778+2,___flsub@a+2
  5518  001DDC  C19B  F039         	movff	_powf$1778+3,___flsub@a+3
  5519  001DE0  EC88  F032         	call	___flsub	;wreg free
  5520  001DE4  C032  F11C         	movff	?___flsub,powf@t2
  5521  001DE8  C033  F11D         	movff	?___flsub+1,powf@t2+1
  5522  001DEC  C034  F11E         	movff	?___flsub+2,powf@t2+2
  5523  001DF0  C035  F11F         	movff	?___flsub+3,powf@t2+3
  5524  001DF4  EF7C  F016         	goto	l6150
  5525  001DF8                     l5994:
  5526                           
  5527                           ; BSR set to: 1
  5528  001DF8  0E00               	movlw	0
  5529  001DFA  6F80               	movwf	powf@n& (0+255),b
  5530  001DFC  0E00               	movlw	0
  5531  001DFE  6F81               	movwf	(powf@n+1)& (0+255),b
  5532  001E00  0E00               	movlw	0
  5533  001E02  6F82               	movwf	(powf@n+2)& (0+255),b
  5534  001E04  0E00               	movlw	0
  5535  001E06  6F83               	movwf	(powf@n+3)& (0+255),b
  5536  001E08                     
  5537                           ; BSR set to: 1
  5538  001E08  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  5539  001E0A  EF12  F00F         	goto	u5720
  5540  001E0E  51AB               	movf	(powf@ix+3)& (0+255),w,b
  5541  001E10  E107               	bnz	u5721
  5542  001E12  0E80               	movlw	128
  5543  001E14  5DAA               	subwf	(powf@ix+2)& (0+255),w,b
  5544  001E16  B0D8               	btfsc	status,0,c
  5545  001E18  EF10  F00F         	goto	u5721
  5546  001E1C  EF12  F00F         	goto	u5720
  5547  001E20                     u5721:
  5548  001E20  EF45  F00F         	goto	l6006
  5549  001E24                     u5720:
  5550  001E24                     
  5551                           ; BSR set to: 1
  5552  001E24  C170  F019         	movff	powf@ax,___flmul@b
  5553  001E28  C171  F01A         	movff	powf@ax+1,___flmul@b+1
  5554  001E2C  C172  F01B         	movff	powf@ax+2,___flmul@b+2
  5555  001E30  C173  F01C         	movff	powf@ax+3,___flmul@b+3
  5556  001E34  0E00               	movlw	0
  5557  001E36  6E1D               	movwf	___flmul@a^0,c
  5558  001E38  0E00               	movlw	0
  5559  001E3A  6E1E               	movwf	(___flmul@a+1)^0,c
  5560  001E3C  0E80               	movlw	128
  5561  001E3E  6E1F               	movwf	(___flmul@a+2)^0,c
  5562  001E40  0E4B               	movlw	75
  5563  001E42  6E20               	movwf	(___flmul@a+3)^0,c
  5564  001E44  EC47  F022         	call	___flmul	;wreg free
  5565  001E48  C019  F170         	movff	?___flmul,powf@ax
  5566  001E4C  C01A  F171         	movff	?___flmul+1,powf@ax+1
  5567  001E50  C01B  F172         	movff	?___flmul+2,powf@ax+2
  5568  001E54  C01C  F173         	movff	?___flmul+3,powf@ax+3
  5569  001E58  0EE8               	movlw	232
  5570  001E5A  0101               	movlb	1	; () banked
  5571  001E5C  2780               	addwf	powf@n& (0+255),f,b
  5572  001E5E  0EFF               	movlw	255
  5573  001E60  2381               	addwfc	(powf@n+1)& (0+255),f,b
  5574  001E62  0EFF               	movlw	255
  5575  001E64  2382               	addwfc	(powf@n+2)& (0+255),f,b
  5576  001E66  0EFF               	movlw	255
  5577  001E68  2383               	addwfc	(powf@n+3)& (0+255),f,b
  5578  001E6A                     
  5579                           ; BSR set to: 1
  5580  001E6A  C170  F1B8         	movff	powf@ax,powf@__xc8_float_word
  5581  001E6E  C171  F1B9         	movff	powf@ax+1,powf@__xc8_float_word+1
  5582  001E72  C172  F1BA         	movff	powf@ax+2,powf@__xc8_float_word+2
  5583  001E76  C173  F1BB         	movff	powf@ax+3,powf@__xc8_float_word+3
  5584  001E7A                     
  5585                           ; BSR set to: 1
  5586  001E7A  C1B8  F1A8         	movff	powf@__xc8_float_word,powf@ix
  5587  001E7E  C1B9  F1A9         	movff	powf@__xc8_float_word+1,powf@ix+1
  5588  001E82  C1BA  F1AA         	movff	powf@__xc8_float_word+2,powf@ix+2
  5589  001E86  C1BB  F1AB         	movff	powf@__xc8_float_word+3,powf@ix+3
  5590  001E8A                     l6006:
  5591                           
  5592                           ; BSR set to: 1
  5593  001E8A  0E17               	movlw	23
  5594  001E8C  0100               	movlb	0	; () banked
  5595  001E8E  6F90               	movwf	??_powf& (0+255),b
  5596  001E90  C1A8  F091         	movff	powf@ix,??_powf+1
  5597  001E94  C1A9  F092         	movff	powf@ix+1,??_powf+2
  5598  001E98  C1AA  F093         	movff	powf@ix+2,??_powf+3
  5599  001E9C  C1AB  F094         	movff	powf@ix+3,??_powf+4
  5600  001EA0                     u5735:
  5601  001EA0  6790               	tstfsz	??_powf& (0+255),b
  5602  001EA2  EF55  F00F         	goto	u5736
  5603  001EA6  EF5D  F00F         	goto	u5737
  5604  001EAA                     u5736:
  5605  001EAA  3594               	rlcf	(??_powf+4)& (0+255),w,b
  5606  001EAC  3394               	rrcf	(??_powf+4)& (0+255),f,b
  5607  001EAE  3393               	rrcf	(??_powf+3)& (0+255),f,b
  5608  001EB0  3392               	rrcf	(??_powf+2)& (0+255),f,b
  5609  001EB2  3391               	rrcf	(??_powf+1)& (0+255),f,b
  5610  001EB4  2F90               	decfsz	??_powf& (0+255),f,b
  5611  001EB6  EF50  F00F         	goto	u5735
  5612  001EBA                     u5737:
  5613  001EBA  0E81               	movlw	129
  5614  001EBC  0100               	movlb	0	; () banked
  5615  001EBE  2591               	addwf	(??_powf+1)& (0+255),w,b
  5616  001EC0  6F95               	movwf	(??_powf+5)& (0+255),b
  5617  001EC2  0EFF               	movlw	255
  5618  001EC4  2192               	addwfc	(??_powf+2)& (0+255),w,b
  5619  001EC6  6F96               	movwf	(??_powf+6)& (0+255),b
  5620  001EC8  0EFF               	movlw	255
  5621  001ECA  2193               	addwfc	(??_powf+3)& (0+255),w,b
  5622  001ECC  6F97               	movwf	(??_powf+7)& (0+255),b
  5623  001ECE  0EFF               	movlw	255
  5624  001ED0  2194               	addwfc	(??_powf+4)& (0+255),w,b
  5625  001ED2  6F98               	movwf	(??_powf+8)& (0+255),b
  5626  001ED4  5195               	movf	(??_powf+5)& (0+255),w,b
  5627  001ED6  0101               	movlb	1	; () banked
  5628  001ED8  2780               	addwf	powf@n& (0+255),f,b
  5629  001EDA  0100               	movlb	0	; () banked
  5630  001EDC  5196               	movf	(??_powf+6)& (0+255),w,b
  5631  001EDE  0101               	movlb	1	; () banked
  5632  001EE0  2381               	addwfc	(powf@n+1)& (0+255),f,b
  5633  001EE2  0100               	movlb	0	; () banked
  5634  001EE4  5197               	movf	(??_powf+7)& (0+255),w,b
  5635  001EE6  0101               	movlb	1	; () banked
  5636  001EE8  2382               	addwfc	(powf@n+2)& (0+255),f,b
  5637  001EEA  0100               	movlb	0	; () banked
  5638  001EEC  5198               	movf	(??_powf+8)& (0+255),w,b
  5639  001EEE  0101               	movlb	1	; () banked
  5640  001EF0  2383               	addwfc	(powf@n+3)& (0+255),f,b
  5641  001EF2                     
  5642                           ; BSR set to: 1
  5643  001EF2  0EFF               	movlw	255
  5644  001EF4  15A8               	andwf	powf@ix& (0+255),w,b
  5645  001EF6  6FAC               	movwf	powf@j& (0+255),b
  5646  001EF8  0EFF               	movlw	255
  5647  001EFA  15A9               	andwf	(powf@ix+1)& (0+255),w,b
  5648  001EFC  6FAD               	movwf	(powf@j+1)& (0+255),b
  5649  001EFE  0E7F               	movlw	127
  5650  001F00  15AA               	andwf	(powf@ix+2)& (0+255),w,b
  5651  001F02  6FAE               	movwf	(powf@j+2)& (0+255),b
  5652  001F04  0E00               	movlw	0
  5653  001F06  15AB               	andwf	(powf@ix+3)& (0+255),w,b
  5654  001F08  6FAF               	movwf	(powf@j+3)& (0+255),b
  5655  001F0A                     
  5656                           ; BSR set to: 1
  5657  001F0A  0E00               	movlw	0
  5658  001F0C  11AC               	iorwf	powf@j& (0+255),w,b
  5659  001F0E  6FA8               	movwf	powf@ix& (0+255),b
  5660  001F10  0E00               	movlw	0
  5661  001F12  11AD               	iorwf	(powf@j+1)& (0+255),w,b
  5662  001F14  6FA9               	movwf	(powf@ix+1)& (0+255),b
  5663  001F16  0E80               	movlw	128
  5664  001F18  11AE               	iorwf	(powf@j+2)& (0+255),w,b
  5665  001F1A  6FAA               	movwf	(powf@ix+2)& (0+255),b
  5666  001F1C  0E3F               	movlw	63
  5667  001F1E  11AF               	iorwf	(powf@j+3)& (0+255),w,b
  5668  001F20  6FAB               	movwf	(powf@ix+3)& (0+255),b
  5669  001F22                     
  5670                           ; BSR set to: 1
  5671  001F22  BFAF               	btfsc	(powf@j+3)& (0+255),7,b
  5672  001F24  EFA3  F00F         	goto	u5740
  5673  001F28  51AF               	movf	(powf@j+3)& (0+255),w,b
  5674  001F2A  E10B               	bnz	u5741
  5675  001F2C  0E72               	movlw	114
  5676  001F2E  5DAC               	subwf	powf@j& (0+255),w,b
  5677  001F30  0EC4               	movlw	196
  5678  001F32  59AD               	subwfb	(powf@j+1)& (0+255),w,b
  5679  001F34  0E1C               	movlw	28
  5680  001F36  59AE               	subwfb	(powf@j+2)& (0+255),w,b
  5681  001F38  B0D8               	btfsc	status,0,c
  5682  001F3A  EFA1  F00F         	goto	u5741
  5683  001F3E  EFA3  F00F         	goto	u5740
  5684  001F42                     u5741:
  5685  001F42  EFAD  F00F         	goto	l6016
  5686  001F46                     u5740:
  5687  001F46                     
  5688                           ; BSR set to: 1
  5689  001F46  0E00               	movlw	0
  5690  001F48  6FA0               	movwf	powf@k& (0+255),b
  5691  001F4A  0E00               	movlw	0
  5692  001F4C  6FA1               	movwf	(powf@k+1)& (0+255),b
  5693  001F4E  0E00               	movlw	0
  5694  001F50  6FA2               	movwf	(powf@k+2)& (0+255),b
  5695  001F52  0E00               	movlw	0
  5696  001F54  6FA3               	movwf	(powf@k+3)& (0+255),b
  5697  001F56  EFDF  F00F         	goto	l6026
  5698  001F5A                     l6016:
  5699                           
  5700                           ; BSR set to: 1
  5701  001F5A  BFAF               	btfsc	(powf@j+3)& (0+255),7,b
  5702  001F5C  EFBF  F00F         	goto	u5750
  5703  001F60  51AF               	movf	(powf@j+3)& (0+255),w,b
  5704  001F62  E10B               	bnz	u5751
  5705  001F64  0ED7               	movlw	215
  5706  001F66  5DAC               	subwf	powf@j& (0+255),w,b
  5707  001F68  0EB3               	movlw	179
  5708  001F6A  59AD               	subwfb	(powf@j+1)& (0+255),w,b
  5709  001F6C  0E5D               	movlw	93
  5710  001F6E  59AE               	subwfb	(powf@j+2)& (0+255),w,b
  5711  001F70  B0D8               	btfsc	status,0,c
  5712  001F72  EFBD  F00F         	goto	u5751
  5713  001F76  EFBF  F00F         	goto	u5750
  5714  001F7A                     u5751:
  5715  001F7A  EFC9  F00F         	goto	l6020
  5716  001F7E                     u5750:
  5717  001F7E                     
  5718                           ; BSR set to: 1
  5719  001F7E  0E01               	movlw	1
  5720  001F80  6FA0               	movwf	powf@k& (0+255),b
  5721  001F82  0E00               	movlw	0
  5722  001F84  6FA1               	movwf	(powf@k+1)& (0+255),b
  5723  001F86  0E00               	movlw	0
  5724  001F88  6FA2               	movwf	(powf@k+2)& (0+255),b
  5725  001F8A  0E00               	movlw	0
  5726  001F8C  6FA3               	movwf	(powf@k+3)& (0+255),b
  5727  001F8E  EFDF  F00F         	goto	l6026
  5728  001F92                     l6020:
  5729                           
  5730                           ; BSR set to: 1
  5731  001F92  0E00               	movlw	0
  5732  001F94  6FA0               	movwf	powf@k& (0+255),b
  5733  001F96  0E00               	movlw	0
  5734  001F98  6FA1               	movwf	(powf@k+1)& (0+255),b
  5735  001F9A  0E00               	movlw	0
  5736  001F9C  6FA2               	movwf	(powf@k+2)& (0+255),b
  5737  001F9E  0E00               	movlw	0
  5738  001FA0  6FA3               	movwf	(powf@k+3)& (0+255),b
  5739  001FA2                     
  5740                           ; BSR set to: 1
  5741  001FA2  0E01               	movlw	1
  5742  001FA4  2780               	addwf	powf@n& (0+255),f,b
  5743  001FA6  0E00               	movlw	0
  5744  001FA8  2381               	addwfc	(powf@n+1)& (0+255),f,b
  5745  001FAA  2382               	addwfc	(powf@n+2)& (0+255),f,b
  5746  001FAC  2383               	addwfc	(powf@n+3)& (0+255),f,b
  5747  001FAE                     
  5748                           ; BSR set to: 1
  5749  001FAE  0E00               	movlw	0
  5750  001FB0  27A8               	addwf	powf@ix& (0+255),f,b
  5751  001FB2  0E00               	movlw	0
  5752  001FB4  23A9               	addwfc	(powf@ix+1)& (0+255),f,b
  5753  001FB6  0E80               	movlw	128
  5754  001FB8  23AA               	addwfc	(powf@ix+2)& (0+255),f,b
  5755  001FBA  0EFF               	movlw	255
  5756  001FBC  23AB               	addwfc	(powf@ix+3)& (0+255),f,b
  5757  001FBE                     l6026:
  5758                           
  5759                           ; BSR set to: 1
  5760  001FBE  C1A8  F1B8         	movff	powf@ix,powf@__xc8_float_word
  5761  001FC2  C1A9  F1B9         	movff	powf@ix+1,powf@__xc8_float_word+1
  5762  001FC6  C1AA  F1BA         	movff	powf@ix+2,powf@__xc8_float_word+2
  5763  001FCA  C1AB  F1BB         	movff	powf@ix+3,powf@__xc8_float_word+3
  5764  001FCE                     
  5765                           ; BSR set to: 1
  5766  001FCE  C1B8  F170         	movff	powf@__xc8_float_word,powf@ax
  5767  001FD2  C1B9  F171         	movff	powf@__xc8_float_word+1,powf@ax+1
  5768  001FD6  C1BA  F172         	movff	powf@__xc8_float_word+2,powf@ax+2
  5769  001FDA  C1BB  F173         	movff	powf@__xc8_float_word+3,powf@ax+3
  5770  001FDE                     
  5771                           ; BSR set to: 1
  5772  001FDE  C170  F032         	movff	powf@ax,___flsub@b
  5773  001FE2  C171  F033         	movff	powf@ax+1,___flsub@b+1
  5774  001FE6  C172  F034         	movff	powf@ax+2,___flsub@b+2
  5775  001FEA  C173  F035         	movff	powf@ax+3,___flsub@b+3
  5776  001FEE  C1A0  F090         	movff	powf@k,??_powf
  5777  001FF2  C1A1  F091         	movff	powf@k+1,??_powf+1
  5778  001FF6  0100               	movlb	0	; () banked
  5779  001FF8  90D8               	bcf	status,0,c
  5780  001FFA  3790               	rlcf	??_powf& (0+255),f,b
  5781  001FFC  3791               	rlcf	(??_powf+1)& (0+255),f,b
  5782  001FFE  90D8               	bcf	status,0,c
  5783  002000  3790               	rlcf	??_powf& (0+255),f,b
  5784  002002  3791               	rlcf	(??_powf+1)& (0+255),f,b
  5785  002004  0E69               	movlw	low _bp
  5786  002006  2590               	addwf	??_powf& (0+255),w,b
  5787  002008  6EF6               	movwf	tblptrl,c
  5788  00200A  0E10               	movlw	high _bp
  5789  00200C  2191               	addwfc	(??_powf+1)& (0+255),w,b
  5790  00200E  6EF7               	movwf	tblptrh,c
  5791  002010                     	if	1	;There are 3 active tblptr bytes
  5792  002010  6AF8               	clrf	tblptru,c
  5793  002012  0E00               	movlw	low (__mediumconst shr (0+16))
  5794  002014  22F8               	addwfc	tblptru,f,c
  5795  002016                     	endif
  5796  002016  0009               	tblrd		*+
  5797  002018  CFF5 F036          	movff	tablat,___flsub@a
  5798  00201C  0009               	tblrd		*+
  5799  00201E  CFF5 F037          	movff	tablat,___flsub@a+1
  5800  002022  0009               	tblrd		*+
  5801  002024  CFF5 F038          	movff	tablat,___flsub@a+2
  5802  002028  000A               	tblrd		*-
  5803  00202A  CFF5 F039          	movff	tablat,___flsub@a+3
  5804  00202E  EC88  F032         	call	___flsub	;wreg free
  5805  002032  C032  F174         	movff	?___flsub,powf@u
  5806  002036  C033  F175         	movff	?___flsub+1,powf@u+1
  5807  00203A  C034  F176         	movff	?___flsub+2,powf@u+2
  5808  00203E  C035  F177         	movff	?___flsub+3,powf@u+3
  5809  002042  0E00               	movlw	0
  5810  002044  6E3A               	movwf	___fldiv@b^0,c
  5811  002046  0E00               	movlw	0
  5812  002048  6E3B               	movwf	(___fldiv@b+1)^0,c
  5813  00204A  0E80               	movlw	128
  5814  00204C  6E3C               	movwf	(___fldiv@b+2)^0,c
  5815  00204E  0E3F               	movlw	63
  5816  002050  6E3D               	movwf	(___fldiv@b+3)^0,c
  5817  002052  C170  F00D         	movff	powf@ax,___fladd@a
  5818  002056  C171  F00E         	movff	powf@ax+1,___fladd@a+1
  5819  00205A  C172  F00F         	movff	powf@ax+2,___fladd@a+2
  5820  00205E  C173  F010         	movff	powf@ax+3,___fladd@a+3
  5821  002062  C1A0  F090         	movff	powf@k,??_powf
  5822  002066  C1A1  F091         	movff	powf@k+1,??_powf+1
  5823  00206A  0100               	movlb	0	; () banked
  5824  00206C  90D8               	bcf	status,0,c
  5825  00206E  3790               	rlcf	??_powf& (0+255),f,b
  5826  002070  3791               	rlcf	(??_powf+1)& (0+255),f,b
  5827  002072  90D8               	bcf	status,0,c
  5828  002074  3790               	rlcf	??_powf& (0+255),f,b
  5829  002076  3791               	rlcf	(??_powf+1)& (0+255),f,b
  5830  002078  0E69               	movlw	low _bp
  5831  00207A  2590               	addwf	??_powf& (0+255),w,b
  5832  00207C  6EF6               	movwf	tblptrl,c
  5833  00207E  0E10               	movlw	high _bp
  5834  002080  2191               	addwfc	(??_powf+1)& (0+255),w,b
  5835  002082  6EF7               	movwf	tblptrh,c
  5836  002084                     	if	1	;There are 3 active tblptr bytes
  5837  002084  6AF8               	clrf	tblptru,c
  5838  002086  0E00               	movlw	low (__mediumconst shr (0+16))
  5839  002088  22F8               	addwfc	tblptru,f,c
  5840  00208A                     	endif
  5841  00208A  0009               	tblrd		*+
  5842  00208C  CFF5 F009          	movff	tablat,___fladd@b
  5843  002090  0009               	tblrd		*+
  5844  002092  CFF5 F00A          	movff	tablat,___fladd@b+1
  5845  002096  0009               	tblrd		*+
  5846  002098  CFF5 F00B          	movff	tablat,___fladd@b+2
  5847  00209C  000A               	tblrd		*-
  5848  00209E  CFF5 F00C          	movff	tablat,___fladd@b+3
  5849  0020A2  ECE7  F01F         	call	___fladd	;wreg free
  5850  0020A6  C009  F03E         	movff	?___fladd,___fldiv@a
  5851  0020AA  C00A  F03F         	movff	?___fladd+1,___fldiv@a+1
  5852  0020AE  C00B  F040         	movff	?___fladd+2,___fldiv@a+2
  5853  0020B2  C00C  F041         	movff	?___fladd+3,___fldiv@a+3
  5854  0020B6  EC5C  F024         	call	___fldiv	;wreg free
  5855  0020BA  C03A  F178         	movff	?___fldiv,powf@v
  5856  0020BE  C03B  F179         	movff	?___fldiv+1,powf@v+1
  5857  0020C2  C03C  F17A         	movff	?___fldiv+2,powf@v+2
  5858  0020C6  C03D  F17B         	movff	?___fldiv+3,powf@v+3
  5859  0020CA  C174  F019         	movff	powf@u,___flmul@b
  5860  0020CE  C175  F01A         	movff	powf@u+1,___flmul@b+1
  5861  0020D2  C176  F01B         	movff	powf@u+2,___flmul@b+2
  5862  0020D6  C177  F01C         	movff	powf@u+3,___flmul@b+3
  5863  0020DA  C178  F01D         	movff	powf@v,___flmul@a
  5864  0020DE  C179  F01E         	movff	powf@v+1,___flmul@a+1
  5865  0020E2  C17A  F01F         	movff	powf@v+2,___flmul@a+2
  5866  0020E6  C17B  F020         	movff	powf@v+3,___flmul@a+3
  5867  0020EA  EC47  F022         	call	___flmul	;wreg free
  5868  0020EE  C019  F15C         	movff	?___flmul,powf@s
  5869  0020F2  C01A  F15D         	movff	?___flmul+1,powf@s+1
  5870  0020F6  C01B  F15E         	movff	?___flmul+2,powf@s+2
  5871  0020FA  C01C  F15F         	movff	?___flmul+3,powf@s+3
  5872  0020FE  C15C  F16C         	movff	powf@s,powf@s_h
  5873  002102  C15D  F16D         	movff	powf@s+1,powf@s_h+1
  5874  002106  C15E  F16E         	movff	powf@s+2,powf@s_h+2
  5875  00210A  C15F  F16F         	movff	powf@s+3,powf@s_h+3
  5876  00210E  C16C  F1B8         	movff	powf@s_h,powf@__xc8_float_word
  5877  002112  C16D  F1B9         	movff	powf@s_h+1,powf@__xc8_float_word+1
  5878  002116  C16E  F1BA         	movff	powf@s_h+2,powf@__xc8_float_word+2
  5879  00211A  C16F  F1BB         	movff	powf@s_h+3,powf@__xc8_float_word+3
  5880  00211E  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
  5881  002122  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
  5882  002126  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
  5883  00212A  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
  5884  00212E  0E00               	movlw	0
  5885  002130  0101               	movlb	1	; () banked
  5886  002132  1594               	andwf	powf@is& (0+255),w,b
  5887  002134  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  5888  002136  0EF0               	movlw	240
  5889  002138  1595               	andwf	(powf@is+1)& (0+255),w,b
  5890  00213A  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  5891  00213C  0EFF               	movlw	255
  5892  00213E  1596               	andwf	(powf@is+2)& (0+255),w,b
  5893  002140  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  5894  002142  0EFF               	movlw	255
  5895  002144  1597               	andwf	(powf@is+3)& (0+255),w,b
  5896  002146  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  5897  002148                     
  5898                           ; BSR set to: 1
  5899  002148  C1B8  F16C         	movff	powf@__xc8_float_word,powf@s_h
  5900  00214C  C1B9  F16D         	movff	powf@__xc8_float_word+1,powf@s_h+1
  5901  002150  C1BA  F16E         	movff	powf@__xc8_float_word+2,powf@s_h+2
  5902  002154  C1BB  F16F         	movff	powf@__xc8_float_word+3,powf@s_h+3
  5903  002158                     
  5904                           ; BSR set to: 1
  5905  002158  C1A8  F090         	movff	powf@ix,??_powf
  5906  00215C  C1A9  F091         	movff	powf@ix+1,??_powf+1
  5907  002160  C1AA  F092         	movff	powf@ix+2,??_powf+2
  5908  002164  C1AB  F093         	movff	powf@ix+3,??_powf+3
  5909  002168  0100               	movlb	0	; () banked
  5910  00216A  3593               	rlcf	(??_powf+3)& (0+255),w,b
  5911  00216C  3393               	rrcf	(??_powf+3)& (0+255),f,b
  5912  00216E  3392               	rrcf	(??_powf+2)& (0+255),f,b
  5913  002170  3391               	rrcf	(??_powf+1)& (0+255),f,b
  5914  002172  3390               	rrcf	??_powf& (0+255),f,b
  5915  002174  0E00               	movlw	0
  5916  002176  1590               	andwf	??_powf& (0+255),w,b
  5917  002178  6F94               	movwf	(??_powf+4)& (0+255),b
  5918  00217A  0EF0               	movlw	240
  5919  00217C  1591               	andwf	(??_powf+1)& (0+255),w,b
  5920  00217E  6F95               	movwf	(??_powf+5)& (0+255),b
  5921  002180  0EFF               	movlw	255
  5922  002182  1592               	andwf	(??_powf+2)& (0+255),w,b
  5923  002184  6F96               	movwf	(??_powf+6)& (0+255),b
  5924  002186  0EFF               	movlw	255
  5925  002188  1593               	andwf	(??_powf+3)& (0+255),w,b
  5926  00218A  6F97               	movwf	(??_powf+7)& (0+255),b
  5927  00218C  0E00               	movlw	0
  5928  00218E  1194               	iorwf	(??_powf+4)& (0+255),w,b
  5929  002190  0101               	movlb	1	; () banked
  5930  002192  6F94               	movwf	powf@is& (0+255),b
  5931  002194  0E00               	movlw	0
  5932  002196  0100               	movlb	0	; () banked
  5933  002198  1195               	iorwf	(??_powf+5)& (0+255),w,b
  5934  00219A  0101               	movlb	1	; () banked
  5935  00219C  6F95               	movwf	(powf@is+1)& (0+255),b
  5936  00219E  0E00               	movlw	0
  5937  0021A0  0100               	movlb	0	; () banked
  5938  0021A2  1196               	iorwf	(??_powf+6)& (0+255),w,b
  5939  0021A4  0101               	movlb	1	; () banked
  5940  0021A6  6F96               	movwf	(powf@is+2)& (0+255),b
  5941  0021A8  0E20               	movlw	32
  5942  0021AA  0100               	movlb	0	; () banked
  5943  0021AC  1197               	iorwf	(??_powf+7)& (0+255),w,b
  5944  0021AE  0101               	movlb	1	; () banked
  5945  0021B0  6F97               	movwf	(powf@is+3)& (0+255),b
  5946  0021B2                     
  5947                           ; BSR set to: 1
  5948  0021B2  C1A0  F090         	movff	powf@k,??_powf
  5949  0021B6  C1A1  F091         	movff	powf@k+1,??_powf+1
  5950  0021BA  C1A2  F092         	movff	powf@k+2,??_powf+2
  5951  0021BE  C1A3  F093         	movff	powf@k+3,??_powf+3
  5952  0021C2  0E15               	movlw	21
  5953  0021C4                     u5765:
  5954  0021C4  90D8               	bcf	status,0,c
  5955  0021C6  0100               	movlb	0	; () banked
  5956  0021C8  3790               	rlcf	??_powf& (0+255),f,b
  5957  0021CA  3791               	rlcf	(??_powf+1)& (0+255),f,b
  5958  0021CC  3792               	rlcf	(??_powf+2)& (0+255),f,b
  5959  0021CE  3793               	rlcf	(??_powf+3)& (0+255),f,b
  5960  0021D0  2EE8               	decfsz	wreg,f,c
  5961  0021D2  EFE2  F010         	goto	u5765
  5962  0021D6  0101               	movlb	1	; () banked
  5963  0021D8  5194               	movf	powf@is& (0+255),w,b
  5964  0021DA  0100               	movlb	0	; () banked
  5965  0021DC  2590               	addwf	??_powf& (0+255),w,b
  5966  0021DE  6F94               	movwf	(??_powf+4)& (0+255),b
  5967  0021E0  0101               	movlb	1	; () banked
  5968  0021E2  5195               	movf	(powf@is+1)& (0+255),w,b
  5969  0021E4  0100               	movlb	0	; () banked
  5970  0021E6  2191               	addwfc	(??_powf+1)& (0+255),w,b
  5971  0021E8  6F95               	movwf	(??_powf+5)& (0+255),b
  5972  0021EA  0101               	movlb	1	; () banked
  5973  0021EC  5196               	movf	(powf@is+2)& (0+255),w,b
  5974  0021EE  0100               	movlb	0	; () banked
  5975  0021F0  2192               	addwfc	(??_powf+2)& (0+255),w,b
  5976  0021F2  6F96               	movwf	(??_powf+6)& (0+255),b
  5977  0021F4  0101               	movlb	1	; () banked
  5978  0021F6  5197               	movf	(powf@is+3)& (0+255),w,b
  5979  0021F8  0100               	movlb	0	; () banked
  5980  0021FA  2193               	addwfc	(??_powf+3)& (0+255),w,b
  5981  0021FC  6F97               	movwf	(??_powf+7)& (0+255),b
  5982  0021FE  0E00               	movlw	0
  5983  002200  2594               	addwf	(??_powf+4)& (0+255),w,b
  5984  002202  0101               	movlb	1	; () banked
  5985  002204  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  5986  002206  0E00               	movlw	0
  5987  002208  0100               	movlb	0	; () banked
  5988  00220A  2195               	addwfc	(??_powf+5)& (0+255),w,b
  5989  00220C  0101               	movlb	1	; () banked
  5990  00220E  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  5991  002210  0E40               	movlw	64
  5992  002212  0100               	movlb	0	; () banked
  5993  002214  2196               	addwfc	(??_powf+6)& (0+255),w,b
  5994  002216  0101               	movlb	1	; () banked
  5995  002218  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  5996  00221A  0E00               	movlw	0
  5997  00221C  0100               	movlb	0	; () banked
  5998  00221E  2197               	addwfc	(??_powf+7)& (0+255),w,b
  5999  002220  0101               	movlb	1	; () banked
  6000  002222  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  6001  002224                     
  6002                           ; BSR set to: 1
  6003  002224  C1B8  F168         	movff	powf@__xc8_float_word,powf@t_h
  6004  002228  C1B9  F169         	movff	powf@__xc8_float_word+1,powf@t_h+1
  6005  00222C  C1BA  F16A         	movff	powf@__xc8_float_word+2,powf@t_h+2
  6006  002230  C1BB  F16B         	movff	powf@__xc8_float_word+3,powf@t_h+3
  6007  002234                     
  6008                           ; BSR set to: 1
  6009  002234  C1A0  F090         	movff	powf@k,??_powf
  6010  002238  C1A1  F091         	movff	powf@k+1,??_powf+1
  6011  00223C  0100               	movlb	0	; () banked
  6012  00223E  90D8               	bcf	status,0,c
  6013  002240  3790               	rlcf	??_powf& (0+255),f,b
  6014  002242  3791               	rlcf	(??_powf+1)& (0+255),f,b
  6015  002244  90D8               	bcf	status,0,c
  6016  002246  3790               	rlcf	??_powf& (0+255),f,b
  6017  002248  3791               	rlcf	(??_powf+1)& (0+255),f,b
  6018  00224A  0E69               	movlw	low _bp
  6019  00224C  2590               	addwf	??_powf& (0+255),w,b
  6020  00224E  6EF6               	movwf	tblptrl,c
  6021  002250  0E10               	movlw	high _bp
  6022  002252  2191               	addwfc	(??_powf+1)& (0+255),w,b
  6023  002254  6EF7               	movwf	tblptrh,c
  6024  002256                     	if	1	;There are 3 active tblptr bytes
  6025  002256  6AF8               	clrf	tblptru,c
  6026  002258  0E00               	movlw	low (__mediumconst shr (0+16))
  6027  00225A  22F8               	addwfc	tblptru,f,c
  6028  00225C                     	endif
  6029  00225C  0009               	tblrd		*+
  6030  00225E  CFF5 F036          	movff	tablat,___flsub@a
  6031  002262  0009               	tblrd		*+
  6032  002264  CFF5 F037          	movff	tablat,___flsub@a+1
  6033  002268  0009               	tblrd		*+
  6034  00226A  CFF5 F038          	movff	tablat,___flsub@a+2
  6035  00226E  000A               	tblrd		*-
  6036  002270  CFF5 F039          	movff	tablat,___flsub@a+3
  6037  002274  C168  F032         	movff	powf@t_h,___flsub@b
  6038  002278  C169  F033         	movff	powf@t_h+1,___flsub@b+1
  6039  00227C  C16A  F034         	movff	powf@t_h+2,___flsub@b+2
  6040  002280  C16B  F035         	movff	powf@t_h+3,___flsub@b+3
  6041  002284  EC88  F032         	call	___flsub	;wreg free
  6042  002288  C032  F198         	movff	?___flsub,_powf$1778
  6043  00228C  C033  F199         	movff	?___flsub+1,_powf$1778+1
  6044  002290  C034  F19A         	movff	?___flsub+2,_powf$1778+2
  6045  002294  C035  F19B         	movff	?___flsub+3,_powf$1778+3
  6046  002298  C170  F032         	movff	powf@ax,___flsub@b
  6047  00229C  C171  F033         	movff	powf@ax+1,___flsub@b+1
  6048  0022A0  C172  F034         	movff	powf@ax+2,___flsub@b+2
  6049  0022A4  C173  F035         	movff	powf@ax+3,___flsub@b+3
  6050  0022A8  C198  F036         	movff	_powf$1778,___flsub@a
  6051  0022AC  C199  F037         	movff	_powf$1778+1,___flsub@a+1
  6052  0022B0  C19A  F038         	movff	_powf$1778+2,___flsub@a+2
  6053  0022B4  C19B  F039         	movff	_powf$1778+3,___flsub@a+3
  6054  0022B8  EC88  F032         	call	___flsub	;wreg free
  6055  0022BC  C032  F134         	movff	?___flsub,powf@t_l
  6056  0022C0  C033  F135         	movff	?___flsub+1,powf@t_l+1
  6057  0022C4  C034  F136         	movff	?___flsub+2,powf@t_l+2
  6058  0022C8  C035  F137         	movff	?___flsub+3,powf@t_l+3
  6059  0022CC  C168  F01D         	movff	powf@t_h,___flmul@a
  6060  0022D0  C169  F01E         	movff	powf@t_h+1,___flmul@a+1
  6061  0022D4  C16A  F01F         	movff	powf@t_h+2,___flmul@a+2
  6062  0022D8  C16B  F020         	movff	powf@t_h+3,___flmul@a+3
  6063  0022DC  C16C  F019         	movff	powf@s_h,___flmul@b
  6064  0022E0  C16D  F01A         	movff	powf@s_h+1,___flmul@b+1
  6065  0022E4  C16E  F01B         	movff	powf@s_h+2,___flmul@b+2
  6066  0022E8  C16F  F01C         	movff	powf@s_h+3,___flmul@b+3
  6067  0022EC  EC47  F022         	call	___flmul	;wreg free
  6068  0022F0  C019  F036         	movff	?___flmul,___flsub@a
  6069  0022F4  C01A  F037         	movff	?___flmul+1,___flsub@a+1
  6070  0022F8  C01B  F038         	movff	?___flmul+2,___flsub@a+2
  6071  0022FC  C01C  F039         	movff	?___flmul+3,___flsub@a+3
  6072  002300  C174  F032         	movff	powf@u,___flsub@b
  6073  002304  C175  F033         	movff	powf@u+1,___flsub@b+1
  6074  002308  C176  F034         	movff	powf@u+2,___flsub@b+2
  6075  00230C  C177  F035         	movff	powf@u+3,___flsub@b+3
  6076  002310  EC88  F032         	call	___flsub	;wreg free
  6077  002314  C032  F198         	movff	?___flsub,_powf$1778
  6078  002318  C033  F199         	movff	?___flsub+1,_powf$1778+1
  6079  00231C  C034  F19A         	movff	?___flsub+2,_powf$1778+2
  6080  002320  C035  F19B         	movff	?___flsub+3,_powf$1778+3
  6081  002324  C134  F01D         	movff	powf@t_l,___flmul@a
  6082  002328  C135  F01E         	movff	powf@t_l+1,___flmul@a+1
  6083  00232C  C136  F01F         	movff	powf@t_l+2,___flmul@a+2
  6084  002330  C137  F020         	movff	powf@t_l+3,___flmul@a+3
  6085  002334  C16C  F019         	movff	powf@s_h,___flmul@b
  6086  002338  C16D  F01A         	movff	powf@s_h+1,___flmul@b+1
  6087  00233C  C16E  F01B         	movff	powf@s_h+2,___flmul@b+2
  6088  002340  C16F  F01C         	movff	powf@s_h+3,___flmul@b+3
  6089  002344  EC47  F022         	call	___flmul	;wreg free
  6090  002348  C019  F036         	movff	?___flmul,___flsub@a
  6091  00234C  C01A  F037         	movff	?___flmul+1,___flsub@a+1
  6092  002350  C01B  F038         	movff	?___flmul+2,___flsub@a+2
  6093  002354  C01C  F039         	movff	?___flmul+3,___flsub@a+3
  6094  002358  C198  F032         	movff	_powf$1778,___flsub@b
  6095  00235C  C199  F033         	movff	_powf$1778+1,___flsub@b+1
  6096  002360  C19A  F034         	movff	_powf$1778+2,___flsub@b+2
  6097  002364  C19B  F035         	movff	_powf$1778+3,___flsub@b+3
  6098  002368  EC88  F032         	call	___flsub	;wreg free
  6099  00236C  C032  F154         	movff	?___flsub,_powf$1776
  6100  002370  C033  F155         	movff	?___flsub+1,_powf$1776+1
  6101  002374  C034  F156         	movff	?___flsub+2,_powf$1776+2
  6102  002378  C035  F157         	movff	?___flsub+3,_powf$1776+3
  6103  00237C  C154  F019         	movff	_powf$1776,___flmul@b
  6104  002380  C155  F01A         	movff	_powf$1776+1,___flmul@b+1
  6105  002384  C156  F01B         	movff	_powf$1776+2,___flmul@b+2
  6106  002388  C157  F01C         	movff	_powf$1776+3,___flmul@b+3
  6107  00238C  C178  F01D         	movff	powf@v,___flmul@a
  6108  002390  C179  F01E         	movff	powf@v+1,___flmul@a+1
  6109  002394  C17A  F01F         	movff	powf@v+2,___flmul@a+2
  6110  002398  C17B  F020         	movff	powf@v+3,___flmul@a+3
  6111  00239C  EC47  F022         	call	___flmul	;wreg free
  6112  0023A0  C019  F130         	movff	?___flmul,powf@s_l
  6113  0023A4  C01A  F131         	movff	?___flmul+1,powf@s_l+1
  6114  0023A8  C01B  F132         	movff	?___flmul+2,powf@s_l+2
  6115  0023AC  C01C  F133         	movff	?___flmul+3,powf@s_l+3
  6116  0023B0  C15C  F019         	movff	powf@s,___flmul@b
  6117  0023B4  C15D  F01A         	movff	powf@s+1,___flmul@b+1
  6118  0023B8  C15E  F01B         	movff	powf@s+2,___flmul@b+2
  6119  0023BC  C15F  F01C         	movff	powf@s+3,___flmul@b+3
  6120  0023C0  C15C  F01D         	movff	powf@s,___flmul@a
  6121  0023C4  C15D  F01E         	movff	powf@s+1,___flmul@a+1
  6122  0023C8  C15E  F01F         	movff	powf@s+2,___flmul@a+2
  6123  0023CC  C15F  F020         	movff	powf@s+3,___flmul@a+3
  6124  0023D0  EC47  F022         	call	___flmul	;wreg free
  6125  0023D4  C019  F18C         	movff	?___flmul,powf@s2
  6126  0023D8  C01A  F18D         	movff	?___flmul+1,powf@s2+1
  6127  0023DC  C01B  F18E         	movff	?___flmul+2,powf@s2+2
  6128  0023E0  C01C  F18F         	movff	?___flmul+3,powf@s2+3
  6129  0023E4  0E55               	movlw	85
  6130  0023E6  6E0D               	movwf	___fladd@a^0,c
  6131  0023E8  0E32               	movlw	50
  6132  0023EA  6E0E               	movwf	(___fladd@a+1)^0,c
  6133  0023EC  0E6C               	movlw	108
  6134  0023EE  6E0F               	movwf	(___fladd@a+2)^0,c
  6135  0023F0  0E3E               	movlw	62
  6136  0023F2  6E10               	movwf	(___fladd@a+3)^0,c
  6137  0023F4  0E42               	movlw	66
  6138  0023F6  6E1D               	movwf	___flmul@a^0,c
  6139  0023F8  0EF1               	movlw	241
  6140  0023FA  6E1E               	movwf	(___flmul@a+1)^0,c
  6141  0023FC  0E53               	movlw	83
  6142  0023FE  6E1F               	movwf	(___flmul@a+2)^0,c
  6143  002400  0E3E               	movlw	62
  6144  002402  6E20               	movwf	(___flmul@a+3)^0,c
  6145  002404  C18C  F019         	movff	powf@s2,___flmul@b
  6146  002408  C18D  F01A         	movff	powf@s2+1,___flmul@b+1
  6147  00240C  C18E  F01B         	movff	powf@s2+2,___flmul@b+2
  6148  002410  C18F  F01C         	movff	powf@s2+3,___flmul@b+3
  6149  002414  EC47  F022         	call	___flmul	;wreg free
  6150  002418  C019  F009         	movff	?___flmul,___fladd@b
  6151  00241C  C01A  F00A         	movff	?___flmul+1,___fladd@b+1
  6152  002420  C01B  F00B         	movff	?___flmul+2,___fladd@b+2
  6153  002424  C01C  F00C         	movff	?___flmul+3,___fladd@b+3
  6154  002428  ECE7  F01F         	call	___fladd	;wreg free
  6155  00242C  C009  F1A4         	movff	?___fladd,_powf$1775
  6156  002430  C00A  F1A5         	movff	?___fladd+1,_powf$1775+1
  6157  002434  C00B  F1A6         	movff	?___fladd+2,_powf$1775+2
  6158  002438  C00C  F1A7         	movff	?___fladd+3,_powf$1775+3
  6159  00243C  0E05               	movlw	5
  6160  00243E  6E0D               	movwf	___fladd@a^0,c
  6161  002440  0EA3               	movlw	163
  6162  002442  6E0E               	movwf	(___fladd@a+1)^0,c
  6163  002444  0E8B               	movlw	139
  6164  002446  6E0F               	movwf	(___fladd@a+2)^0,c
  6165  002448  0E3E               	movlw	62
  6166  00244A  6E10               	movwf	(___fladd@a+3)^0,c
  6167  00244C  C18C  F01D         	movff	powf@s2,___flmul@a
  6168  002450  C18D  F01E         	movff	powf@s2+1,___flmul@a+1
  6169  002454  C18E  F01F         	movff	powf@s2+2,___flmul@a+2
  6170  002458  C18F  F020         	movff	powf@s2+3,___flmul@a+3
  6171  00245C  C1A4  F019         	movff	_powf$1775,___flmul@b
  6172  002460  C1A5  F01A         	movff	_powf$1775+1,___flmul@b+1
  6173  002464  C1A6  F01B         	movff	_powf$1775+2,___flmul@b+2
  6174  002468  C1A7  F01C         	movff	_powf$1775+3,___flmul@b+3
  6175  00246C  EC47  F022         	call	___flmul	;wreg free
  6176  002470  C019  F009         	movff	?___flmul,___fladd@b
  6177  002474  C01A  F00A         	movff	?___flmul+1,___fladd@b+1
  6178  002478  C01B  F00B         	movff	?___flmul+2,___fladd@b+2
  6179  00247C  C01C  F00C         	movff	?___flmul+3,___fladd@b+3
  6180  002480  ECE7  F01F         	call	___fladd	;wreg free
  6181  002484  C009  F154         	movff	?___fladd,_powf$1776
  6182  002488  C00A  F155         	movff	?___fladd+1,_powf$1776+1
  6183  00248C  C00B  F156         	movff	?___fladd+2,_powf$1776+2
  6184  002490  C00C  F157         	movff	?___fladd+3,_powf$1776+3
  6185  002494  0EAB               	movlw	171
  6186  002496  6E0D               	movwf	___fladd@a^0,c
  6187  002498  0EAA               	movlw	170
  6188  00249A  6E0E               	movwf	(___fladd@a+1)^0,c
  6189  00249C  0EAA               	movlw	170
  6190  00249E  6E0F               	movwf	(___fladd@a+2)^0,c
  6191  0024A0  0E3E               	movlw	62
  6192  0024A2  6E10               	movwf	(___fladd@a+3)^0,c
  6193  0024A4  C18C  F01D         	movff	powf@s2,___flmul@a
  6194  0024A8  C18D  F01E         	movff	powf@s2+1,___flmul@a+1
  6195  0024AC  C18E  F01F         	movff	powf@s2+2,___flmul@a+2
  6196  0024B0  C18F  F020         	movff	powf@s2+3,___flmul@a+3
  6197  0024B4  C154  F019         	movff	_powf$1776,___flmul@b
  6198  0024B8  C155  F01A         	movff	_powf$1776+1,___flmul@b+1
  6199  0024BC  C156  F01B         	movff	_powf$1776+2,___flmul@b+2
  6200  0024C0  C157  F01C         	movff	_powf$1776+3,___flmul@b+3
  6201  0024C4  EC47  F022         	call	___flmul	;wreg free
  6202  0024C8  C019  F009         	movff	?___flmul,___fladd@b
  6203  0024CC  C01A  F00A         	movff	?___flmul+1,___fladd@b+1
  6204  0024D0  C01B  F00B         	movff	?___flmul+2,___fladd@b+2
  6205  0024D4  C01C  F00C         	movff	?___flmul+3,___fladd@b+3
  6206  0024D8  ECE7  F01F         	call	___fladd	;wreg free
  6207  0024DC  C009  F148         	movff	?___fladd,_powf$1777
  6208  0024E0  C00A  F149         	movff	?___fladd+1,_powf$1777+1
  6209  0024E4  C00B  F14A         	movff	?___fladd+2,_powf$1777+2
  6210  0024E8  C00C  F14B         	movff	?___fladd+3,_powf$1777+3
  6211  0024EC  0EB7               	movlw	183
  6212  0024EE  6E0D               	movwf	___fladd@a^0,c
  6213  0024F0  0E6D               	movlw	109
  6214  0024F2  6E0E               	movwf	(___fladd@a+1)^0,c
  6215  0024F4  0EDB               	movlw	219
  6216  0024F6  6E0F               	movwf	(___fladd@a+2)^0,c
  6217  0024F8  0E3E               	movlw	62
  6218  0024FA  6E10               	movwf	(___fladd@a+3)^0,c
  6219  0024FC  C18C  F01D         	movff	powf@s2,___flmul@a
  6220  002500  C18D  F01E         	movff	powf@s2+1,___flmul@a+1
  6221  002504  C18E  F01F         	movff	powf@s2+2,___flmul@a+2
  6222  002508  C18F  F020         	movff	powf@s2+3,___flmul@a+3
  6223  00250C  C148  F019         	movff	_powf$1777,___flmul@b
  6224  002510  C149  F01A         	movff	_powf$1777+1,___flmul@b+1
  6225  002514  C14A  F01B         	movff	_powf$1777+2,___flmul@b+2
  6226  002518  C14B  F01C         	movff	_powf$1777+3,___flmul@b+3
  6227  00251C  EC47  F022         	call	___flmul	;wreg free
  6228  002520  C019  F009         	movff	?___flmul,___fladd@b
  6229  002524  C01A  F00A         	movff	?___flmul+1,___fladd@b+1
  6230  002528  C01B  F00B         	movff	?___flmul+2,___fladd@b+2
  6231  00252C  C01C  F00C         	movff	?___flmul+3,___fladd@b+3
  6232  002530  ECE7  F01F         	call	___fladd	;wreg free
  6233  002534  C009  F138         	movff	?___fladd,_powf$1779
  6234  002538  C00A  F139         	movff	?___fladd+1,_powf$1779+1
  6235  00253C  C00B  F13A         	movff	?___fladd+2,_powf$1779+2
  6236  002540  C00C  F13B         	movff	?___fladd+3,_powf$1779+3
  6237  002544  0E9A               	movlw	154
  6238  002546  6E0D               	movwf	___fladd@a^0,c
  6239  002548  0E99               	movlw	153
  6240  00254A  6E0E               	movwf	(___fladd@a+1)^0,c
  6241  00254C  0E19               	movlw	25
  6242  00254E  6E0F               	movwf	(___fladd@a+2)^0,c
  6243  002550  0E3F               	movlw	63
  6244  002552  6E10               	movwf	(___fladd@a+3)^0,c
  6245  002554  C18C  F01D         	movff	powf@s2,___flmul@a
  6246  002558  C18D  F01E         	movff	powf@s2+1,___flmul@a+1
  6247  00255C  C18E  F01F         	movff	powf@s2+2,___flmul@a+2
  6248  002560  C18F  F020         	movff	powf@s2+3,___flmul@a+3
  6249  002564  C138  F019         	movff	_powf$1779,___flmul@b
  6250  002568  C139  F01A         	movff	_powf$1779+1,___flmul@b+1
  6251  00256C  C13A  F01B         	movff	_powf$1779+2,___flmul@b+2
  6252  002570  C13B  F01C         	movff	_powf$1779+3,___flmul@b+3
  6253  002574  EC47  F022         	call	___flmul	;wreg free
  6254  002578  C019  F009         	movff	?___flmul,___fladd@b
  6255  00257C  C01A  F00A         	movff	?___flmul+1,___fladd@b+1
  6256  002580  C01B  F00B         	movff	?___flmul+2,___fladd@b+2
  6257  002584  C01C  F00C         	movff	?___flmul+3,___fladd@b+3
  6258  002588  ECE7  F01F         	call	___fladd	;wreg free
  6259  00258C  C009  F100         	movff	?___fladd,_powf$1780
  6260  002590  C00A  F101         	movff	?___fladd+1,_powf$1780+1
  6261  002594  C00B  F102         	movff	?___fladd+2,_powf$1780+2
  6262  002598  C00C  F103         	movff	?___fladd+3,_powf$1780+3
  6263  00259C  C18C  F01D         	movff	powf@s2,___flmul@a
  6264  0025A0  C18D  F01E         	movff	powf@s2+1,___flmul@a+1
  6265  0025A4  C18E  F01F         	movff	powf@s2+2,___flmul@a+2
  6266  0025A8  C18F  F020         	movff	powf@s2+3,___flmul@a+3
  6267  0025AC  C18C  F019         	movff	powf@s2,___flmul@b
  6268  0025B0  C18D  F01A         	movff	powf@s2+1,___flmul@b+1
  6269  0025B4  C18E  F01B         	movff	powf@s2+2,___flmul@b+2
  6270  0025B8  C18F  F01C         	movff	powf@s2+3,___flmul@b+3
  6271  0025BC  EC47  F022         	call	___flmul	;wreg free
  6272  0025C0  C019  F104         	movff	?___flmul,_powf$1781
  6273  0025C4  C01A  F105         	movff	?___flmul+1,_powf$1781+1
  6274  0025C8  C01B  F106         	movff	?___flmul+2,_powf$1781+2
  6275  0025CC  C01C  F107         	movff	?___flmul+3,_powf$1781+3
  6276  0025D0  C100  F019         	movff	_powf$1780,___flmul@b
  6277  0025D4  C101  F01A         	movff	_powf$1780+1,___flmul@b+1
  6278  0025D8  C102  F01B         	movff	_powf$1780+2,___flmul@b+2
  6279  0025DC  C103  F01C         	movff	_powf$1780+3,___flmul@b+3
  6280  0025E0  C104  F01D         	movff	_powf$1781,___flmul@a
  6281  0025E4  C105  F01E         	movff	_powf$1781+1,___flmul@a+1
  6282  0025E8  C106  F01F         	movff	_powf$1781+2,___flmul@a+2
  6283  0025EC  C107  F020         	movff	_powf$1781+3,___flmul@a+3
  6284  0025F0  EC47  F022         	call	___flmul	;wreg free
  6285  0025F4  C019  F14C         	movff	?___flmul,powf@r
  6286  0025F8  C01A  F14D         	movff	?___flmul+1,powf@r+1
  6287  0025FC  C01B  F14E         	movff	?___flmul+2,powf@r+2
  6288  002600  C01C  F14F         	movff	?___flmul+3,powf@r+3
  6289  002604  C130  F01D         	movff	powf@s_l,___flmul@a
  6290  002608  C131  F01E         	movff	powf@s_l+1,___flmul@a+1
  6291  00260C  C132  F01F         	movff	powf@s_l+2,___flmul@a+2
  6292  002610  C133  F020         	movff	powf@s_l+3,___flmul@a+3
  6293  002614  C15C  F00D         	movff	powf@s,___fladd@a
  6294  002618  C15D  F00E         	movff	powf@s+1,___fladd@a+1
  6295  00261C  C15E  F00F         	movff	powf@s+2,___fladd@a+2
  6296  002620  C15F  F010         	movff	powf@s+3,___fladd@a+3
  6297  002624  C16C  F009         	movff	powf@s_h,___fladd@b
  6298  002628  C16D  F00A         	movff	powf@s_h+1,___fladd@b+1
  6299  00262C  C16E  F00B         	movff	powf@s_h+2,___fladd@b+2
  6300  002630  C16F  F00C         	movff	powf@s_h+3,___fladd@b+3
  6301  002634  ECE7  F01F         	call	___fladd	;wreg free
  6302  002638  C009  F019         	movff	?___fladd,___flmul@b
  6303  00263C  C00A  F01A         	movff	?___fladd+1,___flmul@b+1
  6304  002640  C00B  F01B         	movff	?___fladd+2,___flmul@b+2
  6305  002644  C00C  F01C         	movff	?___fladd+3,___flmul@b+3
  6306  002648  EC47  F022         	call	___flmul	;wreg free
  6307  00264C  C019  F158         	movff	?___flmul,_powf$1782
  6308  002650  C01A  F159         	movff	?___flmul+1,_powf$1782+1
  6309  002654  C01B  F15A         	movff	?___flmul+2,_powf$1782+2
  6310  002658  C01C  F15B         	movff	?___flmul+3,_powf$1782+3
  6311  00265C  C14C  F009         	movff	powf@r,___fladd@b
  6312  002660  C14D  F00A         	movff	powf@r+1,___fladd@b+1
  6313  002664  C14E  F00B         	movff	powf@r+2,___fladd@b+2
  6314  002668  C14F  F00C         	movff	powf@r+3,___fladd@b+3
  6315  00266C  C158  F00D         	movff	_powf$1782,___fladd@a
  6316  002670  C159  F00E         	movff	_powf$1782+1,___fladd@a+1
  6317  002674  C15A  F00F         	movff	_powf$1782+2,___fladd@a+2
  6318  002678  C15B  F010         	movff	_powf$1782+3,___fladd@a+3
  6319  00267C  ECE7  F01F         	call	___fladd	;wreg free
  6320  002680  C009  F14C         	movff	?___fladd,powf@r
  6321  002684  C00A  F14D         	movff	?___fladd+1,powf@r+1
  6322  002688  C00B  F14E         	movff	?___fladd+2,powf@r+2
  6323  00268C  C00C  F14F         	movff	?___fladd+3,powf@r+3
  6324  002690  C16C  F019         	movff	powf@s_h,___flmul@b
  6325  002694  C16D  F01A         	movff	powf@s_h+1,___flmul@b+1
  6326  002698  C16E  F01B         	movff	powf@s_h+2,___flmul@b+2
  6327  00269C  C16F  F01C         	movff	powf@s_h+3,___flmul@b+3
  6328  0026A0  C16C  F01D         	movff	powf@s_h,___flmul@a
  6329  0026A4  C16D  F01E         	movff	powf@s_h+1,___flmul@a+1
  6330  0026A8  C16E  F01F         	movff	powf@s_h+2,___flmul@a+2
  6331  0026AC  C16F  F020         	movff	powf@s_h+3,___flmul@a+3
  6332  0026B0  EC47  F022         	call	___flmul	;wreg free
  6333  0026B4  C019  F18C         	movff	?___flmul,powf@s2
  6334  0026B8  C01A  F18D         	movff	?___flmul+1,powf@s2+1
  6335  0026BC  C01B  F18E         	movff	?___flmul+2,powf@s2+2
  6336  0026C0  C01C  F18F         	movff	?___flmul+3,powf@s2+3
  6337  0026C4  0E00               	movlw	0
  6338  0026C6  6E0D               	movwf	___fladd@a^0,c
  6339  0026C8  0E00               	movlw	0
  6340  0026CA  6E0E               	movwf	(___fladd@a+1)^0,c
  6341  0026CC  0E40               	movlw	64
  6342  0026CE  6E0F               	movwf	(___fladd@a+2)^0,c
  6343  0026D0  0E40               	movlw	64
  6344  0026D2  6E10               	movwf	(___fladd@a+3)^0,c
  6345  0026D4  C18C  F009         	movff	powf@s2,___fladd@b
  6346  0026D8  C18D  F00A         	movff	powf@s2+1,___fladd@b+1
  6347  0026DC  C18E  F00B         	movff	powf@s2+2,___fladd@b+2
  6348  0026E0  C18F  F00C         	movff	powf@s2+3,___fladd@b+3
  6349  0026E4  ECE7  F01F         	call	___fladd	;wreg free
  6350  0026E8  C009  F158         	movff	?___fladd,_powf$1782
  6351  0026EC  C00A  F159         	movff	?___fladd+1,_powf$1782+1
  6352  0026F0  C00B  F15A         	movff	?___fladd+2,_powf$1782+2
  6353  0026F4  C00C  F15B         	movff	?___fladd+3,_powf$1782+3
  6354  0026F8  C158  F009         	movff	_powf$1782,___fladd@b
  6355  0026FC  C159  F00A         	movff	_powf$1782+1,___fladd@b+1
  6356  002700  C15A  F00B         	movff	_powf$1782+2,___fladd@b+2
  6357  002704  C15B  F00C         	movff	_powf$1782+3,___fladd@b+3
  6358  002708  C14C  F00D         	movff	powf@r,___fladd@a
  6359  00270C  C14D  F00E         	movff	powf@r+1,___fladd@a+1
  6360  002710  C14E  F00F         	movff	powf@r+2,___fladd@a+2
  6361  002714  C14F  F010         	movff	powf@r+3,___fladd@a+3
  6362  002718  ECE7  F01F         	call	___fladd	;wreg free
  6363  00271C  C009  F168         	movff	?___fladd,powf@t_h
  6364  002720  C00A  F169         	movff	?___fladd+1,powf@t_h+1
  6365  002724  C00B  F16A         	movff	?___fladd+2,powf@t_h+2
  6366  002728  C00C  F16B         	movff	?___fladd+3,powf@t_h+3
  6367  00272C  C168  F1B8         	movff	powf@t_h,powf@__xc8_float_word
  6368  002730  C169  F1B9         	movff	powf@t_h+1,powf@__xc8_float_word+1
  6369  002734  C16A  F1BA         	movff	powf@t_h+2,powf@__xc8_float_word+2
  6370  002738  C16B  F1BB         	movff	powf@t_h+3,powf@__xc8_float_word+3
  6371  00273C  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
  6372  002740  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
  6373  002744  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
  6374  002748  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
  6375  00274C  0E00               	movlw	0
  6376  00274E  0101               	movlb	1	; () banked
  6377  002750  1594               	andwf	powf@is& (0+255),w,b
  6378  002752  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  6379  002754  0EF0               	movlw	240
  6380  002756  1595               	andwf	(powf@is+1)& (0+255),w,b
  6381  002758  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  6382  00275A  0EFF               	movlw	255
  6383  00275C  1596               	andwf	(powf@is+2)& (0+255),w,b
  6384  00275E  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  6385  002760  0EFF               	movlw	255
  6386  002762  1597               	andwf	(powf@is+3)& (0+255),w,b
  6387  002764  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  6388  002766                     
  6389                           ; BSR set to: 1
  6390  002766  C1B8  F168         	movff	powf@__xc8_float_word,powf@t_h
  6391  00276A  C1B9  F169         	movff	powf@__xc8_float_word+1,powf@t_h+1
  6392  00276E  C1BA  F16A         	movff	powf@__xc8_float_word+2,powf@t_h+2
  6393  002772  C1BB  F16B         	movff	powf@__xc8_float_word+3,powf@t_h+3
  6394  002776                     
  6395                           ; BSR set to: 1
  6396  002776  0E00               	movlw	0
  6397  002778  6E0D               	movwf	___fladd@a^0,c
  6398  00277A  0E00               	movlw	0
  6399  00277C  6E0E               	movwf	(___fladd@a+1)^0,c
  6400  00277E  0E40               	movlw	64
  6401  002780  6E0F               	movwf	(___fladd@a+2)^0,c
  6402  002782  0EC0               	movlw	192
  6403  002784  6E10               	movwf	(___fladd@a+3)^0,c
  6404  002786  C168  F009         	movff	powf@t_h,___fladd@b
  6405  00278A  C169  F00A         	movff	powf@t_h+1,___fladd@b+1
  6406  00278E  C16A  F00B         	movff	powf@t_h+2,___fladd@b+2
  6407  002792  C16B  F00C         	movff	powf@t_h+3,___fladd@b+3
  6408  002796  ECE7  F01F         	call	___fladd	;wreg free
  6409  00279A  C009  F13C         	movff	?___fladd,_powf$1783
  6410  00279E  C00A  F13D         	movff	?___fladd+1,_powf$1783+1
  6411  0027A2  C00B  F13E         	movff	?___fladd+2,_powf$1783+2
  6412  0027A6  C00C  F13F         	movff	?___fladd+3,_powf$1783+3
  6413  0027AA  C18C  F036         	movff	powf@s2,___flsub@a
  6414  0027AE  C18D  F037         	movff	powf@s2+1,___flsub@a+1
  6415  0027B2  C18E  F038         	movff	powf@s2+2,___flsub@a+2
  6416  0027B6  C18F  F039         	movff	powf@s2+3,___flsub@a+3
  6417  0027BA  C13C  F032         	movff	_powf$1783,___flsub@b
  6418  0027BE  C13D  F033         	movff	_powf$1783+1,___flsub@b+1
  6419  0027C2  C13E  F034         	movff	_powf$1783+2,___flsub@b+2
  6420  0027C6  C13F  F035         	movff	_powf$1783+3,___flsub@b+3
  6421  0027CA  EC88  F032         	call	___flsub	;wreg free
  6422  0027CE  C032  F140         	movff	?___flsub,_powf$1784
  6423  0027D2  C033  F141         	movff	?___flsub+1,_powf$1784+1
  6424  0027D6  C034  F142         	movff	?___flsub+2,_powf$1784+2
  6425  0027DA  C035  F143         	movff	?___flsub+3,_powf$1784+3
  6426  0027DE  C14C  F032         	movff	powf@r,___flsub@b
  6427  0027E2  C14D  F033         	movff	powf@r+1,___flsub@b+1
  6428  0027E6  C14E  F034         	movff	powf@r+2,___flsub@b+2
  6429  0027EA  C14F  F035         	movff	powf@r+3,___flsub@b+3
  6430  0027EE  C140  F036         	movff	_powf$1784,___flsub@a
  6431  0027F2  C141  F037         	movff	_powf$1784+1,___flsub@a+1
  6432  0027F6  C142  F038         	movff	_powf$1784+2,___flsub@a+2
  6433  0027FA  C143  F039         	movff	_powf$1784+3,___flsub@a+3
  6434  0027FE  EC88  F032         	call	___flsub	;wreg free
  6435  002802  C032  F134         	movff	?___flsub,powf@t_l
  6436  002806  C033  F135         	movff	?___flsub+1,powf@t_l+1
  6437  00280A  C034  F136         	movff	?___flsub+2,powf@t_l+2
  6438  00280E  C035  F137         	movff	?___flsub+3,powf@t_l+3
  6439  002812  C16C  F019         	movff	powf@s_h,___flmul@b
  6440  002816  C16D  F01A         	movff	powf@s_h+1,___flmul@b+1
  6441  00281A  C16E  F01B         	movff	powf@s_h+2,___flmul@b+2
  6442  00281E  C16F  F01C         	movff	powf@s_h+3,___flmul@b+3
  6443  002822  C168  F01D         	movff	powf@t_h,___flmul@a
  6444  002826  C169  F01E         	movff	powf@t_h+1,___flmul@a+1
  6445  00282A  C16A  F01F         	movff	powf@t_h+2,___flmul@a+2
  6446  00282E  C16B  F020         	movff	powf@t_h+3,___flmul@a+3
  6447  002832  EC47  F022         	call	___flmul	;wreg free
  6448  002836  C019  F174         	movff	?___flmul,powf@u
  6449  00283A  C01A  F175         	movff	?___flmul+1,powf@u+1
  6450  00283E  C01B  F176         	movff	?___flmul+2,powf@u+2
  6451  002842  C01C  F177         	movff	?___flmul+3,powf@u+3
  6452  002846  C168  F01D         	movff	powf@t_h,___flmul@a
  6453  00284A  C169  F01E         	movff	powf@t_h+1,___flmul@a+1
  6454  00284E  C16A  F01F         	movff	powf@t_h+2,___flmul@a+2
  6455  002852  C16B  F020         	movff	powf@t_h+3,___flmul@a+3
  6456  002856  C130  F019         	movff	powf@s_l,___flmul@b
  6457  00285A  C131  F01A         	movff	powf@s_l+1,___flmul@b+1
  6458  00285E  C132  F01B         	movff	powf@s_l+2,___flmul@b+2
  6459  002862  C133  F01C         	movff	powf@s_l+3,___flmul@b+3
  6460  002866  EC47  F022         	call	___flmul	;wreg free
  6461  00286A  C019  F009         	movff	?___flmul,___fladd@b
  6462  00286E  C01A  F00A         	movff	?___flmul+1,___fladd@b+1
  6463  002872  C01B  F00B         	movff	?___flmul+2,___fladd@b+2
  6464  002876  C01C  F00C         	movff	?___flmul+3,___fladd@b+3
  6465  00287A  C15C  F01D         	movff	powf@s,___flmul@a
  6466  00287E  C15D  F01E         	movff	powf@s+1,___flmul@a+1
  6467  002882  C15E  F01F         	movff	powf@s+2,___flmul@a+2
  6468  002886  C15F  F020         	movff	powf@s+3,___flmul@a+3
  6469  00288A  C134  F019         	movff	powf@t_l,___flmul@b
  6470  00288E  C135  F01A         	movff	powf@t_l+1,___flmul@b+1
  6471  002892  C136  F01B         	movff	powf@t_l+2,___flmul@b+2
  6472  002896  C137  F01C         	movff	powf@t_l+3,___flmul@b+3
  6473  00289A  EC47  F022         	call	___flmul	;wreg free
  6474  00289E  C019  F00D         	movff	?___flmul,___fladd@a
  6475  0028A2  C01A  F00E         	movff	?___flmul+1,___fladd@a+1
  6476  0028A6  C01B  F00F         	movff	?___flmul+2,___fladd@a+2
  6477  0028AA  C01C  F010         	movff	?___flmul+3,___fladd@a+3
  6478  0028AE  ECE7  F01F         	call	___fladd	;wreg free
  6479  0028B2  C009  F178         	movff	?___fladd,powf@v
  6480  0028B6  C00A  F179         	movff	?___fladd+1,powf@v+1
  6481  0028BA  C00B  F17A         	movff	?___fladd+2,powf@v+2
  6482  0028BE  C00C  F17B         	movff	?___fladd+3,powf@v+3
  6483  0028C2  C174  F009         	movff	powf@u,___fladd@b
  6484  0028C6  C175  F00A         	movff	powf@u+1,___fladd@b+1
  6485  0028CA  C176  F00B         	movff	powf@u+2,___fladd@b+2
  6486  0028CE  C177  F00C         	movff	powf@u+3,___fladd@b+3
  6487  0028D2  C178  F00D         	movff	powf@v,___fladd@a
  6488  0028D6  C179  F00E         	movff	powf@v+1,___fladd@a+1
  6489  0028DA  C17A  F00F         	movff	powf@v+2,___fladd@a+2
  6490  0028DE  C17B  F010         	movff	powf@v+3,___fladd@a+3
  6491  0028E2  ECE7  F01F         	call	___fladd	;wreg free
  6492  0028E6  C009  F19C         	movff	?___fladd,powf@p_h
  6493  0028EA  C00A  F19D         	movff	?___fladd+1,powf@p_h+1
  6494  0028EE  C00B  F19E         	movff	?___fladd+2,powf@p_h+2
  6495  0028F2  C00C  F19F         	movff	?___fladd+3,powf@p_h+3
  6496  0028F6  C19C  F1B8         	movff	powf@p_h,powf@__xc8_float_word
  6497  0028FA  C19D  F1B9         	movff	powf@p_h+1,powf@__xc8_float_word+1
  6498  0028FE  C19E  F1BA         	movff	powf@p_h+2,powf@__xc8_float_word+2
  6499  002902  C19F  F1BB         	movff	powf@p_h+3,powf@__xc8_float_word+3
  6500  002906  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
  6501  00290A  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
  6502  00290E  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
  6503  002912  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
  6504  002916  0E00               	movlw	0
  6505  002918  0101               	movlb	1	; () banked
  6506  00291A  1594               	andwf	powf@is& (0+255),w,b
  6507  00291C  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  6508  00291E  0EF0               	movlw	240
  6509  002920  1595               	andwf	(powf@is+1)& (0+255),w,b
  6510  002922  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  6511  002924  0EFF               	movlw	255
  6512  002926  1596               	andwf	(powf@is+2)& (0+255),w,b
  6513  002928  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  6514  00292A  0EFF               	movlw	255
  6515  00292C  1597               	andwf	(powf@is+3)& (0+255),w,b
  6516  00292E  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  6517  002930                     
  6518                           ; BSR set to: 1
  6519  002930  C1B8  F19C         	movff	powf@__xc8_float_word,powf@p_h
  6520  002934  C1B9  F19D         	movff	powf@__xc8_float_word+1,powf@p_h+1
  6521  002938  C1BA  F19E         	movff	powf@__xc8_float_word+2,powf@p_h+2
  6522  00293C  C1BB  F19F         	movff	powf@__xc8_float_word+3,powf@p_h+3
  6523  002940                     
  6524                           ; BSR set to: 1
  6525  002940  C174  F036         	movff	powf@u,___flsub@a
  6526  002944  C175  F037         	movff	powf@u+1,___flsub@a+1
  6527  002948  C176  F038         	movff	powf@u+2,___flsub@a+2
  6528  00294C  C177  F039         	movff	powf@u+3,___flsub@a+3
  6529  002950  C19C  F032         	movff	powf@p_h,___flsub@b
  6530  002954  C19D  F033         	movff	powf@p_h+1,___flsub@b+1
  6531  002958  C19E  F034         	movff	powf@p_h+2,___flsub@b+2
  6532  00295C  C19F  F035         	movff	powf@p_h+3,___flsub@b+3
  6533  002960  EC88  F032         	call	___flsub	;wreg free
  6534  002964  C032  F198         	movff	?___flsub,_powf$1778
  6535  002968  C033  F199         	movff	?___flsub+1,_powf$1778+1
  6536  00296C  C034  F19A         	movff	?___flsub+2,_powf$1778+2
  6537  002970  C035  F19B         	movff	?___flsub+3,_powf$1778+3
  6538  002974  C178  F032         	movff	powf@v,___flsub@b
  6539  002978  C179  F033         	movff	powf@v+1,___flsub@b+1
  6540  00297C  C17A  F034         	movff	powf@v+2,___flsub@b+2
  6541  002980  C17B  F035         	movff	powf@v+3,___flsub@b+3
  6542  002984  C198  F036         	movff	_powf$1778,___flsub@a
  6543  002988  C199  F037         	movff	_powf$1778+1,___flsub@a+1
  6544  00298C  C19A  F038         	movff	_powf$1778+2,___flsub@a+2
  6545  002990  C19B  F039         	movff	_powf$1778+3,___flsub@a+3
  6546  002994  EC88  F032         	call	___flsub	;wreg free
  6547  002998  C032  F164         	movff	?___flsub,powf@p_l
  6548  00299C  C033  F165         	movff	?___flsub+1,powf@p_l+1
  6549  0029A0  C034  F166         	movff	?___flsub+2,powf@p_l+2
  6550  0029A4  C035  F167         	movff	?___flsub+3,powf@p_l+3
  6551  0029A8  C19C  F019         	movff	powf@p_h,___flmul@b
  6552  0029AC  C19D  F01A         	movff	powf@p_h+1,___flmul@b+1
  6553  0029B0  C19E  F01B         	movff	powf@p_h+2,___flmul@b+2
  6554  0029B4  C19F  F01C         	movff	powf@p_h+3,___flmul@b+3
  6555  0029B8  0E00               	movlw	0
  6556  0029BA  6E1D               	movwf	___flmul@a^0,c
  6557  0029BC  0E40               	movlw	64
  6558  0029BE  6E1E               	movwf	(___flmul@a+1)^0,c
  6559  0029C0  0E76               	movlw	118
  6560  0029C2  6E1F               	movwf	(___flmul@a+2)^0,c
  6561  0029C4  0E3F               	movlw	63
  6562  0029C6  6E20               	movwf	(___flmul@a+3)^0,c
  6563  0029C8  EC47  F022         	call	___flmul	;wreg free
  6564  0029CC  C019  F120         	movff	?___flmul,powf@z_h
  6565  0029D0  C01A  F121         	movff	?___flmul+1,powf@z_h+1
  6566  0029D4  C01B  F122         	movff	?___flmul+2,powf@z_h+2
  6567  0029D8  C01C  F123         	movff	?___flmul+3,powf@z_h+3
  6568  0029DC  0E4F               	movlw	79
  6569  0029DE  6E1D               	movwf	___flmul@a^0,c
  6570  0029E0  0E38               	movlw	56
  6571  0029E2  6E1E               	movwf	(___flmul@a+1)^0,c
  6572  0029E4  0E76               	movlw	118
  6573  0029E6  6E1F               	movwf	(___flmul@a+2)^0,c
  6574  0029E8  0E3F               	movlw	63
  6575  0029EA  6E20               	movwf	(___flmul@a+3)^0,c
  6576  0029EC  C164  F019         	movff	powf@p_l,___flmul@b
  6577  0029F0  C165  F01A         	movff	powf@p_l+1,___flmul@b+1
  6578  0029F4  C166  F01B         	movff	powf@p_l+2,___flmul@b+2
  6579  0029F8  C167  F01C         	movff	powf@p_l+3,___flmul@b+3
  6580  0029FC  EC47  F022         	call	___flmul	;wreg free
  6581  002A00  C019  F00D         	movff	?___flmul,___fladd@a
  6582  002A04  C01A  F00E         	movff	?___flmul+1,___fladd@a+1
  6583  002A08  C01B  F00F         	movff	?___flmul+2,___fladd@a+2
  6584  002A0C  C01C  F010         	movff	?___flmul+3,___fladd@a+3
  6585  002A10  0EC6               	movlw	198
  6586  002A12  6E1D               	movwf	___flmul@a^0,c
  6587  002A14  0E23               	movlw	35
  6588  002A16  6E1E               	movwf	(___flmul@a+1)^0,c
  6589  002A18  0EF6               	movlw	246
  6590  002A1A  6E1F               	movwf	(___flmul@a+2)^0,c
  6591  002A1C  0EB8               	movlw	184
  6592  002A1E  6E20               	movwf	(___flmul@a+3)^0,c
  6593  002A20  C19C  F019         	movff	powf@p_h,___flmul@b
  6594  002A24  C19D  F01A         	movff	powf@p_h+1,___flmul@b+1
  6595  002A28  C19E  F01B         	movff	powf@p_h+2,___flmul@b+2
  6596  002A2C  C19F  F01C         	movff	powf@p_h+3,___flmul@b+3
  6597  002A30  EC47  F022         	call	___flmul	;wreg free
  6598  002A34  C019  F009         	movff	?___flmul,___fladd@b
  6599  002A38  C01A  F00A         	movff	?___flmul+1,___fladd@b+1
  6600  002A3C  C01B  F00B         	movff	?___flmul+2,___fladd@b+2
  6601  002A40  C01C  F00C         	movff	?___flmul+3,___fladd@b+3
  6602  002A44  ECE7  F01F         	call	___fladd	;wreg free
  6603  002A48  C009  F158         	movff	?___fladd,_powf$1782
  6604  002A4C  C00A  F159         	movff	?___fladd+1,_powf$1782+1
  6605  002A50  C00B  F15A         	movff	?___fladd+2,_powf$1782+2
  6606  002A54  C00C  F15B         	movff	?___fladd+3,_powf$1782+3
  6607  002A58  C158  F009         	movff	_powf$1782,___fladd@b
  6608  002A5C  C159  F00A         	movff	_powf$1782+1,___fladd@b+1
  6609  002A60  C15A  F00B         	movff	_powf$1782+2,___fladd@b+2
  6610  002A64  C15B  F00C         	movff	_powf$1782+3,___fladd@b+3
  6611  002A68  C1A0  F090         	movff	powf@k,??_powf
  6612  002A6C  C1A1  F091         	movff	powf@k+1,??_powf+1
  6613  002A70  0100               	movlb	0	; () banked
  6614  002A72  90D8               	bcf	status,0,c
  6615  002A74  3790               	rlcf	??_powf& (0+255),f,b
  6616  002A76  3791               	rlcf	(??_powf+1)& (0+255),f,b
  6617  002A78  90D8               	bcf	status,0,c
  6618  002A7A  3790               	rlcf	??_powf& (0+255),f,b
  6619  002A7C  3791               	rlcf	(??_powf+1)& (0+255),f,b
  6620  002A7E  0E01               	movlw	low _dp_l
  6621  002A80  2590               	addwf	??_powf& (0+255),w,b
  6622  002A82  6EF6               	movwf	tblptrl,c
  6623  002A84  0E10               	movlw	high _dp_l
  6624  002A86  2191               	addwfc	(??_powf+1)& (0+255),w,b
  6625  002A88  6EF7               	movwf	tblptrh,c
  6626  002A8A                     	if	1	;There are 3 active tblptr bytes
  6627  002A8A  6AF8               	clrf	tblptru,c
  6628  002A8C  0E00               	movlw	low (__mediumconst shr (0+16))
  6629  002A8E  22F8               	addwfc	tblptru,f,c
  6630  002A90                     	endif
  6631  002A90  0009               	tblrd		*+
  6632  002A92  CFF5 F00D          	movff	tablat,___fladd@a
  6633  002A96  0009               	tblrd		*+
  6634  002A98  CFF5 F00E          	movff	tablat,___fladd@a+1
  6635  002A9C  0009               	tblrd		*+
  6636  002A9E  CFF5 F00F          	movff	tablat,___fladd@a+2
  6637  002AA2  000A               	tblrd		*-
  6638  002AA4  CFF5 F010          	movff	tablat,___fladd@a+3
  6639  002AA8  ECE7  F01F         	call	___fladd	;wreg free
  6640  002AAC  C009  F124         	movff	?___fladd,powf@z_l
  6641  002AB0  C00A  F125         	movff	?___fladd+1,powf@z_l+1
  6642  002AB4  C00B  F126         	movff	?___fladd+2,powf@z_l+2
  6643  002AB8  C00C  F127         	movff	?___fladd+3,powf@z_l+3
  6644  002ABC  C180  F009         	movff	powf@n,___xxtofl@val
  6645  002AC0  C181  F00A         	movff	powf@n+1,___xxtofl@val+1
  6646  002AC4  C182  F00B         	movff	powf@n+2,___xxtofl@val+2
  6647  002AC8  C183  F00C         	movff	powf@n+3,___xxtofl@val+3
  6648  002ACC  0E01               	movlw	1
  6649  002ACE  ECB8  F029         	call	___xxtofl
  6650  002AD2  C009  F1B0         	movff	?___xxtofl,powf@t
  6651  002AD6  C00A  F1B1         	movff	?___xxtofl+1,powf@t+1
  6652  002ADA  C00B  F1B2         	movff	?___xxtofl+2,powf@t+2
  6653  002ADE  C00C  F1B3         	movff	?___xxtofl+3,powf@t+3
  6654  002AE2  C124  F00D         	movff	powf@z_l,___fladd@a
  6655  002AE6  C125  F00E         	movff	powf@z_l+1,___fladd@a+1
  6656  002AEA  C126  F00F         	movff	powf@z_l+2,___fladd@a+2
  6657  002AEE  C127  F010         	movff	powf@z_l+3,___fladd@a+3
  6658  002AF2  C120  F009         	movff	powf@z_h,___fladd@b
  6659  002AF6  C121  F00A         	movff	powf@z_h+1,___fladd@b+1
  6660  002AFA  C122  F00B         	movff	powf@z_h+2,___fladd@b+2
  6661  002AFE  C123  F00C         	movff	powf@z_h+3,___fladd@b+3
  6662  002B02  ECE7  F01F         	call	___fladd	;wreg free
  6663  002B06  C009  F158         	movff	?___fladd,_powf$1782
  6664  002B0A  C00A  F159         	movff	?___fladd+1,_powf$1782+1
  6665  002B0E  C00B  F15A         	movff	?___fladd+2,_powf$1782+2
  6666  002B12  C00C  F15B         	movff	?___fladd+3,_powf$1782+3
  6667  002B16  C1A0  F090         	movff	powf@k,??_powf
  6668  002B1A  C1A1  F091         	movff	powf@k+1,??_powf+1
  6669  002B1E  0100               	movlb	0	; () banked
  6670  002B20  90D8               	bcf	status,0,c
  6671  002B22  3790               	rlcf	??_powf& (0+255),f,b
  6672  002B24  3791               	rlcf	(??_powf+1)& (0+255),f,b
  6673  002B26  90D8               	bcf	status,0,c
  6674  002B28  3790               	rlcf	??_powf& (0+255),f,b
  6675  002B2A  3791               	rlcf	(??_powf+1)& (0+255),f,b
  6676  002B2C  0E09               	movlw	low _dp_h
  6677  002B2E  2590               	addwf	??_powf& (0+255),w,b
  6678  002B30  6EF6               	movwf	tblptrl,c
  6679  002B32  0E10               	movlw	high _dp_h
  6680  002B34  2191               	addwfc	(??_powf+1)& (0+255),w,b
  6681  002B36  6EF7               	movwf	tblptrh,c
  6682  002B38                     	if	1	;There are 3 active tblptr bytes
  6683  002B38  6AF8               	clrf	tblptru,c
  6684  002B3A  0E00               	movlw	low (__mediumconst shr (0+16))
  6685  002B3C  22F8               	addwfc	tblptru,f,c
  6686  002B3E                     	endif
  6687  002B3E  0009               	tblrd		*+
  6688  002B40  CFF5 F00D          	movff	tablat,___fladd@a
  6689  002B44  0009               	tblrd		*+
  6690  002B46  CFF5 F00E          	movff	tablat,___fladd@a+1
  6691  002B4A  0009               	tblrd		*+
  6692  002B4C  CFF5 F00F          	movff	tablat,___fladd@a+2
  6693  002B50  000A               	tblrd		*-
  6694  002B52  CFF5 F010          	movff	tablat,___fladd@a+3
  6695  002B56  C158  F009         	movff	_powf$1782,___fladd@b
  6696  002B5A  C159  F00A         	movff	_powf$1782+1,___fladd@b+1
  6697  002B5E  C15A  F00B         	movff	_powf$1782+2,___fladd@b+2
  6698  002B62  C15B  F00C         	movff	_powf$1782+3,___fladd@b+3
  6699  002B66  ECE7  F01F         	call	___fladd	;wreg free
  6700  002B6A  C009  F108         	movff	?___fladd,_powf$1785
  6701  002B6E  C00A  F109         	movff	?___fladd+1,_powf$1785+1
  6702  002B72  C00B  F10A         	movff	?___fladd+2,_powf$1785+2
  6703  002B76  C00C  F10B         	movff	?___fladd+3,_powf$1785+3
  6704  002B7A  C108  F009         	movff	_powf$1785,___fladd@b
  6705  002B7E  C109  F00A         	movff	_powf$1785+1,___fladd@b+1
  6706  002B82  C10A  F00B         	movff	_powf$1785+2,___fladd@b+2
  6707  002B86  C10B  F00C         	movff	_powf$1785+3,___fladd@b+3
  6708  002B8A  C1B0  F00D         	movff	powf@t,___fladd@a
  6709  002B8E  C1B1  F00E         	movff	powf@t+1,___fladd@a+1
  6710  002B92  C1B2  F00F         	movff	powf@t+2,___fladd@a+2
  6711  002B96  C1B3  F010         	movff	powf@t+3,___fladd@a+3
  6712  002B9A  ECE7  F01F         	call	___fladd	;wreg free
  6713  002B9E  C009  F184         	movff	?___fladd,powf@t1
  6714  002BA2  C00A  F185         	movff	?___fladd+1,powf@t1+1
  6715  002BA6  C00B  F186         	movff	?___fladd+2,powf@t1+2
  6716  002BAA  C00C  F187         	movff	?___fladd+3,powf@t1+3
  6717  002BAE  C184  F1B8         	movff	powf@t1,powf@__xc8_float_word
  6718  002BB2  C185  F1B9         	movff	powf@t1+1,powf@__xc8_float_word+1
  6719  002BB6  C186  F1BA         	movff	powf@t1+2,powf@__xc8_float_word+2
  6720  002BBA  C187  F1BB         	movff	powf@t1+3,powf@__xc8_float_word+3
  6721  002BBE  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
  6722  002BC2  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
  6723  002BC6  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
  6724  002BCA  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
  6725  002BCE  0E00               	movlw	0
  6726  002BD0  0101               	movlb	1	; () banked
  6727  002BD2  1594               	andwf	powf@is& (0+255),w,b
  6728  002BD4  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  6729  002BD6  0EF0               	movlw	240
  6730  002BD8  1595               	andwf	(powf@is+1)& (0+255),w,b
  6731  002BDA  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  6732  002BDC  0EFF               	movlw	255
  6733  002BDE  1596               	andwf	(powf@is+2)& (0+255),w,b
  6734  002BE0  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  6735  002BE2  0EFF               	movlw	255
  6736  002BE4  1597               	andwf	(powf@is+3)& (0+255),w,b
  6737  002BE6  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  6738  002BE8                     
  6739                           ; BSR set to: 1
  6740  002BE8  C1B8  F184         	movff	powf@__xc8_float_word,powf@t1
  6741  002BEC  C1B9  F185         	movff	powf@__xc8_float_word+1,powf@t1+1
  6742  002BF0  C1BA  F186         	movff	powf@__xc8_float_word+2,powf@t1+2
  6743  002BF4  C1BB  F187         	movff	powf@__xc8_float_word+3,powf@t1+3
  6744  002BF8                     
  6745                           ; BSR set to: 1
  6746  002BF8  C1B0  F036         	movff	powf@t,___flsub@a
  6747  002BFC  C1B1  F037         	movff	powf@t+1,___flsub@a+1
  6748  002C00  C1B2  F038         	movff	powf@t+2,___flsub@a+2
  6749  002C04  C1B3  F039         	movff	powf@t+3,___flsub@a+3
  6750  002C08  C184  F032         	movff	powf@t1,___flsub@b
  6751  002C0C  C185  F033         	movff	powf@t1+1,___flsub@b+1
  6752  002C10  C186  F034         	movff	powf@t1+2,___flsub@b+2
  6753  002C14  C187  F035         	movff	powf@t1+3,___flsub@b+3
  6754  002C18  EC88  F032         	call	___flsub	;wreg free
  6755  002C1C  C032  F198         	movff	?___flsub,_powf$1778
  6756  002C20  C033  F199         	movff	?___flsub+1,_powf$1778+1
  6757  002C24  C034  F19A         	movff	?___flsub+2,_powf$1778+2
  6758  002C28  C035  F19B         	movff	?___flsub+3,_powf$1778+3
  6759  002C2C  C1A0  F090         	movff	powf@k,??_powf
  6760  002C30  C1A1  F091         	movff	powf@k+1,??_powf+1
  6761  002C34  0100               	movlb	0	; () banked
  6762  002C36  90D8               	bcf	status,0,c
  6763  002C38  3790               	rlcf	??_powf& (0+255),f,b
  6764  002C3A  3791               	rlcf	(??_powf+1)& (0+255),f,b
  6765  002C3C  90D8               	bcf	status,0,c
  6766  002C3E  3790               	rlcf	??_powf& (0+255),f,b
  6767  002C40  3791               	rlcf	(??_powf+1)& (0+255),f,b
  6768  002C42  0E09               	movlw	low _dp_h
  6769  002C44  2590               	addwf	??_powf& (0+255),w,b
  6770  002C46  6EF6               	movwf	tblptrl,c
  6771  002C48  0E10               	movlw	high _dp_h
  6772  002C4A  2191               	addwfc	(??_powf+1)& (0+255),w,b
  6773  002C4C  6EF7               	movwf	tblptrh,c
  6774  002C4E                     	if	1	;There are 3 active tblptr bytes
  6775  002C4E  6AF8               	clrf	tblptru,c
  6776  002C50  0E00               	movlw	low (__mediumconst shr (0+16))
  6777  002C52  22F8               	addwfc	tblptru,f,c
  6778  002C54                     	endif
  6779  002C54  0009               	tblrd		*+
  6780  002C56  CFF5 F036          	movff	tablat,___flsub@a
  6781  002C5A  0009               	tblrd		*+
  6782  002C5C  CFF5 F037          	movff	tablat,___flsub@a+1
  6783  002C60  0009               	tblrd		*+
  6784  002C62  CFF5 F038          	movff	tablat,___flsub@a+2
  6785  002C66  000A               	tblrd		*-
  6786  002C68  CFF5 F039          	movff	tablat,___flsub@a+3
  6787  002C6C  C198  F032         	movff	_powf$1778,___flsub@b
  6788  002C70  C199  F033         	movff	_powf$1778+1,___flsub@b+1
  6789  002C74  C19A  F034         	movff	_powf$1778+2,___flsub@b+2
  6790  002C78  C19B  F035         	movff	_powf$1778+3,___flsub@b+3
  6791  002C7C  EC88  F032         	call	___flsub	;wreg free
  6792  002C80  C032  F140         	movff	?___flsub,_powf$1784
  6793  002C84  C033  F141         	movff	?___flsub+1,_powf$1784+1
  6794  002C88  C034  F142         	movff	?___flsub+2,_powf$1784+2
  6795  002C8C  C035  F143         	movff	?___flsub+3,_powf$1784+3
  6796  002C90  C120  F036         	movff	powf@z_h,___flsub@a
  6797  002C94  C121  F037         	movff	powf@z_h+1,___flsub@a+1
  6798  002C98  C122  F038         	movff	powf@z_h+2,___flsub@a+2
  6799  002C9C  C123  F039         	movff	powf@z_h+3,___flsub@a+3
  6800  002CA0  C140  F032         	movff	_powf$1784,___flsub@b
  6801  002CA4  C141  F033         	movff	_powf$1784+1,___flsub@b+1
  6802  002CA8  C142  F034         	movff	_powf$1784+2,___flsub@b+2
  6803  002CAC  C143  F035         	movff	_powf$1784+3,___flsub@b+3
  6804  002CB0  EC88  F032         	call	___flsub	;wreg free
  6805  002CB4  C032  F10C         	movff	?___flsub,_powf$1786
  6806  002CB8  C033  F10D         	movff	?___flsub+1,_powf$1786+1
  6807  002CBC  C034  F10E         	movff	?___flsub+2,_powf$1786+2
  6808  002CC0  C035  F10F         	movff	?___flsub+3,_powf$1786+3
  6809  002CC4  C124  F032         	movff	powf@z_l,___flsub@b
  6810  002CC8  C125  F033         	movff	powf@z_l+1,___flsub@b+1
  6811  002CCC  C126  F034         	movff	powf@z_l+2,___flsub@b+2
  6812  002CD0  C127  F035         	movff	powf@z_l+3,___flsub@b+3
  6813  002CD4  C10C  F036         	movff	_powf$1786,___flsub@a
  6814  002CD8  C10D  F037         	movff	_powf$1786+1,___flsub@a+1
  6815  002CDC  C10E  F038         	movff	_powf$1786+2,___flsub@a+2
  6816  002CE0  C10F  F039         	movff	_powf$1786+3,___flsub@a+3
  6817  002CE4  EC88  F032         	call	___flsub	;wreg free
  6818  002CE8  C032  F11C         	movff	?___flsub,powf@t2
  6819  002CEC  C033  F11D         	movff	?___flsub+1,powf@t2+1
  6820  002CF0  C034  F11E         	movff	?___flsub+2,powf@t2+2
  6821  002CF4  C035  F11F         	movff	?___flsub+3,powf@t2+3
  6822  002CF8                     l6150:
  6823  002CF8  C08C  F1B8         	movff	powf@y,powf@__xc8_float_word
  6824  002CFC  C08D  F1B9         	movff	powf@y+1,powf@__xc8_float_word+1
  6825  002D00  C08E  F1BA         	movff	powf@y+2,powf@__xc8_float_word+2
  6826  002D04  C08F  F1BB         	movff	powf@y+3,powf@__xc8_float_word+3
  6827  002D08  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
  6828  002D0C  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
  6829  002D10  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
  6830  002D14  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
  6831  002D18  0E00               	movlw	0
  6832  002D1A  0101               	movlb	1	; () banked
  6833  002D1C  1594               	andwf	powf@is& (0+255),w,b
  6834  002D1E  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  6835  002D20  0EF0               	movlw	240
  6836  002D22  1595               	andwf	(powf@is+1)& (0+255),w,b
  6837  002D24  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  6838  002D26  0EFF               	movlw	255
  6839  002D28  1596               	andwf	(powf@is+2)& (0+255),w,b
  6840  002D2A  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  6841  002D2C  0EFF               	movlw	255
  6842  002D2E  1597               	andwf	(powf@is+3)& (0+255),w,b
  6843  002D30  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  6844  002D32                     
  6845                           ; BSR set to: 1
  6846  002D32  C1B8  F128         	movff	powf@__xc8_float_word,powf@y1
  6847  002D36  C1B9  F129         	movff	powf@__xc8_float_word+1,powf@y1+1
  6848  002D3A  C1BA  F12A         	movff	powf@__xc8_float_word+2,powf@y1+2
  6849  002D3E  C1BB  F12B         	movff	powf@__xc8_float_word+3,powf@y1+3
  6850  002D42                     
  6851                           ; BSR set to: 1
  6852  002D42  C184  F01D         	movff	powf@t1,___flmul@a
  6853  002D46  C185  F01E         	movff	powf@t1+1,___flmul@a+1
  6854  002D4A  C186  F01F         	movff	powf@t1+2,___flmul@a+2
  6855  002D4E  C187  F020         	movff	powf@t1+3,___flmul@a+3
  6856  002D52  C128  F036         	movff	powf@y1,___flsub@a
  6857  002D56  C129  F037         	movff	powf@y1+1,___flsub@a+1
  6858  002D5A  C12A  F038         	movff	powf@y1+2,___flsub@a+2
  6859  002D5E  C12B  F039         	movff	powf@y1+3,___flsub@a+3
  6860  002D62  C08C  F032         	movff	powf@y,___flsub@b
  6861  002D66  C08D  F033         	movff	powf@y+1,___flsub@b+1
  6862  002D6A  C08E  F034         	movff	powf@y+2,___flsub@b+2
  6863  002D6E  C08F  F035         	movff	powf@y+3,___flsub@b+3
  6864  002D72  EC88  F032         	call	___flsub	;wreg free
  6865  002D76  C032  F019         	movff	?___flsub,___flmul@b
  6866  002D7A  C033  F01A         	movff	?___flsub+1,___flmul@b+1
  6867  002D7E  C034  F01B         	movff	?___flsub+2,___flmul@b+2
  6868  002D82  C035  F01C         	movff	?___flsub+3,___flmul@b+3
  6869  002D86  EC47  F022         	call	___flmul	;wreg free
  6870  002D8A  C019  F110         	movff	?___flmul,_powf$1787
  6871  002D8E  C01A  F111         	movff	?___flmul+1,_powf$1787+1
  6872  002D92  C01B  F112         	movff	?___flmul+2,_powf$1787+2
  6873  002D96  C01C  F113         	movff	?___flmul+3,_powf$1787+3
  6874  002D9A  C110  F009         	movff	_powf$1787,___fladd@b
  6875  002D9E  C111  F00A         	movff	_powf$1787+1,___fladd@b+1
  6876  002DA2  C112  F00B         	movff	_powf$1787+2,___fladd@b+2
  6877  002DA6  C113  F00C         	movff	_powf$1787+3,___fladd@b+3
  6878  002DAA  C11C  F01D         	movff	powf@t2,___flmul@a
  6879  002DAE  C11D  F01E         	movff	powf@t2+1,___flmul@a+1
  6880  002DB2  C11E  F01F         	movff	powf@t2+2,___flmul@a+2
  6881  002DB6  C11F  F020         	movff	powf@t2+3,___flmul@a+3
  6882  002DBA  C08C  F019         	movff	powf@y,___flmul@b
  6883  002DBE  C08D  F01A         	movff	powf@y+1,___flmul@b+1
  6884  002DC2  C08E  F01B         	movff	powf@y+2,___flmul@b+2
  6885  002DC6  C08F  F01C         	movff	powf@y+3,___flmul@b+3
  6886  002DCA  EC47  F022         	call	___flmul	;wreg free
  6887  002DCE  C019  F00D         	movff	?___flmul,___fladd@a
  6888  002DD2  C01A  F00E         	movff	?___flmul+1,___fladd@a+1
  6889  002DD6  C01B  F00F         	movff	?___flmul+2,___fladd@a+2
  6890  002DDA  C01C  F010         	movff	?___flmul+3,___fladd@a+3
  6891  002DDE  ECE7  F01F         	call	___fladd	;wreg free
  6892  002DE2  C009  F164         	movff	?___fladd,powf@p_l
  6893  002DE6  C00A  F165         	movff	?___fladd+1,powf@p_l+1
  6894  002DEA  C00B  F166         	movff	?___fladd+2,powf@p_l+2
  6895  002DEE  C00C  F167         	movff	?___fladd+3,powf@p_l+3
  6896  002DF2  C128  F019         	movff	powf@y1,___flmul@b
  6897  002DF6  C129  F01A         	movff	powf@y1+1,___flmul@b+1
  6898  002DFA  C12A  F01B         	movff	powf@y1+2,___flmul@b+2
  6899  002DFE  C12B  F01C         	movff	powf@y1+3,___flmul@b+3
  6900  002E02  C184  F01D         	movff	powf@t1,___flmul@a
  6901  002E06  C185  F01E         	movff	powf@t1+1,___flmul@a+1
  6902  002E0A  C186  F01F         	movff	powf@t1+2,___flmul@a+2
  6903  002E0E  C187  F020         	movff	powf@t1+3,___flmul@a+3
  6904  002E12  EC47  F022         	call	___flmul	;wreg free
  6905  002E16  C019  F19C         	movff	?___flmul,powf@p_h
  6906  002E1A  C01A  F19D         	movff	?___flmul+1,powf@p_h+1
  6907  002E1E  C01B  F19E         	movff	?___flmul+2,powf@p_h+2
  6908  002E22  C01C  F19F         	movff	?___flmul+3,powf@p_h+3
  6909  002E26  C164  F009         	movff	powf@p_l,___fladd@b
  6910  002E2A  C165  F00A         	movff	powf@p_l+1,___fladd@b+1
  6911  002E2E  C166  F00B         	movff	powf@p_l+2,___fladd@b+2
  6912  002E32  C167  F00C         	movff	powf@p_l+3,___fladd@b+3
  6913  002E36  C19C  F00D         	movff	powf@p_h,___fladd@a
  6914  002E3A  C19D  F00E         	movff	powf@p_h+1,___fladd@a+1
  6915  002E3E  C19E  F00F         	movff	powf@p_h+2,___fladd@a+2
  6916  002E42  C19F  F010         	movff	powf@p_h+3,___fladd@a+3
  6917  002E46  ECE7  F01F         	call	___fladd	;wreg free
  6918  002E4A  C009  F1B4         	movff	?___fladd,powf@z
  6919  002E4E  C00A  F1B5         	movff	?___fladd+1,powf@z+1
  6920  002E52  C00B  F1B6         	movff	?___fladd+2,powf@z+2
  6921  002E56  C00C  F1B7         	movff	?___fladd+3,powf@z+3
  6922  002E5A  C1B4  F1B8         	movff	powf@z,powf@__xc8_float_word
  6923  002E5E  C1B5  F1B9         	movff	powf@z+1,powf@__xc8_float_word+1
  6924  002E62  C1B6  F1BA         	movff	powf@z+2,powf@__xc8_float_word+2
  6925  002E66  C1B7  F1BB         	movff	powf@z+3,powf@__xc8_float_word+3
  6926  002E6A  C1B8  F1AC         	movff	powf@__xc8_float_word,powf@j
  6927  002E6E  C1B9  F1AD         	movff	powf@__xc8_float_word+1,powf@j+1
  6928  002E72  C1BA  F1AE         	movff	powf@__xc8_float_word+2,powf@j+2
  6929  002E76  C1BB  F1AF         	movff	powf@__xc8_float_word+3,powf@j+3
  6930  002E7A  0101               	movlb	1	; () banked
  6931  002E7C  BFAF               	btfsc	(powf@j+3)& (0+255),7,b
  6932  002E7E  EF4D  F017         	goto	u5771
  6933  002E82  05AC               	decf	powf@j& (0+255),w,b
  6934  002E84  0E00               	movlw	0
  6935  002E86  59AD               	subwfb	(powf@j+1)& (0+255),w,b
  6936  002E88  0E00               	movlw	0
  6937  002E8A  59AE               	subwfb	(powf@j+2)& (0+255),w,b
  6938  002E8C  0E43               	movlw	67
  6939  002E8E  59AF               	subwfb	(powf@j+3)& (0+255),w,b
  6940  002E90  A0D8               	btfss	status,0,c
  6941  002E92  EF4D  F017         	goto	u5771
  6942  002E96  EF4F  F017         	goto	u5770
  6943  002E9A                     u5771:
  6944  002E9A  EF85  F017         	goto	l6178
  6945  002E9E                     u5770:
  6946  002E9E                     
  6947                           ; BSR set to: 1
  6948  002E9E  0ECA               	movlw	202
  6949  002EA0  6E1D               	movwf	___flmul@a^0,c
  6950  002EA2  0EF2               	movlw	242
  6951  002EA4  6E1E               	movwf	(___flmul@a+1)^0,c
  6952  002EA6  0E49               	movlw	73
  6953  002EA8  6E1F               	movwf	(___flmul@a+2)^0,c
  6954  002EAA  0E71               	movlw	113
  6955  002EAC  6E20               	movwf	(___flmul@a+3)^0,c
  6956  002EAE  C188  F019         	movff	powf@sn,___flmul@b
  6957  002EB2  C189  F01A         	movff	powf@sn+1,___flmul@b+1
  6958  002EB6  C18A  F01B         	movff	powf@sn+2,___flmul@b+2
  6959  002EBA  C18B  F01C         	movff	powf@sn+3,___flmul@b+3
  6960  002EBE  EC47  F022         	call	___flmul	;wreg free
  6961  002EC2  C019  F1A4         	movff	?___flmul,_powf$1775
  6962  002EC6  C01A  F1A5         	movff	?___flmul+1,_powf$1775+1
  6963  002ECA  C01B  F1A6         	movff	?___flmul+2,_powf$1775+2
  6964  002ECE  C01C  F1A7         	movff	?___flmul+3,_powf$1775+3
  6965  002ED2  C1A4  F019         	movff	_powf$1775,___flmul@b
  6966  002ED6  C1A5  F01A         	movff	_powf$1775+1,___flmul@b+1
  6967  002EDA  C1A6  F01B         	movff	_powf$1775+2,___flmul@b+2
  6968  002EDE  C1A7  F01C         	movff	_powf$1775+3,___flmul@b+3
  6969  002EE2  0ECA               	movlw	202
  6970  002EE4  6E1D               	movwf	___flmul@a^0,c
  6971  002EE6  0EF2               	movlw	242
  6972  002EE8  6E1E               	movwf	(___flmul@a+1)^0,c
  6973  002EEA  0E49               	movlw	73
  6974  002EEC  6E1F               	movwf	(___flmul@a+2)^0,c
  6975  002EEE  0E71               	movlw	113
  6976  002EF0  6E20               	movwf	(___flmul@a+3)^0,c
  6977  002EF2  EC47  F022         	call	___flmul	;wreg free
  6978  002EF6  C019  F088         	movff	?___flmul,?_powf
  6979  002EFA  C01A  F089         	movff	?___flmul+1,?_powf+1
  6980  002EFE  C01B  F08A         	movff	?___flmul+2,?_powf+2
  6981  002F02  C01C  F08B         	movff	?___flmul+3,?_powf+3
  6982  002F06  EF86  F01D         	goto	l1435
  6983  002F0A                     l6178:
  6984                           
  6985                           ; BSR set to: 1
  6986  002F0A  0E43               	movlw	67
  6987  002F0C  19AF               	xorwf	(powf@j+3)& (0+255),w,b
  6988  002F0E  11AC               	iorwf	powf@j& (0+255),w,b
  6989  002F10  11AD               	iorwf	(powf@j+1)& (0+255),w,b
  6990  002F12  11AE               	iorwf	(powf@j+2)& (0+255),w,b
  6991  002F14  A4D8               	btfss	status,2,c
  6992  002F16  EF8F  F017         	goto	u5781
  6993  002F1A  EF91  F017         	goto	u5780
  6994  002F1E                     u5781:
  6995  002F1E  EF04  F018         	goto	l6186
  6996  002F22                     u5780:
  6997  002F22                     
  6998                           ; BSR set to: 1
  6999  002F22  C19C  F036         	movff	powf@p_h,___flsub@a
  7000  002F26  C19D  F037         	movff	powf@p_h+1,___flsub@a+1
  7001  002F2A  C19E  F038         	movff	powf@p_h+2,___flsub@a+2
  7002  002F2E  C19F  F039         	movff	powf@p_h+3,___flsub@a+3
  7003  002F32  C1B4  F032         	movff	powf@z,___flsub@b
  7004  002F36  C1B5  F033         	movff	powf@z+1,___flsub@b+1
  7005  002F3A  C1B6  F034         	movff	powf@z+2,___flsub@b+2
  7006  002F3E  C1B7  F035         	movff	powf@z+3,___flsub@b+3
  7007  002F42  EC88  F032         	call	___flsub	;wreg free
  7008  002F46  C032  F03A         	movff	?___flsub,___flge@ff1
  7009  002F4A  C033  F03B         	movff	?___flsub+1,___flge@ff1+1
  7010  002F4E  C034  F03C         	movff	?___flsub+2,___flge@ff1+2
  7011  002F52  C035  F03D         	movff	?___flsub+3,___flge@ff1+3
  7012  002F56  0E3C               	movlw	60
  7013  002F58  6E0D               	movwf	___fladd@a^0,c
  7014  002F5A  0EAA               	movlw	170
  7015  002F5C  6E0E               	movwf	(___fladd@a+1)^0,c
  7016  002F5E  0E38               	movlw	56
  7017  002F60  6E0F               	movwf	(___fladd@a+2)^0,c
  7018  002F62  0E33               	movlw	51
  7019  002F64  6E10               	movwf	(___fladd@a+3)^0,c
  7020  002F66  C164  F009         	movff	powf@p_l,___fladd@b
  7021  002F6A  C165  F00A         	movff	powf@p_l+1,___fladd@b+1
  7022  002F6E  C166  F00B         	movff	powf@p_l+2,___fladd@b+2
  7023  002F72  C167  F00C         	movff	powf@p_l+3,___fladd@b+3
  7024  002F76  ECE7  F01F         	call	___fladd	;wreg free
  7025  002F7A  C009  F03E         	movff	?___fladd,___flge@ff2
  7026  002F7E  C00A  F03F         	movff	?___fladd+1,___flge@ff2+1
  7027  002F82  C00B  F040         	movff	?___fladd+2,___flge@ff2+2
  7028  002F86  C00C  F041         	movff	?___fladd+3,___flge@ff2+3
  7029  002F8A  ECED  F02D         	call	___flge	;wreg free
  7030  002F8E  B0D8               	btfsc	status,0,c
  7031  002F90  EFCC  F017         	goto	u5791
  7032  002F94  EFCE  F017         	goto	u5790
  7033  002F98                     u5791:
  7034  002F98  EFCE  F018         	goto	l6202
  7035  002F9C                     u5790:
  7036  002F9C  0ECA               	movlw	202
  7037  002F9E  6E1D               	movwf	___flmul@a^0,c
  7038  002FA0  0EF2               	movlw	242
  7039  002FA2  6E1E               	movwf	(___flmul@a+1)^0,c
  7040  002FA4  0E49               	movlw	73
  7041  002FA6  6E1F               	movwf	(___flmul@a+2)^0,c
  7042  002FA8  0E71               	movlw	113
  7043  002FAA  6E20               	movwf	(___flmul@a+3)^0,c
  7044  002FAC  C188  F019         	movff	powf@sn,___flmul@b
  7045  002FB0  C189  F01A         	movff	powf@sn+1,___flmul@b+1
  7046  002FB4  C18A  F01B         	movff	powf@sn+2,___flmul@b+2
  7047  002FB8  C18B  F01C         	movff	powf@sn+3,___flmul@b+3
  7048  002FBC  EC47  F022         	call	___flmul	;wreg free
  7049  002FC0  C019  F1A4         	movff	?___flmul,_powf$1775
  7050  002FC4  C01A  F1A5         	movff	?___flmul+1,_powf$1775+1
  7051  002FC8  C01B  F1A6         	movff	?___flmul+2,_powf$1775+2
  7052  002FCC  C01C  F1A7         	movff	?___flmul+3,_powf$1775+3
  7053  002FD0  C1A4  F019         	movff	_powf$1775,___flmul@b
  7054  002FD4  C1A5  F01A         	movff	_powf$1775+1,___flmul@b+1
  7055  002FD8  C1A6  F01B         	movff	_powf$1775+2,___flmul@b+2
  7056  002FDC  C1A7  F01C         	movff	_powf$1775+3,___flmul@b+3
  7057  002FE0  0ECA               	movlw	202
  7058  002FE2  6E1D               	movwf	___flmul@a^0,c
  7059  002FE4  0EF2               	movlw	242
  7060  002FE6  6E1E               	movwf	(___flmul@a+1)^0,c
  7061  002FE8  0E49               	movlw	73
  7062  002FEA  6E1F               	movwf	(___flmul@a+2)^0,c
  7063  002FEC  0E71               	movlw	113
  7064  002FEE  6E20               	movwf	(___flmul@a+3)^0,c
  7065  002FF0  EC47  F022         	call	___flmul	;wreg free
  7066  002FF4  C019  F088         	movff	?___flmul,?_powf
  7067  002FF8  C01A  F089         	movff	?___flmul+1,?_powf+1
  7068  002FFC  C01B  F08A         	movff	?___flmul+2,?_powf+2
  7069  003000  C01C  F08B         	movff	?___flmul+3,?_powf+3
  7070  003004  EF86  F01D         	goto	l1435
  7071  003008                     l6186:
  7072                           
  7073                           ; BSR set to: 1
  7074  003008  0EFF               	movlw	255
  7075  00300A  15AC               	andwf	powf@j& (0+255),w,b
  7076  00300C  0100               	movlb	0	; () banked
  7077  00300E  6F90               	movwf	??_powf& (0+255),b
  7078  003010  0EFF               	movlw	255
  7079  003012  0101               	movlb	1	; () banked
  7080  003014  15AD               	andwf	(powf@j+1)& (0+255),w,b
  7081  003016  0100               	movlb	0	; () banked
  7082  003018  6F91               	movwf	(??_powf+1)& (0+255),b
  7083  00301A  0EFF               	movlw	255
  7084  00301C  0101               	movlb	1	; () banked
  7085  00301E  15AE               	andwf	(powf@j+2)& (0+255),w,b
  7086  003020  0100               	movlb	0	; () banked
  7087  003022  6F92               	movwf	(??_powf+2)& (0+255),b
  7088  003024  0E7F               	movlw	127
  7089  003026  0101               	movlb	1	; () banked
  7090  003028  15AF               	andwf	(powf@j+3)& (0+255),w,b
  7091  00302A  0100               	movlb	0	; () banked
  7092  00302C  6F93               	movwf	(??_powf+3)& (0+255),b
  7093  00302E  BF93               	btfsc	(??_powf+3)& (0+255),7,b
  7094  003030  EF26  F018         	goto	u5801
  7095  003034  0590               	decf	??_powf& (0+255),w,b
  7096  003036  0E00               	movlw	0
  7097  003038  5991               	subwfb	(??_powf+1)& (0+255),w,b
  7098  00303A  0E16               	movlw	22
  7099  00303C  5992               	subwfb	(??_powf+2)& (0+255),w,b
  7100  00303E  0E43               	movlw	67
  7101  003040  5993               	subwfb	(??_powf+3)& (0+255),w,b
  7102  003042  A0D8               	btfss	status,0,c
  7103  003044  EF26  F018         	goto	u5801
  7104  003048  EF28  F018         	goto	u5800
  7105  00304C                     u5801:
  7106  00304C  EF5E  F018         	goto	l6194
  7107  003050                     u5800:
  7108  003050                     
  7109                           ; BSR set to: 0
  7110  003050  0E60               	movlw	96
  7111  003052  6E1D               	movwf	___flmul@a^0,c
  7112  003054  0E42               	movlw	66
  7113  003056  6E1E               	movwf	(___flmul@a+1)^0,c
  7114  003058  0EA2               	movlw	162
  7115  00305A  6E1F               	movwf	(___flmul@a+2)^0,c
  7116  00305C  0E0D               	movlw	13
  7117  00305E  6E20               	movwf	(___flmul@a+3)^0,c
  7118  003060  C188  F019         	movff	powf@sn,___flmul@b
  7119  003064  C189  F01A         	movff	powf@sn+1,___flmul@b+1
  7120  003068  C18A  F01B         	movff	powf@sn+2,___flmul@b+2
  7121  00306C  C18B  F01C         	movff	powf@sn+3,___flmul@b+3
  7122  003070  EC47  F022         	call	___flmul	;wreg free
  7123  003074  C019  F1A4         	movff	?___flmul,_powf$1775
  7124  003078  C01A  F1A5         	movff	?___flmul+1,_powf$1775+1
  7125  00307C  C01B  F1A6         	movff	?___flmul+2,_powf$1775+2
  7126  003080  C01C  F1A7         	movff	?___flmul+3,_powf$1775+3
  7127  003084  C1A4  F019         	movff	_powf$1775,___flmul@b
  7128  003088  C1A5  F01A         	movff	_powf$1775+1,___flmul@b+1
  7129  00308C  C1A6  F01B         	movff	_powf$1775+2,___flmul@b+2
  7130  003090  C1A7  F01C         	movff	_powf$1775+3,___flmul@b+3
  7131  003094  0E60               	movlw	96
  7132  003096  6E1D               	movwf	___flmul@a^0,c
  7133  003098  0E42               	movlw	66
  7134  00309A  6E1E               	movwf	(___flmul@a+1)^0,c
  7135  00309C  0EA2               	movlw	162
  7136  00309E  6E1F               	movwf	(___flmul@a+2)^0,c
  7137  0030A0  0E0D               	movlw	13
  7138  0030A2  6E20               	movwf	(___flmul@a+3)^0,c
  7139  0030A4  EC47  F022         	call	___flmul	;wreg free
  7140  0030A8  C019  F088         	movff	?___flmul,?_powf
  7141  0030AC  C01A  F089         	movff	?___flmul+1,?_powf+1
  7142  0030B0  C01B  F08A         	movff	?___flmul+2,?_powf+2
  7143  0030B4  C01C  F08B         	movff	?___flmul+3,?_powf+3
  7144  0030B8  EF86  F01D         	goto	l1435
  7145  0030BC                     l6194:
  7146                           
  7147                           ; BSR set to: 0
  7148  0030BC  0E16               	movlw	22
  7149  0030BE  0101               	movlb	1	; () banked
  7150  0030C0  19AE               	xorwf	(powf@j+2)& (0+255),w,b
  7151  0030C2  E109               	bnz	u5811
  7152  0030C4  0EC3               	movlw	195
  7153  0030C6  19AF               	xorwf	(powf@j+3)& (0+255),w,b
  7154  0030C8  11AC               	iorwf	powf@j& (0+255),w,b
  7155  0030CA  11AD               	iorwf	(powf@j+1)& (0+255),w,b
  7156  0030CC  A4D8               	btfss	status,2,c
  7157  0030CE  EF6B  F018         	goto	u5811
  7158  0030D2  EF6D  F018         	goto	u5810
  7159  0030D6                     u5811:
  7160  0030D6  EFCE  F018         	goto	l6202
  7161  0030DA                     u5810:
  7162  0030DA                     
  7163                           ; BSR set to: 1
  7164  0030DA  C19C  F036         	movff	powf@p_h,___flsub@a
  7165  0030DE  C19D  F037         	movff	powf@p_h+1,___flsub@a+1
  7166  0030E2  C19E  F038         	movff	powf@p_h+2,___flsub@a+2
  7167  0030E6  C19F  F039         	movff	powf@p_h+3,___flsub@a+3
  7168  0030EA  C1B4  F032         	movff	powf@z,___flsub@b
  7169  0030EE  C1B5  F033         	movff	powf@z+1,___flsub@b+1
  7170  0030F2  C1B6  F034         	movff	powf@z+2,___flsub@b+2
  7171  0030F6  C1B7  F035         	movff	powf@z+3,___flsub@b+3
  7172  0030FA  EC88  F032         	call	___flsub	;wreg free
  7173  0030FE  C032  F03A         	movff	?___flsub,___flge@ff1
  7174  003102  C033  F03B         	movff	?___flsub+1,___flge@ff1+1
  7175  003106  C034  F03C         	movff	?___flsub+2,___flge@ff1+2
  7176  00310A  C035  F03D         	movff	?___flsub+3,___flge@ff1+3
  7177  00310E  C164  F03E         	movff	powf@p_l,___flge@ff2
  7178  003112  C165  F03F         	movff	powf@p_l+1,___flge@ff2+1
  7179  003116  C166  F040         	movff	powf@p_l+2,___flge@ff2+2
  7180  00311A  C167  F041         	movff	powf@p_l+3,___flge@ff2+3
  7181  00311E  ECED  F02D         	call	___flge	;wreg free
  7182  003122  A0D8               	btfss	status,0,c
  7183  003124  EF96  F018         	goto	u5821
  7184  003128  EF98  F018         	goto	u5820
  7185  00312C                     u5821:
  7186  00312C  EFCE  F018         	goto	l6202
  7187  003130                     u5820:
  7188  003130  0E60               	movlw	96
  7189  003132  6E1D               	movwf	___flmul@a^0,c
  7190  003134  0E42               	movlw	66
  7191  003136  6E1E               	movwf	(___flmul@a+1)^0,c
  7192  003138  0EA2               	movlw	162
  7193  00313A  6E1F               	movwf	(___flmul@a+2)^0,c
  7194  00313C  0E0D               	movlw	13
  7195  00313E  6E20               	movwf	(___flmul@a+3)^0,c
  7196  003140  C188  F019         	movff	powf@sn,___flmul@b
  7197  003144  C189  F01A         	movff	powf@sn+1,___flmul@b+1
  7198  003148  C18A  F01B         	movff	powf@sn+2,___flmul@b+2
  7199  00314C  C18B  F01C         	movff	powf@sn+3,___flmul@b+3
  7200  003150  EC47  F022         	call	___flmul	;wreg free
  7201  003154  C019  F1A4         	movff	?___flmul,_powf$1775
  7202  003158  C01A  F1A5         	movff	?___flmul+1,_powf$1775+1
  7203  00315C  C01B  F1A6         	movff	?___flmul+2,_powf$1775+2
  7204  003160  C01C  F1A7         	movff	?___flmul+3,_powf$1775+3
  7205  003164  C1A4  F019         	movff	_powf$1775,___flmul@b
  7206  003168  C1A5  F01A         	movff	_powf$1775+1,___flmul@b+1
  7207  00316C  C1A6  F01B         	movff	_powf$1775+2,___flmul@b+2
  7208  003170  C1A7  F01C         	movff	_powf$1775+3,___flmul@b+3
  7209  003174  0E60               	movlw	96
  7210  003176  6E1D               	movwf	___flmul@a^0,c
  7211  003178  0E42               	movlw	66
  7212  00317A  6E1E               	movwf	(___flmul@a+1)^0,c
  7213  00317C  0EA2               	movlw	162
  7214  00317E  6E1F               	movwf	(___flmul@a+2)^0,c
  7215  003180  0E0D               	movlw	13
  7216  003182  6E20               	movwf	(___flmul@a+3)^0,c
  7217  003184  EC47  F022         	call	___flmul	;wreg free
  7218  003188  C019  F088         	movff	?___flmul,?_powf
  7219  00318C  C01A  F089         	movff	?___flmul+1,?_powf+1
  7220  003190  C01B  F08A         	movff	?___flmul+2,?_powf+2
  7221  003194  C01C  F08B         	movff	?___flmul+3,?_powf+3
  7222  003198  EF86  F01D         	goto	l1435
  7223  00319C                     l6202:
  7224  00319C  0EFF               	movlw	255
  7225  00319E  0101               	movlb	1	; () banked
  7226  0031A0  15AC               	andwf	powf@j& (0+255),w,b
  7227  0031A2  6F2C               	movwf	powf@i& (0+255),b
  7228  0031A4  0EFF               	movlw	255
  7229  0031A6  15AD               	andwf	(powf@j+1)& (0+255),w,b
  7230  0031A8  6F2D               	movwf	(powf@i+1)& (0+255),b
  7231  0031AA  0EFF               	movlw	255
  7232  0031AC  15AE               	andwf	(powf@j+2)& (0+255),w,b
  7233  0031AE  6F2E               	movwf	(powf@i+2)& (0+255),b
  7234  0031B0  0E7F               	movlw	127
  7235  0031B2  15AF               	andwf	(powf@j+3)& (0+255),w,b
  7236  0031B4  6F2F               	movwf	(powf@i+3)& (0+255),b
  7237  0031B6  0E17               	movlw	23
  7238  0031B8  0100               	movlb	0	; () banked
  7239  0031BA  6F90               	movwf	??_powf& (0+255),b
  7240  0031BC  C12C  F091         	movff	powf@i,??_powf+1
  7241  0031C0  C12D  F092         	movff	powf@i+1,??_powf+2
  7242  0031C4  C12E  F093         	movff	powf@i+2,??_powf+3
  7243  0031C8  C12F  F094         	movff	powf@i+3,??_powf+4
  7244  0031CC                     u5835:
  7245  0031CC  6790               	tstfsz	??_powf& (0+255),b
  7246  0031CE  EFEB  F018         	goto	u5836
  7247  0031D2  EFF3  F018         	goto	u5837
  7248  0031D6                     u5836:
  7249  0031D6  3594               	rlcf	(??_powf+4)& (0+255),w,b
  7250  0031D8  3394               	rrcf	(??_powf+4)& (0+255),f,b
  7251  0031DA  3393               	rrcf	(??_powf+3)& (0+255),f,b
  7252  0031DC  3392               	rrcf	(??_powf+2)& (0+255),f,b
  7253  0031DE  3391               	rrcf	(??_powf+1)& (0+255),f,b
  7254  0031E0  2F90               	decfsz	??_powf& (0+255),f,b
  7255  0031E2  EFE6  F018         	goto	u5835
  7256  0031E6                     u5837:
  7257  0031E6  0E81               	movlw	129
  7258  0031E8  0100               	movlb	0	; () banked
  7259  0031EA  2591               	addwf	(??_powf+1)& (0+255),w,b
  7260  0031EC  0101               	movlb	1	; () banked
  7261  0031EE  6FA0               	movwf	powf@k& (0+255),b
  7262  0031F0  0EFF               	movlw	255
  7263  0031F2  0100               	movlb	0	; () banked
  7264  0031F4  2192               	addwfc	(??_powf+2)& (0+255),w,b
  7265  0031F6  0101               	movlb	1	; () banked
  7266  0031F8  6FA1               	movwf	(powf@k+1)& (0+255),b
  7267  0031FA  0EFF               	movlw	255
  7268  0031FC  0100               	movlb	0	; () banked
  7269  0031FE  2193               	addwfc	(??_powf+3)& (0+255),w,b
  7270  003200  0101               	movlb	1	; () banked
  7271  003202  6FA2               	movwf	(powf@k+2)& (0+255),b
  7272  003204  0EFF               	movlw	255
  7273  003206  0100               	movlb	0	; () banked
  7274  003208  2194               	addwfc	(??_powf+4)& (0+255),w,b
  7275  00320A  0101               	movlb	1	; () banked
  7276  00320C  6FA3               	movwf	(powf@k+3)& (0+255),b
  7277  00320E                     
  7278                           ; BSR set to: 1
  7279  00320E  0E00               	movlw	0
  7280  003210  6F80               	movwf	powf@n& (0+255),b
  7281  003212  0E00               	movlw	0
  7282  003214  6F81               	movwf	(powf@n+1)& (0+255),b
  7283  003216  0E00               	movlw	0
  7284  003218  6F82               	movwf	(powf@n+2)& (0+255),b
  7285  00321A  0E00               	movlw	0
  7286  00321C  6F83               	movwf	(powf@n+3)& (0+255),b
  7287  00321E                     
  7288                           ; BSR set to: 1
  7289  00321E  BF2F               	btfsc	(powf@i+3)& (0+255),7,b
  7290  003220  EF1E  F019         	goto	u5841
  7291  003224  052C               	decf	powf@i& (0+255),w,b
  7292  003226  0E00               	movlw	0
  7293  003228  592D               	subwfb	(powf@i+1)& (0+255),w,b
  7294  00322A  0E00               	movlw	0
  7295  00322C  592E               	subwfb	(powf@i+2)& (0+255),w,b
  7296  00322E  0E3F               	movlw	63
  7297  003230  592F               	subwfb	(powf@i+3)& (0+255),w,b
  7298  003232  A0D8               	btfss	status,0,c
  7299  003234  EF1E  F019         	goto	u5841
  7300  003238  EF20  F019         	goto	u5840
  7301  00323C                     u5841:
  7302  00323C  EF24  F01A         	goto	l6216
  7303  003240                     u5840:
  7304  003240                     
  7305                           ; BSR set to: 1
  7306  003240  C1A0  F090         	movff	powf@k,??_powf
  7307  003244  0E01               	movlw	1
  7308  003246  0100               	movlb	0	; () banked
  7309  003248  2790               	addwf	??_powf& (0+255),f,b
  7310  00324A  0E00               	movlw	0
  7311  00324C  6F91               	movwf	(??_powf+1)& (0+255),b
  7312  00324E  0E00               	movlw	0
  7313  003250  6F92               	movwf	(??_powf+2)& (0+255),b
  7314  003252  0E80               	movlw	128
  7315  003254  6F93               	movwf	(??_powf+3)& (0+255),b
  7316  003256  0E00               	movlw	0
  7317  003258  6F94               	movwf	(??_powf+4)& (0+255),b
  7318  00325A                     u5855:
  7319  00325A  6790               	tstfsz	??_powf& (0+255),b
  7320  00325C  EF32  F019         	goto	u5856
  7321  003260  EF3A  F019         	goto	u5857
  7322  003264                     u5856:
  7323  003264  3594               	rlcf	(??_powf+4)& (0+255),w,b
  7324  003266  3394               	rrcf	(??_powf+4)& (0+255),f,b
  7325  003268  3393               	rrcf	(??_powf+3)& (0+255),f,b
  7326  00326A  3392               	rrcf	(??_powf+2)& (0+255),f,b
  7327  00326C  3391               	rrcf	(??_powf+1)& (0+255),f,b
  7328  00326E  2F90               	decfsz	??_powf& (0+255),f,b
  7329  003270  EF2D  F019         	goto	u5855
  7330  003274                     u5857:
  7331  003274  0101               	movlb	1	; () banked
  7332  003276  51AC               	movf	powf@j& (0+255),w,b
  7333  003278  0100               	movlb	0	; () banked
  7334  00327A  2591               	addwf	(??_powf+1)& (0+255),w,b
  7335  00327C  0101               	movlb	1	; () banked
  7336  00327E  6F80               	movwf	powf@n& (0+255),b
  7337  003280  51AD               	movf	(powf@j+1)& (0+255),w,b
  7338  003282  0100               	movlb	0	; () banked
  7339  003284  2192               	addwfc	(??_powf+2)& (0+255),w,b
  7340  003286  0101               	movlb	1	; () banked
  7341  003288  6F81               	movwf	(powf@n+1)& (0+255),b
  7342  00328A  51AE               	movf	(powf@j+2)& (0+255),w,b
  7343  00328C  0100               	movlb	0	; () banked
  7344  00328E  2193               	addwfc	(??_powf+3)& (0+255),w,b
  7345  003290  0101               	movlb	1	; () banked
  7346  003292  6F82               	movwf	(powf@n+2)& (0+255),b
  7347  003294  51AF               	movf	(powf@j+3)& (0+255),w,b
  7348  003296  0100               	movlb	0	; () banked
  7349  003298  2194               	addwfc	(??_powf+4)& (0+255),w,b
  7350  00329A  0101               	movlb	1	; () banked
  7351  00329C  6F83               	movwf	(powf@n+3)& (0+255),b
  7352  00329E  0E81               	movlw	129
  7353  0032A0  0100               	movlb	0	; () banked
  7354  0032A2  6F90               	movwf	??_powf& (0+255),b
  7355  0032A4  0EFF               	movlw	255
  7356  0032A6  6F91               	movwf	(??_powf+1)& (0+255),b
  7357  0032A8  0EFF               	movlw	255
  7358  0032AA  6F92               	movwf	(??_powf+2)& (0+255),b
  7359  0032AC  0EFF               	movlw	255
  7360  0032AE  6F93               	movwf	(??_powf+3)& (0+255),b
  7361  0032B0  0E17               	movlw	23
  7362  0032B2  6F94               	movwf	(??_powf+4)& (0+255),b
  7363  0032B4  C180  F095         	movff	powf@n,??_powf+5
  7364  0032B8  C181  F096         	movff	powf@n+1,??_powf+6
  7365  0032BC  C182  F097         	movff	powf@n+2,??_powf+7
  7366  0032C0  C183  F098         	movff	powf@n+3,??_powf+8
  7367  0032C4                     u5865:
  7368  0032C4  6794               	tstfsz	(??_powf+4)& (0+255),b
  7369  0032C6  EF67  F019         	goto	u5866
  7370  0032CA  EF6F  F019         	goto	u5867
  7371  0032CE                     u5866:
  7372  0032CE  3598               	rlcf	(??_powf+8)& (0+255),w,b
  7373  0032D0  3398               	rrcf	(??_powf+8)& (0+255),f,b
  7374  0032D2  3397               	rrcf	(??_powf+7)& (0+255),f,b
  7375  0032D4  3396               	rrcf	(??_powf+6)& (0+255),f,b
  7376  0032D6  3395               	rrcf	(??_powf+5)& (0+255),f,b
  7377  0032D8  2F94               	decfsz	(??_powf+4)& (0+255),f,b
  7378  0032DA  EF62  F019         	goto	u5865
  7379  0032DE                     u5867:
  7380  0032DE  0100               	movlb	0	; () banked
  7381  0032E0  5195               	movf	(??_powf+5)& (0+255),w,b
  7382  0032E2  2590               	addwf	??_powf& (0+255),w,b
  7383  0032E4  0101               	movlb	1	; () banked
  7384  0032E6  6FA0               	movwf	powf@k& (0+255),b
  7385  0032E8  0E00               	movlw	0
  7386  0032EA  0100               	movlb	0	; () banked
  7387  0032EC  2191               	addwfc	(??_powf+1)& (0+255),w,b
  7388  0032EE  0101               	movlb	1	; () banked
  7389  0032F0  6FA1               	movwf	(powf@k+1)& (0+255),b
  7390  0032F2  0E00               	movlw	0
  7391  0032F4  0100               	movlb	0	; () banked
  7392  0032F6  2192               	addwfc	(??_powf+2)& (0+255),w,b
  7393  0032F8  0101               	movlb	1	; () banked
  7394  0032FA  6FA2               	movwf	(powf@k+2)& (0+255),b
  7395  0032FC  0E00               	movlw	0
  7396  0032FE  0100               	movlb	0	; () banked
  7397  003300  2193               	addwfc	(??_powf+3)& (0+255),w,b
  7398  003302  0101               	movlb	1	; () banked
  7399  003304  6FA3               	movwf	(powf@k+3)& (0+255),b
  7400  003306                     
  7401                           ; BSR set to: 1
  7402  003306  C1A0  F090         	movff	powf@k,??_powf
  7403  00330A  0EFF               	movlw	255
  7404  00330C  0100               	movlb	0	; () banked
  7405  00330E  6F91               	movwf	(??_powf+1)& (0+255),b
  7406  003310  0EFF               	movlw	255
  7407  003312  6F92               	movwf	(??_powf+2)& (0+255),b
  7408  003314  0E7F               	movlw	127
  7409  003316  6F93               	movwf	(??_powf+3)& (0+255),b
  7410  003318  0E00               	movlw	0
  7411  00331A  6F94               	movwf	(??_powf+4)& (0+255),b
  7412  00331C                     u5875:
  7413  00331C  6790               	tstfsz	??_powf& (0+255),b
  7414  00331E  EF93  F019         	goto	u5876
  7415  003322  EF9B  F019         	goto	u5877
  7416  003326                     u5876:
  7417  003326  3594               	rlcf	(??_powf+4)& (0+255),w,b
  7418  003328  3394               	rrcf	(??_powf+4)& (0+255),f,b
  7419  00332A  3393               	rrcf	(??_powf+3)& (0+255),f,b
  7420  00332C  3392               	rrcf	(??_powf+2)& (0+255),f,b
  7421  00332E  3391               	rrcf	(??_powf+1)& (0+255),f,b
  7422  003330  2F90               	decfsz	??_powf& (0+255),f,b
  7423  003332  EF8E  F019         	goto	u5875
  7424  003336                     u5877:
  7425  003336  0100               	movlb	0	; () banked
  7426  003338  1D91               	comf	(??_powf+1)& (0+255),w,b
  7427  00333A  6F95               	movwf	(??_powf+5)& (0+255),b
  7428  00333C  1D92               	comf	(??_powf+2)& (0+255),w,b
  7429  00333E  6F96               	movwf	(??_powf+6)& (0+255),b
  7430  003340  1D93               	comf	(??_powf+3)& (0+255),w,b
  7431  003342  6F97               	movwf	(??_powf+7)& (0+255),b
  7432  003344  1D94               	comf	(??_powf+4)& (0+255),w,b
  7433  003346  6F98               	movwf	(??_powf+8)& (0+255),b
  7434  003348  0101               	movlb	1	; () banked
  7435  00334A  5180               	movf	powf@n& (0+255),w,b
  7436  00334C  0100               	movlb	0	; () banked
  7437  00334E  1595               	andwf	(??_powf+5)& (0+255),w,b
  7438  003350  0101               	movlb	1	; () banked
  7439  003352  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  7440  003354  5181               	movf	(powf@n+1)& (0+255),w,b
  7441  003356  0100               	movlb	0	; () banked
  7442  003358  1596               	andwf	(??_powf+6)& (0+255),w,b
  7443  00335A  0101               	movlb	1	; () banked
  7444  00335C  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  7445  00335E  5182               	movf	(powf@n+2)& (0+255),w,b
  7446  003360  0100               	movlb	0	; () banked
  7447  003362  1597               	andwf	(??_powf+7)& (0+255),w,b
  7448  003364  0101               	movlb	1	; () banked
  7449  003366  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  7450  003368  5183               	movf	(powf@n+3)& (0+255),w,b
  7451  00336A  0100               	movlb	0	; () banked
  7452  00336C  1598               	andwf	(??_powf+8)& (0+255),w,b
  7453  00336E  0101               	movlb	1	; () banked
  7454  003370  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  7455  003372                     
  7456                           ; BSR set to: 1
  7457  003372  C1B8  F1B0         	movff	powf@__xc8_float_word,powf@t
  7458  003376  C1B9  F1B1         	movff	powf@__xc8_float_word+1,powf@t+1
  7459  00337A  C1BA  F1B2         	movff	powf@__xc8_float_word+2,powf@t+2
  7460  00337E  C1BB  F1B3         	movff	powf@__xc8_float_word+3,powf@t+3
  7461  003382                     
  7462                           ; BSR set to: 1
  7463  003382  51A0               	movf	powf@k& (0+255),w,b
  7464  003384  0817               	sublw	23
  7465  003386  0100               	movlb	0	; () banked
  7466  003388  6F90               	movwf	??_powf& (0+255),b
  7467  00338A  0EFF               	movlw	255
  7468  00338C  0101               	movlb	1	; () banked
  7469  00338E  1580               	andwf	powf@n& (0+255),w,b
  7470  003390  0100               	movlb	0	; () banked
  7471  003392  6F91               	movwf	(??_powf+1)& (0+255),b
  7472  003394  0EFF               	movlw	255
  7473  003396  0101               	movlb	1	; () banked
  7474  003398  1581               	andwf	(powf@n+1)& (0+255),w,b
  7475  00339A  0100               	movlb	0	; () banked
  7476  00339C  6F92               	movwf	(??_powf+2)& (0+255),b
  7477  00339E  0E7F               	movlw	127
  7478  0033A0  0101               	movlb	1	; () banked
  7479  0033A2  1582               	andwf	(powf@n+2)& (0+255),w,b
  7480  0033A4  0100               	movlb	0	; () banked
  7481  0033A6  6F93               	movwf	(??_powf+3)& (0+255),b
  7482  0033A8  0E00               	movlw	0
  7483  0033AA  0101               	movlb	1	; () banked
  7484  0033AC  1583               	andwf	(powf@n+3)& (0+255),w,b
  7485  0033AE  0100               	movlb	0	; () banked
  7486  0033B0  6F94               	movwf	(??_powf+4)& (0+255),b
  7487  0033B2  0E00               	movlw	0
  7488  0033B4  1191               	iorwf	(??_powf+1)& (0+255),w,b
  7489  0033B6  6F95               	movwf	(??_powf+5)& (0+255),b
  7490  0033B8  0E00               	movlw	0
  7491  0033BA  1192               	iorwf	(??_powf+2)& (0+255),w,b
  7492  0033BC  6F96               	movwf	(??_powf+6)& (0+255),b
  7493  0033BE  0E80               	movlw	128
  7494  0033C0  1193               	iorwf	(??_powf+3)& (0+255),w,b
  7495  0033C2  6F97               	movwf	(??_powf+7)& (0+255),b
  7496  0033C4  0E00               	movlw	0
  7497  0033C6  1194               	iorwf	(??_powf+4)& (0+255),w,b
  7498  0033C8  6F98               	movwf	(??_powf+8)& (0+255),b
  7499  0033CA                     u5885:
  7500  0033CA  6790               	tstfsz	??_powf& (0+255),b
  7501  0033CC  EFEA  F019         	goto	u5886
  7502  0033D0  EFF2  F019         	goto	u5887
  7503  0033D4                     u5886:
  7504  0033D4  3598               	rlcf	(??_powf+8)& (0+255),w,b
  7505  0033D6  3398               	rrcf	(??_powf+8)& (0+255),f,b
  7506  0033D8  3397               	rrcf	(??_powf+7)& (0+255),f,b
  7507  0033DA  3396               	rrcf	(??_powf+6)& (0+255),f,b
  7508  0033DC  3395               	rrcf	(??_powf+5)& (0+255),f,b
  7509  0033DE  2F90               	decfsz	??_powf& (0+255),f,b
  7510  0033E0  EFE5  F019         	goto	u5885
  7511  0033E4                     u5887:
  7512  0033E4  C095  F180         	movff	??_powf+5,powf@n
  7513  0033E8  C096  F181         	movff	??_powf+6,powf@n+1
  7514  0033EC  C097  F182         	movff	??_powf+7,powf@n+2
  7515  0033F0  C098  F183         	movff	??_powf+8,powf@n+3
  7516  0033F4  0101               	movlb	1	; () banked
  7517  0033F6  BFAF               	btfsc	(powf@j+3)& (0+255),7,b
  7518  0033F8  EF02  F01A         	goto	u5890
  7519  0033FC  EF00  F01A         	goto	u5891
  7520  003400                     u5891:
  7521  003400  EF0A  F01A         	goto	l6214
  7522  003404                     u5890:
  7523  003404                     
  7524                           ; BSR set to: 1
  7525  003404  1F83               	comf	(powf@n+3)& (0+255),f,b
  7526  003406  1F82               	comf	(powf@n+2)& (0+255),f,b
  7527  003408  1F81               	comf	(powf@n+1)& (0+255),f,b
  7528  00340A  6D80               	negf	powf@n& (0+255),b
  7529  00340C  0E00               	movlw	0
  7530  00340E  2381               	addwfc	(powf@n+1)& (0+255),f,b
  7531  003410  2382               	addwfc	(powf@n+2)& (0+255),f,b
  7532  003412  2383               	addwfc	(powf@n+3)& (0+255),f,b
  7533  003414                     l6214:
  7534                           
  7535                           ; BSR set to: 1
  7536  003414  C19C  F032         	movff	powf@p_h,___flsub@b
  7537  003418  C19D  F033         	movff	powf@p_h+1,___flsub@b+1
  7538  00341C  C19E  F034         	movff	powf@p_h+2,___flsub@b+2
  7539  003420  C19F  F035         	movff	powf@p_h+3,___flsub@b+3
  7540  003424  C1B0  F036         	movff	powf@t,___flsub@a
  7541  003428  C1B1  F037         	movff	powf@t+1,___flsub@a+1
  7542  00342C  C1B2  F038         	movff	powf@t+2,___flsub@a+2
  7543  003430  C1B3  F039         	movff	powf@t+3,___flsub@a+3
  7544  003434  EC88  F032         	call	___flsub	;wreg free
  7545  003438  C032  F19C         	movff	?___flsub,powf@p_h
  7546  00343C  C033  F19D         	movff	?___flsub+1,powf@p_h+1
  7547  003440  C034  F19E         	movff	?___flsub+2,powf@p_h+2
  7548  003444  C035  F19F         	movff	?___flsub+3,powf@p_h+3
  7549  003448                     l6216:
  7550  003448  C164  F009         	movff	powf@p_l,___fladd@b
  7551  00344C  C165  F00A         	movff	powf@p_l+1,___fladd@b+1
  7552  003450  C166  F00B         	movff	powf@p_l+2,___fladd@b+2
  7553  003454  C167  F00C         	movff	powf@p_l+3,___fladd@b+3
  7554  003458  C19C  F00D         	movff	powf@p_h,___fladd@a
  7555  00345C  C19D  F00E         	movff	powf@p_h+1,___fladd@a+1
  7556  003460  C19E  F00F         	movff	powf@p_h+2,___fladd@a+2
  7557  003464  C19F  F010         	movff	powf@p_h+3,___fladd@a+3
  7558  003468  ECE7  F01F         	call	___fladd	;wreg free
  7559  00346C  C009  F1B0         	movff	?___fladd,powf@t
  7560  003470  C00A  F1B1         	movff	?___fladd+1,powf@t+1
  7561  003474  C00B  F1B2         	movff	?___fladd+2,powf@t+2
  7562  003478  C00C  F1B3         	movff	?___fladd+3,powf@t+3
  7563  00347C  C1B0  F1B8         	movff	powf@t,powf@__xc8_float_word
  7564  003480  C1B1  F1B9         	movff	powf@t+1,powf@__xc8_float_word+1
  7565  003484  C1B2  F1BA         	movff	powf@t+2,powf@__xc8_float_word+2
  7566  003488  C1B3  F1BB         	movff	powf@t+3,powf@__xc8_float_word+3
  7567  00348C  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
  7568  003490  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
  7569  003494  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
  7570  003498  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
  7571  00349C  0E00               	movlw	0
  7572  00349E  0101               	movlb	1	; () banked
  7573  0034A0  1594               	andwf	powf@is& (0+255),w,b
  7574  0034A2  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  7575  0034A4  0E80               	movlw	128
  7576  0034A6  1595               	andwf	(powf@is+1)& (0+255),w,b
  7577  0034A8  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  7578  0034AA  0EFF               	movlw	255
  7579  0034AC  1596               	andwf	(powf@is+2)& (0+255),w,b
  7580  0034AE  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  7581  0034B0  0EFF               	movlw	255
  7582  0034B2  1597               	andwf	(powf@is+3)& (0+255),w,b
  7583  0034B4  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  7584  0034B6                     
  7585                           ; BSR set to: 1
  7586  0034B6  C1B8  F1B0         	movff	powf@__xc8_float_word,powf@t
  7587  0034BA  C1B9  F1B1         	movff	powf@__xc8_float_word+1,powf@t+1
  7588  0034BE  C1BA  F1B2         	movff	powf@__xc8_float_word+2,powf@t+2
  7589  0034C2  C1BB  F1B3         	movff	powf@__xc8_float_word+3,powf@t+3
  7590  0034C6                     
  7591                           ; BSR set to: 1
  7592  0034C6  C1B0  F019         	movff	powf@t,___flmul@b
  7593  0034CA  C1B1  F01A         	movff	powf@t+1,___flmul@b+1
  7594  0034CE  C1B2  F01B         	movff	powf@t+2,___flmul@b+2
  7595  0034D2  C1B3  F01C         	movff	powf@t+3,___flmul@b+3
  7596  0034D6  0E00               	movlw	0
  7597  0034D8  6E1D               	movwf	___flmul@a^0,c
  7598  0034DA  0E72               	movlw	114
  7599  0034DC  6E1E               	movwf	(___flmul@a+1)^0,c
  7600  0034DE  0E31               	movlw	49
  7601  0034E0  6E1F               	movwf	(___flmul@a+2)^0,c
  7602  0034E2  0E3F               	movlw	63
  7603  0034E4  6E20               	movwf	(___flmul@a+3)^0,c
  7604  0034E6  EC47  F022         	call	___flmul	;wreg free
  7605  0034EA  C019  F174         	movff	?___flmul,powf@u
  7606  0034EE  C01A  F175         	movff	?___flmul+1,powf@u+1
  7607  0034F2  C01B  F176         	movff	?___flmul+2,powf@u+2
  7608  0034F6  C01C  F177         	movff	?___flmul+3,powf@u+3
  7609  0034FA  C19C  F036         	movff	powf@p_h,___flsub@a
  7610  0034FE  C19D  F037         	movff	powf@p_h+1,___flsub@a+1
  7611  003502  C19E  F038         	movff	powf@p_h+2,___flsub@a+2
  7612  003506  C19F  F039         	movff	powf@p_h+3,___flsub@a+3
  7613  00350A  C1B0  F032         	movff	powf@t,___flsub@b
  7614  00350E  C1B1  F033         	movff	powf@t+1,___flsub@b+1
  7615  003512  C1B2  F034         	movff	powf@t+2,___flsub@b+2
  7616  003516  C1B3  F035         	movff	powf@t+3,___flsub@b+3
  7617  00351A  EC88  F032         	call	___flsub	;wreg free
  7618  00351E  C032  F198         	movff	?___flsub,_powf$1778
  7619  003522  C033  F199         	movff	?___flsub+1,_powf$1778+1
  7620  003526  C034  F19A         	movff	?___flsub+2,_powf$1778+2
  7621  00352A  C035  F19B         	movff	?___flsub+3,_powf$1778+3
  7622  00352E  0E18               	movlw	24
  7623  003530  6E1D               	movwf	___flmul@a^0,c
  7624  003532  0E72               	movlw	114
  7625  003534  6E1E               	movwf	(___flmul@a+1)^0,c
  7626  003536  0E31               	movlw	49
  7627  003538  6E1F               	movwf	(___flmul@a+2)^0,c
  7628  00353A  0E3F               	movlw	63
  7629  00353C  6E20               	movwf	(___flmul@a+3)^0,c
  7630  00353E  C198  F036         	movff	_powf$1778,___flsub@a
  7631  003542  C199  F037         	movff	_powf$1778+1,___flsub@a+1
  7632  003546  C19A  F038         	movff	_powf$1778+2,___flsub@a+2
  7633  00354A  C19B  F039         	movff	_powf$1778+3,___flsub@a+3
  7634  00354E  C164  F032         	movff	powf@p_l,___flsub@b
  7635  003552  C165  F033         	movff	powf@p_l+1,___flsub@b+1
  7636  003556  C166  F034         	movff	powf@p_l+2,___flsub@b+2
  7637  00355A  C167  F035         	movff	powf@p_l+3,___flsub@b+3
  7638  00355E  EC88  F032         	call	___flsub	;wreg free
  7639  003562  C032  F019         	movff	?___flsub,___flmul@b
  7640  003566  C033  F01A         	movff	?___flsub+1,___flmul@b+1
  7641  00356A  C034  F01B         	movff	?___flsub+2,___flmul@b+2
  7642  00356E  C035  F01C         	movff	?___flsub+3,___flmul@b+3
  7643  003572  EC47  F022         	call	___flmul	;wreg free
  7644  003576  C019  F114         	movff	?___flmul,_powf$1788
  7645  00357A  C01A  F115         	movff	?___flmul+1,_powf$1788+1
  7646  00357E  C01B  F116         	movff	?___flmul+2,_powf$1788+2
  7647  003582  C01C  F117         	movff	?___flmul+3,_powf$1788+3
  7648  003586  C114  F009         	movff	_powf$1788,___fladd@b
  7649  00358A  C115  F00A         	movff	_powf$1788+1,___fladd@b+1
  7650  00358E  C116  F00B         	movff	_powf$1788+2,___fladd@b+2
  7651  003592  C117  F00C         	movff	_powf$1788+3,___fladd@b+3
  7652  003596  0E8C               	movlw	140
  7653  003598  6E1D               	movwf	___flmul@a^0,c
  7654  00359A  0EBE               	movlw	190
  7655  00359C  6E1E               	movwf	(___flmul@a+1)^0,c
  7656  00359E  0EBF               	movlw	191
  7657  0035A0  6E1F               	movwf	(___flmul@a+2)^0,c
  7658  0035A2  0E35               	movlw	53
  7659  0035A4  6E20               	movwf	(___flmul@a+3)^0,c
  7660  0035A6  C1B0  F019         	movff	powf@t,___flmul@b
  7661  0035AA  C1B1  F01A         	movff	powf@t+1,___flmul@b+1
  7662  0035AE  C1B2  F01B         	movff	powf@t+2,___flmul@b+2
  7663  0035B2  C1B3  F01C         	movff	powf@t+3,___flmul@b+3
  7664  0035B6  EC47  F022         	call	___flmul	;wreg free
  7665  0035BA  C019  F00D         	movff	?___flmul,___fladd@a
  7666  0035BE  C01A  F00E         	movff	?___flmul+1,___fladd@a+1
  7667  0035C2  C01B  F00F         	movff	?___flmul+2,___fladd@a+2
  7668  0035C6  C01C  F010         	movff	?___flmul+3,___fladd@a+3
  7669  0035CA  ECE7  F01F         	call	___fladd	;wreg free
  7670  0035CE  C009  F178         	movff	?___fladd,powf@v
  7671  0035D2  C00A  F179         	movff	?___fladd+1,powf@v+1
  7672  0035D6  C00B  F17A         	movff	?___fladd+2,powf@v+2
  7673  0035DA  C00C  F17B         	movff	?___fladd+3,powf@v+3
  7674  0035DE  C174  F009         	movff	powf@u,___fladd@b
  7675  0035E2  C175  F00A         	movff	powf@u+1,___fladd@b+1
  7676  0035E6  C176  F00B         	movff	powf@u+2,___fladd@b+2
  7677  0035EA  C177  F00C         	movff	powf@u+3,___fladd@b+3
  7678  0035EE  C178  F00D         	movff	powf@v,___fladd@a
  7679  0035F2  C179  F00E         	movff	powf@v+1,___fladd@a+1
  7680  0035F6  C17A  F00F         	movff	powf@v+2,___fladd@a+2
  7681  0035FA  C17B  F010         	movff	powf@v+3,___fladd@a+3
  7682  0035FE  ECE7  F01F         	call	___fladd	;wreg free
  7683  003602  C009  F1B4         	movff	?___fladd,powf@z
  7684  003606  C00A  F1B5         	movff	?___fladd+1,powf@z+1
  7685  00360A  C00B  F1B6         	movff	?___fladd+2,powf@z+2
  7686  00360E  C00C  F1B7         	movff	?___fladd+3,powf@z+3
  7687  003612  C174  F036         	movff	powf@u,___flsub@a
  7688  003616  C175  F037         	movff	powf@u+1,___flsub@a+1
  7689  00361A  C176  F038         	movff	powf@u+2,___flsub@a+2
  7690  00361E  C177  F039         	movff	powf@u+3,___flsub@a+3
  7691  003622  C1B4  F032         	movff	powf@z,___flsub@b
  7692  003626  C1B5  F033         	movff	powf@z+1,___flsub@b+1
  7693  00362A  C1B6  F034         	movff	powf@z+2,___flsub@b+2
  7694  00362E  C1B7  F035         	movff	powf@z+3,___flsub@b+3
  7695  003632  EC88  F032         	call	___flsub	;wreg free
  7696  003636  C032  F198         	movff	?___flsub,_powf$1778
  7697  00363A  C033  F199         	movff	?___flsub+1,_powf$1778+1
  7698  00363E  C034  F19A         	movff	?___flsub+2,_powf$1778+2
  7699  003642  C035  F19B         	movff	?___flsub+3,_powf$1778+3
  7700  003646  C178  F032         	movff	powf@v,___flsub@b
  7701  00364A  C179  F033         	movff	powf@v+1,___flsub@b+1
  7702  00364E  C17A  F034         	movff	powf@v+2,___flsub@b+2
  7703  003652  C17B  F035         	movff	powf@v+3,___flsub@b+3
  7704  003656  C198  F036         	movff	_powf$1778,___flsub@a
  7705  00365A  C199  F037         	movff	_powf$1778+1,___flsub@a+1
  7706  00365E  C19A  F038         	movff	_powf$1778+2,___flsub@a+2
  7707  003662  C19B  F039         	movff	_powf$1778+3,___flsub@a+3
  7708  003666  EC88  F032         	call	___flsub	;wreg free
  7709  00366A  C032  F144         	movff	?___flsub,powf@w
  7710  00366E  C033  F145         	movff	?___flsub+1,powf@w+1
  7711  003672  C034  F146         	movff	?___flsub+2,powf@w+2
  7712  003676  C035  F147         	movff	?___flsub+3,powf@w+3
  7713  00367A  C1B4  F019         	movff	powf@z,___flmul@b
  7714  00367E  C1B5  F01A         	movff	powf@z+1,___flmul@b+1
  7715  003682  C1B6  F01B         	movff	powf@z+2,___flmul@b+2
  7716  003686  C1B7  F01C         	movff	powf@z+3,___flmul@b+3
  7717  00368A  C1B4  F01D         	movff	powf@z,___flmul@a
  7718  00368E  C1B5  F01E         	movff	powf@z+1,___flmul@a+1
  7719  003692  C1B6  F01F         	movff	powf@z+2,___flmul@a+2
  7720  003696  C1B7  F020         	movff	powf@z+3,___flmul@a+3
  7721  00369A  EC47  F022         	call	___flmul	;wreg free
  7722  00369E  C019  F1B0         	movff	?___flmul,powf@t
  7723  0036A2  C01A  F1B1         	movff	?___flmul+1,powf@t+1
  7724  0036A6  C01B  F1B2         	movff	?___flmul+2,powf@t+2
  7725  0036AA  C01C  F1B3         	movff	?___flmul+3,powf@t+3
  7726  0036AE  0E0E               	movlw	14
  7727  0036B0  6E0D               	movwf	___fladd@a^0,c
  7728  0036B2  0EEA               	movlw	234
  7729  0036B4  6E0E               	movwf	(___fladd@a+1)^0,c
  7730  0036B6  0EDD               	movlw	221
  7731  0036B8  6E0F               	movwf	(___fladd@a+2)^0,c
  7732  0036BA  0EB5               	movlw	181
  7733  0036BC  6E10               	movwf	(___fladd@a+3)^0,c
  7734  0036BE  0E4C               	movlw	76
  7735  0036C0  6E1D               	movwf	___flmul@a^0,c
  7736  0036C2  0EBB               	movlw	187
  7737  0036C4  6E1E               	movwf	(___flmul@a+1)^0,c
  7738  0036C6  0E31               	movlw	49
  7739  0036C8  6E1F               	movwf	(___flmul@a+2)^0,c
  7740  0036CA  0E33               	movlw	51
  7741  0036CC  6E20               	movwf	(___flmul@a+3)^0,c
  7742  0036CE  C1B0  F019         	movff	powf@t,___flmul@b
  7743  0036D2  C1B1  F01A         	movff	powf@t+1,___flmul@b+1
  7744  0036D6  C1B2  F01B         	movff	powf@t+2,___flmul@b+2
  7745  0036DA  C1B3  F01C         	movff	powf@t+3,___flmul@b+3
  7746  0036DE  EC47  F022         	call	___flmul	;wreg free
  7747  0036E2  C019  F009         	movff	?___flmul,___fladd@b
  7748  0036E6  C01A  F00A         	movff	?___flmul+1,___fladd@b+1
  7749  0036EA  C01B  F00B         	movff	?___flmul+2,___fladd@b+2
  7750  0036EE  C01C  F00C         	movff	?___flmul+3,___fladd@b+3
  7751  0036F2  ECE7  F01F         	call	___fladd	;wreg free
  7752  0036F6  C009  F1A4         	movff	?___fladd,_powf$1775
  7753  0036FA  C00A  F1A5         	movff	?___fladd+1,_powf$1775+1
  7754  0036FE  C00B  F1A6         	movff	?___fladd+2,_powf$1775+2
  7755  003702  C00C  F1A7         	movff	?___fladd+3,_powf$1775+3
  7756  003706  0E55               	movlw	85
  7757  003708  6E0D               	movwf	___fladd@a^0,c
  7758  00370A  0EB3               	movlw	179
  7759  00370C  6E0E               	movwf	(___fladd@a+1)^0,c
  7760  00370E  0E8A               	movlw	138
  7761  003710  6E0F               	movwf	(___fladd@a+2)^0,c
  7762  003712  0E38               	movlw	56
  7763  003714  6E10               	movwf	(___fladd@a+3)^0,c
  7764  003716  C1B0  F01D         	movff	powf@t,___flmul@a
  7765  00371A  C1B1  F01E         	movff	powf@t+1,___flmul@a+1
  7766  00371E  C1B2  F01F         	movff	powf@t+2,___flmul@a+2
  7767  003722  C1B3  F020         	movff	powf@t+3,___flmul@a+3
  7768  003726  C1A4  F019         	movff	_powf$1775,___flmul@b
  7769  00372A  C1A5  F01A         	movff	_powf$1775+1,___flmul@b+1
  7770  00372E  C1A6  F01B         	movff	_powf$1775+2,___flmul@b+2
  7771  003732  C1A7  F01C         	movff	_powf$1775+3,___flmul@b+3
  7772  003736  EC47  F022         	call	___flmul	;wreg free
  7773  00373A  C019  F009         	movff	?___flmul,___fladd@b
  7774  00373E  C01A  F00A         	movff	?___flmul+1,___fladd@b+1
  7775  003742  C01B  F00B         	movff	?___flmul+2,___fladd@b+2
  7776  003746  C01C  F00C         	movff	?___flmul+3,___fladd@b+3
  7777  00374A  ECE7  F01F         	call	___fladd	;wreg free
  7778  00374E  C009  F154         	movff	?___fladd,_powf$1776
  7779  003752  C00A  F155         	movff	?___fladd+1,_powf$1776+1
  7780  003756  C00B  F156         	movff	?___fladd+2,_powf$1776+2
  7781  00375A  C00C  F157         	movff	?___fladd+3,_powf$1776+3
  7782  00375E  0E61               	movlw	97
  7783  003760  6E0D               	movwf	___fladd@a^0,c
  7784  003762  0E0B               	movlw	11
  7785  003764  6E0E               	movwf	(___fladd@a+1)^0,c
  7786  003766  0E36               	movlw	54
  7787  003768  6E0F               	movwf	(___fladd@a+2)^0,c
  7788  00376A  0EBB               	movlw	187
  7789  00376C  6E10               	movwf	(___fladd@a+3)^0,c
  7790  00376E  C1B0  F01D         	movff	powf@t,___flmul@a
  7791  003772  C1B1  F01E         	movff	powf@t+1,___flmul@a+1
  7792  003776  C1B2  F01F         	movff	powf@t+2,___flmul@a+2
  7793  00377A  C1B3  F020         	movff	powf@t+3,___flmul@a+3
  7794  00377E  C154  F019         	movff	_powf$1776,___flmul@b
  7795  003782  C155  F01A         	movff	_powf$1776+1,___flmul@b+1
  7796  003786  C156  F01B         	movff	_powf$1776+2,___flmul@b+2
  7797  00378A  C157  F01C         	movff	_powf$1776+3,___flmul@b+3
  7798  00378E  EC47  F022         	call	___flmul	;wreg free
  7799  003792  C019  F009         	movff	?___flmul,___fladd@b
  7800  003796  C01A  F00A         	movff	?___flmul+1,___fladd@b+1
  7801  00379A  C01B  F00B         	movff	?___flmul+2,___fladd@b+2
  7802  00379E  C01C  F00C         	movff	?___flmul+3,___fladd@b+3
  7803  0037A2  ECE7  F01F         	call	___fladd	;wreg free
  7804  0037A6  C009  F148         	movff	?___fladd,_powf$1777
  7805  0037AA  C00A  F149         	movff	?___fladd+1,_powf$1777+1
  7806  0037AE  C00B  F14A         	movff	?___fladd+2,_powf$1777+2
  7807  0037B2  C00C  F14B         	movff	?___fladd+3,_powf$1777+3
  7808  0037B6  0EAB               	movlw	171
  7809  0037B8  6E0D               	movwf	___fladd@a^0,c
  7810  0037BA  0EAA               	movlw	170
  7811  0037BC  6E0E               	movwf	(___fladd@a+1)^0,c
  7812  0037BE  0E2A               	movlw	42
  7813  0037C0  6E0F               	movwf	(___fladd@a+2)^0,c
  7814  0037C2  0E3E               	movlw	62
  7815  0037C4  6E10               	movwf	(___fladd@a+3)^0,c
  7816  0037C6  C1B0  F01D         	movff	powf@t,___flmul@a
  7817  0037CA  C1B1  F01E         	movff	powf@t+1,___flmul@a+1
  7818  0037CE  C1B2  F01F         	movff	powf@t+2,___flmul@a+2
  7819  0037D2  C1B3  F020         	movff	powf@t+3,___flmul@a+3
  7820  0037D6  C148  F019         	movff	_powf$1777,___flmul@b
  7821  0037DA  C149  F01A         	movff	_powf$1777+1,___flmul@b+1
  7822  0037DE  C14A  F01B         	movff	_powf$1777+2,___flmul@b+2
  7823  0037E2  C14B  F01C         	movff	_powf$1777+3,___flmul@b+3
  7824  0037E6  EC47  F022         	call	___flmul	;wreg free
  7825  0037EA  C019  F009         	movff	?___flmul,___fladd@b
  7826  0037EE  C01A  F00A         	movff	?___flmul+1,___fladd@b+1
  7827  0037F2  C01B  F00B         	movff	?___flmul+2,___fladd@b+2
  7828  0037F6  C01C  F00C         	movff	?___flmul+3,___fladd@b+3
  7829  0037FA  ECE7  F01F         	call	___fladd	;wreg free
  7830  0037FE  C009  F138         	movff	?___fladd,_powf$1779
  7831  003802  C00A  F139         	movff	?___fladd+1,_powf$1779+1
  7832  003806  C00B  F13A         	movff	?___fladd+2,_powf$1779+2
  7833  00380A  C00C  F13B         	movff	?___fladd+3,_powf$1779+3
  7834  00380E  C1B4  F032         	movff	powf@z,___flsub@b
  7835  003812  C1B5  F033         	movff	powf@z+1,___flsub@b+1
  7836  003816  C1B6  F034         	movff	powf@z+2,___flsub@b+2
  7837  00381A  C1B7  F035         	movff	powf@z+3,___flsub@b+3
  7838  00381E  C1B0  F01D         	movff	powf@t,___flmul@a
  7839  003822  C1B1  F01E         	movff	powf@t+1,___flmul@a+1
  7840  003826  C1B2  F01F         	movff	powf@t+2,___flmul@a+2
  7841  00382A  C1B3  F020         	movff	powf@t+3,___flmul@a+3
  7842  00382E  C138  F019         	movff	_powf$1779,___flmul@b
  7843  003832  C139  F01A         	movff	_powf$1779+1,___flmul@b+1
  7844  003836  C13A  F01B         	movff	_powf$1779+2,___flmul@b+2
  7845  00383A  C13B  F01C         	movff	_powf$1779+3,___flmul@b+3
  7846  00383E  EC47  F022         	call	___flmul	;wreg free
  7847  003842  C019  F036         	movff	?___flmul,___flsub@a
  7848  003846  C01A  F037         	movff	?___flmul+1,___flsub@a+1
  7849  00384A  C01B  F038         	movff	?___flmul+2,___flsub@a+2
  7850  00384E  C01C  F039         	movff	?___flmul+3,___flsub@a+3
  7851  003852  EC88  F032         	call	___flsub	;wreg free
  7852  003856  C032  F184         	movff	?___flsub,powf@t1
  7853  00385A  C033  F185         	movff	?___flsub+1,powf@t1+1
  7854  00385E  C034  F186         	movff	?___flsub+2,powf@t1+2
  7855  003862  C035  F187         	movff	?___flsub+3,powf@t1+3
  7856  003866  0E00               	movlw	0
  7857  003868  6E0D               	movwf	___fladd@a^0,c
  7858  00386A  0E00               	movlw	0
  7859  00386C  6E0E               	movwf	(___fladd@a+1)^0,c
  7860  00386E  0E00               	movlw	0
  7861  003870  6E0F               	movwf	(___fladd@a+2)^0,c
  7862  003872  0EC0               	movlw	192
  7863  003874  6E10               	movwf	(___fladd@a+3)^0,c
  7864  003876  C184  F009         	movff	powf@t1,___fladd@b
  7865  00387A  C185  F00A         	movff	powf@t1+1,___fladd@b+1
  7866  00387E  C186  F00B         	movff	powf@t1+2,___fladd@b+2
  7867  003882  C187  F00C         	movff	powf@t1+3,___fladd@b+3
  7868  003886  ECE7  F01F         	call	___fladd	;wreg free
  7869  00388A  C009  F03E         	movff	?___fladd,___fldiv@a
  7870  00388E  C00A  F03F         	movff	?___fladd+1,___fldiv@a+1
  7871  003892  C00B  F040         	movff	?___fladd+2,___fldiv@a+2
  7872  003896  C00C  F041         	movff	?___fladd+3,___fldiv@a+3
  7873  00389A  C184  F01D         	movff	powf@t1,___flmul@a
  7874  00389E  C185  F01E         	movff	powf@t1+1,___flmul@a+1
  7875  0038A2  C186  F01F         	movff	powf@t1+2,___flmul@a+2
  7876  0038A6  C187  F020         	movff	powf@t1+3,___flmul@a+3
  7877  0038AA  C1B4  F019         	movff	powf@z,___flmul@b
  7878  0038AE  C1B5  F01A         	movff	powf@z+1,___flmul@b+1
  7879  0038B2  C1B6  F01B         	movff	powf@z+2,___flmul@b+2
  7880  0038B6  C1B7  F01C         	movff	powf@z+3,___flmul@b+3
  7881  0038BA  EC47  F022         	call	___flmul	;wreg free
  7882  0038BE  C019  F03A         	movff	?___flmul,___fldiv@b
  7883  0038C2  C01A  F03B         	movff	?___flmul+1,___fldiv@b+1
  7884  0038C6  C01B  F03C         	movff	?___flmul+2,___fldiv@b+2
  7885  0038CA  C01C  F03D         	movff	?___flmul+3,___fldiv@b+3
  7886  0038CE  EC5C  F024         	call	___fldiv	;wreg free
  7887  0038D2  C03A  F13C         	movff	?___fldiv,_powf$1783
  7888  0038D6  C03B  F13D         	movff	?___fldiv+1,_powf$1783+1
  7889  0038DA  C03C  F13E         	movff	?___fldiv+2,_powf$1783+2
  7890  0038DE  C03D  F13F         	movff	?___fldiv+3,_powf$1783+3
  7891  0038E2  C144  F00D         	movff	powf@w,___fladd@a
  7892  0038E6  C145  F00E         	movff	powf@w+1,___fladd@a+1
  7893  0038EA  C146  F00F         	movff	powf@w+2,___fladd@a+2
  7894  0038EE  C147  F010         	movff	powf@w+3,___fladd@a+3
  7895  0038F2  C144  F01D         	movff	powf@w,___flmul@a
  7896  0038F6  C145  F01E         	movff	powf@w+1,___flmul@a+1
  7897  0038FA  C146  F01F         	movff	powf@w+2,___flmul@a+2
  7898  0038FE  C147  F020         	movff	powf@w+3,___flmul@a+3
  7899  003902  C1B4  F019         	movff	powf@z,___flmul@b
  7900  003906  C1B5  F01A         	movff	powf@z+1,___flmul@b+1
  7901  00390A  C1B6  F01B         	movff	powf@z+2,___flmul@b+2
  7902  00390E  C1B7  F01C         	movff	powf@z+3,___flmul@b+3
  7903  003912  EC47  F022         	call	___flmul	;wreg free
  7904  003916  C019  F009         	movff	?___flmul,___fladd@b
  7905  00391A  C01A  F00A         	movff	?___flmul+1,___fladd@b+1
  7906  00391E  C01B  F00B         	movff	?___flmul+2,___fladd@b+2
  7907  003922  C01C  F00C         	movff	?___flmul+3,___fladd@b+3
  7908  003926  ECE7  F01F         	call	___fladd	;wreg free
  7909  00392A  C009  F118         	movff	?___fladd,_powf$1789
  7910  00392E  C00A  F119         	movff	?___fladd+1,_powf$1789+1
  7911  003932  C00B  F11A         	movff	?___fladd+2,_powf$1789+2
  7912  003936  C00C  F11B         	movff	?___fladd+3,_powf$1789+3
  7913  00393A  C13C  F032         	movff	_powf$1783,___flsub@b
  7914  00393E  C13D  F033         	movff	_powf$1783+1,___flsub@b+1
  7915  003942  C13E  F034         	movff	_powf$1783+2,___flsub@b+2
  7916  003946  C13F  F035         	movff	_powf$1783+3,___flsub@b+3
  7917  00394A  C118  F036         	movff	_powf$1789,___flsub@a
  7918  00394E  C119  F037         	movff	_powf$1789+1,___flsub@a+1
  7919  003952  C11A  F038         	movff	_powf$1789+2,___flsub@a+2
  7920  003956  C11B  F039         	movff	_powf$1789+3,___flsub@a+3
  7921  00395A  EC88  F032         	call	___flsub	;wreg free
  7922  00395E  C032  F14C         	movff	?___flsub,powf@r
  7923  003962  C033  F14D         	movff	?___flsub+1,powf@r+1
  7924  003966  C034  F14E         	movff	?___flsub+2,powf@r+2
  7925  00396A  C035  F14F         	movff	?___flsub+3,powf@r+3
  7926  00396E  C1B4  F036         	movff	powf@z,___flsub@a
  7927  003972  C1B5  F037         	movff	powf@z+1,___flsub@a+1
  7928  003976  C1B6  F038         	movff	powf@z+2,___flsub@a+2
  7929  00397A  C1B7  F039         	movff	powf@z+3,___flsub@a+3
  7930  00397E  C14C  F032         	movff	powf@r,___flsub@b
  7931  003982  C14D  F033         	movff	powf@r+1,___flsub@b+1
  7932  003986  C14E  F034         	movff	powf@r+2,___flsub@b+2
  7933  00398A  C14F  F035         	movff	powf@r+3,___flsub@b+3
  7934  00398E  EC88  F032         	call	___flsub	;wreg free
  7935  003992  C032  F198         	movff	?___flsub,_powf$1778
  7936  003996  C033  F199         	movff	?___flsub+1,_powf$1778+1
  7937  00399A  C034  F19A         	movff	?___flsub+2,_powf$1778+2
  7938  00399E  C035  F19B         	movff	?___flsub+3,_powf$1778+3
  7939  0039A2  0E00               	movlw	0
  7940  0039A4  6E32               	movwf	___flsub@b^0,c
  7941  0039A6  0E00               	movlw	0
  7942  0039A8  6E33               	movwf	(___flsub@b+1)^0,c
  7943  0039AA  0E80               	movlw	128
  7944  0039AC  6E34               	movwf	(___flsub@b+2)^0,c
  7945  0039AE  0E3F               	movlw	63
  7946  0039B0  6E35               	movwf	(___flsub@b+3)^0,c
  7947  0039B2  C198  F036         	movff	_powf$1778,___flsub@a
  7948  0039B6  C199  F037         	movff	_powf$1778+1,___flsub@a+1
  7949  0039BA  C19A  F038         	movff	_powf$1778+2,___flsub@a+2
  7950  0039BE  C19B  F039         	movff	_powf$1778+3,___flsub@a+3
  7951  0039C2  EC88  F032         	call	___flsub	;wreg free
  7952  0039C6  C032  F1B4         	movff	?___flsub,powf@z
  7953  0039CA  C033  F1B5         	movff	?___flsub+1,powf@z+1
  7954  0039CE  C034  F1B6         	movff	?___flsub+2,powf@z+2
  7955  0039D2  C035  F1B7         	movff	?___flsub+3,powf@z+3
  7956  0039D6  C1B4  F1B8         	movff	powf@z,powf@__xc8_float_word
  7957  0039DA  C1B5  F1B9         	movff	powf@z+1,powf@__xc8_float_word+1
  7958  0039DE  C1B6  F1BA         	movff	powf@z+2,powf@__xc8_float_word+2
  7959  0039E2  C1B7  F1BB         	movff	powf@z+3,powf@__xc8_float_word+3
  7960  0039E6  C1B8  F1AC         	movff	powf@__xc8_float_word,powf@j
  7961  0039EA  C1B9  F1AD         	movff	powf@__xc8_float_word+1,powf@j+1
  7962  0039EE  C1BA  F1AE         	movff	powf@__xc8_float_word+2,powf@j+2
  7963  0039F2  C1BB  F1AF         	movff	powf@__xc8_float_word+3,powf@j+3
  7964  0039F6  C180  F090         	movff	powf@n,??_powf
  7965  0039FA  C181  F091         	movff	powf@n+1,??_powf+1
  7966  0039FE  C182  F092         	movff	powf@n+2,??_powf+2
  7967  003A02  C183  F093         	movff	powf@n+3,??_powf+3
  7968  003A06  0E17               	movlw	23
  7969  003A08                     u5905:
  7970  003A08  90D8               	bcf	status,0,c
  7971  003A0A  0100               	movlb	0	; () banked
  7972  003A0C  3790               	rlcf	??_powf& (0+255),f,b
  7973  003A0E  3791               	rlcf	(??_powf+1)& (0+255),f,b
  7974  003A10  3792               	rlcf	(??_powf+2)& (0+255),f,b
  7975  003A12  3793               	rlcf	(??_powf+3)& (0+255),f,b
  7976  003A14  2EE8               	decfsz	wreg,f,c
  7977  003A16  EF04  F01D         	goto	u5905
  7978  003A1A  5190               	movf	??_powf& (0+255),w,b
  7979  003A1C  0101               	movlb	1	; () banked
  7980  003A1E  27AC               	addwf	powf@j& (0+255),f,b
  7981  003A20  0100               	movlb	0	; () banked
  7982  003A22  5191               	movf	(??_powf+1)& (0+255),w,b
  7983  003A24  0101               	movlb	1	; () banked
  7984  003A26  23AD               	addwfc	(powf@j+1)& (0+255),f,b
  7985  003A28  0100               	movlb	0	; () banked
  7986  003A2A  5192               	movf	(??_powf+2)& (0+255),w,b
  7987  003A2C  0101               	movlb	1	; () banked
  7988  003A2E  23AE               	addwfc	(powf@j+2)& (0+255),f,b
  7989  003A30  0100               	movlb	0	; () banked
  7990  003A32  5193               	movf	(??_powf+3)& (0+255),w,b
  7991  003A34  0101               	movlb	1	; () banked
  7992  003A36  23AF               	addwfc	(powf@j+3)& (0+255),f,b
  7993  003A38                     
  7994                           ; BSR set to: 1
  7995  003A38  0E17               	movlw	23
  7996  003A3A  0100               	movlb	0	; () banked
  7997  003A3C  6F90               	movwf	??_powf& (0+255),b
  7998  003A3E  C1AC  F091         	movff	powf@j,??_powf+1
  7999  003A42  C1AD  F092         	movff	powf@j+1,??_powf+2
  8000  003A46  C1AE  F093         	movff	powf@j+2,??_powf+3
  8001  003A4A  C1AF  F094         	movff	powf@j+3,??_powf+4
  8002  003A4E                     u5915:
  8003  003A4E  6790               	tstfsz	??_powf& (0+255),b
  8004  003A50  EF2C  F01D         	goto	u5916
  8005  003A54  EF34  F01D         	goto	u5917
  8006  003A58                     u5916:
  8007  003A58  3594               	rlcf	(??_powf+4)& (0+255),w,b
  8008  003A5A  3394               	rrcf	(??_powf+4)& (0+255),f,b
  8009  003A5C  3393               	rrcf	(??_powf+3)& (0+255),f,b
  8010  003A5E  3392               	rrcf	(??_powf+2)& (0+255),f,b
  8011  003A60  3391               	rrcf	(??_powf+1)& (0+255),f,b
  8012  003A62  2F90               	decfsz	??_powf& (0+255),f,b
  8013  003A64  EF27  F01D         	goto	u5915
  8014  003A68                     u5917:
  8015  003A68  0100               	movlb	0	; () banked
  8016  003A6A  BF94               	btfsc	(??_powf+4)& (0+255),7,b
  8017  003A6C  EF44  F01D         	goto	u5920
  8018  003A70  5194               	movf	(??_powf+4)& (0+255),w,b
  8019  003A72  1193               	iorwf	(??_powf+3)& (0+255),w,b
  8020  003A74  1192               	iorwf	(??_powf+2)& (0+255),w,b
  8021  003A76  E106               	bnz	u5921
  8022  003A78  0591               	decf	(??_powf+1)& (0+255),w,b
  8023  003A7A  B0D8               	btfsc	status,0,c
  8024  003A7C  EF42  F01D         	goto	u5921
  8025  003A80  EF44  F01D         	goto	u5920
  8026  003A84                     u5921:
  8027  003A84  EF5C  F01D         	goto	l1547
  8028  003A88                     u5920:
  8029  003A88                     
  8030                           ; BSR set to: 0
  8031  003A88  C1B4  F032         	movff	powf@z,scalbnf@x
  8032  003A8C  C1B5  F033         	movff	powf@z+1,scalbnf@x+1
  8033  003A90  C1B6  F034         	movff	powf@z+2,scalbnf@x+2
  8034  003A94  C1B7  F035         	movff	powf@z+3,scalbnf@x+3
  8035  003A98  C180  F036         	movff	powf@n,scalbnf@n
  8036  003A9C  C181  F037         	movff	powf@n+1,scalbnf@n+1
  8037  003AA0  EC9E  F028         	call	_scalbnf	;wreg free
  8038  003AA4  C032  F1B4         	movff	?_scalbnf,powf@z
  8039  003AA8  C033  F1B5         	movff	?_scalbnf+1,powf@z+1
  8040  003AAC  C034  F1B6         	movff	?_scalbnf+2,powf@z+2
  8041  003AB0  C035  F1B7         	movff	?_scalbnf+3,powf@z+3
  8042  003AB4  EF6C  F01D         	goto	l6272
  8043  003AB8                     l1547:
  8044                           
  8045                           ; BSR set to: 0
  8046  003AB8  C1AC  F1B8         	movff	powf@j,powf@__xc8_float_word
  8047  003ABC  C1AD  F1B9         	movff	powf@j+1,powf@__xc8_float_word+1
  8048  003AC0  C1AE  F1BA         	movff	powf@j+2,powf@__xc8_float_word+2
  8049  003AC4  C1AF  F1BB         	movff	powf@j+3,powf@__xc8_float_word+3
  8050  003AC8  C1B8  F1B4         	movff	powf@__xc8_float_word,powf@z
  8051  003ACC  C1B9  F1B5         	movff	powf@__xc8_float_word+1,powf@z+1
  8052  003AD0  C1BA  F1B6         	movff	powf@__xc8_float_word+2,powf@z+2
  8053  003AD4  C1BB  F1B7         	movff	powf@__xc8_float_word+3,powf@z+3
  8054  003AD8                     l6272:
  8055  003AD8  C188  F019         	movff	powf@sn,___flmul@b
  8056  003ADC  C189  F01A         	movff	powf@sn+1,___flmul@b+1
  8057  003AE0  C18A  F01B         	movff	powf@sn+2,___flmul@b+2
  8058  003AE4  C18B  F01C         	movff	powf@sn+3,___flmul@b+3
  8059  003AE8  C1B4  F01D         	movff	powf@z,___flmul@a
  8060  003AEC  C1B5  F01E         	movff	powf@z+1,___flmul@a+1
  8061  003AF0  C1B6  F01F         	movff	powf@z+2,___flmul@a+2
  8062  003AF4  C1B7  F020         	movff	powf@z+3,___flmul@a+3
  8063  003AF8  EC47  F022         	call	___flmul	;wreg free
  8064  003AFC  C019  F088         	movff	?___flmul,?_powf
  8065  003B00  C01A  F089         	movff	?___flmul+1,?_powf+1
  8066  003B04  C01B  F08A         	movff	?___flmul+2,?_powf+2
  8067  003B08  C01C  F08B         	movff	?___flmul+3,?_powf+3
  8068  003B0C                     l1435:
  8069  003B0C  0012               	return		;funcret
  8070  003B0E                     __end_of_powf:
  8071                           	opt callstack 0
  8072                           
  8073 ;; *************** function _sqrtf *****************
  8074 ;; Defined at:
  8075 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sqrtf.c"
  8076 ;; Parameters:    Size  Location     Type
  8077 ;;  x               4   69[COMRAM] float 
  8078 ;; Auto vars:     Size  Location     Type
  8079 ;;  ix              4   36[BANK0 ] long 
  8080 ;;  r               4   32[BANK0 ] unsigned long 
  8081 ;;  m               4   28[BANK0 ] long 
  8082 ;;  z               4   24[BANK0 ] float 
  8083 ;;  t               4   20[BANK0 ] long 
  8084 ;;  q               4   16[BANK0 ] long 
  8085 ;;  __xc8_float_    4   12[BANK0 ] struct .
  8086 ;;  i               4    8[BANK0 ] long 
  8087 ;;  s               4    4[BANK0 ] long 
  8088 ;;  sign            4    0        long 
  8089 ;; Return value:  Size  Location     Type
  8090 ;;                  4   69[COMRAM] float 
  8091 ;; Registers used:
  8092 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8093 ;; Tracked objects:
  8094 ;;		On entry : 0/0
  8095 ;;		On exit  : 0/0
  8096 ;;		Unchanged: 0/0
  8097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8098 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8099 ;;      Locals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8100 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8101 ;;      Totals:         9      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8102 ;;Total ram usage:       49 bytes
  8103 ;; Hardware stack levels used:    1
  8104 ;; Hardware stack levels required when called:    4
  8105 ;; This function calls:
  8106 ;;		___fladd
  8107 ;;		___flge
  8108 ;;		___flmul
  8109 ;;		_nanf
  8110 ;; This function is called by:
  8111 ;;		_powf
  8112 ;; This function uses a non-reentrant model
  8113 ;;
  8114                           
  8115                           	psect	text19
  8116  003B0E                     __ptext19:
  8117                           	opt callstack 0
  8118  003B0E                     _sqrtf:
  8119                           	opt callstack 22
  8120  003B0E  C046  F06C         	movff	sqrtf@x,sqrtf@__xc8_float_word
  8121  003B12  C047  F06D         	movff	sqrtf@x+1,sqrtf@__xc8_float_word+1
  8122  003B16  C048  F06E         	movff	sqrtf@x+2,sqrtf@__xc8_float_word+2
  8123  003B1A  C049  F06F         	movff	sqrtf@x+3,sqrtf@__xc8_float_word+3
  8124  003B1E  C06C  F084         	movff	sqrtf@__xc8_float_word,sqrtf@ix
  8125  003B22  C06D  F085         	movff	sqrtf@__xc8_float_word+1,sqrtf@ix+1
  8126  003B26  C06E  F086         	movff	sqrtf@__xc8_float_word+2,sqrtf@ix+2
  8127  003B2A  C06F  F087         	movff	sqrtf@__xc8_float_word+3,sqrtf@ix+3
  8128  003B2E  0E00               	movlw	0
  8129  003B30  0100               	movlb	0	; () banked
  8130  003B32  1584               	andwf	sqrtf@ix& (0+255),w,b
  8131  003B34  6E4A               	movwf	??_sqrtf^0,c
  8132  003B36  0E00               	movlw	0
  8133  003B38  1585               	andwf	(sqrtf@ix+1)& (0+255),w,b
  8134  003B3A  6E4B               	movwf	(??_sqrtf+1)^0,c
  8135  003B3C  0E80               	movlw	128
  8136  003B3E  1586               	andwf	(sqrtf@ix+2)& (0+255),w,b
  8137  003B40  6E4C               	movwf	(??_sqrtf+2)^0,c
  8138  003B42  0E7F               	movlw	127
  8139  003B44  1587               	andwf	(sqrtf@ix+3)& (0+255),w,b
  8140  003B46  6E4D               	movwf	(??_sqrtf+3)^0,c
  8141  003B48  0E80               	movlw	128
  8142  003B4A  184C               	xorwf	(??_sqrtf+2)^0,w,c
  8143  003B4C  E109               	bnz	u3571
  8144  003B4E  0E7F               	movlw	127
  8145  003B50  184D               	xorwf	(??_sqrtf+3)^0,w,c
  8146  003B52  104A               	iorwf	??_sqrtf^0,w,c
  8147  003B54  104B               	iorwf	(??_sqrtf+1)^0,w,c
  8148  003B56  A4D8               	btfss	status,2,c
  8149  003B58  EFB0  F01D         	goto	u3571
  8150  003B5C  EFB2  F01D         	goto	u3570
  8151  003B60                     u3571:
  8152  003B60  EFE0  F01D         	goto	l4304
  8153  003B64                     u3570:
  8154  003B64                     
  8155                           ; BSR set to: 0
  8156  003B64  C046  F01D         	movff	sqrtf@x,___flmul@a
  8157  003B68  C047  F01E         	movff	sqrtf@x+1,___flmul@a+1
  8158  003B6C  C048  F01F         	movff	sqrtf@x+2,___flmul@a+2
  8159  003B70  C049  F020         	movff	sqrtf@x+3,___flmul@a+3
  8160  003B74  C046  F019         	movff	sqrtf@x,___flmul@b
  8161  003B78  C047  F01A         	movff	sqrtf@x+1,___flmul@b+1
  8162  003B7C  C048  F01B         	movff	sqrtf@x+2,___flmul@b+2
  8163  003B80  C049  F01C         	movff	sqrtf@x+3,___flmul@b+3
  8164  003B84  EC47  F022         	call	___flmul	;wreg free
  8165  003B88  C019  F009         	movff	?___flmul,___fladd@b
  8166  003B8C  C01A  F00A         	movff	?___flmul+1,___fladd@b+1
  8167  003B90  C01B  F00B         	movff	?___flmul+2,___fladd@b+2
  8168  003B94  C01C  F00C         	movff	?___flmul+3,___fladd@b+3
  8169  003B98  C046  F00D         	movff	sqrtf@x,___fladd@a
  8170  003B9C  C047  F00E         	movff	sqrtf@x+1,___fladd@a+1
  8171  003BA0  C048  F00F         	movff	sqrtf@x+2,___fladd@a+2
  8172  003BA4  C049  F010         	movff	sqrtf@x+3,___fladd@a+3
  8173  003BA8  ECE7  F01F         	call	___fladd	;wreg free
  8174  003BAC  C009  F046         	movff	?___fladd,?_sqrtf
  8175  003BB0  C00A  F047         	movff	?___fladd+1,?_sqrtf+1
  8176  003BB4  C00B  F048         	movff	?___fladd+2,?_sqrtf+2
  8177  003BB8  C00C  F049         	movff	?___fladd+3,?_sqrtf+3
  8178  003BBC  EFE6  F01F         	goto	l1570
  8179  003BC0                     l4304:
  8180                           
  8181                           ; BSR set to: 0
  8182  003BC0  BF87               	btfsc	(sqrtf@ix+3)& (0+255),7,b
  8183  003BC2  EFEF  F01D         	goto	u3580
  8184  003BC6  5187               	movf	(sqrtf@ix+3)& (0+255),w,b
  8185  003BC8  1186               	iorwf	(sqrtf@ix+2)& (0+255),w,b
  8186  003BCA  1185               	iorwf	(sqrtf@ix+1)& (0+255),w,b
  8187  003BCC  E106               	bnz	u3581
  8188  003BCE  0584               	decf	sqrtf@ix& (0+255),w,b
  8189  003BD0  B0D8               	btfsc	status,0,c
  8190  003BD2  EFED  F01D         	goto	u3581
  8191  003BD6  EFEF  F01D         	goto	u3580
  8192  003BDA                     u3581:
  8193  003BDA  EF2B  F01E         	goto	l4318
  8194  003BDE                     u3580:
  8195  003BDE                     
  8196                           ; BSR set to: 0
  8197  003BDE  0EFF               	movlw	255
  8198  003BE0  1584               	andwf	sqrtf@ix& (0+255),w,b
  8199  003BE2  6E4A               	movwf	??_sqrtf^0,c
  8200  003BE4  0EFF               	movlw	255
  8201  003BE6  1585               	andwf	(sqrtf@ix+1)& (0+255),w,b
  8202  003BE8  6E4B               	movwf	(??_sqrtf+1)^0,c
  8203  003BEA  0EFF               	movlw	255
  8204  003BEC  1586               	andwf	(sqrtf@ix+2)& (0+255),w,b
  8205  003BEE  6E4C               	movwf	(??_sqrtf+2)^0,c
  8206  003BF0  0E7F               	movlw	127
  8207  003BF2  1587               	andwf	(sqrtf@ix+3)& (0+255),w,b
  8208  003BF4  6E4D               	movwf	(??_sqrtf+3)^0,c
  8209  003BF6  504A               	movf	??_sqrtf^0,w,c
  8210  003BF8  104B               	iorwf	(??_sqrtf+1)^0,w,c
  8211  003BFA  104C               	iorwf	(??_sqrtf+2)^0,w,c
  8212  003BFC  104D               	iorwf	(??_sqrtf+3)^0,w,c
  8213  003BFE  A4D8               	btfss	status,2,c
  8214  003C00  EF04  F01E         	goto	u3591
  8215  003C04  EF06  F01E         	goto	u3590
  8216  003C08                     u3591:
  8217  003C08  EF10  F01E         	goto	l4310
  8218  003C0C                     u3590:
  8219  003C0C                     
  8220                           ; BSR set to: 0
  8221  003C0C  C046  F046         	movff	sqrtf@x,?_sqrtf
  8222  003C10  C047  F047         	movff	sqrtf@x+1,?_sqrtf+1
  8223  003C14  C048  F048         	movff	sqrtf@x+2,?_sqrtf+2
  8224  003C18  C049  F049         	movff	sqrtf@x+3,?_sqrtf+3
  8225  003C1C  EFE6  F01F         	goto	l1570
  8226  003C20                     l4310:
  8227                           
  8228                           ; BSR set to: 0
  8229  003C20  BF87               	btfsc	(sqrtf@ix+3)& (0+255),7,b
  8230  003C22  EF17  F01E         	goto	u3600
  8231  003C26  EF15  F01E         	goto	u3601
  8232  003C2A                     u3601:
  8233  003C2A  EF2B  F01E         	goto	l4318
  8234  003C2E                     u3600:
  8235  003C2E                     
  8236                           ; BSR set to: 0
  8237  003C2E  0E00               	movlw	0
  8238  003C30  6FB4               	movwf	(_errno+1)& (0+255),b
  8239  003C32  0E21               	movlw	33
  8240  003C34  6FB3               	movwf	_errno& (0+255),b
  8241  003C36                     
  8242                           ; BSR set to: 0
  8243  003C36  0EDA               	movlw	low (STR_10+8)
  8244  003C38  6E09               	movwf	nanf@s^0,c
  8245  003C3A  0E10               	movlw	high (STR_10+8)
  8246  003C3C  6E0A               	movwf	(nanf@s+1)^0,c
  8247  003C3E  EC6F  F033         	call	_nanf	;wreg free
  8248  003C42  C009  F046         	movff	?_nanf,?_sqrtf
  8249  003C46  C00A  F047         	movff	?_nanf+1,?_sqrtf+1
  8250  003C4A  C00B  F048         	movff	?_nanf+2,?_sqrtf+2
  8251  003C4E  C00C  F049         	movff	?_nanf+3,?_sqrtf+3
  8252  003C52  EFE6  F01F         	goto	l1570
  8253  003C56                     l4318:
  8254                           
  8255                           ; BSR set to: 0
  8256  003C56  0E17               	movlw	23
  8257  003C58  6E4A               	movwf	??_sqrtf^0,c
  8258  003C5A  C084  F04B         	movff	sqrtf@ix,??_sqrtf+1
  8259  003C5E  C085  F04C         	movff	sqrtf@ix+1,??_sqrtf+2
  8260  003C62  C086  F04D         	movff	sqrtf@ix+2,??_sqrtf+3
  8261  003C66  C087  F04E         	movff	sqrtf@ix+3,??_sqrtf+4
  8262  003C6A                     u3615:
  8263  003C6A  664A               	tstfsz	??_sqrtf^0,c
  8264  003C6C  EF3A  F01E         	goto	u3616
  8265  003C70  EF42  F01E         	goto	u3617
  8266  003C74                     u3616:
  8267  003C74  344E               	rlcf	(??_sqrtf+4)^0,w,c
  8268  003C76  324E               	rrcf	(??_sqrtf+4)^0,f,c
  8269  003C78  324D               	rrcf	(??_sqrtf+3)^0,f,c
  8270  003C7A  324C               	rrcf	(??_sqrtf+2)^0,f,c
  8271  003C7C  324B               	rrcf	(??_sqrtf+1)^0,f,c
  8272  003C7E  2E4A               	decfsz	??_sqrtf^0,f,c
  8273  003C80  EF35  F01E         	goto	u3615
  8274  003C84                     u3617:
  8275  003C84  C04B  F07C         	movff	??_sqrtf+1,sqrtf@m
  8276  003C88  C04C  F07D         	movff	??_sqrtf+2,sqrtf@m+1
  8277  003C8C  C04D  F07E         	movff	??_sqrtf+3,sqrtf@m+2
  8278  003C90  C04E  F07F         	movff	??_sqrtf+4,sqrtf@m+3
  8279  003C94  0100               	movlb	0	; () banked
  8280  003C96  517C               	movf	sqrtf@m& (0+255),w,b
  8281  003C98  117D               	iorwf	(sqrtf@m+1)& (0+255),w,b
  8282  003C9A  117E               	iorwf	(sqrtf@m+2)& (0+255),w,b
  8283  003C9C  117F               	iorwf	(sqrtf@m+3)& (0+255),w,b
  8284  003C9E  A4D8               	btfss	status,2,c
  8285  003CA0  EF54  F01E         	goto	u3621
  8286  003CA4  EF56  F01E         	goto	u3620
  8287  003CA8                     u3621:
  8288  003CA8  EF86  F01E         	goto	l1574
  8289  003CAC                     u3620:
  8290  003CAC                     
  8291                           ; BSR set to: 0
  8292  003CAC  0E00               	movlw	0
  8293  003CAE  6F68               	movwf	sqrtf@i& (0+255),b
  8294  003CB0  0E00               	movlw	0
  8295  003CB2  6F69               	movwf	(sqrtf@i+1)& (0+255),b
  8296  003CB4  0E00               	movlw	0
  8297  003CB6  6F6A               	movwf	(sqrtf@i+2)& (0+255),b
  8298  003CB8  0E00               	movlw	0
  8299  003CBA  6F6B               	movwf	(sqrtf@i+3)& (0+255),b
  8300  003CBC  EF6B  F01E         	goto	l4326
  8301  003CC0                     l4322:
  8302                           
  8303                           ; BSR set to: 0
  8304  003CC0  90D8               	bcf	status,0,c
  8305  003CC2  3784               	rlcf	sqrtf@ix& (0+255),f,b
  8306  003CC4  3785               	rlcf	(sqrtf@ix+1)& (0+255),f,b
  8307  003CC6  3786               	rlcf	(sqrtf@ix+2)& (0+255),f,b
  8308  003CC8  3787               	rlcf	(sqrtf@ix+3)& (0+255),f,b
  8309  003CCA                     
  8310                           ; BSR set to: 0
  8311  003CCA  0E01               	movlw	1
  8312  003CCC  2768               	addwf	sqrtf@i& (0+255),f,b
  8313  003CCE  0E00               	movlw	0
  8314  003CD0  2369               	addwfc	(sqrtf@i+1)& (0+255),f,b
  8315  003CD2  236A               	addwfc	(sqrtf@i+2)& (0+255),f,b
  8316  003CD4  236B               	addwfc	(sqrtf@i+3)& (0+255),f,b
  8317  003CD6                     l4326:
  8318                           
  8319                           ; BSR set to: 0
  8320  003CD6  AF86               	btfss	(sqrtf@ix+2)& (0+255),7,b
  8321  003CD8  EF70  F01E         	goto	u3631
  8322  003CDC  EF72  F01E         	goto	u3630
  8323  003CE0                     u3631:
  8324  003CE0  EF60  F01E         	goto	l4322
  8325  003CE4                     u3630:
  8326  003CE4                     
  8327                           ; BSR set to: 0
  8328  003CE4  0EFF               	movlw	255
  8329  003CE6  2568               	addwf	sqrtf@i& (0+255),w,b
  8330  003CE8  6E4A               	movwf	??_sqrtf^0,c
  8331  003CEA  0EFF               	movlw	255
  8332  003CEC  2169               	addwfc	(sqrtf@i+1)& (0+255),w,b
  8333  003CEE  6E4B               	movwf	(??_sqrtf+1)^0,c
  8334  003CF0  0EFF               	movlw	255
  8335  003CF2  216A               	addwfc	(sqrtf@i+2)& (0+255),w,b
  8336  003CF4  6E4C               	movwf	(??_sqrtf+2)^0,c
  8337  003CF6  0EFF               	movlw	255
  8338  003CF8  216B               	addwfc	(sqrtf@i+3)& (0+255),w,b
  8339  003CFA  6E4D               	movwf	(??_sqrtf+3)^0,c
  8340  003CFC  504A               	movf	??_sqrtf^0,w,c
  8341  003CFE  5F7C               	subwf	sqrtf@m& (0+255),f,b
  8342  003D00  504B               	movf	(??_sqrtf+1)^0,w,c
  8343  003D02  5B7D               	subwfb	(sqrtf@m+1)& (0+255),f,b
  8344  003D04  504C               	movf	(??_sqrtf+2)^0,w,c
  8345  003D06  5B7E               	subwfb	(sqrtf@m+2)& (0+255),f,b
  8346  003D08  504D               	movf	(??_sqrtf+3)^0,w,c
  8347  003D0A  5B7F               	subwfb	(sqrtf@m+3)& (0+255),f,b
  8348  003D0C                     l1574:
  8349                           
  8350                           ; BSR set to: 0
  8351  003D0C  0E81               	movlw	129
  8352  003D0E  277C               	addwf	sqrtf@m& (0+255),f,b
  8353  003D10  0EFF               	movlw	255
  8354  003D12  237D               	addwfc	(sqrtf@m+1)& (0+255),f,b
  8355  003D14  0EFF               	movlw	255
  8356  003D16  237E               	addwfc	(sqrtf@m+2)& (0+255),f,b
  8357  003D18  0EFF               	movlw	255
  8358  003D1A  237F               	addwfc	(sqrtf@m+3)& (0+255),f,b
  8359  003D1C  0EFF               	movlw	255
  8360  003D1E  1584               	andwf	sqrtf@ix& (0+255),w,b
  8361  003D20  6E4A               	movwf	??_sqrtf^0,c
  8362  003D22  0EFF               	movlw	255
  8363  003D24  1585               	andwf	(sqrtf@ix+1)& (0+255),w,b
  8364  003D26  6E4B               	movwf	(??_sqrtf+1)^0,c
  8365  003D28  0E7F               	movlw	127
  8366  003D2A  1586               	andwf	(sqrtf@ix+2)& (0+255),w,b
  8367  003D2C  6E4C               	movwf	(??_sqrtf+2)^0,c
  8368  003D2E  0E00               	movlw	0
  8369  003D30  1587               	andwf	(sqrtf@ix+3)& (0+255),w,b
  8370  003D32  6E4D               	movwf	(??_sqrtf+3)^0,c
  8371  003D34  0E00               	movlw	0
  8372  003D36  104A               	iorwf	??_sqrtf^0,w,c
  8373  003D38  6F84               	movwf	sqrtf@ix& (0+255),b
  8374  003D3A  0E00               	movlw	0
  8375  003D3C  104B               	iorwf	(??_sqrtf+1)^0,w,c
  8376  003D3E  6F85               	movwf	(sqrtf@ix+1)& (0+255),b
  8377  003D40  0E80               	movlw	128
  8378  003D42  104C               	iorwf	(??_sqrtf+2)^0,w,c
  8379  003D44  6F86               	movwf	(sqrtf@ix+2)& (0+255),b
  8380  003D46  0E00               	movlw	0
  8381  003D48  104D               	iorwf	(??_sqrtf+3)^0,w,c
  8382  003D4A  6F87               	movwf	(sqrtf@ix+3)& (0+255),b
  8383  003D4C                     
  8384                           ; BSR set to: 0
  8385  003D4C  A17C               	btfss	sqrtf@m& (0+255),0,b
  8386  003D4E  EFAB  F01E         	goto	u3641
  8387  003D52  EFAD  F01E         	goto	u3640
  8388  003D56                     u3641:
  8389  003D56  EFB5  F01E         	goto	l1578
  8390  003D5A                     u3640:
  8391  003D5A                     
  8392                           ; BSR set to: 0
  8393  003D5A  5184               	movf	sqrtf@ix& (0+255),w,b
  8394  003D5C  2784               	addwf	sqrtf@ix& (0+255),f,b
  8395  003D5E  5185               	movf	(sqrtf@ix+1)& (0+255),w,b
  8396  003D60  2385               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  8397  003D62  5186               	movf	(sqrtf@ix+2)& (0+255),w,b
  8398  003D64  2386               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  8399  003D66  5187               	movf	(sqrtf@ix+3)& (0+255),w,b
  8400  003D68  2387               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  8401  003D6A                     l1578:
  8402                           
  8403                           ; BSR set to: 0
  8404  003D6A  357F               	rlcf	(sqrtf@m+3)& (0+255),w,b
  8405  003D6C  337F               	rrcf	(sqrtf@m+3)& (0+255),f,b
  8406  003D6E  337E               	rrcf	(sqrtf@m+2)& (0+255),f,b
  8407  003D70  337D               	rrcf	(sqrtf@m+1)& (0+255),f,b
  8408  003D72  337C               	rrcf	sqrtf@m& (0+255),f,b
  8409  003D74  5184               	movf	sqrtf@ix& (0+255),w,b
  8410  003D76  2784               	addwf	sqrtf@ix& (0+255),f,b
  8411  003D78  5185               	movf	(sqrtf@ix+1)& (0+255),w,b
  8412  003D7A  2385               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  8413  003D7C  5186               	movf	(sqrtf@ix+2)& (0+255),w,b
  8414  003D7E  2386               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  8415  003D80  5187               	movf	(sqrtf@ix+3)& (0+255),w,b
  8416  003D82  2387               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  8417  003D84                     
  8418                           ; BSR set to: 0
  8419  003D84  0E00               	movlw	0
  8420  003D86  6F64               	movwf	sqrtf@s& (0+255),b
  8421  003D88  0E00               	movlw	0
  8422  003D8A  6F65               	movwf	(sqrtf@s+1)& (0+255),b
  8423  003D8C  0E00               	movlw	0
  8424  003D8E  6F66               	movwf	(sqrtf@s+2)& (0+255),b
  8425  003D90  0E00               	movlw	0
  8426  003D92  6F67               	movwf	(sqrtf@s+3)& (0+255),b
  8427  003D94  C064  F070         	movff	sqrtf@s,sqrtf@q
  8428  003D98  C065  F071         	movff	sqrtf@s+1,sqrtf@q+1
  8429  003D9C  C066  F072         	movff	sqrtf@s+2,sqrtf@q+2
  8430  003DA0  C067  F073         	movff	sqrtf@s+3,sqrtf@q+3
  8431  003DA4                     
  8432                           ; BSR set to: 0
  8433  003DA4  0E00               	movlw	0
  8434  003DA6  6F80               	movwf	sqrtf@r& (0+255),b
  8435  003DA8  0E00               	movlw	0
  8436  003DAA  6F81               	movwf	(sqrtf@r+1)& (0+255),b
  8437  003DAC  0E00               	movlw	0
  8438  003DAE  6F82               	movwf	(sqrtf@r+2)& (0+255),b
  8439  003DB0  0E01               	movlw	1
  8440  003DB2  6F83               	movwf	(sqrtf@r+3)& (0+255),b
  8441  003DB4  EF24  F01F         	goto	l4344
  8442  003DB8                     l4338:
  8443                           
  8444                           ; BSR set to: 0
  8445  003DB8  5180               	movf	sqrtf@r& (0+255),w,b
  8446  003DBA  2564               	addwf	sqrtf@s& (0+255),w,b
  8447  003DBC  6F74               	movwf	sqrtf@t& (0+255),b
  8448  003DBE  5181               	movf	(sqrtf@r+1)& (0+255),w,b
  8449  003DC0  2165               	addwfc	(sqrtf@s+1)& (0+255),w,b
  8450  003DC2  6F75               	movwf	(sqrtf@t+1)& (0+255),b
  8451  003DC4  5182               	movf	(sqrtf@r+2)& (0+255),w,b
  8452  003DC6  2166               	addwfc	(sqrtf@s+2)& (0+255),w,b
  8453  003DC8  6F76               	movwf	(sqrtf@t+2)& (0+255),b
  8454  003DCA  5183               	movf	(sqrtf@r+3)& (0+255),w,b
  8455  003DCC  2167               	addwfc	(sqrtf@s+3)& (0+255),w,b
  8456  003DCE  6F77               	movwf	(sqrtf@t+3)& (0+255),b
  8457  003DD0  5174               	movf	sqrtf@t& (0+255),w,b
  8458  003DD2  5D84               	subwf	sqrtf@ix& (0+255),w,b
  8459  003DD4  5175               	movf	(sqrtf@t+1)& (0+255),w,b
  8460  003DD6  5985               	subwfb	(sqrtf@ix+1)& (0+255),w,b
  8461  003DD8  5176               	movf	(sqrtf@t+2)& (0+255),w,b
  8462  003DDA  5986               	subwfb	(sqrtf@ix+2)& (0+255),w,b
  8463  003DDC  5187               	movf	(sqrtf@ix+3)& (0+255),w,b
  8464  003DDE  0A80               	xorlw	128
  8465  003DE0  6E4A               	movwf	??_sqrtf^0,c
  8466  003DE2  5177               	movf	(sqrtf@t+3)& (0+255),w,b
  8467  003DE4  0A80               	xorlw	128
  8468  003DE6  584A               	subwfb	??_sqrtf^0,w,c
  8469  003DE8  A0D8               	btfss	status,0,c
  8470  003DEA  EFF9  F01E         	goto	u3651
  8471  003DEE  EFFB  F01E         	goto	u3650
  8472  003DF2                     u3651:
  8473  003DF2  EF17  F01F         	goto	l1581
  8474  003DF6                     u3650:
  8475  003DF6                     
  8476                           ; BSR set to: 0
  8477  003DF6  5180               	movf	sqrtf@r& (0+255),w,b
  8478  003DF8  2574               	addwf	sqrtf@t& (0+255),w,b
  8479  003DFA  6F64               	movwf	sqrtf@s& (0+255),b
  8480  003DFC  5181               	movf	(sqrtf@r+1)& (0+255),w,b
  8481  003DFE  2175               	addwfc	(sqrtf@t+1)& (0+255),w,b
  8482  003E00  6F65               	movwf	(sqrtf@s+1)& (0+255),b
  8483  003E02  5182               	movf	(sqrtf@r+2)& (0+255),w,b
  8484  003E04  2176               	addwfc	(sqrtf@t+2)& (0+255),w,b
  8485  003E06  6F66               	movwf	(sqrtf@s+2)& (0+255),b
  8486  003E08  5183               	movf	(sqrtf@r+3)& (0+255),w,b
  8487  003E0A  2177               	addwfc	(sqrtf@t+3)& (0+255),w,b
  8488  003E0C  6F67               	movwf	(sqrtf@s+3)& (0+255),b
  8489  003E0E  5174               	movf	sqrtf@t& (0+255),w,b
  8490  003E10  5F84               	subwf	sqrtf@ix& (0+255),f,b
  8491  003E12  5175               	movf	(sqrtf@t+1)& (0+255),w,b
  8492  003E14  5B85               	subwfb	(sqrtf@ix+1)& (0+255),f,b
  8493  003E16  5176               	movf	(sqrtf@t+2)& (0+255),w,b
  8494  003E18  5B86               	subwfb	(sqrtf@ix+2)& (0+255),f,b
  8495  003E1A  5177               	movf	(sqrtf@t+3)& (0+255),w,b
  8496  003E1C  5B87               	subwfb	(sqrtf@ix+3)& (0+255),f,b
  8497  003E1E  5180               	movf	sqrtf@r& (0+255),w,b
  8498  003E20  2770               	addwf	sqrtf@q& (0+255),f,b
  8499  003E22  5181               	movf	(sqrtf@r+1)& (0+255),w,b
  8500  003E24  2371               	addwfc	(sqrtf@q+1)& (0+255),f,b
  8501  003E26  5182               	movf	(sqrtf@r+2)& (0+255),w,b
  8502  003E28  2372               	addwfc	(sqrtf@q+2)& (0+255),f,b
  8503  003E2A  5183               	movf	(sqrtf@r+3)& (0+255),w,b
  8504  003E2C  2373               	addwfc	(sqrtf@q+3)& (0+255),f,b
  8505  003E2E                     l1581:
  8506                           
  8507                           ; BSR set to: 0
  8508  003E2E  5184               	movf	sqrtf@ix& (0+255),w,b
  8509  003E30  2784               	addwf	sqrtf@ix& (0+255),f,b
  8510  003E32  5185               	movf	(sqrtf@ix+1)& (0+255),w,b
  8511  003E34  2385               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  8512  003E36  5186               	movf	(sqrtf@ix+2)& (0+255),w,b
  8513  003E38  2386               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  8514  003E3A  5187               	movf	(sqrtf@ix+3)& (0+255),w,b
  8515  003E3C  2387               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  8516  003E3E                     
  8517                           ; BSR set to: 0
  8518  003E3E  90D8               	bcf	status,0,c
  8519  003E40  3383               	rrcf	(sqrtf@r+3)& (0+255),f,b
  8520  003E42  3382               	rrcf	(sqrtf@r+2)& (0+255),f,b
  8521  003E44  3381               	rrcf	(sqrtf@r+1)& (0+255),f,b
  8522  003E46  3380               	rrcf	sqrtf@r& (0+255),f,b
  8523  003E48                     l4344:
  8524                           
  8525                           ; BSR set to: 0
  8526  003E48  5180               	movf	sqrtf@r& (0+255),w,b
  8527  003E4A  1181               	iorwf	(sqrtf@r+1)& (0+255),w,b
  8528  003E4C  1182               	iorwf	(sqrtf@r+2)& (0+255),w,b
  8529  003E4E  1183               	iorwf	(sqrtf@r+3)& (0+255),w,b
  8530  003E50  A4D8               	btfss	status,2,c
  8531  003E52  EF2D  F01F         	goto	u3661
  8532  003E56  EF2F  F01F         	goto	u3660
  8533  003E5A                     u3661:
  8534  003E5A  EFDC  F01E         	goto	l4338
  8535  003E5E                     u3660:
  8536  003E5E                     
  8537                           ; BSR set to: 0
  8538  003E5E  5184               	movf	sqrtf@ix& (0+255),w,b
  8539  003E60  1185               	iorwf	(sqrtf@ix+1)& (0+255),w,b
  8540  003E62  1186               	iorwf	(sqrtf@ix+2)& (0+255),w,b
  8541  003E64  1187               	iorwf	(sqrtf@ix+3)& (0+255),w,b
  8542  003E66  B4D8               	btfsc	status,2,c
  8543  003E68  EF38  F01F         	goto	u3671
  8544  003E6C  EF3A  F01F         	goto	u3670
  8545  003E70                     u3671:
  8546  003E70  EF9B  F01F         	goto	l1583
  8547  003E74                     u3670:
  8548  003E74                     
  8549                           ; BSR set to: 0
  8550  003E74  0E00               	movlw	0
  8551  003E76  6F78               	movwf	sqrtf@z& (0+255),b
  8552  003E78  0E00               	movlw	0
  8553  003E7A  6F79               	movwf	(sqrtf@z+1)& (0+255),b
  8554  003E7C  0E80               	movlw	128
  8555  003E7E  6F7A               	movwf	(sqrtf@z+2)& (0+255),b
  8556  003E80  0E3F               	movlw	63
  8557  003E82  6F7B               	movwf	(sqrtf@z+3)& (0+255),b
  8558  003E84                     
  8559                           ; BSR set to: 0
  8560  003E84  C078  F03A         	movff	sqrtf@z,___flge@ff1
  8561  003E88  C079  F03B         	movff	sqrtf@z+1,___flge@ff1+1
  8562  003E8C  C07A  F03C         	movff	sqrtf@z+2,___flge@ff1+2
  8563  003E90  C07B  F03D         	movff	sqrtf@z+3,___flge@ff1+3
  8564  003E94  0E00               	movlw	0
  8565  003E96  6E3E               	movwf	___flge@ff2^0,c
  8566  003E98  0E00               	movlw	0
  8567  003E9A  6E3F               	movwf	(___flge@ff2+1)^0,c
  8568  003E9C  0E80               	movlw	128
  8569  003E9E  6E40               	movwf	(___flge@ff2+2)^0,c
  8570  003EA0  0E3F               	movlw	63
  8571  003EA2  6E41               	movwf	(___flge@ff2+3)^0,c
  8572  003EA4  ECED  F02D         	call	___flge	;wreg free
  8573  003EA8  A0D8               	btfss	status,0,c
  8574  003EAA  EF59  F01F         	goto	u3681
  8575  003EAE  EF5B  F01F         	goto	u3680
  8576  003EB2                     u3681:
  8577  003EB2  EF9B  F01F         	goto	l1583
  8578  003EB6                     u3680:
  8579  003EB6  0E00               	movlw	0
  8580  003EB8  0100               	movlb	0	; () banked
  8581  003EBA  6F78               	movwf	sqrtf@z& (0+255),b
  8582  003EBC  0E00               	movlw	0
  8583  003EBE  6F79               	movwf	(sqrtf@z+1)& (0+255),b
  8584  003EC0  0E80               	movlw	128
  8585  003EC2  6F7A               	movwf	(sqrtf@z+2)& (0+255),b
  8586  003EC4  0E3F               	movlw	63
  8587  003EC6  6F7B               	movwf	(sqrtf@z+3)& (0+255),b
  8588  003EC8                     
  8589                           ; BSR set to: 0
  8590  003EC8  0E00               	movlw	0
  8591  003ECA  6E3A               	movwf	___flge@ff1^0,c
  8592  003ECC  0E00               	movlw	0
  8593  003ECE  6E3B               	movwf	(___flge@ff1+1)^0,c
  8594  003ED0  0E80               	movlw	128
  8595  003ED2  6E3C               	movwf	(___flge@ff1+2)^0,c
  8596  003ED4  0E3F               	movlw	63
  8597  003ED6  6E3D               	movwf	(___flge@ff1+3)^0,c
  8598  003ED8  C078  F03E         	movff	sqrtf@z,___flge@ff2
  8599  003EDC  C079  F03F         	movff	sqrtf@z+1,___flge@ff2+1
  8600  003EE0  C07A  F040         	movff	sqrtf@z+2,___flge@ff2+2
  8601  003EE4  C07B  F041         	movff	sqrtf@z+3,___flge@ff2+3
  8602  003EE8  ECED  F02D         	call	___flge	;wreg free
  8603  003EEC  B0D8               	btfsc	status,0,c
  8604  003EEE  EF7B  F01F         	goto	u3691
  8605  003EF2  EF7D  F01F         	goto	u3690
  8606  003EF6                     u3691:
  8607  003EF6  EF86  F01F         	goto	l4358
  8608  003EFA                     u3690:
  8609  003EFA  0E02               	movlw	2
  8610  003EFC  0100               	movlb	0	; () banked
  8611  003EFE  2770               	addwf	sqrtf@q& (0+255),f,b
  8612  003F00  0E00               	movlw	0
  8613  003F02  2371               	addwfc	(sqrtf@q+1)& (0+255),f,b
  8614  003F04  2372               	addwfc	(sqrtf@q+2)& (0+255),f,b
  8615  003F06  2373               	addwfc	(sqrtf@q+3)& (0+255),f,b
  8616  003F08  EF9B  F01F         	goto	l1583
  8617  003F0C                     l4358:
  8618  003F0C  0E01               	movlw	1
  8619  003F0E  0100               	movlb	0	; () banked
  8620  003F10  1570               	andwf	sqrtf@q& (0+255),w,b
  8621  003F12  6E4A               	movwf	??_sqrtf^0,c
  8622  003F14  0E00               	movlw	0
  8623  003F16  1571               	andwf	(sqrtf@q+1)& (0+255),w,b
  8624  003F18  6E4B               	movwf	(??_sqrtf+1)^0,c
  8625  003F1A  0E00               	movlw	0
  8626  003F1C  1572               	andwf	(sqrtf@q+2)& (0+255),w,b
  8627  003F1E  6E4C               	movwf	(??_sqrtf+2)^0,c
  8628  003F20  0E00               	movlw	0
  8629  003F22  1573               	andwf	(sqrtf@q+3)& (0+255),w,b
  8630  003F24  6E4D               	movwf	(??_sqrtf+3)^0,c
  8631  003F26  504A               	movf	??_sqrtf^0,w,c
  8632  003F28  2770               	addwf	sqrtf@q& (0+255),f,b
  8633  003F2A  504B               	movf	(??_sqrtf+1)^0,w,c
  8634  003F2C  2371               	addwfc	(sqrtf@q+1)& (0+255),f,b
  8635  003F2E  504C               	movf	(??_sqrtf+2)^0,w,c
  8636  003F30  2372               	addwfc	(sqrtf@q+2)& (0+255),f,b
  8637  003F32  504D               	movf	(??_sqrtf+3)^0,w,c
  8638  003F34  2373               	addwfc	(sqrtf@q+3)& (0+255),f,b
  8639  003F36                     l1583:
  8640  003F36  C070  F04A         	movff	sqrtf@q,??_sqrtf
  8641  003F3A  C071  F04B         	movff	sqrtf@q+1,??_sqrtf+1
  8642  003F3E  C072  F04C         	movff	sqrtf@q+2,??_sqrtf+2
  8643  003F42  C073  F04D         	movff	sqrtf@q+3,??_sqrtf+3
  8644  003F46  344D               	rlcf	(??_sqrtf+3)^0,w,c
  8645  003F48  324D               	rrcf	(??_sqrtf+3)^0,f,c
  8646  003F4A  324C               	rrcf	(??_sqrtf+2)^0,f,c
  8647  003F4C  324B               	rrcf	(??_sqrtf+1)^0,f,c
  8648  003F4E  324A               	rrcf	??_sqrtf^0,f,c
  8649  003F50  0E00               	movlw	0
  8650  003F52  244A               	addwf	??_sqrtf^0,w,c
  8651  003F54  0100               	movlb	0	; () banked
  8652  003F56  6F84               	movwf	sqrtf@ix& (0+255),b
  8653  003F58  0E00               	movlw	0
  8654  003F5A  204B               	addwfc	(??_sqrtf+1)^0,w,c
  8655  003F5C  6F85               	movwf	(sqrtf@ix+1)& (0+255),b
  8656  003F5E  0E00               	movlw	0
  8657  003F60  204C               	addwfc	(??_sqrtf+2)^0,w,c
  8658  003F62  6F86               	movwf	(sqrtf@ix+2)& (0+255),b
  8659  003F64  0E3F               	movlw	63
  8660  003F66  204D               	addwfc	(??_sqrtf+3)^0,w,c
  8661  003F68  6F87               	movwf	(sqrtf@ix+3)& (0+255),b
  8662  003F6A  C07C  F04A         	movff	sqrtf@m,??_sqrtf
  8663  003F6E  C07D  F04B         	movff	sqrtf@m+1,??_sqrtf+1
  8664  003F72  C07E  F04C         	movff	sqrtf@m+2,??_sqrtf+2
  8665  003F76  C07F  F04D         	movff	sqrtf@m+3,??_sqrtf+3
  8666  003F7A  0E17               	movlw	23
  8667  003F7C                     u3705:
  8668  003F7C  90D8               	bcf	status,0,c
  8669  003F7E  364A               	rlcf	??_sqrtf^0,f,c
  8670  003F80  364B               	rlcf	(??_sqrtf+1)^0,f,c
  8671  003F82  364C               	rlcf	(??_sqrtf+2)^0,f,c
  8672  003F84  364D               	rlcf	(??_sqrtf+3)^0,f,c
  8673  003F86  2EE8               	decfsz	wreg,f,c
  8674  003F88  EFBE  F01F         	goto	u3705
  8675  003F8C  504A               	movf	??_sqrtf^0,w,c
  8676  003F8E  2784               	addwf	sqrtf@ix& (0+255),f,b
  8677  003F90  504B               	movf	(??_sqrtf+1)^0,w,c
  8678  003F92  2385               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  8679  003F94  504C               	movf	(??_sqrtf+2)^0,w,c
  8680  003F96  2386               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  8681  003F98  504D               	movf	(??_sqrtf+3)^0,w,c
  8682  003F9A  2387               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  8683  003F9C                     
  8684                           ; BSR set to: 0
  8685  003F9C  C084  F06C         	movff	sqrtf@ix,sqrtf@__xc8_float_word
  8686  003FA0  C085  F06D         	movff	sqrtf@ix+1,sqrtf@__xc8_float_word+1
  8687  003FA4  C086  F06E         	movff	sqrtf@ix+2,sqrtf@__xc8_float_word+2
  8688  003FA8  C087  F06F         	movff	sqrtf@ix+3,sqrtf@__xc8_float_word+3
  8689  003FAC                     
  8690                           ; BSR set to: 0
  8691  003FAC  C06C  F078         	movff	sqrtf@__xc8_float_word,sqrtf@z
  8692  003FB0  C06D  F079         	movff	sqrtf@__xc8_float_word+1,sqrtf@z+1
  8693  003FB4  C06E  F07A         	movff	sqrtf@__xc8_float_word+2,sqrtf@z+2
  8694  003FB8  C06F  F07B         	movff	sqrtf@__xc8_float_word+3,sqrtf@z+3
  8695  003FBC                     
  8696                           ; BSR set to: 0
  8697  003FBC  C078  F046         	movff	sqrtf@z,?_sqrtf
  8698  003FC0  C079  F047         	movff	sqrtf@z+1,?_sqrtf+1
  8699  003FC4  C07A  F048         	movff	sqrtf@z+2,?_sqrtf+2
  8700  003FC8  C07B  F049         	movff	sqrtf@z+3,?_sqrtf+3
  8701  003FCC                     l1570:
  8702  003FCC  0012               	return		;funcret
  8703  003FCE                     __end_of_sqrtf:
  8704                           	opt callstack 0
  8705                           
  8706 ;; *************** function _nanf *****************
  8707 ;; Defined at:
  8708 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nanf.c"
  8709 ;; Parameters:    Size  Location     Type
  8710 ;;  s               2    8[COMRAM] PTR const unsigned char 
  8711 ;;		 -> STR_11(1), 
  8712 ;; Auto vars:     Size  Location     Type
  8713 ;;  u               4   12[COMRAM] struct .
  8714 ;; Return value:  Size  Location     Type
  8715 ;;                  4    8[COMRAM] float 
  8716 ;; Registers used:
  8717 ;;		wreg, status,2
  8718 ;; Tracked objects:
  8719 ;;		On entry : 0/0
  8720 ;;		On exit  : 0/0
  8721 ;;		Unchanged: 0/0
  8722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8723 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8724 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8726 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8727 ;;Total ram usage:        8 bytes
  8728 ;; Hardware stack levels used:    1
  8729 ;; Hardware stack levels required when called:    3
  8730 ;; This function calls:
  8731 ;;		Nothing
  8732 ;; This function is called by:
  8733 ;;		_sqrtf
  8734 ;; This function uses a non-reentrant model
  8735 ;;
  8736                           
  8737                           	psect	text20
  8738  0066DE                     __ptext20:
  8739                           	opt callstack 0
  8740  0066DE                     _nanf:
  8741                           	opt callstack 22
  8742  0066DE  0EFF               	movlw	255
  8743  0066E0  6E0D               	movwf	nanf@u^0,c
  8744  0066E2  0EFF               	movlw	255
  8745  0066E4  6E0E               	movwf	(nanf@u+1)^0,c
  8746  0066E6  0EFF               	movlw	255
  8747  0066E8  6E0F               	movwf	(nanf@u+2)^0,c
  8748  0066EA  0E7F               	movlw	127
  8749  0066EC  6E10               	movwf	(nanf@u+3)^0,c
  8750  0066EE  C00D  F009         	movff	nanf@u,?_nanf
  8751  0066F2  C00E  F00A         	movff	nanf@u+1,?_nanf+1
  8752  0066F6  C00F  F00B         	movff	nanf@u+2,?_nanf+2
  8753  0066FA  C010  F00C         	movff	nanf@u+3,?_nanf+3
  8754  0066FE  0012               	return		;funcret
  8755  006700                     __end_of_nanf:
  8756                           	opt callstack 0
  8757                           
  8758 ;; *************** function ___flge *****************
  8759 ;; Defined at:
  8760 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
  8761 ;; Parameters:    Size  Location     Type
  8762 ;;  ff1             4   57[COMRAM] float 
  8763 ;;  ff2             4   61[COMRAM] float 
  8764 ;; Auto vars:     Size  Location     Type
  8765 ;;		None
  8766 ;; Return value:  Size  Location     Type
  8767 ;;		None               void
  8768 ;; Registers used:
  8769 ;;		wreg, status,2, status,0
  8770 ;; Tracked objects:
  8771 ;;		On entry : 0/0
  8772 ;;		On exit  : 0/0
  8773 ;;		Unchanged: 0/0
  8774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8775 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8777 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8778 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8779 ;;Total ram usage:       12 bytes
  8780 ;; Hardware stack levels used:    1
  8781 ;; Hardware stack levels required when called:    3
  8782 ;; This function calls:
  8783 ;;		Nothing
  8784 ;; This function is called by:
  8785 ;;		_powf
  8786 ;;		_sqrtf
  8787 ;; This function uses a non-reentrant model
  8788 ;;
  8789                           
  8790                           	psect	text21
  8791  005BDA                     __ptext21:
  8792                           	opt callstack 0
  8793  005BDA                     ___flge:
  8794                           	opt callstack 22
  8795  005BDA  0E00               	movlw	0
  8796  005BDC  143A               	andwf	___flge@ff1^0,w,c
  8797  005BDE  6E42               	movwf	??___flge^0,c
  8798  005BE0  0E00               	movlw	0
  8799  005BE2  143B               	andwf	(___flge@ff1+1)^0,w,c
  8800  005BE4  6E43               	movwf	(??___flge+1)^0,c
  8801  005BE6  0E80               	movlw	128
  8802  005BE8  143C               	andwf	(___flge@ff1+2)^0,w,c
  8803  005BEA  6E44               	movwf	(??___flge+2)^0,c
  8804  005BEC  0E7F               	movlw	127
  8805  005BEE  143D               	andwf	(___flge@ff1+3)^0,w,c
  8806  005BF0  6E45               	movwf	(??___flge+3)^0,c
  8807  005BF2  5042               	movf	??___flge^0,w,c
  8808  005BF4  1043               	iorwf	(??___flge+1)^0,w,c
  8809  005BF6  1044               	iorwf	(??___flge+2)^0,w,c
  8810  005BF8  1045               	iorwf	(??___flge+3)^0,w,c
  8811  005BFA  A4D8               	btfss	status,2,c
  8812  005BFC  EF02  F02E         	goto	u3181
  8813  005C00  EF04  F02E         	goto	u3180
  8814  005C04                     u3181:
  8815  005C04  EF0C  F02E         	goto	l4038
  8816  005C08                     u3180:
  8817  005C08  0E00               	movlw	0
  8818  005C0A  6E3A               	movwf	___flge@ff1^0,c
  8819  005C0C  0E00               	movlw	0
  8820  005C0E  6E3B               	movwf	(___flge@ff1+1)^0,c
  8821  005C10  0E00               	movlw	0
  8822  005C12  6E3C               	movwf	(___flge@ff1+2)^0,c
  8823  005C14  0E00               	movlw	0
  8824  005C16  6E3D               	movwf	(___flge@ff1+3)^0,c
  8825  005C18                     l4038:
  8826  005C18  0E00               	movlw	0
  8827  005C1A  143E               	andwf	___flge@ff2^0,w,c
  8828  005C1C  6E42               	movwf	??___flge^0,c
  8829  005C1E  0E00               	movlw	0
  8830  005C20  143F               	andwf	(___flge@ff2+1)^0,w,c
  8831  005C22  6E43               	movwf	(??___flge+1)^0,c
  8832  005C24  0E80               	movlw	128
  8833  005C26  1440               	andwf	(___flge@ff2+2)^0,w,c
  8834  005C28  6E44               	movwf	(??___flge+2)^0,c
  8835  005C2A  0E7F               	movlw	127
  8836  005C2C  1441               	andwf	(___flge@ff2+3)^0,w,c
  8837  005C2E  6E45               	movwf	(??___flge+3)^0,c
  8838  005C30  5042               	movf	??___flge^0,w,c
  8839  005C32  1043               	iorwf	(??___flge+1)^0,w,c
  8840  005C34  1044               	iorwf	(??___flge+2)^0,w,c
  8841  005C36  1045               	iorwf	(??___flge+3)^0,w,c
  8842  005C38  A4D8               	btfss	status,2,c
  8843  005C3A  EF21  F02E         	goto	u3191
  8844  005C3E  EF23  F02E         	goto	u3190
  8845  005C42                     u3191:
  8846  005C42  EF2B  F02E         	goto	l4042
  8847  005C46                     u3190:
  8848  005C46  0E00               	movlw	0
  8849  005C48  6E3E               	movwf	___flge@ff2^0,c
  8850  005C4A  0E00               	movlw	0
  8851  005C4C  6E3F               	movwf	(___flge@ff2+1)^0,c
  8852  005C4E  0E00               	movlw	0
  8853  005C50  6E40               	movwf	(___flge@ff2+2)^0,c
  8854  005C52  0E00               	movlw	0
  8855  005C54  6E41               	movwf	(___flge@ff2+3)^0,c
  8856  005C56                     l4042:
  8857  005C56  AE3D               	btfss	(___flge@ff1+3)^0,7,c
  8858  005C58  EF30  F02E         	goto	u3201
  8859  005C5C  EF32  F02E         	goto	u3200
  8860  005C60                     u3201:
  8861  005C60  EF3B  F02E         	goto	l4046
  8862  005C64                     u3200:
  8863  005C64  6C3A               	negf	___flge@ff1^0,c
  8864  005C66  1E3B               	comf	(___flge@ff1+1)^0,f,c
  8865  005C68  B0D8               	btfsc	status,0,c
  8866  005C6A  2A3B               	incf	(___flge@ff1+1)^0,f,c
  8867  005C6C  1E3C               	comf	(___flge@ff1+2)^0,f,c
  8868  005C6E  B0D8               	btfsc	status,0,c
  8869  005C70  2A3C               	incf	(___flge@ff1+2)^0,f,c
  8870  005C72  0E80               	movlw	128
  8871  005C74  563D               	subfwb	(___flge@ff1+3)^0,f,c
  8872  005C76                     l4046:
  8873  005C76  AE41               	btfss	(___flge@ff2+3)^0,7,c
  8874  005C78  EF40  F02E         	goto	u3211
  8875  005C7C  EF42  F02E         	goto	u3210
  8876  005C80                     u3211:
  8877  005C80  EF4B  F02E         	goto	l961
  8878  005C84                     u3210:
  8879  005C84  6C3E               	negf	___flge@ff2^0,c
  8880  005C86  1E3F               	comf	(___flge@ff2+1)^0,f,c
  8881  005C88  B0D8               	btfsc	status,0,c
  8882  005C8A  2A3F               	incf	(___flge@ff2+1)^0,f,c
  8883  005C8C  1E40               	comf	(___flge@ff2+2)^0,f,c
  8884  005C8E  B0D8               	btfsc	status,0,c
  8885  005C90  2A40               	incf	(___flge@ff2+2)^0,f,c
  8886  005C92  0E80               	movlw	128
  8887  005C94  5641               	subfwb	(___flge@ff2+3)^0,f,c
  8888  005C96                     l961:
  8889  005C96  0E00               	movlw	0
  8890  005C98  1A3A               	xorwf	___flge@ff1^0,f,c
  8891  005C9A  0E00               	movlw	0
  8892  005C9C  1A3B               	xorwf	(___flge@ff1+1)^0,f,c
  8893  005C9E  0E00               	movlw	0
  8894  005CA0  1A3C               	xorwf	(___flge@ff1+2)^0,f,c
  8895  005CA2  0E80               	movlw	128
  8896  005CA4  1A3D               	xorwf	(___flge@ff1+3)^0,f,c
  8897  005CA6  0E00               	movlw	0
  8898  005CA8  1A3E               	xorwf	___flge@ff2^0,f,c
  8899  005CAA  0E00               	movlw	0
  8900  005CAC  1A3F               	xorwf	(___flge@ff2+1)^0,f,c
  8901  005CAE  0E00               	movlw	0
  8902  005CB0  1A40               	xorwf	(___flge@ff2+2)^0,f,c
  8903  005CB2  0E80               	movlw	128
  8904  005CB4  1A41               	xorwf	(___flge@ff2+3)^0,f,c
  8905  005CB6  503E               	movf	___flge@ff2^0,w,c
  8906  005CB8  5C3A               	subwf	___flge@ff1^0,w,c
  8907  005CBA  503F               	movf	(___flge@ff2+1)^0,w,c
  8908  005CBC  583B               	subwfb	(___flge@ff1+1)^0,w,c
  8909  005CBE  5040               	movf	(___flge@ff2+2)^0,w,c
  8910  005CC0  583C               	subwfb	(___flge@ff1+2)^0,w,c
  8911  005CC2  5041               	movf	(___flge@ff2+3)^0,w,c
  8912  005CC4  583D               	subwfb	(___flge@ff1+3)^0,w,c
  8913  005CC6  B0D8               	btfsc	status,0,c
  8914  005CC8  EF68  F02E         	goto	u3221
  8915  005CCC  EF6A  F02E         	goto	u3220
  8916  005CD0                     u3221:
  8917  005CD0  EF6D  F02E         	goto	l4052
  8918  005CD4                     u3220:
  8919  005CD4  90D8               	bcf	status,0,c
  8920  005CD6  EF6E  F02E         	goto	l966
  8921  005CDA                     l4052:
  8922  005CDA  80D8               	bsf	status,0,c
  8923  005CDC                     l966:
  8924  005CDC  0012               	return		;funcret
  8925  005CDE                     __end_of___flge:
  8926                           	opt callstack 0
  8927                           
  8928 ;; *************** function _scalbnf *****************
  8929 ;; Defined at:
  8930 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\scalbnf.c"
  8931 ;; Parameters:    Size  Location     Type
  8932 ;;  x               4   49[COMRAM] float 
  8933 ;;  n               2   53[COMRAM] int 
  8934 ;; Auto vars:     Size  Location     Type
  8935 ;;  y               4   63[COMRAM] float 
  8936 ;;  u               4   59[COMRAM] struct .
  8937 ;; Return value:  Size  Location     Type
  8938 ;;                  4   49[COMRAM] float 
  8939 ;; Registers used:
  8940 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8941 ;; Tracked objects:
  8942 ;;		On entry : 0/0
  8943 ;;		On exit  : 0/0
  8944 ;;		Unchanged: 0/0
  8945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8946 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8947 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8948 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8949 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8950 ;;Total ram usage:       18 bytes
  8951 ;; Hardware stack levels used:    1
  8952 ;; Hardware stack levels required when called:    4
  8953 ;; This function calls:
  8954 ;;		___flmul
  8955 ;; This function is called by:
  8956 ;;		_powf
  8957 ;; This function uses a non-reentrant model
  8958 ;;
  8959                           
  8960                           	psect	text22
  8961  00513C                     __ptext22:
  8962                           	opt callstack 0
  8963  00513C                     _scalbnf:
  8964                           	opt callstack 22
  8965  00513C  C032  F040         	movff	scalbnf@x,scalbnf@y
  8966  005140  C033  F041         	movff	scalbnf@x+1,scalbnf@y+1
  8967  005144  C034  F042         	movff	scalbnf@x+2,scalbnf@y+2
  8968  005148  C035  F043         	movff	scalbnf@x+3,scalbnf@y+3
  8969  00514C  BE37               	btfsc	(scalbnf@n+1)^0,7,c
  8970  00514E  EFB2  F028         	goto	u3711
  8971  005152  5037               	movf	(scalbnf@n+1)^0,w,c
  8972  005154  E109               	bnz	u3710
  8973  005156  0E80               	movlw	128
  8974  005158  5C36               	subwf	scalbnf@n^0,w,c
  8975  00515A  A0D8               	btfss	status,0,c
  8976  00515C  EFB2  F028         	goto	u3711
  8977  005160  EFB4  F028         	goto	u3710
  8978  005164                     u3711:
  8979  005164  EF12  F029         	goto	l4394
  8980  005168                     u3710:
  8981  005168  C040  F019         	movff	scalbnf@y,___flmul@b
  8982  00516C  C041  F01A         	movff	scalbnf@y+1,___flmul@b+1
  8983  005170  C042  F01B         	movff	scalbnf@y+2,___flmul@b+2
  8984  005174  C043  F01C         	movff	scalbnf@y+3,___flmul@b+3
  8985  005178  0E00               	movlw	0
  8986  00517A  6E1D               	movwf	___flmul@a^0,c
  8987  00517C  0E00               	movlw	0
  8988  00517E  6E1E               	movwf	(___flmul@a+1)^0,c
  8989  005180  0E00               	movlw	0
  8990  005182  6E1F               	movwf	(___flmul@a+2)^0,c
  8991  005184  0E7F               	movlw	127
  8992  005186  6E20               	movwf	(___flmul@a+3)^0,c
  8993  005188  EC47  F022         	call	___flmul	;wreg free
  8994  00518C  C019  F040         	movff	?___flmul,scalbnf@y
  8995  005190  C01A  F041         	movff	?___flmul+1,scalbnf@y+1
  8996  005194  C01B  F042         	movff	?___flmul+2,scalbnf@y+2
  8997  005198  C01C  F043         	movff	?___flmul+3,scalbnf@y+3
  8998  00519C  0E81               	movlw	129
  8999  00519E  2636               	addwf	scalbnf@n^0,f,c
  9000  0051A0  0EFF               	movlw	255
  9001  0051A2  2237               	addwfc	(scalbnf@n+1)^0,f,c
  9002  0051A4  BE37               	btfsc	(scalbnf@n+1)^0,7,c
  9003  0051A6  EFDE  F028         	goto	u3721
  9004  0051AA  5037               	movf	(scalbnf@n+1)^0,w,c
  9005  0051AC  E109               	bnz	u3720
  9006  0051AE  0E80               	movlw	128
  9007  0051B0  5C36               	subwf	scalbnf@n^0,w,c
  9008  0051B2  A0D8               	btfss	status,0,c
  9009  0051B4  EFDE  F028         	goto	u3721
  9010  0051B8  EFE0  F028         	goto	u3720
  9011  0051BC                     u3721:
  9012  0051BC  EF7C  F029         	goto	l4410
  9013  0051C0                     u3720:
  9014  0051C0  C040  F019         	movff	scalbnf@y,___flmul@b
  9015  0051C4  C041  F01A         	movff	scalbnf@y+1,___flmul@b+1
  9016  0051C8  C042  F01B         	movff	scalbnf@y+2,___flmul@b+2
  9017  0051CC  C043  F01C         	movff	scalbnf@y+3,___flmul@b+3
  9018  0051D0  0E00               	movlw	0
  9019  0051D2  6E1D               	movwf	___flmul@a^0,c
  9020  0051D4  0E00               	movlw	0
  9021  0051D6  6E1E               	movwf	(___flmul@a+1)^0,c
  9022  0051D8  0E00               	movlw	0
  9023  0051DA  6E1F               	movwf	(___flmul@a+2)^0,c
  9024  0051DC  0E7F               	movlw	127
  9025  0051DE  6E20               	movwf	(___flmul@a+3)^0,c
  9026  0051E0  EC47  F022         	call	___flmul	;wreg free
  9027  0051E4  C019  F040         	movff	?___flmul,scalbnf@y
  9028  0051E8  C01A  F041         	movff	?___flmul+1,scalbnf@y+1
  9029  0051EC  C01B  F042         	movff	?___flmul+2,scalbnf@y+2
  9030  0051F0  C01C  F043         	movff	?___flmul+3,scalbnf@y+3
  9031  0051F4  0E81               	movlw	129
  9032  0051F6  2636               	addwf	scalbnf@n^0,f,c
  9033  0051F8  0EFF               	movlw	255
  9034  0051FA  2237               	addwfc	(scalbnf@n+1)^0,f,c
  9035  0051FC  BE37               	btfsc	(scalbnf@n+1)^0,7,c
  9036  0051FE  EF0A  F029         	goto	u3731
  9037  005202  5037               	movf	(scalbnf@n+1)^0,w,c
  9038  005204  E109               	bnz	u3730
  9039  005206  0E80               	movlw	128
  9040  005208  5C36               	subwf	scalbnf@n^0,w,c
  9041  00520A  A0D8               	btfss	status,0,c
  9042  00520C  EF0A  F029         	goto	u3731
  9043  005210  EF0C  F029         	goto	u3730
  9044  005214                     u3731:
  9045  005214  EF7C  F029         	goto	l4410
  9046  005218                     u3730:
  9047  005218  0E00               	movlw	0
  9048  00521A  6E37               	movwf	(scalbnf@n+1)^0,c
  9049  00521C  0E7F               	movlw	127
  9050  00521E  6E36               	movwf	scalbnf@n^0,c
  9051  005220  EF7C  F029         	goto	l4410
  9052  005224                     l4394:
  9053  005224  AE37               	btfss	(scalbnf@n+1)^0,7,c
  9054  005226  EF1E  F029         	goto	u3741
  9055  00522A  0E82               	movlw	130
  9056  00522C  5C36               	subwf	scalbnf@n^0,w,c
  9057  00522E  0EFF               	movlw	255
  9058  005230  5837               	subwfb	(scalbnf@n+1)^0,w,c
  9059  005232  B0D8               	btfsc	status,0,c
  9060  005234  EF1E  F029         	goto	u3741
  9061  005238  EF20  F029         	goto	u3740
  9062  00523C                     u3741:
  9063  00523C  EF7C  F029         	goto	l4410
  9064  005240                     u3740:
  9065  005240  C040  F019         	movff	scalbnf@y,___flmul@b
  9066  005244  C041  F01A         	movff	scalbnf@y+1,___flmul@b+1
  9067  005248  C042  F01B         	movff	scalbnf@y+2,___flmul@b+2
  9068  00524C  C043  F01C         	movff	scalbnf@y+3,___flmul@b+3
  9069  005250  0E00               	movlw	0
  9070  005252  6E1D               	movwf	___flmul@a^0,c
  9071  005254  0E00               	movlw	0
  9072  005256  6E1E               	movwf	(___flmul@a+1)^0,c
  9073  005258  0E80               	movlw	128
  9074  00525A  6E1F               	movwf	(___flmul@a+2)^0,c
  9075  00525C  0E0C               	movlw	12
  9076  00525E  6E20               	movwf	(___flmul@a+3)^0,c
  9077  005260  EC47  F022         	call	___flmul	;wreg free
  9078  005264  C019  F040         	movff	?___flmul,scalbnf@y
  9079  005268  C01A  F041         	movff	?___flmul+1,scalbnf@y+1
  9080  00526C  C01B  F042         	movff	?___flmul+2,scalbnf@y+2
  9081  005270  C01C  F043         	movff	?___flmul+3,scalbnf@y+3
  9082  005274  0E66               	movlw	102
  9083  005276  2636               	addwf	scalbnf@n^0,f,c
  9084  005278  0E00               	movlw	0
  9085  00527A  2237               	addwfc	(scalbnf@n+1)^0,f,c
  9086  00527C  AE37               	btfss	(scalbnf@n+1)^0,7,c
  9087  00527E  EF4A  F029         	goto	u3751
  9088  005282  0E82               	movlw	130
  9089  005284  5C36               	subwf	scalbnf@n^0,w,c
  9090  005286  0EFF               	movlw	255
  9091  005288  5837               	subwfb	(scalbnf@n+1)^0,w,c
  9092  00528A  B0D8               	btfsc	status,0,c
  9093  00528C  EF4A  F029         	goto	u3751
  9094  005290  EF4C  F029         	goto	u3750
  9095  005294                     u3751:
  9096  005294  EF7C  F029         	goto	l4410
  9097  005298                     u3750:
  9098  005298  C040  F019         	movff	scalbnf@y,___flmul@b
  9099  00529C  C041  F01A         	movff	scalbnf@y+1,___flmul@b+1
  9100  0052A0  C042  F01B         	movff	scalbnf@y+2,___flmul@b+2
  9101  0052A4  C043  F01C         	movff	scalbnf@y+3,___flmul@b+3
  9102  0052A8  0E00               	movlw	0
  9103  0052AA  6E1D               	movwf	___flmul@a^0,c
  9104  0052AC  0E00               	movlw	0
  9105  0052AE  6E1E               	movwf	(___flmul@a+1)^0,c
  9106  0052B0  0E80               	movlw	128
  9107  0052B2  6E1F               	movwf	(___flmul@a+2)^0,c
  9108  0052B4  0E0C               	movlw	12
  9109  0052B6  6E20               	movwf	(___flmul@a+3)^0,c
  9110  0052B8  EC47  F022         	call	___flmul	;wreg free
  9111  0052BC  C019  F040         	movff	?___flmul,scalbnf@y
  9112  0052C0  C01A  F041         	movff	?___flmul+1,scalbnf@y+1
  9113  0052C4  C01B  F042         	movff	?___flmul+2,scalbnf@y+2
  9114  0052C8  C01C  F043         	movff	?___flmul+3,scalbnf@y+3
  9115  0052CC  0E66               	movlw	102
  9116  0052CE  2636               	addwf	scalbnf@n^0,f,c
  9117  0052D0  0E00               	movlw	0
  9118  0052D2  2237               	addwfc	(scalbnf@n+1)^0,f,c
  9119  0052D4  AE37               	btfss	(scalbnf@n+1)^0,7,c
  9120  0052D6  EF76  F029         	goto	u3761
  9121  0052DA  0E82               	movlw	130
  9122  0052DC  5C36               	subwf	scalbnf@n^0,w,c
  9123  0052DE  0EFF               	movlw	255
  9124  0052E0  5837               	subwfb	(scalbnf@n+1)^0,w,c
  9125  0052E2  B0D8               	btfsc	status,0,c
  9126  0052E4  EF76  F029         	goto	u3761
  9127  0052E8  EF78  F029         	goto	u3760
  9128  0052EC                     u3761:
  9129  0052EC  EF7C  F029         	goto	l4410
  9130  0052F0                     u3760:
  9131  0052F0  0EFF               	movlw	255
  9132  0052F2  6E37               	movwf	(scalbnf@n+1)^0,c
  9133  0052F4  0E82               	movlw	130
  9134  0052F6  6E36               	movwf	scalbnf@n^0,c
  9135  0052F8                     l4410:
  9136  0052F8  0E7F               	movlw	127
  9137  0052FA  2436               	addwf	scalbnf@n^0,w,c
  9138  0052FC  6E38               	movwf	??_scalbnf^0,c
  9139  0052FE  0E00               	movlw	0
  9140  005300  2037               	addwfc	(scalbnf@n+1)^0,w,c
  9141  005302  6E39               	movwf	(??_scalbnf+1)^0,c
  9142  005304  6A3A               	clrf	(??_scalbnf+2)^0,c
  9143  005306  6A3B               	clrf	(??_scalbnf+3)^0,c
  9144  005308  0E17               	movlw	23
  9145  00530A                     u3775:
  9146  00530A  90D8               	bcf	status,0,c
  9147  00530C  3638               	rlcf	??_scalbnf^0,f,c
  9148  00530E  3639               	rlcf	(??_scalbnf+1)^0,f,c
  9149  005310  363A               	rlcf	(??_scalbnf+2)^0,f,c
  9150  005312  363B               	rlcf	(??_scalbnf+3)^0,f,c
  9151  005314  2EE8               	decfsz	wreg,f,c
  9152  005316  EF85  F029         	goto	u3775
  9153  00531A  C038  F03C         	movff	??_scalbnf,scalbnf@u
  9154  00531E  C039  F03D         	movff	??_scalbnf+1,scalbnf@u+1
  9155  005322  C03A  F03E         	movff	??_scalbnf+2,scalbnf@u+2
  9156  005326  C03B  F03F         	movff	??_scalbnf+3,scalbnf@u+3
  9157  00532A  C03C  F019         	movff	scalbnf@u,___flmul@b
  9158  00532E  C03D  F01A         	movff	scalbnf@u+1,___flmul@b+1
  9159  005332  C03E  F01B         	movff	scalbnf@u+2,___flmul@b+2
  9160  005336  C03F  F01C         	movff	scalbnf@u+3,___flmul@b+3
  9161  00533A  C040  F01D         	movff	scalbnf@y,___flmul@a
  9162  00533E  C041  F01E         	movff	scalbnf@y+1,___flmul@a+1
  9163  005342  C042  F01F         	movff	scalbnf@y+2,___flmul@a+2
  9164  005346  C043  F020         	movff	scalbnf@y+3,___flmul@a+3
  9165  00534A  EC47  F022         	call	___flmul	;wreg free
  9166  00534E  C019  F032         	movff	?___flmul,scalbnf@x
  9167  005352  C01A  F033         	movff	?___flmul+1,scalbnf@x+1
  9168  005356  C01B  F034         	movff	?___flmul+2,scalbnf@x+2
  9169  00535A  C01C  F035         	movff	?___flmul+3,scalbnf@x+3
  9170  00535E  C032  F032         	movff	scalbnf@x,?_scalbnf
  9171  005362  C033  F033         	movff	scalbnf@x+1,?_scalbnf+1
  9172  005366  C034  F034         	movff	scalbnf@x+2,?_scalbnf+2
  9173  00536A  C035  F035         	movff	scalbnf@x+3,?_scalbnf+3
  9174  00536E  0012               	return		;funcret
  9175  005370                     __end_of_scalbnf:
  9176                           	opt callstack 0
  9177                           
  9178 ;; *************** function ___flmul *****************
  9179 ;; Defined at:
  9180 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  9181 ;; Parameters:    Size  Location     Type
  9182 ;;  b               4   24[COMRAM] float 
  9183 ;;  a               4   28[COMRAM] float 
  9184 ;; Auto vars:     Size  Location     Type
  9185 ;;  prod            4   43[COMRAM] struct .
  9186 ;;  grs             4   37[COMRAM] unsigned long 
  9187 ;;  temp            2   47[COMRAM] struct .
  9188 ;;  bexp            1   42[COMRAM] unsigned char 
  9189 ;;  aexp            1   41[COMRAM] unsigned char 
  9190 ;;  sign            1   36[COMRAM] unsigned char 
  9191 ;; Return value:  Size  Location     Type
  9192 ;;                  4   24[COMRAM] unsigned char 
  9193 ;; Registers used:
  9194 ;;		wreg, status,2, status,0, prodl, prodh
  9195 ;; Tracked objects:
  9196 ;;		On entry : 0/0
  9197 ;;		On exit  : 0/0
  9198 ;;		Unchanged: 0/0
  9199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9200 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9201 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9202 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9203 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9204 ;;Total ram usage:       25 bytes
  9205 ;; Hardware stack levels used:    1
  9206 ;; Hardware stack levels required when called:    3
  9207 ;; This function calls:
  9208 ;;		Nothing
  9209 ;; This function is called by:
  9210 ;;		_preCalculate
  9211 ;;		_powf
  9212 ;;		_scalbnf
  9213 ;;		_sqrtf
  9214 ;; This function uses a non-reentrant model
  9215 ;;
  9216                           
  9217                           	psect	text23
  9218  00448E                     __ptext23:
  9219                           	opt callstack 0
  9220  00448E                     ___flmul:
  9221                           	opt callstack 22
  9222  00448E  501C               	movf	(___flmul@b+3)^0,w,c
  9223  004490  0B80               	andlw	128
  9224  004492  6E25               	movwf	___flmul@sign^0,c
  9225  004494  501C               	movf	(___flmul@b+3)^0,w,c
  9226  004496  241C               	addwf	(___flmul@b+3)^0,w,c
  9227  004498  6E2B               	movwf	___flmul@bexp^0,c
  9228  00449A  AE1B               	btfss	(___flmul@b+2)^0,7,c
  9229  00449C  EF52  F022         	goto	u2991
  9230  0044A0  EF54  F022         	goto	u2990
  9231  0044A4                     u2991:
  9232  0044A4  EF55  F022         	goto	l3910
  9233  0044A8                     u2990:
  9234  0044A8  802B               	bsf	___flmul@bexp^0,0,c
  9235  0044AA                     l3910:
  9236  0044AA  502B               	movf	___flmul@bexp^0,w,c
  9237  0044AC  B4D8               	btfsc	status,2,c
  9238  0044AE  EF5B  F022         	goto	u3001
  9239  0044B2  EF5D  F022         	goto	u3000
  9240  0044B6                     u3001:
  9241  0044B6  EF70  F022         	goto	l3918
  9242  0044BA                     u3000:
  9243  0044BA  282B               	incf	___flmul@bexp^0,w,c
  9244  0044BC  A4D8               	btfss	status,2,c
  9245  0044BE  EF63  F022         	goto	u3011
  9246  0044C2  EF65  F022         	goto	u3010
  9247  0044C6                     u3011:
  9248  0044C6  EF6D  F022         	goto	l3916
  9249  0044CA                     u3010:
  9250  0044CA  0E00               	movlw	0
  9251  0044CC  6E19               	movwf	___flmul@b^0,c
  9252  0044CE  0E00               	movlw	0
  9253  0044D0  6E1A               	movwf	(___flmul@b+1)^0,c
  9254  0044D2  0E00               	movlw	0
  9255  0044D4  6E1B               	movwf	(___flmul@b+2)^0,c
  9256  0044D6  0E00               	movlw	0
  9257  0044D8  6E1C               	movwf	(___flmul@b+3)^0,c
  9258  0044DA                     l3916:
  9259  0044DA  8E1B               	bsf	(___flmul@b+2)^0,7,c
  9260  0044DC  EF78  F022         	goto	l3920
  9261  0044E0                     l3918:
  9262  0044E0  0E00               	movlw	0
  9263  0044E2  6E19               	movwf	___flmul@b^0,c
  9264  0044E4  0E00               	movlw	0
  9265  0044E6  6E1A               	movwf	(___flmul@b+1)^0,c
  9266  0044E8  0E00               	movlw	0
  9267  0044EA  6E1B               	movwf	(___flmul@b+2)^0,c
  9268  0044EC  0E00               	movlw	0
  9269  0044EE  6E1C               	movwf	(___flmul@b+3)^0,c
  9270  0044F0                     l3920:
  9271  0044F0  5020               	movf	(___flmul@a+3)^0,w,c
  9272  0044F2  0B80               	andlw	128
  9273  0044F4  1A25               	xorwf	___flmul@sign^0,f,c
  9274  0044F6  5020               	movf	(___flmul@a+3)^0,w,c
  9275  0044F8  2420               	addwf	(___flmul@a+3)^0,w,c
  9276  0044FA  6E2A               	movwf	___flmul@aexp^0,c
  9277  0044FC  AE1F               	btfss	(___flmul@a+2)^0,7,c
  9278  0044FE  EF83  F022         	goto	u3021
  9279  004502  EF85  F022         	goto	u3020
  9280  004506                     u3021:
  9281  004506  EF86  F022         	goto	l3928
  9282  00450A                     u3020:
  9283  00450A  802A               	bsf	___flmul@aexp^0,0,c
  9284  00450C                     l3928:
  9285  00450C  502A               	movf	___flmul@aexp^0,w,c
  9286  00450E  B4D8               	btfsc	status,2,c
  9287  004510  EF8C  F022         	goto	u3031
  9288  004514  EF8E  F022         	goto	u3030
  9289  004518                     u3031:
  9290  004518  EFA1  F022         	goto	l3936
  9291  00451C                     u3030:
  9292  00451C  282A               	incf	___flmul@aexp^0,w,c
  9293  00451E  A4D8               	btfss	status,2,c
  9294  004520  EF94  F022         	goto	u3041
  9295  004524  EF96  F022         	goto	u3040
  9296  004528                     u3041:
  9297  004528  EF9E  F022         	goto	l3934
  9298  00452C                     u3040:
  9299  00452C  0E00               	movlw	0
  9300  00452E  6E1D               	movwf	___flmul@a^0,c
  9301  004530  0E00               	movlw	0
  9302  004532  6E1E               	movwf	(___flmul@a+1)^0,c
  9303  004534  0E00               	movlw	0
  9304  004536  6E1F               	movwf	(___flmul@a+2)^0,c
  9305  004538  0E00               	movlw	0
  9306  00453A  6E20               	movwf	(___flmul@a+3)^0,c
  9307  00453C                     l3934:
  9308  00453C  8E1F               	bsf	(___flmul@a+2)^0,7,c
  9309  00453E  EFA9  F022         	goto	l1310
  9310  004542                     l3936:
  9311  004542  0E00               	movlw	0
  9312  004544  6E1D               	movwf	___flmul@a^0,c
  9313  004546  0E00               	movlw	0
  9314  004548  6E1E               	movwf	(___flmul@a+1)^0,c
  9315  00454A  0E00               	movlw	0
  9316  00454C  6E1F               	movwf	(___flmul@a+2)^0,c
  9317  00454E  0E00               	movlw	0
  9318  004550  6E20               	movwf	(___flmul@a+3)^0,c
  9319  004552                     l1310:
  9320  004552  502A               	movf	___flmul@aexp^0,w,c
  9321  004554  B4D8               	btfsc	status,2,c
  9322  004556  EFAF  F022         	goto	u3051
  9323  00455A  EFB1  F022         	goto	u3050
  9324  00455E                     u3051:
  9325  00455E  EFB9  F022         	goto	l3940
  9326  004562                     u3050:
  9327  004562  502B               	movf	___flmul@bexp^0,w,c
  9328  004564  A4D8               	btfss	status,2,c
  9329  004566  EFB7  F022         	goto	u3061
  9330  00456A  EFB9  F022         	goto	u3060
  9331  00456E                     u3061:
  9332  00456E  EFC3  F022         	goto	l3944
  9333  004572                     u3060:
  9334  004572                     l3940:
  9335  004572  0E00               	movlw	0
  9336  004574  6E19               	movwf	?___flmul^0,c
  9337  004576  0E00               	movlw	0
  9338  004578  6E1A               	movwf	(?___flmul+1)^0,c
  9339  00457A  0E00               	movlw	0
  9340  00457C  6E1B               	movwf	(?___flmul+2)^0,c
  9341  00457E  0E00               	movlw	0
  9342  004580  6E1C               	movwf	(?___flmul+3)^0,c
  9343  004582  EF5B  F024         	goto	l1314
  9344  004586                     l3944:
  9345  004586  501F               	movf	(___flmul@a+2)^0,w,c
  9346  004588  0219               	mulwf	___flmul@b^0,c
  9347  00458A  CFF3 F030          	movff	prodl,___flmul@temp
  9348  00458E  CFF4 F031          	movff	prodh,___flmul@temp+1
  9349  004592  5030               	movf	___flmul@temp^0,w,c
  9350  004594  6E26               	movwf	___flmul@grs^0,c
  9351  004596  6A27               	clrf	(___flmul@grs+1)^0,c
  9352  004598  6A28               	clrf	(___flmul@grs+2)^0,c
  9353  00459A  6A29               	clrf	(___flmul@grs+3)^0,c
  9354  00459C  5031               	movf	(___flmul@temp+1)^0,w,c
  9355  00459E  6E2C               	movwf	___flmul@prod^0,c
  9356  0045A0  6A2D               	clrf	(___flmul@prod+1)^0,c
  9357  0045A2  6A2E               	clrf	(___flmul@prod+2)^0,c
  9358  0045A4  6A2F               	clrf	(___flmul@prod+3)^0,c
  9359  0045A6  501E               	movf	(___flmul@a+1)^0,w,c
  9360  0045A8  021A               	mulwf	(___flmul@b+1)^0,c
  9361  0045AA  CFF3 F030          	movff	prodl,___flmul@temp
  9362  0045AE  CFF4 F031          	movff	prodh,___flmul@temp+1
  9363  0045B2  5030               	movf	___flmul@temp^0,w,c
  9364  0045B4  2626               	addwf	___flmul@grs^0,f,c
  9365  0045B6  0E00               	movlw	0
  9366  0045B8  2227               	addwfc	(___flmul@grs+1)^0,f,c
  9367  0045BA  2228               	addwfc	(___flmul@grs+2)^0,f,c
  9368  0045BC  2229               	addwfc	(___flmul@grs+3)^0,f,c
  9369  0045BE  5031               	movf	(___flmul@temp+1)^0,w,c
  9370  0045C0  262C               	addwf	___flmul@prod^0,f,c
  9371  0045C2  0E00               	movlw	0
  9372  0045C4  222D               	addwfc	(___flmul@prod+1)^0,f,c
  9373  0045C6  222E               	addwfc	(___flmul@prod+2)^0,f,c
  9374  0045C8  222F               	addwfc	(___flmul@prod+3)^0,f,c
  9375  0045CA  501D               	movf	___flmul@a^0,w,c
  9376  0045CC  021B               	mulwf	(___flmul@b+2)^0,c
  9377  0045CE  CFF3 F030          	movff	prodl,___flmul@temp
  9378  0045D2  CFF4 F031          	movff	prodh,___flmul@temp+1
  9379  0045D6  5030               	movf	___flmul@temp^0,w,c
  9380  0045D8  2626               	addwf	___flmul@grs^0,f,c
  9381  0045DA  0E00               	movlw	0
  9382  0045DC  2227               	addwfc	(___flmul@grs+1)^0,f,c
  9383  0045DE  2228               	addwfc	(___flmul@grs+2)^0,f,c
  9384  0045E0  2229               	addwfc	(___flmul@grs+3)^0,f,c
  9385  0045E2  5031               	movf	(___flmul@temp+1)^0,w,c
  9386  0045E4  262C               	addwf	___flmul@prod^0,f,c
  9387  0045E6  0E00               	movlw	0
  9388  0045E8  222D               	addwfc	(___flmul@prod+1)^0,f,c
  9389  0045EA  222E               	addwfc	(___flmul@prod+2)^0,f,c
  9390  0045EC  222F               	addwfc	(___flmul@prod+3)^0,f,c
  9391  0045EE  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  9392  0045F2  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  9393  0045F6  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  9394  0045FA  6A26               	clrf	___flmul@grs^0,c
  9395  0045FC  501D               	movf	___flmul@a^0,w,c
  9396  0045FE  021A               	mulwf	(___flmul@b+1)^0,c
  9397  004600  CFF3 F030          	movff	prodl,___flmul@temp
  9398  004604  CFF4 F031          	movff	prodh,___flmul@temp+1
  9399  004608  5030               	movf	___flmul@temp^0,w,c
  9400  00460A  2626               	addwf	___flmul@grs^0,f,c
  9401  00460C  5031               	movf	(___flmul@temp+1)^0,w,c
  9402  00460E  2227               	addwfc	(___flmul@grs+1)^0,f,c
  9403  004610  0E00               	movlw	0
  9404  004612  2228               	addwfc	(___flmul@grs+2)^0,f,c
  9405  004614  0E00               	movlw	0
  9406  004616  2229               	addwfc	(___flmul@grs+3)^0,f,c
  9407  004618  501E               	movf	(___flmul@a+1)^0,w,c
  9408  00461A  0219               	mulwf	___flmul@b^0,c
  9409  00461C  CFF3 F030          	movff	prodl,___flmul@temp
  9410  004620  CFF4 F031          	movff	prodh,___flmul@temp+1
  9411  004624  5030               	movf	___flmul@temp^0,w,c
  9412  004626  2626               	addwf	___flmul@grs^0,f,c
  9413  004628  5031               	movf	(___flmul@temp+1)^0,w,c
  9414  00462A  2227               	addwfc	(___flmul@grs+1)^0,f,c
  9415  00462C  0E00               	movlw	0
  9416  00462E  2228               	addwfc	(___flmul@grs+2)^0,f,c
  9417  004630  0E00               	movlw	0
  9418  004632  2229               	addwfc	(___flmul@grs+3)^0,f,c
  9419  004634  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  9420  004638  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  9421  00463C  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  9422  004640  6A26               	clrf	___flmul@grs^0,c
  9423  004642  501D               	movf	___flmul@a^0,w,c
  9424  004644  0219               	mulwf	___flmul@b^0,c
  9425  004646  CFF3 F030          	movff	prodl,___flmul@temp
  9426  00464A  CFF4 F031          	movff	prodh,___flmul@temp+1
  9427  00464E  5030               	movf	___flmul@temp^0,w,c
  9428  004650  2626               	addwf	___flmul@grs^0,f,c
  9429  004652  5031               	movf	(___flmul@temp+1)^0,w,c
  9430  004654  2227               	addwfc	(___flmul@grs+1)^0,f,c
  9431  004656  0E00               	movlw	0
  9432  004658  2228               	addwfc	(___flmul@grs+2)^0,f,c
  9433  00465A  0E00               	movlw	0
  9434  00465C  2229               	addwfc	(___flmul@grs+3)^0,f,c
  9435  00465E  501F               	movf	(___flmul@a+2)^0,w,c
  9436  004660  021A               	mulwf	(___flmul@b+1)^0,c
  9437  004662  CFF3 F030          	movff	prodl,___flmul@temp
  9438  004666  CFF4 F031          	movff	prodh,___flmul@temp+1
  9439  00466A  5030               	movf	___flmul@temp^0,w,c
  9440  00466C  262C               	addwf	___flmul@prod^0,f,c
  9441  00466E  5031               	movf	(___flmul@temp+1)^0,w,c
  9442  004670  222D               	addwfc	(___flmul@prod+1)^0,f,c
  9443  004672  0E00               	movlw	0
  9444  004674  222E               	addwfc	(___flmul@prod+2)^0,f,c
  9445  004676  0E00               	movlw	0
  9446  004678  222F               	addwfc	(___flmul@prod+3)^0,f,c
  9447  00467A  501E               	movf	(___flmul@a+1)^0,w,c
  9448  00467C  021B               	mulwf	(___flmul@b+2)^0,c
  9449  00467E  CFF3 F030          	movff	prodl,___flmul@temp
  9450  004682  CFF4 F031          	movff	prodh,___flmul@temp+1
  9451  004686  5030               	movf	___flmul@temp^0,w,c
  9452  004688  262C               	addwf	___flmul@prod^0,f,c
  9453  00468A  5031               	movf	(___flmul@temp+1)^0,w,c
  9454  00468C  222D               	addwfc	(___flmul@prod+1)^0,f,c
  9455  00468E  0E00               	movlw	0
  9456  004690  222E               	addwfc	(___flmul@prod+2)^0,f,c
  9457  004692  0E00               	movlw	0
  9458  004694  222F               	addwfc	(___flmul@prod+3)^0,f,c
  9459  004696  501F               	movf	(___flmul@a+2)^0,w,c
  9460  004698  021B               	mulwf	(___flmul@b+2)^0,c
  9461  00469A  CFF3 F030          	movff	prodl,___flmul@temp
  9462  00469E  CFF4 F031          	movff	prodh,___flmul@temp+1
  9463  0046A2  5030               	movf	___flmul@temp^0,w,c
  9464  0046A4  6E21               	movwf	??___flmul^0,c
  9465  0046A6  5031               	movf	(___flmul@temp+1)^0,w,c
  9466  0046A8  6E22               	movwf	(??___flmul+1)^0,c
  9467  0046AA  6A23               	clrf	(??___flmul+2)^0,c
  9468  0046AC  6A24               	clrf	(??___flmul+3)^0,c
  9469  0046AE  C023  F024         	movff	??___flmul+2,??___flmul+3
  9470  0046B2  C022  F023         	movff	??___flmul+1,??___flmul+2
  9471  0046B6  C021  F022         	movff	??___flmul,??___flmul+1
  9472  0046BA  6A21               	clrf	??___flmul^0,c
  9473  0046BC  5021               	movf	??___flmul^0,w,c
  9474  0046BE  262C               	addwf	___flmul@prod^0,f,c
  9475  0046C0  5022               	movf	(??___flmul+1)^0,w,c
  9476  0046C2  222D               	addwfc	(___flmul@prod+1)^0,f,c
  9477  0046C4  5023               	movf	(??___flmul+2)^0,w,c
  9478  0046C6  222E               	addwfc	(___flmul@prod+2)^0,f,c
  9479  0046C8  5024               	movf	(??___flmul+3)^0,w,c
  9480  0046CA  222F               	addwfc	(___flmul@prod+3)^0,f,c
  9481  0046CC  C026  F021         	movff	___flmul@grs,??___flmul
  9482  0046D0  C027  F022         	movff	___flmul@grs+1,??___flmul+1
  9483  0046D4  C028  F023         	movff	___flmul@grs+2,??___flmul+2
  9484  0046D8  C029  F024         	movff	___flmul@grs+3,??___flmul+3
  9485  0046DC  0E19               	movlw	25
  9486  0046DE  EF76  F023         	goto	u3070
  9487  0046E2                     u3075:
  9488  0046E2  90D8               	bcf	status,0,c
  9489  0046E4  3224               	rrcf	(??___flmul+3)^0,f,c
  9490  0046E6  3223               	rrcf	(??___flmul+2)^0,f,c
  9491  0046E8  3222               	rrcf	(??___flmul+1)^0,f,c
  9492  0046EA  3221               	rrcf	??___flmul^0,f,c
  9493  0046EC                     u3070:
  9494  0046EC  2EE8               	decfsz	wreg,f,c
  9495  0046EE  EF71  F023         	goto	u3075
  9496  0046F2  5021               	movf	??___flmul^0,w,c
  9497  0046F4  262C               	addwf	___flmul@prod^0,f,c
  9498  0046F6  5022               	movf	(??___flmul+1)^0,w,c
  9499  0046F8  222D               	addwfc	(___flmul@prod+1)^0,f,c
  9500  0046FA  5023               	movf	(??___flmul+2)^0,w,c
  9501  0046FC  222E               	addwfc	(___flmul@prod+2)^0,f,c
  9502  0046FE  5024               	movf	(??___flmul+3)^0,w,c
  9503  004700  222F               	addwfc	(___flmul@prod+3)^0,f,c
  9504  004702  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  9505  004706  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  9506  00470A  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  9507  00470E  6A26               	clrf	___flmul@grs^0,c
  9508  004710  502A               	movf	___flmul@aexp^0,w,c
  9509  004712  C02B  F021         	movff	___flmul@bexp,??___flmul
  9510  004716  6A22               	clrf	(??___flmul+1)^0,c
  9511  004718  2621               	addwf	??___flmul^0,f,c
  9512  00471A  0E00               	movlw	0
  9513  00471C  2222               	addwfc	(??___flmul+1)^0,f,c
  9514  00471E  0E82               	movlw	130
  9515  004720  2421               	addwf	??___flmul^0,w,c
  9516  004722  6E30               	movwf	___flmul@temp^0,c
  9517  004724  0EFF               	movlw	255
  9518  004726  2022               	addwfc	(??___flmul+1)^0,w,c
  9519  004728  6E31               	movwf	(___flmul@temp+1)^0,c
  9520  00472A  EFAC  F023         	goto	l3992
  9521  00472E                     l3986:
  9522  00472E  90D8               	bcf	status,0,c
  9523  004730  362C               	rlcf	___flmul@prod^0,f,c
  9524  004732  362D               	rlcf	(___flmul@prod+1)^0,f,c
  9525  004734  362E               	rlcf	(___flmul@prod+2)^0,f,c
  9526  004736  362F               	rlcf	(___flmul@prod+3)^0,f,c
  9527  004738  AE29               	btfss	(___flmul@grs+3)^0,7,c
  9528  00473A  EFA1  F023         	goto	u3081
  9529  00473E  EFA3  F023         	goto	u3080
  9530  004742                     u3081:
  9531  004742  EFA4  F023         	goto	l1317
  9532  004746                     u3080:
  9533  004746  802C               	bsf	___flmul@prod^0,0,c
  9534  004748                     l1317:
  9535  004748  90D8               	bcf	status,0,c
  9536  00474A  3626               	rlcf	___flmul@grs^0,f,c
  9537  00474C  3627               	rlcf	(___flmul@grs+1)^0,f,c
  9538  00474E  3628               	rlcf	(___flmul@grs+2)^0,f,c
  9539  004750  3629               	rlcf	(___flmul@grs+3)^0,f,c
  9540  004752  0630               	decf	___flmul@temp^0,f,c
  9541  004754  A0D8               	btfss	status,0,c
  9542  004756  0631               	decf	(___flmul@temp+1)^0,f,c
  9543  004758                     l3992:
  9544  004758  AE2E               	btfss	(___flmul@prod+2)^0,7,c
  9545  00475A  EFB1  F023         	goto	u3091
  9546  00475E  EFB3  F023         	goto	u3090
  9547  004762                     u3091:
  9548  004762  EF97  F023         	goto	l3986
  9549  004766                     u3090:
  9550  004766  0E00               	movlw	0
  9551  004768  6E2A               	movwf	___flmul@aexp^0,c
  9552  00476A  AE29               	btfss	(___flmul@grs+3)^0,7,c
  9553  00476C  EFBA  F023         	goto	u3101
  9554  004770  EFBC  F023         	goto	u3100
  9555  004774                     u3101:
  9556  004774  EFE0  F023         	goto	l1319
  9557  004778                     u3100:
  9558  004778  0EFF               	movlw	255
  9559  00477A  1426               	andwf	___flmul@grs^0,w,c
  9560  00477C  6E21               	movwf	??___flmul^0,c
  9561  00477E  0EFF               	movlw	255
  9562  004780  1427               	andwf	(___flmul@grs+1)^0,w,c
  9563  004782  6E22               	movwf	(??___flmul+1)^0,c
  9564  004784  0EFF               	movlw	255
  9565  004786  1428               	andwf	(___flmul@grs+2)^0,w,c
  9566  004788  6E23               	movwf	(??___flmul+2)^0,c
  9567  00478A  0E7F               	movlw	127
  9568  00478C  1429               	andwf	(___flmul@grs+3)^0,w,c
  9569  00478E  6E24               	movwf	(??___flmul+3)^0,c
  9570  004790  5021               	movf	??___flmul^0,w,c
  9571  004792  1022               	iorwf	(??___flmul+1)^0,w,c
  9572  004794  1023               	iorwf	(??___flmul+2)^0,w,c
  9573  004796  1024               	iorwf	(??___flmul+3)^0,w,c
  9574  004798  B4D8               	btfsc	status,2,c
  9575  00479A  EFD1  F023         	goto	u3111
  9576  00479E  EFD3  F023         	goto	u3110
  9577  0047A2                     u3111:
  9578  0047A2  EFD7  F023         	goto	l1320
  9579  0047A6                     u3110:
  9580  0047A6                     l4000:
  9581  0047A6  0E01               	movlw	1
  9582  0047A8  6E2A               	movwf	___flmul@aexp^0,c
  9583  0047AA  EFE0  F023         	goto	l1319
  9584  0047AE                     l1320:
  9585  0047AE  A02C               	btfss	___flmul@prod^0,0,c
  9586  0047B0  EFDC  F023         	goto	u3121
  9587  0047B4  EFDE  F023         	goto	u3120
  9588  0047B8                     u3121:
  9589  0047B8  EFE0  F023         	goto	l1319
  9590  0047BC                     u3120:
  9591  0047BC  EFD3  F023         	goto	l4000
  9592  0047C0                     l1319:
  9593  0047C0  502A               	movf	___flmul@aexp^0,w,c
  9594  0047C2  B4D8               	btfsc	status,2,c
  9595  0047C4  EFE6  F023         	goto	u3131
  9596  0047C8  EFE8  F023         	goto	u3130
  9597  0047CC                     u3131:
  9598  0047CC  EF0C  F024         	goto	l4012
  9599  0047D0                     u3130:
  9600  0047D0  0E01               	movlw	1
  9601  0047D2  262C               	addwf	___flmul@prod^0,f,c
  9602  0047D4  0E00               	movlw	0
  9603  0047D6  222D               	addwfc	(___flmul@prod+1)^0,f,c
  9604  0047D8  222E               	addwfc	(___flmul@prod+2)^0,f,c
  9605  0047DA  222F               	addwfc	(___flmul@prod+3)^0,f,c
  9606  0047DC  A02F               	btfss	(___flmul@prod+3)^0,0,c
  9607  0047DE  EFF3  F023         	goto	u3141
  9608  0047E2  EFF5  F023         	goto	u3140
  9609  0047E6                     u3141:
  9610  0047E6  EF0C  F024         	goto	l4012
  9611  0047EA                     u3140:
  9612  0047EA  C02C  F021         	movff	___flmul@prod,??___flmul
  9613  0047EE  C02D  F022         	movff	___flmul@prod+1,??___flmul+1
  9614  0047F2  C02E  F023         	movff	___flmul@prod+2,??___flmul+2
  9615  0047F6  C02F  F024         	movff	___flmul@prod+3,??___flmul+3
  9616  0047FA  3424               	rlcf	(??___flmul+3)^0,w,c
  9617  0047FC  3224               	rrcf	(??___flmul+3)^0,f,c
  9618  0047FE  3223               	rrcf	(??___flmul+2)^0,f,c
  9619  004800  3222               	rrcf	(??___flmul+1)^0,f,c
  9620  004802  3221               	rrcf	??___flmul^0,f,c
  9621  004804  C021  F02C         	movff	??___flmul,___flmul@prod
  9622  004808  C022  F02D         	movff	??___flmul+1,___flmul@prod+1
  9623  00480C  C023  F02E         	movff	??___flmul+2,___flmul@prod+2
  9624  004810  C024  F02F         	movff	??___flmul+3,___flmul@prod+3
  9625  004814  4A30               	infsnz	___flmul@temp^0,f,c
  9626  004816  2A31               	incf	(___flmul@temp+1)^0,f,c
  9627  004818                     l4012:
  9628  004818  BE31               	btfsc	(___flmul@temp+1)^0,7,c
  9629  00481A  EF17  F024         	goto	u3151
  9630  00481E  5031               	movf	(___flmul@temp+1)^0,w,c
  9631  004820  E108               	bnz	u3150
  9632  004822  2830               	incf	___flmul@temp^0,w,c
  9633  004824  A0D8               	btfss	status,0,c
  9634  004826  EF17  F024         	goto	u3151
  9635  00482A  EF19  F024         	goto	u3150
  9636  00482E                     u3151:
  9637  00482E  EF23  F024         	goto	l4016
  9638  004832                     u3150:
  9639  004832  0E00               	movlw	0
  9640  004834  6E2C               	movwf	___flmul@prod^0,c
  9641  004836  0E00               	movlw	0
  9642  004838  6E2D               	movwf	(___flmul@prod+1)^0,c
  9643  00483A  0E80               	movlw	128
  9644  00483C  6E2E               	movwf	(___flmul@prod+2)^0,c
  9645  00483E  0E7F               	movlw	127
  9646  004840  6E2F               	movwf	(___flmul@prod+3)^0,c
  9647  004842  EF51  F024         	goto	l4028
  9648  004846                     l4016:
  9649  004846  BE31               	btfsc	(___flmul@temp+1)^0,7,c
  9650  004848  EF30  F024         	goto	u3160
  9651  00484C  5031               	movf	(___flmul@temp+1)^0,w,c
  9652  00484E  E106               	bnz	u3161
  9653  004850  0430               	decf	___flmul@temp^0,w,c
  9654  004852  B0D8               	btfsc	status,0,c
  9655  004854  EF2E  F024         	goto	u3161
  9656  004858  EF30  F024         	goto	u3160
  9657  00485C                     u3161:
  9658  00485C  EF3C  F024         	goto	l1327
  9659  004860                     u3160:
  9660  004860  0E00               	movlw	0
  9661  004862  6E2C               	movwf	___flmul@prod^0,c
  9662  004864  0E00               	movlw	0
  9663  004866  6E2D               	movwf	(___flmul@prod+1)^0,c
  9664  004868  0E00               	movlw	0
  9665  00486A  6E2E               	movwf	(___flmul@prod+2)^0,c
  9666  00486C  0E00               	movlw	0
  9667  00486E  6E2F               	movwf	(___flmul@prod+3)^0,c
  9668  004870  0E00               	movlw	0
  9669  004872  6E25               	movwf	___flmul@sign^0,c
  9670  004874  EF51  F024         	goto	l4028
  9671  004878                     l1327:
  9672  004878  C030  F02B         	movff	___flmul@temp,___flmul@bexp
  9673  00487C  0EFF               	movlw	255
  9674  00487E  162C               	andwf	___flmul@prod^0,f,c
  9675  004880  0EFF               	movlw	255
  9676  004882  162D               	andwf	(___flmul@prod+1)^0,f,c
  9677  004884  0E7F               	movlw	127
  9678  004886  162E               	andwf	(___flmul@prod+2)^0,f,c
  9679  004888  0E00               	movlw	0
  9680  00488A  162F               	andwf	(___flmul@prod+3)^0,f,c
  9681  00488C  A02B               	btfss	___flmul@bexp^0,0,c
  9682  00488E  EF4B  F024         	goto	u3171
  9683  004892  EF4D  F024         	goto	u3170
  9684  004896                     u3171:
  9685  004896  EF4E  F024         	goto	l4026
  9686  00489A                     u3170:
  9687  00489A  8E2E               	bsf	(___flmul@prod+2)^0,7,c
  9688  00489C                     l4026:
  9689  00489C  90D8               	bcf	status,0,c
  9690  00489E  302B               	rrcf	___flmul@bexp^0,w,c
  9691  0048A0  6E2F               	movwf	(___flmul@prod+3)^0,c
  9692  0048A2                     l4028:
  9693  0048A2  5025               	movf	___flmul@sign^0,w,c
  9694  0048A4  122F               	iorwf	(___flmul@prod+3)^0,f,c
  9695  0048A6  C02C  F019         	movff	___flmul@prod,?___flmul
  9696  0048AA  C02D  F01A         	movff	___flmul@prod+1,?___flmul+1
  9697  0048AE  C02E  F01B         	movff	___flmul@prod+2,?___flmul+2
  9698  0048B2  C02F  F01C         	movff	___flmul@prod+3,?___flmul+3
  9699  0048B6                     l1314:
  9700  0048B6  0012               	return		;funcret
  9701  0048B8                     __end_of___flmul:
  9702                           	opt callstack 0
  9703                           
  9704 ;; *************** function _fabsf *****************
  9705 ;; Defined at:
  9706 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fabsf.c"
  9707 ;; Parameters:    Size  Location     Type
  9708 ;;  x               4    8[COMRAM] float 
  9709 ;; Auto vars:     Size  Location     Type
  9710 ;;  u               4   12[COMRAM] struct .
  9711 ;; Return value:  Size  Location     Type
  9712 ;;                  4    8[COMRAM] float 
  9713 ;; Registers used:
  9714 ;;		status,2, status,0
  9715 ;; Tracked objects:
  9716 ;;		On entry : 0/0
  9717 ;;		On exit  : 0/0
  9718 ;;		Unchanged: 0/0
  9719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9720 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9721 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9723 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9724 ;;Total ram usage:        8 bytes
  9725 ;; Hardware stack levels used:    1
  9726 ;; Hardware stack levels required when called:    3
  9727 ;; This function calls:
  9728 ;;		Nothing
  9729 ;; This function is called by:
  9730 ;;		_powf
  9731 ;; This function uses a non-reentrant model
  9732 ;;
  9733                           
  9734                           	psect	text24
  9735  006686                     __ptext24:
  9736                           	opt callstack 0
  9737  006686                     _fabsf:
  9738                           	opt callstack 23
  9739  006686  C0AF  F00D         	movff	fabsf@F463,fabsf@u
  9740  00668A  C0B0  F00E         	movff	fabsf@F463+1,fabsf@u+1
  9741  00668E  C0B1  F00F         	movff	fabsf@F463+2,fabsf@u+2
  9742  006692  C0B2  F010         	movff	fabsf@F463+3,fabsf@u+3
  9743  006696  C009  F00D         	movff	fabsf@x,fabsf@u
  9744  00669A  C00A  F00E         	movff	fabsf@x+1,fabsf@u+1
  9745  00669E  C00B  F00F         	movff	fabsf@x+2,fabsf@u+2
  9746  0066A2  C00C  F010         	movff	fabsf@x+3,fabsf@u+3
  9747  0066A6  9E10               	bcf	(fabsf@u+3)^0,7,c
  9748  0066A8  C00D  F009         	movff	fabsf@u,?_fabsf
  9749  0066AC  C00E  F00A         	movff	fabsf@u+1,?_fabsf+1
  9750  0066B0  C00F  F00B         	movff	fabsf@u+2,?_fabsf+2
  9751  0066B4  C010  F00C         	movff	fabsf@u+3,?_fabsf+3
  9752  0066B8  0012               	return		;funcret
  9753  0066BA                     __end_of_fabsf:
  9754                           	opt callstack 0
  9755                           
  9756 ;; *************** function ___xxtofl *****************
  9757 ;; Defined at:
  9758 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  9759 ;; Parameters:    Size  Location     Type
  9760 ;;  sign            1    wreg     unsigned char 
  9761 ;;  val             4    8[COMRAM] long 
  9762 ;; Auto vars:     Size  Location     Type
  9763 ;;  sign            1   16[COMRAM] unsigned char 
  9764 ;;  arg             4   18[COMRAM] unsigned long 
  9765 ;;  exp             1   17[COMRAM] unsigned char 
  9766 ;; Return value:  Size  Location     Type
  9767 ;;                  4    8[COMRAM] unsigned char 
  9768 ;; Registers used:
  9769 ;;		wreg, status,2, status,0
  9770 ;; Tracked objects:
  9771 ;;		On entry : 0/0
  9772 ;;		On exit  : 0/0
  9773 ;;		Unchanged: 0/0
  9774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9775 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9776 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9777 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9778 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9779 ;;Total ram usage:       14 bytes
  9780 ;; Hardware stack levels used:    1
  9781 ;; Hardware stack levels required when called:    3
  9782 ;; This function calls:
  9783 ;;		Nothing
  9784 ;; This function is called by:
  9785 ;;		_powf
  9786 ;; This function uses a non-reentrant model
  9787 ;;
  9788                           
  9789                           	psect	text25
  9790  005370                     __ptext25:
  9791                           	opt callstack 0
  9792  005370                     ___xxtofl:
  9793                           	opt callstack 23
  9794                           
  9795                           ;incstack = 0
  9796                           ;___xxtofl@sign stored from wreg
  9797  005370  6E11               	movwf	___xxtofl@sign^0,c
  9798  005372  5011               	movf	___xxtofl@sign^0,w,c
  9799  005374  B4D8               	btfsc	status,2,c
  9800  005376  EFBF  F029         	goto	u3471
  9801  00537A  EFC1  F029         	goto	u3470
  9802  00537E                     u3471:
  9803  00537E  EFE3  F029         	goto	l1351
  9804  005382                     u3470:
  9805  005382  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  9806  005384  EFC8  F029         	goto	u3480
  9807  005388  EFC6  F029         	goto	u3481
  9808  00538C                     u3481:
  9809  00538C  EFE3  F029         	goto	l1351
  9810  005390                     u3480:
  9811  005390  C009  F00D         	movff	___xxtofl@val,??___xxtofl
  9812  005394  C00A  F00E         	movff	___xxtofl@val+1,??___xxtofl+1
  9813  005398  C00B  F00F         	movff	___xxtofl@val+2,??___xxtofl+2
  9814  00539C  C00C  F010         	movff	___xxtofl@val+3,??___xxtofl+3
  9815  0053A0  1E0D               	comf	??___xxtofl^0,f,c
  9816  0053A2  1E0E               	comf	(??___xxtofl+1)^0,f,c
  9817  0053A4  1E0F               	comf	(??___xxtofl+2)^0,f,c
  9818  0053A6  1E10               	comf	(??___xxtofl+3)^0,f,c
  9819  0053A8  2A0D               	incf	??___xxtofl^0,f,c
  9820  0053AA  0E00               	movlw	0
  9821  0053AC  220E               	addwfc	(??___xxtofl+1)^0,f,c
  9822  0053AE  220F               	addwfc	(??___xxtofl+2)^0,f,c
  9823  0053B0  2210               	addwfc	(??___xxtofl+3)^0,f,c
  9824  0053B2  C00D  F013         	movff	??___xxtofl,___xxtofl@arg
  9825  0053B6  C00E  F014         	movff	??___xxtofl+1,___xxtofl@arg+1
  9826  0053BA  C00F  F015         	movff	??___xxtofl+2,___xxtofl@arg+2
  9827  0053BE  C010  F016         	movff	??___xxtofl+3,___xxtofl@arg+3
  9828  0053C2  EFEB  F029         	goto	l4252
  9829  0053C6                     l1351:
  9830  0053C6  C009  F013         	movff	___xxtofl@val,___xxtofl@arg
  9831  0053CA  C00A  F014         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9832  0053CE  C00B  F015         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9833  0053D2  C00C  F016         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9834  0053D6                     l4252:
  9835  0053D6  5009               	movf	___xxtofl@val^0,w,c
  9836  0053D8  100A               	iorwf	(___xxtofl@val+1)^0,w,c
  9837  0053DA  100B               	iorwf	(___xxtofl@val+2)^0,w,c
  9838  0053DC  100C               	iorwf	(___xxtofl@val+3)^0,w,c
  9839  0053DE  A4D8               	btfss	status,2,c
  9840  0053E0  EFF4  F029         	goto	u3491
  9841  0053E4  EFF6  F029         	goto	u3490
  9842  0053E8                     u3491:
  9843  0053E8  EF00  F02A         	goto	l4258
  9844  0053EC                     u3490:
  9845  0053EC  0E00               	movlw	0
  9846  0053EE  6E09               	movwf	?___xxtofl^0,c
  9847  0053F0  0E00               	movlw	0
  9848  0053F2  6E0A               	movwf	(?___xxtofl+1)^0,c
  9849  0053F4  0E00               	movlw	0
  9850  0053F6  6E0B               	movwf	(?___xxtofl+2)^0,c
  9851  0053F8  0E00               	movlw	0
  9852  0053FA  6E0C               	movwf	(?___xxtofl+3)^0,c
  9853  0053FC  EF91  F02A         	goto	l1354
  9854  005400                     l4258:
  9855  005400  0E96               	movlw	150
  9856  005402  6E12               	movwf	___xxtofl@exp^0,c
  9857  005404  EF0A  F02A         	goto	l4262
  9858  005408                     l4260:
  9859  005408  2A12               	incf	___xxtofl@exp^0,f,c
  9860  00540A  90D8               	bcf	status,0,c
  9861  00540C  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  9862  00540E  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  9863  005410  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  9864  005412  3213               	rrcf	___xxtofl@arg^0,f,c
  9865  005414                     l4262:
  9866  005414  0E00               	movlw	0
  9867  005416  1413               	andwf	___xxtofl@arg^0,w,c
  9868  005418  6E0D               	movwf	??___xxtofl^0,c
  9869  00541A  0E00               	movlw	0
  9870  00541C  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  9871  00541E  6E0E               	movwf	(??___xxtofl+1)^0,c
  9872  005420  0E00               	movlw	0
  9873  005422  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  9874  005424  6E0F               	movwf	(??___xxtofl+2)^0,c
  9875  005426  0EFE               	movlw	254
  9876  005428  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  9877  00542A  6E10               	movwf	(??___xxtofl+3)^0,c
  9878  00542C  500D               	movf	??___xxtofl^0,w,c
  9879  00542E  100E               	iorwf	(??___xxtofl+1)^0,w,c
  9880  005430  100F               	iorwf	(??___xxtofl+2)^0,w,c
  9881  005432  1010               	iorwf	(??___xxtofl+3)^0,w,c
  9882  005434  A4D8               	btfss	status,2,c
  9883  005436  EF1F  F02A         	goto	u3501
  9884  00543A  EF21  F02A         	goto	u3500
  9885  00543E                     u3501:
  9886  00543E  EF04  F02A         	goto	l4260
  9887  005442                     u3500:
  9888  005442  EF2F  F02A         	goto	l1358
  9889  005446                     l4264:
  9890  005446  2A12               	incf	___xxtofl@exp^0,f,c
  9891  005448  0E01               	movlw	1
  9892  00544A  2613               	addwf	___xxtofl@arg^0,f,c
  9893  00544C  0E00               	movlw	0
  9894  00544E  2214               	addwfc	(___xxtofl@arg+1)^0,f,c
  9895  005450  2215               	addwfc	(___xxtofl@arg+2)^0,f,c
  9896  005452  2216               	addwfc	(___xxtofl@arg+3)^0,f,c
  9897  005454  90D8               	bcf	status,0,c
  9898  005456  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  9899  005458  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  9900  00545A  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  9901  00545C  3213               	rrcf	___xxtofl@arg^0,f,c
  9902  00545E                     l1358:
  9903  00545E  0E00               	movlw	0
  9904  005460  1413               	andwf	___xxtofl@arg^0,w,c
  9905  005462  6E0D               	movwf	??___xxtofl^0,c
  9906  005464  0E00               	movlw	0
  9907  005466  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  9908  005468  6E0E               	movwf	(??___xxtofl+1)^0,c
  9909  00546A  0E00               	movlw	0
  9910  00546C  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  9911  00546E  6E0F               	movwf	(??___xxtofl+2)^0,c
  9912  005470  0EFF               	movlw	255
  9913  005472  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  9914  005474  6E10               	movwf	(??___xxtofl+3)^0,c
  9915  005476  500D               	movf	??___xxtofl^0,w,c
  9916  005478  100E               	iorwf	(??___xxtofl+1)^0,w,c
  9917  00547A  100F               	iorwf	(??___xxtofl+2)^0,w,c
  9918  00547C  1010               	iorwf	(??___xxtofl+3)^0,w,c
  9919  00547E  A4D8               	btfss	status,2,c
  9920  005480  EF44  F02A         	goto	u3511
  9921  005484  EF46  F02A         	goto	u3510
  9922  005488                     u3511:
  9923  005488  EF23  F02A         	goto	l4264
  9924  00548C                     u3510:
  9925  00548C  EF4E  F02A         	goto	l4272
  9926  005490                     l4270:
  9927  005490  0612               	decf	___xxtofl@exp^0,f,c
  9928  005492  90D8               	bcf	status,0,c
  9929  005494  3613               	rlcf	___xxtofl@arg^0,f,c
  9930  005496  3614               	rlcf	(___xxtofl@arg+1)^0,f,c
  9931  005498  3615               	rlcf	(___xxtofl@arg+2)^0,f,c
  9932  00549A  3616               	rlcf	(___xxtofl@arg+3)^0,f,c
  9933  00549C                     l4272:
  9934  00549C  BE15               	btfsc	(___xxtofl@arg+2)^0,7,c
  9935  00549E  EF53  F02A         	goto	u3521
  9936  0054A2  EF55  F02A         	goto	u3520
  9937  0054A6                     u3521:
  9938  0054A6  EF5D  F02A         	goto	l1365
  9939  0054AA                     u3520:
  9940  0054AA  0E02               	movlw	2
  9941  0054AC  6012               	cpfslt	___xxtofl@exp^0,c
  9942  0054AE  EF5B  F02A         	goto	u3531
  9943  0054B2  EF5D  F02A         	goto	u3530
  9944  0054B6                     u3531:
  9945  0054B6  EF48  F02A         	goto	l4270
  9946  0054BA                     u3530:
  9947  0054BA                     l1365:
  9948  0054BA  B012               	btfsc	___xxtofl@exp^0,0,c
  9949  0054BC  EF62  F02A         	goto	u3541
  9950  0054C0  EF64  F02A         	goto	u3540
  9951  0054C4                     u3541:
  9952  0054C4  EF65  F02A         	goto	l4278
  9953  0054C8                     u3540:
  9954  0054C8  9E15               	bcf	(___xxtofl@arg+2)^0,7,c
  9955  0054CA                     l4278:
  9956  0054CA  90D8               	bcf	status,0,c
  9957  0054CC  3212               	rrcf	___xxtofl@exp^0,f,c
  9958  0054CE  C012  F00D         	movff	___xxtofl@exp,??___xxtofl
  9959  0054D2  6A0E               	clrf	(??___xxtofl+1)^0,c
  9960  0054D4  6A0F               	clrf	(??___xxtofl+2)^0,c
  9961  0054D6  6A10               	clrf	(??___xxtofl+3)^0,c
  9962  0054D8  C00D  F010         	movff	??___xxtofl,??___xxtofl+3
  9963  0054DC  6A0F               	clrf	(??___xxtofl+2)^0,c
  9964  0054DE  6A0E               	clrf	(??___xxtofl+1)^0,c
  9965  0054E0  6A0D               	clrf	??___xxtofl^0,c
  9966  0054E2  500D               	movf	??___xxtofl^0,w,c
  9967  0054E4  1213               	iorwf	___xxtofl@arg^0,f,c
  9968  0054E6  500E               	movf	(??___xxtofl+1)^0,w,c
  9969  0054E8  1214               	iorwf	(___xxtofl@arg+1)^0,f,c
  9970  0054EA  500F               	movf	(??___xxtofl+2)^0,w,c
  9971  0054EC  1215               	iorwf	(___xxtofl@arg+2)^0,f,c
  9972  0054EE  5010               	movf	(??___xxtofl+3)^0,w,c
  9973  0054F0  1216               	iorwf	(___xxtofl@arg+3)^0,f,c
  9974  0054F2  5011               	movf	___xxtofl@sign^0,w,c
  9975  0054F4  B4D8               	btfsc	status,2,c
  9976  0054F6  EF7F  F02A         	goto	u3551
  9977  0054FA  EF81  F02A         	goto	u3550
  9978  0054FE                     u3551:
  9979  0054FE  EF89  F02A         	goto	l4288
  9980  005502                     u3550:
  9981  005502  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  9982  005504  EF88  F02A         	goto	u3560
  9983  005508  EF86  F02A         	goto	u3561
  9984  00550C                     u3561:
  9985  00550C  EF89  F02A         	goto	l4288
  9986  005510                     u3560:
  9987  005510  8E16               	bsf	(___xxtofl@arg+3)^0,7,c
  9988  005512                     l4288:
  9989  005512  C013  F009         	movff	___xxtofl@arg,?___xxtofl
  9990  005516  C014  F00A         	movff	___xxtofl@arg+1,?___xxtofl+1
  9991  00551A  C015  F00B         	movff	___xxtofl@arg+2,?___xxtofl+2
  9992  00551E  C016  F00C         	movff	___xxtofl@arg+3,?___xxtofl+3
  9993  005522                     l1354:
  9994  005522  0012               	return		;funcret
  9995  005524                     __end_of___xxtofl:
  9996                           	opt callstack 0
  9997                           
  9998 ;; *************** function ___flsub *****************
  9999 ;; Defined at:
 10000 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 10001 ;; Parameters:    Size  Location     Type
 10002 ;;  b               4   49[COMRAM] unsigned char 
 10003 ;;  a               4   53[COMRAM] unsigned char 
 10004 ;; Auto vars:     Size  Location     Type
 10005 ;;		None
 10006 ;; Return value:  Size  Location     Type
 10007 ;;                  4   49[COMRAM] unsigned char 
 10008 ;; Registers used:
 10009 ;;		wreg, status,2, status,0, cstack
 10010 ;; Tracked objects:
 10011 ;;		On entry : 0/0
 10012 ;;		On exit  : 0/0
 10013 ;;		Unchanged: 0/0
 10014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10015 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10018 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10019 ;;Total ram usage:        8 bytes
 10020 ;; Hardware stack levels used:    1
 10021 ;; Hardware stack levels required when called:    4
 10022 ;; This function calls:
 10023 ;;		___fladd
 10024 ;; This function is called by:
 10025 ;;		_powf
 10026 ;; This function uses a non-reentrant model
 10027 ;;
 10028                           
 10029                           	psect	text26
 10030  006510                     __ptext26:
 10031                           	opt callstack 0
 10032  006510                     ___flsub:
 10033                           	opt callstack 22
 10034  006510  0E00               	movlw	0
 10035  006512  1A36               	xorwf	___flsub@a^0,f,c
 10036  006514  0E00               	movlw	0
 10037  006516  1A37               	xorwf	(___flsub@a+1)^0,f,c
 10038  006518  0E00               	movlw	0
 10039  00651A  1A38               	xorwf	(___flsub@a+2)^0,f,c
 10040  00651C  0E80               	movlw	128
 10041  00651E  1A39               	xorwf	(___flsub@a+3)^0,f,c
 10042  006520  C032  F009         	movff	___flsub@b,___fladd@b
 10043  006524  C033  F00A         	movff	___flsub@b+1,___fladd@b+1
 10044  006528  C034  F00B         	movff	___flsub@b+2,___fladd@b+2
 10045  00652C  C035  F00C         	movff	___flsub@b+3,___fladd@b+3
 10046  006530  C036  F00D         	movff	___flsub@a,___fladd@a
 10047  006534  C037  F00E         	movff	___flsub@a+1,___fladd@a+1
 10048  006538  C038  F00F         	movff	___flsub@a+2,___fladd@a+2
 10049  00653C  C039  F010         	movff	___flsub@a+3,___fladd@a+3
 10050  006540  ECE7  F01F         	call	___fladd	;wreg free
 10051  006544  C009  F032         	movff	?___fladd,?___flsub
 10052  006548  C00A  F033         	movff	?___fladd+1,?___flsub+1
 10053  00654C  C00B  F034         	movff	?___fladd+2,?___flsub+2
 10054  006550  C00C  F035         	movff	?___fladd+3,?___flsub+3
 10055  006554  0012               	return		;funcret
 10056  006556                     __end_of___flsub:
 10057                           	opt callstack 0
 10058                           
 10059 ;; *************** function ___fladd *****************
 10060 ;; Defined at:
 10061 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 10062 ;; Parameters:    Size  Location     Type
 10063 ;;  b               4    8[COMRAM] unsigned char 
 10064 ;;  a               4   12[COMRAM] unsigned char 
 10065 ;; Auto vars:     Size  Location     Type
 10066 ;;  grs             1   23[COMRAM] unsigned char 
 10067 ;;  bexp            1   22[COMRAM] unsigned char 
 10068 ;;  aexp            1   21[COMRAM] unsigned char 
 10069 ;;  signs           1   20[COMRAM] unsigned char 
 10070 ;; Return value:  Size  Location     Type
 10071 ;;                  4    8[COMRAM] unsigned char 
 10072 ;; Registers used:
 10073 ;;		wreg, status,2, status,0
 10074 ;; Tracked objects:
 10075 ;;		On entry : 0/0
 10076 ;;		On exit  : 0/0
 10077 ;;		Unchanged: 0/0
 10078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10079 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10080 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10081 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10082 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10083 ;;Total ram usage:       16 bytes
 10084 ;; Hardware stack levels used:    1
 10085 ;; Hardware stack levels required when called:    3
 10086 ;; This function calls:
 10087 ;;		Nothing
 10088 ;; This function is called by:
 10089 ;;		___flsub
 10090 ;;		_powf
 10091 ;;		_sqrtf
 10092 ;; This function uses a non-reentrant model
 10093 ;;
 10094                           
 10095                           	psect	text27
 10096  003FCE                     __ptext27:
 10097                           	opt callstack 0
 10098  003FCE                     ___fladd:
 10099                           	opt callstack 22
 10100  003FCE  500C               	movf	(___fladd@b+3)^0,w,c
 10101  003FD0  0B80               	andlw	128
 10102  003FD2  6E15               	movwf	___fladd@signs^0,c
 10103  003FD4  500C               	movf	(___fladd@b+3)^0,w,c
 10104  003FD6  240C               	addwf	(___fladd@b+3)^0,w,c
 10105  003FD8  6E17               	movwf	___fladd@bexp^0,c
 10106  003FDA  AE0B               	btfss	(___fladd@b+2)^0,7,c
 10107  003FDC  EFF2  F01F         	goto	u2601
 10108  003FE0  EFF4  F01F         	goto	u2600
 10109  003FE4                     u2601:
 10110  003FE4  EFF5  F01F         	goto	l3708
 10111  003FE8                     u2600:
 10112  003FE8  8017               	bsf	___fladd@bexp^0,0,c
 10113  003FEA                     l3708:
 10114  003FEA  5017               	movf	___fladd@bexp^0,w,c
 10115  003FEC  B4D8               	btfsc	status,2,c
 10116  003FEE  EFFB  F01F         	goto	u2611
 10117  003FF2  EFFD  F01F         	goto	u2610
 10118  003FF6                     u2611:
 10119  003FF6  EF12  F020         	goto	l3718
 10120  003FFA                     u2610:
 10121  003FFA  2817               	incf	___fladd@bexp^0,w,c
 10122  003FFC  A4D8               	btfss	status,2,c
 10123  003FFE  EF03  F020         	goto	u2621
 10124  004002  EF05  F020         	goto	u2620
 10125  004006                     u2621:
 10126  004006  EF0D  F020         	goto	l3714
 10127  00400A                     u2620:
 10128  00400A  0E00               	movlw	0
 10129  00400C  6E09               	movwf	___fladd@b^0,c
 10130  00400E  0E00               	movlw	0
 10131  004010  6E0A               	movwf	(___fladd@b+1)^0,c
 10132  004012  0E00               	movlw	0
 10133  004014  6E0B               	movwf	(___fladd@b+2)^0,c
 10134  004016  0E00               	movlw	0
 10135  004018  6E0C               	movwf	(___fladd@b+3)^0,c
 10136  00401A                     l3714:
 10137  00401A  8E0B               	bsf	(___fladd@b+2)^0,7,c
 10138  00401C  0E00               	movlw	0
 10139  00401E  6E0C               	movwf	(___fladd@b+3)^0,c
 10140  004020  EF1A  F020         	goto	l3720
 10141  004024                     l3718:
 10142  004024  0E00               	movlw	0
 10143  004026  6E09               	movwf	___fladd@b^0,c
 10144  004028  0E00               	movlw	0
 10145  00402A  6E0A               	movwf	(___fladd@b+1)^0,c
 10146  00402C  0E00               	movlw	0
 10147  00402E  6E0B               	movwf	(___fladd@b+2)^0,c
 10148  004030  0E00               	movlw	0
 10149  004032  6E0C               	movwf	(___fladd@b+3)^0,c
 10150  004034                     l3720:
 10151  004034  5010               	movf	(___fladd@a+3)^0,w,c
 10152  004036  0B80               	andlw	128
 10153  004038  6E16               	movwf	___fladd@aexp^0,c
 10154  00403A  5015               	movf	___fladd@signs^0,w,c
 10155  00403C  1816               	xorwf	___fladd@aexp^0,w,c
 10156  00403E  B4D8               	btfsc	status,2,c
 10157  004040  EF24  F020         	goto	u2631
 10158  004044  EF26  F020         	goto	u2630
 10159  004048                     u2631:
 10160  004048  EF27  F020         	goto	l3726
 10161  00404C                     u2630:
 10162  00404C  8C15               	bsf	___fladd@signs^0,6,c
 10163  00404E                     l3726:
 10164  00404E  5010               	movf	(___fladd@a+3)^0,w,c
 10165  004050  2410               	addwf	(___fladd@a+3)^0,w,c
 10166  004052  6E16               	movwf	___fladd@aexp^0,c
 10167  004054  AE0F               	btfss	(___fladd@a+2)^0,7,c
 10168  004056  EF2F  F020         	goto	u2641
 10169  00405A  EF31  F020         	goto	u2640
 10170  00405E                     u2641:
 10171  00405E  EF32  F020         	goto	l3732
 10172  004062                     u2640:
 10173  004062  8016               	bsf	___fladd@aexp^0,0,c
 10174  004064                     l3732:
 10175  004064  5016               	movf	___fladd@aexp^0,w,c
 10176  004066  B4D8               	btfsc	status,2,c
 10177  004068  EF38  F020         	goto	u2651
 10178  00406C  EF3A  F020         	goto	u2650
 10179  004070                     u2651:
 10180  004070  EF4F  F020         	goto	l3742
 10181  004074                     u2650:
 10182  004074  2816               	incf	___fladd@aexp^0,w,c
 10183  004076  A4D8               	btfss	status,2,c
 10184  004078  EF40  F020         	goto	u2661
 10185  00407C  EF42  F020         	goto	u2660
 10186  004080                     u2661:
 10187  004080  EF4A  F020         	goto	l3738
 10188  004084                     u2660:
 10189  004084  0E00               	movlw	0
 10190  004086  6E0D               	movwf	___fladd@a^0,c
 10191  004088  0E00               	movlw	0
 10192  00408A  6E0E               	movwf	(___fladd@a+1)^0,c
 10193  00408C  0E00               	movlw	0
 10194  00408E  6E0F               	movwf	(___fladd@a+2)^0,c
 10195  004090  0E00               	movlw	0
 10196  004092  6E10               	movwf	(___fladd@a+3)^0,c
 10197  004094                     l3738:
 10198  004094  8E0F               	bsf	(___fladd@a+2)^0,7,c
 10199  004096  0E00               	movlw	0
 10200  004098  6E10               	movwf	(___fladd@a+3)^0,c
 10201  00409A  EF57  F020         	goto	l3744
 10202  00409E                     l3742:
 10203  00409E  0E00               	movlw	0
 10204  0040A0  6E0D               	movwf	___fladd@a^0,c
 10205  0040A2  0E00               	movlw	0
 10206  0040A4  6E0E               	movwf	(___fladd@a+1)^0,c
 10207  0040A6  0E00               	movlw	0
 10208  0040A8  6E0F               	movwf	(___fladd@a+2)^0,c
 10209  0040AA  0E00               	movlw	0
 10210  0040AC  6E10               	movwf	(___fladd@a+3)^0,c
 10211  0040AE                     l3744:
 10212  0040AE  5017               	movf	___fladd@bexp^0,w,c
 10213  0040B0  5C16               	subwf	___fladd@aexp^0,w,c
 10214  0040B2  B0D8               	btfsc	status,0,c
 10215  0040B4  EF5E  F020         	goto	u2671
 10216  0040B8  EF60  F020         	goto	u2670
 10217  0040BC                     u2671:
 10218  0040BC  EF87  F020         	goto	l3780
 10219  0040C0                     u2670:
 10220  0040C0  AC15               	btfss	___fladd@signs^0,6,c
 10221  0040C2  EF65  F020         	goto	u2681
 10222  0040C6  EF67  F020         	goto	u2680
 10223  0040CA                     u2681:
 10224  0040CA  EF69  F020         	goto	l3750
 10225  0040CE                     u2680:
 10226  0040CE  0E80               	movlw	128
 10227  0040D0  1A15               	xorwf	___fladd@signs^0,f,c
 10228  0040D2                     l3750:
 10229  0040D2  C017  F018         	movff	___fladd@bexp,___fladd@grs
 10230  0040D6  C016  F017         	movff	___fladd@aexp,___fladd@bexp
 10231  0040DA  C018  F016         	movff	___fladd@grs,___fladd@aexp
 10232  0040DE  C009  F018         	movff	___fladd@b,___fladd@grs
 10233  0040E2  C00D  F009         	movff	___fladd@a,___fladd@b
 10234  0040E6  C018  F00D         	movff	___fladd@grs,___fladd@a
 10235  0040EA  C00A  F018         	movff	___fladd@b+1,___fladd@grs
 10236  0040EE  C00E  F00A         	movff	___fladd@a+1,___fladd@b+1
 10237  0040F2  C018  F00E         	movff	___fladd@grs,___fladd@a+1
 10238  0040F6  C00B  F018         	movff	___fladd@b+2,___fladd@grs
 10239  0040FA  C00F  F00B         	movff	___fladd@a+2,___fladd@b+2
 10240  0040FE  C018  F00F         	movff	___fladd@grs,___fladd@a+2
 10241  004102  C00C  F018         	movff	___fladd@b+3,___fladd@grs
 10242  004106  C010  F00C         	movff	___fladd@a+3,___fladd@b+3
 10243  00410A  C018  F010         	movff	___fladd@grs,___fladd@a+3
 10244  00410E                     l3780:
 10245  00410E  0E00               	movlw	0
 10246  004110  6E18               	movwf	___fladd@grs^0,c
 10247  004112  5017               	movf	___fladd@bexp^0,w,c
 10248  004114  C016  F011         	movff	___fladd@aexp,??___fladd
 10249  004118  6A12               	clrf	(??___fladd+1)^0,c
 10250  00411A  5E11               	subwf	??___fladd^0,f,c
 10251  00411C  0E00               	movlw	0
 10252  00411E  5A12               	subwfb	(??___fladd+1)^0,f,c
 10253  004120  BE12               	btfsc	(??___fladd+1)^0,7,c
 10254  004122  EF9C  F020         	goto	u2691
 10255  004126  5012               	movf	(??___fladd+1)^0,w,c
 10256  004128  E109               	bnz	u2690
 10257  00412A  0E1A               	movlw	26
 10258  00412C  5C11               	subwf	??___fladd^0,w,c
 10259  00412E  A0D8               	btfss	status,0,c
 10260  004130  EF9C  F020         	goto	u2691
 10261  004134  EF9E  F020         	goto	u2690
 10262  004138                     u2691:
 10263  004138  EFD5  F020         	goto	l1225
 10264  00413C                     u2690:
 10265  00413C  5009               	movf	___fladd@b^0,w,c
 10266  00413E  100A               	iorwf	(___fladd@b+1)^0,w,c
 10267  004140  100B               	iorwf	(___fladd@b+2)^0,w,c
 10268  004142  100C               	iorwf	(___fladd@b+3)^0,w,c
 10269  004144  A4D8               	btfss	status,2,c
 10270  004146  EFA7  F020         	goto	u2701
 10271  00414A  EFAA  F020         	goto	u2700
 10272  00414E                     u2701:
 10273  00414E  0E01               	movlw	1
 10274  004150  EFAB  F020         	goto	u2710
 10275  004154                     u2700:
 10276  004154  0E00               	movlw	0
 10277  004156                     u2710:
 10278  004156  6E18               	movwf	___fladd@grs^0,c
 10279  004158  0E00               	movlw	0
 10280  00415A  6E09               	movwf	___fladd@b^0,c
 10281  00415C  0E00               	movlw	0
 10282  00415E  6E0A               	movwf	(___fladd@b+1)^0,c
 10283  004160  0E00               	movlw	0
 10284  004162  6E0B               	movwf	(___fladd@b+2)^0,c
 10285  004164  0E00               	movlw	0
 10286  004166  6E0C               	movwf	(___fladd@b+3)^0,c
 10287  004168  C016  F017         	movff	___fladd@aexp,___fladd@bexp
 10288  00416C  EFDE  F020         	goto	l1224
 10289  004170                     l1226:
 10290  004170  A018               	btfss	___fladd@grs^0,0,c
 10291  004172  EFBD  F020         	goto	u2721
 10292  004176  EFBF  F020         	goto	u2720
 10293  00417A                     u2721:
 10294  00417A  EFC5  F020         	goto	l3792
 10295  00417E                     u2720:
 10296  00417E  90D8               	bcf	status,0,c
 10297  004180  3018               	rrcf	___fladd@grs^0,w,c
 10298  004182  0901               	iorlw	1
 10299  004184  6E18               	movwf	___fladd@grs^0,c
 10300  004186  EFC7  F020         	goto	l3794
 10301  00418A                     l3792:
 10302  00418A  90D8               	bcf	status,0,c
 10303  00418C  3218               	rrcf	___fladd@grs^0,f,c
 10304  00418E                     l3794:
 10305  00418E  A009               	btfss	___fladd@b^0,0,c
 10306  004190  EFCC  F020         	goto	u2731
 10307  004194  EFCE  F020         	goto	u2730
 10308  004198                     u2731:
 10309  004198  EFCF  F020         	goto	l3798
 10310  00419C                     u2730:
 10311  00419C  8E18               	bsf	___fladd@grs^0,7,c
 10312  00419E                     l3798:
 10313  00419E  340C               	rlcf	(___fladd@b+3)^0,w,c
 10314  0041A0  320C               	rrcf	(___fladd@b+3)^0,f,c
 10315  0041A2  320B               	rrcf	(___fladd@b+2)^0,f,c
 10316  0041A4  320A               	rrcf	(___fladd@b+1)^0,f,c
 10317  0041A6  3209               	rrcf	___fladd@b^0,f,c
 10318  0041A8  2A17               	incf	___fladd@bexp^0,f,c
 10319  0041AA                     l1225:
 10320  0041AA  5016               	movf	___fladd@aexp^0,w,c
 10321  0041AC  5C17               	subwf	___fladd@bexp^0,w,c
 10322  0041AE  A0D8               	btfss	status,0,c
 10323  0041B0  EFDC  F020         	goto	u2741
 10324  0041B4  EFDE  F020         	goto	u2740
 10325  0041B8                     u2741:
 10326  0041B8  EFB8  F020         	goto	l1226
 10327  0041BC                     u2740:
 10328  0041BC                     l1224:
 10329  0041BC  BC15               	btfsc	___fladd@signs^0,6,c
 10330  0041BE  EFE3  F020         	goto	u2751
 10331  0041C2  EFE5  F020         	goto	u2750
 10332  0041C6                     u2751:
 10333  0041C6  EF25  F021         	goto	l3826
 10334  0041CA                     u2750:
 10335  0041CA  5017               	movf	___fladd@bexp^0,w,c
 10336  0041CC  A4D8               	btfss	status,2,c
 10337  0041CE  EFEB  F020         	goto	u2761
 10338  0041D2  EFED  F020         	goto	u2760
 10339  0041D6                     u2761:
 10340  0041D6  EFF7  F020         	goto	l3808
 10341  0041DA                     u2760:
 10342  0041DA  0E00               	movlw	0
 10343  0041DC  6E09               	movwf	?___fladd^0,c
 10344  0041DE  0E00               	movlw	0
 10345  0041E0  6E0A               	movwf	(?___fladd+1)^0,c
 10346  0041E2  0E00               	movlw	0
 10347  0041E4  6E0B               	movwf	(?___fladd+2)^0,c
 10348  0041E6  0E00               	movlw	0
 10349  0041E8  6E0C               	movwf	(?___fladd+3)^0,c
 10350  0041EA  EF46  F022         	goto	l1233
 10351  0041EE                     l3808:
 10352  0041EE  500D               	movf	___fladd@a^0,w,c
 10353  0041F0  2609               	addwf	___fladd@b^0,f,c
 10354  0041F2  500E               	movf	(___fladd@a+1)^0,w,c
 10355  0041F4  220A               	addwfc	(___fladd@b+1)^0,f,c
 10356  0041F6  500F               	movf	(___fladd@a+2)^0,w,c
 10357  0041F8  220B               	addwfc	(___fladd@b+2)^0,f,c
 10358  0041FA  5010               	movf	(___fladd@a+3)^0,w,c
 10359  0041FC  220C               	addwfc	(___fladd@b+3)^0,f,c
 10360  0041FE  A00C               	btfss	(___fladd@b+3)^0,0,c
 10361  004200  EF04  F021         	goto	u2771
 10362  004204  EF06  F021         	goto	u2770
 10363  004208                     u2771:
 10364  004208  EFB2  F021         	goto	l3862
 10365  00420C                     u2770:
 10366  00420C  A018               	btfss	___fladd@grs^0,0,c
 10367  00420E  EF0B  F021         	goto	u2781
 10368  004212  EF0D  F021         	goto	u2780
 10369  004216                     u2781:
 10370  004216  EF13  F021         	goto	l3816
 10371  00421A                     u2780:
 10372  00421A  90D8               	bcf	status,0,c
 10373  00421C  3018               	rrcf	___fladd@grs^0,w,c
 10374  00421E  0901               	iorlw	1
 10375  004220  6E18               	movwf	___fladd@grs^0,c
 10376  004222  EF15  F021         	goto	l3818
 10377  004226                     l3816:
 10378  004226  90D8               	bcf	status,0,c
 10379  004228  3218               	rrcf	___fladd@grs^0,f,c
 10380  00422A                     l3818:
 10381  00422A  A009               	btfss	___fladd@b^0,0,c
 10382  00422C  EF1A  F021         	goto	u2791
 10383  004230  EF1C  F021         	goto	u2790
 10384  004234                     u2791:
 10385  004234  EF1D  F021         	goto	l3822
 10386  004238                     u2790:
 10387  004238  8E18               	bsf	___fladd@grs^0,7,c
 10388  00423A                     l3822:
 10389  00423A  340C               	rlcf	(___fladd@b+3)^0,w,c
 10390  00423C  320C               	rrcf	(___fladd@b+3)^0,f,c
 10391  00423E  320B               	rrcf	(___fladd@b+2)^0,f,c
 10392  004240  320A               	rrcf	(___fladd@b+1)^0,f,c
 10393  004242  3209               	rrcf	___fladd@b^0,f,c
 10394  004244  2A17               	incf	___fladd@bexp^0,f,c
 10395  004246  EFB2  F021         	goto	l3862
 10396  00424A                     l3826:
 10397  00424A  500D               	movf	___fladd@a^0,w,c
 10398  00424C  5C09               	subwf	___fladd@b^0,w,c
 10399  00424E  500E               	movf	(___fladd@a+1)^0,w,c
 10400  004250  580A               	subwfb	(___fladd@b+1)^0,w,c
 10401  004252  500F               	movf	(___fladd@a+2)^0,w,c
 10402  004254  580B               	subwfb	(___fladd@b+2)^0,w,c
 10403  004256  500C               	movf	(___fladd@b+3)^0,w,c
 10404  004258  0A80               	xorlw	128
 10405  00425A  6E11               	movwf	??___fladd^0,c
 10406  00425C  5010               	movf	(___fladd@a+3)^0,w,c
 10407  00425E  0A80               	xorlw	128
 10408  004260  5811               	subwfb	??___fladd^0,w,c
 10409  004262  B0D8               	btfsc	status,0,c
 10410  004264  EF36  F021         	goto	u2801
 10411  004268  EF38  F021         	goto	u2800
 10412  00426C                     u2801:
 10413  00426C  EF63  F021         	goto	l3836
 10414  004270                     u2800:
 10415  004270  5009               	movf	___fladd@b^0,w,c
 10416  004272  5C0D               	subwf	___fladd@a^0,w,c
 10417  004274  6E11               	movwf	??___fladd^0,c
 10418  004276  500A               	movf	(___fladd@b+1)^0,w,c
 10419  004278  580E               	subwfb	(___fladd@a+1)^0,w,c
 10420  00427A  6E12               	movwf	(??___fladd+1)^0,c
 10421  00427C  500B               	movf	(___fladd@b+2)^0,w,c
 10422  00427E  580F               	subwfb	(___fladd@a+2)^0,w,c
 10423  004280  6E13               	movwf	(??___fladd+2)^0,c
 10424  004282  500C               	movf	(___fladd@b+3)^0,w,c
 10425  004284  5810               	subwfb	(___fladd@a+3)^0,w,c
 10426  004286  6E14               	movwf	(??___fladd+3)^0,c
 10427  004288  0EFF               	movlw	255
 10428  00428A  2411               	addwf	??___fladd^0,w,c
 10429  00428C  6E09               	movwf	___fladd@b^0,c
 10430  00428E  0EFF               	movlw	255
 10431  004290  2012               	addwfc	(??___fladd+1)^0,w,c
 10432  004292  6E0A               	movwf	(___fladd@b+1)^0,c
 10433  004294  0EFF               	movlw	255
 10434  004296  2013               	addwfc	(??___fladd+2)^0,w,c
 10435  004298  6E0B               	movwf	(___fladd@b+2)^0,c
 10436  00429A  0EFF               	movlw	255
 10437  00429C  2014               	addwfc	(??___fladd+3)^0,w,c
 10438  00429E  6E0C               	movwf	(___fladd@b+3)^0,c
 10439  0042A0  0E80               	movlw	128
 10440  0042A2  1A15               	xorwf	___fladd@signs^0,f,c
 10441  0042A4  6C18               	negf	___fladd@grs^0,c
 10442  0042A6  5018               	movf	___fladd@grs^0,w,c
 10443  0042A8  A4D8               	btfss	status,2,c
 10444  0042AA  EF59  F021         	goto	u2811
 10445  0042AE  EF5B  F021         	goto	u2810
 10446  0042B2                     u2811:
 10447  0042B2  EF6B  F021         	goto	l1241
 10448  0042B6                     u2810:
 10449  0042B6  0E01               	movlw	1
 10450  0042B8  2609               	addwf	___fladd@b^0,f,c
 10451  0042BA  0E00               	movlw	0
 10452  0042BC  220A               	addwfc	(___fladd@b+1)^0,f,c
 10453  0042BE  220B               	addwfc	(___fladd@b+2)^0,f,c
 10454  0042C0  220C               	addwfc	(___fladd@b+3)^0,f,c
 10455  0042C2  EF6B  F021         	goto	l1241
 10456  0042C6                     l3836:
 10457  0042C6  500D               	movf	___fladd@a^0,w,c
 10458  0042C8  5E09               	subwf	___fladd@b^0,f,c
 10459  0042CA  500E               	movf	(___fladd@a+1)^0,w,c
 10460  0042CC  5A0A               	subwfb	(___fladd@b+1)^0,f,c
 10461  0042CE  500F               	movf	(___fladd@a+2)^0,w,c
 10462  0042D0  5A0B               	subwfb	(___fladd@b+2)^0,f,c
 10463  0042D2  5010               	movf	(___fladd@a+3)^0,w,c
 10464  0042D4  5A0C               	subwfb	(___fladd@b+3)^0,f,c
 10465  0042D6                     l1241:
 10466  0042D6  5009               	movf	___fladd@b^0,w,c
 10467  0042D8  100A               	iorwf	(___fladd@b+1)^0,w,c
 10468  0042DA  100B               	iorwf	(___fladd@b+2)^0,w,c
 10469  0042DC  100C               	iorwf	(___fladd@b+3)^0,w,c
 10470  0042DE  A4D8               	btfss	status,2,c
 10471  0042E0  EF74  F021         	goto	u2821
 10472  0042E4  EF76  F021         	goto	u2820
 10473  0042E8                     u2821:
 10474  0042E8  EFAB  F021         	goto	l3860
 10475  0042EC                     u2820:
 10476  0042EC  5018               	movf	___fladd@grs^0,w,c
 10477  0042EE  A4D8               	btfss	status,2,c
 10478  0042F0  EF7C  F021         	goto	u2831
 10479  0042F4  EF7E  F021         	goto	u2830
 10480  0042F8                     u2831:
 10481  0042F8  EFAB  F021         	goto	l3860
 10482  0042FC                     u2830:
 10483  0042FC  0E00               	movlw	0
 10484  0042FE  6E09               	movwf	?___fladd^0,c
 10485  004300  0E00               	movlw	0
 10486  004302  6E0A               	movwf	(?___fladd+1)^0,c
 10487  004304  0E00               	movlw	0
 10488  004306  6E0B               	movwf	(?___fladd+2)^0,c
 10489  004308  0E00               	movlw	0
 10490  00430A  6E0C               	movwf	(?___fladd+3)^0,c
 10491  00430C  EF46  F022         	goto	l1233
 10492  004310                     l3844:
 10493  004310  90D8               	bcf	status,0,c
 10494  004312  3609               	rlcf	___fladd@b^0,f,c
 10495  004314  360A               	rlcf	(___fladd@b+1)^0,f,c
 10496  004316  360B               	rlcf	(___fladd@b+2)^0,f,c
 10497  004318  360C               	rlcf	(___fladd@b+3)^0,f,c
 10498  00431A  AE18               	btfss	___fladd@grs^0,7,c
 10499  00431C  EF92  F021         	goto	u2841
 10500  004320  EF94  F021         	goto	u2840
 10501  004324                     u2841:
 10502  004324  EF95  F021         	goto	l3850
 10503  004328                     u2840:
 10504  004328  8009               	bsf	___fladd@b^0,0,c
 10505  00432A                     l3850:
 10506  00432A  A018               	btfss	___fladd@grs^0,0,c
 10507  00432C  EF9A  F021         	goto	u2851
 10508  004330  EF9C  F021         	goto	u2850
 10509  004334                     u2851:
 10510  004334  EFA0  F021         	goto	l3854
 10511  004338                     u2850:
 10512  004338  80D8               	bsf	status,0,c
 10513  00433A  3618               	rlcf	___fladd@grs^0,f,c
 10514  00433C  EFA2  F021         	goto	l3856
 10515  004340                     l3854:
 10516  004340  90D8               	bcf	status,0,c
 10517  004342  3618               	rlcf	___fladd@grs^0,f,c
 10518  004344                     l3856:
 10519  004344  5017               	movf	___fladd@bexp^0,w,c
 10520  004346  B4D8               	btfsc	status,2,c
 10521  004348  EFA8  F021         	goto	u2861
 10522  00434C  EFAA  F021         	goto	u2860
 10523  004350                     u2861:
 10524  004350  EFAB  F021         	goto	l3860
 10525  004354                     u2860:
 10526  004354  0617               	decf	___fladd@bexp^0,f,c
 10527  004356                     l3860:
 10528  004356  AE0B               	btfss	(___fladd@b+2)^0,7,c
 10529  004358  EFB0  F021         	goto	u2871
 10530  00435C  EFB2  F021         	goto	u2870
 10531  004360                     u2871:
 10532  004360  EF88  F021         	goto	l3844
 10533  004364                     u2870:
 10534  004364                     l3862:
 10535  004364  0E00               	movlw	0
 10536  004366  6E16               	movwf	___fladd@aexp^0,c
 10537  004368  AE18               	btfss	___fladd@grs^0,7,c
 10538  00436A  EFB9  F021         	goto	u2881
 10539  00436E  EFBB  F021         	goto	u2880
 10540  004372                     u2881:
 10541  004372  EFD3  F021         	goto	l1250
 10542  004376                     u2880:
 10543  004376  C018  F011         	movff	___fladd@grs,??___fladd
 10544  00437A  0E7F               	movlw	127
 10545  00437C  1611               	andwf	??___fladd^0,f,c
 10546  00437E  B4D8               	btfsc	status,2,c
 10547  004380  EFC4  F021         	goto	u2891
 10548  004384  EFC6  F021         	goto	u2890
 10549  004388                     u2891:
 10550  004388  EFCA  F021         	goto	l1251
 10551  00438C                     u2890:
 10552  00438C                     l3868:
 10553  00438C  0E01               	movlw	1
 10554  00438E  6E16               	movwf	___fladd@aexp^0,c
 10555  004390  EFD3  F021         	goto	l1250
 10556  004394                     l1251:
 10557  004394  A009               	btfss	___fladd@b^0,0,c
 10558  004396  EFCF  F021         	goto	u2901
 10559  00439A  EFD1  F021         	goto	u2900
 10560  00439E                     u2901:
 10561  00439E  EFD3  F021         	goto	l1250
 10562  0043A2                     u2900:
 10563  0043A2  EFC6  F021         	goto	l3868
 10564  0043A6                     l1250:
 10565  0043A6  5016               	movf	___fladd@aexp^0,w,c
 10566  0043A8  B4D8               	btfsc	status,2,c
 10567  0043AA  EFD9  F021         	goto	u2911
 10568  0043AE  EFDB  F021         	goto	u2910
 10569  0043B2                     u2911:
 10570  0043B2  EF06  F022         	goto	l3880
 10571  0043B6                     u2910:
 10572  0043B6  0E01               	movlw	1
 10573  0043B8  2609               	addwf	___fladd@b^0,f,c
 10574  0043BA  0E00               	movlw	0
 10575  0043BC  220A               	addwfc	(___fladd@b+1)^0,f,c
 10576  0043BE  220B               	addwfc	(___fladd@b+2)^0,f,c
 10577  0043C0  220C               	addwfc	(___fladd@b+3)^0,f,c
 10578  0043C2  A00C               	btfss	(___fladd@b+3)^0,0,c
 10579  0043C4  EFE6  F021         	goto	u2921
 10580  0043C8  EFE8  F021         	goto	u2920
 10581  0043CC                     u2921:
 10582  0043CC  EF06  F022         	goto	l3880
 10583  0043D0                     u2920:
 10584  0043D0  C009  F011         	movff	___fladd@b,??___fladd
 10585  0043D4  C00A  F012         	movff	___fladd@b+1,??___fladd+1
 10586  0043D8  C00B  F013         	movff	___fladd@b+2,??___fladd+2
 10587  0043DC  C00C  F014         	movff	___fladd@b+3,??___fladd+3
 10588  0043E0  3414               	rlcf	(??___fladd+3)^0,w,c
 10589  0043E2  3214               	rrcf	(??___fladd+3)^0,f,c
 10590  0043E4  3213               	rrcf	(??___fladd+2)^0,f,c
 10591  0043E6  3212               	rrcf	(??___fladd+1)^0,f,c
 10592  0043E8  3211               	rrcf	??___fladd^0,f,c
 10593  0043EA  C011  F009         	movff	??___fladd,___fladd@b
 10594  0043EE  C012  F00A         	movff	??___fladd+1,___fladd@b+1
 10595  0043F2  C013  F00B         	movff	??___fladd+2,___fladd@b+2
 10596  0043F6  C014  F00C         	movff	??___fladd+3,___fladd@b+3
 10597  0043FA  2817               	incf	___fladd@bexp^0,w,c
 10598  0043FC  B4D8               	btfsc	status,2,c
 10599  0043FE  EF03  F022         	goto	u2931
 10600  004402  EF05  F022         	goto	u2930
 10601  004406                     u2931:
 10602  004406  EF06  F022         	goto	l3880
 10603  00440A                     u2930:
 10604  00440A  2A17               	incf	___fladd@bexp^0,f,c
 10605  00440C                     l3880:
 10606  00440C  2817               	incf	___fladd@bexp^0,w,c
 10607  00440E  B4D8               	btfsc	status,2,c
 10608  004410  EF0C  F022         	goto	u2941
 10609  004414  EF0E  F022         	goto	u2940
 10610  004418                     u2941:
 10611  004418  EF16  F022         	goto	l3884
 10612  00441C                     u2940:
 10613  00441C  5017               	movf	___fladd@bexp^0,w,c
 10614  00441E  A4D8               	btfss	status,2,c
 10615  004420  EF14  F022         	goto	u2951
 10616  004424  EF16  F022         	goto	u2950
 10617  004428                     u2951:
 10618  004428  EF28  F022         	goto	l3888
 10619  00442C                     u2950:
 10620  00442C                     l3884:
 10621  00442C  0E00               	movlw	0
 10622  00442E  6E09               	movwf	___fladd@b^0,c
 10623  004430  0E00               	movlw	0
 10624  004432  6E0A               	movwf	(___fladd@b+1)^0,c
 10625  004434  0E00               	movlw	0
 10626  004436  6E0B               	movwf	(___fladd@b+2)^0,c
 10627  004438  0E00               	movlw	0
 10628  00443A  6E0C               	movwf	(___fladd@b+3)^0,c
 10629  00443C  5017               	movf	___fladd@bexp^0,w,c
 10630  00443E  A4D8               	btfss	status,2,c
 10631  004440  EF24  F022         	goto	u2961
 10632  004444  EF26  F022         	goto	u2960
 10633  004448                     u2961:
 10634  004448  EF28  F022         	goto	l3888
 10635  00444C                     u2960:
 10636  00444C  0E00               	movlw	0
 10637  00444E  6E15               	movwf	___fladd@signs^0,c
 10638  004450                     l3888:
 10639  004450  A017               	btfss	___fladd@bexp^0,0,c
 10640  004452  EF2D  F022         	goto	u2971
 10641  004456  EF2F  F022         	goto	u2970
 10642  00445A                     u2971:
 10643  00445A  EF32  F022         	goto	l3892
 10644  00445E                     u2970:
 10645  00445E  8E0B               	bsf	(___fladd@b+2)^0,7,c
 10646  004460  EF33  F022         	goto	l3894
 10647  004464                     l3892:
 10648  004464  9E0B               	bcf	(___fladd@b+2)^0,7,c
 10649  004466                     l3894:
 10650  004466  90D8               	bcf	status,0,c
 10651  004468  3017               	rrcf	___fladd@bexp^0,w,c
 10652  00446A  6E0C               	movwf	(___fladd@b+3)^0,c
 10653  00446C  AE15               	btfss	___fladd@signs^0,7,c
 10654  00446E  EF3B  F022         	goto	u2981
 10655  004472  EF3D  F022         	goto	u2980
 10656  004476                     u2981:
 10657  004476  EF3E  F022         	goto	l3900
 10658  00447A                     u2980:
 10659  00447A  8E0C               	bsf	(___fladd@b+3)^0,7,c
 10660  00447C                     l3900:
 10661  00447C  C009  F009         	movff	___fladd@b,?___fladd
 10662  004480  C00A  F00A         	movff	___fladd@b+1,?___fladd+1
 10663  004484  C00B  F00B         	movff	___fladd@b+2,?___fladd+2
 10664  004488  C00C  F00C         	movff	___fladd@b+3,?___fladd+3
 10665  00448C                     l1233:
 10666  00448C  0012               	return		;funcret
 10667  00448E                     __end_of___fladd:
 10668                           	opt callstack 0
 10669                           
 10670 ;; *************** function ___flneg *****************
 10671 ;; Defined at:
 10672 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
 10673 ;; Parameters:    Size  Location     Type
 10674 ;;  f1              4    8[COMRAM] unsigned char 
 10675 ;; Auto vars:     Size  Location     Type
 10676 ;;		None
 10677 ;; Return value:  Size  Location     Type
 10678 ;;                  4    8[COMRAM] unsigned char 
 10679 ;; Registers used:
 10680 ;;		wreg, status,2, status,0
 10681 ;; Tracked objects:
 10682 ;;		On entry : 0/0
 10683 ;;		On exit  : 0/0
 10684 ;;		Unchanged: 0/0
 10685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10686 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10689 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10690 ;;Total ram usage:        4 bytes
 10691 ;; Hardware stack levels used:    1
 10692 ;; Hardware stack levels required when called:    3
 10693 ;; This function calls:
 10694 ;;		Nothing
 10695 ;; This function is called by:
 10696 ;;		_powf
 10697 ;; This function uses a non-reentrant model
 10698 ;;
 10699                           
 10700                           	psect	text28
 10701  00664E                     __ptext28:
 10702                           	opt callstack 0
 10703  00664E                     ___flneg:
 10704                           	opt callstack 23
 10705  00664E  5009               	movf	___flneg@f1^0,w,c
 10706  006650  100A               	iorwf	(___flneg@f1+1)^0,w,c
 10707  006652  100B               	iorwf	(___flneg@f1+2)^0,w,c
 10708  006654  100C               	iorwf	(___flneg@f1+3)^0,w,c
 10709  006656  B4D8               	btfsc	status,2,c
 10710  006658  EF30  F033         	goto	u3461
 10711  00665C  EF32  F033         	goto	u3460
 10712  006660                     u3461:
 10713  006660  EF3A  F033         	goto	l4242
 10714  006664                     u3460:
 10715  006664  0E00               	movlw	0
 10716  006666  1A09               	xorwf	___flneg@f1^0,f,c
 10717  006668  0E00               	movlw	0
 10718  00666A  1A0A               	xorwf	(___flneg@f1+1)^0,f,c
 10719  00666C  0E00               	movlw	0
 10720  00666E  1A0B               	xorwf	(___flneg@f1+2)^0,f,c
 10721  006670  0E80               	movlw	128
 10722  006672  1A0C               	xorwf	(___flneg@f1+3)^0,f,c
 10723  006674                     l4242:
 10724  006674  C009  F009         	movff	___flneg@f1,?___flneg
 10725  006678  C00A  F00A         	movff	___flneg@f1+1,?___flneg+1
 10726  00667C  C00B  F00B         	movff	___flneg@f1+2,?___flneg+2
 10727  006680  C00C  F00C         	movff	___flneg@f1+3,?___flneg+3
 10728  006684  0012               	return		;funcret
 10729  006686                     __end_of___flneg:
 10730                           	opt callstack 0
 10731                           
 10732 ;; *************** function ___fldiv *****************
 10733 ;; Defined at:
 10734 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 10735 ;; Parameters:    Size  Location     Type
 10736 ;;  b               4   57[COMRAM] unsigned char 
 10737 ;;  a               4   61[COMRAM] unsigned char 
 10738 ;; Auto vars:     Size  Location     Type
 10739 ;;  grs             4    7[BANK0 ] unsigned long 
 10740 ;;  rem             4    0[BANK0 ] unsigned long 
 10741 ;;  new_exp         2    5[BANK0 ] short 
 10742 ;;  aexp            1   12[BANK0 ] unsigned char 
 10743 ;;  bexp            1   11[BANK0 ] unsigned char 
 10744 ;;  sign            1    4[BANK0 ] unsigned char 
 10745 ;; Return value:  Size  Location     Type
 10746 ;;                  4   57[COMRAM] unsigned char 
 10747 ;; Registers used:
 10748 ;;		wreg, status,2, status,0
 10749 ;; Tracked objects:
 10750 ;;		On entry : 0/0
 10751 ;;		On exit  : 0/0
 10752 ;;		Unchanged: 0/0
 10753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10754 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10755 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10756 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10757 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10758 ;;Total ram usage:       25 bytes
 10759 ;; Hardware stack levels used:    1
 10760 ;; Hardware stack levels required when called:    3
 10761 ;; This function calls:
 10762 ;;		Nothing
 10763 ;; This function is called by:
 10764 ;;		_powf
 10765 ;; This function uses a non-reentrant model
 10766 ;;
 10767                           
 10768                           	psect	text29
 10769  0048B8                     __ptext29:
 10770                           	opt callstack 0
 10771  0048B8                     ___fldiv:
 10772                           	opt callstack 23
 10773  0048B8  503D               	movf	(___fldiv@b+3)^0,w,c
 10774  0048BA  0B80               	andlw	128
 10775  0048BC  0100               	movlb	0	; () banked
 10776  0048BE  6F64               	movwf	___fldiv@sign& (0+255),b
 10777  0048C0  503D               	movf	(___fldiv@b+3)^0,w,c
 10778  0048C2  243D               	addwf	(___fldiv@b+3)^0,w,c
 10779  0048C4  6F6B               	movwf	___fldiv@bexp& (0+255),b
 10780  0048C6                     
 10781                           ; BSR set to: 0
 10782  0048C6  AE3C               	btfss	(___fldiv@b+2)^0,7,c
 10783  0048C8  EF68  F024         	goto	u5131
 10784  0048CC  EF6A  F024         	goto	u5130
 10785  0048D0                     u5131:
 10786  0048D0  EF6B  F024         	goto	l5696
 10787  0048D4                     u5130:
 10788  0048D4                     
 10789                           ; BSR set to: 0
 10790  0048D4  816B               	bsf	___fldiv@bexp& (0+255),0,b
 10791  0048D6                     l5696:
 10792                           
 10793                           ; BSR set to: 0
 10794  0048D6  516B               	movf	___fldiv@bexp& (0+255),w,b
 10795  0048D8  B4D8               	btfsc	status,2,c
 10796  0048DA  EF71  F024         	goto	u5141
 10797  0048DE  EF73  F024         	goto	u5140
 10798  0048E2                     u5141:
 10799  0048E2  EF88  F024         	goto	l5706
 10800  0048E6                     u5140:
 10801  0048E6                     
 10802                           ; BSR set to: 0
 10803  0048E6  296B               	incf	___fldiv@bexp& (0+255),w,b
 10804  0048E8  A4D8               	btfss	status,2,c
 10805  0048EA  EF79  F024         	goto	u5151
 10806  0048EE  EF7B  F024         	goto	u5150
 10807  0048F2                     u5151:
 10808  0048F2  EF83  F024         	goto	l5702
 10809  0048F6                     u5150:
 10810  0048F6                     
 10811                           ; BSR set to: 0
 10812  0048F6  0E00               	movlw	0
 10813  0048F8  6E3A               	movwf	___fldiv@b^0,c
 10814  0048FA  0E00               	movlw	0
 10815  0048FC  6E3B               	movwf	(___fldiv@b+1)^0,c
 10816  0048FE  0E00               	movlw	0
 10817  004900  6E3C               	movwf	(___fldiv@b+2)^0,c
 10818  004902  0E00               	movlw	0
 10819  004904  6E3D               	movwf	(___fldiv@b+3)^0,c
 10820  004906                     l5702:
 10821                           
 10822                           ; BSR set to: 0
 10823  004906  8E3C               	bsf	(___fldiv@b+2)^0,7,c
 10824  004908                     
 10825                           ; BSR set to: 0
 10826  004908  0E00               	movlw	0
 10827  00490A  6E3D               	movwf	(___fldiv@b+3)^0,c
 10828  00490C  EF90  F024         	goto	l5708
 10829  004910                     l5706:
 10830                           
 10831                           ; BSR set to: 0
 10832  004910  0E00               	movlw	0
 10833  004912  6E3A               	movwf	___fldiv@b^0,c
 10834  004914  0E00               	movlw	0
 10835  004916  6E3B               	movwf	(___fldiv@b+1)^0,c
 10836  004918  0E00               	movlw	0
 10837  00491A  6E3C               	movwf	(___fldiv@b+2)^0,c
 10838  00491C  0E00               	movlw	0
 10839  00491E  6E3D               	movwf	(___fldiv@b+3)^0,c
 10840  004920                     l5708:
 10841                           
 10842                           ; BSR set to: 0
 10843  004920  5041               	movf	(___fldiv@a+3)^0,w,c
 10844  004922  0B80               	andlw	128
 10845  004924  1B64               	xorwf	___fldiv@sign& (0+255),f,b
 10846  004926                     
 10847                           ; BSR set to: 0
 10848  004926  5041               	movf	(___fldiv@a+3)^0,w,c
 10849  004928  2441               	addwf	(___fldiv@a+3)^0,w,c
 10850  00492A  6F6C               	movwf	___fldiv@aexp& (0+255),b
 10851  00492C                     
 10852                           ; BSR set to: 0
 10853  00492C  AE40               	btfss	(___fldiv@a+2)^0,7,c
 10854  00492E  EF9B  F024         	goto	u5161
 10855  004932  EF9D  F024         	goto	u5160
 10856  004936                     u5161:
 10857  004936  EF9E  F024         	goto	l5716
 10858  00493A                     u5160:
 10859  00493A                     
 10860                           ; BSR set to: 0
 10861  00493A  816C               	bsf	___fldiv@aexp& (0+255),0,b
 10862  00493C                     l5716:
 10863                           
 10864                           ; BSR set to: 0
 10865  00493C  516C               	movf	___fldiv@aexp& (0+255),w,b
 10866  00493E  B4D8               	btfsc	status,2,c
 10867  004940  EFA4  F024         	goto	u5171
 10868  004944  EFA6  F024         	goto	u5170
 10869  004948                     u5171:
 10870  004948  EFBB  F024         	goto	l5726
 10871  00494C                     u5170:
 10872  00494C                     
 10873                           ; BSR set to: 0
 10874  00494C  296C               	incf	___fldiv@aexp& (0+255),w,b
 10875  00494E  A4D8               	btfss	status,2,c
 10876  004950  EFAC  F024         	goto	u5181
 10877  004954  EFAE  F024         	goto	u5180
 10878  004958                     u5181:
 10879  004958  EFB6  F024         	goto	l5722
 10880  00495C                     u5180:
 10881  00495C                     
 10882                           ; BSR set to: 0
 10883  00495C  0E00               	movlw	0
 10884  00495E  6E3E               	movwf	___fldiv@a^0,c
 10885  004960  0E00               	movlw	0
 10886  004962  6E3F               	movwf	(___fldiv@a+1)^0,c
 10887  004964  0E00               	movlw	0
 10888  004966  6E40               	movwf	(___fldiv@a+2)^0,c
 10889  004968  0E00               	movlw	0
 10890  00496A  6E41               	movwf	(___fldiv@a+3)^0,c
 10891  00496C                     l5722:
 10892                           
 10893                           ; BSR set to: 0
 10894  00496C  8E40               	bsf	(___fldiv@a+2)^0,7,c
 10895  00496E                     
 10896                           ; BSR set to: 0
 10897  00496E  0E00               	movlw	0
 10898  004970  6E41               	movwf	(___fldiv@a+3)^0,c
 10899  004972  EFC3  F024         	goto	l5728
 10900  004976                     l5726:
 10901                           
 10902                           ; BSR set to: 0
 10903  004976  0E00               	movlw	0
 10904  004978  6E3E               	movwf	___fldiv@a^0,c
 10905  00497A  0E00               	movlw	0
 10906  00497C  6E3F               	movwf	(___fldiv@a+1)^0,c
 10907  00497E  0E00               	movlw	0
 10908  004980  6E40               	movwf	(___fldiv@a+2)^0,c
 10909  004982  0E00               	movlw	0
 10910  004984  6E41               	movwf	(___fldiv@a+3)^0,c
 10911  004986                     l5728:
 10912                           
 10913                           ; BSR set to: 0
 10914  004986  503E               	movf	___fldiv@a^0,w,c
 10915  004988  103F               	iorwf	(___fldiv@a+1)^0,w,c
 10916  00498A  1040               	iorwf	(___fldiv@a+2)^0,w,c
 10917  00498C  1041               	iorwf	(___fldiv@a+3)^0,w,c
 10918  00498E  A4D8               	btfss	status,2,c
 10919  004990  EFCC  F024         	goto	u5191
 10920  004994  EFCE  F024         	goto	u5190
 10921  004998                     u5191:
 10922  004998  EFE6  F024         	goto	l5740
 10923  00499C                     u5190:
 10924  00499C                     
 10925                           ; BSR set to: 0
 10926  00499C  0E00               	movlw	0
 10927  00499E  6E3A               	movwf	___fldiv@b^0,c
 10928  0049A0  0E00               	movlw	0
 10929  0049A2  6E3B               	movwf	(___fldiv@b+1)^0,c
 10930  0049A4  0E00               	movlw	0
 10931  0049A6  6E3C               	movwf	(___fldiv@b+2)^0,c
 10932  0049A8  0E00               	movlw	0
 10933  0049AA  6E3D               	movwf	(___fldiv@b+3)^0,c
 10934  0049AC                     
 10935                           ; BSR set to: 0
 10936  0049AC  0E80               	movlw	128
 10937  0049AE  123C               	iorwf	(___fldiv@b+2)^0,f,c
 10938  0049B0  0E7F               	movlw	127
 10939  0049B2  123D               	iorwf	(___fldiv@b+3)^0,f,c
 10940  0049B4                     l5734:
 10941                           
 10942                           ; BSR set to: 0
 10943  0049B4  5164               	movf	___fldiv@sign& (0+255),w,b
 10944  0049B6  123D               	iorwf	(___fldiv@b+3)^0,f,c
 10945  0049B8                     
 10946                           ; BSR set to: 0
 10947  0049B8  C03A  F03A         	movff	___fldiv@b,?___fldiv
 10948  0049BC  C03B  F03B         	movff	___fldiv@b+1,?___fldiv+1
 10949  0049C0  C03C  F03C         	movff	___fldiv@b+2,?___fldiv+2
 10950  0049C4  C03D  F03D         	movff	___fldiv@b+3,?___fldiv+3
 10951  0049C8  EF29  F026         	goto	l1278
 10952  0049CC                     l5740:
 10953                           
 10954                           ; BSR set to: 0
 10955  0049CC  516B               	movf	___fldiv@bexp& (0+255),w,b
 10956  0049CE  A4D8               	btfss	status,2,c
 10957  0049D0  EFEC  F024         	goto	u5201
 10958  0049D4  EFEE  F024         	goto	u5200
 10959  0049D8                     u5201:
 10960  0049D8  EFF8  F024         	goto	l5748
 10961  0049DC                     u5200:
 10962  0049DC                     
 10963                           ; BSR set to: 0
 10964  0049DC  0E00               	movlw	0
 10965  0049DE  6E3A               	movwf	?___fldiv^0,c
 10966  0049E0  0E00               	movlw	0
 10967  0049E2  6E3B               	movwf	(?___fldiv+1)^0,c
 10968  0049E4  0E00               	movlw	0
 10969  0049E6  6E3C               	movwf	(?___fldiv+2)^0,c
 10970  0049E8  0E00               	movlw	0
 10971  0049EA  6E3D               	movwf	(?___fldiv+3)^0,c
 10972  0049EC  EF29  F026         	goto	l1278
 10973  0049F0                     l5748:
 10974                           
 10975                           ; BSR set to: 0
 10976  0049F0  516C               	movf	___fldiv@aexp& (0+255),w,b
 10977  0049F2  C06B  F042         	movff	___fldiv@bexp,??___fldiv
 10978  0049F6  6A43               	clrf	(??___fldiv+1)^0,c
 10979  0049F8  5E42               	subwf	??___fldiv^0,f,c
 10980  0049FA  0E00               	movlw	0
 10981  0049FC  5A43               	subwfb	(??___fldiv+1)^0,f,c
 10982  0049FE  0E7F               	movlw	127
 10983  004A00  2442               	addwf	??___fldiv^0,w,c
 10984  004A02  6F65               	movwf	___fldiv@new_exp& (0+255),b
 10985  004A04  0E00               	movlw	0
 10986  004A06  2043               	addwfc	(??___fldiv+1)^0,w,c
 10987  004A08  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10988  004A0A                     
 10989                           ; BSR set to: 0
 10990  004A0A  C03A  F060         	movff	___fldiv@b,___fldiv@rem
 10991  004A0E  C03B  F061         	movff	___fldiv@b+1,___fldiv@rem+1
 10992  004A12  C03C  F062         	movff	___fldiv@b+2,___fldiv@rem+2
 10993  004A16  C03D  F063         	movff	___fldiv@b+3,___fldiv@rem+3
 10994  004A1A                     
 10995                           ; BSR set to: 0
 10996  004A1A  0E00               	movlw	0
 10997  004A1C  6E3A               	movwf	___fldiv@b^0,c
 10998  004A1E  0E00               	movlw	0
 10999  004A20  6E3B               	movwf	(___fldiv@b+1)^0,c
 11000  004A22  0E00               	movlw	0
 11001  004A24  6E3C               	movwf	(___fldiv@b+2)^0,c
 11002  004A26  0E00               	movlw	0
 11003  004A28  6E3D               	movwf	(___fldiv@b+3)^0,c
 11004  004A2A                     
 11005                           ; BSR set to: 0
 11006  004A2A  0E00               	movlw	0
 11007  004A2C  6F67               	movwf	___fldiv@grs& (0+255),b
 11008  004A2E  0E00               	movlw	0
 11009  004A30  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
 11010  004A32  0E00               	movlw	0
 11011  004A34  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
 11012  004A36  0E00               	movlw	0
 11013  004A38  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
 11014  004A3A                     
 11015                           ; BSR set to: 0
 11016  004A3A  0E00               	movlw	0
 11017  004A3C  6F6C               	movwf	___fldiv@aexp& (0+255),b
 11018  004A3E  EF59  F025         	goto	l1280
 11019  004A42                     l5758:
 11020                           
 11021                           ; BSR set to: 0
 11022  004A42  516C               	movf	___fldiv@aexp& (0+255),w,b
 11023  004A44  B4D8               	btfsc	status,2,c
 11024  004A46  EF27  F025         	goto	u5211
 11025  004A4A  EF29  F025         	goto	u5210
 11026  004A4E                     u5211:
 11027  004A4E  EF40  F025         	goto	l5766
 11028  004A52                     u5210:
 11029  004A52                     
 11030                           ; BSR set to: 0
 11031  004A52  90D8               	bcf	status,0,c
 11032  004A54  3760               	rlcf	___fldiv@rem& (0+255),f,b
 11033  004A56  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 11034  004A58  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 11035  004A5A  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 11036  004A5C  90D8               	bcf	status,0,c
 11037  004A5E  363A               	rlcf	___fldiv@b^0,f,c
 11038  004A60  363B               	rlcf	(___fldiv@b+1)^0,f,c
 11039  004A62  363C               	rlcf	(___fldiv@b+2)^0,f,c
 11040  004A64  363D               	rlcf	(___fldiv@b+3)^0,f,c
 11041  004A66                     
 11042                           ; BSR set to: 0
 11043  004A66  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 11044  004A68  EF38  F025         	goto	u5221
 11045  004A6C  EF3A  F025         	goto	u5220
 11046  004A70                     u5221:
 11047  004A70  EF3B  F025         	goto	l1283
 11048  004A74                     u5220:
 11049  004A74                     
 11050                           ; BSR set to: 0
 11051  004A74  803A               	bsf	___fldiv@b^0,0,c
 11052  004A76                     l1283:
 11053                           
 11054                           ; BSR set to: 0
 11055  004A76  90D8               	bcf	status,0,c
 11056  004A78  3767               	rlcf	___fldiv@grs& (0+255),f,b
 11057  004A7A  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 11058  004A7C  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 11059  004A7E  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 11060  004A80                     l5766:
 11061                           
 11062                           ; BSR set to: 0
 11063  004A80  503E               	movf	___fldiv@a^0,w,c
 11064  004A82  5D60               	subwf	___fldiv@rem& (0+255),w,b
 11065  004A84  503F               	movf	(___fldiv@a+1)^0,w,c
 11066  004A86  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 11067  004A88  5040               	movf	(___fldiv@a+2)^0,w,c
 11068  004A8A  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 11069  004A8C  5041               	movf	(___fldiv@a+3)^0,w,c
 11070  004A8E  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 11071  004A90  A0D8               	btfss	status,0,c
 11072  004A92  EF4D  F025         	goto	u5231
 11073  004A96  EF4F  F025         	goto	u5230
 11074  004A9A                     u5231:
 11075  004A9A  EF58  F025         	goto	l5772
 11076  004A9E                     u5230:
 11077  004A9E                     
 11078                           ; BSR set to: 0
 11079  004A9E  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
 11080  004AA0                     
 11081                           ; BSR set to: 0
 11082  004AA0  503E               	movf	___fldiv@a^0,w,c
 11083  004AA2  5F60               	subwf	___fldiv@rem& (0+255),f,b
 11084  004AA4  503F               	movf	(___fldiv@a+1)^0,w,c
 11085  004AA6  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 11086  004AA8  5040               	movf	(___fldiv@a+2)^0,w,c
 11087  004AAA  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 11088  004AAC  5041               	movf	(___fldiv@a+3)^0,w,c
 11089  004AAE  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 11090  004AB0                     l5772:
 11091                           
 11092                           ; BSR set to: 0
 11093  004AB0  2B6C               	incf	___fldiv@aexp& (0+255),f,b
 11094  004AB2                     l1280:
 11095                           
 11096                           ; BSR set to: 0
 11097  004AB2  0E19               	movlw	25
 11098  004AB4  656C               	cpfsgt	___fldiv@aexp& (0+255),b
 11099  004AB6  EF5F  F025         	goto	u5241
 11100  004ABA  EF61  F025         	goto	u5240
 11101  004ABE                     u5241:
 11102  004ABE  EF21  F025         	goto	l5758
 11103  004AC2                     u5240:
 11104  004AC2                     
 11105                           ; BSR set to: 0
 11106  004AC2  5160               	movf	___fldiv@rem& (0+255),w,b
 11107  004AC4  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 11108  004AC6  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 11109  004AC8  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 11110  004ACA  B4D8               	btfsc	status,2,c
 11111  004ACC  EF6A  F025         	goto	u5251
 11112  004AD0  EF6C  F025         	goto	u5250
 11113  004AD4                     u5251:
 11114  004AD4  EF84  F025         	goto	l5784
 11115  004AD8                     u5250:
 11116  004AD8                     
 11117                           ; BSR set to: 0
 11118  004AD8  8167               	bsf	___fldiv@grs& (0+255),0,b
 11119  004ADA  EF84  F025         	goto	l5784
 11120  004ADE                     l5778:
 11121                           
 11122                           ; BSR set to: 0
 11123  004ADE  90D8               	bcf	status,0,c
 11124  004AE0  363A               	rlcf	___fldiv@b^0,f,c
 11125  004AE2  363B               	rlcf	(___fldiv@b+1)^0,f,c
 11126  004AE4  363C               	rlcf	(___fldiv@b+2)^0,f,c
 11127  004AE6  363D               	rlcf	(___fldiv@b+3)^0,f,c
 11128  004AE8                     
 11129                           ; BSR set to: 0
 11130  004AE8  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 11131  004AEA  EF79  F025         	goto	u5261
 11132  004AEE  EF7B  F025         	goto	u5260
 11133  004AF2                     u5261:
 11134  004AF2  EF7C  F025         	goto	l1289
 11135  004AF6                     u5260:
 11136  004AF6                     
 11137                           ; BSR set to: 0
 11138  004AF6  803A               	bsf	___fldiv@b^0,0,c
 11139  004AF8                     l1289:
 11140                           
 11141                           ; BSR set to: 0
 11142  004AF8  90D8               	bcf	status,0,c
 11143  004AFA  3767               	rlcf	___fldiv@grs& (0+255),f,b
 11144  004AFC  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 11145  004AFE  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 11146  004B00  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 11147  004B02  0765               	decf	___fldiv@new_exp& (0+255),f,b
 11148  004B04  A0D8               	btfss	status,0,c
 11149  004B06  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 11150  004B08                     l5784:
 11151                           
 11152                           ; BSR set to: 0
 11153  004B08  AE3C               	btfss	(___fldiv@b+2)^0,7,c
 11154  004B0A  EF89  F025         	goto	u5271
 11155  004B0E  EF8B  F025         	goto	u5270
 11156  004B12                     u5271:
 11157  004B12  EF6F  F025         	goto	l5778
 11158  004B16                     u5270:
 11159  004B16                     
 11160                           ; BSR set to: 0
 11161  004B16  0E00               	movlw	0
 11162  004B18  6F6C               	movwf	___fldiv@aexp& (0+255),b
 11163  004B1A                     
 11164                           ; BSR set to: 0
 11165  004B1A  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 11166  004B1C  EF92  F025         	goto	u5281
 11167  004B20  EF94  F025         	goto	u5280
 11168  004B24                     u5281:
 11169  004B24  EFB8  F025         	goto	l1291
 11170  004B28                     u5280:
 11171  004B28                     
 11172                           ; BSR set to: 0
 11173  004B28  0EFF               	movlw	255
 11174  004B2A  1567               	andwf	___fldiv@grs& (0+255),w,b
 11175  004B2C  6E42               	movwf	??___fldiv^0,c
 11176  004B2E  0EFF               	movlw	255
 11177  004B30  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
 11178  004B32  6E43               	movwf	(??___fldiv+1)^0,c
 11179  004B34  0EFF               	movlw	255
 11180  004B36  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
 11181  004B38  6E44               	movwf	(??___fldiv+2)^0,c
 11182  004B3A  0E7F               	movlw	127
 11183  004B3C  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
 11184  004B3E  6E45               	movwf	(??___fldiv+3)^0,c
 11185  004B40  5042               	movf	??___fldiv^0,w,c
 11186  004B42  1043               	iorwf	(??___fldiv+1)^0,w,c
 11187  004B44  1044               	iorwf	(??___fldiv+2)^0,w,c
 11188  004B46  1045               	iorwf	(??___fldiv+3)^0,w,c
 11189  004B48  B4D8               	btfsc	status,2,c
 11190  004B4A  EFA9  F025         	goto	u5291
 11191  004B4E  EFAB  F025         	goto	u5290
 11192  004B52                     u5291:
 11193  004B52  EFAF  F025         	goto	l1292
 11194  004B56                     u5290:
 11195  004B56                     l5792:
 11196                           
 11197                           ; BSR set to: 0
 11198  004B56  0E01               	movlw	1
 11199  004B58  6F6C               	movwf	___fldiv@aexp& (0+255),b
 11200  004B5A  EFB8  F025         	goto	l1291
 11201  004B5E                     l1292:
 11202                           
 11203                           ; BSR set to: 0
 11204  004B5E  A03A               	btfss	___fldiv@b^0,0,c
 11205  004B60  EFB4  F025         	goto	u5301
 11206  004B64  EFB6  F025         	goto	u5300
 11207  004B68                     u5301:
 11208  004B68  EFB8  F025         	goto	l1291
 11209  004B6C                     u5300:
 11210  004B6C  EFAB  F025         	goto	l5792
 11211  004B70                     l1291:
 11212                           
 11213                           ; BSR set to: 0
 11214  004B70  516C               	movf	___fldiv@aexp& (0+255),w,b
 11215  004B72  B4D8               	btfsc	status,2,c
 11216  004B74  EFBE  F025         	goto	u5311
 11217  004B78  EFC0  F025         	goto	u5310
 11218  004B7C                     u5311:
 11219  004B7C  EFE4  F025         	goto	l5804
 11220  004B80                     u5310:
 11221  004B80                     
 11222                           ; BSR set to: 0
 11223  004B80  0E01               	movlw	1
 11224  004B82  263A               	addwf	___fldiv@b^0,f,c
 11225  004B84  0E00               	movlw	0
 11226  004B86  223B               	addwfc	(___fldiv@b+1)^0,f,c
 11227  004B88  223C               	addwfc	(___fldiv@b+2)^0,f,c
 11228  004B8A  223D               	addwfc	(___fldiv@b+3)^0,f,c
 11229  004B8C                     
 11230                           ; BSR set to: 0
 11231  004B8C  A03D               	btfss	(___fldiv@b+3)^0,0,c
 11232  004B8E  EFCB  F025         	goto	u5321
 11233  004B92  EFCD  F025         	goto	u5320
 11234  004B96                     u5321:
 11235  004B96  EFE4  F025         	goto	l5804
 11236  004B9A                     u5320:
 11237  004B9A                     
 11238                           ; BSR set to: 0
 11239  004B9A  C03A  F042         	movff	___fldiv@b,??___fldiv
 11240  004B9E  C03B  F043         	movff	___fldiv@b+1,??___fldiv+1
 11241  004BA2  C03C  F044         	movff	___fldiv@b+2,??___fldiv+2
 11242  004BA6  C03D  F045         	movff	___fldiv@b+3,??___fldiv+3
 11243  004BAA  3445               	rlcf	(??___fldiv+3)^0,w,c
 11244  004BAC  3245               	rrcf	(??___fldiv+3)^0,f,c
 11245  004BAE  3244               	rrcf	(??___fldiv+2)^0,f,c
 11246  004BB0  3243               	rrcf	(??___fldiv+1)^0,f,c
 11247  004BB2  3242               	rrcf	??___fldiv^0,f,c
 11248  004BB4  C042  F03A         	movff	??___fldiv,___fldiv@b
 11249  004BB8  C043  F03B         	movff	??___fldiv+1,___fldiv@b+1
 11250  004BBC  C044  F03C         	movff	??___fldiv+2,___fldiv@b+2
 11251  004BC0  C045  F03D         	movff	??___fldiv+3,___fldiv@b+3
 11252  004BC4                     
 11253                           ; BSR set to: 0
 11254  004BC4  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
 11255  004BC6  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 11256  004BC8                     l5804:
 11257                           
 11258                           ; BSR set to: 0
 11259  004BC8  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 11260  004BCA  EFEF  F025         	goto	u5331
 11261  004BCE  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 11262  004BD0  E108               	bnz	u5330
 11263  004BD2  2965               	incf	___fldiv@new_exp& (0+255),w,b
 11264  004BD4  A0D8               	btfss	status,0,c
 11265  004BD6  EFEF  F025         	goto	u5331
 11266  004BDA  EFF1  F025         	goto	u5330
 11267  004BDE                     u5331:
 11268  004BDE  EFFC  F025         	goto	l5808
 11269  004BE2                     u5330:
 11270  004BE2                     
 11271                           ; BSR set to: 0
 11272  004BE2  0E00               	movlw	0
 11273  004BE4  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11274  004BE6  6965               	setf	___fldiv@new_exp& (0+255),b
 11275  004BE8  0E00               	movlw	0
 11276  004BEA  6E3A               	movwf	___fldiv@b^0,c
 11277  004BEC  0E00               	movlw	0
 11278  004BEE  6E3B               	movwf	(___fldiv@b+1)^0,c
 11279  004BF0  0E00               	movlw	0
 11280  004BF2  6E3C               	movwf	(___fldiv@b+2)^0,c
 11281  004BF4  0E00               	movlw	0
 11282  004BF6  6E3D               	movwf	(___fldiv@b+3)^0,c
 11283  004BF8                     l5808:
 11284                           
 11285                           ; BSR set to: 0
 11286  004BF8  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 11287  004BFA  EF09  F026         	goto	u5340
 11288  004BFE  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 11289  004C00  E106               	bnz	u5341
 11290  004C02  0565               	decf	___fldiv@new_exp& (0+255),w,b
 11291  004C04  B0D8               	btfsc	status,0,c
 11292  004C06  EF07  F026         	goto	u5341
 11293  004C0A  EF09  F026         	goto	u5340
 11294  004C0E                     u5341:
 11295  004C0E  EF17  F026         	goto	l5812
 11296  004C12                     u5340:
 11297  004C12                     
 11298                           ; BSR set to: 0
 11299  004C12  0E00               	movlw	0
 11300  004C14  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11301  004C16  0E00               	movlw	0
 11302  004C18  6F65               	movwf	___fldiv@new_exp& (0+255),b
 11303  004C1A  0E00               	movlw	0
 11304  004C1C  6E3A               	movwf	___fldiv@b^0,c
 11305  004C1E  0E00               	movlw	0
 11306  004C20  6E3B               	movwf	(___fldiv@b+1)^0,c
 11307  004C22  0E00               	movlw	0
 11308  004C24  6E3C               	movwf	(___fldiv@b+2)^0,c
 11309  004C26  0E00               	movlw	0
 11310  004C28  6E3D               	movwf	(___fldiv@b+3)^0,c
 11311  004C2A  0E00               	movlw	0
 11312  004C2C  6F64               	movwf	___fldiv@sign& (0+255),b
 11313  004C2E                     l5812:
 11314                           
 11315                           ; BSR set to: 0
 11316  004C2E  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
 11317  004C32                     
 11318                           ; BSR set to: 0
 11319  004C32  A16B               	btfss	___fldiv@bexp& (0+255),0,b
 11320  004C34  EF1E  F026         	goto	u5351
 11321  004C38  EF20  F026         	goto	u5350
 11322  004C3C                     u5351:
 11323  004C3C  EF23  F026         	goto	l5818
 11324  004C40                     u5350:
 11325  004C40                     
 11326                           ; BSR set to: 0
 11327  004C40  8E3C               	bsf	(___fldiv@b+2)^0,7,c
 11328  004C42  EF24  F026         	goto	l5820
 11329  004C46                     l5818:
 11330                           
 11331                           ; BSR set to: 0
 11332  004C46  9E3C               	bcf	(___fldiv@b+2)^0,7,c
 11333  004C48                     l5820:
 11334                           
 11335                           ; BSR set to: 0
 11336  004C48  90D8               	bcf	status,0,c
 11337  004C4A  316B               	rrcf	___fldiv@bexp& (0+255),w,b
 11338  004C4C  6E3D               	movwf	(___fldiv@b+3)^0,c
 11339  004C4E  EFDA  F024         	goto	l5734
 11340  004C52                     l1278:
 11341                           
 11342                           ; BSR set to: 0
 11343  004C52  0012               	return		;funcret
 11344  004C54                     __end_of___fldiv:
 11345                           	opt callstack 0
 11346                           
 11347 ;; *************** function ___fltol *****************
 11348 ;; Defined at:
 11349 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 11350 ;; Parameters:    Size  Location     Type
 11351 ;;  f1              4   57[BANK0 ] unsigned char 
 11352 ;; Auto vars:     Size  Location     Type
 11353 ;;  exp1            1   66[BANK0 ] unsigned char 
 11354 ;;  sign1           1   65[BANK0 ] unsigned char 
 11355 ;; Return value:  Size  Location     Type
 11356 ;;                  4   57[BANK0 ] long 
 11357 ;; Registers used:
 11358 ;;		wreg, status,2, status,0
 11359 ;; Tracked objects:
 11360 ;;		On entry : 0/0
 11361 ;;		On exit  : 0/0
 11362 ;;		Unchanged: 0/0
 11363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11364 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11365 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11366 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11367 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11368 ;;Total ram usage:       10 bytes
 11369 ;; Hardware stack levels used:    1
 11370 ;; Hardware stack levels required when called:    3
 11371 ;; This function calls:
 11372 ;;		Nothing
 11373 ;; This function is called by:
 11374 ;;		_preCalculate
 11375 ;; This function uses a non-reentrant model
 11376 ;;
 11377                           
 11378                           	psect	text30
 11379  005AD2                     __ptext30:
 11380                           	opt callstack 0
 11381  005AD2                     ___fltol:
 11382                           	opt callstack 24
 11383  005AD2  0100               	movlb	0	; () banked
 11384  005AD4  359B               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11385  005AD6  359C               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11386  005AD8  6FA2               	movwf	___fltol@exp1& (0+255),b
 11387  005ADA  51A2               	movf	___fltol@exp1& (0+255),w,b
 11388  005ADC  A4D8               	btfss	status,2,c
 11389  005ADE  EF73  F02D         	goto	u5931
 11390  005AE2  EF75  F02D         	goto	u5930
 11391  005AE6                     u5931:
 11392  005AE6  EF7F  F02D         	goto	l6282
 11393  005AEA                     u5930:
 11394  005AEA                     l6278:
 11395                           
 11396                           ; BSR set to: 0
 11397  005AEA  0E00               	movlw	0
 11398  005AEC  6F99               	movwf	?___fltol& (0+255),b
 11399  005AEE  0E00               	movlw	0
 11400  005AF0  6F9A               	movwf	(?___fltol+1)& (0+255),b
 11401  005AF2  0E00               	movlw	0
 11402  005AF4  6F9B               	movwf	(?___fltol+2)& (0+255),b
 11403  005AF6  0E00               	movlw	0
 11404  005AF8  6F9C               	movwf	(?___fltol+3)& (0+255),b
 11405  005AFA  EFEC  F02D         	goto	l993
 11406  005AFE                     l6282:
 11407                           
 11408                           ; BSR set to: 0
 11409  005AFE  C099  F09D         	movff	___fltol@f1,??___fltol
 11410  005B02  C09A  F09E         	movff	___fltol@f1+1,??___fltol+1
 11411  005B06  C09B  F09F         	movff	___fltol@f1+2,??___fltol+2
 11412  005B0A  C09C  F0A0         	movff	___fltol@f1+3,??___fltol+3
 11413  005B0E  0E20               	movlw	32
 11414  005B10  EF8F  F02D         	goto	u5940
 11415  005B14                     u5945:
 11416  005B14  90D8               	bcf	status,0,c
 11417  005B16  33A0               	rrcf	(??___fltol+3)& (0+255),f,b
 11418  005B18  339F               	rrcf	(??___fltol+2)& (0+255),f,b
 11419  005B1A  339E               	rrcf	(??___fltol+1)& (0+255),f,b
 11420  005B1C  339D               	rrcf	??___fltol& (0+255),f,b
 11421  005B1E                     u5940:
 11422  005B1E  2EE8               	decfsz	wreg,f,c
 11423  005B20  EF8A  F02D         	goto	u5945
 11424  005B24  519D               	movf	??___fltol& (0+255),w,b
 11425  005B26  6FA1               	movwf	___fltol@sign1& (0+255),b
 11426  005B28                     
 11427                           ; BSR set to: 0
 11428  005B28  8F9B               	bsf	(___fltol@f1+2)& (0+255),7,b
 11429  005B2A                     
 11430                           ; BSR set to: 0
 11431  005B2A  0EFF               	movlw	255
 11432  005B2C  1799               	andwf	___fltol@f1& (0+255),f,b
 11433  005B2E  0EFF               	movlw	255
 11434  005B30  179A               	andwf	(___fltol@f1+1)& (0+255),f,b
 11435  005B32  0EFF               	movlw	255
 11436  005B34  179B               	andwf	(___fltol@f1+2)& (0+255),f,b
 11437  005B36  0E00               	movlw	0
 11438  005B38  179C               	andwf	(___fltol@f1+3)& (0+255),f,b
 11439  005B3A                     
 11440                           ; BSR set to: 0
 11441  005B3A  0E96               	movlw	150
 11442  005B3C  5FA2               	subwf	___fltol@exp1& (0+255),f,b
 11443  005B3E                     
 11444                           ; BSR set to: 0
 11445  005B3E  BFA2               	btfsc	___fltol@exp1& (0+255),7,b
 11446  005B40  EFA6  F02D         	goto	u5950
 11447  005B44  EFA4  F02D         	goto	u5951
 11448  005B48                     u5951:
 11449  005B48  EFBC  F02D         	goto	l6302
 11450  005B4C                     u5950:
 11451  005B4C                     
 11452                           ; BSR set to: 0
 11453  005B4C  51A2               	movf	___fltol@exp1& (0+255),w,b
 11454  005B4E  0A80               	xorlw	128
 11455  005B50  0F97               	addlw	151
 11456  005B52  B0D8               	btfsc	status,0,c
 11457  005B54  EFAE  F02D         	goto	u5961
 11458  005B58  EFB0  F02D         	goto	u5960
 11459  005B5C                     u5961:
 11460  005B5C  EFB2  F02D         	goto	l6298
 11461  005B60                     u5960:
 11462  005B60  EF75  F02D         	goto	l6278
 11463  005B64                     l6298:
 11464                           
 11465                           ; BSR set to: 0
 11466  005B64  90D8               	bcf	status,0,c
 11467  005B66  339C               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11468  005B68  339B               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11469  005B6A  339A               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11470  005B6C  3399               	rrcf	___fltol@f1& (0+255),f,b
 11471  005B6E                     
 11472                           ; BSR set to: 0
 11473  005B6E  3FA2               	incfsz	___fltol@exp1& (0+255),f,b
 11474  005B70  EFB2  F02D         	goto	l6298
 11475  005B74  EFD4  F02D         	goto	l6312
 11476  005B78                     l6302:
 11477                           
 11478                           ; BSR set to: 0
 11479  005B78  0E1F               	movlw	31
 11480  005B7A  65A2               	cpfsgt	___fltol@exp1& (0+255),b
 11481  005B7C  EFC2  F02D         	goto	u5971
 11482  005B80  EFC4  F02D         	goto	u5970
 11483  005B84                     u5971:
 11484  005B84  EFCC  F02D         	goto	l6310
 11485  005B88                     u5970:
 11486  005B88  EF75  F02D         	goto	l6278
 11487  005B8C                     l6308:
 11488                           
 11489                           ; BSR set to: 0
 11490  005B8C  90D8               	bcf	status,0,c
 11491  005B8E  3799               	rlcf	___fltol@f1& (0+255),f,b
 11492  005B90  379A               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11493  005B92  379B               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11494  005B94  379C               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11495  005B96  07A2               	decf	___fltol@exp1& (0+255),f,b
 11496  005B98                     l6310:
 11497                           
 11498                           ; BSR set to: 0
 11499  005B98  51A2               	movf	___fltol@exp1& (0+255),w,b
 11500  005B9A  A4D8               	btfss	status,2,c
 11501  005B9C  EFD2  F02D         	goto	u5981
 11502  005BA0  EFD4  F02D         	goto	u5980
 11503  005BA4                     u5981:
 11504  005BA4  EFC6  F02D         	goto	l6308
 11505  005BA8                     u5980:
 11506  005BA8                     l6312:
 11507                           
 11508                           ; BSR set to: 0
 11509  005BA8  51A1               	movf	___fltol@sign1& (0+255),w,b
 11510  005BAA  B4D8               	btfsc	status,2,c
 11511  005BAC  EFDA  F02D         	goto	u5991
 11512  005BB0  EFDC  F02D         	goto	u5990
 11513  005BB4                     u5991:
 11514  005BB4  EFE4  F02D         	goto	l6316
 11515  005BB8                     u5990:
 11516  005BB8                     
 11517                           ; BSR set to: 0
 11518  005BB8  1F9C               	comf	(___fltol@f1+3)& (0+255),f,b
 11519  005BBA  1F9B               	comf	(___fltol@f1+2)& (0+255),f,b
 11520  005BBC  1F9A               	comf	(___fltol@f1+1)& (0+255),f,b
 11521  005BBE  6D99               	negf	___fltol@f1& (0+255),b
 11522  005BC0  0E00               	movlw	0
 11523  005BC2  239A               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11524  005BC4  239B               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11525  005BC6  239C               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11526  005BC8                     l6316:
 11527                           
 11528                           ; BSR set to: 0
 11529  005BC8  C099  F099         	movff	___fltol@f1,?___fltol
 11530  005BCC  C09A  F09A         	movff	___fltol@f1+1,?___fltol+1
 11531  005BD0  C09B  F09B         	movff	___fltol@f1+2,?___fltol+2
 11532  005BD4  C09C  F09C         	movff	___fltol@f1+3,?___fltol+3
 11533  005BD8                     l993:
 11534                           
 11535                           ; BSR set to: 0
 11536  005BD8  0012               	return		;funcret
 11537  005BDA                     __end_of___fltol:
 11538                           	opt callstack 0
 11539                           
 11540 ;; *************** function ___awdiv *****************
 11541 ;; Defined at:
 11542 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 11543 ;; Parameters:    Size  Location     Type
 11544 ;;  dividend        2    8[COMRAM] int 
 11545 ;;  divisor         2   10[COMRAM] int 
 11546 ;; Auto vars:     Size  Location     Type
 11547 ;;  quotient        2   14[COMRAM] int 
 11548 ;;  sign            1   13[COMRAM] unsigned char 
 11549 ;;  counter         1   12[COMRAM] unsigned char 
 11550 ;; Return value:  Size  Location     Type
 11551 ;;                  2    8[COMRAM] int 
 11552 ;; Registers used:
 11553 ;;		wreg, status,2, status,0
 11554 ;; Tracked objects:
 11555 ;;		On entry : 0/0
 11556 ;;		On exit  : 0/0
 11557 ;;		Unchanged: 0/0
 11558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11559 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11560 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11562 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11563 ;;Total ram usage:        8 bytes
 11564 ;; Hardware stack levels used:    1
 11565 ;; Hardware stack levels required when called:    3
 11566 ;; This function calls:
 11567 ;;		Nothing
 11568 ;; This function is called by:
 11569 ;;		_preCalculate
 11570 ;;		_handle_Time
 11571 ;;		_disp_Clock
 11572 ;;		_state_clock
 11573 ;;		_state_mod_hour
 11574 ;;		_state_mod_minute
 11575 ;;		_state_mod_second
 11576 ;;		_disp_Clock_SW
 11577 ;;		_state_stop_watch
 11578 ;; This function uses a non-reentrant model
 11579 ;;
 11580                           
 11581                           	psect	text31
 11582  005E88                     __ptext31:
 11583                           	opt callstack 0
 11584  005E88                     ___awdiv:
 11585                           	opt callstack 25
 11586  005E88  0E00               	movlw	0
 11587  005E8A  6E0E               	movwf	___awdiv@sign^0,c
 11588  005E8C  BE0C               	btfsc	(___awdiv@divisor+1)^0,7,c
 11589  005E8E  EF4D  F02F         	goto	u4370
 11590  005E92  EF4B  F02F         	goto	u4371
 11591  005E96                     u4371:
 11592  005E96  EF53  F02F         	goto	l4892
 11593  005E9A                     u4370:
 11594  005E9A  6C0B               	negf	___awdiv@divisor^0,c
 11595  005E9C  1E0C               	comf	(___awdiv@divisor+1)^0,f,c
 11596  005E9E  B0D8               	btfsc	status,0,c
 11597  005EA0  2A0C               	incf	(___awdiv@divisor+1)^0,f,c
 11598  005EA2  0E01               	movlw	1
 11599  005EA4  6E0E               	movwf	___awdiv@sign^0,c
 11600  005EA6                     l4892:
 11601  005EA6  BE0A               	btfsc	(___awdiv@dividend+1)^0,7,c
 11602  005EA8  EF5A  F02F         	goto	u4380
 11603  005EAC  EF58  F02F         	goto	u4381
 11604  005EB0                     u4381:
 11605  005EB0  EF60  F02F         	goto	l4898
 11606  005EB4                     u4380:
 11607  005EB4  6C09               	negf	___awdiv@dividend^0,c
 11608  005EB6  1E0A               	comf	(___awdiv@dividend+1)^0,f,c
 11609  005EB8  B0D8               	btfsc	status,0,c
 11610  005EBA  2A0A               	incf	(___awdiv@dividend+1)^0,f,c
 11611  005EBC  0E01               	movlw	1
 11612  005EBE  1A0E               	xorwf	___awdiv@sign^0,f,c
 11613  005EC0                     l4898:
 11614  005EC0  0E00               	movlw	0
 11615  005EC2  6E10               	movwf	(___awdiv@quotient+1)^0,c
 11616  005EC4  0E00               	movlw	0
 11617  005EC6  6E0F               	movwf	___awdiv@quotient^0,c
 11618  005EC8  500B               	movf	___awdiv@divisor^0,w,c
 11619  005ECA  100C               	iorwf	(___awdiv@divisor+1)^0,w,c
 11620  005ECC  B4D8               	btfsc	status,2,c
 11621  005ECE  EF6B  F02F         	goto	u4391
 11622  005ED2  EF6D  F02F         	goto	u4390
 11623  005ED6                     u4391:
 11624  005ED6  EF95  F02F         	goto	l4920
 11625  005EDA                     u4390:
 11626  005EDA  0E01               	movlw	1
 11627  005EDC  6E0D               	movwf	___awdiv@counter^0,c
 11628  005EDE  EF75  F02F         	goto	l4906
 11629  005EE2                     l4904:
 11630  005EE2  90D8               	bcf	status,0,c
 11631  005EE4  360B               	rlcf	___awdiv@divisor^0,f,c
 11632  005EE6  360C               	rlcf	(___awdiv@divisor+1)^0,f,c
 11633  005EE8  2A0D               	incf	___awdiv@counter^0,f,c
 11634  005EEA                     l4906:
 11635  005EEA  AE0C               	btfss	(___awdiv@divisor+1)^0,7,c
 11636  005EEC  EF7A  F02F         	goto	u4401
 11637  005EF0  EF7C  F02F         	goto	u4400
 11638  005EF4                     u4401:
 11639  005EF4  EF71  F02F         	goto	l4904
 11640  005EF8                     u4400:
 11641  005EF8                     l4908:
 11642  005EF8  90D8               	bcf	status,0,c
 11643  005EFA  360F               	rlcf	___awdiv@quotient^0,f,c
 11644  005EFC  3610               	rlcf	(___awdiv@quotient+1)^0,f,c
 11645  005EFE  500B               	movf	___awdiv@divisor^0,w,c
 11646  005F00  5C09               	subwf	___awdiv@dividend^0,w,c
 11647  005F02  500C               	movf	(___awdiv@divisor+1)^0,w,c
 11648  005F04  580A               	subwfb	(___awdiv@dividend+1)^0,w,c
 11649  005F06  A0D8               	btfss	status,0,c
 11650  005F08  EF88  F02F         	goto	u4411
 11651  005F0C  EF8A  F02F         	goto	u4410
 11652  005F10                     u4411:
 11653  005F10  EF8F  F02F         	goto	l4916
 11654  005F14                     u4410:
 11655  005F14  500B               	movf	___awdiv@divisor^0,w,c
 11656  005F16  5E09               	subwf	___awdiv@dividend^0,f,c
 11657  005F18  500C               	movf	(___awdiv@divisor+1)^0,w,c
 11658  005F1A  5A0A               	subwfb	(___awdiv@dividend+1)^0,f,c
 11659  005F1C  800F               	bsf	___awdiv@quotient^0,0,c
 11660  005F1E                     l4916:
 11661  005F1E  90D8               	bcf	status,0,c
 11662  005F20  320C               	rrcf	(___awdiv@divisor+1)^0,f,c
 11663  005F22  320B               	rrcf	___awdiv@divisor^0,f,c
 11664  005F24  2E0D               	decfsz	___awdiv@counter^0,f,c
 11665  005F26  EF7C  F02F         	goto	l4908
 11666  005F2A                     l4920:
 11667  005F2A  500E               	movf	___awdiv@sign^0,w,c
 11668  005F2C  B4D8               	btfsc	status,2,c
 11669  005F2E  EF9B  F02F         	goto	u4421
 11670  005F32  EF9D  F02F         	goto	u4420
 11671  005F36                     u4421:
 11672  005F36  EFA1  F02F         	goto	l4924
 11673  005F3A                     u4420:
 11674  005F3A  6C0F               	negf	___awdiv@quotient^0,c
 11675  005F3C  1E10               	comf	(___awdiv@quotient+1)^0,f,c
 11676  005F3E  B0D8               	btfsc	status,0,c
 11677  005F40  2A10               	incf	(___awdiv@quotient+1)^0,f,c
 11678  005F42                     l4924:
 11679  005F42  C00F  F009         	movff	___awdiv@quotient,?___awdiv
 11680  005F46  C010  F00A         	movff	___awdiv@quotient+1,?___awdiv+1
 11681  005F4A  0012               	return		;funcret
 11682  005F4C                     __end_of___awdiv:
 11683                           	opt callstack 0
 11684                           
 11685 ;; *************** function _pin_init *****************
 11686 ;; Defined at:
 11687 ;;		line 4 in file "pin_manager.c"
 11688 ;; Parameters:    Size  Location     Type
 11689 ;;		None
 11690 ;; Auto vars:     Size  Location     Type
 11691 ;;		None
 11692 ;; Return value:  Size  Location     Type
 11693 ;;                  1    wreg      void 
 11694 ;; Registers used:
 11695 ;;		wreg, status,2
 11696 ;; Tracked objects:
 11697 ;;		On entry : 0/0
 11698 ;;		On exit  : 0/0
 11699 ;;		Unchanged: 0/0
 11700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11705 ;;Total ram usage:        0 bytes
 11706 ;; Hardware stack levels used:    1
 11707 ;; Hardware stack levels required when called:    3
 11708 ;; This function calls:
 11709 ;;		Nothing
 11710 ;; This function is called by:
 11711 ;;		_SYSTEM_Initialize
 11712 ;; This function uses a non-reentrant model
 11713 ;;
 11714                           
 11715                           	psect	text32
 11716  0066BA                     __ptext32:
 11717                           	opt callstack 0
 11718  0066BA                     _pin_init:
 11719                           	opt callstack 26
 11720  0066BA                     
 11721                           ;pin_manager.c: 5:     TRISD = 0x00;
 11722  0066BA  0E00               	movlw	0
 11723  0066BC  6E95               	movwf	149,c	;volatile
 11724                           
 11725                           ;pin_manager.c: 6:     LATD = 0x00;
 11726  0066BE  0E00               	movlw	0
 11727  0066C0  6E8C               	movwf	140,c	;volatile
 11728                           
 11729                           ;pin_manager.c: 14:     LATA = 0x00;
 11730  0066C2  0E00               	movlw	0
 11731  0066C4  6E89               	movwf	137,c	;volatile
 11732                           
 11733                           ;pin_manager.c: 15:     TRISA = 0xF3;
 11734  0066C6  0EF3               	movlw	243
 11735  0066C8  6E92               	movwf	146,c	;volatile
 11736                           
 11737                           ;pin_manager.c: 18:     LATB = 0x00;
 11738  0066CA  0E00               	movlw	0
 11739  0066CC  6E8A               	movwf	138,c	;volatile
 11740  0066CE                     
 11741                           ;pin_manager.c: 19:     TRISB = 0xFF;
 11742  0066CE  6893               	setf	147,c	;volatile
 11743                           
 11744                           ;pin_manager.c: 23:     LATC = 0x00;
 11745  0066D0  0E00               	movlw	0
 11746  0066D2  6E8B               	movwf	139,c	;volatile
 11747                           
 11748                           ;pin_manager.c: 24:     TRISC = 0xD7;
 11749  0066D4  0ED7               	movlw	215
 11750  0066D6  6E94               	movwf	148,c	;volatile
 11751                           
 11752                           ;pin_manager.c: 25:     ADCON1 = 0b00001111;
 11753  0066D8  0E0F               	movlw	15
 11754  0066DA  6EC1               	movwf	193,c	;volatile
 11755  0066DC  0012               	return		;funcret
 11756  0066DE                     __end_of_pin_init:
 11757                           	opt callstack 0
 11758                           
 11759 ;; *************** function _osc_init *****************
 11760 ;; Defined at:
 11761 ;;		line 4 in file "osc_manager.c"
 11762 ;; Parameters:    Size  Location     Type
 11763 ;;		None
 11764 ;; Auto vars:     Size  Location     Type
 11765 ;;		None
 11766 ;; Return value:  Size  Location     Type
 11767 ;;                  1    wreg      void 
 11768 ;; Registers used:
 11769 ;;		wreg, status,2
 11770 ;; Tracked objects:
 11771 ;;		On entry : 0/0
 11772 ;;		On exit  : 0/0
 11773 ;;		Unchanged: 0/0
 11774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11779 ;;Total ram usage:        0 bytes
 11780 ;; Hardware stack levels used:    1
 11781 ;; Hardware stack levels required when called:    3
 11782 ;; This function calls:
 11783 ;;		Nothing
 11784 ;; This function is called by:
 11785 ;;		_SYSTEM_Initialize
 11786 ;; This function uses a non-reentrant model
 11787 ;;
 11788                           
 11789                           	psect	text33
 11790  006774                     __ptext33:
 11791                           	opt callstack 0
 11792  006774                     _osc_init:
 11793                           	opt callstack 26
 11794  006774                     
 11795                           ;osc_manager.c: 5:     OSCCON = 0x70;
 11796  006774  0E70               	movlw	112
 11797  006776  6ED3               	movwf	211,c	;volatile
 11798  006778  0012               	return		;funcret
 11799  00677A                     __end_of_osc_init:
 11800                           	opt callstack 0
 11801                           
 11802 ;; *************** function _interrupt_init *****************
 11803 ;; Defined at:
 11804 ;;		line 6 in file "interrupt_manager.c"
 11805 ;; Parameters:    Size  Location     Type
 11806 ;;		None
 11807 ;; Auto vars:     Size  Location     Type
 11808 ;;		None
 11809 ;; Return value:  Size  Location     Type
 11810 ;;                  1    wreg      void 
 11811 ;; Registers used:
 11812 ;;		None
 11813 ;; Tracked objects:
 11814 ;;		On entry : 0/0
 11815 ;;		On exit  : 0/0
 11816 ;;		Unchanged: 0/0
 11817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11822 ;;Total ram usage:        0 bytes
 11823 ;; Hardware stack levels used:    1
 11824 ;; Hardware stack levels required when called:    3
 11825 ;; This function calls:
 11826 ;;		Nothing
 11827 ;; This function is called by:
 11828 ;;		_SYSTEM_Initialize
 11829 ;; This function uses a non-reentrant model
 11830 ;;
 11831                           
 11832                           	psect	text34
 11833  00676A                     __ptext34:
 11834                           	opt callstack 0
 11835  00676A                     _interrupt_init:
 11836                           	opt callstack 26
 11837  00676A                     
 11838                           ;interrupt_manager.c: 7:     INTCONbits.GIE = 1;
 11839  00676A  8EF2               	bsf	242,7,c	;volatile
 11840                           
 11841                           ;interrupt_manager.c: 8:     INTCONbits.PEIE = 1;
 11842  00676C  8CF2               	bsf	242,6,c	;volatile
 11843                           
 11844                           ;interrupt_manager.c: 9:     INTCONbits.TMR0IE = 1;
 11845  00676E  8AF2               	bsf	242,5,c	;volatile
 11846                           
 11847                           ;interrupt_manager.c: 10:     INTCONbits.TMR0IF = 0;
 11848  006770  94F2               	bcf	242,2,c	;volatile
 11849  006772  0012               	return		;funcret
 11850  006774                     __end_of_interrupt_init:
 11851                           	opt callstack 0
 11852                           
 11853 ;; *************** function _LCDInit *****************
 11854 ;; Defined at:
 11855 ;;		line 46 in file "SPI_LCD.c"
 11856 ;; Parameters:    Size  Location     Type
 11857 ;;		None
 11858 ;; Auto vars:     Size  Location     Type
 11859 ;;		None
 11860 ;; Return value:  Size  Location     Type
 11861 ;;                  1    wreg      void 
 11862 ;; Registers used:
 11863 ;;		wreg, status,2, status,0, cstack
 11864 ;; Tracked objects:
 11865 ;;		On entry : 0/0
 11866 ;;		On exit  : 0/0
 11867 ;;		Unchanged: 0/0
 11868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11871 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11872 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11873 ;;Total ram usage:        1 bytes
 11874 ;; Hardware stack levels used:    1
 11875 ;; Hardware stack levels required when called:    6
 11876 ;; This function calls:
 11877 ;;		_InitBBSPI
 11878 ;;		_LCDPutInst
 11879 ;;		_Port_BBSPIInit
 11880 ;;		_WritePort_BBSPI
 11881 ;; This function is called by:
 11882 ;;		_SYSTEM_Initialize
 11883 ;; This function uses a non-reentrant model
 11884 ;;
 11885                           
 11886                           	psect	text35
 11887  00640C                     __ptext35:
 11888                           	opt callstack 0
 11889  00640C                     _LCDInit:
 11890                           	opt callstack 23
 11891  00640C                     
 11892                           ;SPI_LCD.c: 48:     InitBBSPI();
 11893  00640C  ECA5  F033         	call	_InitBBSPI	;wreg free
 11894  006410                     
 11895                           ;SPI_LCD.c: 49:     TRISFbits.TRISF6 = 0;
 11896  006410  9C97               	bcf	151,6,c	;volatile
 11897  006412                     
 11898                           ;SPI_LCD.c: 50:     LATFbits.LATF6 = 0;
 11899  006412  9C8E               	bcf	142,6,c	;volatile
 11900  006414                     
 11901                           ;SPI_LCD.c: 51:     _delay((unsigned long)((2)*(10000000/4000.0)));
 11902  006414  0E07               	movlw	7
 11903  006416  6E10               	movwf	??_LCDInit^0,c
 11904  006418  0E7D               	movlw	125
 11905  00641A                     u6057:
 11906  00641A  2EE8               	decfsz	wreg,f,c
 11907  00641C  D7FE               	bra	u6057
 11908  00641E  2E10               	decfsz	??_LCDInit^0,f,c
 11909  006420  D7FC               	bra	u6057
 11910  006422  F000               	nop	
 11911  006424                     
 11912                           ;SPI_LCD.c: 52:     LATFbits.LATF6 = 1;
 11913  006424  8C8E               	bsf	142,6,c	;volatile
 11914  006426                     
 11915                           ;SPI_LCD.c: 53:     Port_BBSPIInit (0x00);
 11916  006426  0E00               	movlw	0
 11917  006428  EC80  F033         	call	_Port_BBSPIInit
 11918  00642C                     
 11919                           ;SPI_LCD.c: 54:     Port_BBSPIInit (0x01);
 11920  00642C  0E01               	movlw	1
 11921  00642E  EC80  F033         	call	_Port_BBSPIInit
 11922  006432                     
 11923                           ;SPI_LCD.c: 55:     WritePort_BBSPI (0x12, 0);
 11924  006432  0E00               	movlw	0
 11925  006434  6E0C               	movwf	WritePort_BBSPI@a^0,c
 11926  006436  0E12               	movlw	18
 11927  006438  EC8D  F033         	call	_WritePort_BBSPI
 11928  00643C                     
 11929                           ;SPI_LCD.c: 56:     _delay((unsigned long)((15)*(10000000/4000.0)));
 11930  00643C  0E31               	movlw	49
 11931  00643E  6E10               	movwf	??_LCDInit^0,c
 11932  006440  0EB2               	movlw	178
 11933  006442                     u6067:
 11934  006442  2EE8               	decfsz	wreg,f,c
 11935  006444  D7FE               	bra	u6067
 11936  006446  2E10               	decfsz	??_LCDInit^0,f,c
 11937  006448  D7FC               	bra	u6067
 11938  00644A  D000               	nop2	
 11939  00644C                     
 11940                           ;SPI_LCD.c: 57:     LCDPutInst(0x32);
 11941  00644C  0E32               	movlw	50
 11942  00644E  ECD3  F031         	call	_LCDPutInst
 11943  006452                     
 11944                           ;SPI_LCD.c: 58:     LCDPutInst(0x3C);
 11945  006452  0E3C               	movlw	60
 11946  006454  ECD3  F031         	call	_LCDPutInst
 11947  006458                     
 11948                           ;SPI_LCD.c: 59:     LCDPutInst(0x0C);
 11949  006458  0E0C               	movlw	12
 11950  00645A  ECD3  F031         	call	_LCDPutInst
 11951  00645E                     
 11952                           ;SPI_LCD.c: 60:     LCDPutInst(0x01);
 11953  00645E  0E01               	movlw	1
 11954  006460  ECD3  F031         	call	_LCDPutInst
 11955  006464                     
 11956                           ;SPI_LCD.c: 61:     LCDPutInst(0x06);
 11957  006464  0E06               	movlw	6
 11958  006466  ECD3  F031         	call	_LCDPutInst
 11959  00646A  0012               	return		;funcret
 11960  00646C                     __end_of_LCDInit:
 11961                           	opt callstack 0
 11962                           
 11963 ;; *************** function _Port_BBSPIInit *****************
 11964 ;; Defined at:
 11965 ;;		line 124 in file "SPI_LCD.c"
 11966 ;; Parameters:    Size  Location     Type
 11967 ;;  port_dir        1    wreg     unsigned char 
 11968 ;; Auto vars:     Size  Location     Type
 11969 ;;  port_dir        1   11[COMRAM] unsigned char 
 11970 ;; Return value:  Size  Location     Type
 11971 ;;                  1    wreg      void 
 11972 ;; Registers used:
 11973 ;;		wreg, status,2, status,0, cstack
 11974 ;; Tracked objects:
 11975 ;;		On entry : 0/0
 11976 ;;		On exit  : 0/0
 11977 ;;		Unchanged: 0/0
 11978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11980 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11982 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11983 ;;Total ram usage:        1 bytes
 11984 ;; Hardware stack levels used:    1
 11985 ;; Hardware stack levels required when called:    4
 11986 ;; This function calls:
 11987 ;;		_SendByteBBSPI
 11988 ;; This function is called by:
 11989 ;;		_LCDInit
 11990 ;; This function uses a non-reentrant model
 11991 ;;
 11992                           
 11993                           	psect	text36
 11994  006700                     __ptext36:
 11995                           	opt callstack 0
 11996  006700                     _Port_BBSPIInit:
 11997                           	opt callstack 24
 11998                           
 11999                           ;incstack = 0
 12000                           ;Port_BBSPIInit@port_dir stored from wreg
 12001  006700  6E0C               	movwf	Port_BBSPIInit@port_dir^0,c
 12002  006702                     
 12003                           ;SPI_LCD.c: 124: void Port_BBSPIInit (unsigned char port_dir);SPI_LCD.c: 125: {;SPI_LCD.
      +                          c: 129:     LATAbits.LATA2 = 0;
 12004  006702  9489               	bcf	137,2,c	;volatile
 12005  006704                     
 12006                           ;SPI_LCD.c: 130:     SendByteBBSPI(0x40);
 12007  006704  0E40               	movlw	64
 12008  006706  EC68  F031         	call	_SendByteBBSPI
 12009                           
 12010                           ;SPI_LCD.c: 131:     SendByteBBSPI(port_dir);
 12011  00670A  500C               	movf	Port_BBSPIInit@port_dir^0,w,c
 12012  00670C  EC68  F031         	call	_SendByteBBSPI
 12013                           
 12014                           ;SPI_LCD.c: 132:     SendByteBBSPI(0x00);
 12015  006710  0E00               	movlw	0
 12016  006712  EC68  F031         	call	_SendByteBBSPI
 12017  006716                     
 12018                           ;SPI_LCD.c: 133:     LATAbits.LATA2 = 1;
 12019  006716  8489               	bsf	137,2,c	;volatile
 12020  006718  0012               	return		;funcret
 12021  00671A                     __end_of_Port_BBSPIInit:
 12022                           	opt callstack 0
 12023                           
 12024 ;; *************** function _LCDPutInst *****************
 12025 ;; Defined at:
 12026 ;;		line 180 in file "SPI_LCD.c"
 12027 ;; Parameters:    Size  Location     Type
 12028 ;;  ch              1    wreg     unsigned char 
 12029 ;; Auto vars:     Size  Location     Type
 12030 ;;  ch              1   14[COMRAM] unsigned char 
 12031 ;; Return value:  Size  Location     Type
 12032 ;;                  1    wreg      void 
 12033 ;; Registers used:
 12034 ;;		wreg, status,2, status,0, cstack
 12035 ;; Tracked objects:
 12036 ;;		On entry : 0/0
 12037 ;;		On exit  : 0/0
 12038 ;;		Unchanged: 0/0
 12039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12041 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12042 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12043 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12044 ;;Total ram usage:        2 bytes
 12045 ;; Hardware stack levels used:    1
 12046 ;; Hardware stack levels required when called:    5
 12047 ;; This function calls:
 12048 ;;		_WritePort_BBSPI
 12049 ;; This function is called by:
 12050 ;;		_LCDInit
 12051 ;;		_LCDMoveCursor
 12052 ;;		_disp_Clock
 12053 ;;		_state_clock
 12054 ;;		_state_mod_hour
 12055 ;;		_state_mod_minute
 12056 ;;		_state_mod_second
 12057 ;;		_disp_Clock_SW
 12058 ;;		_state_stop_watch
 12059 ;; This function uses a non-reentrant model
 12060 ;;
 12061                           
 12062                           	psect	text37
 12063  0063A6                     __ptext37:
 12064                           	opt callstack 0
 12065  0063A6                     _LCDPutInst:
 12066                           	opt callstack 23
 12067                           
 12068                           ;incstack = 0
 12069                           ;LCDPutInst@ch stored from wreg
 12070  0063A6  6E0F               	movwf	LCDPutInst@ch^0,c
 12071  0063A8                     
 12072                           ;SPI_LCD.c: 180: void LCDPutInst (unsigned char ch);SPI_LCD.c: 181: {;SPI_LCD.c: 182:   
      +                            _delay((unsigned long)((2)*(10000000/4000.0)));
 12073  0063A8  0E07               	movlw	7
 12074  0063AA  6E0E               	movwf	??_LCDPutInst^0,c
 12075  0063AC  0E7D               	movlw	125
 12076  0063AE                     u6077:
 12077  0063AE  2EE8               	decfsz	wreg,f,c
 12078  0063B0  D7FE               	bra	u6077
 12079  0063B2  2E0E               	decfsz	??_LCDPutInst^0,f,c
 12080  0063B4  D7FC               	bra	u6077
 12081  0063B6  F000               	nop	
 12082  0063B8                     
 12083                           ;SPI_LCD.c: 183:     WritePort_BBSPI (0x12, 0x00);
 12084  0063B8  0E00               	movlw	0
 12085  0063BA  6E0C               	movwf	WritePort_BBSPI@a^0,c
 12086  0063BC  0E12               	movlw	18
 12087  0063BE  EC8D  F033         	call	_WritePort_BBSPI
 12088  0063C2                     
 12089                           ;SPI_LCD.c: 184:     _delay((unsigned long)((1)*(10000000/4000.0)));
 12090  0063C2  0E04               	movlw	4
 12091  0063C4  6E0E               	movwf	??_LCDPutInst^0,c
 12092  0063C6  0E3E               	movlw	62
 12093  0063C8                     u6087:
 12094  0063C8  2EE8               	decfsz	wreg,f,c
 12095  0063CA  D7FE               	bra	u6087
 12096  0063CC  2E0E               	decfsz	??_LCDPutInst^0,f,c
 12097  0063CE  D7FC               	bra	u6087
 12098  0063D0                     
 12099                           ;SPI_LCD.c: 185:     WritePort_BBSPI (0x13, ch);
 12100  0063D0  C00F  F00C         	movff	LCDPutInst@ch,WritePort_BBSPI@a
 12101  0063D4  0E13               	movlw	19
 12102  0063D6  EC8D  F033         	call	_WritePort_BBSPI
 12103  0063DA                     
 12104                           ;SPI_LCD.c: 186:     _delay((unsigned long)((1)*(10000000/4000.0)));
 12105  0063DA  0E04               	movlw	4
 12106  0063DC  6E0E               	movwf	??_LCDPutInst^0,c
 12107  0063DE  0E3E               	movlw	62
 12108  0063E0                     u6097:
 12109  0063E0  2EE8               	decfsz	wreg,f,c
 12110  0063E2  D7FE               	bra	u6097
 12111  0063E4  2E0E               	decfsz	??_LCDPutInst^0,f,c
 12112  0063E6  D7FC               	bra	u6097
 12113  0063E8                     
 12114                           ;SPI_LCD.c: 187:     WritePort_BBSPI (0x12,0x40);
 12115  0063E8  0E40               	movlw	64
 12116  0063EA  6E0C               	movwf	WritePort_BBSPI@a^0,c
 12117  0063EC  0E12               	movlw	18
 12118  0063EE  EC8D  F033         	call	_WritePort_BBSPI
 12119  0063F2                     
 12120                           ;SPI_LCD.c: 188:     _delay((unsigned long)((1)*(10000000/4000.0)));
 12121  0063F2  0E04               	movlw	4
 12122  0063F4  6E0E               	movwf	??_LCDPutInst^0,c
 12123  0063F6  0E3E               	movlw	62
 12124  0063F8                     u6107:
 12125  0063F8  2EE8               	decfsz	wreg,f,c
 12126  0063FA  D7FE               	bra	u6107
 12127  0063FC  2E0E               	decfsz	??_LCDPutInst^0,f,c
 12128  0063FE  D7FC               	bra	u6107
 12129  006400                     
 12130                           ;SPI_LCD.c: 189:     WritePort_BBSPI (0x12, 0x00);
 12131  006400  0E00               	movlw	0
 12132  006402  6E0C               	movwf	WritePort_BBSPI@a^0,c
 12133  006404  0E12               	movlw	18
 12134  006406  EC8D  F033         	call	_WritePort_BBSPI
 12135  00640A  0012               	return		;funcret
 12136  00640C                     __end_of_LCDPutInst:
 12137                           	opt callstack 0
 12138                           
 12139 ;; *************** function _WritePort_BBSPI *****************
 12140 ;; Defined at:
 12141 ;;		line 145 in file "SPI_LCD.c"
 12142 ;; Parameters:    Size  Location     Type
 12143 ;;  port_add        1    wreg     unsigned char 
 12144 ;;  a               1   11[COMRAM] unsigned char 
 12145 ;; Auto vars:     Size  Location     Type
 12146 ;;  port_add        1   12[COMRAM] unsigned char 
 12147 ;; Return value:  Size  Location     Type
 12148 ;;                  1    wreg      void 
 12149 ;; Registers used:
 12150 ;;		wreg, status,2, status,0, cstack
 12151 ;; Tracked objects:
 12152 ;;		On entry : 0/0
 12153 ;;		On exit  : 0/0
 12154 ;;		Unchanged: 0/0
 12155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12156 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12157 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12159 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12160 ;;Total ram usage:        2 bytes
 12161 ;; Hardware stack levels used:    1
 12162 ;; Hardware stack levels required when called:    4
 12163 ;; This function calls:
 12164 ;;		_SendByteBBSPI
 12165 ;; This function is called by:
 12166 ;;		_LCDInit
 12167 ;;		_LCDPutChar
 12168 ;;		_LCDPutInst
 12169 ;; This function uses a non-reentrant model
 12170 ;;
 12171                           
 12172                           	psect	text38
 12173  00671A                     __ptext38:
 12174                           	opt callstack 0
 12175  00671A                     _WritePort_BBSPI:
 12176                           	opt callstack 23
 12177                           
 12178                           ;incstack = 0
 12179                           ;WritePort_BBSPI@port_add stored from wreg
 12180  00671A  6E0D               	movwf	WritePort_BBSPI@port_add^0,c
 12181  00671C                     
 12182                           ;SPI_LCD.c: 145: void WritePort_BBSPI (unsigned char port_add, unsigned char a);SPI_LCD.
      +                          c: 146: {;SPI_LCD.c: 147:     LATAbits.LATA2 = 0;
 12183  00671C  9489               	bcf	137,2,c	;volatile
 12184  00671E                     
 12185                           ;SPI_LCD.c: 148:     SendByteBBSPI(0x40);
 12186  00671E  0E40               	movlw	64
 12187  006720  EC68  F031         	call	_SendByteBBSPI
 12188                           
 12189                           ;SPI_LCD.c: 149:     SendByteBBSPI(port_add);
 12190  006724  500D               	movf	WritePort_BBSPI@port_add^0,w,c
 12191  006726  EC68  F031         	call	_SendByteBBSPI
 12192                           
 12193                           ;SPI_LCD.c: 150:     SendByteBBSPI(a);
 12194  00672A  500C               	movf	WritePort_BBSPI@a^0,w,c
 12195  00672C  EC68  F031         	call	_SendByteBBSPI
 12196  006730                     
 12197                           ;SPI_LCD.c: 151:     LATAbits.LATA2 = 1;
 12198  006730  8489               	bsf	137,2,c	;volatile
 12199  006732  0012               	return		;funcret
 12200  006734                     __end_of_WritePort_BBSPI:
 12201                           	opt callstack 0
 12202                           
 12203 ;; *************** function _SendByteBBSPI *****************
 12204 ;; Defined at:
 12205 ;;		line 92 in file "SPI_LCD.c"
 12206 ;; Parameters:    Size  Location     Type
 12207 ;;  output          1    wreg     unsigned char 
 12208 ;; Auto vars:     Size  Location     Type
 12209 ;;  output          1    8[COMRAM] unsigned char 
 12210 ;;  input           1   10[COMRAM] unsigned char 
 12211 ;;  bitcount        1    9[COMRAM] unsigned char 
 12212 ;; Return value:  Size  Location     Type
 12213 ;;                  1    wreg      void 
 12214 ;; Registers used:
 12215 ;;		wreg, status,2, status,0
 12216 ;; Tracked objects:
 12217 ;;		On entry : 0/0
 12218 ;;		On exit  : 0/0
 12219 ;;		Unchanged: 0/0
 12220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12222 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12224 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12225 ;;Total ram usage:        3 bytes
 12226 ;; Hardware stack levels used:    1
 12227 ;; Hardware stack levels required when called:    3
 12228 ;; This function calls:
 12229 ;;		Nothing
 12230 ;; This function is called by:
 12231 ;;		_Port_BBSPIInit
 12232 ;;		_WritePort_BBSPI
 12233 ;; This function uses a non-reentrant model
 12234 ;;
 12235                           
 12236                           	psect	text39
 12237  0062D0                     __ptext39:
 12238                           	opt callstack 0
 12239  0062D0                     _SendByteBBSPI:
 12240                           	opt callstack 23
 12241                           
 12242                           ;incstack = 0
 12243                           ;SendByteBBSPI@output stored from wreg
 12244  0062D0  6E09               	movwf	SendByteBBSPI@output^0,c
 12245  0062D2                     
 12246                           ;SPI_LCD.c: 92: void SendByteBBSPI (unsigned char output);SPI_LCD.c: 93: {;SPI_LCD.c: 94
      +                          :     unsigned char bitcount;;SPI_LCD.c: 95:     unsigned char input = output;
 12247  0062D2  C009  F00B         	movff	SendByteBBSPI@output,SendByteBBSPI@input
 12248  0062D6                     
 12249                           ;SPI_LCD.c: 97:     for(bitcount=0;bitcount<8;bitcount++)
 12250  0062D6  0E00               	movlw	0
 12251  0062D8  6E0A               	movwf	SendByteBBSPI@bitcount^0,c
 12252  0062DA                     l295:
 12253                           
 12254                           ;SPI_LCD.c: 98:     {;SPI_LCD.c: 100:         if(output & 0x80)
 12255  0062DA  AE09               	btfss	SendByteBBSPI@output^0,7,c
 12256  0062DC  EF72  F031         	goto	u2571
 12257  0062E0  EF74  F031         	goto	u2570
 12258  0062E4                     u2571:
 12259  0062E4  EF77  F031         	goto	l297
 12260  0062E8                     u2570:
 12261  0062E8                     
 12262                           ;SPI_LCD.c: 101:             LATCbits.LATC5 = 1;
 12263  0062E8  8A8B               	bsf	139,5,c	;volatile
 12264  0062EA  EF78  F031         	goto	l298
 12265  0062EE                     l297:
 12266                           
 12267                           ;SPI_LCD.c: 103:             LATCbits.LATC5 = 0;
 12268  0062EE  9A8B               	bcf	139,5,c	;volatile
 12269  0062F0                     l298:
 12270                           
 12271                           ;SPI_LCD.c: 105:         if (LATCbits.LATC4)
 12272  0062F0  A88B               	btfss	139,4,c	;volatile
 12273  0062F2  EF7D  F031         	goto	u2581
 12274  0062F6  EF7F  F031         	goto	u2580
 12275  0062FA                     u2581:
 12276  0062FA  EF83  F031         	goto	l3662
 12277  0062FE                     u2580:
 12278  0062FE                     
 12279                           ;SPI_LCD.c: 106:             input = (input << 1) | 0x1;
 12280  0062FE  80D8               	bsf	status,0,c
 12281  006300  360B               	rlcf	SendByteBBSPI@input^0,f,c
 12282  006302  EF86  F031         	goto	l3664
 12283  006306                     l3662:
 12284                           
 12285                           ;SPI_LCD.c: 108:             input = input << 1;
 12286  006306  500B               	movf	SendByteBBSPI@input^0,w,c
 12287  006308  240B               	addwf	SendByteBBSPI@input^0,w,c
 12288  00630A  6E0B               	movwf	SendByteBBSPI@input^0,c
 12289  00630C                     l3664:
 12290                           
 12291                           ;SPI_LCD.c: 109:         LATCbits.LATC3 = 1;
 12292  00630C  868B               	bsf	139,3,c	;volatile
 12293  00630E                     
 12294                           ;SPI_LCD.c: 110:         __nop();__nop();__nop();__nop();__nop();__nop();
 12295  00630E  F000               	nop	
 12296  006310  F000               	nop	
 12297  006312  F000               	nop	
 12298  006314  F000               	nop	
 12299  006316  F000               	nop	
 12300  006318  F000               	nop	
 12301  00631A                     
 12302                           ;SPI_LCD.c: 111:         __nop();__nop();__nop();__nop();__nop();__nop();
 12303  00631A  F000               	nop	
 12304  00631C  F000               	nop	
 12305  00631E  F000               	nop	
 12306  006320  F000               	nop	
 12307  006322  F000               	nop	
 12308  006324  F000               	nop	
 12309  006326                     
 12310                           ;SPI_LCD.c: 112:         LATCbits.LATC3 = 0;
 12311  006326  968B               	bcf	139,3,c	;volatile
 12312                           
 12313                           ;SPI_LCD.c: 113:         output <<= 1;
 12314  006328  90D8               	bcf	status,0,c
 12315  00632A  3609               	rlcf	SendByteBBSPI@output^0,f,c
 12316  00632C                     
 12317                           ;SPI_LCD.c: 114:     }
 12318  00632C  2A0A               	incf	SendByteBBSPI@bitcount^0,f,c
 12319  00632E  0E07               	movlw	7
 12320  006330  640A               	cpfsgt	SendByteBBSPI@bitcount^0,c
 12321  006332  EF9D  F031         	goto	u2591
 12322  006336  EF9F  F031         	goto	u2590
 12323  00633A                     u2591:
 12324  00633A  EF6D  F031         	goto	l295
 12325  00633E                     u2590:
 12326  00633E  0012               	return		;funcret
 12327  006340                     __end_of_SendByteBBSPI:
 12328                           	opt callstack 0
 12329                           
 12330 ;; *************** function _InitBBSPI *****************
 12331 ;; Defined at:
 12332 ;;		line 71 in file "SPI_LCD.c"
 12333 ;; Parameters:    Size  Location     Type
 12334 ;;		None
 12335 ;; Auto vars:     Size  Location     Type
 12336 ;;		None
 12337 ;; Return value:  Size  Location     Type
 12338 ;;                  1    wreg      void 
 12339 ;; Registers used:
 12340 ;;		None
 12341 ;; Tracked objects:
 12342 ;;		On entry : 0/0
 12343 ;;		On exit  : 0/0
 12344 ;;		Unchanged: 0/0
 12345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12350 ;;Total ram usage:        0 bytes
 12351 ;; Hardware stack levels used:    1
 12352 ;; Hardware stack levels required when called:    3
 12353 ;; This function calls:
 12354 ;;		Nothing
 12355 ;; This function is called by:
 12356 ;;		_LCDInit
 12357 ;; This function uses a non-reentrant model
 12358 ;;
 12359                           
 12360                           	psect	text40
 12361  00674A                     __ptext40:
 12362                           	opt callstack 0
 12363  00674A                     _InitBBSPI:
 12364                           	opt callstack 25
 12365  00674A                     
 12366                           ;SPI_LCD.c: 73:     TRISAbits.TRISA2 = 0;
 12367  00674A  9492               	bcf	146,2,c	;volatile
 12368                           
 12369                           ;SPI_LCD.c: 74:     TRISCbits.TRISC4 = 1;
 12370  00674C  8894               	bsf	148,4,c	;volatile
 12371                           
 12372                           ;SPI_LCD.c: 75:     TRISCbits.TRISC5 = 0;
 12373  00674E  9A94               	bcf	148,5,c	;volatile
 12374                           
 12375                           ;SPI_LCD.c: 76:     TRISCbits.TRISC3 = 0;
 12376  006750  9694               	bcf	148,3,c	;volatile
 12377                           
 12378                           ;SPI_LCD.c: 78:     LATAbits.LATA2 = 1;
 12379  006752  8489               	bsf	137,2,c	;volatile
 12380                           
 12381                           ;SPI_LCD.c: 79:     LATCbits.LATC4 = 1;
 12382  006754  888B               	bsf	139,4,c	;volatile
 12383                           
 12384                           ;SPI_LCD.c: 80:     LATCbits.LATC5 = 0;
 12385  006756  9A8B               	bcf	139,5,c	;volatile
 12386                           
 12387                           ;SPI_LCD.c: 81:     LATCbits.LATC3 = 0;
 12388  006758  968B               	bcf	139,3,c	;volatile
 12389  00675A  0012               	return		;funcret
 12390  00675C                     __end_of_InitBBSPI:
 12391                           	opt callstack 0
 12392                           
 12393 ;; *************** function _myISR *****************
 12394 ;; Defined at:
 12395 ;;		line 13 in file "interrupt_manager.c"
 12396 ;; Parameters:    Size  Location     Type
 12397 ;;		None
 12398 ;; Auto vars:     Size  Location     Type
 12399 ;;		None
 12400 ;; Return value:  Size  Location     Type
 12401 ;;                  1    wreg      void 
 12402 ;; Registers used:
 12403 ;;		wreg, status,2, status,0, cstack
 12404 ;; Tracked objects:
 12405 ;;		On entry : 0/0
 12406 ;;		On exit  : 0/0
 12407 ;;		Unchanged: 0/0
 12408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12413 ;;Total ram usage:        0 bytes
 12414 ;; Hardware stack levels used:    1
 12415 ;; Hardware stack levels required when called:    2
 12416 ;; This function calls:
 12417 ;;		_handleButton
 12418 ;; This function is called by:
 12419 ;;		Interrupt level 2
 12420 ;; This function uses a non-reentrant model
 12421 ;;
 12422                           
 12423                           	psect	intcode
 12424  000008                     __pintcode:
 12425                           	opt callstack 0
 12426  000008                     _myISR:
 12427                           	opt callstack 21
 12428                           
 12429                           ;incstack = 0
 12430  000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12431  00000A  EDA7  F030         	call	int_func,f	;refresh shadow registers
 12432                           
 12433                           	psect	intcode_body
 12434  00614E                     __pintcode_body:
 12435                           	opt callstack 21
 12436  00614E                     int_func:
 12437                           	opt callstack 21
 12438  00614E  0006               	pop		; remove dummy address from shadow register refresh
 12439  006150                     
 12440                           ;interrupt_manager.c: 14:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF) {
 12441  006150  AAF2               	btfss	242,5,c	;volatile
 12442  006152  EFAD  F030         	goto	i2u508_41
 12443  006156  EFAF  F030         	goto	i2u508_40
 12444  00615A                     i2u508_41:
 12445  00615A  EFEE  F030         	goto	i2l106
 12446  00615E                     i2u508_40:
 12447  00615E  A4F2               	btfss	242,2,c	;volatile
 12448  006160  EFB4  F030         	goto	i2u509_41
 12449  006164  EFB6  F030         	goto	i2u509_40
 12450  006168                     i2u509_41:
 12451  006168  EFEE  F030         	goto	i2l106
 12452  00616C                     i2u509_40:
 12453  00616C                     
 12454                           ;interrupt_manager.c: 15:         INTCONbits.TMR0IF = 0;
 12455  00616C  94F2               	bcf	242,2,c	;volatile
 12456                           
 12457                           ;interrupt_manager.c: 16:         TMR0L = counter_low;
 12458  00616E  C0C3  FFD6         	movff	_counter_low,4054	;volatile
 12459                           
 12460                           ;interrupt_manager.c: 17:         TMR0H = counter_high;
 12461  006172  C0C1  FFD7         	movff	_counter_high,4055	;volatile
 12462  006176                     
 12463                           ;interrupt_manager.c: 18:         handleButton();
 12464  006176  EC2A  F026         	call	_handleButton	;wreg free
 12465  00617A                     
 12466                           ;interrupt_manager.c: 19:         count++;
 12467  00617A  0100               	movlb	0	; () banked
 12468  00617C  4BBF               	infsnz	_count& (0+255),f,b
 12469  00617E  2BC0               	incf	(_count+1)& (0+255),f,b
 12470  006180                     
 12471                           ; BSR set to: 0
 12472                           ;interrupt_manager.c: 20:         count1++;
 12473  006180  4BBD               	infsnz	_count1& (0+255),f,b
 12474  006182  2BBE               	incf	(_count1+1)& (0+255),f,b
 12475  006184                     
 12476                           ; BSR set to: 0
 12477                           ;interrupt_manager.c: 21:         if(count1 == 100 / 10) {
 12478  006184  0E0A               	movlw	10
 12479  006186  19BD               	xorwf	_count1& (0+255),w,b
 12480  006188  11BE               	iorwf	(_count1+1)& (0+255),w,b
 12481  00618A  A4D8               	btfss	status,2,c
 12482  00618C  EFCA  F030         	goto	i2u510_41
 12483  006190  EFCC  F030         	goto	i2u510_40
 12484  006194                     i2u510_41:
 12485  006194  EFD2  F030         	goto	i2l5582
 12486  006198                     i2u510_40:
 12487  006198                     
 12488                           ; BSR set to: 0
 12489                           ;interrupt_manager.c: 22:             ms_flag = 1;
 12490  006198  0E01               	movlw	1
 12491  00619A  6FCA               	movwf	_ms_flag& (0+255),b
 12492                           
 12493                           ;interrupt_manager.c: 23:             count1 = 0;
 12494  00619C  0E00               	movlw	0
 12495  00619E  6FBE               	movwf	(_count1+1)& (0+255),b
 12496  0061A0  0E00               	movlw	0
 12497  0061A2  6FBD               	movwf	_count1& (0+255),b
 12498  0061A4                     i2l5582:
 12499                           
 12500                           ; BSR set to: 0
 12501                           ;interrupt_manager.c: 25:         if(count == 800 / 10) {
 12502  0061A4  0E50               	movlw	80
 12503  0061A6  19BF               	xorwf	_count& (0+255),w,b
 12504  0061A8  11C0               	iorwf	(_count+1)& (0+255),w,b
 12505  0061AA  A4D8               	btfss	status,2,c
 12506  0061AC  EFDA  F030         	goto	i2u511_41
 12507  0061B0  EFDC  F030         	goto	i2u511_40
 12508  0061B4                     i2u511_41:
 12509  0061B4  EFDE  F030         	goto	i2l5586
 12510  0061B8                     i2u511_40:
 12511  0061B8                     
 12512                           ; BSR set to: 0
 12513                           ;interrupt_manager.c: 26:             hide_flag = 1;
 12514  0061B8  0E01               	movlw	1
 12515  0061BA  6FCB               	movwf	_hide_flag& (0+255),b
 12516  0061BC                     i2l5586:
 12517                           
 12518                           ; BSR set to: 0
 12519                           ;interrupt_manager.c: 28:         if(count == 1000 / 10) {
 12520  0061BC  0E64               	movlw	100
 12521  0061BE  19BF               	xorwf	_count& (0+255),w,b
 12522  0061C0  11C0               	iorwf	(_count+1)& (0+255),w,b
 12523  0061C2  A4D8               	btfss	status,2,c
 12524  0061C4  EFE6  F030         	goto	i2u512_41
 12525  0061C8  EFE8  F030         	goto	i2u512_40
 12526  0061CC                     i2u512_41:
 12527  0061CC  EFEE  F030         	goto	i2l106
 12528  0061D0                     i2u512_40:
 12529  0061D0                     
 12530                           ; BSR set to: 0
 12531                           ;interrupt_manager.c: 29:             count = 0;
 12532  0061D0  0E00               	movlw	0
 12533  0061D2  6FC0               	movwf	(_count+1)& (0+255),b
 12534  0061D4  0E00               	movlw	0
 12535  0061D6  6FBF               	movwf	_count& (0+255),b
 12536                           
 12537                           ;interrupt_manager.c: 30:             second_flag = 1;
 12538  0061D8  0E01               	movlw	1
 12539  0061DA  6FCC               	movwf	_second_flag& (0+255),b
 12540  0061DC                     i2l106:
 12541  0061DC  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12542  0061DE  0011               	retfie		f
 12543  0061E0                     __end_of_myISR:
 12544                           	opt callstack 0
 12545                           
 12546 ;; *************** function _handleButton *****************
 12547 ;; Defined at:
 12548 ;;		line 39 in file "buttons.c"
 12549 ;; Parameters:    Size  Location     Type
 12550 ;;		None
 12551 ;; Auto vars:     Size  Location     Type
 12552 ;;  checkRB0        2    6[COMRAM] int 
 12553 ;;  checkRA5        2    4[COMRAM] int 
 12554 ;; Return value:  Size  Location     Type
 12555 ;;                  1    wreg      void 
 12556 ;; Registers used:
 12557 ;;		wreg, status,2, status,0, cstack
 12558 ;; Tracked objects:
 12559 ;;		On entry : 0/0
 12560 ;;		On exit  : 0/0
 12561 ;;		Unchanged: 0/0
 12562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12564 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12565 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12566 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12567 ;;Total ram usage:        6 bytes
 12568 ;; Hardware stack levels used:    1
 12569 ;; Hardware stack levels required when called:    1
 12570 ;; This function calls:
 12571 ;;		_readButtonRA5
 12572 ;;		_readButtonRB0
 12573 ;; This function is called by:
 12574 ;;		_myISR
 12575 ;; This function uses a non-reentrant model
 12576 ;;
 12577                           
 12578                           	psect	text42
 12579  004C54                     __ptext42:
 12580                           	opt callstack 0
 12581  004C54                     _handleButton:
 12582                           	opt callstack 21
 12583  004C54                     
 12584                           ;buttons.c: 40:     int checkRA5 = readButtonRA5();
 12585  004C54  EC5F  F032         	call	_readButtonRA5	;wreg free
 12586  004C58  C001  F005         	movff	?_readButtonRA5,handleButton@checkRA5
 12587  004C5C  C002  F006         	movff	?_readButtonRA5+1,handleButton@checkRA5+1
 12588                           
 12589                           ;buttons.c: 41:     int checkRB0 = readButtonRB0();
 12590  004C60  EC36  F032         	call	_readButtonRB0	;wreg free
 12591  004C64  C001  F007         	movff	?_readButtonRB0,handleButton@checkRB0
 12592  004C68  C002  F008         	movff	?_readButtonRB0+1,handleButton@checkRB0+1
 12593  004C6C                     
 12594                           ;buttons.c: 42:     if(checkRA5 == 2) {
 12595  004C6C  0E02               	movlw	2
 12596  004C6E  1805               	xorwf	handleButton@checkRA5^0,w,c
 12597  004C70  1006               	iorwf	(handleButton@checkRA5+1)^0,w,c
 12598  004C72  A4D8               	btfss	status,2,c
 12599  004C74  EF3E  F026         	goto	i2u496_41
 12600  004C78  EF40  F026         	goto	i2u496_40
 12601  004C7C                     i2u496_41:
 12602  004C7C  EFBD  F026         	goto	i2l5498
 12603  004C80                     i2u496_40:
 12604  004C80                     
 12605                           ;buttons.c: 43:         stateRB0 = 0;
 12606  004C80  0E00               	movlw	0
 12607  004C82  0100               	movlb	0	; () banked
 12608  004C84  6FC5               	movwf	_stateRB0& (0+255),b
 12609                           
 12610                           ;buttons.c: 44:         countRB0 = 0;
 12611  004C86  0E00               	movlw	0
 12612  004C88  6FB8               	movwf	(_countRB0+1)& (0+255),b
 12613  004C8A  0E00               	movlw	0
 12614  004C8C  6FB7               	movwf	_countRB0& (0+255),b
 12615                           
 12616                           ;buttons.c: 45:         countRB0_1 = 0;
 12617  004C8E  0E00               	movlw	0
 12618  004C90  6FB6               	movwf	(_countRB0_1+1)& (0+255),b
 12619  004C92  0E00               	movlw	0
 12620  004C94  6FB5               	movwf	_countRB0_1& (0+255),b
 12621                           
 12622                           ;buttons.c: 46:         switch(stateRA5) {
 12623  004C96  EFA0  F026         	goto	i2l5496
 12624  004C9A                     i2l5470:
 12625                           
 12626                           ; BSR set to: 0
 12627                           ;buttons.c: 48:                 buttonRA5 = 1;
 12628  004C9A  0E01               	movlw	1
 12629  004C9C  6FCE               	movwf	_buttonRA5& (0+255),b
 12630                           
 12631                           ;buttons.c: 49:                 stateRA5 = 1;
 12632  004C9E  0E01               	movlw	1
 12633  004CA0  6FC6               	movwf	_stateRA5& (0+255),b
 12634                           
 12635                           ;buttons.c: 50:                 break;
 12636  004CA2  EF6B  F027         	goto	i2l693
 12637  004CA6                     i2l5472:
 12638                           
 12639                           ; BSR set to: 0
 12640                           ;buttons.c: 52:                 countRA5++;
 12641  004CA6  4BBB               	infsnz	_countRA5& (0+255),f,b
 12642  004CA8  2BBC               	incf	(_countRA5+1)& (0+255),f,b
 12643  004CAA                     
 12644                           ; BSR set to: 0
 12645                           ;buttons.c: 53:                 if(countRA5 >= 1000 / 10) {
 12646  004CAA  51BC               	movf	(_countRA5+1)& (0+255),w,b
 12647  004CAC  E109               	bnz	i2u497_40
 12648  004CAE  0E64               	movlw	100
 12649  004CB0  5DBB               	subwf	_countRA5& (0+255),w,b
 12650  004CB2  A0D8               	btfss	status,0,c
 12651  004CB4  EF5E  F026         	goto	i2u497_41
 12652  004CB8  EF60  F026         	goto	i2u497_40
 12653  004CBC                     i2u497_41:
 12654  004CBC  EF6B  F027         	goto	i2l693
 12655  004CC0                     i2u497_40:
 12656  004CC0                     
 12657                           ; BSR set to: 0
 12658                           ;buttons.c: 54:                     buttonRA5 = 1;
 12659  004CC0  0E01               	movlw	1
 12660  004CC2  6FCE               	movwf	_buttonRA5& (0+255),b
 12661                           
 12662                           ;buttons.c: 55:                     stateRA5 = 2;
 12663  004CC4  0E02               	movlw	2
 12664  004CC6  6FC6               	movwf	_stateRA5& (0+255),b
 12665  004CC8  EF6B  F027         	goto	i2l693
 12666  004CCC                     i2l5478:
 12667                           
 12668                           ; BSR set to: 0
 12669                           ;buttons.c: 59:                 countRA5++;
 12670  004CCC  4BBB               	infsnz	_countRA5& (0+255),f,b
 12671  004CCE  2BBC               	incf	(_countRA5+1)& (0+255),f,b
 12672                           
 12673                           ;buttons.c: 60:                 countRA5_1++;
 12674  004CD0  4BB9               	infsnz	_countRA5_1& (0+255),f,b
 12675  004CD2  2BBA               	incf	(_countRA5_1+1)& (0+255),f,b
 12676  004CD4                     
 12677                           ; BSR set to: 0
 12678                           ;buttons.c: 61:                 if(countRA5_1 == 500 / 10) {
 12679  004CD4  0E32               	movlw	50
 12680  004CD6  19B9               	xorwf	_countRA5_1& (0+255),w,b
 12681  004CD8  11BA               	iorwf	(_countRA5_1+1)& (0+255),w,b
 12682  004CDA  A4D8               	btfss	status,2,c
 12683  004CDC  EF72  F026         	goto	i2u498_41
 12684  004CE0  EF74  F026         	goto	i2u498_40
 12685  004CE4                     i2u498_41:
 12686  004CE4  EF7A  F026         	goto	i2l5484
 12687  004CE8                     i2u498_40:
 12688  004CE8                     
 12689                           ; BSR set to: 0
 12690                           ;buttons.c: 62:                     buttonRA5 = 1;
 12691  004CE8  0E01               	movlw	1
 12692  004CEA  6FCE               	movwf	_buttonRA5& (0+255),b
 12693                           
 12694                           ;buttons.c: 63:                     countRA5_1 = 0;
 12695  004CEC  0E00               	movlw	0
 12696  004CEE  6FBA               	movwf	(_countRA5_1+1)& (0+255),b
 12697  004CF0  0E00               	movlw	0
 12698  004CF2  6FB9               	movwf	_countRA5_1& (0+255),b
 12699  004CF4                     i2l5484:
 12700                           
 12701                           ; BSR set to: 0
 12702                           ;buttons.c: 65:                 if(countRA5 >= 3000 / 10) {
 12703  004CF4  0E2C               	movlw	44
 12704  004CF6  5DBB               	subwf	_countRA5& (0+255),w,b
 12705  004CF8  0E01               	movlw	1
 12706  004CFA  59BC               	subwfb	(_countRA5+1)& (0+255),w,b
 12707  004CFC  A0D8               	btfss	status,0,c
 12708  004CFE  EF83  F026         	goto	i2u499_41
 12709  004D02  EF85  F026         	goto	i2u499_40
 12710  004D06                     i2u499_41:
 12711  004D06  EF6B  F027         	goto	i2l693
 12712  004D0A                     i2u499_40:
 12713  004D0A                     
 12714                           ; BSR set to: 0
 12715                           ;buttons.c: 66:                     buttonRA5 = 1;
 12716  004D0A  0E01               	movlw	1
 12717  004D0C  6FCE               	movwf	_buttonRA5& (0+255),b
 12718                           
 12719                           ;buttons.c: 67:                     stateRA5 = 3;
 12720  004D0E  0E03               	movlw	3
 12721  004D10  6FC6               	movwf	_stateRA5& (0+255),b
 12722  004D12  EF6B  F027         	goto	i2l693
 12723  004D16                     i2l5488:
 12724                           
 12725                           ; BSR set to: 0
 12726                           ;buttons.c: 71:                 countRA5++;
 12727  004D16  4BBB               	infsnz	_countRA5& (0+255),f,b
 12728  004D18  2BBC               	incf	(_countRA5+1)& (0+255),f,b
 12729  004D1A                     
 12730                           ; BSR set to: 0
 12731                           ;buttons.c: 72:                 if(countRA5 >= 100 / 10) {
 12732  004D1A  51BC               	movf	(_countRA5+1)& (0+255),w,b
 12733  004D1C  E109               	bnz	i2u500_40
 12734  004D1E  0E0A               	movlw	10
 12735  004D20  5DBB               	subwf	_countRA5& (0+255),w,b
 12736  004D22  A0D8               	btfss	status,0,c
 12737  004D24  EF96  F026         	goto	i2u500_41
 12738  004D28  EF98  F026         	goto	i2u500_40
 12739  004D2C                     i2u500_41:
 12740  004D2C  EF6B  F027         	goto	i2l693
 12741  004D30                     i2u500_40:
 12742  004D30                     
 12743                           ; BSR set to: 0
 12744                           ;buttons.c: 73:                     buttonRA5 = 1;
 12745  004D30  0E01               	movlw	1
 12746  004D32  6FCE               	movwf	_buttonRA5& (0+255),b
 12747                           
 12748                           ;buttons.c: 74:                     countRA5 = 0;
 12749  004D34  0E00               	movlw	0
 12750  004D36  6FBC               	movwf	(_countRA5+1)& (0+255),b
 12751  004D38  0E00               	movlw	0
 12752  004D3A  6FBB               	movwf	_countRA5& (0+255),b
 12753  004D3C  EF6B  F027         	goto	i2l693
 12754  004D40                     i2l5496:
 12755                           
 12756                           ; BSR set to: 0
 12757  004D40  51C6               	movf	_stateRA5& (0+255),w,b
 12758  004D42  6E03               	movwf	??_handleButton^0,c
 12759  004D44  6A04               	clrf	(??_handleButton+1)^0,c
 12760                           
 12761                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12762                           ; Switch size 1, requested type "simple"
 12763                           ; Number of cases is 1, Range of values is 0 to 0
 12764                           ; switch strategies available:
 12765                           ; Name         Instructions Cycles
 12766                           ; simple_byte            4     3 (average)
 12767                           ;	Chosen strategy is simple_byte
 12768  004D46  5004               	movf	(??_handleButton+1)^0,w,c
 12769  004D48  0A00               	xorlw	0	; case 0
 12770  004D4A  B4D8               	btfsc	status,2,c
 12771  004D4C  EFAA  F026         	goto	i2l6480
 12772  004D50  EF6B  F027         	goto	i2l693
 12773  004D54                     i2l6480:
 12774                           
 12775                           ; BSR set to: 0
 12776                           ; Switch size 1, requested type "simple"
 12777                           ; Number of cases is 4, Range of values is 0 to 3
 12778                           ; switch strategies available:
 12779                           ; Name         Instructions Cycles
 12780                           ; simple_byte           13     7 (average)
 12781                           ;	Chosen strategy is simple_byte
 12782  004D54  5003               	movf	??_handleButton^0,w,c
 12783  004D56  0A00               	xorlw	0	; case 0
 12784  004D58  B4D8               	btfsc	status,2,c
 12785  004D5A  EF4D  F026         	goto	i2l5470
 12786  004D5E  0A01               	xorlw	1	; case 1
 12787  004D60  B4D8               	btfsc	status,2,c
 12788  004D62  EF53  F026         	goto	i2l5472
 12789  004D66  0A03               	xorlw	3	; case 2
 12790  004D68  B4D8               	btfsc	status,2,c
 12791  004D6A  EF66  F026         	goto	i2l5478
 12792  004D6E  0A01               	xorlw	1	; case 3
 12793  004D70  B4D8               	btfsc	status,2,c
 12794  004D72  EF8B  F026         	goto	i2l5488
 12795  004D76  EF6B  F027         	goto	i2l693
 12796  004D7A                     i2l5498:
 12797  004D7A  0E02               	movlw	2
 12798  004D7C  1807               	xorwf	handleButton@checkRB0^0,w,c
 12799  004D7E  1008               	iorwf	(handleButton@checkRB0+1)^0,w,c
 12800  004D80  A4D8               	btfss	status,2,c
 12801  004D82  EFC5  F026         	goto	i2u501_41
 12802  004D86  EFC7  F026         	goto	i2u501_40
 12803  004D8A                     i2u501_41:
 12804  004D8A  EF44  F027         	goto	i2l5530
 12805  004D8E                     i2u501_40:
 12806  004D8E                     
 12807                           ;buttons.c: 80:         stateRA5 = 0;
 12808  004D8E  0E00               	movlw	0
 12809  004D90  0100               	movlb	0	; () banked
 12810  004D92  6FC6               	movwf	_stateRA5& (0+255),b
 12811                           
 12812                           ;buttons.c: 81:         countRA5 = 0;
 12813  004D94  0E00               	movlw	0
 12814  004D96  6FBC               	movwf	(_countRA5+1)& (0+255),b
 12815  004D98  0E00               	movlw	0
 12816  004D9A  6FBB               	movwf	_countRA5& (0+255),b
 12817                           
 12818                           ;buttons.c: 82:         countRA5_1 = 0;
 12819  004D9C  0E00               	movlw	0
 12820  004D9E  6FBA               	movwf	(_countRA5_1+1)& (0+255),b
 12821  004DA0  0E00               	movlw	0
 12822  004DA2  6FB9               	movwf	_countRA5_1& (0+255),b
 12823                           
 12824                           ;buttons.c: 83:         switch(stateRB0) {
 12825  004DA4  EF27  F027         	goto	i2l5528
 12826  004DA8                     i2l5502:
 12827                           
 12828                           ; BSR set to: 0
 12829                           ;buttons.c: 85:                 buttonRB0 = 1;
 12830  004DA8  0E01               	movlw	1
 12831  004DAA  6FCD               	movwf	_buttonRB0& (0+255),b
 12832                           
 12833                           ;buttons.c: 86:                 stateRB0 = 1;
 12834  004DAC  0E01               	movlw	1
 12835  004DAE  6FC5               	movwf	_stateRB0& (0+255),b
 12836                           
 12837                           ;buttons.c: 87:                 break;
 12838  004DB0  EF6B  F027         	goto	i2l693
 12839  004DB4                     i2l5504:
 12840                           
 12841                           ; BSR set to: 0
 12842                           ;buttons.c: 89:                 countRB0++;
 12843  004DB4  4BB7               	infsnz	_countRB0& (0+255),f,b
 12844  004DB6  2BB8               	incf	(_countRB0+1)& (0+255),f,b
 12845  004DB8                     
 12846                           ; BSR set to: 0
 12847                           ;buttons.c: 90:                 if(countRB0 >= 1000 / 10) {
 12848  004DB8  51B8               	movf	(_countRB0+1)& (0+255),w,b
 12849  004DBA  E109               	bnz	i2u502_40
 12850  004DBC  0E64               	movlw	100
 12851  004DBE  5DB7               	subwf	_countRB0& (0+255),w,b
 12852  004DC0  A0D8               	btfss	status,0,c
 12853  004DC2  EFE5  F026         	goto	i2u502_41
 12854  004DC6  EFE7  F026         	goto	i2u502_40
 12855  004DCA                     i2u502_41:
 12856  004DCA  EF6B  F027         	goto	i2l693
 12857  004DCE                     i2u502_40:
 12858  004DCE                     
 12859                           ; BSR set to: 0
 12860                           ;buttons.c: 91:                     buttonRB0 = 1;
 12861  004DCE  0E01               	movlw	1
 12862  004DD0  6FCD               	movwf	_buttonRB0& (0+255),b
 12863                           
 12864                           ;buttons.c: 92:                     stateRB0 = 2;
 12865  004DD2  0E02               	movlw	2
 12866  004DD4  6FC5               	movwf	_stateRB0& (0+255),b
 12867  004DD6  EF6B  F027         	goto	i2l693
 12868  004DDA                     i2l5510:
 12869                           
 12870                           ; BSR set to: 0
 12871                           ;buttons.c: 96:                 countRB0++;
 12872  004DDA  4BB7               	infsnz	_countRB0& (0+255),f,b
 12873  004DDC  2BB8               	incf	(_countRB0+1)& (0+255),f,b
 12874                           
 12875                           ;buttons.c: 97:                 countRB0_1++;
 12876  004DDE  4BB5               	infsnz	_countRB0_1& (0+255),f,b
 12877  004DE0  2BB6               	incf	(_countRB0_1+1)& (0+255),f,b
 12878  004DE2                     
 12879                           ; BSR set to: 0
 12880                           ;buttons.c: 98:                 if(countRB0_1 == 500 / 10) {
 12881  004DE2  0E32               	movlw	50
 12882  004DE4  19B5               	xorwf	_countRB0_1& (0+255),w,b
 12883  004DE6  11B6               	iorwf	(_countRB0_1+1)& (0+255),w,b
 12884  004DE8  A4D8               	btfss	status,2,c
 12885  004DEA  EFF9  F026         	goto	i2u503_41
 12886  004DEE  EFFB  F026         	goto	i2u503_40
 12887  004DF2                     i2u503_41:
 12888  004DF2  EF01  F027         	goto	i2l5516
 12889  004DF6                     i2u503_40:
 12890  004DF6                     
 12891                           ; BSR set to: 0
 12892                           ;buttons.c: 99:                     buttonRB0 = 1;
 12893  004DF6  0E01               	movlw	1
 12894  004DF8  6FCD               	movwf	_buttonRB0& (0+255),b
 12895                           
 12896                           ;buttons.c: 100:                     countRB0_1 = 0;
 12897  004DFA  0E00               	movlw	0
 12898  004DFC  6FB6               	movwf	(_countRB0_1+1)& (0+255),b
 12899  004DFE  0E00               	movlw	0
 12900  004E00  6FB5               	movwf	_countRB0_1& (0+255),b
 12901  004E02                     i2l5516:
 12902                           
 12903                           ; BSR set to: 0
 12904                           ;buttons.c: 102:                 if(countRB0 >= 3000 / 10) {
 12905  004E02  0E2C               	movlw	44
 12906  004E04  5DB7               	subwf	_countRB0& (0+255),w,b
 12907  004E06  0E01               	movlw	1
 12908  004E08  59B8               	subwfb	(_countRB0+1)& (0+255),w,b
 12909  004E0A  A0D8               	btfss	status,0,c
 12910  004E0C  EF0A  F027         	goto	i2u504_41
 12911  004E10  EF0C  F027         	goto	i2u504_40
 12912  004E14                     i2u504_41:
 12913  004E14  EF6B  F027         	goto	i2l693
 12914  004E18                     i2u504_40:
 12915  004E18                     
 12916                           ; BSR set to: 0
 12917                           ;buttons.c: 103:                     buttonRB0 = 1;
 12918  004E18  0E01               	movlw	1
 12919  004E1A  6FCD               	movwf	_buttonRB0& (0+255),b
 12920                           
 12921                           ;buttons.c: 104:                     stateRB0 = 3;
 12922  004E1C  0E03               	movlw	3
 12923  004E1E  6FC5               	movwf	_stateRB0& (0+255),b
 12924  004E20  EF6B  F027         	goto	i2l693
 12925  004E24                     i2l5520:
 12926                           
 12927                           ; BSR set to: 0
 12928                           ;buttons.c: 108:                 countRB0++;
 12929  004E24  4BB7               	infsnz	_countRB0& (0+255),f,b
 12930  004E26  2BB8               	incf	(_countRB0+1)& (0+255),f,b
 12931  004E28                     
 12932                           ; BSR set to: 0
 12933                           ;buttons.c: 109:                 if(countRB0 >= 100 / 10) {
 12934  004E28  51B8               	movf	(_countRB0+1)& (0+255),w,b
 12935  004E2A  E109               	bnz	i2u505_40
 12936  004E2C  0E0A               	movlw	10
 12937  004E2E  5DB7               	subwf	_countRB0& (0+255),w,b
 12938  004E30  A0D8               	btfss	status,0,c
 12939  004E32  EF1D  F027         	goto	i2u505_41
 12940  004E36  EF1F  F027         	goto	i2u505_40
 12941  004E3A                     i2u505_41:
 12942  004E3A  EF6B  F027         	goto	i2l693
 12943  004E3E                     i2u505_40:
 12944  004E3E                     
 12945                           ; BSR set to: 0
 12946                           ;buttons.c: 110:                     buttonRB0 = 1;
 12947  004E3E  0E01               	movlw	1
 12948  004E40  6FCD               	movwf	_buttonRB0& (0+255),b
 12949                           
 12950                           ;buttons.c: 111:                     countRB0 = 0;
 12951  004E42  0E00               	movlw	0
 12952  004E44  6FB8               	movwf	(_countRB0+1)& (0+255),b
 12953  004E46  0E00               	movlw	0
 12954  004E48  6FB7               	movwf	_countRB0& (0+255),b
 12955  004E4A  EF6B  F027         	goto	i2l693
 12956  004E4E                     i2l5528:
 12957                           
 12958                           ; BSR set to: 0
 12959  004E4E  51C5               	movf	_stateRB0& (0+255),w,b
 12960  004E50  6E03               	movwf	??_handleButton^0,c
 12961  004E52  6A04               	clrf	(??_handleButton+1)^0,c
 12962                           
 12963                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12964                           ; Switch size 1, requested type "simple"
 12965                           ; Number of cases is 1, Range of values is 0 to 0
 12966                           ; switch strategies available:
 12967                           ; Name         Instructions Cycles
 12968                           ; simple_byte            4     3 (average)
 12969                           ;	Chosen strategy is simple_byte
 12970  004E54  5004               	movf	(??_handleButton+1)^0,w,c
 12971  004E56  0A00               	xorlw	0	; case 0
 12972  004E58  B4D8               	btfsc	status,2,c
 12973  004E5A  EF31  F027         	goto	i2l6482
 12974  004E5E  EF6B  F027         	goto	i2l693
 12975  004E62                     i2l6482:
 12976                           
 12977                           ; BSR set to: 0
 12978                           ; Switch size 1, requested type "simple"
 12979                           ; Number of cases is 4, Range of values is 0 to 3
 12980                           ; switch strategies available:
 12981                           ; Name         Instructions Cycles
 12982                           ; simple_byte           13     7 (average)
 12983                           ;	Chosen strategy is simple_byte
 12984  004E62  5003               	movf	??_handleButton^0,w,c
 12985  004E64  0A00               	xorlw	0	; case 0
 12986  004E66  B4D8               	btfsc	status,2,c
 12987  004E68  EFD4  F026         	goto	i2l5502
 12988  004E6C  0A01               	xorlw	1	; case 1
 12989  004E6E  B4D8               	btfsc	status,2,c
 12990  004E70  EFDA  F026         	goto	i2l5504
 12991  004E74  0A03               	xorlw	3	; case 2
 12992  004E76  B4D8               	btfsc	status,2,c
 12993  004E78  EFED  F026         	goto	i2l5510
 12994  004E7C  0A01               	xorlw	1	; case 3
 12995  004E7E  B4D8               	btfsc	status,2,c
 12996  004E80  EF12  F027         	goto	i2l5520
 12997  004E84  EF6B  F027         	goto	i2l693
 12998  004E88                     i2l5530:
 12999  004E88  0407               	decf	handleButton@checkRB0^0,w,c
 13000  004E8A  1008               	iorwf	(handleButton@checkRB0+1)^0,w,c
 13001  004E8C  B4D8               	btfsc	status,2,c
 13002  004E8E  EF4B  F027         	goto	i2u506_41
 13003  004E92  EF4D  F027         	goto	i2u506_40
 13004  004E96                     i2u506_41:
 13005  004E96  EF56  F027         	goto	i2l5534
 13006  004E9A                     i2u506_40:
 13007  004E9A  0405               	decf	handleButton@checkRA5^0,w,c
 13008  004E9C  1006               	iorwf	(handleButton@checkRA5+1)^0,w,c
 13009  004E9E  A4D8               	btfss	status,2,c
 13010  004EA0  EF54  F027         	goto	i2u507_41
 13011  004EA4  EF56  F027         	goto	i2u507_40
 13012  004EA8                     i2u507_41:
 13013  004EA8  EF6B  F027         	goto	i2l693
 13014  004EAC                     i2u507_40:
 13015  004EAC                     i2l5534:
 13016                           
 13017                           ;buttons.c: 117:         countRA5 = 0;
 13018  004EAC  0E00               	movlw	0
 13019  004EAE  0100               	movlb	0	; () banked
 13020  004EB0  6FBC               	movwf	(_countRA5+1)& (0+255),b
 13021  004EB2  0E00               	movlw	0
 13022  004EB4  6FBB               	movwf	_countRA5& (0+255),b
 13023                           
 13024                           ;buttons.c: 118:         countRA5_1 = 0;
 13025  004EB6  0E00               	movlw	0
 13026  004EB8  6FBA               	movwf	(_countRA5_1+1)& (0+255),b
 13027  004EBA  0E00               	movlw	0
 13028  004EBC  6FB9               	movwf	_countRA5_1& (0+255),b
 13029                           
 13030                           ;buttons.c: 119:         countRB0 = 0;
 13031  004EBE  0E00               	movlw	0
 13032  004EC0  6FB8               	movwf	(_countRB0+1)& (0+255),b
 13033  004EC2  0E00               	movlw	0
 13034  004EC4  6FB7               	movwf	_countRB0& (0+255),b
 13035                           
 13036                           ;buttons.c: 120:         countRB0_1 = 0;
 13037  004EC6  0E00               	movlw	0
 13038  004EC8  6FB6               	movwf	(_countRB0_1+1)& (0+255),b
 13039  004ECA  0E00               	movlw	0
 13040  004ECC  6FB5               	movwf	_countRB0_1& (0+255),b
 13041                           
 13042                           ;buttons.c: 121:         stateRA5 = 0;
 13043  004ECE  0E00               	movlw	0
 13044  004ED0  6FC6               	movwf	_stateRA5& (0+255),b
 13045                           
 13046                           ;buttons.c: 122:         stateRB0 = 0;
 13047  004ED2  0E00               	movlw	0
 13048  004ED4  6FC5               	movwf	_stateRB0& (0+255),b
 13049  004ED6                     i2l693:
 13050  004ED6  0012               	return		;funcret
 13051  004ED8                     __end_of_handleButton:
 13052                           	opt callstack 0
 13053                           
 13054 ;; *************** function _readButtonRB0 *****************
 13055 ;; Defined at:
 13056 ;;		line 30 in file "buttons.c"
 13057 ;; Parameters:    Size  Location     Type
 13058 ;;		None
 13059 ;; Auto vars:     Size  Location     Type
 13060 ;;		None
 13061 ;; Return value:  Size  Location     Type
 13062 ;;                  2    0[COMRAM] int 
 13063 ;; Registers used:
 13064 ;;		wreg, status,2, status,0
 13065 ;; Tracked objects:
 13066 ;;		On entry : 0/0
 13067 ;;		On exit  : 0/0
 13068 ;;		Unchanged: 0/0
 13069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13070 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13073 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13074 ;;Total ram usage:        2 bytes
 13075 ;; Hardware stack levels used:    1
 13076 ;; This function calls:
 13077 ;;		Nothing
 13078 ;; This function is called by:
 13079 ;;		_handleButton
 13080 ;; This function uses a non-reentrant model
 13081 ;;
 13082                           
 13083                           	psect	text43
 13084  00646C                     __ptext43:
 13085                           	opt callstack 0
 13086  00646C                     _readButtonRB0:
 13087                           	opt callstack 21
 13088  00646C                     
 13089                           ;buttons.c: 31:     firstReadRB0 = secondReadRB0;
 13090  00646C  C0CF  F0D0         	movff	_secondReadRB0,_firstReadRB0
 13091  006470                     
 13092                           ;buttons.c: 32:     secondReadRB0 = PORTBbits.RB0;
 13093  006470  0E00               	movlw	0
 13094  006472  B081               	btfsc	129,0,c	;volatile
 13095  006474  0E01               	movlw	1
 13096  006476  0100               	movlb	0	; () banked
 13097  006478  6FCF               	movwf	_secondReadRB0& (0+255),b
 13098  00647A                     
 13099                           ; BSR set to: 0
 13100                           ;buttons.c: 33:     if(secondReadRB0 == firstReadRB0) {
 13101  00647A  51D0               	movf	_firstReadRB0& (0+255),w,b
 13102  00647C  19CF               	xorwf	_secondReadRB0& (0+255),w,b
 13103  00647E  A4D8               	btfss	status,2,c
 13104  006480  EF44  F032         	goto	i2u464_41
 13105  006484  EF46  F032         	goto	i2u464_40
 13106  006488                     i2u464_41:
 13107  006488  EF5A  F032         	goto	i2l5174
 13108  00648C                     i2u464_40:
 13109  00648C                     
 13110                           ; BSR set to: 0
 13111                           ;buttons.c: 34:         return (secondReadRB0 == 0) ? 2 : 1;
 13112  00648C  51CF               	movf	_secondReadRB0& (0+255),w,b
 13113  00648E  B4D8               	btfsc	status,2,c
 13114  006490  EF4C  F032         	goto	i2u465_41
 13115  006494  EF4E  F032         	goto	i2u465_40
 13116  006498                     i2u465_41:
 13117  006498  EF54  F032         	goto	i2l5170
 13118  00649C                     i2u465_40:
 13119  00649C                     
 13120                           ; BSR set to: 0
 13121  00649C  0E00               	movlw	0
 13122  00649E  6E02               	movwf	(?_readButtonRB0+1)^0,c
 13123  0064A0  0E01               	movlw	1
 13124  0064A2  6E01               	movwf	?_readButtonRB0^0,c
 13125  0064A4  EF5E  F032         	goto	i2l663
 13126  0064A8                     i2l5170:
 13127                           
 13128                           ; BSR set to: 0
 13129  0064A8  0E00               	movlw	0
 13130  0064AA  6E02               	movwf	(?_readButtonRB0+1)^0,c
 13131  0064AC  0E02               	movlw	2
 13132  0064AE  6E01               	movwf	?_readButtonRB0^0,c
 13133  0064B0  EF5E  F032         	goto	i2l663
 13134  0064B4                     i2l5174:
 13135                           
 13136                           ; BSR set to: 0
 13137                           ;buttons.c: 36:     return 0;
 13138  0064B4  0E00               	movlw	0
 13139  0064B6  6E02               	movwf	(?_readButtonRB0+1)^0,c
 13140  0064B8  0E00               	movlw	0
 13141  0064BA  6E01               	movwf	?_readButtonRB0^0,c
 13142  0064BC                     i2l663:
 13143                           
 13144                           ; BSR set to: 0
 13145  0064BC  0012               	return		;funcret
 13146  0064BE                     __end_of_readButtonRB0:
 13147                           	opt callstack 0
 13148                           
 13149 ;; *************** function _readButtonRA5 *****************
 13150 ;; Defined at:
 13151 ;;		line 21 in file "buttons.c"
 13152 ;; Parameters:    Size  Location     Type
 13153 ;;		None
 13154 ;; Auto vars:     Size  Location     Type
 13155 ;;		None
 13156 ;; Return value:  Size  Location     Type
 13157 ;;                  2    0[COMRAM] int 
 13158 ;; Registers used:
 13159 ;;		wreg, status,2, status,0
 13160 ;; Tracked objects:
 13161 ;;		On entry : 0/0
 13162 ;;		On exit  : 0/0
 13163 ;;		Unchanged: 0/0
 13164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13165 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13168 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13169 ;;Total ram usage:        2 bytes
 13170 ;; Hardware stack levels used:    1
 13171 ;; This function calls:
 13172 ;;		Nothing
 13173 ;; This function is called by:
 13174 ;;		_handleButton
 13175 ;; This function uses a non-reentrant model
 13176 ;;
 13177                           
 13178                           	psect	text44
 13179  0064BE                     __ptext44:
 13180                           	opt callstack 0
 13181  0064BE                     _readButtonRA5:
 13182                           	opt callstack 21
 13183  0064BE                     
 13184                           ;buttons.c: 22:     firstReadRA5 = secondReadRA5;
 13185  0064BE  C0D1  F0D2         	movff	_secondReadRA5,_firstReadRA5
 13186  0064C2                     
 13187                           ;buttons.c: 23:     secondReadRA5 = PORTAbits.RA5;
 13188  0064C2  0E00               	movlw	0
 13189  0064C4  BA80               	btfsc	128,5,c	;volatile
 13190  0064C6  0E01               	movlw	1
 13191  0064C8  0100               	movlb	0	; () banked
 13192  0064CA  6FD1               	movwf	_secondReadRA5& (0+255),b
 13193  0064CC                     
 13194                           ; BSR set to: 0
 13195                           ;buttons.c: 24:     if(secondReadRA5 == firstReadRA5) {
 13196  0064CC  51D2               	movf	_firstReadRA5& (0+255),w,b
 13197  0064CE  19D1               	xorwf	_secondReadRA5& (0+255),w,b
 13198  0064D0  A4D8               	btfss	status,2,c
 13199  0064D2  EF6D  F032         	goto	i2u462_41
 13200  0064D6  EF6F  F032         	goto	i2u462_40
 13201  0064DA                     i2u462_41:
 13202  0064DA  EF83  F032         	goto	i2l5156
 13203  0064DE                     i2u462_40:
 13204  0064DE                     
 13205                           ; BSR set to: 0
 13206                           ;buttons.c: 25:         return (secondReadRA5 == 0) ? 2 : 1;
 13207  0064DE  51D1               	movf	_secondReadRA5& (0+255),w,b
 13208  0064E0  B4D8               	btfsc	status,2,c
 13209  0064E2  EF75  F032         	goto	i2u463_41
 13210  0064E6  EF77  F032         	goto	i2u463_40
 13211  0064EA                     i2u463_41:
 13212  0064EA  EF7D  F032         	goto	i2l5152
 13213  0064EE                     i2u463_40:
 13214  0064EE                     
 13215                           ; BSR set to: 0
 13216  0064EE  0E00               	movlw	0
 13217  0064F0  6E02               	movwf	(?_readButtonRA5+1)^0,c
 13218  0064F2  0E01               	movlw	1
 13219  0064F4  6E01               	movwf	?_readButtonRA5^0,c
 13220  0064F6  EF87  F032         	goto	i2l655
 13221  0064FA                     i2l5152:
 13222                           
 13223                           ; BSR set to: 0
 13224  0064FA  0E00               	movlw	0
 13225  0064FC  6E02               	movwf	(?_readButtonRA5+1)^0,c
 13226  0064FE  0E02               	movlw	2
 13227  006500  6E01               	movwf	?_readButtonRA5^0,c
 13228  006502  EF87  F032         	goto	i2l655
 13229  006506                     i2l5156:
 13230                           
 13231                           ; BSR set to: 0
 13232                           ;buttons.c: 27:     return 0;
 13233  006506  0E00               	movlw	0
 13234  006508  6E02               	movwf	(?_readButtonRA5+1)^0,c
 13235  00650A  0E00               	movlw	0
 13236  00650C  6E01               	movwf	?_readButtonRA5^0,c
 13237  00650E                     i2l655:
 13238                           
 13239                           ; BSR set to: 0
 13240  00650E  0012               	return		;funcret
 13241  006510                     __end_of_readButtonRA5:
 13242                           	opt callstack 0
 13243                           
 13244                           	psect	rparam
 13245  0000                     
 13246                           	psect	temp
 13247  000057                     btemp:
 13248                           	opt callstack 0
 13249  000057                     	ds	1
 13250  0000                     int$flags	set	btemp
 13251  0000                     wtemp8	set	btemp+1
 13252  0000                     ttemp5	set	btemp+1
 13253  0000                     ttemp6	set	btemp+4
 13254  0000                     ttemp7	set	btemp+8
 13255                           tosu	equ	0xFFF
 13256                           tosh	equ	0xFFE
 13257                           tosl	equ	0xFFD
 13258                           stkptr	equ	0xFFC
 13259                           pclatu	equ	0xFFB
 13260                           pclath	equ	0xFFA
 13261                           pcl	equ	0xFF9
 13262                           tblptru	equ	0xFF8
 13263                           tblptrh	equ	0xFF7
 13264                           tblptrl	equ	0xFF6
 13265                           tablat	equ	0xFF5
 13266                           prodh	equ	0xFF4
 13267                           prodl	equ	0xFF3
 13268                           indf0	equ	0xFEF
 13269                           postinc0	equ	0xFEE
 13270                           postdec0	equ	0xFED
 13271                           preinc0	equ	0xFEC
 13272                           plusw0	equ	0xFEB
 13273                           fsr0h	equ	0xFEA
 13274                           fsr0l	equ	0xFE9
 13275                           wreg	equ	0xFE8
 13276                           indf1	equ	0xFE7
 13277                           postinc1	equ	0xFE6
 13278                           postdec1	equ	0xFE5
 13279                           preinc1	equ	0xFE4
 13280                           plusw1	equ	0xFE3
 13281                           fsr1h	equ	0xFE2
 13282                           fsr1l	equ	0xFE1
 13283                           bsr	equ	0xFE0
 13284                           indf2	equ	0xFDF
 13285                           postinc2	equ	0xFDE
 13286                           postdec2	equ	0xFDD
 13287                           preinc2	equ	0xFDC
 13288                           plusw2	equ	0xFDB
 13289                           fsr2h	equ	0xFDA
 13290                           fsr2l	equ	0xFD9
 13291                           status	equ	0xFD8


Data Sizes:
    Strings     94
    Constant    124
    Data        4
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     78      86
    BANK0           160     79     115
    BANK1           256    188     188
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    nanf@s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_11(CODE[1]), 

    LCDPrint@ptr	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 

    LCDPutStr@ptr	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_10(CODE[9]), STR_9(CODE[17]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[3]), STR_3(CODE[3]), 
		 -> STR_2(CODE[3]), STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _state_stop_watch->_LCDMoveCursor
    _disp_Clock_SW->___awdiv
    _state_mod_second->_disp_Clock_Hide
    _state_mod_minute->_disp_Clock_Hide
    _state_mod_hour->_disp_Clock_Hide
    _disp_Clock_Hide->_LCDPrint
    _LCDPrint->_LCDMoveCursor
    _state_clock->_LCDMoveCursor
    _handle_Time->_LCDMoveCursor
    _LCDMoveCursor->_LCDPutInst
    _disp_Clock->_LCDPutStr
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_WritePort_BBSPI
    _powf->_sqrtf
    _sqrtf->___flge
    ___flge->___flsub
    _scalbnf->___flmul
    ___flmul->___fladd
    ___flsub->___flmul
    ___fldiv->___flsub
    _LCDInit->_LCDPutInst
    _Port_BBSPIInit->_SendByteBBSPI
    _LCDPutInst->_WritePort_BBSPI
    _WritePort_BBSPI->_SendByteBBSPI

Critical Paths under _myISR in COMRAM

    _myISR->_handleButton
    _handleButton->_readButtonRA5
    _handleButton->_readButtonRB0

Critical Paths under _main in BANK0

    _timer0_init->_preCalculate
    _preCalculate->___fltol
    _powf->_sqrtf
    ___fltol->_powf

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    _preCalculate->_powf
    ___fltol->_powf

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _myISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _myISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  285842
                                             77 BANK0      2     2      0
                  _SYSTEM_Initialize
                        _state_clock
                     _state_mod_hour
                   _state_mod_minute
                   _state_mod_second
                   _state_stop_watch
 ---------------------------------------------------------------------------------
 (1) _state_stop_watch                                     2     2      0   24082
                                             20 COMRAM     2     2      0
                      _LCDMoveCursor
                         _LCDPutChar
                         _LCDPutInst
                          _LCDPutStr
                            ___awdiv
                            ___awmod
                      _disp_Clock_SW
 ---------------------------------------------------------------------------------
 (2) _disp_Clock_SW                                        0     0      0    9972
                         _LCDPutChar
                         _LCDPutInst
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _state_mod_second                                     2     2      0   42054
                                             27 COMRAM     2     2      0
                      _LCDMoveCursor
                         _LCDPutChar
                         _LCDPutInst
                          _LCDPutStr
                            ___awdiv
                            ___awmod
                         _disp_Clock
                    _disp_Clock_Hide
                        _handle_Time
 ---------------------------------------------------------------------------------
 (1) _state_mod_minute                                     2     2      0   42054
                                             27 COMRAM     2     2      0
                      _LCDMoveCursor
                         _LCDPutChar
                         _LCDPutInst
                          _LCDPutStr
                            ___awdiv
                            ___awmod
                         _disp_Clock
                    _disp_Clock_Hide
                        _handle_Time
 ---------------------------------------------------------------------------------
 (1) _state_mod_hour                                       2     2      0   42054
                                             27 COMRAM     2     2      0
                      _LCDMoveCursor
                         _LCDPutChar
                         _LCDPutInst
                          _LCDPutStr
                            ___awdiv
                            ___awmod
                         _disp_Clock
                    _disp_Clock_Hide
                        _handle_Time
 ---------------------------------------------------------------------------------
 (2) _disp_Clock_Hide                                      3     3      0    4726
                                             24 COMRAM     3     3      0
                           _LCDPrint
 ---------------------------------------------------------------------------------
 (3) _LCDPrint                                             4     1      3    4704
                                             20 COMRAM     4     1      3
                      _LCDMoveCursor
                          _LCDPutStr
 ---------------------------------------------------------------------------------
 (1) _state_clock                                          2     2      0   37328
                                             20 COMRAM     2     2      0
                      _LCDMoveCursor
                         _LCDPutChar
                         _LCDPutInst
                          _LCDPutStr
                            ___awdiv
                            ___awmod
                         _disp_Clock
                        _handle_Time
 ---------------------------------------------------------------------------------
 (2) _handle_Time                                          0     0      0   11681
                      _LCDMoveCursor
                         _LCDPutChar
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _LCDMoveCursor                                        5     4      1    2597
                                             15 COMRAM     5     4      1
                         _LCDPutInst
 ---------------------------------------------------------------------------------
 (2) _disp_Clock                                           0     0      0   11513
                         _LCDPutChar
                         _LCDPutInst
                          _LCDPutStr
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    4248
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _LCDPutStr                                            2     0      2    1541
                                             15 COMRAM     2     0      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (3) _LCDPutChar                                           2     2      0     888
                                             13 COMRAM     2     2      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0   98270
                            _LCDInit
                     _interrupt_init
                           _osc_init
                           _pin_init
                        _timer0_init
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          0     0      0   96356
                       _preCalculate
 ---------------------------------------------------------------------------------
 (3) _preCalculate                                        10    10      0   96356
                                             67 BANK0     10    10      0
                            ___awdiv
                            ___flmul
                            ___fltol
                               _powf
 ---------------------------------------------------------------------------------
 (4) _powf                                               205   197      8   79976
                                             40 BANK0     17     9      8
                                              0 BANK1    188   188      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl
                              _fabsf
                            _scalbnf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (5) _sqrtf                                               49    45      4   21037
                                             69 COMRAM     9     5      4
                                              0 BANK0     40    40      0
                            ___fladd
                             ___flge
                            ___flmul
                               _nanf
 ---------------------------------------------------------------------------------
 (6) _nanf                                                 8     4      4      99
                                              8 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     790
                                             57 COMRAM    12     4      8
                            ___fladd (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (5) _scalbnf                                             18    12      6   12271
                                             49 COMRAM    18    12      6
                            ___flmul
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8   11776
                                             24 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) _fabsf                                                8     4      4     123
                                              8 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4     398
                                              8 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8   12769
                                             49 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    7430
                                              8 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     197
                                              8 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2903
                                             57 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     427
                                             57 BANK0     10     6      4
                            ___flmul (ARG)
                               _powf (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    3948
                                              8 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _osc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _interrupt_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0    1914
                                             15 COMRAM     1     1      0
                          _InitBBSPI
                         _LCDPutInst
                     _Port_BBSPIInit
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (3) _Port_BBSPIInit                                       1     1      0     160
                                             11 COMRAM     1     1      0
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (3) _LCDPutInst                                           2     2      0     888
                                             13 COMRAM     2     2      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (4) _WritePort_BBSPI                                      2     1      1     866
                                             11 COMRAM     2     1      1
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (5) _SendByteBBSPI                                        3     3      0     138
                                              8 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _InitBBSPI                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _myISR                                                0     0      0      90
                       _handleButton
 ---------------------------------------------------------------------------------
 (9) _handleButton                                         6     6      0      90
                                              2 COMRAM     6     6      0
                      _readButtonRA5
                      _readButtonRB0
 ---------------------------------------------------------------------------------
 (10) _readButtonRB0                                       2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (10) _readButtonRA5                                       2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _LCDInit
       _InitBBSPI
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
       _Port_BBSPIInit
         _SendByteBBSPI
       _WritePort_BBSPI
         _SendByteBBSPI
     _interrupt_init
     _osc_init
     _pin_init
     _timer0_init
       _preCalculate
         ___awdiv
         ___flmul
           ___fladd (ARG)
         ___fltol
           ___flmul (ARG)
             ___fladd (ARG)
           _powf (ARG)
             ___fladd
             ___fldiv
               ___fladd (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___flmul (ARG)
                   ___fladd (ARG)
             ___flge
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___flmul (ARG)
                   ___fladd (ARG)
             ___flmul
               ___fladd (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
             ___xxtofl
             _fabsf
             _scalbnf
               ___flmul
                 ___fladd (ARG)
             _sqrtf
               ___fladd
               ___flge
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___flmul (ARG)
                     ___fladd (ARG)
               ___flmul
                 ___fladd (ARG)
               _nanf
         _powf
           ___fladd
           ___fldiv
             ___fladd (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
           ___flge
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
           ___flmul
             ___fladd (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
           ___xxtofl
           _fabsf
           _scalbnf
             ___flmul
               ___fladd (ARG)
           _sqrtf
             ___fladd
             ___flge
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___flmul (ARG)
                   ___fladd (ARG)
             ___flmul
               ___fladd (ARG)
             _nanf
   _state_clock
     _LCDMoveCursor
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
     _LCDPutChar
       _WritePort_BBSPI
         _SendByteBBSPI
     _LCDPutInst
       _WritePort_BBSPI
         _SendByteBBSPI
     _LCDPutStr
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
     ___awdiv
     ___awmod
     _disp_Clock
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
       _LCDPutStr
         _LCDPutChar
           _WritePort_BBSPI
             _SendByteBBSPI
       ___awdiv
       ___awmod
     _handle_Time
       _LCDMoveCursor
         _LCDPutInst
           _WritePort_BBSPI
             _SendByteBBSPI
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
       ___awdiv
       ___awmod
   _state_mod_hour
     _LCDMoveCursor
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
     _LCDPutChar
       _WritePort_BBSPI
         _SendByteBBSPI
     _LCDPutInst
       _WritePort_BBSPI
         _SendByteBBSPI
     _LCDPutStr
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
     ___awdiv
     ___awmod
     _disp_Clock
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
       _LCDPutStr
         _LCDPutChar
           _WritePort_BBSPI
             _SendByteBBSPI
       ___awdiv
       ___awmod
     _disp_Clock_Hide
       _LCDPrint
         _LCDMoveCursor
           _LCDPutInst
             _WritePort_BBSPI
               _SendByteBBSPI
         _LCDPutStr
           _LCDPutChar
             _WritePort_BBSPI
               _SendByteBBSPI
     _handle_Time
       _LCDMoveCursor
         _LCDPutInst
           _WritePort_BBSPI
             _SendByteBBSPI
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
       ___awdiv
       ___awmod
   _state_mod_minute
     _LCDMoveCursor
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
     _LCDPutChar
       _WritePort_BBSPI
         _SendByteBBSPI
     _LCDPutInst
       _WritePort_BBSPI
         _SendByteBBSPI
     _LCDPutStr
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
     ___awdiv
     ___awmod
     _disp_Clock
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
       _LCDPutStr
         _LCDPutChar
           _WritePort_BBSPI
             _SendByteBBSPI
       ___awdiv
       ___awmod
     _disp_Clock_Hide
       _LCDPrint
         _LCDMoveCursor
           _LCDPutInst
             _WritePort_BBSPI
               _SendByteBBSPI
         _LCDPutStr
           _LCDPutChar
             _WritePort_BBSPI
               _SendByteBBSPI
     _handle_Time
       _LCDMoveCursor
         _LCDPutInst
           _WritePort_BBSPI
             _SendByteBBSPI
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
       ___awdiv
       ___awmod
   _state_mod_second
     _LCDMoveCursor
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
     _LCDPutChar
       _WritePort_BBSPI
         _SendByteBBSPI
     _LCDPutInst
       _WritePort_BBSPI
         _SendByteBBSPI
     _LCDPutStr
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
     ___awdiv
     ___awmod
     _disp_Clock
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
       _LCDPutStr
         _LCDPutChar
           _WritePort_BBSPI
             _SendByteBBSPI
       ___awdiv
       ___awmod
     _disp_Clock_Hide
       _LCDPrint
         _LCDMoveCursor
           _LCDPutInst
             _WritePort_BBSPI
               _SendByteBBSPI
         _LCDPutStr
           _LCDPutChar
             _WritePort_BBSPI
               _SendByteBBSPI
     _handle_Time
       _LCDMoveCursor
         _LCDPutInst
           _WritePort_BBSPI
             _SendByteBBSPI
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
       ___awdiv
       ___awmod
   _state_stop_watch
     _LCDMoveCursor
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
     _LCDPutChar
       _WritePort_BBSPI
         _SendByteBBSPI
     _LCDPutInst
       _WritePort_BBSPI
         _SendByteBBSPI
     _LCDPutStr
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
     ___awdiv
     ___awmod
     _disp_Clock_SW
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
       ___awdiv
       ___awmod

 _myISR (ROOT)
   _handleButton
     _readButtonRA5
     _readButtonRB0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     BC      BC       7       73.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4F      73       5       71.9%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4E      56       1       91.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     185      32        0.0%
DATA                 0      0     185       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Sep 21 15:05:16 2019

             _LCDMoveCursor 6614                ___fldiv@aexp 006C                ___fldiv@bexp 006B  
              ___fldiv@sign 0064                          _L1 1059                          _L2 1055  
                        _L3 1051                          _L4 104D                          _L5 1049  
                        _L6 1045                 ?_LCDPutChar 0001                          _P1 1041  
                        _P2 103D                          _P3 1039                          _P4 1035  
                        _P5 1031                          l97 6772                 _state_clock 5DBA  
              ___awdiv@sign 000E                          _bp 1069                          _cp 101D  
               ?_LCDPutInst 0001                          _hr 0054       SendByteBBSPI@bitcount 000A  
    __end_of_interrupt_init 6774                         l201 66DC                         l301 633E  
                       l310 63A4                         l304 6718                         l152 6768  
                       l313 640A                         l234 6778                         l307 6732  
                       l147 5DA0                         l332 65D4                         l149 5DB8  
                       l422 6006                         l326 664C                         l319 6612  
                       l431 625A                         l520 59CA                         l521 5A48  
                       l434 5E76                         l506 56D8                         l419 5994  
                       l435 5DD4                         l515 581C                         l507 5794  
                       l292 675A                         l373 6748                         l437 5E86  
                       l295 62DA                         l297 62EE                         l289 646A  
                       l529 5AD0                         l298 62F0                         l491 553E  
                       l493 56A2                         l494 561C                         l578 614C  
                       l595 513A                         l587 5128                         l940 60B6  
                       l589 4F64                         l927 5F4A                         l961 5C96  
                       l970 6684                         l966 5CDC                         l993 5BD8  
  __size_of_disp_Clock_Hide 007C                         _lg2 102D                         _min 0053  
                       _sec 0052                         _ovt 1021                ___awmod@sign 000E  
                       wreg 000FE8                ___flmul@aexp 002A                ___flmul@bexp 002B  
              ___flmul@sign 0025                ___flmul@temp 0030                ___flmul@prod 002C  
           __end_of_LCDInit 646C                __CFG_LVP$OFF 000000                ___fltol@exp1 00A2  
              __CFG_WDT$OFF 000000                        l1310 4552                        l3000 66BA  
                      l1224 41BC                        l1320 47AE                        l1241 42D6  
                      l1233 448C                        l1225 41AA                        l3002 66CE  
                      l1250 43A6                        l1226 4170                        l1314 48B6  
                      l1251 4394                        l3004 6774                        l1317 4748  
                      l1430 10DC                        l1351 53C6                        l1327 4878  
                      l1319 47C0                        l1280 4AB2                        l4000 47A6  
                      l1440 13DE                        l1432 10FC                        l1266 6554  
                      l1354 5522                        l4010 4814                        l1450 1474  
                      l1291 4B70                        l1283 4A76                        l1435 3B0C  
                      l1292 4B5E                        l4020 487C                        l4004 47D0  
                      l4012 4818                        l1460 1536                        l1365 54BA  
                      l1278 4C52                        l1358 545E                        l4030 48A6  
                      l4022 488C                        l4014 4832                        l4006 47DC  
                      l4024 489A                        l4016 4846                        l4008 47EA  
                      l4040 5C46                        l1536 3306                        l5000 65BE  
                      l1289 4AF8                        l1537 3382                        l4026 489C  
                      l4018 4860                        l4050 5CD4                        l4042 5C56  
                      l4034 5BDA                        l1570 3FCC                        l5010 6022  
                      l5002 65C8                        l1547 3AB8                        l4028 48A2  
                      l4052 5CDA                        l4044 5C64                        l4036 5C08  
                      l4300 3B64                        l1468 165C                        l5020 6056  
                      l5012 6026                        l5004 6008                        l5100 58D0  
                      l1581 3E2E                        l4070 63DA                        l4062 63A8  
                      l1558 536E                        l4046 5C76                        l4038 5C18  
                      l1574 3D0C                        l4310 3C20                        l5030 6090  
                      l5022 605E                        l5014 6034                        l5006 600C  
                      l5102 58EA                        l5110 5942                        l1583 3F36  
                      l4072 63E8                        l4064 63B8                        l4240 6664  
                      l4232 6510                        l4400 527C                        l4048 5C84  
                      l4056 66DE                        l4320 3CAC                        l4312 3C2E  
                      l4304 3BC0                        l6000 1E58                        l4080 6352  
                      l5024 606C                        l5032 6096                        l5016 603C  
                      l5008 601A                        l5120 5F4C                        l5112 5952  
                      l5104 5904                        l5200 5E06                        l4074 63F2  
                      l4066 63C2                        l5050 6412                        l4242 6674  
                      l4234 6520                        l4250 5390                        l4402 5298  
                      l4410 52F8                        l4058 66EE                        l1578 3D6A  
                      l4330 3D4C                        l4322 3CC0                        l4314 3C36  
                      l4306 3BDE                        l6010 1F0A                        l6002 1E6A  
                      l4090 638C                        l4082 635C                        l5034 60A6  
                      l5026 6082                        l5018 604E                        l5122 5FFA  
                      l5114 5956                        l5106 590E                        l5210 5E4A  
                      l5202 5E08                        l5130 6212                        l1595 66B8  
                      l3700 6730                        l4076 6400                        l4068 63D0  
                      l5060 6432                        l5052 6414                        l4260 5408  
                      l4252 53D6                        l4412 532A                        l4404 52CC  
                      l4340 3DF6                        l4332 3D5A                        l4324 3CCA  
                      l4308 3C0C                        l6100 27DE                        l6020 1F92  
                      l6012 1F22                        l6004 1E7A                        l4092 639A  
                      l4084 636A                        l5036 60AE                        l5028 608A  
                      l5116 5960                        l5108 5928                        l5212 5E5A  
                      l5204 5E12                        l5124 61E2                        l5220 552A  
                      l5300 5736                        l5140 60B8                        l5070 645E  
                      l5062 643C                        l5054 6424                        l5046 640C  
                      l4238 664E                        l3710 3FFA                        l3702 3FCE  
                      l4270 5490                        l4262 5414                        l4254 53EC  
                      l4246 5372                        l4414 535E                        l4406 52D4  
                      l1598 66FE                        l4350 3E84                        l4342 3E3E  
                      l4334 3D84                        l4326 3CD6                        l4318 3C56  
                      l6110 2906                        l6102 2812                        l6030 1FDE  
                      l6022 1FA2                        l6014 1F46                        l6006 1E8A  
                      l4086 6374                        l4078 6342                        l5118 597A  
                      l5214 5E66                        l5206 5E2C                        l5126 61E6  
                      l5134 6228                        l5230 5560                        l5222 5536  
                      l5310 578A                        l5302 5750                        l5072 6464  
                      l5064 644C                        l5056 6426                        l5048 6410  
                      l3800 41A8                        l3720 4034                        l3712 400A  
                      l3704 3FDA                        l4280 54CE                        l4272 549C  
                      l4264 5446                        l4248 5382                        l4408 52F0  
                      l4360 3F9C                        l4352 3EB6                        l4344 3E48  
                      l4336 3DA4                        l4328 3CE4                        l6120 29A8  
                      l6112 2916                        l6104 2846                        l6040 211E  
                      l6032 2042                        l6024 1FAE                        l6016 1F5A  
                      l6008 1EF2                        l4088 6382                        l5080 5834  
                      l5216 5E6C                        l5208 5E46                        l5128 61FC  
                      l5240 559A                        l5232 5570                        l5224 5542  
                      l5320 57B6                        l5312 5790                        l5304 576A  
                      l5400 4F5C                        l3650 62D2                        l5066 6452  
                      l5058 642C                        l3810 41FE                        l3802 41CA  
                      l3730 4062                        l3722 403A                        l3714 401A  
                      l3706 3FE8                        l4282 54F2                        l4274 54AA  
                      l4266 5448                        l4258 5400                        l4370 66A6  
                      l4362 3FAC                        l4354 3EC8                        l4346 3E5E  
                      l4338 3DB8                        l6210 3372                        l6202 319C  
                      l6130 2B16                        l6122 29DC                        l6114 2930  
                      l6106 28C2                        l6050 2224                        l6042 212E  
                      l6034 20CA                        l6018 1F7E                        l6026 1FBE  
                      l5090 5896                        l5082 583E                        l5074 581E  
                      l5250 55F6                        l5242 55B4                        l5234 5574  
                      l5226 5554                        l5218 5524                        l5330 5804  
                      l5322 57D0                        l5314 57A6                        l5306 576E  
                      l5410 4F9E                        l5402 4F74                        l2940 674A  
                      l3660 62FE                        l3652 62D6                        l5068 6458  
                      l6300 5B6E                        l3900 447C                        l3820 4238  
                      l3812 420C                        l3804 41DA                        l3740 4096  
                      l3732 4064                        l3724 404C                        l3716 401C  
                      l3708 3FEA                        l4284 5502                        l4276 54C8  
                      l4268 5454                        l4372 66A8                        l4380 5168  
                      l4364 3FBC                        l4356 3EFA                        l4348 3E74  
                      l4292 3B0E                        l6220 348C                        l6212 3404  
                      l6204 320E                        l6140 2BE8                        l6132 2B7A  
                      l6124 2A58                        l6116 2940                        l6108 28F6  
                      l6060 237C                        l6052 2234                        l6044 2148  
                      l6036 20FE                        l6028 1FCE                        l5084 5858  
                      l5076 582E                        l5092 58B0                        l5260 5632  
                      l5252 5606                        l5244 55BE                        l5236 5576  
                      l5324 57EA                        l5316 57AA                        l5308 577E  
                      l5332 580A                        l5340 59B0                        l5420 4FD8  
                      l5412 4FAE                        l5404 4F76                        l3670 6312  
                      l3662 6306                        l6310 5B98                        l6302 5B78  
                      l3830 42A4                        l3822 423A                        l3814 421A  
                      l3750 40D2                        l3734 4074                        l3742 409E  
                      l3726 404E                        l3718 4024                        l4286 5510  
                      l4278 54CA                        l3910 44AA                        l4390 51FC  
                      l4382 519C                        l4358 3F0C                        l4294 3B0E  
                      l6230 352E                        l6222 349C                        l6214 3414  
                      l6206 321E                        l6142 2BF8                        l6134 2BAE  
                      l6126 2ABC                        l6118 2974                        l6070 24EC  
                      l6062 23B0                        l6054 2298                        l6046 2158  
                      l6038 210E                        l6150 2CF8                        l5094 58C0  
                      l5086 5872                        l5078 5832                        l5190 5DCC  
                      l5262 5634                        l5270 5676                        l5254 5612  
                      l5246 55D8                        l5238 5580                        l5318 57AC  
                      l5326 57EE                        l5350 59EA                        l5342 59C2  
                      l5334 5996                        l5430 502A                        l5422 4FE2  
                      l5414 4FB2                        l5406 4F7A                        l3680 631C  
                      l3672 6314                        l3664 630C                        l6312 5BA8  
                      l3840 42FC                        l3832 42A6                        l3824 4244  
                      l3816 4226                        l3808 41EE                        l3760 40E6  
                      l3752 40D6                        l3744 40AE                        l3736 4084  
                      l3728 4054                        l4288 5512                        l4368 6686  
                      l3920 44F0                        l3912 44BA                        l3904 448E  
                      l4392 5218                        l4384 51A4                        l4376 513C  
                      l4296 3B1E                        l6240 367A                        l6232 3586  
                      l6224 34B6                        l6208 3240                        l6216 3448  
                      l6160 2D9A                        l6152 2D08                        l6144 2C2C  
                      l6136 2BBE                        l6128 2AE2                        l6080 265C  
                      l6072 2544                        l6064 23E4                        l6056 22CC  
                      l6048 21B2                        l6320 5CDE                        l5096 58C4  
                      l5088 587C                        l5192 5DD8                        l5272 5688  
                      l5264 563E                        l5256 5618                        l5248 55F2  
                      l5328 5800                        l5280 56AA                        l5360 5A3E  
                      l5352 5A04                        l5344 59DA                        l5336 599C  
                      l5440 5074                        l5432 502C                        l5424 4FFC  
                      l5416 4FB4                        l5408 4F84                        l3690 6326  
                      l3682 631E                        l3674 6316                        l3666 630E  
                      l3658 62E8                        l6314 5BB8                        l3850 432A  
                      l3834 42B6                        l3818 422A                        l3826 424A  
                      l3770 40FA                        l3762 40EA                        l3754 40DA  
                      l3746 40C0                        l3738 4094                        l3930 451C  
                      l3922 44F6                        l3914 44CA                        l3906 449A  
                      l4386 51C0                        l4394 5224                        l4378 514C  
                      l4298 3B2E                        l6250 380E                        l6242 36AE  
                      l6234 35DE                        l6226 34C6                        l6218 347C  
                      l6170 2E7A                        l6162 2DF2                        l6154 2D18  
                      l6146 2C90                        l6138 2BCE                        l6090 273C  
                      l6082 2690                        l6074 259C                        l6066 243C  
                      l6058 2324                        l6330 5D8C                        l6322 5CE2  
                      l5098 58C6                        l5194 5DEA                        l5186 5DBA  
                      l5274 568C                        l5266 5658                        l5258 562E  
                      l5290 56EC                        l5282 56B6                        l5370 5A6A  
                      l5362 5A44                        l5354 5A1E                        l5346 59DE  
                      l5338 59A8                        l5450 50C6                        l5442 508E  
                      l5434 5036                        l5418 4FBE                        l5426 5016  
                      l3692 632C                        l3684 6320                        l3676 6318  
                      l3668 6310                        l4900 5EC8                        l6316 5BC8  
                      l6308 5B8C                        l5700 48F6                        l3852 4338  
                      l3844 4310                        l3860 4356                        l3828 4270  
                      l3836 42C6                        l3772 40FE                        l3764 40EE  
                      l3756 40DE                        l3748 40CE                        l3780 410E  
                      l3940 4572                        l3932 452C                        l3924 44FC  
                      l3916 44DA                        l3908 44A8                        l4396 5240  
                      l4388 51F4                        l6260 39A2                        l6252 3866  
                      l6244 3706                        l6236 3612                        l6228 34FA  
                      l6180 2F22                        l6172 2E9E                        l6164 2E26  
                      l6156 2D32                        l6148 2CC4                        l6092 274C  
                      l6084 26C4                        l6076 25D0                        l6068 2494  
                      l6332 5DA2                        l6324 5D18                        l6340 6760  
                      l5188 5DC0                        l5268 5672                        l5276 5692  
                      l5292 56EE                        l5284 56BE                        l5380 5AB8  
                      l5372 5A84                        l5364 5A5A                        l5356 5A22  
                      l5348 59E0                        l5452 50E0                        l5436 5050  
                      l5428 5026                        l5444 50A8                        l3694 632E  
                      l3686 6322                        l3678 631A                        l4910 5EFE  
                      l4902 5EDA                        l5710 4926                        l5702 4906  
                      l3854 4340                        l3846 431A                        l3838 42EC  
                      l3862 4364                        l3790 417E                        l3782 4112  
                      l3774 4102                        l3766 40F2                        l3758 40E2  
                      l3950 45B2                        l3934 453C                        l3926 450A  
                      l3918 44E0                        l4398 5274                        l6270 3A88  
                      l6262 39D6                        l6254 38E2                        l6246 375E  
                      l6238 3646                        l6182 2F9C                        l6166 2E5A  
                      l6158 2D42                        l6094 2766                        l6086 26F8  
                      l6078 2604                        l6334 5DAA                        l6326 5D58  
                      l6342 6764                        l6350 6744                        l5198 5DF6  
                      l5294 56F8                        l5286 56D0                        l5278 56A4  
                      l5374 5A9E                        l5366 5A5E                        l5358 5A32  
                      l5382 5ABE                        l5446 50B8                        l5438 506A  
                      l5390 4EFE                        l3688 6324                        l3696 671C  
                      l2992 676A                        l4912 5F14                        l4904 5EE2  
                      l4920 5F2A                        l5800 4B9A                        l5720 495C  
                      l5712 492C                        l5704 4908                        l3872 43B6  
                      l3880 440C                        l3864 4368                        l3856 4344  
                      l3848 4328                        l3792 418A                        l3784 413C  
                      l3776 4106                        l3768 40F6                        l3960 45FC  
                      l3952 45BE                        l3944 4586                        l3936 4542  
                      l3928 450C                        l6272 3AD8                        l6264 39E6  
                      l6256 393A                        l6248 37B6                        l6168 2E6A  
                      l6096 2776                        l6088 272C                        l6336 5DB2  
                      l6328 5D74                        l6344 6734                        l5296 5712  
                      l5288 56E8                        l5368 5A60                        l5376 5AA2  
                      l5448 50BC                        l5392 4F10                        l5456 50FE  
                      l5384 4ED8                        l6360 627C                        l6352 625C  
                      l3698 671E                        l4922 5F3A                        l4914 5F1C  
                      l4906 5EEA                        l6290 5B3E                        l6282 5AFE  
                      l5810 4C12                        l5802 4BC4                        l5730 499C  
                      l5722 496C                        l5714 493A                        l5706 4910  
                      l3890 445E                        l3882 441C                        l3874 43C2  
                      l3866 4376                        l3858 4354                        l3794 418E  
                      l3786 4158                        l3778 410A                        l3970 464E  
                      l3962 4608                        l3954 45D6                        l3946 4592  
                      l3938 4562                        l6266 39F6                        l6258 396E  
                      l6194 30BC                        l6186 3008                        l6178 2F0A  
                      l6098 27AA                        l6338 675C                        l6346 673C  
                      l5298 572C                        l5378 5AB4                        l5394 4F30  
                      l5458 5128                        l5386 4EDE                        l6362 6284  
                      l6354 6264                        l4924 5F42                        l4916 5F1E  
                      l4908 5EF8                        l6292 5B4C                        l6284 5B28  
                      l6276 5AD2                        l5820 4C48                        l5812 4C2E  
                      l5804 4BC8                        l5732 49AC                        l5740 49CC  
                      l5724 496E                        l5716 493C                        l5708 4920  
                      l3892 4464                        l3884 442C                        l3876 43D0  
                      l3868 438C                        l3796 419C                        l3788 4168  
                      l3980 46CC                        l3972 465E                        l3964 4618  
                      l3956 45E2                        l3948 459C                        l6268 3A38  
                      l6196 30DA                        l6188 3050                        l5900 15B2  
                      l6348 6740                        l5396 4F40                        l5388 4EEA  
                      l6356 626C                        l4918 5F24                        l6286 5B2A  
                      l6278 5AEA                        l5814 4C32                        l5806 4BE2  
                      l5750 4A0A                        l5742 49DC                        l5734 49B4  
                      l5718 494C                        l5726 4976                        l3894 4466  
                      l3886 444C                        l3878 440A                        l3798 419E  
                      l3990 4746                        l3982 4702                        l3974 467A  
                      l3966 4624                        l3958 45EE                        l6198 3130  
                      l5910 162A                        l5902 15C0                        l5830 1164  
                      l4870 65EE                        l5398 4F4C                        l6358 6274  
                      l6288 5B3A                        l5816 4C40                        l5808 4BF8  
                      l5760 4A52                        l5752 4A1A                        l5744 49DC  
                      l5736 49B8                        l5728 4986                        l3896 446C  
                      l3888 4450                        l3992 4758                        l3984 4710  
                      l3976 4686                        l3968 4634                        l5920 16BE  
                      l5912 1640                        l5840 11AC                        l4872 65F2  
                      l4880 6642                        l6368 6288                        l4890 5EA2  
                      l6298 5B64                        l5818 4C46                        l5770 4AA0  
                      l5762 4A66                        l5754 4A2A                        l5690 48B8  
                      l3898 447A                        l3994 4766                        l3986 472E  
                      l3978 46A2                        l5922 1722                        l5914 166C  
                      l5906 15E8                        l5850 1238                        l5842 11CE  
                      l5834 117A                        l4866 65D6                        l4882 6646  
                      l4874 6616                        l6474 629E                        l4892 5EA6  
                      l4884 5E88                        l5780 4AE8                        l5772 4AB0  
                      l5764 4A74                        l5756 4A3A                        l5748 49F0  
                      l5692 48C6                        l3996 476A                        l3988 4738  
                      l5924 17A2                        l5916 167A                        l5932 17F2  
                      l5908 160C                        l5860 1390                        l5852 1246  
                      l5844 11F0                        l5836 1196                        l5828 111C  
                      l4868 65DA                        l4876 6626                        l6476 5112  
                      l4990 6702                        l4894 5EB4                        l4886 5E8C  
                      l5790 4B28                        l5782 4AF6                        l5774 4AC2  
                      l5766 4A80                        l5758 4A42                        l5694 48D4  
                      l3998 4778                        l5950 1912                        l5942 18A6  
                      l5934 1802                        l5926 17BA                        l5918 16AE  
                      l5870 142E                        l5862 13FC                        l5854 1262  
                      l4878 6636                        l6478 623C                        l4992 6704  
                      l4896 5EBC                        l4888 5E9A                        l5792 4B56  
                      l5776 4AD8                        l5784 4B08                        l5768 4A9E  
                      l5696 48D6                        l5960 1A1C                        l5952 1920  
                      l5944 18BC                        l5936 1810                        l5928 17DE  
                      l5880 1496                        l5872 1450                        l5864 1418  
                      l5856 1276                        l5848 1228                        l4994 6716  
                      l4898 5EC0                        l5786 4B16                        l5778 4ADE  
                      l5698 48E6                        l5970 1B46                        l5962 1A3A  
                      l5954 198C                        l5938 1826                        l5946 18CC  
                      l5890 14FE                        l5882 14BE                        l5874 145E  
                      l5858 1292             ??_disp_Clock_SW 0011                        l5796 4B80  
                      l5788 4B1A                        l5980 1C92                        l5972 1B9E  
                      l5964 1AA6                        l5948 18EE                        l5892 154A  
                      l4996 659A                        l5798 4B8C                        l5990 1D8C  
                      l5982 1D42                        l5974 1BD2                        l5958 19F8  
                      l5894 1562                        l5878 1488                        l5886 14D4  
                      l4998 65AA                        l5992 1DC0                        l5984 1D52  
                      l5976 1C2A                        l5968 1B12                        l5888 14F0  
                      l5986 1D62                        l5978 1C5E                        l5994 1DF8  
                      l5898 159A                        l5996 1E08                        l5988 1D7C  
                      l5998 1E24                        STR_1 10D3                        STR_2 10D8  
                      STR_3 10D8                        STR_4 10D8                        STR_5 10C1  
                      STR_6 108E                        STR_7 109F                        STR_8 10B0  
                      STR_9 107D                        u3000 44BA                        u3001 44B6  
                      u3010 44CA                        u3011 44C6                        u3100 4778  
                      u3020 450A                        u3101 4774                        u3021 4506  
                      _LATA 000F89                        u3110 47A6                        u3030 451C  
                      _LATB 000F8A                        u3111 47A2                        u3031 4518  
                      _LATC 000F8B                        u3120 47BC                        u3040 452C  
                      u3200 5C64                        _LATD 000F8C                        u3121 47B8  
                      u3041 4528                        u3201 5C60                        u3130 47D0  
                      u3050 4562                        u3210 5C84                        u3131 47CC  
                      u3051 455E                        u3211 5C80                        u3140 47EA  
                      u3060 4572                        u3220 5CD4                        u3141 47E6  
                      u3061 456E                        u3221 5CD0                        u3150 4832  
                      u3070 46EC                        u3151 482E                        u2600 3FE8  
                      u3160 4860                        u3080 4746                        u2601 3FE4  
                      u3161 485C                        u3081 4742                        u2610 3FFA  
                      u3170 489A                        u3090 4766                        u2611 3FF6  
                      u3171 4896                        u3091 4762                        u3075 46E2  
                      u2700 4154                        u2620 400A                        u3500 5442  
                      u3180 5C08                        u2701 414E                        u2621 4006  
                      u3501 543E                        u3181 5C04                        u2710 4156  
                      u2630 404C                        u3510 548C                        u3190 5C46  
                      u2631 4048                        u3511 5488                        u3191 5C42  
                      u4400 5EF8                        u5200 49DC                        u2800 4270  
                      u2720 417E                        u2640 4062                        u3520 54AA  
                      u3600 3C2E                        u6000 5D8C                        u4401 5EF4  
                      u5201 49D8                        u2801 426C                        u2721 417A  
                      u2641 405E                        u3521 54A6                        u3601 3C2A  
                      u6001 5D88                        u2570 62E8                        u4410 5F14  
                      u5210 4A52                        u5130 48D4                        u2810 42B6  
                      u2730 419C                        u2650 4074                        u3530 54BA  
                      u2571 62E4                        u4411 5F10                        u5211 4A4E  
                      u5131 48D0                        u2811 42B2                        u2731 4198  
                      u2651 4070                        u3531 54B6                        u2580 62FE  
                      u4420 5F3A                        u5300 4B6C                        u5220 4A74  
                      u5140 48E6                        u3460 6664                        u2900 43A2  
                      u2820 42EC                        u2740 41BC                        u2660 4084  
                      u3540 54C8                        u3620 3CAC                        u2581 62FA  
                      u4421 5F36                        u5301 4B68                        u5221 4A70  
                      u5141 48E2                        u3461 6660                        u2901 439E  
                      u2821 42E8                        u2741 41B8                        u2661 4080  
                      u3541 54C4                        u3621 3CA8                        u2590 633E  
                      u5310 4B80                        u5230 4A9E                        u5150 48F6  
                      u2910 43B6                        u2830 42FC                        u2750 41CA  
                      u2670 40C0                        u3550 5502                        u3470 5382  
                      u3710 5168                        u3630 3CE4                        u4350 6612  
                      u4510 65AA                        u2591 633A                        u5311 4B7C  
                      u5231 4A9A                        u5151 48F2                        u2911 43B2  
                      u2831 42F8                        u2751 41C6                        u2671 40BC  
                      u3551 54FE                        u3471 537E                        u3711 5164  
                      u3631 3CE0                        u3615 3C6A                        u4351 660E  
                      u4511 65A6                        u5320 4B9A                        u5240 4AC2  
                      u5160 493A                        u2920 43D0                        u2840 4328  
                      u2760 41DA                        u2680 40CE                        u3560 5510  
                      u3480 5390                        u3720 51C0                        u3640 3D5A  
                      u3616 3C74                        u5400 1246                        u4360 6626  
                      u4600 58C0                        u4520 65BA                        u5321 4B96  
                      u5241 4ABE                        u5161 4936                        u2921 43CC  
                      u2841 4324                        u2761 41D6                        u2681 40CA  
                      u3561 550C                        u3481 538C                        u3721 51BC  
                      u3705 3F7C                        u3641 3D56                        u3617 3C84  
                      u5401 1242                        u6017 6348                        u4361 6622  
                      u4601 58BC                        u4521 65B6                        u4370 5E9A  
                      u5330 4BE2                        u5250 4AD8                        u5170 494C  
                      u2930 440A                        u2850 4338                        u2770 420C  
                      u2690 413C                        u3490 53EC                        u3730 5218  
                      u3650 3DF6                        u3570 3B64                        u5410 1262  
                      u4530 601A                        u4610 5952                        u6107 63F8  
                      u4371 5E96                        u5331 4BDE                        u5251 4AD4  
                      u5171 4948                        u2931 4406                        u2851 4334  
                      u2771 4208                        u2691 4138                        u3491 53E8  
                      u3731 5214                        u3651 3DF2                        u3571 3B60  
                      u5411 125E                        u6027 6362                        u4531 6016  
                      u4611 594E                        u4380 5EB4                        u5340 4C12  
                      u5260 4AF6                        u5180 495C                        u2940 441C  
                      u2860 4354                        u2780 421A                        u3740 5240  
                      u3660 3E5E                        u3580 3BDE                        u5500 145E  
                      u5420 1292                        u4540 6034                        u4700 5554  
                      u4381 5EB0                        u5341 4C0E                        u5261 4AF2  
                      u5181 4958                        u2941 4418                        u2861 4350  
                      u2781 4216                        u3741 523C                        u3661 3E5A  
                      u3581 3BDA                        u5501 145A                        u5421 128E  
                      u6037 637A                        u4541 6030                        u4701 5550  
                      u4390 5EDA                        u5350 4C40                        u5270 4B16  
                      u5190 499C                        u2950 442C                        u2870 4364  
                      u2790 4238                        u3750 5298                        u3670 3E74  
                      u3590 3C0C                        u5510 1496                        u4550 604E  
                      u4710 5570                        u4391 5ED6                        u5351 4C3C  
                      u5271 4B12                        u5191 4998                        u2951 4428  
                      u2871 4360                        u2791 4234                        u3751 5294  
                      u3671 3E70                        u3591 3C08                        u5511 1492  
                      u6047 6392                        u4551 604A                        u4711 556C  
                      u5280 4B28                        u2960 444C                        u2880 4376  
                      u3760 52F0                        u3680 3EB6                        u5600 167A  
                      u5520 14F0                        u5360 1164                        u4560 606C  
                      u4720 5606                        u4800 5800                        u6057 641A  
                      u5281 4B24                        u2961 4448                        u2881 4372  
                      u3761 52EC                        u3681 3EB2                        u5601 1676  
                      u5521 14EC                        u5361 1160                        u4561 6068  
                      u4721 5602                        u4801 57FC                        u5290 4B56  
                      u2970 445E                        u2890 438C                        u3690 3EFA  
                      u5610 16BE                        u5530 14FE                        u5450 1356  
                      u5370 1196                        u4570 6082                        u4730 562E  
                      u4810 581C                        u6067 6442                        u5291 4B52  
                      u2971 445A                        u2891 4388                        u3691 3EF6  
                      u5611 16BA                        u5531 14FA                        u5435 12A8  
                      u5371 1192                        u4571 607E                        u4731 562A  
                      u4811 5818                        u2980 447A                        u5700 1A1C  
                      u5620 1722                        u5540 1562                        u5460 1390  
                      u5436 12B2                        u5380 11CE                        u4580 60A6  
                      u4660 5DEA                        u4740 5688                        u4820 59C2  
                      u4900 4F5C                        u6077 63AE                        u2981 4476  
                      u5701 1A18                        u5621 171E                        u5541 155E  
                      u5461 138C                        u5445 1302                        u5437 12C2  
                      u5381 11CA                        u4581 60A2                        u4661 5DE6  
                      u4741 5684                        u4821 59BE                        u4901 4F58  
                      u2990 44A8                        u5710 1A3A                        u5630 17BA  
                      u5550 15B2                        u5470 13FC                        u5446 130C  
                      u5390 11F0                        u4590 582E                        u4670 5E06  
                      u4750 56A2                        u4830 59DA                        u4910 4F74  
                      u6087 63C8                        u2991 44A4                        u3775 530A  
                      u5711 1A36                        u5631 17B6                        u5551 15AE  
                      u5471 13F8                        u5455 134C                        u5447 131C  
                      u5391 11EC                        u4591 582A                        u4671 5E02  
                      u4751 569E                        u4831 59D6                        u4911 4F70  
                      u5800 3050                        u5720 1E24                        u5640 1810  
                      u5560 15C0                        u5480 1418                        u4680 5E5A  
                      u4760 56D0                        u4840 5A32                        u4920 4FAE  
                      u6097 63E0                        u5801 304C                        u5721 1E20  
                      u5641 180C                        u5561 15BC                        u5481 1414  
                      u4681 5E56                        u4761 56CC                        u4841 5A2E  
                      u4921 4FAA                        u5810 30DA                        u5650 1826  
                      u5570 162A                        u5490 1450                        u4690 5E86  
                      u4770 56E8                        u4850 5A5A                        u4930 5026  
                      u5811 30D6                        u5651 1822                        u5571 1626  
                      u5491 144C                        u4691 5E82                        u4771 56E4  
                      u4851 5A56                        u4931 5022                        u5820 3130  
                      u5740 1F46                        u5660 18BC                        u5580 1640  
                      u4780 577E                        u4860 5AB4                        u4940 50B8  
                      u5821 312C                        u5741 1F42                        u5661 18B8  
                      u5581 163C                        u4781 577A                        u4861 5AB0  
                      u4941 50B4                        u5750 1F7E                        u5670 18EE  
                      u5590 165C                        u4790 57A6                        u4870 5AD0  
                      u4950 513A                        u5751 1F7A                        u5735 1EA0  
                      u5671 18EA                        u5591 1658                        u4791 57A2  
                      u4871 5ACC                        u4951 5136                        u5920 3A88  
                      u5840 3240                        u5736 1EAA                        u5680 1912  
                      u4880 4F10                        u5921 3A84                        u5905 3A08  
                      u5841 323C                        u5737 1EBA                        u5681 190E  
                      u4881 4F0C                        u5930 5AEA                        u5770 2E9E  
                      u5690 1920                        u4890 4F40                        u5931 5AE6  
                      u5915 3A4E                        u5835 31CC                        u5771 2E9A  
                      u5691 191C                        u4891 4F3C                        u5940 5B1E  
                      u5916 3A58                        u5836 31D6                        u5780 2F22  
                      u5917 3A68                        u5837 31E6                        u5781 2F1E  
                      u5765 21C4                        u5950 5B4C                        u5790 2F9C  
                      u5951 5B48                        u5855 325A                        u5791 2F98  
                      u5960 5B60                        u5856 3264                        u5961 5B5C  
                      u5945 5B14                        u5865 32C4                        u5857 3274  
                      u5970 5B88                        u5890 3404                        u5866 32CE  
                      u5971 5B84                        u5891 3400                        u5875 331C  
                      u5867 32DE                        u5980 5BA8                        u5876 3326  
                      u5981 5BA4                        u5885 33CA                        u5877 3336  
                      u5990 5BB8                        u5886 33D4                        u5991 5BB4  
                      u5887 33E4                        _cp_h 1079                        _cp_l 1075  
                      _dp_h 1009                        _dp_l 1001                        _main 625C  
                      _nanf 66DE                        _huge 1061                        _powf 10DC  
                      _tiny 105D                        fsr1l 000FE1                        btemp 0057  
          ?_WritePort_BBSPI 000C                        prodh 000FF4                        prodl 000FF3  
         _LCDMoveCursor$654 0012                        start 000E          __size_of_LCDPutStr 003E  
             __CFG_IESO$OFF 000000             ___fldiv@new_exp 0065               __CFG_MCLRE$ON 000000  
            ?_LCDMoveCursor 0010                ___param_bank 000000           ?_state_stop_watch 0001  
          __end_of_LCDPrint 65D6               ___fltol@sign1 00A1                 LCDPrint@pos 0015  
               LCDPrint@ptr 0016             __end_of___fladd 448E                       ?_main 0001  
                     ?_nanf 0009             __end_of___fldiv 4C54          ??_state_stop_watch 0015  
           __end_of___awdiv 5F4C             __end_of___flneg 6686                       STR_10 10D2  
                     STR_11 10DA             __end_of___awmod 60B8             __end_of___flmul 48B8  
                     ?_powf 0088             __end_of___flsub 6556             __end_of___fltol 5BDA  
           ?_interrupt_init 0001                       _T0CON 000FD5             ___awdiv@divisor 000B  
                     i2l106 61DC                       i2l655 650E                       i2l663 64BC  
                     i2l693 4ED6             ___awdiv@counter 000D                       _TMR0H 000FD7  
                     _TMR0L 000FD6                       _TRISA 000F92                       _TRISB 000F93  
                     _TRISC 000F94                       _TRISD 000F95               __CFG_PWRT$OFF 000000  
            __CFG_FCMEN$OFF 000000     __size_of_Port_BBSPIInit 001A                       _lg2_h 1029  
                     _lg2_l 1025                       _fabsf 6686                       _myISR 0008  
                     _count 00BF                       _hr_sw 00C8                       _errno 00B3  
                     _ivln2 1019             __end_of_ivln2_h 1075             __end_of_ivln2_l 1019  
                     _ms_sw 004F                       _two24 1065             __end_of_scalbnf 5370  
         _preCalculate$1774 00A3                       _state 0056                       _sqrtf 3B0E  
                     nanf@s 0009                       nanf@u 000D              __CFG_BOREN$OFF 000000  
                     tablat 000FF5         __size_of_LCDPutChar 0066                       powf@i 012C  
                     powf@j 01AC                       powf@k 01A0                       powf@n 0180  
            _state_mod_hour 5524                       powf@r 014C                       powf@s 015C  
                     powf@t 01B0                       powf@u 0174                       powf@v 0178  
                     powf@w 0144                       powf@x 0088                       powf@y 008C  
                     powf@z 01B4         __size_of_LCDPutInst 0066                       ttemp5 0058  
                     ttemp6 005B                       ttemp7 005F                       status 000FD8  
                     wtemp8 0058             __initialization 6556                __end_of_cp_h 107D  
              __end_of_cp_l 1079                __end_of_dp_h 1011                __end_of_dp_l 1009  
              __end_of_main 62D0                __end_of_nanf 6700                __end_of_huge 1065  
              __end_of_powf 3B0E                __end_of_tiny 1061        __end_of_handleButton 4ED8  
                    ??_main 00AD                      ??_nanf 000D                      ??_powf 0090  
             __activetblptr 000003      __size_of_readButtonRB0 0052      __size_of_readButtonRA5 0052  
                 ??_LCDInit 0010                LCDPutChar@ch 000F           __end_of_LCDPutStr 6614  
      __size_of_handle_Time 0178                LCDPrint@line 0018                      ?_fabsf 0009  
                    _ADCON1 000FC1                      ?_myISR 0001          __size_of_InitBBSPI 0012  
         ??_disp_Clock_Hide 0019            ___awdiv@dividend 0009                LCDPutInst@ch 000F  
    __end_of_state_mod_hour 56A4                      ?_sqrtf 0046                      i2l5150 64EE  
                    i2l5142 64BE                      i2l5152 64FA                      i2l5144 64C2  
                    i2l5160 646C                      i2l5146 64CC                      i2l5170 64A8  
                    i2l5162 6470                      i2l5148 64DE                      i2l5156 6506  
                    i2l5164 647A                      i2l5500 4D8E                      i2l5166 648C  
                    i2l5174 64B4                      i2l5510 4DDA                      i2l5502 4DA8  
                    i2l5168 649C                      i2l5520 4E24                      i2l5512 4DE2  
                    i2l5504 4DB4                      i2l5522 4E28                      i2l5514 4DF6  
                    i2l5506 4DB8                      i2l5530 4E88                      i2l5532 4E9A  
                    i2l5524 4E3E                      i2l5516 4E02                      i2l5508 4DCE  
                    i2l5534 4EAC                      i2l5518 4E18                      i2l5470 4C9A  
                    i2l5528 4E4E                      i2l5480 4CD4                      i2l5472 4CA6  
                    i2l5464 4C54                      i2l5490 4D1A                      i2l5482 4CE8  
                    i2l5474 4CAA                      i2l5466 4C6C                      i2l5570 616C  
                    i2l5492 4D30                      i2l5484 4CF4                      i2l5476 4CC0  
                    i2l5468 4C80                      i2l5580 6198                      i2l5572 6176  
                    i2l5486 4D0A                      i2l5478 4CCC                      i2l5582 61A4  
                    i2l5574 617A                      i2l5566 6150                      i2l6480 4D54  
                    i2l5488 4D16                      i2l5496 4D40                      i2l5584 61B8  
                    i2l5576 6180                      i2l5568 615E                      i2l6482 4E62  
                    i2l5498 4D7A                      i2l5586 61BC                      i2l5578 6184  
                    i2l5588 61D0             _state_clock$731 0015                      _OSCCON 000FD3  
              LCDPutStr@ptr 0010            __end_of___xxtofl 5524             ??_LCDMoveCursor 0011  
            __CFG_XINST$OFF 000000                      ___flge 5BDA                   ??___fladd 0011  
                 ??___fldiv 0042                   ??___awdiv 000D                   ??___flneg 000D  
                 ??___awmod 000D                   ??___flmul 0021                   ??___flsub 003A  
                 ??___fltol 009D                ?_timer0_init 0001                      _count1 00BD  
                    fabsf@u 000D                      fabsf@x 0009                      _min_sw 0051  
                    clear_0 657C                      clear_1 6588                      _sec_sw 0050  
          ___awdiv@quotient 000F             ___awmod@divisor 000B             ___awmod@counter 000D  
          __end_of_pin_init 66DE            __end_of_osc_init 677A      Port_BBSPIInit@port_dir 000C  
                 ??_scalbnf 0038            LCDMoveCursor@pos 0010                __mediumconst 0000  
                    powf@s2 018C                      powf@t1 0184                      powf@t2 011C  
                    tblptrh 000FF7                      tblptrl 000FF6                      powf@y1 0128  
                    tblptru 000FF8                      powf@ax 0170                      powf@is 0194  
                    powf@hx 0160                      powf@hy 017C                      powf@ix 01A8  
                    powf@iy 0190                      powf@sn 0188                      sqrtf@i 0068  
                    sqrtf@m 007C                      sqrtf@q 0070                      sqrtf@r 0080  
                    sqrtf@s 0064                      sqrtf@t 0074                      sqrtf@x 0046  
                    sqrtf@z 0078             ?_state_mod_hour 0001                  ___flge@ff1 003A  
                ___flge@ff2 003E                ___xxtofl@arg 0013                ___xxtofl@exp 0012  
         _SYSTEM_Initialize 6734                ___xxtofl@val 0009                  __accesstop 0060  
   __end_of__initialization 658E                  ___flneg@f1 0009                   ?_LCDPrint 0015  
             ?_preCalculate 0001          ?_SYSTEM_Initialize 0001               _readButtonRB0 646C  
             _readButtonRA5 64BE               ___rparam_used 000001                  ___fltol@f1 0099  
    __size_of_SendByteBBSPI 0070   __size_of_state_mod_minute 017A   __size_of_state_mod_second 013C  
            __pcstackCOMRAM 0001                __pidataBANK0 677A               __end_of_lg2_h 102D  
             __end_of_lg2_l 1029         ??_SYSTEM_Initialize 004F               __end_of_fabsf 66BA  
             __end_of_myISR 61E0           __end_of_InitBBSPI 675C               __end_of_ivln2 101D  
              ??_LCDPutChar 000E                ?_state_clock 0001               __end_of_two24 1069  
              ??_LCDPutInst 000E               __end_of_sqrtf 3FCE                  __end_of_L1 105D  
                __end_of_L2 1059                  __end_of_L3 1055                  __end_of_L4 1051  
                __end_of_L5 104D                  __end_of_L6 1049                  __end_of_P1 1045  
                __end_of_P2 1041                  __end_of_P3 103D                  __end_of_P4 1039  
                __end_of_P5 1035                  __end_of_bp 1071                  __end_of_cp 1021  
          preCalculate@temp 00A9             __CFG_OSC$INTIO7 000000              _Port_BBSPIInit 6700  
                   ??_fabsf 000D                     ??_myISR 0009   __end_of_SYSTEM_Initialize 674A  
                   ??_sqrtf 004A                  __pbssBANK0 00AF              ??_preCalculate 004F  
            ?_readButtonRB0 0001              ?_readButtonRA5 0001          __end_of_LCDPutChar 63A6  
                ??_LCDPrint 0018          __end_of_LCDPutInst 640C        disp_Clock_Hide@state 001B  
     __size_of_handleButton 0284                     ?___flge 003A            ??_interrupt_init 0009  
                _disp_Clock 5F4C      __end_of_Port_BBSPIInit 671A                     _LCDInit 640C  
  preCalculate@count_scaled 00AB               _SendByteBBSPI 62D0                   ?___xxtofl 0009  
 __size_of_state_stop_watch 0264                  _countRB0_1 00B5                  _countRA5_1 00B9  
              _handleButton 4C54            WritePort_BBSPI@a 000C       LCDMoveCursor@position 0014  
     __end_of_disp_Clock_SW 614E                   ?_pin_init 0001                     __Hparam 0000  
                 ?_osc_init 0001                     __Lparam 0000             __size_of___flge 0104  
                   ___fladd 3FCE                     ___fldiv 48B8                     ___awdiv 5E88  
                   ___flneg 664E                     ___awmod 6008                     ___flmul 448E  
                   ___flsub 6510                     ___fltol 5AD2    __size_of_WritePort_BBSPI 001A  
              __psmallconst 1000                     __pcinit 6556                     __ramtop 1000  
      __size_of_timer0_init 000E             _disp_Clock_Hide 61E0                     __ptext0 625C  
                   __ptext1 4ED8                     __ptext2 60B8                     __ptext3 5996  
                   __ptext4 56A4                     __ptext5 5524                     __ptext6 61E0  
                   __ptext7 6598                     __ptext8 5DBA                     __ptext9 581E  
                 _T0CONbits 000FD5              ?_SendByteBBSPI 0001             ?_Port_BBSPIInit 0001  
                   _ivln2_h 1071                     _ivln2_l 1015                  ??___xxtofl 000D  
                   _scalbnf 513C            ___awmod@dividend 0009                     _ms_flag 00CA  
                   _timeset 00C9  __size_of_SYSTEM_Initialize 0016                   _LCDPutStr 65D6  
            __pintcode_body 614E        end_of_initialization 658E             ??_readButtonRB0 0003  
           ??_readButtonRA5 0003                     int_func 614E           LCDMoveCursor@line 0011  
                ??_pin_init 0009                  ??_osc_init 0009                     powf@p_h 019C  
                   powf@p_l 0164                     powf@s_h 016C                     powf@t_h 0168  
                   powf@s_l 0130                     powf@t_l 0134                     powf@z_h 0120  
                   powf@z_l 0124            _state_mod_minute 56A4            _state_mod_second 5996  
      _state_mod_minute$766 001C        _state_mod_second$769 001C                     postdec1 000FE5  
                   postinc0 000FEE                     sqrtf@ix 0084        handleButton@checkRB0 0007  
      handleButton@checkRA5 0005                   _PORTAbits 000F80                   _PORTBbits 000F81  
      __size_of_state_clock 00CE        __end_of_preCalculate 5DBA               ??_handle_Time 0015  
               ?_disp_Clock 0001                 ___fladd@grs 0018            ??_state_mod_hour 001C  
             ___xxtofl@sign 0011                   _TRISAbits 000F92                   _TRISCbits 000F94  
                 _TRISFbits 000F97                 ___fldiv@grs 0067                 ___fldiv@rem 0060  
                ?_LCDPutStr 0010         SendByteBBSPI@output 0009                 ___flmul@grs 0026  
         __size_of_LCDPrint 003E       __end_of_LCDMoveCursor 664E     __end_of_disp_Clock_Hide 625C  
            __end_of___flge 5CDE                _firstReadRB0 00D0                _firstReadRA5 00D2  
           ??_SendByteBBSPI 0009               _secondReadRB0 00CF               _secondReadRA5 00D1  
                 _InitBBSPI 674A           ??_WritePort_BBSPI 000D         start_initialization 6556  
               __end_of_lg2 1031                 __end_of_ovt 1025         __end_of_handle_Time 5996  
          _state_stop_watch 4ED8           preCalculate@count 00A7                _counter_high 00C1  
       __size_of_disp_Clock 00BC                    ??___flge 0042                 __pdataBANK0 00CF  
                ?_InitBBSPI 0001                   ___fladd@a 000D                   ___fladd@b 0009  
                  ?_LCDInit 0001                   ___fldiv@a 003E                   ___fldiv@b 003A  
                 ___flmul@a 001D                   ___flmul@b 0019                 __pbssCOMRAM 004F  
                 ___flsub@a 0036                   ___flsub@b 0032               __pcstackBANK0 0060  
             __pcstackBANK1 0100           __end_ofsqrtf@tiny 1015           __size_of___xxtofl 01B4  
               ??_LCDPutStr 0012                   __pintcode 0008            ?_disp_Clock_Hide 0001  
         __size_of_pin_init 0024                    ?___fladd 0009                    ?___fldiv 003A  
                  ?___awdiv 0009                    ?___flneg 0009           __size_of_osc_init 0006  
     __size_of_preCalculate 00DC                    ?___awmod 0009                    ?___flmul 0019  
                  ?___flsub 0032                    ?___fltol 0099            ??_Port_BBSPIInit 000C  
                 _hide_flag 00CB                   fabsf@F463 00AF                 __smallconst 1000  
               _handle_Time 581E                    ?_scalbnf 0032    __end_of_state_mod_minute 581E  
  __end_of_state_mod_second 5AD2                   _buttonRB0 00CD                   _buttonRA5 00CE  
            __size_of_fabsf 0034              __size_of_myISR 61D8              __size_of_sqrtf 04C0  
                 _powf$1780 0100                   _powf$1781 0104                   _powf$1782 0158  
                 _powf$1775 01A4                   _powf$1783 013C                   _powf$1776 0154  
                 _powf$1784 0140                   _powf$1777 0148                   _powf$1785 0108  
                 _powf$1778 0198                   _powf$1786 010C                   _powf$1779 0138  
                 _powf$1787 0110                   _powf$1788 0114                   _powf$1789 0118  
                  _LCDPrint 6598                    _LATAbits 000F89                    _LATCbits 000F8B  
                  _LATFbits 000F8E                _preCalculate 5CDE                    i2u500_40 4D30  
                  i2u500_41 4D2C                    i2u501_40 4D8E                    i2u501_41 4D8A  
                  i2u502_40 4DCE                    i2u510_40 6198                    i2u502_41 4DCA  
                  i2u510_41 6194                    i2u503_40 4DF6                    i2u511_40 61B8  
                  i2u503_41 4DF2                    i2u511_41 61B4                    i2u504_40 4E18  
                  i2u512_40 61D0                    i2u504_41 4E14                    i2u512_41 61CC  
                  i2u505_40 4E3E                    i2u505_41 4E3A                    i2u506_40 4E9A  
                  i2u506_41 4E96                    i2u507_40 4EAC                    i2u507_41 4EA8  
                  i2u508_40 615E                    i2u508_41 615A                    i2u509_40 616C  
                  i2u509_41 6168                    i2u462_40 64DE                    i2u462_41 64DA  
                  i2u463_40 64EE                    i2u463_41 64EA                    i2u464_40 648C  
                  i2u464_41 6488                    i2u465_40 649C                    i2u465_41 6498  
                  i2u496_40 4C80                    i2u496_41 4C7C                    i2u497_40 4CC0  
                  i2u497_41 4CBC                    i2u498_40 4CE8                    i2u498_41 4CE4  
                  i2u499_40 4D0A                    i2u499_41 4D06               ??_timer0_init 004F  
                powf@yisint 0150                 ??_InitBBSPI 0009          SendByteBBSPI@input 000B  
              ??_disp_Clock 0012      __size_of_disp_Clock_SW 0096            __size_of_LCDInit 0060  
   __size_of_interrupt_init 000A                   copy_data0 656A       __end_of_readButtonRB0 64BE  
     __end_of_readButtonRA5 6510                 _counter_low 00C3                    __Hrparam 0000  
        __end_of_disp_Clock 6008                    __Lrparam 0000             _WritePort_BBSPI 671A  
  __end_of_state_stop_watch 513C               ??_state_clock 0015            __size_of___fladd 04C0  
          __size_of___fldiv 039C            __size_of___awdiv 00C4            __size_of___flneg 0038  
          __size_of___awmod 00B0            __size_of___flmul 042A            __size_of___flsub 0046  
          __size_of___fltol 0108         __end_of_timer0_init 676A                    ___xxtofl 5370  
          __size_of_scalbnf 0234                    __ptext10 6614                    __ptext11 5F4C  
                  __ptext20 66DE                    __ptext12 6008                    __ptext21 5BDA  
                  __ptext13 65D6                    __ptext30 5AD2                    __ptext22 513C  
                  __ptext14 6340                    __ptext31 5E88                    __ptext23 448E  
                  __ptext15 6734                    __ptext40 674A                    __ptext32 66BA  
                  __ptext24 6686                    __ptext16 675C                    __ptext33 6774  
                  __ptext25 5370                    __ptext17 5CDE                    __ptext42 4C54  
                  __ptext34 676A                    __ptext26 6510                    __ptext18 10DC  
                  __ptext43 646C                    __ptext35 640C                    __ptext27 3FCE  
                  __ptext19 3B0E                    __ptext44 64BE                    __ptext36 6700  
                  __ptext28 664E                    __ptext37 63A6                    __ptext29 48B8  
                  __ptext38 671A                    __ptext39 62D0                    _ledValue 0055  
                  _countRB0 00B7                    _countRA5 00BB               __size_of_main 0074  
        _state_mod_hour$762 001C               __size_of_nanf 0022               _disp_Clock_SW 60B8  
             __size_of_powf 2A32                    _pin_init 66BA        powf@__xc8_float_word 01B8  
                  _osc_init 6774                    _stateRB0 00C5                    int$flags 0057  
                  _stateRA5 00C6                    _state_sw 00C7                  _LCDPutChar 6340  
                _LCDPutInst 63A6       __end_of_SendByteBBSPI 6340                 _second_flag 00CC  
                _INTCONbits 000FF2         __end_of_state_clock 5E88      __size_of_LCDMoveCursor 003A  
                  scalbnf@n 0036                    scalbnf@u 003C                    scalbnf@x 0032  
                  scalbnf@y 0040                    intlevel2 0000               ?_handleButton 0001  
                 sqrtf@tiny 1011              ?_disp_Clock_SW 0001     __size_of_state_mod_hour 0180  
   __end_of_WritePort_BBSPI 6734                 _timer0_init 675C     WritePort_BBSPI@port_add 000D  
              ?_handle_Time 0001              _interrupt_init 676A           ?_state_mod_minute 0001  
         ?_state_mod_second 0001               ___fladd@signs 0015              ??_handleButton 0003  
        ??_state_mod_minute 001C          ??_state_mod_second 001C       sqrtf@__xc8_float_word 006C  
              ___fladd@aexp 0016                ___fladd@bexp 0017  
