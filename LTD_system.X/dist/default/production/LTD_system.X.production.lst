

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov 22 15:03:57 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    76                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    77  0000                     
    78                           ; Version 2.10
    79                           ; Generated 31/07/2019 GMT
    80                           ; 
    81                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC18F8722 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112  0000                     
   113                           	psect	idataBANK0
   114  003890                     __pidataBANK0:
   115                           	opt callstack 0
   116                           
   117                           ;initializer for _rear
   118  003890  FFFF               	dw	65535
   119                           
   120                           ;initializer for _front
   121  003892  FFFF               	dw	65535
   122                           
   123                           ;initializer for _period
   124  003894  2710               	dw	10000
   125                           
   126                           ;initializer for _secondReadRB0
   127  003896  01                 	db	1
   128                           
   129                           ;initializer for _firstReadRB0
   130  003897  01                 	db	1
   131                           
   132                           ;initializer for _secondReadRA5
   133  003898  01                 	db	1
   134                           
   135                           ;initializer for _firstReadRA5
   136  003899  01                 	db	1
   137  0000                     _LATDbits	set	3980
   138  0000                     _TRISDbits	set	3989
   139  0000                     _PORTDbits	set	3971
   140  0000                     _TMR1L	set	4046
   141  0000                     _TMR1H	set	4047
   142  0000                     _T1CON	set	4045
   143  0000                     _PIR1bits	set	3998
   144  0000                     _PIE1bits	set	3997
   145  0000                     _TMR0L	set	4054
   146  0000                     _T0CON	set	4053
   147  0000                     _INTCONbits	set	4082
   148  0000                     _T2CONbits	set	4042
   149  0000                     _TMR2	set	4044
   150  0000                     _CCPR4L	set	3956
   151  0000                     _CCP4CON	set	3955
   152  0000                     _T2CON	set	4042
   153  0000                     _PR2	set	4043
   154  0000                     _TRISGbits	set	3992
   155  0000                     _TRISD	set	3989
   156  0000                     _LATD	set	3980
   157  0000                     _TRISB	set	3987
   158  0000                     _LATB	set	3978
   159  0000                     _TRISA	set	3986
   160  0000                     _LATA	set	3977
   161  0000                     _ADCON1	set	4033
   162  0000                     _TRISC	set	3988
   163  0000                     _LATC	set	3979
   164  0000                     _OSCCON	set	4051
   165  0000                     _LATCbits	set	3979
   166  0000                     _LATAbits	set	3977
   167  0000                     _TRISCbits	set	3988
   168  0000                     _TRISAbits	set	3986
   169  0000                     _LATFbits	set	3982
   170  0000                     _TRISFbits	set	3991
   171  0000                     _PORTBbits	set	3969
   172  0000                     _PORTAbits	set	3968
   173                           
   174                           	psect	smallconst
   175  001000                     __psmallconst:
   176                           	opt callstack 0
   177  001000  00                 	db	0
   178  001001                     STR_21:
   179  001001  49                 	db	73	;'I'
   180  001002  44                 	db	68	;'D'
   181  001003  3A                 	db	58	;':'
   182  001004  20                 	db	32
   183  001005  31                 	db	49	;'1'
   184  001006  37                 	db	55	;'7'
   185  001007  31                 	db	49	;'1'
   186  001008  30                 	db	48	;'0'
   187  001009  33                 	db	51	;'3'
   188  00100A  36                 	db	54	;'6'
   189  00100B  34                 	db	52	;'4'
   190  00100C  20                 	db	32
   191  00100D  20                 	db	32
   192  00100E  20                 	db	32
   193  00100F  20                 	db	32
   194  001010  20                 	db	32
   195  001011  00                 	db	0
   196  001012                     STR_20:
   197  001012  4C                 	db	76	;'L'
   198  001013  54                 	db	84	;'T'
   199  001014  44                 	db	68	;'D'
   200  001015  20                 	db	32
   201  001016  63                 	db	99	;'c'
   202  001017  6F                 	db	111	;'o'
   203  001018  6E                 	db	110	;'n'
   204  001019  74                 	db	116	;'t'
   205  00101A  72                 	db	114	;'r'
   206  00101B  6F                 	db	111	;'o'
   207  00101C  6C                 	db	108	;'l'
   208  00101D  6C                 	db	108	;'l'
   209  00101E  65                 	db	101	;'e'
   210  00101F  72                 	db	114	;'r'
   211  001020  20                 	db	32
   212  001021  20                 	db	32
   213  001022  00                 	db	0
   214  001023                     STR_8:
   215  001023  45                 	db	69	;'E'
   216  001024  52                 	db	82	;'R'
   217  001025  52                 	db	82	;'R'
   218  001026  4F                 	db	79	;'O'
   219  001027  52                 	db	82	;'R'
   220  001028  20                 	db	32
   221  001029  2D                 	db	45
   222  00102A  20                 	db	32
   223  00102B  54                 	db	84	;'T'
   224  00102C  55                 	db	85	;'U'
   225  00102D  52                 	db	82	;'R'
   226  00102E  4E                 	db	78	;'N'
   227  00102F  20                 	db	32
   228  001030  4F                 	db	79	;'O'
   229  001031  46                 	db	70	;'F'
   230  001032  46                 	db	70	;'F'
   231  001033  00                 	db	0
   232  001034                     STR_3:
   233  001034  20                 	db	32
   234  001035  20                 	db	32
   235  001036  20                 	db	32
   236  001037  20                 	db	32
   237  001038  20                 	db	32
   238  001039  20                 	db	32
   239  00103A  20                 	db	32
   240  00103B  20                 	db	32
   241  00103C  20                 	db	32
   242  00103D  20                 	db	32
   243  00103E  20                 	db	32
   244  00103F  20                 	db	32
   245  001040  20                 	db	32
   246  001041  20                 	db	32
   247  001042  00                 	db	0
   248  001043                     STR_2:
   249  001043  53                 	db	83	;'S'
   250  001044  65                 	db	101	;'e'
   251  001045  74                 	db	116	;'t'
   252  001046  20                 	db	32
   253  001047  73                 	db	115	;'s'
   254  001048  75                 	db	117	;'u'
   255  001049  63                 	db	99	;'c'
   256  00104A  63                 	db	99	;'c'
   257  00104B  65                 	db	101	;'e'
   258  00104C  73                 	db	115	;'s'
   259  00104D  73                 	db	115	;'s'
   260  00104E  66                 	db	102	;'f'
   261  00104F  75                 	db	117	;'u'
   262  001050  6C                 	db	108	;'l'
   263  001051  00                 	db	0
   264  001052                     STR_5:
   265  001052  48                 	db	72	;'H'
   266  001053  65                 	db	101	;'e'
   267  001054  61                 	db	97	;'a'
   268  001055  74                 	db	116	;'t'
   269  001056  20                 	db	32
   270  001057  50                 	db	80	;'P'
   271  001058  75                 	db	117	;'u'
   272  001059  6D                 	db	109	;'m'
   273  00105A  70                 	db	112	;'p'
   274  00105B  00                 	db	0
   275  00105C                     STR_1:
   276  00105C  53                 	db	83	;'S'
   277  00105D  65                 	db	101	;'e'
   278  00105E  74                 	db	116	;'t'
   279  00105F  20                 	db	32
   280  001060  74                 	db	116	;'t'
   281  001061  69                 	db	105	;'i'
   282  001062  6D                 	db	109	;'m'
   283  001063  65                 	db	101	;'e'
   284  001064  00                 	db	0
   285  001065                     STR_15:
   286  001065  46                 	db	70	;'F'
   287  001066  69                 	db	105	;'i'
   288  001067  6E                 	db	110	;'n'
   289  001068  69                 	db	105	;'i'
   290  001069  73                 	db	115	;'s'
   291  00106A  68                 	db	104	;'h'
   292  00106B  00                 	db	0
   293  00106C                     STR_4:
   294  00106C  48                 	db	72	;'H'
   295  00106D  65                 	db	101	;'e'
   296  00106E  61                 	db	97	;'a'
   297  00106F  74                 	db	116	;'t'
   298  001070  65                 	db	101	;'e'
   299  001071  72                 	db	114	;'r'
   300  001072  00                 	db	0
   301  001073                     STR_19:
   302  001073  49                 	db	73	;'I'
   303  001074  44                 	db	68	;'D'
   304  001075  4C                 	db	76	;'L'
   305  001076  45                 	db	69	;'E'
   306  001077  00                 	db	0
   307  001078                     STR_23:
   308  001078  46                 	db	70	;'F'
   309  001079  33                 	db	51	;'3'
   310  00107A  3A                 	db	58	;':'
   311  00107B  00                 	db	0
   312  00107C                     STR_26:
   313  00107C  45                 	db	69	;'E'
   314  00107D  52                 	db	82	;'R'
   315  00107E  00                 	db	0
   316  00107F                     STR_17:
   317  00107F  48                 	db	72	;'H'
   318  001080  3A                 	db	58	;':'
   319  001081  00                 	db	0
   320  001082                     STR_16:
   321  001082  54                 	db	84	;'T'
   322  001083  3A                 	db	58	;':'
   323  001084  00                 	db	0
   324  0000                     
   325                           ; #config settings
   326  001085  00                 	db	0	; dummy byte at the end
   327  0000                     
   328                           	psect	cinit
   329  003354                     __pcinit:
   330                           	opt callstack 0
   331  003354                     start_initialization:
   332                           	opt callstack 0
   333  003354                     __initialization:
   334                           	opt callstack 0
   335                           
   336                           ; Initialize objects allocated to BANK0 (10 bytes)
   337                           ; load TBLPTR registers with __pidataBANK0
   338  003354  0E90               	movlw	low __pidataBANK0
   339  003356  6EF6               	movwf	tblptrl,c
   340  003358  0E38               	movlw	high __pidataBANK0
   341  00335A  6EF7               	movwf	tblptrh,c
   342  00335C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   343  00335E  6EF8               	movwf	tblptru,c
   344  003360  EE00  F0CA         	lfsr	0,__pdataBANK0
   345  003364  EE10 F00A          	lfsr	1,10
   346  003368                     copy_data0:
   347  003368  0009               	tblrd		*+
   348  00336A  CFF5 FFEE          	movff	tablat,postinc0
   349  00336E  50E5               	movf	postdec1,w,c
   350  003370  50E1               	movf	fsr1l,w,c
   351  003372  E1FA               	bnz	copy_data0
   352                           
   353                           ; Clear objects allocated to BIGRAM (300 bytes)
   354  003374  EE01  F064         	lfsr	0,__pbssBIGRAM
   355  003378  EE11 F02C          	lfsr	1,300
   356  00337C                     clear_0:
   357  00337C  6AEE               	clrf	postinc0,c
   358  00337E  50E5               	movf	postdec1,w,c
   359  003380  50E1               	movf	fsr1l,w,c
   360  003382  E1FC               	bnz	clear_0
   361  003384  50E2               	movf	fsr1h,w,c
   362  003386  E1FA               	bnz	clear_0
   363                           
   364                           ; Clear objects allocated to BANK1 (100 bytes)
   365  003388  EE01  F000         	lfsr	0,__pbssBANK1
   366  00338C  0E64               	movlw	100
   367  00338E                     clear_1:
   368  00338E  6AEE               	clrf	postinc0,c
   369  003390  06E8               	decf	wreg,f,c
   370  003392  E1FD               	bnz	clear_1
   371                           
   372                           ; Clear objects allocated to BANK0 (60 bytes)
   373  003394  EE00  F060         	lfsr	0,__pbssBANK0
   374  003398  0E3C               	movlw	60
   375  00339A                     clear_2:
   376  00339A  6AEE               	clrf	postinc0,c
   377  00339C  06E8               	decf	wreg,f,c
   378  00339E  E1FD               	bnz	clear_2
   379                           
   380                           ; Clear objects allocated to COMRAM (8 bytes)
   381  0033A0  EE00  F034         	lfsr	0,__pbssCOMRAM
   382  0033A4  0E08               	movlw	8
   383  0033A6                     clear_3:
   384  0033A6  6AEE               	clrf	postinc0,c
   385  0033A8  06E8               	decf	wreg,f,c
   386  0033AA  E1FD               	bnz	clear_3
   387  0033AC                     end_of_initialization:
   388                           	opt callstack 0
   389  0033AC                     __end_of__initialization:
   390                           	opt callstack 0
   391  0033AC  903C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   392  0033AE  923C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   393  0033B0  0100               	movlb	0
   394  0033B2  EFBF  F011         	goto	_main	;jump to C main() function
   395                           
   396                           	psect	bssCOMRAM
   397  000034                     __pbssCOMRAM:
   398                           	opt callstack 0
   399  000034                     _prev_time_ms:
   400                           	opt callstack 0
   401  000034                     	ds	4
   402  000038                     _count:
   403                           	opt callstack 0
   404  000038                     	ds	2
   405  00003A                     _ledVal:
   406                           	opt callstack 0
   407  00003A                     	ds	1
   408  00003B                     _value:
   409                           	opt callstack 0
   410  00003B                     	ds	1
   411                           
   412                           	psect	bssBANK0
   413  000060                     __pbssBANK0:
   414                           	opt callstack 0
   415  000060                     _task_id:
   416                           	opt callstack 0
   417  000060                     	ds	20
   418  000074                     _countRB0_1:
   419                           	opt callstack 0
   420  000074                     	ds	4
   421  000078                     _countRB0:
   422                           	opt callstack 0
   423  000078                     	ds	4
   424  00007C                     _countRA5_1:
   425                           	opt callstack 0
   426  00007C                     	ds	4
   427  000080                     _countRA5:
   428                           	opt callstack 0
   429  000080                     	ds	4
   430  000084                     _time_ms:
   431                           	opt callstack 0
   432  000084                     	ds	4
   433  000088                     _check_timeout:
   434                           	opt callstack 0
   435  000088                     	ds	4
   436  00008C                     _humidity_dht11:
   437                           	opt callstack 0
   438  00008C                     	ds	2
   439  00008E                     _temperature_dht11:
   440                           	opt callstack 0
   441  00008E                     	ds	2
   442  000090                     _head:
   443                           	opt callstack 0
   444  000090                     	ds	1
   445  000091                     _num_task:
   446                           	opt callstack 0
   447  000091                     	ds	1
   448  000092                     _stateRB0:
   449                           	opt callstack 0
   450  000092                     	ds	1
   451  000093                     _stateRA5:
   452                           	opt callstack 0
   453  000093                     	ds	1
   454  000094                     _isSet:
   455                           	opt callstack 0
   456  000094                     	ds	1
   457  000095                     _flag_change_state:
   458                           	opt callstack 0
   459  000095                     	ds	1
   460  000096                     _state_settime:
   461                           	opt callstack 0
   462  000096                     	ds	1
   463  000097                     _state:
   464                           	opt callstack 0
   465  000097                     	ds	1
   466  000098                     _temperature_value:
   467                           	opt callstack 0
   468  000098                     	ds	1
   469  000099                     _humidity_value:
   470                           	opt callstack 0
   471  000099                     	ds	1
   472  00009A                     _RB0_pressed:
   473                           	opt callstack 0
   474  00009A                     	ds	1
   475  00009B                     _RA5_pressed:
   476                           	opt callstack 0
   477  00009B                     	ds	1
   478                           
   479                           	psect	dataBANK0
   480  0000CA                     __pdataBANK0:
   481                           	opt callstack 0
   482  0000CA                     _rear:
   483                           	opt callstack 0
   484  0000CA                     	ds	2
   485  0000CC                     _front:
   486                           	opt callstack 0
   487  0000CC                     	ds	2
   488  0000CE                     _period:
   489                           	opt callstack 0
   490  0000CE                     	ds	2
   491  0000D0                     _secondReadRB0:
   492                           	opt callstack 0
   493  0000D0                     	ds	1
   494  0000D1                     _firstReadRB0:
   495                           	opt callstack 0
   496  0000D1                     	ds	1
   497  0000D2                     _secondReadRA5:
   498                           	opt callstack 0
   499  0000D2                     	ds	1
   500  0000D3                     _firstReadRA5:
   501                           	opt callstack 0
   502  0000D3                     	ds	1
   503                           
   504                           	psect	bssBANK1
   505  000100                     __pbssBANK1:
   506                           	opt callstack 0
   507  000100                     _ready_queue:
   508                           	opt callstack 0
   509  000100                     	ds	100
   510                           
   511                           	psect	bssBIGRAM
   512  000164                     __pbssBIGRAM:
   513                           	opt callstack 0
   514  000164                     _task_list:
   515                           	opt callstack 0
   516  000164                     	ds	300
   517                           
   518                           	psect	cstackBANK0
   519  00009C                     __pcstackBANK0:
   520                           	opt callstack 0
   521  00009C                     ??_remove_timer:
   522  00009C                     ??_getByte:
   523  00009C                     ?_readButtonRA5:
   524                           	opt callstack 0
   525  00009C                     ?_readButtonRB0:
   526                           	opt callstack 0
   527  00009C                     ?___wmul:
   528                           	opt callstack 0
   529  00009C                     ?___awdiv:
   530                           	opt callstack 0
   531  00009C                     ?___awmod:
   532                           	opt callstack 0
   533  00009C                     ?_get_time:
   534                           	opt callstack 0
   535  00009C                     SendByteBBSPI@output:
   536                           	opt callstack 0
   537  00009C                     turn_on_fan@idx:
   538                           	opt callstack 0
   539  00009C                     turn_off_fan@idx:
   540                           	opt callstack 0
   541  00009C                     set_speed_fan3@dutyCycle:
   542                           	opt callstack 0
   543  00009C                     ___wmul@multiplier:
   544                           	opt callstack 0
   545  00009C                     ___awdiv@dividend:
   546                           	opt callstack 0
   547  00009C                     ___awmod@dividend:
   548                           	opt callstack 0
   549                           
   550                           ; 2 bytes @ 0x0
   551  00009C                     	ds	1
   552  00009D                     SendByteBBSPI@bitcount:
   553                           	opt callstack 0
   554                           
   555                           ; 1 bytes @ 0x1
   556  00009D                     	ds	1
   557  00009E                     ??_turn_on_fan:
   558  00009E                     ??_turn_off_fan:
   559  00009E                     SendByteBBSPI@input:
   560                           	opt callstack 0
   561  00009E                     getByte@i:
   562                           	opt callstack 0
   563  00009E                     handleButton@data_ptr:
   564                           	opt callstack 0
   565  00009E                     ___wmul@multiplicand:
   566                           	opt callstack 0
   567  00009E                     ___awdiv@divisor:
   568                           	opt callstack 0
   569  00009E                     ___awmod@divisor:
   570                           	opt callstack 0
   571                           
   572                           ; 2 bytes @ 0x2
   573  00009E                     	ds	1
   574  00009F                     Port_BBSPIInit@port_dir:
   575                           	opt callstack 0
   576  00009F                     WritePort_BBSPI@a:
   577                           	opt callstack 0
   578  00009F                     getByte@timeOut:
   579                           	opt callstack 0
   580                           
   581                           ; 2 bytes @ 0x3
   582  00009F                     	ds	1
   583  0000A0                     ??_handleButton:
   584  0000A0                     WritePort_BBSPI@port_add:
   585                           	opt callstack 0
   586  0000A0                     remove_timer@pos:
   587                           	opt callstack 0
   588  0000A0                     ___awdiv@counter:
   589                           	opt callstack 0
   590  0000A0                     ___awmod@counter:
   591                           	opt callstack 0
   592  0000A0                     ___wmul@product:
   593                           	opt callstack 0
   594                           
   595                           ; 2 bytes @ 0x4
   596  0000A0                     	ds	1
   597  0000A1                     LCDPutChar@ch:
   598                           	opt callstack 0
   599  0000A1                     LCDPutInst@ch:
   600                           	opt callstack 0
   601  0000A1                     remove_timer@id:
   602                           	opt callstack 0
   603  0000A1                     getByte@j:
   604                           	opt callstack 0
   605  0000A1                     ___awdiv@sign:
   606                           	opt callstack 0
   607  0000A1                     ___awmod@sign:
   608                           	opt callstack 0
   609                           
   610                           ; 1 bytes @ 0x5
   611  0000A1                     	ds	1
   612  0000A2                     ??_LCDInit:
   613  0000A2                     ??_getSizeQueue:
   614  0000A2                     ??_readDHT:
   615  0000A2                     LCDMoveCursor@pos:
   616                           	opt callstack 0
   617  0000A2                     handleButton@checkRA5:
   618                           	opt callstack 0
   619  0000A2                     LCDPutStr@ptr:
   620                           	opt callstack 0
   621  0000A2                     queueInitialize@i:
   622                           	opt callstack 0
   623  0000A2                     ___awdiv@quotient:
   624                           	opt callstack 0
   625  0000A2                     register_timer@period:
   626                           	opt callstack 0
   627                           
   628                           ; 4 bytes @ 0x6
   629  0000A2                     	ds	1
   630  0000A3                     LCDMoveCursor@line:
   631                           	opt callstack 0
   632                           
   633                           ; 1 bytes @ 0x7
   634  0000A3                     	ds	1
   635  0000A4                     ?_dequeue:
   636                           	opt callstack 0
   637  0000A4                     readDHT@checkSum:
   638                           	opt callstack 0
   639  0000A4                     handleButton@checkRB0:
   640                           	opt callstack 0
   641  0000A4                     _LCDMoveCursor$733:
   642                           	opt callstack 0
   643  0000A4                     initializeTaskList@i:
   644                           	opt callstack 0
   645                           
   646                           ; 2 bytes @ 0x8
   647  0000A4                     	ds	1
   648  0000A5                     readDHT@timeOut:
   649                           	opt callstack 0
   650                           
   651                           ; 2 bytes @ 0x9
   652  0000A5                     	ds	1
   653  0000A6                     ??_start_timer:
   654  0000A6                     LCDMoveCursor@position:
   655                           	opt callstack 0
   656  0000A6                     register_timer@delay:
   657                           	opt callstack 0
   658                           
   659                           ; 4 bytes @ 0xA
   660  0000A6                     	ds	1
   661  0000A7                     LCDPrint@pos:
   662                           	opt callstack 0
   663  0000A7                     LCDPrintChar@pos:
   664                           	opt callstack 0
   665                           
   666                           ; 1 bytes @ 0xB
   667  0000A7                     	ds	1
   668  0000A8                     LCDPrintChar@ch:
   669                           	opt callstack 0
   670  0000A8                     start_timer@timer_vaddr:
   671                           	opt callstack 0
   672  0000A8                     LCDPrint@ptr:
   673                           	opt callstack 0
   674                           
   675                           ; 2 bytes @ 0xC
   676  0000A8                     	ds	1
   677  0000A9                     LCDPrintChar@line:
   678                           	opt callstack 0
   679  0000A9                     dequeue@idx:
   680                           	opt callstack 0
   681                           
   682                           ; 2 bytes @ 0xD
   683  0000A9                     	ds	1
   684  0000AA                     LCDPrint@line:
   685                           	opt callstack 0
   686  0000AA                     register_timer@callback:
   687                           	opt callstack 0
   688                           
   689                           ; 3 bytes @ 0xE
   690  0000AA                     	ds	1
   691  0000AB                     ??_LTD_process:
   692  0000AB                     check_humid_to_turn_fan@humid:
   693                           	opt callstack 0
   694  0000AB                     dequeue@temp:
   695                           	opt callstack 0
   696                           
   697                           ; 5 bytes @ 0xF
   698  0000AB                     	ds	2
   699  0000AD                     register_timer@data_ptr:
   700                           	opt callstack 0
   701                           
   702                           ; 2 bytes @ 0x11
   703  0000AD                     	ds	2
   704  0000AF                     ??_register_timer:
   705  0000AF                     LTD_process@temp:
   706                           	opt callstack 0
   707                           
   708                           ; 2 bytes @ 0x13
   709  0000AF                     	ds	1
   710  0000B0                     dispatch@node:
   711                           	opt callstack 0
   712                           
   713                           ; 5 bytes @ 0x14
   714  0000B0                     	ds	1
   715  0000B1                     LTD_process@humid:
   716                           	opt callstack 0
   717                           
   718                           ; 2 bytes @ 0x15
   719  0000B1                     	ds	10
   720  0000BB                     register_timer@prev:
   721                           	opt callstack 0
   722                           
   723                           ; 2 bytes @ 0x1F
   724  0000BB                     	ds	2
   725  0000BD                     register_timer@sum:
   726                           	opt callstack 0
   727                           
   728                           ; 2 bytes @ 0x21
   729  0000BD                     	ds	2
   730  0000BF                     register_timer@cur:
   731                           	opt callstack 0
   732                           
   733                           ; 2 bytes @ 0x23
   734  0000BF                     	ds	2
   735  0000C1                     register_timer@idx:
   736                           	opt callstack 0
   737                           
   738                           ; 1 bytes @ 0x25
   739  0000C1                     	ds	1
   740  0000C2                     ??_set_time_process:
   741                           
   742                           ; 1 bytes @ 0x26
   743  0000C2                     	ds	2
   744  0000C4                     set_time_process@temp:
   745                           	opt callstack 0
   746                           
   747                           ; 2 bytes @ 0x28
   748  0000C4                     	ds	2
   749  0000C6                     set_time_process@temp_156:
   750                           	opt callstack 0
   751                           
   752                           ; 2 bytes @ 0x2A
   753  0000C6                     	ds	2
   754  0000C8                     ??_main:
   755                           
   756                           ; 1 bytes @ 0x2C
   757  0000C8                     	ds	2
   758                           
   759                           	psect	cstackCOMRAM
   760  000001                     __pcstackCOMRAM:
   761                           	opt callstack 0
   762  000001                     ??i2_remove_timer:
   763  000001                     ?i2___wmul:
   764                           	opt callstack 0
   765  000001                     ?i2___awmod:
   766                           	opt callstack 0
   767  000001                     i2___wmul@multiplier:
   768                           	opt callstack 0
   769  000001                     i2___awmod@dividend:
   770                           	opt callstack 0
   771                           
   772                           ; 2 bytes @ 0x0
   773  000001                     	ds	2
   774  000003                     i2___wmul@multiplicand:
   775                           	opt callstack 0
   776  000003                     i2___awmod@divisor:
   777                           	opt callstack 0
   778                           
   779                           ; 2 bytes @ 0x2
   780  000003                     	ds	2
   781  000005                     i2remove_timer@id:
   782                           	opt callstack 0
   783  000005                     i2___awmod@counter:
   784                           	opt callstack 0
   785  000005                     i2___wmul@product:
   786                           	opt callstack 0
   787                           
   788                           ; 2 bytes @ 0x4
   789  000005                     	ds	1
   790  000006                     i2remove_timer@pos:
   791                           	opt callstack 0
   792  000006                     i2___awmod@sign:
   793                           	opt callstack 0
   794                           
   795                           ; 1 bytes @ 0x5
   796  000006                     	ds	1
   797  000007                     ??i2_getSizeQueue:
   798                           
   799                           ; 1 bytes @ 0x6
   800  000007                     	ds	2
   801  000009                     ??_isFullQueue:
   802                           
   803                           ; 1 bytes @ 0x8
   804  000009                     	ds	1
   805  00000A                     enqueue@ptr:
   806                           	opt callstack 0
   807                           
   808                           ; 3 bytes @ 0x9
   809  00000A                     	ds	3
   810  00000D                     enqueue@data_ptr:
   811                           	opt callstack 0
   812                           
   813                           ; 2 bytes @ 0xC
   814  00000D                     	ds	2
   815  00000F                     ??_timer_interrupt:
   816                           
   817                           ; 1 bytes @ 0xE
   818  00000F                     	ds	22
   819  000025                     _timer_interrupt$2170:
   820                           	opt callstack 0
   821                           
   822                           ; 3 bytes @ 0x24
   823  000025                     	ds	3
   824  000028                     _timer_interrupt$2175:
   825                           	opt callstack 0
   826                           
   827                           ; 2 bytes @ 0x27
   828  000028                     	ds	2
   829  00002A                     _timer_interrupt$2176:
   830                           	opt callstack 0
   831                           
   832                           ; 2 bytes @ 0x29
   833  00002A                     	ds	2
   834  00002C                     timer_interrupt@prev:
   835                           	opt callstack 0
   836                           
   837                           ; 2 bytes @ 0x2B
   838  00002C                     	ds	2
   839  00002E                     timer_interrupt@sum:
   840                           	opt callstack 0
   841                           
   842                           ; 2 bytes @ 0x2D
   843  00002E                     	ds	2
   844  000030                     timer_interrupt@cur:
   845                           	opt callstack 0
   846                           
   847                           ; 2 bytes @ 0x2F
   848  000030                     	ds	2
   849  000032                     timer_interrupt@pos:
   850                           	opt callstack 0
   851                           
   852                           ; 2 bytes @ 0x31
   853  000032                     	ds	2
   854                           
   855 ;;
   856 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   857 ;;
   858 ;; *************** function _main *****************
   859 ;; Defined at:
   860 ;;		line 157 in file "main.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;		None
   863 ;; Auto vars:     Size  Location     Type
   864 ;;		None
   865 ;; Return value:  Size  Location     Type
   866 ;;                  1    wreg      void 
   867 ;; Registers used:
   868 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
   869 ;; Tracked objects:
   870 ;;		On entry : 0/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   876 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   877 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   878 ;;Total ram usage:        2 bytes
   879 ;; Hardware stack levels required when called:   12
   880 ;; This function calls:
   881 ;;		_LCDPrint
   882 ;;		_LCDPutInst
   883 ;;		_LTD_process
   884 ;;		_dispatch
   885 ;;		_register_timer
   886 ;;		_set_time_process
   887 ;;		_system_initialize
   888 ;; This function is called by:
   889 ;;		Startup code after reset
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893                           	psect	text0
   894  00237E                     __ptext0:
   895                           	opt callstack 0
   896  00237E                     _main:
   897                           	opt callstack 19
   898  00237E                     
   899                           ;main.c: 158:     system_initialize();
   900  00237E  EC91  F01B         	call	_system_initialize	;wreg free
   901                           
   902                           ;main.c: 160:     task_id[0] = register_timer(50, 0, handleButton, ((void*)0));
   903  002382  0E32               	movlw	50
   904  002384  0100               	movlb	0	; () banked
   905  002386  6FA2               	movwf	register_timer@period& (0+255),b
   906  002388  0E00               	movlw	0
   907  00238A  6FA3               	movwf	(register_timer@period+1)& (0+255),b
   908  00238C  0E00               	movlw	0
   909  00238E  6FA4               	movwf	(register_timer@period+2)& (0+255),b
   910  002390  0E00               	movlw	0
   911  002392  6FA5               	movwf	(register_timer@period+3)& (0+255),b
   912  002394  0E00               	movlw	0
   913  002396  6FA6               	movwf	register_timer@delay& (0+255),b
   914  002398  0E00               	movlw	0
   915  00239A  6FA7               	movwf	(register_timer@delay+1)& (0+255),b
   916  00239C  0E00               	movlw	0
   917  00239E  6FA8               	movwf	(register_timer@delay+2)& (0+255),b
   918  0023A0  0E00               	movlw	0
   919  0023A2  6FA9               	movwf	(register_timer@delay+3)& (0+255),b
   920  0023A4  0E7A               	movlw	low _handleButton
   921  0023A6  6FAA               	movwf	register_timer@callback& (0+255),b
   922  0023A8  0E1D               	movlw	high _handleButton
   923  0023AA  6FAB               	movwf	(register_timer@callback+1)& (0+255),b
   924  0023AC  0E00               	movlw	low (_handleButton shr (0+16))
   925  0023AE  6FAC               	movwf	(register_timer@callback+2)& (0+255),b
   926  0023B0  0E00               	movlw	0
   927  0023B2  6FAD               	movwf	register_timer@data_ptr& (0+255),b
   928  0023B4  0E00               	movlw	0
   929  0023B6  6FAE               	movwf	(register_timer@data_ptr+1)& (0+255),b
   930  0023B8  ECED  F00C         	call	_register_timer	;wreg free
   931  0023BC  0100               	movlb	0	; () banked
   932  0023BE  6F60               	movwf	_task_id& (0+255),b
   933                           
   934                           ;main.c: 161:     task_id[1] = register_timer(period, 5000, changeState, ((void*)0));
   935  0023C0  C0CE  F0A2         	movff	_period,register_timer@period
   936  0023C4  C0CF  F0A3         	movff	_period+1,register_timer@period+1
   937  0023C8  0E00               	movlw	0
   938  0023CA  BFA3               	btfsc	(register_timer@period+1)& (0+255),7,b
   939  0023CC  0EFF               	movlw	-1
   940  0023CE  6FA4               	movwf	(register_timer@period+2)& (0+255),b
   941  0023D0  6FA5               	movwf	(register_timer@period+3)& (0+255),b
   942  0023D2  0E88               	movlw	136
   943  0023D4  6FA6               	movwf	register_timer@delay& (0+255),b
   944  0023D6  0E13               	movlw	19
   945  0023D8  6FA7               	movwf	(register_timer@delay+1)& (0+255),b
   946  0023DA  0E00               	movlw	0
   947  0023DC  6FA8               	movwf	(register_timer@delay+2)& (0+255),b
   948  0023DE  0E00               	movlw	0
   949  0023E0  6FA9               	movwf	(register_timer@delay+3)& (0+255),b
   950  0023E2  0EBE               	movlw	low _changeState
   951  0023E4  6FAA               	movwf	register_timer@callback& (0+255),b
   952  0023E6  0E2D               	movlw	high _changeState
   953  0023E8  6FAB               	movwf	(register_timer@callback+1)& (0+255),b
   954  0023EA  0E00               	movlw	low (_changeState shr (0+16))
   955  0023EC  6FAC               	movwf	(register_timer@callback+2)& (0+255),b
   956  0023EE  0E00               	movlw	0
   957  0023F0  6FAD               	movwf	register_timer@data_ptr& (0+255),b
   958  0023F2  0E00               	movlw	0
   959  0023F4  6FAE               	movwf	(register_timer@data_ptr+1)& (0+255),b
   960  0023F6  ECED  F00C         	call	_register_timer	;wreg free
   961  0023FA  0100               	movlb	0	; () banked
   962  0023FC  6F61               	movwf	(_task_id+1)& (0+255),b
   963                           
   964                           ;main.c: 162:     task_id[2] = register_timer(4000, 3100, check_humid_to_turn_fan, ((voi
      +                          d*)0));
   965  0023FE  0EA0               	movlw	160
   966  002400  6FA2               	movwf	register_timer@period& (0+255),b
   967  002402  0E0F               	movlw	15
   968  002404  6FA3               	movwf	(register_timer@period+1)& (0+255),b
   969  002406  0E00               	movlw	0
   970  002408  6FA4               	movwf	(register_timer@period+2)& (0+255),b
   971  00240A  0E00               	movlw	0
   972  00240C  6FA5               	movwf	(register_timer@period+3)& (0+255),b
   973  00240E  0E1C               	movlw	28
   974  002410  6FA6               	movwf	register_timer@delay& (0+255),b
   975  002412  0E0C               	movlw	12
   976  002414  6FA7               	movwf	(register_timer@delay+1)& (0+255),b
   977  002416  0E00               	movlw	0
   978  002418  6FA8               	movwf	(register_timer@delay+2)& (0+255),b
   979  00241A  0E00               	movlw	0
   980  00241C  6FA9               	movwf	(register_timer@delay+3)& (0+255),b
   981  00241E  0E6C               	movlw	low _check_humid_to_turn_fan
   982  002420  6FAA               	movwf	register_timer@callback& (0+255),b
   983  002422  0E30               	movlw	high _check_humid_to_turn_fan
   984  002424  6FAB               	movwf	(register_timer@callback+1)& (0+255),b
   985  002426  0E00               	movlw	low (_check_humid_to_turn_fan shr (0+16))
   986  002428  6FAC               	movwf	(register_timer@callback+2)& (0+255),b
   987  00242A  0E00               	movlw	0
   988  00242C  6FAD               	movwf	register_timer@data_ptr& (0+255),b
   989  00242E  0E00               	movlw	0
   990  002430  6FAE               	movwf	(register_timer@data_ptr+1)& (0+255),b
   991  002432  ECED  F00C         	call	_register_timer	;wreg free
   992  002436  0100               	movlb	0	; () banked
   993  002438  6F62               	movwf	(_task_id+2)& (0+255),b
   994                           
   995                           ;main.c: 163:     task_id[3] = register_timer(4000, 3300, readTempAndHumid, ((void*)0));
   996  00243A  0EA0               	movlw	160
   997  00243C  6FA2               	movwf	register_timer@period& (0+255),b
   998  00243E  0E0F               	movlw	15
   999  002440  6FA3               	movwf	(register_timer@period+1)& (0+255),b
  1000  002442  0E00               	movlw	0
  1001  002444  6FA4               	movwf	(register_timer@period+2)& (0+255),b
  1002  002446  0E00               	movlw	0
  1003  002448  6FA5               	movwf	(register_timer@period+3)& (0+255),b
  1004  00244A  0EE4               	movlw	228
  1005  00244C  6FA6               	movwf	register_timer@delay& (0+255),b
  1006  00244E  0E0C               	movlw	12
  1007  002450  6FA7               	movwf	(register_timer@delay+1)& (0+255),b
  1008  002452  0E00               	movlw	0
  1009  002454  6FA8               	movwf	(register_timer@delay+2)& (0+255),b
  1010  002456  0E00               	movlw	0
  1011  002458  6FA9               	movwf	(register_timer@delay+3)& (0+255),b
  1012  00245A  0EA0               	movlw	low _readTempAndHumid
  1013  00245C  6FAA               	movwf	register_timer@callback& (0+255),b
  1014  00245E  0E36               	movlw	high _readTempAndHumid
  1015  002460  6FAB               	movwf	(register_timer@callback+1)& (0+255),b
  1016  002462  0E00               	movlw	low (_readTempAndHumid shr (0+16))
  1017  002464  6FAC               	movwf	(register_timer@callback+2)& (0+255),b
  1018  002466  0E00               	movlw	0
  1019  002468  6FAD               	movwf	register_timer@data_ptr& (0+255),b
  1020  00246A  0E00               	movlw	0
  1021  00246C  6FAE               	movwf	(register_timer@data_ptr+1)& (0+255),b
  1022  00246E  ECED  F00C         	call	_register_timer	;wreg free
  1023  002472  0100               	movlb	0	; () banked
  1024  002474  6F63               	movwf	(_task_id+3)& (0+255),b
  1025                           
  1026                           ;main.c: 164:     task_id[4] = register_timer(4000, 1500, print_temp_and_humid, ((void*)
      +                          0));
  1027  002476  0EA0               	movlw	160
  1028  002478  6FA2               	movwf	register_timer@period& (0+255),b
  1029  00247A  0E0F               	movlw	15
  1030  00247C  6FA3               	movwf	(register_timer@period+1)& (0+255),b
  1031  00247E  0E00               	movlw	0
  1032  002480  6FA4               	movwf	(register_timer@period+2)& (0+255),b
  1033  002482  0E00               	movlw	0
  1034  002484  6FA5               	movwf	(register_timer@period+3)& (0+255),b
  1035  002486  0EDC               	movlw	220
  1036  002488  6FA6               	movwf	register_timer@delay& (0+255),b
  1037  00248A  0E05               	movlw	5
  1038  00248C  6FA7               	movwf	(register_timer@delay+1)& (0+255),b
  1039  00248E  0E00               	movlw	0
  1040  002490  6FA8               	movwf	(register_timer@delay+2)& (0+255),b
  1041  002492  0E00               	movlw	0
  1042  002494  6FA9               	movwf	(register_timer@delay+3)& (0+255),b
  1043  002496  0E4A               	movlw	low _print_temp_and_humid
  1044  002498  6FAA               	movwf	register_timer@callback& (0+255),b
  1045  00249A  0E2C               	movlw	high _print_temp_and_humid
  1046  00249C  6FAB               	movwf	(register_timer@callback+1)& (0+255),b
  1047  00249E  0E00               	movlw	low (_print_temp_and_humid shr (0+16))
  1048  0024A0  6FAC               	movwf	(register_timer@callback+2)& (0+255),b
  1049  0024A2  0E00               	movlw	0
  1050  0024A4  6FAD               	movwf	register_timer@data_ptr& (0+255),b
  1051  0024A6  0E00               	movlw	0
  1052  0024A8  6FAE               	movwf	(register_timer@data_ptr+1)& (0+255),b
  1053  0024AA  ECED  F00C         	call	_register_timer	;wreg free
  1054  0024AE  0100               	movlb	0	; () banked
  1055  0024B0  6F64               	movwf	(_task_id+4)& (0+255),b
  1056  0024B2                     
  1057                           ; BSR set to: 0
  1058                           ;main.c: 166:     LCDPrint(0, 0, "LTD controller  ");
  1059  0024B2  0E00               	movlw	0
  1060  0024B4  6FA7               	movwf	LCDPrint@pos& (0+255),b
  1061  0024B6  0E12               	movlw	low STR_20
  1062  0024B8  6FA8               	movwf	LCDPrint@ptr& (0+255),b
  1063  0024BA  0E10               	movlw	high STR_20
  1064  0024BC  6FA9               	movwf	(LCDPrint@ptr+1)& (0+255),b
  1065  0024BE  0E00               	movlw	0
  1066  0024C0  EC54  F01A         	call	_LCDPrint
  1067  0024C4                     
  1068                           ;main.c: 167:     LCDPrint(1, 0, "ID: 1710364     ");
  1069  0024C4  0E00               	movlw	0
  1070  0024C6  0100               	movlb	0	; () banked
  1071  0024C8  6FA7               	movwf	LCDPrint@pos& (0+255),b
  1072  0024CA  0E01               	movlw	low STR_21
  1073  0024CC  6FA8               	movwf	LCDPrint@ptr& (0+255),b
  1074  0024CE  0E10               	movlw	high STR_21
  1075  0024D0  6FA9               	movwf	(LCDPrint@ptr+1)& (0+255),b
  1076  0024D2  0E01               	movlw	1
  1077  0024D4  EC54  F01A         	call	_LCDPrint
  1078  0024D8                     
  1079                           ;main.c: 169:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  1080  0024D8  0E15               	movlw	21
  1081  0024DA  0100               	movlb	0	; () banked
  1082  0024DC  6FC9               	movwf	(??_main+1)& (0+255),b
  1083  0024DE  0E4B               	movlw	75
  1084  0024E0  6FC8               	movwf	??_main& (0+255),b
  1085  0024E2  0EBE               	movlw	190
  1086  0024E4                     u2897:
  1087  0024E4  2EE8               	decfsz	wreg,f,c
  1088  0024E6  D7FE               	bra	u2897
  1089  0024E8  2FC8               	decfsz	??_main& (0+255),f,b
  1090  0024EA  D7FC               	bra	u2897
  1091  0024EC  2FC9               	decfsz	(??_main+1)& (0+255),f,b
  1092  0024EE  D7FA               	bra	u2897
  1093  0024F0  F000               	nop	
  1094  0024F2                     
  1095                           ;main.c: 170:     LCDPutInst(0x01);
  1096  0024F2  0E01               	movlw	1
  1097  0024F4  EC96  F01A         	call	_LCDPutInst
  1098  0024F8                     
  1099                           ;main.c: 171:     LCDPrint(0, 0, "IDLE");
  1100  0024F8  0E00               	movlw	0
  1101  0024FA  0100               	movlb	0	; () banked
  1102  0024FC  6FA7               	movwf	LCDPrint@pos& (0+255),b
  1103  0024FE  0E73               	movlw	low STR_19
  1104  002500  6FA8               	movwf	LCDPrint@ptr& (0+255),b
  1105  002502  0E10               	movlw	high STR_19
  1106  002504  6FA9               	movwf	(LCDPrint@ptr+1)& (0+255),b
  1107  002506  0E00               	movlw	0
  1108  002508  EC54  F01A         	call	_LCDPrint
  1109  00250C                     l3531:
  1110                           
  1111                           ;main.c: 173:         set_time_process();
  1112  00250C  EC5D  F010         	call	_set_time_process	;wreg free
  1113  002510                     
  1114                           ;main.c: 174:         LTD_process();
  1115  002510  ECF3  F00A         	call	_LTD_process	;wreg free
  1116  002514                     
  1117                           ;main.c: 175:         dispatch();
  1118  002514  EC78  F019         	call	_dispatch	;wreg free
  1119  002518  EF86  F012         	goto	l3531
  1120  00251C  EF07  F000         	goto	start
  1121  002520                     __end_of_main:
  1122                           	opt callstack 0
  1123                           
  1124 ;; *************** function _system_initialize *****************
  1125 ;; Defined at:
  1126 ;;		line 41 in file "mcc.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;		None
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;		None
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  1    wreg      void 
  1133 ;; Registers used:
  1134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1144 ;;Total ram usage:        0 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; Hardware stack levels required when called:    9
  1147 ;; This function calls:
  1148 ;;		_LCDInit
  1149 ;;		_interrupt_initialize
  1150 ;;		_osc_initialize
  1151 ;;		_pin_initialize
  1152 ;;		_start_timer
  1153 ;; This function is called by:
  1154 ;;		_main
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158                           	psect	text1
  1159  003722                     __ptext1:
  1160                           	opt callstack 0
  1161  003722                     _system_initialize:
  1162                           	opt callstack 21
  1163  003722                     
  1164                           ;mcc.c: 42:     osc_initialize();
  1165  003722  EC4D  F01C         	call	_osc_initialize	;wreg free
  1166                           
  1167                           ;mcc.c: 43:     pin_initialize();
  1168  003726  ECCC  F01B         	call	_pin_initialize	;wreg free
  1169  00372A                     
  1170                           ;mcc.c: 44:     interrupt_initialize();
  1171  00372A  EC50  F01C         	call	_interrupt_initialize	;wreg free
  1172  00372E                     
  1173                           ;mcc.c: 45:     LCDInit();
  1174  00372E  EC46  F019         	call	_LCDInit	;wreg free
  1175  003732                     
  1176                           ;mcc.c: 46:     humidity_value = 70;
  1177  003732  0E46               	movlw	70
  1178  003734  0100               	movlb	0	; () banked
  1179  003736  6F99               	movwf	_humidity_value& (0+255),b
  1180  003738                     
  1181                           ; BSR set to: 0
  1182                           ;mcc.c: 47:     temperature_value = 25;
  1183  003738  0E19               	movlw	25
  1184  00373A  6F98               	movwf	_temperature_value& (0+255),b
  1185  00373C                     
  1186                           ; BSR set to: 0
  1187                           ;mcc.c: 48:     start_timer(0);
  1188  00373C  0E00               	movlw	0
  1189  00373E  EC84  F018         	call	_start_timer
  1190  003742                     
  1191                           ;mcc.c: 49:     start_timer(1);
  1192  003742  0E01               	movlw	1
  1193  003744  EC84  F018         	call	_start_timer
  1194  003748  0012               	return		;funcret
  1195  00374A                     __end_of_system_initialize:
  1196                           	opt callstack 0
  1197                           
  1198 ;; *************** function _start_timer *****************
  1199 ;; Defined at:
  1200 ;;		line 83 in file "clock.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;  timer_vaddr     1    wreg     unsigned char 
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;  timer_vaddr     1   12[BANK0 ] unsigned char 
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  2  347[None  ] int 
  1207 ;; Registers used:
  1208 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1215 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1216 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1217 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1218 ;;Total ram usage:        3 bytes
  1219 ;; Hardware stack levels used:    1
  1220 ;; Hardware stack levels required when called:    8
  1221 ;; This function calls:
  1222 ;;		_initializeTaskList
  1223 ;; This function is called by:
  1224 ;;		_system_initialize
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228                           	psect	text2
  1229  003108                     __ptext2:
  1230                           	opt callstack 0
  1231  003108                     _start_timer:
  1232                           	opt callstack 21
  1233                           
  1234                           ;incstack = 0
  1235                           ;start_timer@timer_vaddr stored from wreg
  1236  003108  0100               	movlb	0	; () banked
  1237  00310A  6FA8               	movwf	start_timer@timer_vaddr& (0+255),b
  1238  00310C                     
  1239                           ;clock.c: 84:     if(timer_vaddr > 4)
  1240  00310C  0E04               	movlw	4
  1241  00310E  0100               	movlb	0	; () banked
  1242  003110  65A8               	cpfsgt	start_timer@timer_vaddr& (0+255),b
  1243  003112  EF8D  F018         	goto	u2311
  1244  003116  EF8F  F018         	goto	u2310
  1245  00311A                     u2311:
  1246  00311A  EFAD  F018         	goto	l3185
  1247  00311E                     u2310:
  1248  00311E  EFCE  F018         	goto	l522
  1249  003122                     l524:
  1250                           
  1251                           ; BSR set to: 0
  1252                           ;clock.c: 88:             INTCONbits.TMR0IE = 1;
  1253  003122  8AF2               	bsf	242,5,c	;volatile
  1254                           
  1255                           ;clock.c: 89:             INTCONbits.TMR0IF = 0;
  1256  003124  94F2               	bcf	242,2,c	;volatile
  1257  003126                     
  1258                           ; BSR set to: 0
  1259                           ;clock.c: 90:             T0CON = 0xC6;
  1260  003126  0EC6               	movlw	198
  1261  003128  6ED5               	movwf	213,c	;volatile
  1262                           
  1263                           ;clock.c: 91:             TMR0L = 100;
  1264  00312A  0E64               	movlw	100
  1265  00312C  6ED6               	movwf	214,c	;volatile
  1266                           
  1267                           ;clock.c: 92:             time_ms = 0;
  1268  00312E  0E00               	movlw	0
  1269  003130  6F84               	movwf	_time_ms& (0+255),b
  1270  003132  0E00               	movlw	0
  1271  003134  6F85               	movwf	(_time_ms+1)& (0+255),b
  1272  003136  0E00               	movlw	0
  1273  003138  6F86               	movwf	(_time_ms+2)& (0+255),b
  1274  00313A  0E00               	movlw	0
  1275  00313C  6F87               	movwf	(_time_ms+3)& (0+255),b
  1276                           
  1277                           ;clock.c: 93:             break;
  1278  00313E  EFCE  F018         	goto	l522
  1279  003142                     l3171:
  1280                           
  1281                           ; BSR set to: 0
  1282                           ;clock.c: 95:             initializeTaskList();
  1283  003142  ECCB  F014         	call	_initializeTaskList	;wreg free
  1284  003146                     
  1285                           ;clock.c: 96:             PIE1bits.TMR1IE = 1;
  1286  003146  809D               	bsf	157,0,c	;volatile
  1287  003148                     
  1288                           ;clock.c: 97:             PIR1bits.TMR1IF = 0;
  1289  003148  909E               	bcf	158,0,c	;volatile
  1290  00314A                     
  1291                           ;clock.c: 98:             T1CON = 0b10000001;
  1292  00314A  0E81               	movlw	129
  1293  00314C  6ECD               	movwf	205,c	;volatile
  1294  00314E                     
  1295                           ;clock.c: 99:             TMR1H = 0xB1;
  1296  00314E  0EB1               	movlw	177
  1297  003150  6ECF               	movwf	207,c	;volatile
  1298  003152                     
  1299                           ;clock.c: 100:             TMR1L = 0xE0;
  1300  003152  0EE0               	movlw	224
  1301  003154  6ECE               	movwf	206,c	;volatile
  1302                           
  1303                           ;clock.c: 101:             break;
  1304  003156  EFCE  F018         	goto	l522
  1305  00315A                     l3185:
  1306                           
  1307                           ; BSR set to: 0
  1308  00315A  51A8               	movf	start_timer@timer_vaddr& (0+255),w,b
  1309  00315C  6FA6               	movwf	??_start_timer& (0+255),b
  1310  00315E  6BA7               	clrf	(??_start_timer+1)& (0+255),b
  1311                           
  1312                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1313                           ; Switch size 1, requested type "simple"
  1314                           ; Number of cases is 1, Range of values is 0 to 0
  1315                           ; switch strategies available:
  1316                           ; Name         Instructions Cycles
  1317                           ; simple_byte            4     3 (average)
  1318                           ;	Chosen strategy is simple_byte
  1319  003160  51A7               	movf	(??_start_timer+1)& (0+255),w,b
  1320  003162  0A00               	xorlw	0	; case 0
  1321  003164  B4D8               	btfsc	status,2,c
  1322  003166  EFB7  F018         	goto	l3787
  1323  00316A  EFCE  F018         	goto	l522
  1324  00316E                     l3787:
  1325                           
  1326                           ; BSR set to: 0
  1327                           ; Switch size 1, requested type "simple"
  1328                           ; Number of cases is 5, Range of values is 0 to 4
  1329                           ; switch strategies available:
  1330                           ; Name         Instructions Cycles
  1331                           ; simple_byte           16     9 (average)
  1332                           ;	Chosen strategy is simple_byte
  1333  00316E  51A6               	movf	??_start_timer& (0+255),w,b
  1334  003170  0A00               	xorlw	0	; case 0
  1335  003172  B4D8               	btfsc	status,2,c
  1336  003174  EF91  F018         	goto	l524
  1337  003178  0A01               	xorlw	1	; case 1
  1338  00317A  B4D8               	btfsc	status,2,c
  1339  00317C  EFA1  F018         	goto	l3171
  1340  003180  0A03               	xorlw	3	; case 2
  1341  003182  B4D8               	btfsc	status,2,c
  1342  003184  EFCE  F018         	goto	l522
  1343  003188  0A01               	xorlw	1	; case 3
  1344  00318A  B4D8               	btfsc	status,2,c
  1345  00318C  EFCE  F018         	goto	l522
  1346  003190  0A07               	xorlw	7	; case 4
  1347  003192  B4D8               	btfsc	status,2,c
  1348  003194  EFCE  F018         	goto	l522
  1349  003198  EFCE  F018         	goto	l522
  1350  00319C                     l522:
  1351  00319C  0012               	return		;funcret
  1352  00319E                     __end_of_start_timer:
  1353                           	opt callstack 0
  1354                           
  1355 ;; *************** function _initializeTaskList *****************
  1356 ;; Defined at:
  1357 ;;		line 60 in file "clock.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;		None
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;  i               2    8[BANK0 ] int 
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  1    wreg      void 
  1364 ;; Registers used:
  1365 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1372 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1374 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1375 ;;Total ram usage:        2 bytes
  1376 ;; Hardware stack levels used:    1
  1377 ;; Hardware stack levels required when called:    7
  1378 ;; This function calls:
  1379 ;;		___wmul
  1380 ;;		_queueInitialize
  1381 ;; This function is called by:
  1382 ;;		_start_timer
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386                           	psect	text3
  1387  002996                     __ptext3:
  1388                           	opt callstack 0
  1389  002996                     _initializeTaskList:
  1390                           	opt callstack 21
  1391  002996                     
  1392                           ;clock.c: 61:     queueInitialize();
  1393  002996  ECCF  F018         	call	_queueInitialize	;wreg free
  1394  00299A                     
  1395                           ;clock.c: 62:     for(int i = 0; i < 20; i++) {
  1396  00299A  0E00               	movlw	0
  1397  00299C  0100               	movlb	0	; () banked
  1398  00299E  6FA5               	movwf	(initializeTaskList@i+1)& (0+255),b
  1399  0029A0  0E00               	movlw	0
  1400  0029A2  6FA4               	movwf	initializeTaskList@i& (0+255),b
  1401  0029A4                     l2823:
  1402                           
  1403                           ; BSR set to: 0
  1404                           ;clock.c: 63:         task_list[i].delay_t = 0;
  1405  0029A4  C0A4  F09C         	movff	initializeTaskList@i,___wmul@multiplier
  1406  0029A8  C0A5  F09D         	movff	initializeTaskList@i+1,___wmul@multiplier+1
  1407  0029AC  0E00               	movlw	0
  1408  0029AE  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1409  0029B0  0E0F               	movlw	15
  1410  0029B2  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  1411  0029B4  ECA5  F01B         	call	___wmul	;wreg free
  1412  0029B8  0E64               	movlw	low _task_list
  1413  0029BA  0100               	movlb	0	; () banked
  1414  0029BC  259C               	addwf	?___wmul& (0+255),w,b
  1415  0029BE  6ED9               	movwf	fsr2l,c
  1416  0029C0  0E01               	movlw	high _task_list
  1417  0029C2  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  1418  0029C4  6EDA               	movwf	fsr2h,c
  1419  0029C6  6ADE               	clrf	postinc2,c
  1420  0029C8  6ADE               	clrf	postinc2,c
  1421  0029CA  6ADE               	clrf	postinc2,c
  1422  0029CC  6ADD               	clrf	postdec2,c
  1423                           
  1424                           ;clock.c: 64:         task_list[i].period_t = 0;
  1425  0029CE  C0A4  F09C         	movff	initializeTaskList@i,___wmul@multiplier
  1426  0029D2  C0A5  F09D         	movff	initializeTaskList@i+1,___wmul@multiplier+1
  1427  0029D6  0E00               	movlw	0
  1428  0029D8  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1429  0029DA  0E0F               	movlw	15
  1430  0029DC  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  1431  0029DE  ECA5  F01B         	call	___wmul	;wreg free
  1432  0029E2  0E68               	movlw	low (_task_list+4)
  1433  0029E4  0100               	movlb	0	; () banked
  1434  0029E6  259C               	addwf	?___wmul& (0+255),w,b
  1435  0029E8  6ED9               	movwf	fsr2l,c
  1436  0029EA  0E01               	movlw	high (_task_list+4)
  1437  0029EC  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  1438  0029EE  6EDA               	movwf	fsr2h,c
  1439  0029F0  6ADE               	clrf	postinc2,c
  1440  0029F2  6ADE               	clrf	postinc2,c
  1441  0029F4  6ADE               	clrf	postinc2,c
  1442  0029F6  6ADD               	clrf	postdec2,c
  1443                           
  1444                           ;clock.c: 65:         task_list[i].func_ptr = ((void*)0);
  1445  0029F8  C0A4  F09C         	movff	initializeTaskList@i,___wmul@multiplier
  1446  0029FC  C0A5  F09D         	movff	initializeTaskList@i+1,___wmul@multiplier+1
  1447  002A00  0E00               	movlw	0
  1448  002A02  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1449  002A04  0E0F               	movlw	15
  1450  002A06  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  1451  002A08  ECA5  F01B         	call	___wmul	;wreg free
  1452  002A0C  0E6C               	movlw	low (_task_list+8)
  1453  002A0E  0100               	movlb	0	; () banked
  1454  002A10  259C               	addwf	?___wmul& (0+255),w,b
  1455  002A12  6ED9               	movwf	fsr2l,c
  1456  002A14  0E01               	movlw	high (_task_list+8)
  1457  002A16  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  1458  002A18  6EDA               	movwf	fsr2h,c
  1459  002A1A  0E00               	movlw	0
  1460  002A1C  6EDE               	movwf	postinc2,c
  1461  002A1E  0E00               	movlw	0
  1462  002A20  6EDE               	movwf	postinc2,c
  1463  002A22  0E00               	movlw	0
  1464  002A24  6EDE               	movwf	postinc2,c
  1465                           
  1466                           ;clock.c: 66:         task_list[i].data_p = ((void*)0);
  1467  002A26  C0A4  F09C         	movff	initializeTaskList@i,___wmul@multiplier
  1468  002A2A  C0A5  F09D         	movff	initializeTaskList@i+1,___wmul@multiplier+1
  1469  002A2E  0E00               	movlw	0
  1470  002A30  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1471  002A32  0E0F               	movlw	15
  1472  002A34  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  1473  002A36  ECA5  F01B         	call	___wmul	;wreg free
  1474  002A3A  0E71               	movlw	low (_task_list+13)
  1475  002A3C  0100               	movlb	0	; () banked
  1476  002A3E  259C               	addwf	?___wmul& (0+255),w,b
  1477  002A40  6ED9               	movwf	fsr2l,c
  1478  002A42  0E01               	movlw	high (_task_list+13)
  1479  002A44  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  1480  002A46  6EDA               	movwf	fsr2h,c
  1481  002A48  0E00               	movlw	0
  1482  002A4A  6EDE               	movwf	postinc2,c
  1483  002A4C  0E00               	movlw	0
  1484  002A4E  6EDD               	movwf	postdec2,c
  1485                           
  1486                           ;clock.c: 67:         task_list[i].next = 105;
  1487  002A50  C0A4  F09C         	movff	initializeTaskList@i,___wmul@multiplier
  1488  002A54  C0A5  F09D         	movff	initializeTaskList@i+1,___wmul@multiplier+1
  1489  002A58  0E00               	movlw	0
  1490  002A5A  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1491  002A5C  0E0F               	movlw	15
  1492  002A5E  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  1493  002A60  ECA5  F01B         	call	___wmul	;wreg free
  1494  002A64  0E6F               	movlw	low (_task_list+11)
  1495  002A66  0100               	movlb	0	; () banked
  1496  002A68  259C               	addwf	?___wmul& (0+255),w,b
  1497  002A6A  6ED9               	movwf	fsr2l,c
  1498  002A6C  0E01               	movlw	high (_task_list+11)
  1499  002A6E  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  1500  002A70  6EDA               	movwf	fsr2h,c
  1501  002A72  0E69               	movlw	105
  1502  002A74  6EDE               	movwf	postinc2,c
  1503  002A76  0E00               	movlw	0
  1504  002A78  6EDD               	movwf	postdec2,c
  1505  002A7A                     
  1506                           ; BSR set to: 0
  1507                           ;clock.c: 68:     }
  1508  002A7A  4BA4               	infsnz	initializeTaskList@i& (0+255),f,b
  1509  002A7C  2BA5               	incf	(initializeTaskList@i+1)& (0+255),f,b
  1510  002A7E                     
  1511                           ; BSR set to: 0
  1512  002A7E  BFA5               	btfsc	(initializeTaskList@i+1)& (0+255),7,b
  1513  002A80  EF4B  F015         	goto	u1821
  1514  002A84  51A5               	movf	(initializeTaskList@i+1)& (0+255),w,b
  1515  002A86  E109               	bnz	u1820
  1516  002A88  0E14               	movlw	20
  1517  002A8A  5DA4               	subwf	initializeTaskList@i& (0+255),w,b
  1518  002A8C  A0D8               	btfss	status,0,c
  1519  002A8E  EF4B  F015         	goto	u1821
  1520  002A92  EF4D  F015         	goto	u1820
  1521  002A96                     u1821:
  1522  002A96  EFD2  F014         	goto	l2823
  1523  002A9A                     u1820:
  1524  002A9A                     
  1525                           ; BSR set to: 0
  1526                           ;clock.c: 69:     num_task = 0;
  1527  002A9A  0E00               	movlw	0
  1528  002A9C  6F91               	movwf	_num_task& (0+255),b
  1529                           
  1530                           ;clock.c: 70:     head = 105;
  1531  002A9E  0E69               	movlw	105
  1532  002AA0  6F90               	movwf	_head& (0+255),b
  1533  002AA2                     
  1534                           ; BSR set to: 0
  1535  002AA2  0012               	return		;funcret
  1536  002AA4                     __end_of_initializeTaskList:
  1537                           	opt callstack 0
  1538                           
  1539 ;; *************** function _queueInitialize *****************
  1540 ;; Defined at:
  1541 ;;		line 8 in file "clock.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;		None
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  i               2    6[BANK0 ] int 
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      void 
  1548 ;; Registers used:
  1549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1556 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1558 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1559 ;;Total ram usage:        2 bytes
  1560 ;; Hardware stack levels used:    1
  1561 ;; Hardware stack levels required when called:    6
  1562 ;; This function calls:
  1563 ;;		___wmul
  1564 ;; This function is called by:
  1565 ;;		_initializeTaskList
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           	psect	text4
  1570  00319E                     __ptext4:
  1571                           	opt callstack 0
  1572  00319E                     _queueInitialize:
  1573                           	opt callstack 21
  1574  00319E                     
  1575                           ;clock.c: 9:     for(int i = 0; i< 20; i++) {
  1576  00319E  0E00               	movlw	0
  1577  0031A0  0100               	movlb	0	; () banked
  1578  0031A2  6FA3               	movwf	(queueInitialize@i+1)& (0+255),b
  1579  0031A4  0E00               	movlw	0
  1580  0031A6  6FA2               	movwf	queueInitialize@i& (0+255),b
  1581  0031A8                     l2663:
  1582                           
  1583                           ; BSR set to: 0
  1584                           ;clock.c: 10:         ready_queue[i].data_p = ((void*)0);
  1585  0031A8  C0A2  F09C         	movff	queueInitialize@i,___wmul@multiplier
  1586  0031AC  C0A3  F09D         	movff	queueInitialize@i+1,___wmul@multiplier+1
  1587  0031B0  0E00               	movlw	0
  1588  0031B2  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1589  0031B4  0E05               	movlw	5
  1590  0031B6  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  1591  0031B8  ECA5  F01B         	call	___wmul	;wreg free
  1592  0031BC  0E03               	movlw	low (_ready_queue+3)
  1593  0031BE  0100               	movlb	0	; () banked
  1594  0031C0  259C               	addwf	?___wmul& (0+255),w,b
  1595  0031C2  6ED9               	movwf	fsr2l,c
  1596  0031C4  0E01               	movlw	high (_ready_queue+3)
  1597  0031C6  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  1598  0031C8  6EDA               	movwf	fsr2h,c
  1599  0031CA  0E00               	movlw	0
  1600  0031CC  6EDE               	movwf	postinc2,c
  1601  0031CE  0E00               	movlw	0
  1602  0031D0  6EDD               	movwf	postdec2,c
  1603                           
  1604                           ;clock.c: 11:         ready_queue[i].func_ptr = ((void*)0);
  1605  0031D2  C0A2  F09C         	movff	queueInitialize@i,___wmul@multiplier
  1606  0031D6  C0A3  F09D         	movff	queueInitialize@i+1,___wmul@multiplier+1
  1607  0031DA  0E00               	movlw	0
  1608  0031DC  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1609  0031DE  0E05               	movlw	5
  1610  0031E0  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  1611  0031E2  ECA5  F01B         	call	___wmul	;wreg free
  1612  0031E6  0E00               	movlw	low _ready_queue
  1613  0031E8  0100               	movlb	0	; () banked
  1614  0031EA  259C               	addwf	?___wmul& (0+255),w,b
  1615  0031EC  6ED9               	movwf	fsr2l,c
  1616  0031EE  0E01               	movlw	high _ready_queue
  1617  0031F0  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  1618  0031F2  6EDA               	movwf	fsr2h,c
  1619  0031F4  0E00               	movlw	0
  1620  0031F6  6EDE               	movwf	postinc2,c
  1621  0031F8  0E00               	movlw	0
  1622  0031FA  6EDE               	movwf	postinc2,c
  1623  0031FC  0E00               	movlw	0
  1624  0031FE  6EDE               	movwf	postinc2,c
  1625  003200                     
  1626                           ; BSR set to: 0
  1627                           ;clock.c: 12:     }
  1628  003200  4BA2               	infsnz	queueInitialize@i& (0+255),f,b
  1629  003202  2BA3               	incf	(queueInitialize@i+1)& (0+255),f,b
  1630  003204                     
  1631                           ; BSR set to: 0
  1632  003204  BFA3               	btfsc	(queueInitialize@i+1)& (0+255),7,b
  1633  003206  EF0E  F019         	goto	u1561
  1634  00320A  51A3               	movf	(queueInitialize@i+1)& (0+255),w,b
  1635  00320C  E109               	bnz	u1560
  1636  00320E  0E14               	movlw	20
  1637  003210  5DA2               	subwf	queueInitialize@i& (0+255),w,b
  1638  003212  A0D8               	btfss	status,0,c
  1639  003214  EF0E  F019         	goto	u1561
  1640  003218  EF10  F019         	goto	u1560
  1641  00321C                     u1561:
  1642  00321C  EFD4  F018         	goto	l2663
  1643  003220                     u1560:
  1644  003220                     
  1645                           ; BSR set to: 0
  1646  003220  0012               	return		;funcret
  1647  003222                     __end_of_queueInitialize:
  1648                           	opt callstack 0
  1649                           
  1650 ;; *************** function _pin_initialize *****************
  1651 ;; Defined at:
  1652 ;;		line 7 in file "mcc.c"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;		None
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;		None
  1657 ;; Return value:  Size  Location     Type
  1658 ;;                  1    wreg      void 
  1659 ;; Registers used:
  1660 ;;		wreg, status,2
  1661 ;; Tracked objects:
  1662 ;;		On entry : 0/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1670 ;;Total ram usage:        0 bytes
  1671 ;; Hardware stack levels used:    1
  1672 ;; Hardware stack levels required when called:    5
  1673 ;; This function calls:
  1674 ;;		Nothing
  1675 ;; This function is called by:
  1676 ;;		_system_initialize
  1677 ;; This function uses a non-reentrant model
  1678 ;;
  1679                           
  1680                           	psect	text5
  1681  003798                     __ptext5:
  1682                           	opt callstack 0
  1683  003798                     _pin_initialize:
  1684                           	opt callstack 24
  1685  003798                     
  1686                           ;mcc.c: 8:     LATC = 0x00;
  1687  003798  0E00               	movlw	0
  1688  00379A  6E8B               	movwf	139,c	;volatile
  1689                           
  1690                           ;mcc.c: 9:     TRISC = 0xD7;
  1691  00379C  0ED7               	movlw	215
  1692  00379E  6E94               	movwf	148,c	;volatile
  1693                           
  1694                           ;mcc.c: 10:     ADCON1 = 0b00001111;
  1695  0037A0  0E0F               	movlw	15
  1696  0037A2  6EC1               	movwf	193,c	;volatile
  1697                           
  1698                           ;mcc.c: 12:     LATA = 0x00;
  1699  0037A4  0E00               	movlw	0
  1700  0037A6  6E89               	movwf	137,c	;volatile
  1701                           
  1702                           ;mcc.c: 13:     TRISA = 0xF3;
  1703  0037A8  0EF3               	movlw	243
  1704  0037AA  6E92               	movwf	146,c	;volatile
  1705                           
  1706                           ;mcc.c: 16:     LATB = 0x00;
  1707  0037AC  0E00               	movlw	0
  1708  0037AE  6E8A               	movwf	138,c	;volatile
  1709  0037B0                     
  1710                           ;mcc.c: 17:     TRISB = 0xFF;
  1711  0037B0  6893               	setf	147,c	;volatile
  1712                           
  1713                           ;mcc.c: 20:     LATD = 0x00;
  1714  0037B2  0E00               	movlw	0
  1715  0037B4  6E8C               	movwf	140,c	;volatile
  1716                           
  1717                           ;mcc.c: 21:     TRISD = 0x00;
  1718  0037B6  0E00               	movlw	0
  1719  0037B8  6E95               	movwf	149,c	;volatile
  1720  0037BA  0012               	return		;funcret
  1721  0037BC                     __end_of_pin_initialize:
  1722                           	opt callstack 0
  1723                           
  1724 ;; *************** function _osc_initialize *****************
  1725 ;; Defined at:
  1726 ;;		line 3 in file "mcc.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;		None
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;		None
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  1    wreg      void 
  1733 ;; Registers used:
  1734 ;;		wreg, status,2
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1744 ;;Total ram usage:        0 bytes
  1745 ;; Hardware stack levels used:    1
  1746 ;; Hardware stack levels required when called:    5
  1747 ;; This function calls:
  1748 ;;		Nothing
  1749 ;; This function is called by:
  1750 ;;		_system_initialize
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754                           	psect	text6
  1755  00389A                     __ptext6:
  1756                           	opt callstack 0
  1757  00389A                     _osc_initialize:
  1758                           	opt callstack 24
  1759  00389A                     
  1760                           ;mcc.c: 4:     OSCCON = 0x70;
  1761  00389A  0E70               	movlw	112
  1762  00389C  6ED3               	movwf	211,c	;volatile
  1763  00389E  0012               	return		;funcret
  1764  0038A0                     __end_of_osc_initialize:
  1765                           	opt callstack 0
  1766                           
  1767 ;; *************** function _interrupt_initialize *****************
  1768 ;; Defined at:
  1769 ;;		line 35 in file "mcc.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;		None
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;		None
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  1    wreg      void 
  1776 ;; Registers used:
  1777 ;;		None
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1787 ;;Total ram usage:        0 bytes
  1788 ;; Hardware stack levels used:    1
  1789 ;; Hardware stack levels required when called:    5
  1790 ;; This function calls:
  1791 ;;		Nothing
  1792 ;; This function is called by:
  1793 ;;		_system_initialize
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           	psect	text7
  1798  0038A0                     __ptext7:
  1799                           	opt callstack 0
  1800  0038A0                     _interrupt_initialize:
  1801                           	opt callstack 24
  1802  0038A0                     
  1803                           ;mcc.c: 36:     INTCONbits.GIE = 1;
  1804  0038A0  8EF2               	bsf	242,7,c	;volatile
  1805                           
  1806                           ;mcc.c: 37:     INTCONbits.PEIE = 1;
  1807  0038A2  8CF2               	bsf	242,6,c	;volatile
  1808  0038A4  0012               	return		;funcret
  1809  0038A6                     __end_of_interrupt_initialize:
  1810                           	opt callstack 0
  1811                           
  1812 ;; *************** function _LCDInit *****************
  1813 ;; Defined at:
  1814 ;;		line 45 in file "lcd.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;		None
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;		None
  1819 ;; Return value:  Size  Location     Type
  1820 ;;                  1    wreg      void 
  1821 ;; Registers used:
  1822 ;;		wreg, status,2, status,0, cstack
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1830 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1831 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1832 ;;Total ram usage:        1 bytes
  1833 ;; Hardware stack levels used:    1
  1834 ;; Hardware stack levels required when called:    8
  1835 ;; This function calls:
  1836 ;;		_InitBBSPI
  1837 ;;		_LCDPutInst
  1838 ;;		_Port_BBSPIInit
  1839 ;;		_WritePort_BBSPI
  1840 ;; This function is called by:
  1841 ;;		_system_initialize
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           
  1845                           	psect	text8
  1846  00328C                     __ptext8:
  1847                           	opt callstack 0
  1848  00328C                     _LCDInit:
  1849                           	opt callstack 21
  1850  00328C                     
  1851                           ;lcd.c: 47:     InitBBSPI();
  1852  00328C  EC30  F01C         	call	_InitBBSPI	;wreg free
  1853  003290                     
  1854                           ;lcd.c: 48:     TRISFbits.TRISF6 = 0;
  1855  003290  9C97               	bcf	151,6,c	;volatile
  1856  003292                     
  1857                           ;lcd.c: 49:     LATFbits.LATF6 = 0;
  1858  003292  9C8E               	bcf	142,6,c	;volatile
  1859  003294                     
  1860                           ;lcd.c: 50:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1861  003294  0E0D               	movlw	13
  1862  003296  0100               	movlb	0	; () banked
  1863  003298  6FA2               	movwf	??_LCDInit& (0+255),b
  1864  00329A  0EFB               	movlw	251
  1865  00329C                     u2907:
  1866  00329C  2EE8               	decfsz	wreg,f,c
  1867  00329E  D7FE               	bra	u2907
  1868  0032A0  2FA2               	decfsz	??_LCDInit& (0+255),f,b
  1869  0032A2  D7FC               	bra	u2907
  1870  0032A4  D000               	nop2	
  1871  0032A6                     
  1872                           ;lcd.c: 51:     LATFbits.LATF6 = 1;
  1873  0032A6  8C8E               	bsf	142,6,c	;volatile
  1874  0032A8                     
  1875                           ;lcd.c: 52:     Port_BBSPIInit (0x00);
  1876  0032A8  0E00               	movlw	0
  1877  0032AA  ECEE  F01B         	call	_Port_BBSPIInit
  1878  0032AE                     
  1879                           ;lcd.c: 53:     Port_BBSPIInit (0x01);
  1880  0032AE  0E01               	movlw	1
  1881  0032B0  ECEE  F01B         	call	_Port_BBSPIInit
  1882  0032B4                     
  1883                           ;lcd.c: 54:     WritePort_BBSPI (0x12, 0);
  1884  0032B4  0E00               	movlw	0
  1885  0032B6  0100               	movlb	0	; () banked
  1886  0032B8  6F9F               	movwf	WritePort_BBSPI@a& (0+255),b
  1887  0032BA  0E12               	movlw	18
  1888  0032BC  ECDE  F01B         	call	_WritePort_BBSPI
  1889  0032C0                     
  1890                           ;lcd.c: 55:     _delay((unsigned long)((15)*(8000000/4000.0)));
  1891  0032C0  0E27               	movlw	39
  1892  0032C2  0100               	movlb	0	; () banked
  1893  0032C4  6FA2               	movwf	??_LCDInit& (0+255),b
  1894  0032C6  0EF5               	movlw	245
  1895  0032C8                     u2917:
  1896  0032C8  2EE8               	decfsz	wreg,f,c
  1897  0032CA  D7FE               	bra	u2917
  1898  0032CC  2FA2               	decfsz	??_LCDInit& (0+255),f,b
  1899  0032CE  D7FC               	bra	u2917
  1900  0032D0                     
  1901                           ;lcd.c: 56:     LCDPutInst(0x32);
  1902  0032D0  0E32               	movlw	50
  1903  0032D2  EC96  F01A         	call	_LCDPutInst
  1904  0032D6                     
  1905                           ;lcd.c: 57:     LCDPutInst(0x3C);
  1906  0032D6  0E3C               	movlw	60
  1907  0032D8  EC96  F01A         	call	_LCDPutInst
  1908  0032DC                     
  1909                           ;lcd.c: 58:     LCDPutInst(0x0C);
  1910  0032DC  0E0C               	movlw	12
  1911  0032DE  EC96  F01A         	call	_LCDPutInst
  1912  0032E2                     
  1913                           ;lcd.c: 59:     LCDPutInst(0x01);
  1914  0032E2  0E01               	movlw	1
  1915  0032E4  EC96  F01A         	call	_LCDPutInst
  1916  0032E8                     
  1917                           ;lcd.c: 60:     LCDPutInst(0x06);
  1918  0032E8  0E06               	movlw	6
  1919  0032EA  EC96  F01A         	call	_LCDPutInst
  1920  0032EE  0012               	return		;funcret
  1921  0032F0                     __end_of_LCDInit:
  1922                           	opt callstack 0
  1923                           
  1924 ;; *************** function _Port_BBSPIInit *****************
  1925 ;; Defined at:
  1926 ;;		line 123 in file "lcd.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;  port_dir        1    wreg     unsigned char 
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;  port_dir        1    3[BANK0 ] unsigned char 
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  1    wreg      void 
  1933 ;; Registers used:
  1934 ;;		wreg, status,2, status,0, cstack
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1941 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1943 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1944 ;;Total ram usage:        1 bytes
  1945 ;; Hardware stack levels used:    1
  1946 ;; Hardware stack levels required when called:    6
  1947 ;; This function calls:
  1948 ;;		_SendByteBBSPI
  1949 ;; This function is called by:
  1950 ;;		_LCDInit
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           	psect	text9
  1955  0037DC                     __ptext9:
  1956                           	opt callstack 0
  1957  0037DC                     _Port_BBSPIInit:
  1958                           	opt callstack 22
  1959                           
  1960                           ;incstack = 0
  1961                           ;Port_BBSPIInit@port_dir stored from wreg
  1962  0037DC  0100               	movlb	0	; () banked
  1963  0037DE  6F9F               	movwf	Port_BBSPIInit@port_dir& (0+255),b
  1964  0037E0                     
  1965                           ;lcd.c: 123: void Port_BBSPIInit (unsigned char port_dir);lcd.c: 124: {;lcd.c: 128:     
      +                          LATAbits.LATA2 = 0;
  1966  0037E0  9489               	bcf	137,2,c	;volatile
  1967  0037E2                     
  1968                           ;lcd.c: 129:     SendByteBBSPI(0x40);
  1969  0037E2  0E40               	movlw	64
  1970  0037E4  EC11  F019         	call	_SendByteBBSPI
  1971                           
  1972                           ;lcd.c: 130:     SendByteBBSPI(port_dir);
  1973  0037E8  0100               	movlb	0	; () banked
  1974  0037EA  519F               	movf	Port_BBSPIInit@port_dir& (0+255),w,b
  1975  0037EC  EC11  F019         	call	_SendByteBBSPI
  1976                           
  1977                           ;lcd.c: 131:     SendByteBBSPI(0x00);
  1978  0037F0  0E00               	movlw	0
  1979  0037F2  EC11  F019         	call	_SendByteBBSPI
  1980  0037F6                     
  1981                           ;lcd.c: 132:     LATAbits.LATA2 = 1;
  1982  0037F6  8489               	bsf	137,2,c	;volatile
  1983  0037F8  0012               	return		;funcret
  1984  0037FA                     __end_of_Port_BBSPIInit:
  1985                           	opt callstack 0
  1986                           
  1987 ;; *************** function _InitBBSPI *****************
  1988 ;; Defined at:
  1989 ;;		line 70 in file "lcd.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;		None
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;		None
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  1    wreg      void 
  1996 ;; Registers used:
  1997 ;;		None
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2007 ;;Total ram usage:        0 bytes
  2008 ;; Hardware stack levels used:    1
  2009 ;; Hardware stack levels required when called:    5
  2010 ;; This function calls:
  2011 ;;		Nothing
  2012 ;; This function is called by:
  2013 ;;		_LCDInit
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           	psect	text10
  2018  003860                     __ptext10:
  2019                           	opt callstack 0
  2020  003860                     _InitBBSPI:
  2021                           	opt callstack 23
  2022  003860                     
  2023                           ;lcd.c: 72:     TRISAbits.TRISA2 = 0;
  2024  003860  9492               	bcf	146,2,c	;volatile
  2025                           
  2026                           ;lcd.c: 73:     TRISCbits.TRISC4 = 1;
  2027  003862  8894               	bsf	148,4,c	;volatile
  2028                           
  2029                           ;lcd.c: 74:     TRISCbits.TRISC5 = 0;
  2030  003864  9A94               	bcf	148,5,c	;volatile
  2031                           
  2032                           ;lcd.c: 75:     TRISCbits.TRISC3 = 0;
  2033  003866  9694               	bcf	148,3,c	;volatile
  2034                           
  2035                           ;lcd.c: 77:     LATAbits.LATA2 = 1;
  2036  003868  8489               	bsf	137,2,c	;volatile
  2037                           
  2038                           ;lcd.c: 78:     LATCbits.LATC4 = 1;
  2039  00386A  888B               	bsf	139,4,c	;volatile
  2040                           
  2041                           ;lcd.c: 79:     LATCbits.LATC5 = 0;
  2042  00386C  9A8B               	bcf	139,5,c	;volatile
  2043                           
  2044                           ;lcd.c: 80:     LATCbits.LATC3 = 0;
  2045  00386E  968B               	bcf	139,3,c	;volatile
  2046  003870  0012               	return		;funcret
  2047  003872                     __end_of_InitBBSPI:
  2048                           	opt callstack 0
  2049                           
  2050 ;; *************** function _set_time_process *****************
  2051 ;; Defined at:
  2052 ;;		line 27 in file "main.c"
  2053 ;; Parameters:    Size  Location     Type
  2054 ;;		None
  2055 ;; Auto vars:     Size  Location     Type
  2056 ;;  temp            2   42[BANK0 ] int 
  2057 ;;  temp            2   40[BANK0 ] int 
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  1    wreg      void 
  2060 ;; Registers used:
  2061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2068 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2069 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2070 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2071 ;;Total ram usage:        6 bytes
  2072 ;; Hardware stack levels used:    1
  2073 ;; Hardware stack levels required when called:   10
  2074 ;; This function calls:
  2075 ;;		_LCDPrint
  2076 ;;		_LCDPrintChar
  2077 ;;		_LCDPutInst
  2078 ;;		___awdiv
  2079 ;;		___awmod
  2080 ;;		_register_timer
  2081 ;;		_remove_timer
  2082 ;; This function is called by:
  2083 ;;		_main
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           	psect	text11
  2088  0020BA                     __ptext11:
  2089                           	opt callstack 0
  2090  0020BA                     _set_time_process:
  2091                           	opt callstack 20
  2092  0020BA                     
  2093                           ;main.c: 28:     switch(state_settime) {
  2094  0020BA  EFA4  F011         	goto	l3341
  2095  0020BE                     l3279:
  2096                           
  2097                           ; BSR set to: 0
  2098                           ;main.c: 30:             if(RB0_pressed) {
  2099  0020BE  519A               	movf	_RB0_pressed& (0+255),w,b
  2100  0020C0  B4D8               	btfsc	status,2,c
  2101  0020C2  EF65  F010         	goto	u2511
  2102  0020C6  EF67  F010         	goto	u2510
  2103  0020CA                     u2511:
  2104  0020CA  EFBE  F011         	goto	l89
  2105  0020CE                     u2510:
  2106  0020CE                     
  2107                           ; BSR set to: 0
  2108                           ;main.c: 31:                 RB0_pressed = 0;
  2109  0020CE  0E00               	movlw	0
  2110  0020D0  6F9A               	movwf	_RB0_pressed& (0+255),b
  2111                           
  2112                           ;main.c: 32:                 isSet = 1;
  2113  0020D2  0E01               	movlw	1
  2114  0020D4  6F94               	movwf	_isSet& (0+255),b
  2115                           
  2116                           ;main.c: 33:                 state_settime = 1;
  2117  0020D6  0E01               	movlw	1
  2118  0020D8  6F96               	movwf	_state_settime& (0+255),b	;volatile
  2119  0020DA                     
  2120                           ; BSR set to: 0
  2121                           ;main.c: 34:                 LCDPutInst(0x01);
  2122  0020DA  0E01               	movlw	1
  2123  0020DC  EC96  F01A         	call	_LCDPutInst
  2124  0020E0                     
  2125                           ;main.c: 35:                 LCDPrint(0, 0, "Set time");
  2126  0020E0  0E00               	movlw	0
  2127  0020E2  0100               	movlb	0	; () banked
  2128  0020E4  6FA7               	movwf	LCDPrint@pos& (0+255),b
  2129  0020E6  0E5C               	movlw	low STR_1
  2130  0020E8  6FA8               	movwf	LCDPrint@ptr& (0+255),b
  2131  0020EA  0E10               	movlw	high STR_1
  2132  0020EC  6FA9               	movwf	(LCDPrint@ptr+1)& (0+255),b
  2133  0020EE  0E00               	movlw	0
  2134  0020F0  EC54  F01A         	call	_LCDPrint
  2135  0020F4                     
  2136                           ;main.c: 36:                 int temp = period/1000;
  2137  0020F4  C0CE  F09C         	movff	_period,___awdiv@dividend
  2138  0020F8  C0CF  F09D         	movff	_period+1,___awdiv@dividend+1
  2139  0020FC  0E03               	movlw	3
  2140  0020FE  0100               	movlb	0	; () banked
  2141  002100  6F9F               	movwf	(___awdiv@divisor+1)& (0+255),b
  2142  002102  0EE8               	movlw	232
  2143  002104  6F9E               	movwf	___awdiv@divisor& (0+255),b
  2144  002106  ECC2  F015         	call	___awdiv	;wreg free
  2145  00210A  C09C  F0C4         	movff	?___awdiv,set_time_process@temp
  2146  00210E  C09D  F0C5         	movff	?___awdiv+1,set_time_process@temp+1
  2147  002112                     
  2148                           ;main.c: 37:                 LCDPrintChar(0, 10, temp / 10 + '0');
  2149  002112  0E0A               	movlw	10
  2150  002114  0100               	movlb	0	; () banked
  2151  002116  6FA7               	movwf	LCDPrintChar@pos& (0+255),b
  2152  002118  C0C4  F09C         	movff	set_time_process@temp,___awdiv@dividend
  2153  00211C  C0C5  F09D         	movff	set_time_process@temp+1,___awdiv@dividend+1
  2154  002120  0E00               	movlw	0
  2155  002122  6F9F               	movwf	(___awdiv@divisor+1)& (0+255),b
  2156  002124  0E0A               	movlw	10
  2157  002126  6F9E               	movwf	___awdiv@divisor& (0+255),b
  2158  002128  ECC2  F015         	call	___awdiv	;wreg free
  2159  00212C  0100               	movlb	0	; () banked
  2160  00212E  519C               	movf	?___awdiv& (0+255),w,b
  2161  002130  0F30               	addlw	48
  2162  002132  6FA8               	movwf	LCDPrintChar@ch& (0+255),b
  2163  002134  0E00               	movlw	0
  2164  002136  ECF7  F01A         	call	_LCDPrintChar
  2165  00213A                     
  2166                           ;main.c: 38:                 LCDPrintChar(0, 11, temp % 10 + '0');
  2167  00213A  0E0B               	movlw	11
  2168  00213C  0100               	movlb	0	; () banked
  2169  00213E  6FA7               	movwf	LCDPrintChar@pos& (0+255),b
  2170  002140  C0C4  F09C         	movff	set_time_process@temp,___awmod@dividend
  2171  002144  C0C5  F09D         	movff	set_time_process@temp+1,___awmod@dividend+1
  2172  002148  0E00               	movlw	0
  2173  00214A  6F9F               	movwf	(___awmod@divisor+1)& (0+255),b
  2174  00214C  0E0A               	movlw	10
  2175  00214E  6F9E               	movwf	___awmod@divisor& (0+255),b
  2176  002150  EC86  F016         	call	___awmod	;wreg free
  2177  002154  0100               	movlb	0	; () banked
  2178  002156  519C               	movf	?___awmod& (0+255),w,b
  2179  002158  0F30               	addlw	48
  2180  00215A  6FA8               	movwf	LCDPrintChar@ch& (0+255),b
  2181  00215C  0E00               	movlw	0
  2182  00215E  ECF7  F01A         	call	_LCDPrintChar
  2183  002162                     
  2184                           ;main.c: 39:                 LCDPrintChar(0, 12, 's');
  2185  002162  0E0C               	movlw	12
  2186  002164  0100               	movlb	0	; () banked
  2187  002166  6FA7               	movwf	LCDPrintChar@pos& (0+255),b
  2188  002168  0E73               	movlw	115
  2189  00216A  6FA8               	movwf	LCDPrintChar@ch& (0+255),b
  2190  00216C  0E00               	movlw	0
  2191  00216E  ECF7  F01A         	call	_LCDPrintChar
  2192  002172                     
  2193                           ;main.c: 40:                 _delay((unsigned long)((2000)*(8000000/4000.0)));
  2194  002172  0E15               	movlw	21
  2195  002174  0100               	movlb	0	; () banked
  2196  002176  6FC3               	movwf	(??_set_time_process+1)& (0+255),b
  2197  002178  0E4B               	movlw	75
  2198  00217A  6FC2               	movwf	??_set_time_process& (0+255),b
  2199  00217C  0EBE               	movlw	190
  2200  00217E                     u2927:
  2201  00217E  2EE8               	decfsz	wreg,f,c
  2202  002180  D7FE               	bra	u2927
  2203  002182  2FC2               	decfsz	??_set_time_process& (0+255),f,b
  2204  002184  D7FC               	bra	u2927
  2205  002186  2FC3               	decfsz	(??_set_time_process+1)& (0+255),f,b
  2206  002188  D7FA               	bra	u2927
  2207  00218A  F000               	nop	
  2208  00218C  EFBE  F011         	goto	l89
  2209  002190                     l3297:
  2210                           
  2211                           ; BSR set to: 0
  2212                           ;main.c: 44:             if(RA5_pressed) {
  2213  002190  519B               	movf	_RA5_pressed& (0+255),w,b
  2214  002192  B4D8               	btfsc	status,2,c
  2215  002194  EFCE  F010         	goto	u2521
  2216  002198  EFD0  F010         	goto	u2520
  2217  00219C                     u2521:
  2218  00219C  EF26  F011         	goto	l82
  2219  0021A0                     u2520:
  2220  0021A0                     
  2221                           ; BSR set to: 0
  2222                           ;main.c: 45:                 RA5_pressed = 0;
  2223  0021A0  0E00               	movlw	0
  2224  0021A2  6F9B               	movwf	_RA5_pressed& (0+255),b
  2225  0021A4                     
  2226                           ; BSR set to: 0
  2227                           ;main.c: 47:                 period+= 1000;
  2228  0021A4  0EE8               	movlw	232
  2229  0021A6  27CE               	addwf	_period& (0+255),f,b
  2230  0021A8  0E03               	movlw	3
  2231  0021AA  23CF               	addwfc	(_period+1)& (0+255),f,b
  2232  0021AC                     
  2233                           ; BSR set to: 0
  2234                           ;main.c: 48:                 if(period >= 20000)
  2235  0021AC  BFCF               	btfsc	(_period+1)& (0+255),7,b
  2236  0021AE  EFE2  F010         	goto	u2531
  2237  0021B2  0E20               	movlw	32
  2238  0021B4  5DCE               	subwf	_period& (0+255),w,b
  2239  0021B6  0E4E               	movlw	78
  2240  0021B8  59CF               	subwfb	(_period+1)& (0+255),w,b
  2241  0021BA  A0D8               	btfss	status,0,c
  2242  0021BC  EFE2  F010         	goto	u2531
  2243  0021C0  EFE4  F010         	goto	u2530
  2244  0021C4                     u2531:
  2245  0021C4  EFE8  F010         	goto	l3307
  2246  0021C8                     u2530:
  2247  0021C8                     
  2248                           ; BSR set to: 0
  2249                           ;main.c: 49:                     period = 1000;
  2250  0021C8  0E03               	movlw	3
  2251  0021CA  6FCF               	movwf	(_period+1)& (0+255),b
  2252  0021CC  0EE8               	movlw	232
  2253  0021CE  6FCE               	movwf	_period& (0+255),b
  2254  0021D0                     l3307:
  2255                           
  2256                           ; BSR set to: 0
  2257                           ;main.c: 50:                 int temp = period/1000;
  2258  0021D0  C0CE  F09C         	movff	_period,___awdiv@dividend
  2259  0021D4  C0CF  F09D         	movff	_period+1,___awdiv@dividend+1
  2260  0021D8  0E03               	movlw	3
  2261  0021DA  6F9F               	movwf	(___awdiv@divisor+1)& (0+255),b
  2262  0021DC  0EE8               	movlw	232
  2263  0021DE  6F9E               	movwf	___awdiv@divisor& (0+255),b
  2264  0021E0  ECC2  F015         	call	___awdiv	;wreg free
  2265  0021E4  C09C  F0C6         	movff	?___awdiv,set_time_process@temp_156
  2266  0021E8  C09D  F0C7         	movff	?___awdiv+1,set_time_process@temp_156+1
  2267  0021EC                     
  2268                           ;main.c: 51:                 LCDPrintChar(0, 10, temp / 10 + '0');
  2269  0021EC  0E0A               	movlw	10
  2270  0021EE  0100               	movlb	0	; () banked
  2271  0021F0  6FA7               	movwf	LCDPrintChar@pos& (0+255),b
  2272  0021F2  C0C6  F09C         	movff	set_time_process@temp_156,___awdiv@dividend
  2273  0021F6  C0C7  F09D         	movff	set_time_process@temp_156+1,___awdiv@dividend+1
  2274  0021FA  0E00               	movlw	0
  2275  0021FC  6F9F               	movwf	(___awdiv@divisor+1)& (0+255),b
  2276  0021FE  0E0A               	movlw	10
  2277  002200  6F9E               	movwf	___awdiv@divisor& (0+255),b
  2278  002202  ECC2  F015         	call	___awdiv	;wreg free
  2279  002206  0100               	movlb	0	; () banked
  2280  002208  519C               	movf	?___awdiv& (0+255),w,b
  2281  00220A  0F30               	addlw	48
  2282  00220C  6FA8               	movwf	LCDPrintChar@ch& (0+255),b
  2283  00220E  0E00               	movlw	0
  2284  002210  ECF7  F01A         	call	_LCDPrintChar
  2285  002214                     
  2286                           ;main.c: 52:                 LCDPrintChar(0, 11, temp % 10 + '0');
  2287  002214  0E0B               	movlw	11
  2288  002216  0100               	movlb	0	; () banked
  2289  002218  6FA7               	movwf	LCDPrintChar@pos& (0+255),b
  2290  00221A  C0C6  F09C         	movff	set_time_process@temp_156,___awmod@dividend
  2291  00221E  C0C7  F09D         	movff	set_time_process@temp_156+1,___awmod@dividend+1
  2292  002222  0E00               	movlw	0
  2293  002224  6F9F               	movwf	(___awmod@divisor+1)& (0+255),b
  2294  002226  0E0A               	movlw	10
  2295  002228  6F9E               	movwf	___awmod@divisor& (0+255),b
  2296  00222A  EC86  F016         	call	___awmod	;wreg free
  2297  00222E  0100               	movlb	0	; () banked
  2298  002230  519C               	movf	?___awmod& (0+255),w,b
  2299  002232  0F30               	addlw	48
  2300  002234  6FA8               	movwf	LCDPrintChar@ch& (0+255),b
  2301  002236  0E00               	movlw	0
  2302  002238  ECF7  F01A         	call	_LCDPrintChar
  2303  00223C                     
  2304                           ;main.c: 53:                 LCDPrintChar(0, 12, 's');
  2305  00223C  0E0C               	movlw	12
  2306  00223E  0100               	movlb	0	; () banked
  2307  002240  6FA7               	movwf	LCDPrintChar@pos& (0+255),b
  2308  002242  0E73               	movlw	115
  2309  002244  6FA8               	movwf	LCDPrintChar@ch& (0+255),b
  2310  002246  0E00               	movlw	0
  2311  002248  ECF7  F01A         	call	_LCDPrintChar
  2312  00224C                     l82:
  2313                           
  2314                           ;main.c: 55:             if(RB0_pressed) {
  2315  00224C  0100               	movlb	0	; () banked
  2316  00224E  519A               	movf	_RB0_pressed& (0+255),w,b
  2317  002250  B4D8               	btfsc	status,2,c
  2318  002252  EF2D  F011         	goto	u2541
  2319  002256  EF2F  F011         	goto	u2540
  2320  00225A                     u2541:
  2321  00225A  EFBE  F011         	goto	l89
  2322  00225E                     u2540:
  2323  00225E                     
  2324                           ; BSR set to: 0
  2325                           ;main.c: 56:                 RB0_pressed = 0;
  2326  00225E  0E00               	movlw	0
  2327  002260  6F9A               	movwf	_RB0_pressed& (0+255),b
  2328  002262                     
  2329                           ; BSR set to: 0
  2330                           ;main.c: 57:                 remove_timer(task_id[1]);
  2331  002262  5161               	movf	(_task_id+1)& (0+255),w,b
  2332  002264  EC90  F012         	call	_remove_timer
  2333  002268                     
  2334                           ;main.c: 58:                 task_id[1] = register_timer(period, 0, changeState, ((void*
      +                          )0));
  2335  002268  C0CE  F0A2         	movff	_period,register_timer@period
  2336  00226C  C0CF  F0A3         	movff	_period+1,register_timer@period+1
  2337  002270  0100               	movlb	0	; () banked
  2338  002272  0E00               	movlw	0
  2339  002274  BFA3               	btfsc	(register_timer@period+1)& (0+255),7,b
  2340  002276  0EFF               	movlw	-1
  2341  002278  6FA4               	movwf	(register_timer@period+2)& (0+255),b
  2342  00227A  6FA5               	movwf	(register_timer@period+3)& (0+255),b
  2343  00227C  0E00               	movlw	0
  2344  00227E  6FA6               	movwf	register_timer@delay& (0+255),b
  2345  002280  0E00               	movlw	0
  2346  002282  6FA7               	movwf	(register_timer@delay+1)& (0+255),b
  2347  002284  0E00               	movlw	0
  2348  002286  6FA8               	movwf	(register_timer@delay+2)& (0+255),b
  2349  002288  0E00               	movlw	0
  2350  00228A  6FA9               	movwf	(register_timer@delay+3)& (0+255),b
  2351  00228C  0EBE               	movlw	low _changeState
  2352  00228E  6FAA               	movwf	register_timer@callback& (0+255),b
  2353  002290  0E2D               	movlw	high _changeState
  2354  002292  6FAB               	movwf	(register_timer@callback+1)& (0+255),b
  2355  002294  0E00               	movlw	low (_changeState shr (0+16))
  2356  002296  6FAC               	movwf	(register_timer@callback+2)& (0+255),b
  2357  002298  0E00               	movlw	0
  2358  00229A  6FAD               	movwf	register_timer@data_ptr& (0+255),b
  2359  00229C  0E00               	movlw	0
  2360  00229E  6FAE               	movwf	(register_timer@data_ptr+1)& (0+255),b
  2361  0022A0  ECED  F00C         	call	_register_timer	;wreg free
  2362  0022A4  0100               	movlb	0	; () banked
  2363  0022A6  6F61               	movwf	(_task_id+1)& (0+255),b
  2364  0022A8                     
  2365                           ; BSR set to: 0
  2366                           ;main.c: 59:                 state_settime = 2;
  2367  0022A8  0E02               	movlw	2
  2368  0022AA  6F96               	movwf	_state_settime& (0+255),b	;volatile
  2369  0022AC  EFBE  F011         	goto	l89
  2370  0022B0                     l3323:
  2371                           
  2372                           ; BSR set to: 0
  2373                           ;main.c: 63:             isSet = 0;
  2374  0022B0  0E00               	movlw	0
  2375  0022B2  6F94               	movwf	_isSet& (0+255),b
  2376                           
  2377                           ;main.c: 64:             state_settime = 0;
  2378  0022B4  0E00               	movlw	0
  2379  0022B6  6F96               	movwf	_state_settime& (0+255),b	;volatile
  2380  0022B8                     
  2381                           ; BSR set to: 0
  2382                           ;main.c: 65:             LCDPrint(0, 0, "Set successful");
  2383  0022B8  0E00               	movlw	0
  2384  0022BA  6FA7               	movwf	LCDPrint@pos& (0+255),b
  2385  0022BC  0E43               	movlw	low STR_2
  2386  0022BE  6FA8               	movwf	LCDPrint@ptr& (0+255),b
  2387  0022C0  0E10               	movlw	high STR_2
  2388  0022C2  6FA9               	movwf	(LCDPrint@ptr+1)& (0+255),b
  2389  0022C4  0E00               	movlw	0
  2390  0022C6  EC54  F01A         	call	_LCDPrint
  2391  0022CA                     
  2392                           ;main.c: 66:             _delay((unsigned long)((2000)*(8000000/4000.0)));
  2393  0022CA  0E15               	movlw	21
  2394  0022CC  0100               	movlb	0	; () banked
  2395  0022CE  6FC3               	movwf	(??_set_time_process+1)& (0+255),b
  2396  0022D0  0E4B               	movlw	75
  2397  0022D2  6FC2               	movwf	??_set_time_process& (0+255),b
  2398  0022D4  0EBE               	movlw	190
  2399  0022D6                     u2937:
  2400  0022D6  2EE8               	decfsz	wreg,f,c
  2401  0022D8  D7FE               	bra	u2937
  2402  0022DA  2FC2               	decfsz	??_set_time_process& (0+255),f,b
  2403  0022DC  D7FC               	bra	u2937
  2404  0022DE  2FC3               	decfsz	(??_set_time_process+1)& (0+255),f,b
  2405  0022E0  D7FA               	bra	u2937
  2406  0022E2  F000               	nop	
  2407  0022E4                     
  2408                           ;main.c: 67:             LCDPrint(0, 0, "              ");
  2409  0022E4  0E00               	movlw	0
  2410  0022E6  0100               	movlb	0	; () banked
  2411  0022E8  6FA7               	movwf	LCDPrint@pos& (0+255),b
  2412  0022EA  0E34               	movlw	low STR_3
  2413  0022EC  6FA8               	movwf	LCDPrint@ptr& (0+255),b
  2414  0022EE  0E10               	movlw	high STR_3
  2415  0022F0  6FA9               	movwf	(LCDPrint@ptr+1)& (0+255),b
  2416  0022F2  0E00               	movlw	0
  2417  0022F4  EC54  F01A         	call	_LCDPrint
  2418  0022F8                     
  2419                           ;main.c: 68:             if(state == HEATER) LCDPrint(0, 0, "Heater");
  2420  0022F8  0100               	movlb	0	; () banked
  2421  0022FA  0597               	decf	_state& (0+255),w,b	;volatile
  2422  0022FC  A4D8               	btfss	status,2,c
  2423  0022FE  EF83  F011         	goto	u2551
  2424  002302  EF85  F011         	goto	u2550
  2425  002306                     u2551:
  2426  002306  EF90  F011         	goto	l3335
  2427  00230A                     u2550:
  2428  00230A                     
  2429                           ; BSR set to: 0
  2430  00230A  0E00               	movlw	0
  2431  00230C  6FA7               	movwf	LCDPrint@pos& (0+255),b
  2432  00230E  0E6C               	movlw	low STR_4
  2433  002310  6FA8               	movwf	LCDPrint@ptr& (0+255),b
  2434  002312  0E10               	movlw	high STR_4
  2435  002314  6FA9               	movwf	(LCDPrint@ptr+1)& (0+255),b
  2436  002316  0E00               	movlw	0
  2437  002318  EC54  F01A         	call	_LCDPrint
  2438  00231C  EFBE  F011         	goto	l89
  2439  002320                     l3335:
  2440                           
  2441                           ; BSR set to: 0
  2442  002320  0E02               	movlw	2
  2443  002322  1997               	xorwf	_state& (0+255),w,b	;volatile
  2444  002324  A4D8               	btfss	status,2,c
  2445  002326  EF97  F011         	goto	u2561
  2446  00232A  EF99  F011         	goto	u2560
  2447  00232E                     u2561:
  2448  00232E  EFBE  F011         	goto	l89
  2449  002332                     u2560:
  2450  002332                     
  2451                           ; BSR set to: 0
  2452  002332  0E00               	movlw	0
  2453  002334  6FA7               	movwf	LCDPrint@pos& (0+255),b
  2454  002336  0E52               	movlw	low STR_5
  2455  002338  6FA8               	movwf	LCDPrint@ptr& (0+255),b
  2456  00233A  0E10               	movlw	high STR_5
  2457  00233C  6FA9               	movwf	(LCDPrint@ptr+1)& (0+255),b
  2458  00233E  0E00               	movlw	0
  2459  002340  EC54  F01A         	call	_LCDPrint
  2460  002344  EFBE  F011         	goto	l89
  2461  002348                     l3341:
  2462  002348  0100               	movlb	0	; () banked
  2463  00234A  5196               	movf	_state_settime& (0+255),w,b	;volatile
  2464  00234C  6FC2               	movwf	??_set_time_process& (0+255),b
  2465  00234E  6BC3               	clrf	(??_set_time_process+1)& (0+255),b
  2466                           
  2467                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2468                           ; Switch size 1, requested type "simple"
  2469                           ; Number of cases is 1, Range of values is 0 to 0
  2470                           ; switch strategies available:
  2471                           ; Name         Instructions Cycles
  2472                           ; simple_byte            4     3 (average)
  2473                           ;	Chosen strategy is simple_byte
  2474  002350  51C3               	movf	(??_set_time_process+1)& (0+255),w,b
  2475  002352  0A00               	xorlw	0	; case 0
  2476  002354  B4D8               	btfsc	status,2,c
  2477  002356  EFAF  F011         	goto	l3789
  2478  00235A  EFBE  F011         	goto	l89
  2479  00235E                     l3789:
  2480                           
  2481                           ; BSR set to: 0
  2482                           ; Switch size 1, requested type "simple"
  2483                           ; Number of cases is 3, Range of values is 0 to 2
  2484                           ; switch strategies available:
  2485                           ; Name         Instructions Cycles
  2486                           ; simple_byte           10     6 (average)
  2487                           ;	Chosen strategy is simple_byte
  2488  00235E  51C2               	movf	??_set_time_process& (0+255),w,b
  2489  002360  0A00               	xorlw	0	; case 0
  2490  002362  B4D8               	btfsc	status,2,c
  2491  002364  EF5F  F010         	goto	l3279
  2492  002368  0A01               	xorlw	1	; case 1
  2493  00236A  B4D8               	btfsc	status,2,c
  2494  00236C  EFC8  F010         	goto	l3297
  2495  002370  0A03               	xorlw	3	; case 2
  2496  002372  B4D8               	btfsc	status,2,c
  2497  002374  EF58  F011         	goto	l3323
  2498  002378  EFBE  F011         	goto	l89
  2499  00237C                     l89:
  2500  00237C  0012               	return		;funcret
  2501  00237E                     __end_of_set_time_process:
  2502                           	opt callstack 0
  2503                           
  2504 ;; *************** function _remove_timer *****************
  2505 ;; Defined at:
  2506 ;;		line 155 in file "clock.c"
  2507 ;; Parameters:    Size  Location     Type
  2508 ;;  id              1    wreg     unsigned char 
  2509 ;; Auto vars:     Size  Location     Type
  2510 ;;  id              1    5[BANK0 ] unsigned char 
  2511 ;;  pos             1    4[BANK0 ] unsigned char 
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  2   10[None  ] int 
  2514 ;; Registers used:
  2515 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2522 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2523 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2524 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2525 ;;Total ram usage:        6 bytes
  2526 ;; Hardware stack levels used:    1
  2527 ;; Hardware stack levels required when called:    6
  2528 ;; This function calls:
  2529 ;;		_isEmptyList
  2530 ;; This function is called by:
  2531 ;;		_set_time_process
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           	psect	text12
  2536  002520                     __ptext12:
  2537                           	opt callstack 0
  2538  002520                     _remove_timer:
  2539                           	opt callstack 23
  2540                           
  2541                           ;incstack = 0
  2542                           ;remove_timer@id stored from wreg
  2543  002520  0100               	movlb	0	; () banked
  2544  002522  6FA1               	movwf	remove_timer@id& (0+255),b
  2545  002524                     
  2546                           ;clock.c: 156:     if(isEmptyList() || task_list[id].func_ptr == ((void*)0))
  2547  002524  EC18  F01C         	call	_isEmptyList	;wreg free
  2548  002528  0900               	iorlw	0
  2549  00252A  A4D8               	btfss	status,2,c
  2550  00252C  EF9A  F012         	goto	u2041
  2551  002530  EF9C  F012         	goto	u2040
  2552  002534                     u2041:
  2553  002534  EF5C  F013         	goto	l556
  2554  002538                     u2040:
  2555  002538  0100               	movlb	0	; () banked
  2556  00253A  51A1               	movf	remove_timer@id& (0+255),w,b
  2557  00253C  0D0F               	mullw	15
  2558  00253E  0E6C               	movlw	low (_task_list+8)
  2559  002540  24F3               	addwf	243,w,c
  2560  002542  6ED9               	movwf	fsr2l,c
  2561  002544  0E01               	movlw	high (_task_list+8)
  2562  002546  20F4               	addwfc	prodh,w,c
  2563  002548  6EDA               	movwf	fsr2h,c
  2564  00254A  50DE               	movf	postinc2,w,c
  2565  00254C  10DE               	iorwf	postinc2,w,c
  2566  00254E  10DE               	iorwf	postinc2,w,c
  2567  002550  A4D8               	btfss	status,2,c
  2568  002552  EFAD  F012         	goto	u2051
  2569  002556  EFAF  F012         	goto	u2050
  2570  00255A                     u2051:
  2571  00255A  EFB1  F012         	goto	l2941
  2572  00255E                     u2050:
  2573  00255E  EF5C  F013         	goto	l556
  2574  002562                     l2941:
  2575                           
  2576                           ; BSR set to: 0
  2577                           ;clock.c: 158:     task_list[id].delay_t = 0;
  2578  002562  51A1               	movf	remove_timer@id& (0+255),w,b
  2579  002564  0D0F               	mullw	15
  2580  002566  0E64               	movlw	low _task_list
  2581  002568  24F3               	addwf	243,w,c
  2582  00256A  6ED9               	movwf	fsr2l,c
  2583  00256C  0E01               	movlw	high _task_list
  2584  00256E  20F4               	addwfc	prodh,w,c
  2585  002570  6EDA               	movwf	fsr2h,c
  2586  002572  6ADE               	clrf	postinc2,c
  2587  002574  6ADE               	clrf	postinc2,c
  2588  002576  6ADE               	clrf	postinc2,c
  2589  002578  6ADD               	clrf	postdec2,c
  2590                           
  2591                           ;clock.c: 159:     task_list[id].period_t = 0;
  2592  00257A  51A1               	movf	remove_timer@id& (0+255),w,b
  2593  00257C  0D0F               	mullw	15
  2594  00257E  0E68               	movlw	low (_task_list+4)
  2595  002580  24F3               	addwf	243,w,c
  2596  002582  6ED9               	movwf	fsr2l,c
  2597  002584  0E01               	movlw	high (_task_list+4)
  2598  002586  20F4               	addwfc	prodh,w,c
  2599  002588  6EDA               	movwf	fsr2h,c
  2600  00258A  6ADE               	clrf	postinc2,c
  2601  00258C  6ADE               	clrf	postinc2,c
  2602  00258E  6ADE               	clrf	postinc2,c
  2603  002590  6ADD               	clrf	postdec2,c
  2604                           
  2605                           ;clock.c: 160:     task_list[id].func_ptr = ((void*)0);
  2606  002592  51A1               	movf	remove_timer@id& (0+255),w,b
  2607  002594  0D0F               	mullw	15
  2608  002596  0E6C               	movlw	low (_task_list+8)
  2609  002598  24F3               	addwf	243,w,c
  2610  00259A  6ED9               	movwf	fsr2l,c
  2611  00259C  0E01               	movlw	high (_task_list+8)
  2612  00259E  20F4               	addwfc	prodh,w,c
  2613  0025A0  6EDA               	movwf	fsr2h,c
  2614  0025A2  0E00               	movlw	0
  2615  0025A4  6EDE               	movwf	postinc2,c
  2616  0025A6  0E00               	movlw	0
  2617  0025A8  6EDE               	movwf	postinc2,c
  2618  0025AA  0E00               	movlw	0
  2619  0025AC  6EDE               	movwf	postinc2,c
  2620                           
  2621                           ;clock.c: 161:     task_list[id].data_p = ((void*)0);
  2622  0025AE  51A1               	movf	remove_timer@id& (0+255),w,b
  2623  0025B0  0D0F               	mullw	15
  2624  0025B2  0E71               	movlw	low (_task_list+13)
  2625  0025B4  24F3               	addwf	243,w,c
  2626  0025B6  6ED9               	movwf	fsr2l,c
  2627  0025B8  0E01               	movlw	high (_task_list+13)
  2628  0025BA  20F4               	addwfc	prodh,w,c
  2629  0025BC  6EDA               	movwf	fsr2h,c
  2630  0025BE  0E00               	movlw	0
  2631  0025C0  6EDE               	movwf	postinc2,c
  2632  0025C2  0E00               	movlw	0
  2633  0025C4  6EDD               	movwf	postdec2,c
  2634  0025C6                     
  2635                           ; BSR set to: 0
  2636                           ;clock.c: 162:     num_task--;
  2637  0025C6  0791               	decf	_num_task& (0+255),f,b
  2638  0025C8                     
  2639                           ; BSR set to: 0
  2640                           ;clock.c: 163:     if(id == head) {
  2641  0025C8  5190               	movf	_head& (0+255),w,b
  2642  0025CA  19A1               	xorwf	remove_timer@id& (0+255),w,b
  2643  0025CC  A4D8               	btfss	status,2,c
  2644  0025CE  EFEB  F012         	goto	u2061
  2645  0025D2  EFED  F012         	goto	u2060
  2646  0025D6                     u2061:
  2647  0025D6  EF05  F013         	goto	l557
  2648  0025DA                     u2060:
  2649  0025DA                     
  2650                           ; BSR set to: 0
  2651                           ;clock.c: 164:         head = task_list[id].next;
  2652  0025DA  51A1               	movf	remove_timer@id& (0+255),w,b
  2653  0025DC  0D0F               	mullw	15
  2654  0025DE  0E6F               	movlw	low (_task_list+11)
  2655  0025E0  24F3               	addwf	243,w,c
  2656  0025E2  6ED9               	movwf	fsr2l,c
  2657  0025E4  0E01               	movlw	high (_task_list+11)
  2658  0025E6  20F4               	addwfc	prodh,w,c
  2659  0025E8  6EDA               	movwf	fsr2h,c
  2660  0025EA  50DF               	movf	indf2,w,c
  2661  0025EC  6F90               	movwf	_head& (0+255),b
  2662                           
  2663                           ;clock.c: 165:         task_list[id].next = 105;
  2664  0025EE  51A1               	movf	remove_timer@id& (0+255),w,b
  2665  0025F0  0D0F               	mullw	15
  2666  0025F2  0E6F               	movlw	low (_task_list+11)
  2667  0025F4  24F3               	addwf	243,w,c
  2668  0025F6  6ED9               	movwf	fsr2l,c
  2669  0025F8  0E01               	movlw	high (_task_list+11)
  2670  0025FA  20F4               	addwfc	prodh,w,c
  2671  0025FC  6EDA               	movwf	fsr2h,c
  2672  0025FE  0E69               	movlw	105
  2673  002600  6EDE               	movwf	postinc2,c
  2674  002602  0E00               	movlw	0
  2675  002604  6EDD               	movwf	postdec2,c
  2676                           
  2677                           ;clock.c: 166:     }
  2678  002606  EF5C  F013         	goto	l556
  2679  00260A                     l557:
  2680                           
  2681                           ; BSR set to: 0
  2682                           ;clock.c: 168:         char pos = head;
  2683  00260A  C090  F0A0         	movff	_head,remove_timer@pos
  2684                           
  2685                           ;clock.c: 169:         while(task_list[pos].next != 105 && task_list[pos].next != id) {
  2686  00260E  EF13  F013         	goto	l559
  2687  002612                     l2949:
  2688                           
  2689                           ; BSR set to: 0
  2690                           ;clock.c: 170:             pos = task_list[pos].next;
  2691  002612  51A0               	movf	remove_timer@pos& (0+255),w,b
  2692  002614  0D0F               	mullw	15
  2693  002616  0E6F               	movlw	low (_task_list+11)
  2694  002618  24F3               	addwf	243,w,c
  2695  00261A  6ED9               	movwf	fsr2l,c
  2696  00261C  0E01               	movlw	high (_task_list+11)
  2697  00261E  20F4               	addwfc	prodh,w,c
  2698  002620  6EDA               	movwf	fsr2h,c
  2699  002622  50DF               	movf	indf2,w,c
  2700  002624  6FA0               	movwf	remove_timer@pos& (0+255),b
  2701  002626                     l559:
  2702                           
  2703                           ; BSR set to: 0
  2704                           ;clock.c: 169:         while(task_list[pos].next != 105 && task_list[pos].next != id) {
  2705  002626  51A0               	movf	remove_timer@pos& (0+255),w,b
  2706  002628  0D0F               	mullw	15
  2707  00262A  0E6F               	movlw	low (_task_list+11)
  2708  00262C  24F3               	addwf	243,w,c
  2709  00262E  6ED9               	movwf	fsr2l,c
  2710  002630  0E01               	movlw	high (_task_list+11)
  2711  002632  20F4               	addwfc	prodh,w,c
  2712  002634  6EDA               	movwf	fsr2h,c
  2713  002636  0E69               	movlw	105
  2714  002638  18DE               	xorwf	postinc2,w,c
  2715  00263A  10DE               	iorwf	postinc2,w,c
  2716  00263C  B4D8               	btfsc	status,2,c
  2717  00263E  EF23  F013         	goto	u2071
  2718  002642  EF25  F013         	goto	u2070
  2719  002646                     u2071:
  2720  002646  EF3C  F013         	goto	l2953
  2721  00264A                     u2070:
  2722  00264A                     
  2723                           ; BSR set to: 0
  2724  00264A  51A0               	movf	remove_timer@pos& (0+255),w,b
  2725  00264C  0D0F               	mullw	15
  2726  00264E  0E6F               	movlw	low (_task_list+11)
  2727  002650  24F3               	addwf	243,w,c
  2728  002652  6ED9               	movwf	fsr2l,c
  2729  002654  0E01               	movlw	high (_task_list+11)
  2730  002656  20F4               	addwfc	prodh,w,c
  2731  002658  6EDA               	movwf	fsr2h,c
  2732  00265A  51A1               	movf	remove_timer@id& (0+255),w,b
  2733  00265C  6F9E               	movwf	(??_remove_timer+2)& (0+255),b
  2734  00265E  6B9F               	clrf	(??_remove_timer+3)& (0+255),b
  2735  002660  50DE               	movf	postinc2,w,c
  2736  002662  199E               	xorwf	(??_remove_timer+2)& (0+255),w,b
  2737  002664  E107               	bnz	u2081
  2738  002666  50DE               	movf	postinc2,w,c
  2739  002668  199F               	xorwf	(??_remove_timer+3)& (0+255),w,b
  2740  00266A  A4D8               	btfss	status,2,c
  2741  00266C  EF3A  F013         	goto	u2081
  2742  002670  EF3C  F013         	goto	u2080
  2743  002674                     u2081:
  2744  002674  EF09  F013         	goto	l2949
  2745  002678                     u2080:
  2746  002678                     l2953:
  2747                           
  2748                           ; BSR set to: 0
  2749                           ;clock.c: 172:         task_list[pos].next = task_list[id].next;
  2750  002678  51A1               	movf	remove_timer@id& (0+255),w,b
  2751  00267A  0D0F               	mullw	15
  2752  00267C  0E6F               	movlw	low (_task_list+11)
  2753  00267E  24F3               	addwf	243,w,c
  2754  002680  6ED9               	movwf	fsr2l,c
  2755  002682  0E01               	movlw	high (_task_list+11)
  2756  002684  20F4               	addwfc	prodh,w,c
  2757  002686  6EDA               	movwf	fsr2h,c
  2758  002688  51A0               	movf	remove_timer@pos& (0+255),w,b
  2759  00268A  0D0F               	mullw	15
  2760  00268C  0E6F               	movlw	low (_task_list+11)
  2761  00268E  24F3               	addwf	243,w,c
  2762  002690  6EE1               	movwf	fsr1l,c
  2763  002692  0E01               	movlw	high (_task_list+11)
  2764  002694  20F4               	addwfc	prodh,w,c
  2765  002696  6EE2               	movwf	fsr1h,c
  2766  002698  CFDE FFE6          	movff	postinc2,postinc1
  2767  00269C  CFDD FFE5          	movff	postdec2,postdec1
  2768  0026A0                     
  2769                           ; BSR set to: 0
  2770                           ;clock.c: 173:         task_list[id].next = 105;
  2771  0026A0  51A1               	movf	remove_timer@id& (0+255),w,b
  2772  0026A2  0D0F               	mullw	15
  2773  0026A4  0E6F               	movlw	low (_task_list+11)
  2774  0026A6  24F3               	addwf	243,w,c
  2775  0026A8  6ED9               	movwf	fsr2l,c
  2776  0026AA  0E01               	movlw	high (_task_list+11)
  2777  0026AC  20F4               	addwfc	prodh,w,c
  2778  0026AE  6EDA               	movwf	fsr2h,c
  2779  0026B0  0E69               	movlw	105
  2780  0026B2  6EDE               	movwf	postinc2,c
  2781  0026B4  0E00               	movlw	0
  2782  0026B6  6EDD               	movwf	postdec2,c
  2783  0026B8                     l556:
  2784  0026B8  0012               	return		;funcret
  2785  0026BA                     __end_of_remove_timer:
  2786                           	opt callstack 0
  2787                           
  2788 ;; *************** function _isEmptyList *****************
  2789 ;; Defined at:
  2790 ;;		line 73 in file "clock.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;		None
  2793 ;; Auto vars:     Size  Location     Type
  2794 ;;		None
  2795 ;; Return value:  Size  Location     Type
  2796 ;;                  1    wreg      unsigned char 
  2797 ;; Registers used:
  2798 ;;		wreg, status,2
  2799 ;; Tracked objects:
  2800 ;;		On entry : 0/0
  2801 ;;		On exit  : 0/0
  2802 ;;		Unchanged: 0/0
  2803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2808 ;;Total ram usage:        0 bytes
  2809 ;; Hardware stack levels used:    1
  2810 ;; Hardware stack levels required when called:    5
  2811 ;; This function calls:
  2812 ;;		Nothing
  2813 ;; This function is called by:
  2814 ;;		_remove_timer
  2815 ;; This function uses a non-reentrant model
  2816 ;;
  2817                           
  2818                           	psect	text13
  2819  003830                     __ptext13:
  2820                           	opt callstack 0
  2821  003830                     _isEmptyList:
  2822                           	opt callstack 23
  2823  003830                     
  2824                           ;clock.c: 74:     return num_task == 0 ? 1 : 0;
  2825  003830  0100               	movlb	0	; () banked
  2826  003832  5191               	movf	_num_task& (0+255),w,b
  2827  003834  B4D8               	btfsc	status,2,c
  2828  003836  EF1F  F01C         	goto	u1831
  2829  00383A  EF22  F01C         	goto	u1830
  2830  00383E                     u1831:
  2831  00383E  0E01               	movlw	1
  2832  003840  EF23  F01C         	goto	u1840
  2833  003844                     u1830:
  2834  003844  0E00               	movlw	0
  2835  003846                     u1840:
  2836  003846                     
  2837                           ; BSR set to: 0
  2838  003846  0012               	return		;funcret
  2839  003848                     __end_of_isEmptyList:
  2840                           	opt callstack 0
  2841                           
  2842 ;; *************** function _register_timer *****************
  2843 ;; Defined at:
  2844 ;;		line 116 in file "clock.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;  period          4    6[BANK0 ] unsigned long 
  2847 ;;  delay           4   10[BANK0 ] unsigned long 
  2848 ;;  callback        3   14[BANK0 ] PTR FTN(PTR void ,)void 
  2849 ;;		 -> print_temp_and_humid(1), readTempAndHumid(1), check_humid_to_turn_fan(1), handleButton(1), 
  2850 ;;		 -> changeState(1), 
  2851 ;;  data_ptr        2   17[BANK0 ] PTR void 
  2852 ;;		 -> NULL(0), 
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;  cur             2   35[BANK0 ] int 
  2855 ;;  prev            2   31[BANK0 ] int 
  2856 ;;  sum             2   33[BANK0 ] int 
  2857 ;;  idx             1   37[BANK0 ] unsigned char 
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  1    wreg      unsigned char 
  2860 ;; Registers used:
  2861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2867 ;;      Params:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2868 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2869 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2870 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2871 ;;Total ram usage:       32 bytes
  2872 ;; Hardware stack levels used:    1
  2873 ;; Hardware stack levels required when called:    6
  2874 ;; This function calls:
  2875 ;;		___wmul
  2876 ;;		_isFullList
  2877 ;; This function is called by:
  2878 ;;		_set_time_process
  2879 ;;		_main
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           
  2883                           	psect	text14
  2884  0019DA                     __ptext14:
  2885                           	opt callstack 0
  2886  0019DA                     _register_timer:
  2887                           	opt callstack 23
  2888  0019DA                     
  2889                           ;clock.c: 117:     if(isFullList())
  2890  0019DA  EC0B  F01C         	call	_isFullList	;wreg free
  2891  0019DE  0900               	iorlw	0
  2892  0019E0  B4D8               	btfsc	status,2,c
  2893  0019E2  EFF5  F00C         	goto	u2091
  2894  0019E6  EFF7  F00C         	goto	u2090
  2895  0019EA                     u2091:
  2896  0019EA  EFFA  F00C         	goto	l2965
  2897  0019EE                     u2090:
  2898  0019EE                     l2961:
  2899                           
  2900                           ;clock.c: 118:         return 109;
  2901  0019EE  0E6D               	movlw	109
  2902  0019F0  EFBC  F00E         	goto	l536
  2903  0019F4                     l2965:
  2904                           
  2905                           ;clock.c: 119:     char idx;;clock.c: 120:     for(idx = 0; idx < 20; idx++) {
  2906  0019F4  0E00               	movlw	0
  2907  0019F6  0100               	movlb	0	; () banked
  2908  0019F8  6FC1               	movwf	register_timer@idx& (0+255),b
  2909  0019FA                     l2971:
  2910                           
  2911                           ; BSR set to: 0
  2912                           ;clock.c: 121:         if(task_list[idx].func_ptr == ((void*)0))
  2913  0019FA  51C1               	movf	register_timer@idx& (0+255),w,b
  2914  0019FC  0D0F               	mullw	15
  2915  0019FE  0E6C               	movlw	low (_task_list+8)
  2916  001A00  24F3               	addwf	243,w,c
  2917  001A02  6ED9               	movwf	fsr2l,c
  2918  001A04  0E01               	movlw	high (_task_list+8)
  2919  001A06  20F4               	addwfc	prodh,w,c
  2920  001A08  6EDA               	movwf	fsr2h,c
  2921  001A0A  50DE               	movf	postinc2,w,c
  2922  001A0C  10DE               	iorwf	postinc2,w,c
  2923  001A0E  10DE               	iorwf	postinc2,w,c
  2924  001A10  A4D8               	btfss	status,2,c
  2925  001A12  EF0D  F00D         	goto	u2101
  2926  001A16  EF0F  F00D         	goto	u2100
  2927  001A1A                     u2101:
  2928  001A1A  EF11  F00D         	goto	l2975
  2929  001A1E                     u2100:
  2930  001A1E  EF1A  F00D         	goto	l2979
  2931  001A22                     l2975:
  2932                           
  2933                           ; BSR set to: 0
  2934                           ;clock.c: 123:     }
  2935  001A22  2BC1               	incf	register_timer@idx& (0+255),f,b
  2936  001A24                     
  2937                           ; BSR set to: 0
  2938  001A24  0E13               	movlw	19
  2939  001A26  65C1               	cpfsgt	register_timer@idx& (0+255),b
  2940  001A28  EF18  F00D         	goto	u2111
  2941  001A2C  EF1A  F00D         	goto	u2110
  2942  001A30                     u2111:
  2943  001A30  EFFD  F00C         	goto	l2971
  2944  001A34                     u2110:
  2945  001A34                     l2979:
  2946                           
  2947                           ; BSR set to: 0
  2948                           ;clock.c: 124:     if(idx == 20)
  2949  001A34  0E14               	movlw	20
  2950  001A36  19C1               	xorwf	register_timer@idx& (0+255),w,b
  2951  001A38  A4D8               	btfss	status,2,c
  2952  001A3A  EF21  F00D         	goto	u2121
  2953  001A3E  EF23  F00D         	goto	u2120
  2954  001A42                     u2121:
  2955  001A42  EF25  F00D         	goto	l2985
  2956  001A46                     u2120:
  2957  001A46  EFF7  F00C         	goto	l2961
  2958  001A4A                     l2985:
  2959                           
  2960                           ; BSR set to: 0
  2961                           ;clock.c: 126:     task_list[idx].delay_t = delay;
  2962  001A4A  51C1               	movf	register_timer@idx& (0+255),w,b
  2963  001A4C  0D0F               	mullw	15
  2964  001A4E  0E64               	movlw	low _task_list
  2965  001A50  24F3               	addwf	243,w,c
  2966  001A52  6ED9               	movwf	fsr2l,c
  2967  001A54  0E01               	movlw	high _task_list
  2968  001A56  20F4               	addwfc	prodh,w,c
  2969  001A58  6EDA               	movwf	fsr2h,c
  2970  001A5A  C0A6  FFDE         	movff	register_timer@delay,postinc2
  2971  001A5E  C0A7  FFDE         	movff	register_timer@delay+1,postinc2
  2972  001A62  C0A8  FFDE         	movff	register_timer@delay+2,postinc2
  2973  001A66  C0A9  FFDE         	movff	register_timer@delay+3,postinc2
  2974                           
  2975                           ;clock.c: 127:     task_list[idx].period_t = period;
  2976  001A6A  51C1               	movf	register_timer@idx& (0+255),w,b
  2977  001A6C  0D0F               	mullw	15
  2978  001A6E  0E68               	movlw	low (_task_list+4)
  2979  001A70  24F3               	addwf	243,w,c
  2980  001A72  6ED9               	movwf	fsr2l,c
  2981  001A74  0E01               	movlw	high (_task_list+4)
  2982  001A76  20F4               	addwfc	prodh,w,c
  2983  001A78  6EDA               	movwf	fsr2h,c
  2984  001A7A  C0A2  FFDE         	movff	register_timer@period,postinc2
  2985  001A7E  C0A3  FFDE         	movff	register_timer@period+1,postinc2
  2986  001A82  C0A4  FFDE         	movff	register_timer@period+2,postinc2
  2987  001A86  C0A5  FFDE         	movff	register_timer@period+3,postinc2
  2988                           
  2989                           ;clock.c: 128:     task_list[idx].func_ptr = callback;
  2990  001A8A  51C1               	movf	register_timer@idx& (0+255),w,b
  2991  001A8C  0D0F               	mullw	15
  2992  001A8E  0E6C               	movlw	low (_task_list+8)
  2993  001A90  24F3               	addwf	243,w,c
  2994  001A92  6ED9               	movwf	fsr2l,c
  2995  001A94  0E01               	movlw	high (_task_list+8)
  2996  001A96  20F4               	addwfc	prodh,w,c
  2997  001A98  6EDA               	movwf	fsr2h,c
  2998  001A9A  C0AA  FFDE         	movff	register_timer@callback,postinc2
  2999  001A9E  C0AB  FFDE         	movff	register_timer@callback+1,postinc2
  3000  001AA2  C0AC  FFDE         	movff	register_timer@callback+2,postinc2
  3001                           
  3002                           ;clock.c: 129:     task_list[idx].data_p = data_ptr;
  3003  001AA6  51C1               	movf	register_timer@idx& (0+255),w,b
  3004  001AA8  0D0F               	mullw	15
  3005  001AAA  0E71               	movlw	low (_task_list+13)
  3006  001AAC  24F3               	addwf	243,w,c
  3007  001AAE  6ED9               	movwf	fsr2l,c
  3008  001AB0  0E01               	movlw	high (_task_list+13)
  3009  001AB2  20F4               	addwfc	prodh,w,c
  3010  001AB4  6EDA               	movwf	fsr2h,c
  3011  001AB6  C0AD  FFDE         	movff	register_timer@data_ptr,postinc2
  3012  001ABA  C0AE  FFDD         	movff	register_timer@data_ptr+1,postdec2
  3013  001ABE                     
  3014                           ; BSR set to: 0
  3015                           ;clock.c: 130:     num_task++;
  3016  001ABE  2B91               	incf	_num_task& (0+255),f,b
  3017  001AC0                     
  3018                           ; BSR set to: 0
  3019                           ;clock.c: 131:     int sum = task_list[head].delay_t;
  3020  001AC0  5190               	movf	_head& (0+255),w,b
  3021  001AC2  0D0F               	mullw	15
  3022  001AC4  0E64               	movlw	low _task_list
  3023  001AC6  24F3               	addwf	243,w,c
  3024  001AC8  6ED9               	movwf	fsr2l,c
  3025  001ACA  0E01               	movlw	high _task_list
  3026  001ACC  20F4               	addwfc	prodh,w,c
  3027  001ACE  6EDA               	movwf	fsr2h,c
  3028  001AD0  CFDE F0BD          	movff	postinc2,register_timer@sum
  3029  001AD4  CFDD F0BE          	movff	postdec2,register_timer@sum+1
  3030  001AD8                     
  3031                           ; BSR set to: 0
  3032                           ;clock.c: 132:     if(head == 105 || (head != 105 && sum > delay)) {
  3033  001AD8  0E69               	movlw	105
  3034  001ADA  1990               	xorwf	_head& (0+255),w,b
  3035  001ADC  B4D8               	btfsc	status,2,c
  3036  001ADE  EF73  F00D         	goto	u2131
  3037  001AE2  EF75  F00D         	goto	u2130
  3038  001AE6                     u2131:
  3039  001AE6  EF96  F00D         	goto	l2997
  3040  001AEA                     u2130:
  3041  001AEA                     
  3042                           ; BSR set to: 0
  3043  001AEA  0E69               	movlw	105
  3044  001AEC  1990               	xorwf	_head& (0+255),w,b
  3045  001AEE  B4D8               	btfsc	status,2,c
  3046  001AF0  EF7C  F00D         	goto	u2141
  3047  001AF4  EF7E  F00D         	goto	u2140
  3048  001AF8                     u2141:
  3049  001AF8  EFA9  F00D         	goto	l3001
  3050  001AFC                     u2140:
  3051  001AFC                     
  3052                           ; BSR set to: 0
  3053  001AFC  C0BD  F0AF         	movff	register_timer@sum,??_register_timer
  3054  001B00  C0BE  F0B0         	movff	register_timer@sum+1,??_register_timer+1
  3055  001B04  0E00               	movlw	0
  3056  001B06  BFB0               	btfsc	(??_register_timer+1)& (0+255),7,b
  3057  001B08  0EFF               	movlw	255
  3058  001B0A  6FB1               	movwf	(??_register_timer+2)& (0+255),b
  3059  001B0C  6FB2               	movwf	(??_register_timer+3)& (0+255),b
  3060  001B0E  51AF               	movf	??_register_timer& (0+255),w,b
  3061  001B10  5DA6               	subwf	register_timer@delay& (0+255),w,b
  3062  001B12  51B0               	movf	(??_register_timer+1)& (0+255),w,b
  3063  001B14  59A7               	subwfb	(register_timer@delay+1)& (0+255),w,b
  3064  001B16  51B1               	movf	(??_register_timer+2)& (0+255),w,b
  3065  001B18  59A8               	subwfb	(register_timer@delay+2)& (0+255),w,b
  3066  001B1A  51B2               	movf	(??_register_timer+3)& (0+255),w,b
  3067  001B1C  59A9               	subwfb	(register_timer@delay+3)& (0+255),w,b
  3068  001B1E  B0D8               	btfsc	status,0,c
  3069  001B20  EF94  F00D         	goto	u2151
  3070  001B24  EF96  F00D         	goto	u2150
  3071  001B28                     u2151:
  3072  001B28  EFA9  F00D         	goto	l3001
  3073  001B2C                     u2150:
  3074  001B2C                     l2997:
  3075                           
  3076                           ; BSR set to: 0
  3077                           ;clock.c: 133:         task_list[idx].next = head;
  3078  001B2C  5190               	movf	_head& (0+255),w,b
  3079  001B2E  6FAF               	movwf	??_register_timer& (0+255),b
  3080  001B30  6BB0               	clrf	(??_register_timer+1)& (0+255),b
  3081  001B32  51C1               	movf	register_timer@idx& (0+255),w,b
  3082  001B34  0D0F               	mullw	15
  3083  001B36  0E6F               	movlw	low (_task_list+11)
  3084  001B38  24F3               	addwf	243,w,c
  3085  001B3A  6ED9               	movwf	fsr2l,c
  3086  001B3C  0E01               	movlw	high (_task_list+11)
  3087  001B3E  20F4               	addwfc	prodh,w,c
  3088  001B40  6EDA               	movwf	fsr2h,c
  3089  001B42  C0AF  FFDE         	movff	??_register_timer,postinc2
  3090  001B46  C0B0  FFDD         	movff	??_register_timer+1,postdec2
  3091  001B4A                     
  3092                           ; BSR set to: 0
  3093                           ;clock.c: 134:         head = idx;
  3094  001B4A  C0C1  F090         	movff	register_timer@idx,_head
  3095                           
  3096                           ;clock.c: 135:     }
  3097  001B4E  EF78  F00E         	goto	l3019
  3098  001B52                     l3001:
  3099                           
  3100                           ; BSR set to: 0
  3101                           ;clock.c: 138:         int cur = task_list[head].next;
  3102  001B52  5190               	movf	_head& (0+255),w,b
  3103  001B54  0D0F               	mullw	15
  3104  001B56  0E6F               	movlw	low (_task_list+11)
  3105  001B58  24F3               	addwf	243,w,c
  3106  001B5A  6ED9               	movwf	fsr2l,c
  3107  001B5C  0E01               	movlw	high (_task_list+11)
  3108  001B5E  20F4               	addwfc	prodh,w,c
  3109  001B60  6EDA               	movwf	fsr2h,c
  3110  001B62  CFDE F0BF          	movff	postinc2,register_timer@cur
  3111  001B66  CFDD F0C0          	movff	postdec2,register_timer@cur+1
  3112  001B6A                     
  3113                           ; BSR set to: 0
  3114                           ;clock.c: 139:         int prev = head;
  3115  001B6A  C090  F0BB         	movff	_head,register_timer@prev
  3116  001B6E  6BBC               	clrf	(register_timer@prev+1)& (0+255),b
  3117                           
  3118                           ;clock.c: 140:         while(cur != 105 && sum + task_list[cur].delay_t <= delay) {
  3119  001B70  EFE8  F00D         	goto	l3009
  3120  001B74                     l3005:
  3121                           
  3122                           ; BSR set to: 0
  3123                           ;clock.c: 142:             sum+= task_list[cur].delay_t;
  3124  001B74  C0BF  F09C         	movff	register_timer@cur,___wmul@multiplier
  3125  001B78  C0C0  F09D         	movff	register_timer@cur+1,___wmul@multiplier+1
  3126  001B7C  0E00               	movlw	0
  3127  001B7E  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3128  001B80  0E0F               	movlw	15
  3129  001B82  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  3130  001B84  ECA5  F01B         	call	___wmul	;wreg free
  3131  001B88  0E64               	movlw	low _task_list
  3132  001B8A  0100               	movlb	0	; () banked
  3133  001B8C  259C               	addwf	?___wmul& (0+255),w,b
  3134  001B8E  6ED9               	movwf	fsr2l,c
  3135  001B90  0E01               	movlw	high _task_list
  3136  001B92  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  3137  001B94  6EDA               	movwf	fsr2h,c
  3138  001B96  50DE               	movf	postinc2,w,c
  3139  001B98  27BD               	addwf	register_timer@sum& (0+255),f,b
  3140  001B9A  50DD               	movf	postdec2,w,c
  3141  001B9C  23BE               	addwfc	(register_timer@sum+1)& (0+255),f,b
  3142  001B9E                     
  3143                           ; BSR set to: 0
  3144                           ;clock.c: 143:             prev = cur;
  3145  001B9E  C0BF  F0BB         	movff	register_timer@cur,register_timer@prev
  3146  001BA2  C0C0  F0BC         	movff	register_timer@cur+1,register_timer@prev+1
  3147                           
  3148                           ;clock.c: 144:             cur = task_list[cur].next;
  3149  001BA6  C0BF  F09C         	movff	register_timer@cur,___wmul@multiplier
  3150  001BAA  C0C0  F09D         	movff	register_timer@cur+1,___wmul@multiplier+1
  3151  001BAE  0E00               	movlw	0
  3152  001BB0  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3153  001BB2  0E0F               	movlw	15
  3154  001BB4  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  3155  001BB6  ECA5  F01B         	call	___wmul	;wreg free
  3156  001BBA  0E6F               	movlw	low (_task_list+11)
  3157  001BBC  0100               	movlb	0	; () banked
  3158  001BBE  259C               	addwf	?___wmul& (0+255),w,b
  3159  001BC0  6ED9               	movwf	fsr2l,c
  3160  001BC2  0E01               	movlw	high (_task_list+11)
  3161  001BC4  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  3162  001BC6  6EDA               	movwf	fsr2h,c
  3163  001BC8  CFDE F0BF          	movff	postinc2,register_timer@cur
  3164  001BCC  CFDD F0C0          	movff	postdec2,register_timer@cur+1
  3165  001BD0                     l3009:
  3166                           
  3167                           ; BSR set to: 0
  3168                           ;clock.c: 140:         while(cur != 105 && sum + task_list[cur].delay_t <= delay) {
  3169  001BD0  0E69               	movlw	105
  3170  001BD2  19BF               	xorwf	register_timer@cur& (0+255),w,b
  3171  001BD4  11C0               	iorwf	(register_timer@cur+1)& (0+255),w,b
  3172  001BD6  B4D8               	btfsc	status,2,c
  3173  001BD8  EFF0  F00D         	goto	u2161
  3174  001BDC  EFF2  F00D         	goto	u2160
  3175  001BE0                     u2161:
  3176  001BE0  EF2F  F00E         	goto	l3013
  3177  001BE4                     u2160:
  3178  001BE4                     
  3179                           ; BSR set to: 0
  3180  001BE4  C0BF  F09C         	movff	register_timer@cur,___wmul@multiplier
  3181  001BE8  C0C0  F09D         	movff	register_timer@cur+1,___wmul@multiplier+1
  3182  001BEC  0E00               	movlw	0
  3183  001BEE  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3184  001BF0  0E0F               	movlw	15
  3185  001BF2  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  3186  001BF4  ECA5  F01B         	call	___wmul	;wreg free
  3187  001BF8  0E64               	movlw	low _task_list
  3188  001BFA  0100               	movlb	0	; () banked
  3189  001BFC  259C               	addwf	?___wmul& (0+255),w,b
  3190  001BFE  6ED9               	movwf	fsr2l,c
  3191  001C00  0E01               	movlw	high _task_list
  3192  001C02  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  3193  001C04  6EDA               	movwf	fsr2h,c
  3194  001C06  CFDE F0AF          	movff	postinc2,??_register_timer
  3195  001C0A  CFDE F0B0          	movff	postinc2,??_register_timer+1
  3196  001C0E  CFDE F0B1          	movff	postinc2,??_register_timer+2
  3197  001C12  CFDE F0B2          	movff	postinc2,??_register_timer+3
  3198  001C16  C0BD  F0B3         	movff	register_timer@sum,??_register_timer+4
  3199  001C1A  C0BE  F0B4         	movff	register_timer@sum+1,??_register_timer+5
  3200  001C1E  0E00               	movlw	0
  3201  001C20  BFB4               	btfsc	(??_register_timer+5)& (0+255),7,b
  3202  001C22  0EFF               	movlw	255
  3203  001C24  6FB5               	movwf	(??_register_timer+6)& (0+255),b
  3204  001C26  6FB6               	movwf	(??_register_timer+7)& (0+255),b
  3205  001C28  51AF               	movf	??_register_timer& (0+255),w,b
  3206  001C2A  25B3               	addwf	(??_register_timer+4)& (0+255),w,b
  3207  001C2C  6FB7               	movwf	(??_register_timer+8)& (0+255),b
  3208  001C2E  51B0               	movf	(??_register_timer+1)& (0+255),w,b
  3209  001C30  21B4               	addwfc	(??_register_timer+5)& (0+255),w,b
  3210  001C32  6FB8               	movwf	(??_register_timer+9)& (0+255),b
  3211  001C34  51B1               	movf	(??_register_timer+2)& (0+255),w,b
  3212  001C36  21B5               	addwfc	(??_register_timer+6)& (0+255),w,b
  3213  001C38  6FB9               	movwf	(??_register_timer+10)& (0+255),b
  3214  001C3A  51B2               	movf	(??_register_timer+3)& (0+255),w,b
  3215  001C3C  21B6               	addwfc	(??_register_timer+7)& (0+255),w,b
  3216  001C3E  6FBA               	movwf	(??_register_timer+11)& (0+255),b
  3217  001C40  51B7               	movf	(??_register_timer+8)& (0+255),w,b
  3218  001C42  5DA6               	subwf	register_timer@delay& (0+255),w,b
  3219  001C44  51B8               	movf	(??_register_timer+9)& (0+255),w,b
  3220  001C46  59A7               	subwfb	(register_timer@delay+1)& (0+255),w,b
  3221  001C48  51B9               	movf	(??_register_timer+10)& (0+255),w,b
  3222  001C4A  59A8               	subwfb	(register_timer@delay+2)& (0+255),w,b
  3223  001C4C  51BA               	movf	(??_register_timer+11)& (0+255),w,b
  3224  001C4E  59A9               	subwfb	(register_timer@delay+3)& (0+255),w,b
  3225  001C50  B0D8               	btfsc	status,0,c
  3226  001C52  EF2D  F00E         	goto	u2171
  3227  001C56  EF2F  F00E         	goto	u2170
  3228  001C5A                     u2171:
  3229  001C5A  EFBA  F00D         	goto	l3005
  3230  001C5E                     u2170:
  3231  001C5E                     l3013:
  3232                           
  3233                           ; BSR set to: 0
  3234                           ;clock.c: 146:         task_list[prev].next = idx;
  3235  001C5E  51C1               	movf	register_timer@idx& (0+255),w,b
  3236  001C60  6FAF               	movwf	??_register_timer& (0+255),b
  3237  001C62  6BB0               	clrf	(??_register_timer+1)& (0+255),b
  3238  001C64  C0BB  F09C         	movff	register_timer@prev,___wmul@multiplier
  3239  001C68  C0BC  F09D         	movff	register_timer@prev+1,___wmul@multiplier+1
  3240  001C6C  0E00               	movlw	0
  3241  001C6E  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3242  001C70  0E0F               	movlw	15
  3243  001C72  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  3244  001C74  ECA5  F01B         	call	___wmul	;wreg free
  3245  001C78  0E6F               	movlw	low (_task_list+11)
  3246  001C7A  0100               	movlb	0	; () banked
  3247  001C7C  259C               	addwf	?___wmul& (0+255),w,b
  3248  001C7E  6ED9               	movwf	fsr2l,c
  3249  001C80  0E01               	movlw	high (_task_list+11)
  3250  001C82  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  3251  001C84  6EDA               	movwf	fsr2h,c
  3252  001C86  C0AF  FFDE         	movff	??_register_timer,postinc2
  3253  001C8A  C0B0  FFDD         	movff	??_register_timer+1,postdec2
  3254  001C8E                     
  3255                           ; BSR set to: 0
  3256                           ;clock.c: 147:         task_list[idx].next = cur;
  3257  001C8E  51C1               	movf	register_timer@idx& (0+255),w,b
  3258  001C90  0D0F               	mullw	15
  3259  001C92  0E6F               	movlw	low (_task_list+11)
  3260  001C94  24F3               	addwf	243,w,c
  3261  001C96  6ED9               	movwf	fsr2l,c
  3262  001C98  0E01               	movlw	high (_task_list+11)
  3263  001C9A  20F4               	addwfc	prodh,w,c
  3264  001C9C  6EDA               	movwf	fsr2h,c
  3265  001C9E  C0BF  FFDE         	movff	register_timer@cur,postinc2
  3266  001CA2  C0C0  FFDD         	movff	register_timer@cur+1,postdec2
  3267  001CA6                     
  3268                           ; BSR set to: 0
  3269                           ;clock.c: 148:         task_list[idx].delay_t = delay - sum;
  3270  001CA6  C0BD  F0AF         	movff	register_timer@sum,??_register_timer
  3271  001CAA  C0BE  F0B0         	movff	register_timer@sum+1,??_register_timer+1
  3272  001CAE  0E00               	movlw	0
  3273  001CB0  BFB0               	btfsc	(??_register_timer+1)& (0+255),7,b
  3274  001CB2  0EFF               	movlw	255
  3275  001CB4  6FB1               	movwf	(??_register_timer+2)& (0+255),b
  3276  001CB6  6FB2               	movwf	(??_register_timer+3)& (0+255),b
  3277  001CB8  51AF               	movf	??_register_timer& (0+255),w,b
  3278  001CBA  5DA6               	subwf	register_timer@delay& (0+255),w,b
  3279  001CBC  6FB3               	movwf	(??_register_timer+4)& (0+255),b
  3280  001CBE  51B0               	movf	(??_register_timer+1)& (0+255),w,b
  3281  001CC0  59A7               	subwfb	(register_timer@delay+1)& (0+255),w,b
  3282  001CC2  6FB4               	movwf	(??_register_timer+5)& (0+255),b
  3283  001CC4  51B1               	movf	(??_register_timer+2)& (0+255),w,b
  3284  001CC6  59A8               	subwfb	(register_timer@delay+2)& (0+255),w,b
  3285  001CC8  6FB5               	movwf	(??_register_timer+6)& (0+255),b
  3286  001CCA  51B2               	movf	(??_register_timer+3)& (0+255),w,b
  3287  001CCC  59A9               	subwfb	(register_timer@delay+3)& (0+255),w,b
  3288  001CCE  6FB6               	movwf	(??_register_timer+7)& (0+255),b
  3289  001CD0  51C1               	movf	register_timer@idx& (0+255),w,b
  3290  001CD2  0D0F               	mullw	15
  3291  001CD4  0E64               	movlw	low _task_list
  3292  001CD6  24F3               	addwf	243,w,c
  3293  001CD8  6ED9               	movwf	fsr2l,c
  3294  001CDA  0E01               	movlw	high _task_list
  3295  001CDC  20F4               	addwfc	prodh,w,c
  3296  001CDE  6EDA               	movwf	fsr2h,c
  3297  001CE0  C0B3  FFDE         	movff	??_register_timer+4,postinc2
  3298  001CE4  C0B4  FFDE         	movff	??_register_timer+5,postinc2
  3299  001CE8  C0B5  FFDE         	movff	??_register_timer+6,postinc2
  3300  001CEC  C0B6  FFDE         	movff	??_register_timer+7,postinc2
  3301  001CF0                     l3019:
  3302                           
  3303                           ; BSR set to: 0
  3304                           ;clock.c: 150:     if(task_list[idx].next != 105)
  3305  001CF0  51C1               	movf	register_timer@idx& (0+255),w,b
  3306  001CF2  0D0F               	mullw	15
  3307  001CF4  0E6F               	movlw	low (_task_list+11)
  3308  001CF6  24F3               	addwf	243,w,c
  3309  001CF8  6ED9               	movwf	fsr2l,c
  3310  001CFA  0E01               	movlw	high (_task_list+11)
  3311  001CFC  20F4               	addwfc	prodh,w,c
  3312  001CFE  6EDA               	movwf	fsr2h,c
  3313  001D00  0E69               	movlw	105
  3314  001D02  18DE               	xorwf	postinc2,w,c
  3315  001D04  10DE               	iorwf	postinc2,w,c
  3316  001D06  B4D8               	btfsc	status,2,c
  3317  001D08  EF88  F00E         	goto	u2181
  3318  001D0C  EF8A  F00E         	goto	u2180
  3319  001D10                     u2181:
  3320  001D10  EFBB  F00E         	goto	l3023
  3321  001D14                     u2180:
  3322  001D14                     
  3323                           ; BSR set to: 0
  3324                           ;clock.c: 151:         task_list[task_list[idx].next].delay_t-= task_list[idx].delay_t;
  3325  001D14  51C1               	movf	register_timer@idx& (0+255),w,b
  3326  001D16  0D0F               	mullw	15
  3327  001D18  0E64               	movlw	low _task_list
  3328  001D1A  24F3               	addwf	243,w,c
  3329  001D1C  6ED9               	movwf	fsr2l,c
  3330  001D1E  0E01               	movlw	high _task_list
  3331  001D20  20F4               	addwfc	prodh,w,c
  3332  001D22  6EDA               	movwf	fsr2h,c
  3333  001D24  CFDE F0AF          	movff	postinc2,??_register_timer
  3334  001D28  CFDE F0B0          	movff	postinc2,??_register_timer+1
  3335  001D2C  CFDE F0B1          	movff	postinc2,??_register_timer+2
  3336  001D30  CFDE F0B2          	movff	postinc2,??_register_timer+3
  3337  001D34  51C1               	movf	register_timer@idx& (0+255),w,b
  3338  001D36  0D0F               	mullw	15
  3339  001D38  0E6F               	movlw	low (_task_list+11)
  3340  001D3A  24F3               	addwf	243,w,c
  3341  001D3C  6ED9               	movwf	fsr2l,c
  3342  001D3E  0E01               	movlw	high (_task_list+11)
  3343  001D40  20F4               	addwfc	prodh,w,c
  3344  001D42  6EDA               	movwf	fsr2h,c
  3345  001D44  CFDE F09C          	movff	postinc2,___wmul@multiplier
  3346  001D48  CFDD F09D          	movff	postdec2,___wmul@multiplier+1
  3347  001D4C  0E00               	movlw	0
  3348  001D4E  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3349  001D50  0E0F               	movlw	15
  3350  001D52  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  3351  001D54  ECA5  F01B         	call	___wmul	;wreg free
  3352  001D58  0E64               	movlw	low _task_list
  3353  001D5A  0100               	movlb	0	; () banked
  3354  001D5C  259C               	addwf	?___wmul& (0+255),w,b
  3355  001D5E  6ED9               	movwf	fsr2l,c
  3356  001D60  0E01               	movlw	high _task_list
  3357  001D62  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  3358  001D64  6EDA               	movwf	fsr2h,c
  3359  001D66  51AF               	movf	??_register_timer& (0+255),w,b
  3360  001D68  5EDE               	subwf	postinc2,f,c
  3361  001D6A  51B0               	movf	(??_register_timer+1)& (0+255),w,b
  3362  001D6C  5ADE               	subwfb	postinc2,f,c
  3363  001D6E  51B1               	movf	(??_register_timer+2)& (0+255),w,b
  3364  001D70  5ADE               	subwfb	postinc2,f,c
  3365  001D72  51B2               	movf	(??_register_timer+3)& (0+255),w,b
  3366  001D74  5ADE               	subwfb	postinc2,f,c
  3367  001D76                     l3023:
  3368                           
  3369                           ; BSR set to: 0
  3370                           ;clock.c: 152:     return idx;
  3371  001D76  51C1               	movf	register_timer@idx& (0+255),w,b
  3372  001D78                     l536:
  3373  001D78  0012               	return		;funcret
  3374  001D7A                     __end_of_register_timer:
  3375                           	opt callstack 0
  3376                           
  3377 ;; *************** function _isFullList *****************
  3378 ;; Defined at:
  3379 ;;		line 77 in file "clock.c"
  3380 ;; Parameters:    Size  Location     Type
  3381 ;;		None
  3382 ;; Auto vars:     Size  Location     Type
  3383 ;;		None
  3384 ;; Return value:  Size  Location     Type
  3385 ;;                  1    wreg      unsigned char 
  3386 ;; Registers used:
  3387 ;;		wreg, status,2, status,0
  3388 ;; Tracked objects:
  3389 ;;		On entry : 0/0
  3390 ;;		On exit  : 0/0
  3391 ;;		Unchanged: 0/0
  3392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3397 ;;Total ram usage:        0 bytes
  3398 ;; Hardware stack levels used:    1
  3399 ;; Hardware stack levels required when called:    5
  3400 ;; This function calls:
  3401 ;;		Nothing
  3402 ;; This function is called by:
  3403 ;;		_register_timer
  3404 ;; This function uses a non-reentrant model
  3405 ;;
  3406                           
  3407                           	psect	text15
  3408  003816                     __ptext15:
  3409                           	opt callstack 0
  3410  003816                     _isFullList:
  3411                           	opt callstack 23
  3412  003816                     
  3413                           ;clock.c: 78:     return num_task == 20 ? 1 : 0;
  3414  003816  0E14               	movlw	20
  3415  003818  0100               	movlb	0	; () banked
  3416  00381A  1991               	xorwf	_num_task& (0+255),w,b
  3417  00381C  B4D8               	btfsc	status,2,c
  3418  00381E  EF13  F01C         	goto	u1851
  3419  003822  EF16  F01C         	goto	u1850
  3420  003826                     u1851:
  3421  003826  0E01               	movlw	1
  3422  003828  EF17  F01C         	goto	u1860
  3423  00382C                     u1850:
  3424  00382C  0E00               	movlw	0
  3425  00382E                     u1860:
  3426  00382E                     
  3427                           ; BSR set to: 0
  3428  00382E  0012               	return		;funcret
  3429  003830                     __end_of_isFullList:
  3430                           	opt callstack 0
  3431                           
  3432 ;; *************** function _dispatch *****************
  3433 ;; Defined at:
  3434 ;;		line 249 in file "clock.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;		None
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;  node            5   20[BANK0 ] struct .
  3439 ;; Return value:  Size  Location     Type
  3440 ;;                  1    wreg      void 
  3441 ;; Registers used:
  3442 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3449 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3451 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3452 ;;Total ram usage:        5 bytes
  3453 ;; Hardware stack levels used:    1
  3454 ;; Hardware stack levels required when called:   11
  3455 ;; This function calls:
  3456 ;;		_changeState
  3457 ;;		_check_humid_to_turn_fan
  3458 ;;		_dequeue
  3459 ;;		_handleButton
  3460 ;;		_isEmptyQueue
  3461 ;;		_print_temp_and_humid
  3462 ;;		_readTempAndHumid
  3463 ;; This function is called by:
  3464 ;;		_main
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468                           	psect	text16
  3469  0032F0                     __ptext16:
  3470                           	opt callstack 0
  3471  0032F0                     _dispatch:
  3472                           	opt callstack 19
  3473  0032F0                     
  3474                           ;clock.c: 250:     while(!isEmptyQueue()) {
  3475  0032F0  EF9F  F019         	goto	l3479
  3476  0032F4                     l3473:
  3477                           
  3478                           ;clock.c: 251:         queue_node node = dequeue();
  3479  0032F4  ECE5  F017         	call	_dequeue	;wreg free
  3480  0032F8  EE20  F0B0         	lfsr	2,dispatch@node
  3481  0032FC  0E04               	movlw	4
  3482  0032FE                     u2641:
  3483  0032FE  CFEB FFDB          	movff	plusw0,plusw2
  3484  003302  06E8               	decf	wreg,f,c
  3485  003304  E2FC               	bc	u2641
  3486  003306                     
  3487                           ;clock.c: 252:         if(node.func_ptr != ((void*)0))
  3488  003306  0100               	movlb	0	; () banked
  3489  003308  51B0               	movf	dispatch@node& (0+255),w,b
  3490  00330A  11B1               	iorwf	(dispatch@node+1)& (0+255),w,b
  3491  00330C  11B2               	iorwf	(dispatch@node+2)& (0+255),w,b
  3492  00330E  B4D8               	btfsc	status,2,c
  3493  003310  EF8C  F019         	goto	u2651
  3494  003314  EF8E  F019         	goto	u2650
  3495  003318                     u2651:
  3496  003318  EF9F  F019         	goto	l3479
  3497  00331C                     u2650:
  3498  00331C                     
  3499                           ; BSR set to: 0
  3500                           ;clock.c: 253:             (node.func_ptr)(node.data_p);
  3501  00331C  C0B3  F09E         	movff	dispatch@node+3,handleButton@data_ptr
  3502  003320  C0B4  F09F         	movff	dispatch@node+4,handleButton@data_ptr+1
  3503  003324  D802               	call	u2668
  3504  003326  EF9F  F019         	goto	u2669
  3505  00332A                     u2668:
  3506  00332A  0005               	push	
  3507  00332C  6EFA               	movwf	pclath,c
  3508  00332E  51B0               	movf	dispatch@node& (0+255),w,b
  3509  003330  6EFD               	movwf	tosl,c
  3510  003332  51B1               	movf	(dispatch@node+1)& (0+255),w,b
  3511  003334  6EFE               	movwf	tosh,c
  3512  003336  51B2               	movf	(dispatch@node+2)& (0+255),w,b
  3513  003338  6EFF               	movwf	tosu,c
  3514  00333A  50FA               	movf	pclath,w,c
  3515  00333C  0012               	return		;indir
  3516  00333E                     u2669:
  3517  00333E                     l3479:
  3518                           
  3519                           ;clock.c: 250:     while(!isEmptyQueue()) {
  3520  00333E  EC35  F01B         	call	_isEmptyQueue	;wreg free
  3521  003342  0900               	iorlw	0
  3522  003344  B4D8               	btfsc	status,2,c
  3523  003346  EFA7  F019         	goto	u2671
  3524  00334A  EFA9  F019         	goto	u2670
  3525  00334E                     u2671:
  3526  00334E  EF7A  F019         	goto	l3473
  3527  003352                     u2670:
  3528  003352  0012               	return		;funcret
  3529  003354                     __end_of_dispatch:
  3530                           	opt callstack 0
  3531                           
  3532 ;; *************** function _readTempAndHumid *****************
  3533 ;; Defined at:
  3534 ;;		line 75 in file "dht11.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;		None
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;		None
  3539 ;; Return value:  Size  Location     Type
  3540 ;;                  1    wreg      void 
  3541 ;; Registers used:
  3542 ;;		wreg, status,2, status,0, cstack
  3543 ;; Tracked objects:
  3544 ;;		On entry : 0/0
  3545 ;;		On exit  : 0/0
  3546 ;;		Unchanged: 0/0
  3547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3552 ;;Total ram usage:        0 bytes
  3553 ;; Hardware stack levels used:    1
  3554 ;; Hardware stack levels required when called:    7
  3555 ;; This function calls:
  3556 ;;		_readDHT
  3557 ;; This function is called by:
  3558 ;;		_main
  3559 ;;		_dispatch
  3560 ;; This function uses a non-reentrant model
  3561 ;;
  3562                           
  3563                           	psect	text17
  3564  0036A0                     __ptext17:
  3565                           	opt callstack 0
  3566  0036A0                     _readTempAndHumid:
  3567                           	opt callstack 22
  3568  0036A0                     
  3569                           ;dht11.c: 76:     if(!readDHT()) {
  3570  0036A0  EC29  F014         	call	_readDHT	;wreg free
  3571  0036A4  0900               	iorlw	0
  3572  0036A6  A4D8               	btfss	status,2,c
  3573  0036A8  EF58  F01B         	goto	u2481
  3574  0036AC  EF5A  F01B         	goto	u2480
  3575  0036B0                     u2481:
  3576  0036B0  EF61  F01B         	goto	l667
  3577  0036B4                     u2480:
  3578  0036B4                     
  3579                           ;dht11.c: 78:         temperature_value = 399;
  3580  0036B4  0E8F               	movlw	143
  3581  0036B6  0100               	movlb	0	; () banked
  3582  0036B8  6F98               	movwf	_temperature_value& (0+255),b
  3583                           
  3584                           ;dht11.c: 79:         humidity_value = 399;
  3585  0036BA  0E8F               	movlw	143
  3586  0036BC  6F99               	movwf	_humidity_value& (0+255),b
  3587  0036BE  EF65  F01B         	goto	l668
  3588  0036C2                     l667:
  3589                           
  3590                           ;dht11.c: 83:     temperature_value = temperature_dht11[0];
  3591  0036C2  C08E  F098         	movff	_temperature_dht11,_temperature_value
  3592                           
  3593                           ;dht11.c: 84:     humidity_value = humidity_dht11[0];
  3594  0036C6  C08C  F099         	movff	_humidity_dht11,_humidity_value
  3595  0036CA                     l668:
  3596  0036CA  0012               	return		;funcret
  3597  0036CC                     __end_of_readTempAndHumid:
  3598                           	opt callstack 0
  3599                           
  3600 ;; *************** function _readDHT *****************
  3601 ;; Defined at:
  3602 ;;		line 22 in file "dht11.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;		None
  3605 ;; Auto vars:     Size  Location     Type
  3606 ;;  timeOut         2    9[BANK0 ] unsigned int 
  3607 ;;  checkSum        1    8[BANK0 ] unsigned char 
  3608 ;; Return value:  Size  Location     Type
  3609 ;;                  1    wreg      unsigned char 
  3610 ;; Registers used:
  3611 ;;		wreg, status,2, status,0, cstack
  3612 ;; Tracked objects:
  3613 ;;		On entry : 0/0
  3614 ;;		On exit  : 0/0
  3615 ;;		Unchanged: 0/0
  3616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3618 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3619 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3620 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3621 ;;Total ram usage:        5 bytes
  3622 ;; Hardware stack levels used:    1
  3623 ;; Hardware stack levels required when called:    6
  3624 ;; This function calls:
  3625 ;;		_getByte
  3626 ;; This function is called by:
  3627 ;;		_readTempAndHumid
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           	psect	text18
  3632  002852                     __ptext18:
  3633                           	opt callstack 0
  3634  002852                     _readDHT:
  3635                           	opt callstack 22
  3636  002852                     
  3637                           ;dht11.c: 24:     char checkSum;;dht11.c: 25:     unsigned int timeOut = 80;
  3638  002852  0E00               	movlw	0
  3639  002854  0100               	movlb	0	; () banked
  3640  002856  6FA6               	movwf	(readDHT@timeOut+1)& (0+255),b
  3641  002858  0E50               	movlw	80
  3642  00285A  6FA5               	movwf	readDHT@timeOut& (0+255),b
  3643  00285C                     
  3644                           ; BSR set to: 0
  3645                           ;dht11.c: 26:     TRISDbits.TRISD0 = 0;
  3646  00285C  9095               	bcf	149,0,c	;volatile
  3647  00285E                     
  3648                           ; BSR set to: 0
  3649                           ;dht11.c: 27:     LATDbits.LATD0 = 0;
  3650  00285E  908C               	bcf	140,0,c	;volatile
  3651  002860                     
  3652                           ; BSR set to: 0
  3653                           ;dht11.c: 28:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3654  002860  0E34               	movlw	52
  3655  002862  0100               	movlb	0	; () banked
  3656  002864  6FA2               	movwf	??_readDHT& (0+255),b
  3657  002866  0EF1               	movlw	241
  3658  002868                     u2947:
  3659  002868  2EE8               	decfsz	wreg,f,c
  3660  00286A  D7FE               	bra	u2947
  3661  00286C  2FA2               	decfsz	??_readDHT& (0+255),f,b
  3662  00286E  D7FC               	bra	u2947
  3663  002870  D000               	nop2	
  3664  002872                     
  3665                           ;dht11.c: 30:     LATDbits.LATD0 = 1;
  3666  002872  808C               	bsf	140,0,c	;volatile
  3667  002874                     
  3668                           ;dht11.c: 31:     _delay((unsigned long)((20)*(8000000/4000000.0)));
  3669  002874  0E0D               	movlw	13
  3670  002876                     u2957:
  3671  002876  2EE8               	decfsz	wreg,f,c
  3672  002878  D7FE               	bra	u2957
  3673  00287A  F000               	nop	
  3674  00287C                     
  3675                           ;dht11.c: 32:     TRISDbits.TRISD0 = 1;
  3676  00287C  8095               	bsf	149,0,c	;volatile
  3677                           
  3678                           ;dht11.c: 34:     while(PORTDbits.RD0 & 1) {
  3679  00287E  EF51  F014         	goto	l651
  3680  002882                     l2853:
  3681                           
  3682                           ;dht11.c: 35:         if(--timeOut == 0)
  3683  002882  0100               	movlb	0	; () banked
  3684  002884  07A5               	decf	readDHT@timeOut& (0+255),f,b
  3685  002886  A0D8               	btfss	status,0,c
  3686  002888  07A6               	decf	(readDHT@timeOut+1)& (0+255),f,b
  3687  00288A  51A5               	movf	readDHT@timeOut& (0+255),w,b
  3688  00288C  11A6               	iorwf	(readDHT@timeOut+1)& (0+255),w,b
  3689  00288E  A4D8               	btfss	status,2,c
  3690  002890  EF4C  F014         	goto	u1871
  3691  002894  EF4E  F014         	goto	u1870
  3692  002898                     u1871:
  3693  002898  EF51  F014         	goto	l651
  3694  00289C                     u1870:
  3695  00289C                     l2855:
  3696                           
  3697                           ; BSR set to: 0
  3698                           ;dht11.c: 36:             return 0;
  3699  00289C  0E00               	movlw	0
  3700  00289E  EFCA  F014         	goto	l654
  3701  0028A2                     l651:
  3702                           
  3703                           ;dht11.c: 34:     while(PORTDbits.RD0 & 1) {
  3704  0028A2  B083               	btfsc	131,0,c	;volatile
  3705  0028A4  EF56  F014         	goto	u1881
  3706  0028A8  EF58  F014         	goto	u1880
  3707  0028AC                     u1881:
  3708  0028AC  EF41  F014         	goto	l2853
  3709  0028B0                     u1880:
  3710  0028B0                     
  3711                           ;dht11.c: 40:     timeOut = 80;
  3712  0028B0  0E00               	movlw	0
  3713  0028B2  0100               	movlb	0	; () banked
  3714  0028B4  6FA6               	movwf	(readDHT@timeOut+1)& (0+255),b
  3715  0028B6  0E50               	movlw	80
  3716  0028B8  6FA5               	movwf	readDHT@timeOut& (0+255),b
  3717                           
  3718                           ;dht11.c: 41:     while(!PORTDbits.RD0 & 1) {
  3719  0028BA  EF6D  F014         	goto	l2867
  3720  0028BE                     l2861:
  3721                           
  3722                           ; BSR set to: 0
  3723                           ;dht11.c: 42:         if(--timeOut == 0)
  3724  0028BE  07A5               	decf	readDHT@timeOut& (0+255),f,b
  3725  0028C0  A0D8               	btfss	status,0,c
  3726  0028C2  07A6               	decf	(readDHT@timeOut+1)& (0+255),f,b
  3727  0028C4  51A5               	movf	readDHT@timeOut& (0+255),w,b
  3728  0028C6  11A6               	iorwf	(readDHT@timeOut+1)& (0+255),w,b
  3729  0028C8  A4D8               	btfss	status,2,c
  3730  0028CA  EF69  F014         	goto	u1891
  3731  0028CE  EF6B  F014         	goto	u1890
  3732  0028D2                     u1891:
  3733  0028D2  EF6D  F014         	goto	l2867
  3734  0028D6                     u1890:
  3735  0028D6  EF4E  F014         	goto	l2855
  3736  0028DA                     l2867:
  3737                           
  3738                           ; BSR set to: 0
  3739                           ;dht11.c: 41:     while(!PORTDbits.RD0 & 1) {
  3740  0028DA  A083               	btfss	131,0,c	;volatile
  3741  0028DC  EF72  F014         	goto	u1901
  3742  0028E0  EF75  F014         	goto	u1900
  3743  0028E4                     u1901:
  3744  0028E4  0E01               	movlw	1
  3745  0028E6  EF76  F014         	goto	u1910
  3746  0028EA                     u1900:
  3747  0028EA  0E00               	movlw	0
  3748  0028EC                     u1910:
  3749  0028EC  6FA2               	movwf	??_readDHT& (0+255),b
  3750  0028EE  6BA3               	clrf	(??_readDHT+1)& (0+255),b
  3751  0028F0  B1A2               	btfsc	??_readDHT& (0+255),0,b
  3752  0028F2  EF7D  F014         	goto	u1921
  3753  0028F6  EF7F  F014         	goto	u1920
  3754  0028FA                     u1921:
  3755  0028FA  EF5F  F014         	goto	l2861
  3756  0028FE                     u1920:
  3757  0028FE                     
  3758                           ; BSR set to: 0
  3759                           ;dht11.c: 46:     timeOut = 80;
  3760  0028FE  0E00               	movlw	0
  3761  002900  6FA6               	movwf	(readDHT@timeOut+1)& (0+255),b
  3762  002902  0E50               	movlw	80
  3763  002904  6FA5               	movwf	readDHT@timeOut& (0+255),b
  3764                           
  3765                           ;dht11.c: 47:     while(PORTDbits.RD0 & 1) {
  3766  002906  EF93  F014         	goto	l660
  3767  00290A                     l2871:
  3768                           
  3769                           ; BSR set to: 0
  3770                           ;dht11.c: 48:         if(--timeOut == 0)
  3771  00290A  07A5               	decf	readDHT@timeOut& (0+255),f,b
  3772  00290C  A0D8               	btfss	status,0,c
  3773  00290E  07A6               	decf	(readDHT@timeOut+1)& (0+255),f,b
  3774  002910  51A5               	movf	readDHT@timeOut& (0+255),w,b
  3775  002912  11A6               	iorwf	(readDHT@timeOut+1)& (0+255),w,b
  3776  002914  A4D8               	btfss	status,2,c
  3777  002916  EF8F  F014         	goto	u1931
  3778  00291A  EF91  F014         	goto	u1930
  3779  00291E                     u1931:
  3780  00291E  EF93  F014         	goto	l660
  3781  002922                     u1930:
  3782  002922  EF4E  F014         	goto	l2855
  3783  002926                     l660:
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;dht11.c: 47:     while(PORTDbits.RD0 & 1) {
  3787  002926  B083               	btfsc	131,0,c	;volatile
  3788  002928  EF98  F014         	goto	u1941
  3789  00292C  EF9A  F014         	goto	u1940
  3790  002930                     u1941:
  3791  002930  EF85  F014         	goto	l2871
  3792  002934                     u1940:
  3793  002934                     
  3794                           ; BSR set to: 0
  3795                           ;dht11.c: 52:     humidity_dht11[0] = getByte();
  3796  002934  EC52  F015         	call	_getByte	;wreg free
  3797  002938  0100               	movlb	0	; () banked
  3798  00293A  6F8C               	movwf	_humidity_dht11& (0+255),b
  3799                           
  3800                           ;dht11.c: 53:     humidity_dht11[1] = getByte();
  3801  00293C  EC52  F015         	call	_getByte	;wreg free
  3802  002940  0100               	movlb	0	; () banked
  3803  002942  6F8D               	movwf	(_humidity_dht11+1)& (0+255),b
  3804                           
  3805                           ;dht11.c: 54:     temperature_dht11[0] = getByte();
  3806  002944  EC52  F015         	call	_getByte	;wreg free
  3807  002948  0100               	movlb	0	; () banked
  3808  00294A  6F8E               	movwf	_temperature_dht11& (0+255),b
  3809                           
  3810                           ;dht11.c: 55:     temperature_dht11[1] = getByte();
  3811  00294C  EC52  F015         	call	_getByte	;wreg free
  3812  002950  0100               	movlb	0	; () banked
  3813  002952  6F8F               	movwf	(_temperature_dht11+1)& (0+255),b
  3814                           
  3815                           ;dht11.c: 56:     checkSum = getByte();
  3816  002954  EC52  F015         	call	_getByte	;wreg free
  3817  002958  0100               	movlb	0	; () banked
  3818  00295A  6FA4               	movwf	readDHT@checkSum& (0+255),b
  3819  00295C                     
  3820                           ; BSR set to: 0
  3821                           ;dht11.c: 70:     if( (char)( humidity_dht11[0] + humidity_dht11[1] + temperature_dht11[
      +                          0] + temperature_dht11[1] ) & 0xFF != checkSum )
  3822  00295C  29A4               	incf	readDHT@checkSum& (0+255),w,b
  3823  00295E  A4D8               	btfss	status,2,c
  3824  002960  EFB4  F014         	goto	u1951
  3825  002964  EFB8  F014         	goto	u1950
  3826  002968                     u1951:
  3827  002968  6BA2               	clrf	??_readDHT& (0+255),b
  3828  00296A  2BA2               	incf	??_readDHT& (0+255),f,b
  3829  00296C  EFBA  F014         	goto	u1968
  3830  002970                     u1950:
  3831  002970  0100               	movlb	0	; () banked
  3832  002972  6BA2               	clrf	??_readDHT& (0+255),b
  3833  002974                     u1968:
  3834  002974  518D               	movf	(_humidity_dht11+1)& (0+255),w,b
  3835  002976  258F               	addwf	(_temperature_dht11+1)& (0+255),w,b
  3836  002978  258C               	addwf	_humidity_dht11& (0+255),w,b
  3837  00297A  258E               	addwf	_temperature_dht11& (0+255),w,b
  3838  00297C  15A2               	andwf	??_readDHT& (0+255),w,b
  3839  00297E  0900               	iorlw	0
  3840  002980  B4D8               	btfsc	status,2,c
  3841  002982  EFC5  F014         	goto	u1971
  3842  002986  EFC7  F014         	goto	u1970
  3843  00298A                     u1971:
  3844  00298A  EFC9  F014         	goto	l2885
  3845  00298E                     u1970:
  3846  00298E  EF4E  F014         	goto	l2855
  3847  002992                     l2885:
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;dht11.c: 72:     return 1;
  3851  002992  0E01               	movlw	1
  3852  002994                     l654:
  3853                           
  3854                           ; BSR set to: 0
  3855  002994  0012               	return		;funcret
  3856  002996                     __end_of_readDHT:
  3857                           	opt callstack 0
  3858                           
  3859 ;; *************** function _getByte *****************
  3860 ;; Defined at:
  3861 ;;		line 3 in file "dht11.c"
  3862 ;; Parameters:    Size  Location     Type
  3863 ;;		None
  3864 ;; Auto vars:     Size  Location     Type
  3865 ;;  timeOut         2    3[BANK0 ] unsigned int 
  3866 ;;  j               1    5[BANK0 ] unsigned char 
  3867 ;;  i               1    2[BANK0 ] unsigned char 
  3868 ;; Return value:  Size  Location     Type
  3869 ;;                  1    wreg      unsigned char 
  3870 ;; Registers used:
  3871 ;;		wreg, status,2, status,0
  3872 ;; Tracked objects:
  3873 ;;		On entry : 0/0
  3874 ;;		On exit  : 0/0
  3875 ;;		Unchanged: 0/0
  3876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3878 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3879 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3880 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3881 ;;Total ram usage:        6 bytes
  3882 ;; Hardware stack levels used:    1
  3883 ;; Hardware stack levels required when called:    5
  3884 ;; This function calls:
  3885 ;;		Nothing
  3886 ;; This function is called by:
  3887 ;;		_readDHT
  3888 ;; This function uses a non-reentrant model
  3889 ;;
  3890                           
  3891                           	psect	text19
  3892  002AA4                     __ptext19:
  3893                           	opt callstack 0
  3894  002AA4                     _getByte:
  3895                           	opt callstack 22
  3896  002AA4                     
  3897                           ;dht11.c: 4:     char i, j;;dht11.c: 5:     unsigned int timeOut;;dht11.c: 6:     for(j 
      +                          = 0; j < 8; j++){
  3898  002AA4  0E00               	movlw	0
  3899  002AA6  0100               	movlb	0	; () banked
  3900  002AA8  6FA1               	movwf	getByte@j& (0+255),b
  3901  002AAA  EF66  F015         	goto	l638
  3902  002AAE                     l2679:
  3903                           
  3904                           ; BSR set to: 0
  3905                           ;dht11.c: 8:             if(--timeOut == 0) return 0;
  3906  002AAE  079F               	decf	getByte@timeOut& (0+255),f,b
  3907  002AB0  A0D8               	btfss	status,0,c
  3908  002AB2  07A0               	decf	(getByte@timeOut+1)& (0+255),f,b
  3909  002AB4  519F               	movf	getByte@timeOut& (0+255),w,b
  3910  002AB6  11A0               	iorwf	(getByte@timeOut+1)& (0+255),w,b
  3911  002AB8  A4D8               	btfss	status,2,c
  3912  002ABA  EF61  F015         	goto	u1571
  3913  002ABE  EF63  F015         	goto	u1570
  3914  002AC2                     u1571:
  3915  002AC2  EF66  F015         	goto	l638
  3916  002AC6                     u1570:
  3917  002AC6                     l2681:
  3918                           
  3919                           ; BSR set to: 0
  3920  002AC6  0E00               	movlw	0
  3921  002AC8  EFC1  F015         	goto	l641
  3922  002ACC                     l638:
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;dht11.c: 7:         while(!PORTDbits.RD0)
  3926  002ACC  A083               	btfss	131,0,c	;volatile
  3927  002ACE  EF6B  F015         	goto	u1581
  3928  002AD2  EF6D  F015         	goto	u1580
  3929  002AD6                     u1581:
  3930  002AD6  EF57  F015         	goto	l2679
  3931  002ADA                     u1580:
  3932  002ADA                     
  3933                           ; BSR set to: 0
  3934                           ;dht11.c: 9:          _delay((unsigned long)((30)*(8000000/4000000.0)));
  3935  002ADA  0E14               	movlw	20
  3936  002ADC                     u2967:
  3937  002ADC  2EE8               	decfsz	wreg,f,c
  3938  002ADE  D7FE               	bra	u2967
  3939  002AE0                     
  3940                           ;dht11.c: 10:         if(PORTDbits.RD0 == 0)
  3941  002AE0  B083               	btfsc	131,0,c	;volatile
  3942  002AE2  EF75  F015         	goto	u1591
  3943  002AE6  EF77  F015         	goto	u1590
  3944  002AEA                     u1591:
  3945  002AEA  EF8B  F015         	goto	l2691
  3946  002AEE                     u1590:
  3947  002AEE                     
  3948                           ;dht11.c: 11:             i&= ~(1<<(7 - j));
  3949  002AEE  0100               	movlb	0	; () banked
  3950  002AF0  51A1               	movf	getByte@j& (0+255),w,b
  3951  002AF2  0807               	sublw	7
  3952  002AF4  6F9C               	movwf	??_getByte& (0+255),b
  3953  002AF6  0E01               	movlw	1
  3954  002AF8  6F9D               	movwf	(??_getByte+1)& (0+255),b
  3955  002AFA  2B9C               	incf	??_getByte& (0+255),f,b
  3956  002AFC  EF82  F015         	goto	u1604
  3957  002B00                     u1605:
  3958  002B00  90D8               	bcf	status,0,c
  3959  002B02  379D               	rlcf	(??_getByte+1)& (0+255),f,b
  3960  002B04                     u1604:
  3961  002B04  2F9C               	decfsz	??_getByte& (0+255),f,b
  3962  002B06  EF80  F015         	goto	u1605
  3963  002B0A  0100               	movlb	0	; () banked
  3964  002B0C  519D               	movf	(??_getByte+1)& (0+255),w,b
  3965  002B0E  0AFF               	xorlw	255
  3966  002B10  179E               	andwf	getByte@i& (0+255),f,b
  3967  002B12  EFB7  F015         	goto	l2701
  3968  002B16                     l2691:
  3969                           
  3970                           ;dht11.c: 13:             i|= (1 << (7 - j));
  3971  002B16  0100               	movlb	0	; () banked
  3972  002B18  51A1               	movf	getByte@j& (0+255),w,b
  3973  002B1A  0807               	sublw	7
  3974  002B1C  6F9C               	movwf	??_getByte& (0+255),b
  3975  002B1E  0E01               	movlw	1
  3976  002B20  6F9D               	movwf	(??_getByte+1)& (0+255),b
  3977  002B22  2B9C               	incf	??_getByte& (0+255),f,b
  3978  002B24  EF96  F015         	goto	u1614
  3979  002B28                     u1615:
  3980  002B28  90D8               	bcf	status,0,c
  3981  002B2A  379D               	rlcf	(??_getByte+1)& (0+255),f,b
  3982  002B2C                     u1614:
  3983  002B2C  2F9C               	decfsz	??_getByte& (0+255),f,b
  3984  002B2E  EF94  F015         	goto	u1615
  3985  002B32  0100               	movlb	0	; () banked
  3986  002B34  519D               	movf	(??_getByte+1)& (0+255),w,b
  3987  002B36  139E               	iorwf	getByte@i& (0+255),f,b
  3988  002B38                     
  3989                           ; BSR set to: 0
  3990                           ;dht11.c: 14:             timeOut = 80;
  3991  002B38  0E00               	movlw	0
  3992  002B3A  6FA0               	movwf	(getByte@timeOut+1)& (0+255),b
  3993  002B3C  0E50               	movlw	80
  3994  002B3E  6F9F               	movwf	getByte@timeOut& (0+255),b
  3995                           
  3996                           ;dht11.c: 15:             while(PORTDbits.RD0)
  3997  002B40  EFB0  F015         	goto	l645
  3998  002B44                     l2695:
  3999                           
  4000                           ; BSR set to: 0
  4001                           ;dht11.c: 16:                 if(--timeOut == 0) return 0;
  4002  002B44  079F               	decf	getByte@timeOut& (0+255),f,b
  4003  002B46  A0D8               	btfss	status,0,c
  4004  002B48  07A0               	decf	(getByte@timeOut+1)& (0+255),f,b
  4005  002B4A  519F               	movf	getByte@timeOut& (0+255),w,b
  4006  002B4C  11A0               	iorwf	(getByte@timeOut+1)& (0+255),w,b
  4007  002B4E  A4D8               	btfss	status,2,c
  4008  002B50  EFAC  F015         	goto	u1621
  4009  002B54  EFAE  F015         	goto	u1620
  4010  002B58                     u1621:
  4011  002B58  EFB0  F015         	goto	l645
  4012  002B5C                     u1620:
  4013  002B5C  EF63  F015         	goto	l2681
  4014  002B60                     l645:
  4015                           
  4016                           ; BSR set to: 0
  4017                           ;dht11.c: 15:             while(PORTDbits.RD0)
  4018  002B60  B083               	btfsc	131,0,c	;volatile
  4019  002B62  EFB5  F015         	goto	u1631
  4020  002B66  EFB7  F015         	goto	u1630
  4021  002B6A                     u1631:
  4022  002B6A  EFA2  F015         	goto	l2695
  4023  002B6E                     u1630:
  4024  002B6E                     l2701:
  4025                           
  4026                           ; BSR set to: 0
  4027                           ;dht11.c: 18:     }
  4028  002B6E  2BA1               	incf	getByte@j& (0+255),f,b
  4029  002B70                     
  4030                           ; BSR set to: 0
  4031  002B70  0E07               	movlw	7
  4032  002B72  65A1               	cpfsgt	getByte@j& (0+255),b
  4033  002B74  EFBE  F015         	goto	u1641
  4034  002B78  EFC0  F015         	goto	u1640
  4035  002B7C                     u1641:
  4036  002B7C  EF66  F015         	goto	l638
  4037  002B80                     u1640:
  4038  002B80                     
  4039                           ; BSR set to: 0
  4040                           ;dht11.c: 19:     return i;
  4041  002B80  519E               	movf	getByte@i& (0+255),w,b
  4042  002B82                     l641:
  4043                           
  4044                           ; BSR set to: 0
  4045  002B82  0012               	return		;funcret
  4046  002B84                     __end_of_getByte:
  4047                           	opt callstack 0
  4048                           
  4049 ;; *************** function _print_temp_and_humid *****************
  4050 ;; Defined at:
  4051 ;;		line 75 in file "mcc.c"
  4052 ;; Parameters:    Size  Location     Type
  4053 ;;		None
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;		None
  4056 ;; Return value:  Size  Location     Type
  4057 ;;                  1    wreg      void 
  4058 ;; Registers used:
  4059 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4060 ;; Tracked objects:
  4061 ;;		On entry : 0/0
  4062 ;;		On exit  : 0/0
  4063 ;;		Unchanged: 0/0
  4064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4069 ;;Total ram usage:        0 bytes
  4070 ;; Hardware stack levels used:    1
  4071 ;; Hardware stack levels required when called:   10
  4072 ;; This function calls:
  4073 ;;		_LCDPrint
  4074 ;;		_LCDPrintChar
  4075 ;;		___awdiv
  4076 ;;		___awmod
  4077 ;; This function is called by:
  4078 ;;		_main
  4079 ;;		_dispatch
  4080 ;; This function uses a non-reentrant model
  4081 ;;
  4082                           
  4083                           	psect	text20
  4084  002C4A                     __ptext20:
  4085                           	opt callstack 0
  4086  002C4A                     _print_temp_and_humid:
  4087                           	opt callstack 19
  4088  002C4A                     
  4089                           ;mcc.c: 76:     LCDPrint(1, 0, "T:");
  4090  002C4A  0E00               	movlw	0
  4091  002C4C  0100               	movlb	0	; () banked
  4092  002C4E  6FA7               	movwf	LCDPrint@pos& (0+255),b
  4093  002C50  0E82               	movlw	low STR_16
  4094  002C52  6FA8               	movwf	LCDPrint@ptr& (0+255),b
  4095  002C54  0E10               	movlw	high STR_16
  4096  002C56  6FA9               	movwf	(LCDPrint@ptr+1)& (0+255),b
  4097  002C58  0E01               	movlw	1
  4098  002C5A  EC54  F01A         	call	_LCDPrint
  4099                           
  4100                           ;mcc.c: 77:     LCDPrint(1, 6, "H:");
  4101  002C5E  0E06               	movlw	6
  4102  002C60  0100               	movlb	0	; () banked
  4103  002C62  6FA7               	movwf	LCDPrint@pos& (0+255),b
  4104  002C64  0E7F               	movlw	low STR_17
  4105  002C66  6FA8               	movwf	LCDPrint@ptr& (0+255),b
  4106  002C68  0E10               	movlw	high STR_17
  4107  002C6A  6FA9               	movwf	(LCDPrint@ptr+1)& (0+255),b
  4108  002C6C  0E01               	movlw	1
  4109  002C6E  EC54  F01A         	call	_LCDPrint
  4110  002C72                     
  4111                           ;mcc.c: 81:         LCDPrintChar(1, 3, temperature_value / 10 + '0');
  4112  002C72  0E03               	movlw	3
  4113  002C74  0100               	movlb	0	; () banked
  4114  002C76  6FA7               	movwf	LCDPrintChar@pos& (0+255),b
  4115  002C78  C098  F09C         	movff	_temperature_value,___awdiv@dividend
  4116  002C7C  6B9D               	clrf	(___awdiv@dividend+1)& (0+255),b
  4117  002C7E  0E00               	movlw	0
  4118  002C80  6F9F               	movwf	(___awdiv@divisor+1)& (0+255),b
  4119  002C82  0E0A               	movlw	10
  4120  002C84  6F9E               	movwf	___awdiv@divisor& (0+255),b
  4121  002C86  ECC2  F015         	call	___awdiv	;wreg free
  4122  002C8A  0100               	movlb	0	; () banked
  4123  002C8C  519C               	movf	?___awdiv& (0+255),w,b
  4124  002C8E  0F30               	addlw	48
  4125  002C90  6FA8               	movwf	LCDPrintChar@ch& (0+255),b
  4126  002C92  0E01               	movlw	1
  4127  002C94  ECF7  F01A         	call	_LCDPrintChar
  4128                           
  4129                           ;mcc.c: 82:         LCDPrintChar(1, 4, temperature_value % 10 + '0');
  4130  002C98  0E04               	movlw	4
  4131  002C9A  0100               	movlb	0	; () banked
  4132  002C9C  6FA7               	movwf	LCDPrintChar@pos& (0+255),b
  4133  002C9E  C098  F09C         	movff	_temperature_value,___awmod@dividend
  4134  002CA2  6B9D               	clrf	(___awmod@dividend+1)& (0+255),b
  4135  002CA4  0E00               	movlw	0
  4136  002CA6  6F9F               	movwf	(___awmod@divisor+1)& (0+255),b
  4137  002CA8  0E0A               	movlw	10
  4138  002CAA  6F9E               	movwf	___awmod@divisor& (0+255),b
  4139  002CAC  EC86  F016         	call	___awmod	;wreg free
  4140  002CB0  0100               	movlb	0	; () banked
  4141  002CB2  519C               	movf	?___awmod& (0+255),w,b
  4142  002CB4  0F30               	addlw	48
  4143  002CB6  6FA8               	movwf	LCDPrintChar@ch& (0+255),b
  4144  002CB8  0E01               	movlw	1
  4145  002CBA  ECF7  F01A         	call	_LCDPrintChar
  4146  002CBE                     
  4147                           ;mcc.c: 87:         LCDPrintChar(1, 8, humidity_value / 10 + '0');
  4148  002CBE  0E08               	movlw	8
  4149  002CC0  0100               	movlb	0	; () banked
  4150  002CC2  6FA7               	movwf	LCDPrintChar@pos& (0+255),b
  4151  002CC4  C099  F09C         	movff	_humidity_value,___awdiv@dividend
  4152  002CC8  6B9D               	clrf	(___awdiv@dividend+1)& (0+255),b
  4153  002CCA  0E00               	movlw	0
  4154  002CCC  6F9F               	movwf	(___awdiv@divisor+1)& (0+255),b
  4155  002CCE  0E0A               	movlw	10
  4156  002CD0  6F9E               	movwf	___awdiv@divisor& (0+255),b
  4157  002CD2  ECC2  F015         	call	___awdiv	;wreg free
  4158  002CD6  0100               	movlb	0	; () banked
  4159  002CD8  519C               	movf	?___awdiv& (0+255),w,b
  4160  002CDA  0F30               	addlw	48
  4161  002CDC  6FA8               	movwf	LCDPrintChar@ch& (0+255),b
  4162  002CDE  0E01               	movlw	1
  4163  002CE0  ECF7  F01A         	call	_LCDPrintChar
  4164                           
  4165                           ;mcc.c: 88:         LCDPrintChar(1, 9, humidity_value % 10 + '0');
  4166  002CE4  0E09               	movlw	9
  4167  002CE6  0100               	movlb	0	; () banked
  4168  002CE8  6FA7               	movwf	LCDPrintChar@pos& (0+255),b
  4169  002CEA  C099  F09C         	movff	_humidity_value,___awmod@dividend
  4170  002CEE  6B9D               	clrf	(___awmod@dividend+1)& (0+255),b
  4171  002CF0  0E00               	movlw	0
  4172  002CF2  6F9F               	movwf	(___awmod@divisor+1)& (0+255),b
  4173  002CF4  0E0A               	movlw	10
  4174  002CF6  6F9E               	movwf	___awmod@divisor& (0+255),b
  4175  002CF8  EC86  F016         	call	___awmod	;wreg free
  4176  002CFC  0100               	movlb	0	; () banked
  4177  002CFE  519C               	movf	?___awmod& (0+255),w,b
  4178  002D00  0F30               	addlw	48
  4179  002D02  6FA8               	movwf	LCDPrintChar@ch& (0+255),b
  4180  002D04  0E01               	movlw	1
  4181  002D06  ECF7  F01A         	call	_LCDPrintChar
  4182  002D0A  0012               	return		;funcret
  4183  002D0C                     __end_of_print_temp_and_humid:
  4184                           	opt callstack 0
  4185                           
  4186 ;; *************** function _handleButton *****************
  4187 ;; Defined at:
  4188 ;;		line 35 in file "buttons.c"
  4189 ;; Parameters:    Size  Location     Type
  4190 ;;  data_ptr        2    2[BANK0 ] PTR void 
  4191 ;;		 -> NULL(0), 
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;  checkRB0        2    8[BANK0 ] int 
  4194 ;;  checkRA5        2    6[BANK0 ] int 
  4195 ;; Return value:  Size  Location     Type
  4196 ;;                  1    wreg      void 
  4197 ;; Registers used:
  4198 ;;		wreg, status,2, status,0, cstack
  4199 ;; Tracked objects:
  4200 ;;		On entry : 0/0
  4201 ;;		On exit  : 0/0
  4202 ;;		Unchanged: 0/0
  4203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4204 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4205 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4206 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4207 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4208 ;;Total ram usage:        8 bytes
  4209 ;; Hardware stack levels used:    1
  4210 ;; Hardware stack levels required when called:    6
  4211 ;; This function calls:
  4212 ;;		_readButtonRA5
  4213 ;;		_readButtonRB0
  4214 ;; This function is called by:
  4215 ;;		_main
  4216 ;;		_dispatch
  4217 ;; This function uses a non-reentrant model
  4218 ;;
  4219                           
  4220                           	psect	text21
  4221  001D7A                     __ptext21:
  4222                           	opt callstack 0
  4223  001D7A                     _handleButton:
  4224                           	opt callstack 23
  4225  001D7A                     
  4226                           ;buttons.c: 36:     int checkRA5 = readButtonRA5();
  4227  001D7A  EC04  F01A         	call	_readButtonRA5	;wreg free
  4228  001D7E  C09C  F0A2         	movff	?_readButtonRA5,handleButton@checkRA5
  4229  001D82  C09D  F0A3         	movff	?_readButtonRA5+1,handleButton@checkRA5+1
  4230                           
  4231                           ;buttons.c: 37:     int checkRB0 = readButtonRB0();
  4232  001D86  ECDB  F019         	call	_readButtonRB0	;wreg free
  4233  001D8A  C09C  F0A4         	movff	?_readButtonRB0,handleButton@checkRB0
  4234  001D8E  C09D  F0A5         	movff	?_readButtonRB0+1,handleButton@checkRB0+1
  4235  001D92                     
  4236                           ;buttons.c: 38:     if(checkRA5 == 2) {
  4237  001D92  0E02               	movlw	2
  4238  001D94  0100               	movlb	0	; () banked
  4239  001D96  19A2               	xorwf	handleButton@checkRA5& (0+255),w,b
  4240  001D98  11A3               	iorwf	(handleButton@checkRA5+1)& (0+255),w,b
  4241  001D9A  A4D8               	btfss	status,2,c
  4242  001D9C  EFD2  F00E         	goto	u2191
  4243  001DA0  EFD4  F00E         	goto	u2190
  4244  001DA4                     u2191:
  4245  001DA4  EF78  F00F         	goto	l3089
  4246  001DA8                     u2190:
  4247  001DA8                     
  4248                           ; BSR set to: 0
  4249                           ;buttons.c: 39:         stateRB0 = 0;
  4250  001DA8  0E00               	movlw	0
  4251  001DAA  6F92               	movwf	_stateRB0& (0+255),b
  4252                           
  4253                           ;buttons.c: 40:         countRB0 = 0;
  4254  001DAC  0E00               	movlw	0
  4255  001DAE  6F78               	movwf	_countRB0& (0+255),b
  4256  001DB0  0E00               	movlw	0
  4257  001DB2  6F79               	movwf	(_countRB0+1)& (0+255),b
  4258  001DB4  0E00               	movlw	0
  4259  001DB6  6F7A               	movwf	(_countRB0+2)& (0+255),b
  4260  001DB8  0E00               	movlw	0
  4261  001DBA  6F7B               	movwf	(_countRB0+3)& (0+255),b
  4262                           
  4263                           ;buttons.c: 41:         countRB0_1 = 0;
  4264  001DBC  0E00               	movlw	0
  4265  001DBE  6F74               	movwf	_countRB0_1& (0+255),b
  4266  001DC0  0E00               	movlw	0
  4267  001DC2  6F75               	movwf	(_countRB0_1+1)& (0+255),b
  4268  001DC4  0E00               	movlw	0
  4269  001DC6  6F76               	movwf	(_countRB0_1+2)& (0+255),b
  4270  001DC8  0E00               	movlw	0
  4271  001DCA  6F77               	movwf	(_countRB0_1+3)& (0+255),b
  4272                           
  4273                           ;buttons.c: 42:         switch(stateRA5) {
  4274  001DCC  EF5B  F00F         	goto	l3087
  4275  001DD0                     l3067:
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;buttons.c: 44:                 RA5_pressed = 1;
  4279  001DD0  0E01               	movlw	1
  4280  001DD2  6F9B               	movwf	_RA5_pressed& (0+255),b
  4281                           
  4282                           ;buttons.c: 45:                 stateRA5 = 1;
  4283  001DD4  0E01               	movlw	1
  4284  001DD6  6F93               	movwf	_stateRA5& (0+255),b
  4285                           
  4286                           ;buttons.c: 46:                 break;
  4287  001DD8  EF5C  F010         	goto	l207
  4288  001DDC                     l3069:
  4289                           
  4290                           ; BSR set to: 0
  4291                           ;buttons.c: 48:                 countRA5++;
  4292  001DDC  0E01               	movlw	1
  4293  001DDE  2780               	addwf	_countRA5& (0+255),f,b
  4294  001DE0  0E00               	movlw	0
  4295  001DE2  2381               	addwfc	(_countRA5+1)& (0+255),f,b
  4296  001DE4  2382               	addwfc	(_countRA5+2)& (0+255),f,b
  4297  001DE6  2383               	addwfc	(_countRA5+3)& (0+255),f,b
  4298                           
  4299                           ;buttons.c: 49:                 if(countRA5 >= 1000 / 80) {
  4300  001DE8  5183               	movf	(_countRA5+3)& (0+255),w,b
  4301  001DEA  1182               	iorwf	(_countRA5+2)& (0+255),w,b
  4302  001DEC  1181               	iorwf	(_countRA5+1)& (0+255),w,b
  4303  001DEE  E109               	bnz	u2200
  4304  001DF0  0E0C               	movlw	12
  4305  001DF2  5D80               	subwf	_countRA5& (0+255),w,b
  4306  001DF4  A0D8               	btfss	status,0,c
  4307  001DF6  EFFF  F00E         	goto	u2201
  4308  001DFA  EF01  F00F         	goto	u2200
  4309  001DFE                     u2201:
  4310  001DFE  EF5C  F010         	goto	l207
  4311  001E02                     u2200:
  4312  001E02                     
  4313                           ; BSR set to: 0
  4314                           ;buttons.c: 50:                     RA5_pressed = 1;
  4315  001E02  0E01               	movlw	1
  4316  001E04  6F9B               	movwf	_RA5_pressed& (0+255),b
  4317                           
  4318                           ;buttons.c: 51:                     stateRA5 = 2;
  4319  001E06  0E02               	movlw	2
  4320  001E08  6F93               	movwf	_stateRA5& (0+255),b
  4321  001E0A  EF5C  F010         	goto	l207
  4322  001E0E                     l3073:
  4323                           
  4324                           ; BSR set to: 0
  4325                           ;buttons.c: 55:                 countRA5++;
  4326  001E0E  0E01               	movlw	1
  4327  001E10  2780               	addwf	_countRA5& (0+255),f,b
  4328  001E12  0E00               	movlw	0
  4329  001E14  2381               	addwfc	(_countRA5+1)& (0+255),f,b
  4330  001E16  2382               	addwfc	(_countRA5+2)& (0+255),f,b
  4331  001E18  2383               	addwfc	(_countRA5+3)& (0+255),f,b
  4332                           
  4333                           ;buttons.c: 56:                 countRA5_1++;
  4334  001E1A  0E01               	movlw	1
  4335  001E1C  277C               	addwf	_countRA5_1& (0+255),f,b
  4336  001E1E  0E00               	movlw	0
  4337  001E20  237D               	addwfc	(_countRA5_1+1)& (0+255),f,b
  4338  001E22  237E               	addwfc	(_countRA5_1+2)& (0+255),f,b
  4339  001E24  237F               	addwfc	(_countRA5_1+3)& (0+255),f,b
  4340                           
  4341                           ;buttons.c: 57:                 if(countRA5_1 == 600 / 80) {
  4342  001E26  0E07               	movlw	7
  4343  001E28  197C               	xorwf	_countRA5_1& (0+255),w,b
  4344  001E2A  117D               	iorwf	(_countRA5_1+1)& (0+255),w,b
  4345  001E2C  117E               	iorwf	(_countRA5_1+2)& (0+255),w,b
  4346  001E2E  117F               	iorwf	(_countRA5_1+3)& (0+255),w,b
  4347  001E30  A4D8               	btfss	status,2,c
  4348  001E32  EF1D  F00F         	goto	u2211
  4349  001E36  EF1F  F00F         	goto	u2210
  4350  001E3A                     u2211:
  4351  001E3A  EF29  F00F         	goto	l3077
  4352  001E3E                     u2210:
  4353  001E3E                     
  4354                           ; BSR set to: 0
  4355                           ;buttons.c: 58:                     RA5_pressed = 1;
  4356  001E3E  0E01               	movlw	1
  4357  001E40  6F9B               	movwf	_RA5_pressed& (0+255),b
  4358                           
  4359                           ;buttons.c: 59:                     countRA5_1 = 0;
  4360  001E42  0E00               	movlw	0
  4361  001E44  6F7C               	movwf	_countRA5_1& (0+255),b
  4362  001E46  0E00               	movlw	0
  4363  001E48  6F7D               	movwf	(_countRA5_1+1)& (0+255),b
  4364  001E4A  0E00               	movlw	0
  4365  001E4C  6F7E               	movwf	(_countRA5_1+2)& (0+255),b
  4366  001E4E  0E00               	movlw	0
  4367  001E50  6F7F               	movwf	(_countRA5_1+3)& (0+255),b
  4368  001E52                     l3077:
  4369                           
  4370                           ; BSR set to: 0
  4371                           ;buttons.c: 61:                 if(countRA5 >= 3000 / 80) {
  4372  001E52  5183               	movf	(_countRA5+3)& (0+255),w,b
  4373  001E54  1182               	iorwf	(_countRA5+2)& (0+255),w,b
  4374  001E56  1181               	iorwf	(_countRA5+1)& (0+255),w,b
  4375  001E58  E109               	bnz	u2220
  4376  001E5A  0E25               	movlw	37
  4377  001E5C  5D80               	subwf	_countRA5& (0+255),w,b
  4378  001E5E  A0D8               	btfss	status,0,c
  4379  001E60  EF34  F00F         	goto	u2221
  4380  001E64  EF36  F00F         	goto	u2220
  4381  001E68                     u2221:
  4382  001E68  EF5C  F010         	goto	l207
  4383  001E6C                     u2220:
  4384  001E6C                     
  4385                           ; BSR set to: 0
  4386                           ;buttons.c: 62:                     RA5_pressed = 1;
  4387  001E6C  0E01               	movlw	1
  4388  001E6E  6F9B               	movwf	_RA5_pressed& (0+255),b
  4389                           
  4390                           ;buttons.c: 63:                     stateRA5 = 3;
  4391  001E70  0E03               	movlw	3
  4392  001E72  6F93               	movwf	_stateRA5& (0+255),b
  4393  001E74  EF5C  F010         	goto	l207
  4394  001E78                     l3081:
  4395                           
  4396                           ; BSR set to: 0
  4397                           ;buttons.c: 67:                 countRA5++;
  4398  001E78  0E01               	movlw	1
  4399  001E7A  2780               	addwf	_countRA5& (0+255),f,b
  4400  001E7C  0E00               	movlw	0
  4401  001E7E  2381               	addwfc	(_countRA5+1)& (0+255),f,b
  4402  001E80  2382               	addwfc	(_countRA5+2)& (0+255),f,b
  4403  001E82  2383               	addwfc	(_countRA5+3)& (0+255),f,b
  4404                           
  4405                           ;buttons.c: 68:                 if(countRA5 >= 200 / 80) {
  4406  001E84  5183               	movf	(_countRA5+3)& (0+255),w,b
  4407  001E86  1182               	iorwf	(_countRA5+2)& (0+255),w,b
  4408  001E88  1181               	iorwf	(_countRA5+1)& (0+255),w,b
  4409  001E8A  E109               	bnz	u2230
  4410  001E8C  0E02               	movlw	2
  4411  001E8E  5D80               	subwf	_countRA5& (0+255),w,b
  4412  001E90  A0D8               	btfss	status,0,c
  4413  001E92  EF4D  F00F         	goto	u2231
  4414  001E96  EF4F  F00F         	goto	u2230
  4415  001E9A                     u2231:
  4416  001E9A  EF5C  F010         	goto	l207
  4417  001E9E                     u2230:
  4418  001E9E                     
  4419                           ; BSR set to: 0
  4420                           ;buttons.c: 69:                     RA5_pressed = 1;
  4421  001E9E  0E01               	movlw	1
  4422  001EA0  6F9B               	movwf	_RA5_pressed& (0+255),b
  4423                           
  4424                           ;buttons.c: 70:                     countRA5 = 0;
  4425  001EA2  0E00               	movlw	0
  4426  001EA4  6F80               	movwf	_countRA5& (0+255),b
  4427  001EA6  0E00               	movlw	0
  4428  001EA8  6F81               	movwf	(_countRA5+1)& (0+255),b
  4429  001EAA  0E00               	movlw	0
  4430  001EAC  6F82               	movwf	(_countRA5+2)& (0+255),b
  4431  001EAE  0E00               	movlw	0
  4432  001EB0  6F83               	movwf	(_countRA5+3)& (0+255),b
  4433  001EB2  EF5C  F010         	goto	l207
  4434  001EB6                     l3087:
  4435                           
  4436                           ; BSR set to: 0
  4437  001EB6  5193               	movf	_stateRA5& (0+255),w,b
  4438  001EB8  6FA0               	movwf	??_handleButton& (0+255),b
  4439  001EBA  6BA1               	clrf	(??_handleButton+1)& (0+255),b
  4440                           
  4441                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4442                           ; Switch size 1, requested type "simple"
  4443                           ; Number of cases is 1, Range of values is 0 to 0
  4444                           ; switch strategies available:
  4445                           ; Name         Instructions Cycles
  4446                           ; simple_byte            4     3 (average)
  4447                           ;	Chosen strategy is simple_byte
  4448  001EBC  51A1               	movf	(??_handleButton+1)& (0+255),w,b
  4449  001EBE  0A00               	xorlw	0	; case 0
  4450  001EC0  B4D8               	btfsc	status,2,c
  4451  001EC2  EF65  F00F         	goto	l3791
  4452  001EC6  EF5C  F010         	goto	l207
  4453  001ECA                     l3791:
  4454                           
  4455                           ; BSR set to: 0
  4456                           ; Switch size 1, requested type "simple"
  4457                           ; Number of cases is 4, Range of values is 0 to 3
  4458                           ; switch strategies available:
  4459                           ; Name         Instructions Cycles
  4460                           ; simple_byte           13     7 (average)
  4461                           ;	Chosen strategy is simple_byte
  4462  001ECA  51A0               	movf	??_handleButton& (0+255),w,b
  4463  001ECC  0A00               	xorlw	0	; case 0
  4464  001ECE  B4D8               	btfsc	status,2,c
  4465  001ED0  EFE8  F00E         	goto	l3067
  4466  001ED4  0A01               	xorlw	1	; case 1
  4467  001ED6  B4D8               	btfsc	status,2,c
  4468  001ED8  EFEE  F00E         	goto	l3069
  4469  001EDC  0A03               	xorlw	3	; case 2
  4470  001EDE  B4D8               	btfsc	status,2,c
  4471  001EE0  EF07  F00F         	goto	l3073
  4472  001EE4  0A01               	xorlw	1	; case 3
  4473  001EE6  B4D8               	btfsc	status,2,c
  4474  001EE8  EF3C  F00F         	goto	l3081
  4475  001EEC  EF5C  F010         	goto	l207
  4476  001EF0                     l3089:
  4477                           
  4478                           ; BSR set to: 0
  4479  001EF0  0E02               	movlw	2
  4480  001EF2  19A4               	xorwf	handleButton@checkRB0& (0+255),w,b
  4481  001EF4  11A5               	iorwf	(handleButton@checkRB0+1)& (0+255),w,b
  4482  001EF6  A4D8               	btfss	status,2,c
  4483  001EF8  EF80  F00F         	goto	u2241
  4484  001EFC  EF82  F00F         	goto	u2240
  4485  001F00                     u2241:
  4486  001F00  EF26  F010         	goto	l3115
  4487  001F04                     u2240:
  4488  001F04                     
  4489                           ; BSR set to: 0
  4490                           ;buttons.c: 76:         stateRA5 = 0;
  4491  001F04  0E00               	movlw	0
  4492  001F06  6F93               	movwf	_stateRA5& (0+255),b
  4493                           
  4494                           ;buttons.c: 77:         countRA5 = 0;
  4495  001F08  0E00               	movlw	0
  4496  001F0A  6F80               	movwf	_countRA5& (0+255),b
  4497  001F0C  0E00               	movlw	0
  4498  001F0E  6F81               	movwf	(_countRA5+1)& (0+255),b
  4499  001F10  0E00               	movlw	0
  4500  001F12  6F82               	movwf	(_countRA5+2)& (0+255),b
  4501  001F14  0E00               	movlw	0
  4502  001F16  6F83               	movwf	(_countRA5+3)& (0+255),b
  4503                           
  4504                           ;buttons.c: 78:         countRA5_1 = 0;
  4505  001F18  0E00               	movlw	0
  4506  001F1A  6F7C               	movwf	_countRA5_1& (0+255),b
  4507  001F1C  0E00               	movlw	0
  4508  001F1E  6F7D               	movwf	(_countRA5_1+1)& (0+255),b
  4509  001F20  0E00               	movlw	0
  4510  001F22  6F7E               	movwf	(_countRA5_1+2)& (0+255),b
  4511  001F24  0E00               	movlw	0
  4512  001F26  6F7F               	movwf	(_countRA5_1+3)& (0+255),b
  4513                           
  4514                           ;buttons.c: 79:         switch(stateRB0) {
  4515  001F28  EF09  F010         	goto	l3113
  4516  001F2C                     l3093:
  4517                           
  4518                           ; BSR set to: 0
  4519                           ;buttons.c: 81:                 RB0_pressed = 1;
  4520  001F2C  0E01               	movlw	1
  4521  001F2E  6F9A               	movwf	_RB0_pressed& (0+255),b
  4522                           
  4523                           ;buttons.c: 82:                 stateRB0 = 1;
  4524  001F30  0E01               	movlw	1
  4525  001F32  6F92               	movwf	_stateRB0& (0+255),b
  4526                           
  4527                           ;buttons.c: 83:                 break;
  4528  001F34  EF5C  F010         	goto	l207
  4529  001F38                     l3095:
  4530                           
  4531                           ; BSR set to: 0
  4532                           ;buttons.c: 85:                 countRB0++;
  4533  001F38  0E01               	movlw	1
  4534  001F3A  2778               	addwf	_countRB0& (0+255),f,b
  4535  001F3C  0E00               	movlw	0
  4536  001F3E  2379               	addwfc	(_countRB0+1)& (0+255),f,b
  4537  001F40  237A               	addwfc	(_countRB0+2)& (0+255),f,b
  4538  001F42  237B               	addwfc	(_countRB0+3)& (0+255),f,b
  4539                           
  4540                           ;buttons.c: 86:                 if(countRB0 >= 1000 / 80) {
  4541  001F44  517B               	movf	(_countRB0+3)& (0+255),w,b
  4542  001F46  117A               	iorwf	(_countRB0+2)& (0+255),w,b
  4543  001F48  1179               	iorwf	(_countRB0+1)& (0+255),w,b
  4544  001F4A  E109               	bnz	u2250
  4545  001F4C  0E0C               	movlw	12
  4546  001F4E  5D78               	subwf	_countRB0& (0+255),w,b
  4547  001F50  A0D8               	btfss	status,0,c
  4548  001F52  EFAD  F00F         	goto	u2251
  4549  001F56  EFAF  F00F         	goto	u2250
  4550  001F5A                     u2251:
  4551  001F5A  EF5C  F010         	goto	l207
  4552  001F5E                     u2250:
  4553  001F5E                     
  4554                           ; BSR set to: 0
  4555                           ;buttons.c: 87:                     RB0_pressed = 1;
  4556  001F5E  0E01               	movlw	1
  4557  001F60  6F9A               	movwf	_RB0_pressed& (0+255),b
  4558                           
  4559                           ;buttons.c: 88:                     stateRB0 = 2;
  4560  001F62  0E02               	movlw	2
  4561  001F64  6F92               	movwf	_stateRB0& (0+255),b
  4562  001F66  EF5C  F010         	goto	l207
  4563  001F6A                     l3099:
  4564                           
  4565                           ; BSR set to: 0
  4566                           ;buttons.c: 92:                 countRB0++;
  4567  001F6A  0E01               	movlw	1
  4568  001F6C  2778               	addwf	_countRB0& (0+255),f,b
  4569  001F6E  0E00               	movlw	0
  4570  001F70  2379               	addwfc	(_countRB0+1)& (0+255),f,b
  4571  001F72  237A               	addwfc	(_countRB0+2)& (0+255),f,b
  4572  001F74  237B               	addwfc	(_countRB0+3)& (0+255),f,b
  4573                           
  4574                           ;buttons.c: 93:                 countRB0_1++;
  4575  001F76  0E01               	movlw	1
  4576  001F78  2774               	addwf	_countRB0_1& (0+255),f,b
  4577  001F7A  0E00               	movlw	0
  4578  001F7C  2375               	addwfc	(_countRB0_1+1)& (0+255),f,b
  4579  001F7E  2376               	addwfc	(_countRB0_1+2)& (0+255),f,b
  4580  001F80  2377               	addwfc	(_countRB0_1+3)& (0+255),f,b
  4581                           
  4582                           ;buttons.c: 94:                 if(countRB0_1 == 600 / 80) {
  4583  001F82  0E07               	movlw	7
  4584  001F84  1974               	xorwf	_countRB0_1& (0+255),w,b
  4585  001F86  1175               	iorwf	(_countRB0_1+1)& (0+255),w,b
  4586  001F88  1176               	iorwf	(_countRB0_1+2)& (0+255),w,b
  4587  001F8A  1177               	iorwf	(_countRB0_1+3)& (0+255),w,b
  4588  001F8C  A4D8               	btfss	status,2,c
  4589  001F8E  EFCB  F00F         	goto	u2261
  4590  001F92  EFCD  F00F         	goto	u2260
  4591  001F96                     u2261:
  4592  001F96  EFD7  F00F         	goto	l3103
  4593  001F9A                     u2260:
  4594  001F9A                     
  4595                           ; BSR set to: 0
  4596                           ;buttons.c: 95:                     RB0_pressed = 1;
  4597  001F9A  0E01               	movlw	1
  4598  001F9C  6F9A               	movwf	_RB0_pressed& (0+255),b
  4599                           
  4600                           ;buttons.c: 96:                     countRB0_1 = 0;
  4601  001F9E  0E00               	movlw	0
  4602  001FA0  6F74               	movwf	_countRB0_1& (0+255),b
  4603  001FA2  0E00               	movlw	0
  4604  001FA4  6F75               	movwf	(_countRB0_1+1)& (0+255),b
  4605  001FA6  0E00               	movlw	0
  4606  001FA8  6F76               	movwf	(_countRB0_1+2)& (0+255),b
  4607  001FAA  0E00               	movlw	0
  4608  001FAC  6F77               	movwf	(_countRB0_1+3)& (0+255),b
  4609  001FAE                     l3103:
  4610                           
  4611                           ; BSR set to: 0
  4612                           ;buttons.c: 98:                 if(countRB0 >= 3000 / 80) {
  4613  001FAE  517B               	movf	(_countRB0+3)& (0+255),w,b
  4614  001FB0  117A               	iorwf	(_countRB0+2)& (0+255),w,b
  4615  001FB2  1179               	iorwf	(_countRB0+1)& (0+255),w,b
  4616  001FB4  E109               	bnz	u2270
  4617  001FB6  0E25               	movlw	37
  4618  001FB8  5D78               	subwf	_countRB0& (0+255),w,b
  4619  001FBA  A0D8               	btfss	status,0,c
  4620  001FBC  EFE2  F00F         	goto	u2271
  4621  001FC0  EFE4  F00F         	goto	u2270
  4622  001FC4                     u2271:
  4623  001FC4  EF5C  F010         	goto	l207
  4624  001FC8                     u2270:
  4625  001FC8                     
  4626                           ; BSR set to: 0
  4627                           ;buttons.c: 99:                     RB0_pressed = 1;
  4628  001FC8  0E01               	movlw	1
  4629  001FCA  6F9A               	movwf	_RB0_pressed& (0+255),b
  4630                           
  4631                           ;buttons.c: 100:                     stateRB0 = 3;
  4632  001FCC  0E03               	movlw	3
  4633  001FCE  6F92               	movwf	_stateRB0& (0+255),b
  4634  001FD0  EF5C  F010         	goto	l207
  4635  001FD4                     l3107:
  4636                           
  4637                           ; BSR set to: 0
  4638                           ;buttons.c: 104:                 countRB0++;
  4639  001FD4  0E01               	movlw	1
  4640  001FD6  2778               	addwf	_countRB0& (0+255),f,b
  4641  001FD8  0E00               	movlw	0
  4642  001FDA  2379               	addwfc	(_countRB0+1)& (0+255),f,b
  4643  001FDC  237A               	addwfc	(_countRB0+2)& (0+255),f,b
  4644  001FDE  237B               	addwfc	(_countRB0+3)& (0+255),f,b
  4645                           
  4646                           ;buttons.c: 105:                 if(countRB0 >= 200 / 80) {
  4647  001FE0  517B               	movf	(_countRB0+3)& (0+255),w,b
  4648  001FE2  117A               	iorwf	(_countRB0+2)& (0+255),w,b
  4649  001FE4  1179               	iorwf	(_countRB0+1)& (0+255),w,b
  4650  001FE6  E109               	bnz	u2280
  4651  001FE8  0E02               	movlw	2
  4652  001FEA  5D78               	subwf	_countRB0& (0+255),w,b
  4653  001FEC  A0D8               	btfss	status,0,c
  4654  001FEE  EFFB  F00F         	goto	u2281
  4655  001FF2  EFFD  F00F         	goto	u2280
  4656  001FF6                     u2281:
  4657  001FF6  EF5C  F010         	goto	l207
  4658  001FFA                     u2280:
  4659  001FFA                     
  4660                           ; BSR set to: 0
  4661                           ;buttons.c: 106:                     RB0_pressed = 1;
  4662  001FFA  0E01               	movlw	1
  4663  001FFC  6F9A               	movwf	_RB0_pressed& (0+255),b
  4664                           
  4665                           ;buttons.c: 107:                     countRB0 = 0;
  4666  001FFE  0E00               	movlw	0
  4667  002000  6F78               	movwf	_countRB0& (0+255),b
  4668  002002  0E00               	movlw	0
  4669  002004  6F79               	movwf	(_countRB0+1)& (0+255),b
  4670  002006  0E00               	movlw	0
  4671  002008  6F7A               	movwf	(_countRB0+2)& (0+255),b
  4672  00200A  0E00               	movlw	0
  4673  00200C  6F7B               	movwf	(_countRB0+3)& (0+255),b
  4674  00200E  EF5C  F010         	goto	l207
  4675  002012                     l3113:
  4676                           
  4677                           ; BSR set to: 0
  4678  002012  5192               	movf	_stateRB0& (0+255),w,b
  4679  002014  6FA0               	movwf	??_handleButton& (0+255),b
  4680  002016  6BA1               	clrf	(??_handleButton+1)& (0+255),b
  4681                           
  4682                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4683                           ; Switch size 1, requested type "simple"
  4684                           ; Number of cases is 1, Range of values is 0 to 0
  4685                           ; switch strategies available:
  4686                           ; Name         Instructions Cycles
  4687                           ; simple_byte            4     3 (average)
  4688                           ;	Chosen strategy is simple_byte
  4689  002018  51A1               	movf	(??_handleButton+1)& (0+255),w,b
  4690  00201A  0A00               	xorlw	0	; case 0
  4691  00201C  B4D8               	btfsc	status,2,c
  4692  00201E  EF13  F010         	goto	l3793
  4693  002022  EF5C  F010         	goto	l207
  4694  002026                     l3793:
  4695                           
  4696                           ; BSR set to: 0
  4697                           ; Switch size 1, requested type "simple"
  4698                           ; Number of cases is 4, Range of values is 0 to 3
  4699                           ; switch strategies available:
  4700                           ; Name         Instructions Cycles
  4701                           ; simple_byte           13     7 (average)
  4702                           ;	Chosen strategy is simple_byte
  4703  002026  51A0               	movf	??_handleButton& (0+255),w,b
  4704  002028  0A00               	xorlw	0	; case 0
  4705  00202A  B4D8               	btfsc	status,2,c
  4706  00202C  EF96  F00F         	goto	l3093
  4707  002030  0A01               	xorlw	1	; case 1
  4708  002032  B4D8               	btfsc	status,2,c
  4709  002034  EF9C  F00F         	goto	l3095
  4710  002038  0A03               	xorlw	3	; case 2
  4711  00203A  B4D8               	btfsc	status,2,c
  4712  00203C  EFB5  F00F         	goto	l3099
  4713  002040  0A01               	xorlw	1	; case 3
  4714  002042  B4D8               	btfsc	status,2,c
  4715  002044  EFEA  F00F         	goto	l3107
  4716  002048  EF5C  F010         	goto	l207
  4717  00204C                     l3115:
  4718                           
  4719                           ; BSR set to: 0
  4720  00204C  05A4               	decf	handleButton@checkRB0& (0+255),w,b
  4721  00204E  11A5               	iorwf	(handleButton@checkRB0+1)& (0+255),w,b
  4722  002050  B4D8               	btfsc	status,2,c
  4723  002052  EF2D  F010         	goto	u2291
  4724  002056  EF2F  F010         	goto	u2290
  4725  00205A                     u2291:
  4726  00205A  EF38  F010         	goto	l3119
  4727  00205E                     u2290:
  4728  00205E                     
  4729                           ; BSR set to: 0
  4730  00205E  05A2               	decf	handleButton@checkRA5& (0+255),w,b
  4731  002060  11A3               	iorwf	(handleButton@checkRA5+1)& (0+255),w,b
  4732  002062  A4D8               	btfss	status,2,c
  4733  002064  EF36  F010         	goto	u2301
  4734  002068  EF38  F010         	goto	u2300
  4735  00206C                     u2301:
  4736  00206C  EF5C  F010         	goto	l207
  4737  002070                     u2300:
  4738  002070                     l3119:
  4739                           
  4740                           ; BSR set to: 0
  4741                           ;buttons.c: 113:         countRA5 = 0;
  4742  002070  0E00               	movlw	0
  4743  002072  6F80               	movwf	_countRA5& (0+255),b
  4744  002074  0E00               	movlw	0
  4745  002076  6F81               	movwf	(_countRA5+1)& (0+255),b
  4746  002078  0E00               	movlw	0
  4747  00207A  6F82               	movwf	(_countRA5+2)& (0+255),b
  4748  00207C  0E00               	movlw	0
  4749  00207E  6F83               	movwf	(_countRA5+3)& (0+255),b
  4750                           
  4751                           ;buttons.c: 114:         countRA5_1 = 0;
  4752  002080  0E00               	movlw	0
  4753  002082  6F7C               	movwf	_countRA5_1& (0+255),b
  4754  002084  0E00               	movlw	0
  4755  002086  6F7D               	movwf	(_countRA5_1+1)& (0+255),b
  4756  002088  0E00               	movlw	0
  4757  00208A  6F7E               	movwf	(_countRA5_1+2)& (0+255),b
  4758  00208C  0E00               	movlw	0
  4759  00208E  6F7F               	movwf	(_countRA5_1+3)& (0+255),b
  4760                           
  4761                           ;buttons.c: 115:         countRB0 = 0;
  4762  002090  0E00               	movlw	0
  4763  002092  6F78               	movwf	_countRB0& (0+255),b
  4764  002094  0E00               	movlw	0
  4765  002096  6F79               	movwf	(_countRB0+1)& (0+255),b
  4766  002098  0E00               	movlw	0
  4767  00209A  6F7A               	movwf	(_countRB0+2)& (0+255),b
  4768  00209C  0E00               	movlw	0
  4769  00209E  6F7B               	movwf	(_countRB0+3)& (0+255),b
  4770                           
  4771                           ;buttons.c: 116:         countRB0_1 = 0;
  4772  0020A0  0E00               	movlw	0
  4773  0020A2  6F74               	movwf	_countRB0_1& (0+255),b
  4774  0020A4  0E00               	movlw	0
  4775  0020A6  6F75               	movwf	(_countRB0_1+1)& (0+255),b
  4776  0020A8  0E00               	movlw	0
  4777  0020AA  6F76               	movwf	(_countRB0_1+2)& (0+255),b
  4778  0020AC  0E00               	movlw	0
  4779  0020AE  6F77               	movwf	(_countRB0_1+3)& (0+255),b
  4780                           
  4781                           ;buttons.c: 117:         stateRA5 = 0;
  4782  0020B0  0E00               	movlw	0
  4783  0020B2  6F93               	movwf	_stateRA5& (0+255),b
  4784                           
  4785                           ;buttons.c: 118:         stateRB0 = 0;
  4786  0020B4  0E00               	movlw	0
  4787  0020B6  6F92               	movwf	_stateRB0& (0+255),b
  4788  0020B8                     l207:
  4789                           
  4790                           ; BSR set to: 0
  4791  0020B8  0012               	return		;funcret
  4792  0020BA                     __end_of_handleButton:
  4793                           	opt callstack 0
  4794                           
  4795 ;; *************** function _readButtonRB0 *****************
  4796 ;; Defined at:
  4797 ;;		line 26 in file "buttons.c"
  4798 ;; Parameters:    Size  Location     Type
  4799 ;;		None
  4800 ;; Auto vars:     Size  Location     Type
  4801 ;;		None
  4802 ;; Return value:  Size  Location     Type
  4803 ;;                  2    0[BANK0 ] int 
  4804 ;; Registers used:
  4805 ;;		wreg, status,2, status,0
  4806 ;; Tracked objects:
  4807 ;;		On entry : 0/0
  4808 ;;		On exit  : 0/0
  4809 ;;		Unchanged: 0/0
  4810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4811 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4814 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4815 ;;Total ram usage:        2 bytes
  4816 ;; Hardware stack levels used:    1
  4817 ;; Hardware stack levels required when called:    5
  4818 ;; This function calls:
  4819 ;;		Nothing
  4820 ;; This function is called by:
  4821 ;;		_handleButton
  4822 ;; This function uses a non-reentrant model
  4823 ;;
  4824                           
  4825                           	psect	text22
  4826  0033B6                     __ptext22:
  4827                           	opt callstack 0
  4828  0033B6                     _readButtonRB0:
  4829                           	opt callstack 23
  4830  0033B6                     
  4831                           ;buttons.c: 27:     firstReadRB0 = secondReadRB0;
  4832  0033B6  C0D0  F0D1         	movff	_secondReadRB0,_firstReadRB0
  4833  0033BA                     
  4834                           ;buttons.c: 28:     secondReadRB0 = PORTBbits.RB0;
  4835  0033BA  0E00               	movlw	0
  4836  0033BC  B081               	btfsc	129,0,c	;volatile
  4837  0033BE  0E01               	movlw	1
  4838  0033C0  0100               	movlb	0	; () banked
  4839  0033C2  6FD0               	movwf	_secondReadRB0& (0+255),b
  4840  0033C4                     
  4841                           ; BSR set to: 0
  4842                           ;buttons.c: 29:     if(secondReadRB0 == firstReadRB0) {
  4843  0033C4  51D1               	movf	_firstReadRB0& (0+255),w,b
  4844  0033C6  19D0               	xorwf	_secondReadRB0& (0+255),w,b
  4845  0033C8  A4D8               	btfss	status,2,c
  4846  0033CA  EFE9  F019         	goto	u1771
  4847  0033CE  EFEB  F019         	goto	u1770
  4848  0033D2                     u1771:
  4849  0033D2  EFFF  F019         	goto	l2791
  4850  0033D6                     u1770:
  4851  0033D6                     
  4852                           ; BSR set to: 0
  4853                           ;buttons.c: 30:         return (secondReadRB0 == 0) ? 2 : 1;
  4854  0033D6  51D0               	movf	_secondReadRB0& (0+255),w,b
  4855  0033D8  B4D8               	btfsc	status,2,c
  4856  0033DA  EFF1  F019         	goto	u1781
  4857  0033DE  EFF3  F019         	goto	u1780
  4858  0033E2                     u1781:
  4859  0033E2  EFF9  F019         	goto	l2787
  4860  0033E6                     u1780:
  4861  0033E6                     
  4862                           ; BSR set to: 0
  4863  0033E6  0E00               	movlw	0
  4864  0033E8  6F9D               	movwf	(?_readButtonRB0+1)& (0+255),b
  4865  0033EA  0E01               	movlw	1
  4866  0033EC  6F9C               	movwf	?_readButtonRB0& (0+255),b
  4867  0033EE  EF03  F01A         	goto	l177
  4868  0033F2                     l2787:
  4869                           
  4870                           ; BSR set to: 0
  4871  0033F2  0E00               	movlw	0
  4872  0033F4  6F9D               	movwf	(?_readButtonRB0+1)& (0+255),b
  4873  0033F6  0E02               	movlw	2
  4874  0033F8  6F9C               	movwf	?_readButtonRB0& (0+255),b
  4875  0033FA  EF03  F01A         	goto	l177
  4876  0033FE                     l2791:
  4877                           
  4878                           ; BSR set to: 0
  4879                           ;buttons.c: 32:     return 0;
  4880  0033FE  0E00               	movlw	0
  4881  003400  6F9D               	movwf	(?_readButtonRB0+1)& (0+255),b
  4882  003402  0E00               	movlw	0
  4883  003404  6F9C               	movwf	?_readButtonRB0& (0+255),b
  4884  003406                     l177:
  4885                           
  4886                           ; BSR set to: 0
  4887  003406  0012               	return		;funcret
  4888  003408                     __end_of_readButtonRB0:
  4889                           	opt callstack 0
  4890                           
  4891 ;; *************** function _readButtonRA5 *****************
  4892 ;; Defined at:
  4893 ;;		line 17 in file "buttons.c"
  4894 ;; Parameters:    Size  Location     Type
  4895 ;;		None
  4896 ;; Auto vars:     Size  Location     Type
  4897 ;;		None
  4898 ;; Return value:  Size  Location     Type
  4899 ;;                  2    0[BANK0 ] int 
  4900 ;; Registers used:
  4901 ;;		wreg, status,2, status,0
  4902 ;; Tracked objects:
  4903 ;;		On entry : 0/0
  4904 ;;		On exit  : 0/0
  4905 ;;		Unchanged: 0/0
  4906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4907 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4910 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4911 ;;Total ram usage:        2 bytes
  4912 ;; Hardware stack levels used:    1
  4913 ;; Hardware stack levels required when called:    5
  4914 ;; This function calls:
  4915 ;;		Nothing
  4916 ;; This function is called by:
  4917 ;;		_handleButton
  4918 ;; This function uses a non-reentrant model
  4919 ;;
  4920                           
  4921                           	psect	text23
  4922  003408                     __ptext23:
  4923                           	opt callstack 0
  4924  003408                     _readButtonRA5:
  4925                           	opt callstack 23
  4926  003408                     
  4927                           ;buttons.c: 18:     firstReadRA5 = secondReadRA5;
  4928  003408  C0D2  F0D3         	movff	_secondReadRA5,_firstReadRA5
  4929  00340C                     
  4930                           ;buttons.c: 19:     secondReadRA5 = PORTAbits.RA5;
  4931  00340C  0E00               	movlw	0
  4932  00340E  BA80               	btfsc	128,5,c	;volatile
  4933  003410  0E01               	movlw	1
  4934  003412  0100               	movlb	0	; () banked
  4935  003414  6FD2               	movwf	_secondReadRA5& (0+255),b
  4936  003416                     
  4937                           ; BSR set to: 0
  4938                           ;buttons.c: 20:     if(secondReadRA5 == firstReadRA5) {
  4939  003416  51D3               	movf	_firstReadRA5& (0+255),w,b
  4940  003418  19D2               	xorwf	_secondReadRA5& (0+255),w,b
  4941  00341A  A4D8               	btfss	status,2,c
  4942  00341C  EF12  F01A         	goto	u1751
  4943  003420  EF14  F01A         	goto	u1750
  4944  003424                     u1751:
  4945  003424  EF28  F01A         	goto	l2773
  4946  003428                     u1750:
  4947  003428                     
  4948                           ; BSR set to: 0
  4949                           ;buttons.c: 21:         return (secondReadRA5 == 0) ? 2 : 1;
  4950  003428  51D2               	movf	_secondReadRA5& (0+255),w,b
  4951  00342A  B4D8               	btfsc	status,2,c
  4952  00342C  EF1A  F01A         	goto	u1761
  4953  003430  EF1C  F01A         	goto	u1760
  4954  003434                     u1761:
  4955  003434  EF22  F01A         	goto	l2769
  4956  003438                     u1760:
  4957  003438                     
  4958                           ; BSR set to: 0
  4959  003438  0E00               	movlw	0
  4960  00343A  6F9D               	movwf	(?_readButtonRA5+1)& (0+255),b
  4961  00343C  0E01               	movlw	1
  4962  00343E  6F9C               	movwf	?_readButtonRA5& (0+255),b
  4963  003440  EF2C  F01A         	goto	l169
  4964  003444                     l2769:
  4965                           
  4966                           ; BSR set to: 0
  4967  003444  0E00               	movlw	0
  4968  003446  6F9D               	movwf	(?_readButtonRA5+1)& (0+255),b
  4969  003448  0E02               	movlw	2
  4970  00344A  6F9C               	movwf	?_readButtonRA5& (0+255),b
  4971  00344C  EF2C  F01A         	goto	l169
  4972  003450                     l2773:
  4973                           
  4974                           ; BSR set to: 0
  4975                           ;buttons.c: 23:     return 0;
  4976  003450  0E00               	movlw	0
  4977  003452  6F9D               	movwf	(?_readButtonRA5+1)& (0+255),b
  4978  003454  0E00               	movlw	0
  4979  003456  6F9C               	movwf	?_readButtonRA5& (0+255),b
  4980  003458                     l169:
  4981                           
  4982                           ; BSR set to: 0
  4983  003458  0012               	return		;funcret
  4984  00345A                     __end_of_readButtonRA5:
  4985                           	opt callstack 0
  4986                           
  4987 ;; *************** function _dequeue *****************
  4988 ;; Defined at:
  4989 ;;		line 40 in file "clock.c"
  4990 ;; Parameters:    Size  Location     Type
  4991 ;;		None
  4992 ;; Auto vars:     Size  Location     Type
  4993 ;;  temp            5   15[BANK0 ] struct .
  4994 ;;  idx             2   13[BANK0 ] int 
  4995 ;; Return value:  Size  Location     Type
  4996 ;;                  5    8[BANK0 ] struct .
  4997 ;; Registers used:
  4998 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4999 ;; Tracked objects:
  5000 ;;		On entry : 0/0
  5001 ;;		On exit  : 0/0
  5002 ;;		Unchanged: 0/0
  5003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5004 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5005 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5007 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5008 ;;Total ram usage:       12 bytes
  5009 ;; Hardware stack levels used:    1
  5010 ;; Hardware stack levels required when called:    8
  5011 ;; This function calls:
  5012 ;;		___awmod
  5013 ;;		___wmul
  5014 ;;		_isEmptyQueue
  5015 ;; This function is called by:
  5016 ;;		_dispatch
  5017 ;; This function uses a non-reentrant model
  5018 ;;
  5019                           
  5020                           	psect	text24
  5021  002FCA                     __ptext24:
  5022                           	opt callstack 0
  5023  002FCA                     _dequeue:
  5024                           	opt callstack 21
  5025  002FCA                     
  5026                           ;clock.c: 41:     queue_node temp;;clock.c: 42:     temp.func_ptr = ((void*)0);
  5027  002FCA  0E00               	movlw	0
  5028  002FCC  0100               	movlb	0	; () banked
  5029  002FCE  6FAB               	movwf	dequeue@temp& (0+255),b
  5030  002FD0  0E00               	movlw	0
  5031  002FD2  6FAC               	movwf	(dequeue@temp+1)& (0+255),b
  5032  002FD4  0E00               	movlw	0
  5033  002FD6  6FAD               	movwf	(dequeue@temp+2)& (0+255),b
  5034                           
  5035                           ;clock.c: 43:     temp.data_p = ((void*)0);
  5036  002FD8  0E00               	movlw	0
  5037  002FDA  6FAE               	movwf	(dequeue@temp+3)& (0+255),b
  5038  002FDC  0E00               	movlw	0
  5039  002FDE  6FAF               	movwf	(dequeue@temp+4)& (0+255),b
  5040  002FE0                     
  5041                           ; BSR set to: 0
  5042                           ;clock.c: 44:     if(isEmptyQueue())
  5043  002FE0  EC35  F01B         	call	_isEmptyQueue	;wreg free
  5044  002FE4  0900               	iorlw	0
  5045  002FE6  B4D8               	btfsc	status,2,c
  5046  002FE8  EFF8  F017         	goto	u2451
  5047  002FEC  EFFA  F017         	goto	u2450
  5048  002FF0                     u2451:
  5049  002FF0  EF05  F018         	goto	l498
  5050  002FF4                     u2450:
  5051  002FF4                     l3249:
  5052                           
  5053                           ;clock.c: 45:         return temp;
  5054  002FF4  EE20  F0AB         	lfsr	2,dequeue@temp
  5055  002FF8  EE00  F0A4         	lfsr	0,?_dequeue
  5056  002FFC  0E04               	movlw	4
  5057  002FFE                     u2461:
  5058  002FFE  CFDB FFEB          	movff	plusw2,plusw0
  5059  003002  06E8               	decf	wreg,f,c
  5060  003004  E2FC               	bc	u2461
  5061  003006  EF35  F018         	goto	l499
  5062  00300A                     l498:
  5063                           
  5064                           ;clock.c: 46:     int idx = front;
  5065  00300A  C0CC  F0A9         	movff	_front,dequeue@idx
  5066  00300E  C0CD  F0AA         	movff	_front+1,dequeue@idx+1
  5067  003012                     
  5068                           ;clock.c: 47:     front = (front + 1) % 20;
  5069  003012  0E01               	movlw	1
  5070  003014  0100               	movlb	0	; () banked
  5071  003016  25CC               	addwf	_front& (0+255),w,b
  5072  003018  6F9C               	movwf	___awmod@dividend& (0+255),b
  5073  00301A  0E00               	movlw	0
  5074  00301C  21CD               	addwfc	(_front+1)& (0+255),w,b
  5075  00301E  6F9D               	movwf	(___awmod@dividend+1)& (0+255),b
  5076  003020  0E00               	movlw	0
  5077  003022  6F9F               	movwf	(___awmod@divisor+1)& (0+255),b
  5078  003024  0E14               	movlw	20
  5079  003026  6F9E               	movwf	___awmod@divisor& (0+255),b
  5080  003028  EC86  F016         	call	___awmod	;wreg free
  5081  00302C  C09C  F0CC         	movff	?___awmod,_front
  5082  003030  C09D  F0CD         	movff	?___awmod+1,_front+1
  5083  003034                     
  5084                           ;clock.c: 48:     temp = ready_queue[idx];
  5085  003034  C0A9  F09C         	movff	dequeue@idx,___wmul@multiplier
  5086  003038  C0AA  F09D         	movff	dequeue@idx+1,___wmul@multiplier+1
  5087  00303C  0E00               	movlw	0
  5088  00303E  0100               	movlb	0	; () banked
  5089  003040  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5090  003042  0E05               	movlw	5
  5091  003044  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5092  003046  ECA5  F01B         	call	___wmul	;wreg free
  5093  00304A  0E00               	movlw	low _ready_queue
  5094  00304C  0100               	movlb	0	; () banked
  5095  00304E  259C               	addwf	?___wmul& (0+255),w,b
  5096  003050  6ED9               	movwf	fsr2l,c
  5097  003052  0E01               	movlw	high _ready_queue
  5098  003054  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5099  003056  6EDA               	movwf	fsr2h,c
  5100  003058  EE10  F0AB         	lfsr	1,dequeue@temp
  5101  00305C  0E04               	movlw	4
  5102  00305E                     u2471:
  5103  00305E  CFDB FFE3          	movff	plusw2,plusw1
  5104  003062  06E8               	decf	wreg,f,c
  5105  003064  E2FC               	bc	u2471
  5106  003066  EFFA  F017         	goto	l3249
  5107  00306A                     l499:
  5108  00306A  0012               	return		;funcret
  5109  00306C                     __end_of_dequeue:
  5110                           	opt callstack 0
  5111                           
  5112 ;; *************** function _isEmptyQueue *****************
  5113 ;; Defined at:
  5114 ;;		line 23 in file "clock.c"
  5115 ;; Parameters:    Size  Location     Type
  5116 ;;		None
  5117 ;; Auto vars:     Size  Location     Type
  5118 ;;		None
  5119 ;; Return value:  Size  Location     Type
  5120 ;;                  1    wreg      unsigned char 
  5121 ;; Registers used:
  5122 ;;		wreg, status,2, status,0, cstack
  5123 ;; Tracked objects:
  5124 ;;		On entry : 0/0
  5125 ;;		On exit  : 0/0
  5126 ;;		Unchanged: 0/0
  5127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5132 ;;Total ram usage:        0 bytes
  5133 ;; Hardware stack levels used:    1
  5134 ;; Hardware stack levels required when called:    7
  5135 ;; This function calls:
  5136 ;;		_getSizeQueue
  5137 ;; This function is called by:
  5138 ;;		_dequeue
  5139 ;;		_dispatch
  5140 ;; This function uses a non-reentrant model
  5141 ;;
  5142                           
  5143                           	psect	text25
  5144  00366A                     __ptext25:
  5145                           	opt callstack 0
  5146  00366A                     _isEmptyQueue:
  5147                           	opt callstack 22
  5148  00366A                     
  5149                           ;clock.c: 24:     if(front == -1)
  5150  00366A  0100               	movlb	0	; () banked
  5151  00366C  29CC               	incf	_front& (0+255),w,b
  5152  00366E  E106               	bnz	u1791
  5153  003670  29CD               	incf	(_front+1)& (0+255),w,b
  5154  003672  A4D8               	btfss	status,2,c
  5155  003674  EF3E  F01B         	goto	u1791
  5156  003678  EF40  F01B         	goto	u1790
  5157  00367C                     u1791:
  5158  00367C  EF43  F01B         	goto	l2811
  5159  003680                     u1790:
  5160  003680                     
  5161                           ; BSR set to: 0
  5162                           ;clock.c: 25:         return 0;
  5163  003680  0E00               	movlw	0
  5164  003682  EF4F  F01B         	goto	l490
  5165  003686                     l2811:
  5166                           
  5167                           ; BSR set to: 0
  5168                           ;clock.c: 26:     return getSizeQueue() == 0 ? 1 : 0;
  5169  003686  EC66  F01B         	call	_getSizeQueue	;wreg free
  5170  00368A  0900               	iorlw	0
  5171  00368C  B4D8               	btfsc	status,2,c
  5172  00368E  EF4B  F01B         	goto	u1801
  5173  003692  EF4E  F01B         	goto	u1800
  5174  003696                     u1801:
  5175  003696  0E01               	movlw	1
  5176  003698  EF4F  F01B         	goto	u1810
  5177  00369C                     u1800:
  5178  00369C  0E00               	movlw	0
  5179  00369E                     u1810:
  5180  00369E                     l490:
  5181  00369E  0012               	return		;funcret
  5182  0036A0                     __end_of_isEmptyQueue:
  5183                           	opt callstack 0
  5184                           
  5185 ;; *************** function _getSizeQueue *****************
  5186 ;; Defined at:
  5187 ;;		line 15 in file "clock.c"
  5188 ;; Parameters:    Size  Location     Type
  5189 ;;		None
  5190 ;; Auto vars:     Size  Location     Type
  5191 ;;		None
  5192 ;; Return value:  Size  Location     Type
  5193 ;;                  1    wreg      unsigned char 
  5194 ;; Registers used:
  5195 ;;		wreg, status,2, status,0, cstack
  5196 ;; Tracked objects:
  5197 ;;		On entry : 0/0
  5198 ;;		On exit  : 0/0
  5199 ;;		Unchanged: 0/0
  5200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5203 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5204 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5205 ;;Total ram usage:        2 bytes
  5206 ;; Hardware stack levels used:    1
  5207 ;; Hardware stack levels required when called:    6
  5208 ;; This function calls:
  5209 ;;		___awmod
  5210 ;; This function is called by:
  5211 ;;		_isEmptyQueue
  5212 ;; This function uses a non-reentrant model
  5213 ;;
  5214                           
  5215                           	psect	text26
  5216  0036CC                     __ptext26:
  5217                           	opt callstack 0
  5218  0036CC                     _getSizeQueue:
  5219                           	opt callstack 22
  5220  0036CC                     
  5221                           ;clock.c: 16:     return (rear - front + 1 + 20) % 20;
  5222  0036CC  0100               	movlb	0	; () banked
  5223  0036CE  51CC               	movf	_front& (0+255),w,b
  5224  0036D0  5DCA               	subwf	_rear& (0+255),w,b
  5225  0036D2  6FA2               	movwf	??_getSizeQueue& (0+255),b
  5226  0036D4  51CD               	movf	(_front+1)& (0+255),w,b
  5227  0036D6  59CB               	subwfb	(_rear+1)& (0+255),w,b
  5228  0036D8  6FA3               	movwf	(??_getSizeQueue+1)& (0+255),b
  5229  0036DA  0E15               	movlw	21
  5230  0036DC  25A2               	addwf	??_getSizeQueue& (0+255),w,b
  5231  0036DE  6F9C               	movwf	___awmod@dividend& (0+255),b
  5232  0036E0  0E00               	movlw	0
  5233  0036E2  21A3               	addwfc	(??_getSizeQueue+1)& (0+255),w,b
  5234  0036E4  6F9D               	movwf	(___awmod@dividend+1)& (0+255),b
  5235  0036E6  0E00               	movlw	0
  5236  0036E8  6F9F               	movwf	(___awmod@divisor+1)& (0+255),b
  5237  0036EA  0E14               	movlw	20
  5238  0036EC  6F9E               	movwf	___awmod@divisor& (0+255),b
  5239  0036EE  EC86  F016         	call	___awmod	;wreg free
  5240  0036F2  0100               	movlb	0	; () banked
  5241  0036F4  519C               	movf	?___awmod& (0+255),w,b
  5242  0036F6                     
  5243                           ; BSR set to: 0
  5244  0036F6  0012               	return		;funcret
  5245  0036F8                     __end_of_getSizeQueue:
  5246                           	opt callstack 0
  5247                           
  5248 ;; *************** function ___wmul *****************
  5249 ;; Defined at:
  5250 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  5251 ;; Parameters:    Size  Location     Type
  5252 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5253 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5254 ;; Auto vars:     Size  Location     Type
  5255 ;;  product         2    4[BANK0 ] unsigned int 
  5256 ;; Return value:  Size  Location     Type
  5257 ;;                  2    0[BANK0 ] unsigned int 
  5258 ;; Registers used:
  5259 ;;		wreg, status,2, status,0, prodl, prodh
  5260 ;; Tracked objects:
  5261 ;;		On entry : 0/0
  5262 ;;		On exit  : 0/0
  5263 ;;		Unchanged: 0/0
  5264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5265 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5266 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5268 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5269 ;;Total ram usage:        6 bytes
  5270 ;; Hardware stack levels used:    1
  5271 ;; Hardware stack levels required when called:    5
  5272 ;; This function calls:
  5273 ;;		Nothing
  5274 ;; This function is called by:
  5275 ;;		_queueInitialize
  5276 ;;		_dequeue
  5277 ;;		_initializeTaskList
  5278 ;;		_register_timer
  5279 ;; This function uses a non-reentrant model
  5280 ;;
  5281                           
  5282                           	psect	text27
  5283  00374A                     __ptext27:
  5284                           	opt callstack 0
  5285  00374A                     ___wmul:
  5286                           	opt callstack 21
  5287  00374A  0100               	movlb	0	; () banked
  5288  00374C  519C               	movf	___wmul@multiplier& (0+255),w,b
  5289  00374E  039E               	mulwf	___wmul@multiplicand& (0+255),b
  5290  003750  CFF3 F0A0          	movff	prodl,___wmul@product
  5291  003754  CFF4 F0A1          	movff	prodh,___wmul@product+1
  5292  003758  519C               	movf	___wmul@multiplier& (0+255),w,b
  5293  00375A  039F               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5294  00375C  50F3               	movf	243,w,c
  5295  00375E  27A1               	addwf	(___wmul@product+1)& (0+255),f,b
  5296  003760  519D               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5297  003762  039E               	mulwf	___wmul@multiplicand& (0+255),b
  5298  003764  50F3               	movf	243,w,c
  5299  003766  27A1               	addwf	(___wmul@product+1)& (0+255),f,b
  5300  003768                     
  5301                           ; BSR set to: 0
  5302  003768  C0A0  F09C         	movff	___wmul@product,?___wmul
  5303  00376C  C0A1  F09D         	movff	___wmul@product+1,?___wmul+1
  5304  003770                     
  5305                           ; BSR set to: 0
  5306  003770  0012               	return		;funcret
  5307  003772                     __end_of___wmul:
  5308                           	opt callstack 0
  5309                           
  5310 ;; *************** function _check_humid_to_turn_fan *****************
  5311 ;; Defined at:
  5312 ;;		line 65 in file "mcc.c"
  5313 ;; Parameters:    Size  Location     Type
  5314 ;;		None
  5315 ;; Auto vars:     Size  Location     Type
  5316 ;;  humid           2   15[BANK0 ] int 
  5317 ;; Return value:  Size  Location     Type
  5318 ;;                  1    wreg      void 
  5319 ;; Registers used:
  5320 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5321 ;; Tracked objects:
  5322 ;;		On entry : 0/0
  5323 ;;		On exit  : 0/0
  5324 ;;		Unchanged: 0/0
  5325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5327 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5329 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5330 ;;Total ram usage:        2 bytes
  5331 ;; Hardware stack levels used:    1
  5332 ;; Hardware stack levels required when called:   10
  5333 ;; This function calls:
  5334 ;;		_LCDPrint
  5335 ;;		_LCDPrintChar
  5336 ;;		___awdiv
  5337 ;;		___awmod
  5338 ;;		_set_speed_fan3
  5339 ;; This function is called by:
  5340 ;;		_main
  5341 ;;		_dispatch
  5342 ;; This function uses a non-reentrant model
  5343 ;;
  5344                           
  5345                           	psect	text28
  5346  00306C                     __ptext28:
  5347                           	opt callstack 0
  5348  00306C                     _check_humid_to_turn_fan:
  5349                           	opt callstack 19
  5350  00306C                     
  5351                           ;mcc.c: 66:     if(state == HEATER || state == HEAT_PUMP) {
  5352  00306C  0100               	movlb	0	; () banked
  5353  00306E  0597               	decf	_state& (0+255),w,b	;volatile
  5354  003070  B4D8               	btfsc	status,2,c
  5355  003072  EF3D  F018         	goto	u2411
  5356  003076  EF3F  F018         	goto	u2410
  5357  00307A                     u2411:
  5358  00307A  EF48  F018         	goto	l417
  5359  00307E                     u2410:
  5360  00307E                     
  5361                           ; BSR set to: 0
  5362  00307E  0E02               	movlw	2
  5363  003080  1997               	xorwf	_state& (0+255),w,b	;volatile
  5364  003082  A4D8               	btfss	status,2,c
  5365  003084  EF46  F018         	goto	u2421
  5366  003088  EF48  F018         	goto	u2420
  5367  00308C                     u2421:
  5368  00308C  EF83  F018         	goto	l418
  5369  003090                     u2420:
  5370  003090                     l417:
  5371                           
  5372                           ; BSR set to: 0
  5373                           ;mcc.c: 67:         int humid = (int)humidity_value;
  5374  003090  C099  F0AB         	movff	_humidity_value,check_humid_to_turn_fan@humid
  5375  003094  6BAC               	clrf	(check_humid_to_turn_fan@humid+1)& (0+255),b
  5376  003096                     
  5377                           ; BSR set to: 0
  5378                           ;mcc.c: 68:         set_speed_fan3(humid);
  5379  003096  C0AB  F09C         	movff	check_humid_to_turn_fan@humid,set_speed_fan3@dutyCycle
  5380  00309A  C0AC  F09D         	movff	check_humid_to_turn_fan@humid+1,set_speed_fan3@dutyCycle+1
  5381  00309E  EC42  F01C         	call	_set_speed_fan3	;wreg free
  5382  0030A2                     
  5383                           ;mcc.c: 69:         LCDPrint(1, 11, "F3:");
  5384  0030A2  0E0B               	movlw	11
  5385  0030A4  0100               	movlb	0	; () banked
  5386  0030A6  6FA7               	movwf	LCDPrint@pos& (0+255),b
  5387  0030A8  0E78               	movlw	low STR_23
  5388  0030AA  6FA8               	movwf	LCDPrint@ptr& (0+255),b
  5389  0030AC  0E10               	movlw	high STR_23
  5390  0030AE  6FA9               	movwf	(LCDPrint@ptr+1)& (0+255),b
  5391  0030B0  0E01               	movlw	1
  5392  0030B2  EC54  F01A         	call	_LCDPrint
  5393  0030B6                     
  5394                           ;mcc.c: 70:         LCDPrintChar(1, 14, humid / 10 + '0');
  5395  0030B6  0E0E               	movlw	14
  5396  0030B8  0100               	movlb	0	; () banked
  5397  0030BA  6FA7               	movwf	LCDPrintChar@pos& (0+255),b
  5398  0030BC  C0AB  F09C         	movff	check_humid_to_turn_fan@humid,___awdiv@dividend
  5399  0030C0  C0AC  F09D         	movff	check_humid_to_turn_fan@humid+1,___awdiv@dividend+1
  5400  0030C4  0E00               	movlw	0
  5401  0030C6  6F9F               	movwf	(___awdiv@divisor+1)& (0+255),b
  5402  0030C8  0E0A               	movlw	10
  5403  0030CA  6F9E               	movwf	___awdiv@divisor& (0+255),b
  5404  0030CC  ECC2  F015         	call	___awdiv	;wreg free
  5405  0030D0  0100               	movlb	0	; () banked
  5406  0030D2  519C               	movf	?___awdiv& (0+255),w,b
  5407  0030D4  0F30               	addlw	48
  5408  0030D6  6FA8               	movwf	LCDPrintChar@ch& (0+255),b
  5409  0030D8  0E01               	movlw	1
  5410  0030DA  ECF7  F01A         	call	_LCDPrintChar
  5411  0030DE                     
  5412                           ;mcc.c: 71:         LCDPrintChar(1, 15, humid % 10 + '0');
  5413  0030DE  0E0F               	movlw	15
  5414  0030E0  0100               	movlb	0	; () banked
  5415  0030E2  6FA7               	movwf	LCDPrintChar@pos& (0+255),b
  5416  0030E4  C0AB  F09C         	movff	check_humid_to_turn_fan@humid,___awmod@dividend
  5417  0030E8  C0AC  F09D         	movff	check_humid_to_turn_fan@humid+1,___awmod@dividend+1
  5418  0030EC  0E00               	movlw	0
  5419  0030EE  6F9F               	movwf	(___awmod@divisor+1)& (0+255),b
  5420  0030F0  0E0A               	movlw	10
  5421  0030F2  6F9E               	movwf	___awmod@divisor& (0+255),b
  5422  0030F4  EC86  F016         	call	___awmod	;wreg free
  5423  0030F8  0100               	movlb	0	; () banked
  5424  0030FA  519C               	movf	?___awmod& (0+255),w,b
  5425  0030FC  0F30               	addlw	48
  5426  0030FE  6FA8               	movwf	LCDPrintChar@ch& (0+255),b
  5427  003100  0E01               	movlw	1
  5428  003102  ECF7  F01A         	call	_LCDPrintChar
  5429  003106                     l418:
  5430  003106  0012               	return		;funcret
  5431  003108                     __end_of_check_humid_to_turn_fan:
  5432                           	opt callstack 0
  5433                           
  5434 ;; *************** function _set_speed_fan3 *****************
  5435 ;; Defined at:
  5436 ;;		line 44 in file "LTDtasks.c"
  5437 ;; Parameters:    Size  Location     Type
  5438 ;;  dutyCycle       2    0[BANK0 ] int 
  5439 ;; Auto vars:     Size  Location     Type
  5440 ;;		None
  5441 ;; Return value:  Size  Location     Type
  5442 ;;                  1    wreg      void 
  5443 ;; Registers used:
  5444 ;;		wreg, status,2, status,0, prodl, prodh
  5445 ;; Tracked objects:
  5446 ;;		On entry : 0/0
  5447 ;;		On exit  : 0/0
  5448 ;;		Unchanged: 0/0
  5449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5450 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5453 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5454 ;;Total ram usage:        2 bytes
  5455 ;; Hardware stack levels used:    1
  5456 ;; Hardware stack levels required when called:    5
  5457 ;; This function calls:
  5458 ;;		Nothing
  5459 ;; This function is called by:
  5460 ;;		_check_humid_to_turn_fan
  5461 ;;		_force_turn_off
  5462 ;; This function uses a non-reentrant model
  5463 ;;
  5464                           
  5465                           	psect	text29
  5466  003884                     __ptext29:
  5467                           	opt callstack 0
  5468  003884                     _set_speed_fan3:
  5469                           	opt callstack 23
  5470  003884                     
  5471                           ;LTDtasks.c: 45:     CCPR4L = 24 * dutyCycle;
  5472  003884  0100               	movlb	0	; () banked
  5473  003886  519C               	movf	set_speed_fan3@dutyCycle& (0+255),w,b
  5474  003888  0D18               	mullw	24
  5475  00388A  CFF3 FF74          	movff	prodl,3956	;volatile
  5476  00388E                     
  5477                           ; BSR set to: 0
  5478  00388E  0012               	return		;funcret
  5479  003890                     __end_of_set_speed_fan3:
  5480                           	opt callstack 0
  5481                           
  5482 ;; *************** function _changeState *****************
  5483 ;; Defined at:
  5484 ;;		line 52 in file "mcc.c"
  5485 ;; Parameters:    Size  Location     Type
  5486 ;;		None
  5487 ;; Auto vars:     Size  Location     Type
  5488 ;;		None
  5489 ;; Return value:  Size  Location     Type
  5490 ;;                  1    wreg      void 
  5491 ;; Registers used:
  5492 ;;		wreg, status,2, status,0
  5493 ;; Tracked objects:
  5494 ;;		On entry : 0/0
  5495 ;;		On exit  : 0/0
  5496 ;;		Unchanged: 0/0
  5497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5502 ;;Total ram usage:        0 bytes
  5503 ;; Hardware stack levels used:    1
  5504 ;; Hardware stack levels required when called:    5
  5505 ;; This function calls:
  5506 ;;		Nothing
  5507 ;; This function is called by:
  5508 ;;		_set_time_process
  5509 ;;		_main
  5510 ;;		_dispatch
  5511 ;; This function uses a non-reentrant model
  5512 ;;
  5513                           
  5514                           	psect	text30
  5515  002DBE                     __ptext30:
  5516                           	opt callstack 0
  5517  002DBE                     _changeState:
  5518                           	opt callstack 24
  5519  002DBE                     
  5520                           ;mcc.c: 53:     if(temperature_value >= 80 && humidity_value <= 10 && state != IDLE)
  5521  002DBE  0E4F               	movlw	79
  5522  002DC0  0100               	movlb	0	; () banked
  5523  002DC2  6598               	cpfsgt	_temperature_value& (0+255),b
  5524  002DC4  EFE6  F016         	goto	u2321
  5525  002DC8  EFE8  F016         	goto	u2320
  5526  002DCC                     u2321:
  5527  002DCC  EFFC  F016         	goto	l3201
  5528  002DD0                     u2320:
  5529  002DD0                     
  5530                           ; BSR set to: 0
  5531  002DD0  0E0B               	movlw	11
  5532  002DD2  6199               	cpfslt	_humidity_value& (0+255),b
  5533  002DD4  EFEE  F016         	goto	u2331
  5534  002DD8  EFF0  F016         	goto	u2330
  5535  002DDC                     u2331:
  5536  002DDC  EFFC  F016         	goto	l3201
  5537  002DE0                     u2330:
  5538  002DE0                     
  5539                           ; BSR set to: 0
  5540  002DE0  5197               	movf	_state& (0+255),w,b	;volatile
  5541  002DE2  B4D8               	btfsc	status,2,c
  5542  002DE4  EFF6  F016         	goto	u2341
  5543  002DE8  EFF8  F016         	goto	u2340
  5544  002DEC                     u2341:
  5545  002DEC  EFFC  F016         	goto	l3201
  5546  002DF0                     u2340:
  5547  002DF0                     
  5548                           ; BSR set to: 0
  5549                           ;mcc.c: 54:         state = TERMINATE;
  5550  002DF0  0E03               	movlw	3
  5551  002DF2  6F97               	movwf	_state& (0+255),b	;volatile
  5552  002DF4  EF36  F017         	goto	l412
  5553  002DF8                     l3201:
  5554                           
  5555                           ; BSR set to: 0
  5556  002DF8  0E0B               	movlw	11
  5557  002DFA  6199               	cpfslt	_humidity_value& (0+255),b
  5558  002DFC  EF02  F017         	goto	u2351
  5559  002E00  EF04  F017         	goto	u2350
  5560  002E04                     u2351:
  5561  002E04  EF11  F017         	goto	l3207
  5562  002E08                     u2350:
  5563  002E08                     
  5564                           ; BSR set to: 0
  5565  002E08  0E02               	movlw	2
  5566  002E0A  1997               	xorwf	_state& (0+255),w,b	;volatile
  5567  002E0C  A4D8               	btfss	status,2,c
  5568  002E0E  EF0B  F017         	goto	u2361
  5569  002E12  EF0D  F017         	goto	u2360
  5570  002E16                     u2361:
  5571  002E16  EF11  F017         	goto	l3207
  5572  002E1A                     u2360:
  5573  002E1A                     l3205:
  5574                           
  5575                           ; BSR set to: 0
  5576                           ;mcc.c: 56:         flag_change_state = 1;
  5577  002E1A  0E01               	movlw	1
  5578  002E1C  6F95               	movwf	_flag_change_state& (0+255),b
  5579                           
  5580                           ;mcc.c: 57:     }
  5581  002E1E  EF36  F017         	goto	l412
  5582  002E22                     l3207:
  5583                           
  5584                           ; BSR set to: 0
  5585  002E22  0E4F               	movlw	79
  5586  002E24  6598               	cpfsgt	_temperature_value& (0+255),b
  5587  002E26  EF17  F017         	goto	u2371
  5588  002E2A  EF19  F017         	goto	u2370
  5589  002E2E                     u2371:
  5590  002E2E  EF23  F017         	goto	l3213
  5591  002E32                     u2370:
  5592  002E32                     
  5593                           ; BSR set to: 0
  5594  002E32  0597               	decf	_state& (0+255),w,b	;volatile
  5595  002E34  A4D8               	btfss	status,2,c
  5596  002E36  EF1F  F017         	goto	u2381
  5597  002E3A  EF21  F017         	goto	u2380
  5598  002E3E                     u2381:
  5599  002E3E  EF23  F017         	goto	l3213
  5600  002E42                     u2380:
  5601  002E42  EF0D  F017         	goto	l3205
  5602  002E46                     l3213:
  5603                           
  5604                           ; BSR set to: 0
  5605  002E46  0597               	decf	_state& (0+255),w,b	;volatile
  5606  002E48  B4D8               	btfsc	status,2,c
  5607  002E4A  EF29  F017         	goto	u2391
  5608  002E4E  EF2B  F017         	goto	u2390
  5609  002E52                     u2391:
  5610  002E52  EF0D  F017         	goto	l3205
  5611  002E56                     u2390:
  5612  002E56                     
  5613                           ; BSR set to: 0
  5614  002E56  0E02               	movlw	2
  5615  002E58  1997               	xorwf	_state& (0+255),w,b	;volatile
  5616  002E5A  A4D8               	btfss	status,2,c
  5617  002E5C  EF32  F017         	goto	u2401
  5618  002E60  EF34  F017         	goto	u2400
  5619  002E64                     u2401:
  5620  002E64  EF36  F017         	goto	l406
  5621  002E68                     u2400:
  5622  002E68  EF0D  F017         	goto	l3205
  5623  002E6C                     l406:
  5624  002E6C                     l412:
  5625                           
  5626                           ; BSR set to: 0
  5627  002E6C  0012               	return		;funcret
  5628  002E6E                     __end_of_changeState:
  5629                           	opt callstack 0
  5630                           
  5631 ;; *************** function _LTD_process *****************
  5632 ;; Defined at:
  5633 ;;		line 74 in file "main.c"
  5634 ;; Parameters:    Size  Location     Type
  5635 ;;		None
  5636 ;; Auto vars:     Size  Location     Type
  5637 ;;  humid           2   21[BANK0 ] int 
  5638 ;;  temp            2   19[BANK0 ] int 
  5639 ;; Return value:  Size  Location     Type
  5640 ;;                  1    wreg      void 
  5641 ;; Registers used:
  5642 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5643 ;; Tracked objects:
  5644 ;;		On entry : 0/0
  5645 ;;		On exit  : 0/0
  5646 ;;		Unchanged: 0/0
  5647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5649 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5650 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5651 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5652 ;;Total ram usage:        8 bytes
  5653 ;; Hardware stack levels used:    1
  5654 ;; Hardware stack levels required when called:   10
  5655 ;; This function calls:
  5656 ;;		_LCDPrint
  5657 ;;		_LCDPrintChar
  5658 ;;		_LCDPutInst
  5659 ;;		___awdiv
  5660 ;;		___awmod
  5661 ;;		_get_time
  5662 ;;		_turn_off_fan
  5663 ;;		_turn_off_heat_pump
  5664 ;;		_turn_off_heater
  5665 ;;		_turn_on_fan
  5666 ;;		_turn_on_heat_pump
  5667 ;;		_turn_on_heater
  5668 ;; This function is called by:
  5669 ;;		_main
  5670 ;; This function uses a non-reentrant model
  5671 ;;
  5672                           
  5673                           	psect	text31
  5674  0015E6                     __ptext31:
  5675                           	opt callstack 0
  5676  0015E6                     _LTD_process:
  5677                           	opt callstack 20
  5678  0015E6                     
  5679                           ;main.c: 75:     switch(state) {
  5680  0015E6  EFCE  F00C         	goto	l3451
  5681  0015EA                     l3349:
  5682                           
  5683                           ; BSR set to: 0
  5684                           ;main.c: 77:             if(RA5_pressed) {
  5685  0015EA  519B               	movf	_RA5_pressed& (0+255),w,b
  5686  0015EC  B4D8               	btfsc	status,2,c
  5687  0015EE  EFFB  F00A         	goto	u2571
  5688  0015F2  EFFD  F00A         	goto	u2570
  5689  0015F6                     u2571:
  5690  0015F6  EFEC  F00C         	goto	l105
  5691  0015FA                     u2570:
  5692  0015FA                     
  5693                           ; BSR set to: 0
  5694                           ;main.c: 78:                 RA5_pressed = 0;
  5695  0015FA  0E00               	movlw	0
  5696  0015FC  6F9B               	movwf	_RA5_pressed& (0+255),b
  5697                           
  5698                           ;main.c: 79:                 state = HEATER;
  5699  0015FE  0E01               	movlw	1
  5700  001600  6F97               	movwf	_state& (0+255),b	;volatile
  5701  001602                     
  5702                           ; BSR set to: 0
  5703                           ;main.c: 80:                 check_timeout = get_time();
  5704  001602  EC39  F01C         	call	_get_time	;wreg free
  5705  001606  C09C  F088         	movff	?_get_time,_check_timeout
  5706  00160A  C09D  F089         	movff	?_get_time+1,_check_timeout+1
  5707  00160E  C09E  F08A         	movff	?_get_time+2,_check_timeout+2
  5708  001612  C09F  F08B         	movff	?_get_time+3,_check_timeout+3
  5709  001616                     
  5710                           ;main.c: 81:                 turn_on_heater();
  5711  001616  EC53  F01C         	call	_turn_on_heater	;wreg free
  5712  00161A                     
  5713                           ;main.c: 82:                 turn_on_fan(1);
  5714  00161A  0E00               	movlw	0
  5715  00161C  0100               	movlb	0	; () banked
  5716  00161E  6F9D               	movwf	(turn_on_fan@idx+1)& (0+255),b
  5717  001620  0E01               	movlw	1
  5718  001622  6F9C               	movwf	turn_on_fan@idx& (0+255),b
  5719  001624  ECB7  F01A         	call	_turn_on_fan	;wreg free
  5720  001628                     
  5721                           ;main.c: 83:                 LCDPrint(0, 0, "              ");
  5722  001628  0E00               	movlw	0
  5723  00162A  0100               	movlb	0	; () banked
  5724  00162C  6FA7               	movwf	LCDPrint@pos& (0+255),b
  5725  00162E  0E34               	movlw	low STR_3
  5726  001630  6FA8               	movwf	LCDPrint@ptr& (0+255),b
  5727  001632  0E10               	movlw	high STR_3
  5728  001634  6FA9               	movwf	(LCDPrint@ptr+1)& (0+255),b
  5729  001636  0E00               	movlw	0
  5730  001638  EC54  F01A         	call	_LCDPrint
  5731  00163C                     
  5732                           ;main.c: 84:                 LCDPrint(0, 0, "Heater");
  5733  00163C  0E00               	movlw	0
  5734  00163E  0100               	movlb	0	; () banked
  5735  001640  6FA7               	movwf	LCDPrint@pos& (0+255),b
  5736  001642  0E6C               	movlw	low STR_4
  5737  001644  6FA8               	movwf	LCDPrint@ptr& (0+255),b
  5738  001646  0E10               	movlw	high STR_4
  5739  001648  6FA9               	movwf	(LCDPrint@ptr+1)& (0+255),b
  5740  00164A  0E00               	movlw	0
  5741  00164C  EC54  F01A         	call	_LCDPrint
  5742  001650  EFEC  F00C         	goto	l105
  5743  001654                     l3363:
  5744                           
  5745                           ; BSR set to: 0
  5746                           ;main.c: 88:             if(get_time() - check_timeout > 30000) {
  5747  001654  EC39  F01C         	call	_get_time	;wreg free
  5748  001658  0100               	movlb	0	; () banked
  5749  00165A  5188               	movf	_check_timeout& (0+255),w,b
  5750  00165C  5D9C               	subwf	?_get_time& (0+255),w,b
  5751  00165E  6FAB               	movwf	??_LTD_process& (0+255),b
  5752  001660  5189               	movf	(_check_timeout+1)& (0+255),w,b
  5753  001662  599D               	subwfb	(?_get_time+1)& (0+255),w,b
  5754  001664  6FAC               	movwf	(??_LTD_process+1)& (0+255),b
  5755  001666  518A               	movf	(_check_timeout+2)& (0+255),w,b
  5756  001668  599E               	subwfb	(?_get_time+2)& (0+255),w,b
  5757  00166A  6FAD               	movwf	(??_LTD_process+2)& (0+255),b
  5758  00166C  518B               	movf	(_check_timeout+3)& (0+255),w,b
  5759  00166E  599F               	subwfb	(?_get_time+3)& (0+255),w,b
  5760  001670  6FAE               	movwf	(??_LTD_process+3)& (0+255),b
  5761  001672  51AE               	movf	(??_LTD_process+3)& (0+255),w,b
  5762  001674  11AD               	iorwf	(??_LTD_process+2)& (0+255),w,b
  5763  001676  E10B               	bnz	u2580
  5764  001678  0E31               	movlw	49
  5765  00167A  5DAB               	subwf	??_LTD_process& (0+255),w,b
  5766  00167C  0E75               	movlw	117
  5767  00167E  59AC               	subwfb	(??_LTD_process+1)& (0+255),w,b
  5768  001680  A0D8               	btfss	status,0,c
  5769  001682  EF45  F00B         	goto	u2581
  5770  001686  EF47  F00B         	goto	u2580
  5771  00168A                     u2581:
  5772  00168A  EF57  F00B         	goto	l3371
  5773  00168E                     u2580:
  5774  00168E                     
  5775                           ; BSR set to: 0
  5776                           ;main.c: 89:                 LCDPutInst(0x01);
  5777  00168E  0E01               	movlw	1
  5778  001690  EC96  F01A         	call	_LCDPutInst
  5779  001694                     
  5780                           ;main.c: 90:                 LCDPrint(0, 0, "ERROR - TURN OFF");
  5781  001694  0E00               	movlw	0
  5782  001696  0100               	movlb	0	; () banked
  5783  001698  6FA7               	movwf	LCDPrint@pos& (0+255),b
  5784  00169A  0E23               	movlw	low STR_8
  5785  00169C  6FA8               	movwf	LCDPrint@ptr& (0+255),b
  5786  00169E  0E10               	movlw	high STR_8
  5787  0016A0  6FA9               	movwf	(LCDPrint@ptr+1)& (0+255),b
  5788  0016A2  0E00               	movlw	0
  5789  0016A4  EC54  F01A         	call	_LCDPrint
  5790  0016A8                     
  5791                           ;main.c: 91:                 state = TERMINATE;
  5792  0016A8  0E03               	movlw	3
  5793  0016AA  0100               	movlb	0	; () banked
  5794  0016AC  6F97               	movwf	_state& (0+255),b	;volatile
  5795  0016AE                     l3371:
  5796                           
  5797                           ; BSR set to: 0
  5798                           ;main.c: 93:             if(flag_change_state) {
  5799  0016AE  5195               	movf	_flag_change_state& (0+255),w,b
  5800  0016B0  B4D8               	btfsc	status,2,c
  5801  0016B2  EF5D  F00B         	goto	u2591
  5802  0016B6  EF5F  F00B         	goto	u2590
  5803  0016BA                     u2591:
  5804  0016BA  EFEC  F00C         	goto	l105
  5805  0016BE                     u2590:
  5806  0016BE                     
  5807                           ; BSR set to: 0
  5808                           ;main.c: 94:                 flag_change_state = 0;
  5809  0016BE  0E00               	movlw	0
  5810  0016C0  6F95               	movwf	_flag_change_state& (0+255),b
  5811                           
  5812                           ;main.c: 95:                 if(!isSet) {
  5813  0016C2  5194               	movf	_isSet& (0+255),w,b
  5814  0016C4  A4D8               	btfss	status,2,c
  5815  0016C6  EF67  F00B         	goto	u2601
  5816  0016CA  EF69  F00B         	goto	u2600
  5817  0016CE                     u2601:
  5818  0016CE  EF7C  F00B         	goto	l3377
  5819  0016D2                     u2600:
  5820  0016D2                     
  5821                           ; BSR set to: 0
  5822                           ;main.c: 96:                     LCDPrint(0, 0, "              ");
  5823  0016D2  0E00               	movlw	0
  5824  0016D4  6FA7               	movwf	LCDPrint@pos& (0+255),b
  5825  0016D6  0E34               	movlw	low STR_3
  5826  0016D8  6FA8               	movwf	LCDPrint@ptr& (0+255),b
  5827  0016DA  0E10               	movlw	high STR_3
  5828  0016DC  6FA9               	movwf	(LCDPrint@ptr+1)& (0+255),b
  5829  0016DE  0E00               	movlw	0
  5830  0016E0  EC54  F01A         	call	_LCDPrint
  5831                           
  5832                           ;main.c: 97:                     LCDPrint(0, 0, "Heat Pump");
  5833  0016E4  0E00               	movlw	0
  5834  0016E6  0100               	movlb	0	; () banked
  5835  0016E8  6FA7               	movwf	LCDPrint@pos& (0+255),b
  5836  0016EA  0E52               	movlw	low STR_5
  5837  0016EC  6FA8               	movwf	LCDPrint@ptr& (0+255),b
  5838  0016EE  0E10               	movlw	high STR_5
  5839  0016F0  6FA9               	movwf	(LCDPrint@ptr+1)& (0+255),b
  5840  0016F2  0E00               	movlw	0
  5841  0016F4  EC54  F01A         	call	_LCDPrint
  5842  0016F8                     l3377:
  5843                           
  5844                           ;main.c: 100:                 state = HEAT_PUMP;
  5845  0016F8  0E02               	movlw	2
  5846  0016FA  0100               	movlb	0	; () banked
  5847  0016FC  6F97               	movwf	_state& (0+255),b	;volatile
  5848  0016FE                     
  5849                           ; BSR set to: 0
  5850                           ;main.c: 101:                 check_timeout = get_time();
  5851  0016FE  EC39  F01C         	call	_get_time	;wreg free
  5852  001702  C09C  F088         	movff	?_get_time,_check_timeout
  5853  001706  C09D  F089         	movff	?_get_time+1,_check_timeout+1
  5854  00170A  C09E  F08A         	movff	?_get_time+2,_check_timeout+2
  5855  00170E  C09F  F08B         	movff	?_get_time+3,_check_timeout+3
  5856  001712                     
  5857                           ;main.c: 103:                 turn_off_heater();
  5858  001712  EC57  F01C         	call	_turn_off_heater	;wreg free
  5859  001716                     
  5860                           ;main.c: 104:                 turn_off_fan(1);
  5861  001716  0E00               	movlw	0
  5862  001718  0100               	movlb	0	; () banked
  5863  00171A  6F9D               	movwf	(turn_off_fan@idx+1)& (0+255),b
  5864  00171C  0E01               	movlw	1
  5865  00171E  6F9C               	movwf	turn_off_fan@idx& (0+255),b
  5866  001720  EC2D  F01A         	call	_turn_off_fan	;wreg free
  5867  001724                     
  5868                           ;main.c: 105:                 turn_on_heat_pump();
  5869  001724  EC55  F01C         	call	_turn_on_heat_pump	;wreg free
  5870  001728                     
  5871                           ;main.c: 106:                 turn_on_fan(2);
  5872  001728  0E00               	movlw	0
  5873  00172A  0100               	movlb	0	; () banked
  5874  00172C  6F9D               	movwf	(turn_on_fan@idx+1)& (0+255),b
  5875  00172E  0E02               	movlw	2
  5876  001730  6F9C               	movwf	turn_on_fan@idx& (0+255),b
  5877  001732  ECB7  F01A         	call	_turn_on_fan	;wreg free
  5878  001736  EFEC  F00C         	goto	l105
  5879  00173A                     l3389:
  5880                           
  5881                           ; BSR set to: 0
  5882                           ;main.c: 110:             if(get_time() - check_timeout > 30000) {
  5883  00173A  EC39  F01C         	call	_get_time	;wreg free
  5884  00173E  0100               	movlb	0	; () banked
  5885  001740  5188               	movf	_check_timeout& (0+255),w,b
  5886  001742  5D9C               	subwf	?_get_time& (0+255),w,b
  5887  001744  6FAB               	movwf	??_LTD_process& (0+255),b
  5888  001746  5189               	movf	(_check_timeout+1)& (0+255),w,b
  5889  001748  599D               	subwfb	(?_get_time+1)& (0+255),w,b
  5890  00174A  6FAC               	movwf	(??_LTD_process+1)& (0+255),b
  5891  00174C  518A               	movf	(_check_timeout+2)& (0+255),w,b
  5892  00174E  599E               	subwfb	(?_get_time+2)& (0+255),w,b
  5893  001750  6FAD               	movwf	(??_LTD_process+2)& (0+255),b
  5894  001752  518B               	movf	(_check_timeout+3)& (0+255),w,b
  5895  001754  599F               	subwfb	(?_get_time+3)& (0+255),w,b
  5896  001756  6FAE               	movwf	(??_LTD_process+3)& (0+255),b
  5897  001758  51AE               	movf	(??_LTD_process+3)& (0+255),w,b
  5898  00175A  11AD               	iorwf	(??_LTD_process+2)& (0+255),w,b
  5899  00175C  E10B               	bnz	u2610
  5900  00175E  0E31               	movlw	49
  5901  001760  5DAB               	subwf	??_LTD_process& (0+255),w,b
  5902  001762  0E75               	movlw	117
  5903  001764  59AC               	subwfb	(??_LTD_process+1)& (0+255),w,b
  5904  001766  A0D8               	btfss	status,0,c
  5905  001768  EFB8  F00B         	goto	u2611
  5906  00176C  EFBA  F00B         	goto	u2610
  5907  001770                     u2611:
  5908  001770  EFCA  F00B         	goto	l3397
  5909  001774                     u2610:
  5910  001774                     
  5911                           ; BSR set to: 0
  5912                           ;main.c: 111:                 LCDPutInst(0x01);
  5913  001774  0E01               	movlw	1
  5914  001776  EC96  F01A         	call	_LCDPutInst
  5915  00177A                     
  5916                           ;main.c: 112:                 LCDPrint(0, 0, "ERROR - TURN OFF");
  5917  00177A  0E00               	movlw	0
  5918  00177C  0100               	movlb	0	; () banked
  5919  00177E  6FA7               	movwf	LCDPrint@pos& (0+255),b
  5920  001780  0E23               	movlw	low STR_8
  5921  001782  6FA8               	movwf	LCDPrint@ptr& (0+255),b
  5922  001784  0E10               	movlw	high STR_8
  5923  001786  6FA9               	movwf	(LCDPrint@ptr+1)& (0+255),b
  5924  001788  0E00               	movlw	0
  5925  00178A  EC54  F01A         	call	_LCDPrint
  5926  00178E                     
  5927                           ;main.c: 113:                 state = TERMINATE;
  5928  00178E  0E03               	movlw	3
  5929  001790  0100               	movlb	0	; () banked
  5930  001792  6F97               	movwf	_state& (0+255),b	;volatile
  5931  001794                     l3397:
  5932                           
  5933                           ; BSR set to: 0
  5934                           ;main.c: 115:             if(flag_change_state) {
  5935  001794  5195               	movf	_flag_change_state& (0+255),w,b
  5936  001796  B4D8               	btfsc	status,2,c
  5937  001798  EFD0  F00B         	goto	u2621
  5938  00179C  EFD2  F00B         	goto	u2620
  5939  0017A0                     u2621:
  5940  0017A0  EFEC  F00C         	goto	l105
  5941  0017A4                     u2620:
  5942  0017A4                     
  5943                           ; BSR set to: 0
  5944                           ;main.c: 116:                 flag_change_state = 0;
  5945  0017A4  0E00               	movlw	0
  5946  0017A6  6F95               	movwf	_flag_change_state& (0+255),b
  5947                           
  5948                           ;main.c: 118:                 if(!isSet) {
  5949  0017A8  5194               	movf	_isSet& (0+255),w,b
  5950  0017AA  A4D8               	btfss	status,2,c
  5951  0017AC  EFDA  F00B         	goto	u2631
  5952  0017B0  EFDC  F00B         	goto	u2630
  5953  0017B4                     u2631:
  5954  0017B4  EFEF  F00B         	goto	l3403
  5955  0017B8                     u2630:
  5956  0017B8                     
  5957                           ; BSR set to: 0
  5958                           ;main.c: 119:                     LCDPrint(0, 0, "              ");
  5959  0017B8  0E00               	movlw	0
  5960  0017BA  6FA7               	movwf	LCDPrint@pos& (0+255),b
  5961  0017BC  0E34               	movlw	low STR_3
  5962  0017BE  6FA8               	movwf	LCDPrint@ptr& (0+255),b
  5963  0017C0  0E10               	movlw	high STR_3
  5964  0017C2  6FA9               	movwf	(LCDPrint@ptr+1)& (0+255),b
  5965  0017C4  0E00               	movlw	0
  5966  0017C6  EC54  F01A         	call	_LCDPrint
  5967                           
  5968                           ;main.c: 120:                     LCDPrint(0, 0, "Heater");
  5969  0017CA  0E00               	movlw	0
  5970  0017CC  0100               	movlb	0	; () banked
  5971  0017CE  6FA7               	movwf	LCDPrint@pos& (0+255),b
  5972  0017D0  0E6C               	movlw	low STR_4
  5973  0017D2  6FA8               	movwf	LCDPrint@ptr& (0+255),b
  5974  0017D4  0E10               	movlw	high STR_4
  5975  0017D6  6FA9               	movwf	(LCDPrint@ptr+1)& (0+255),b
  5976  0017D8  0E00               	movlw	0
  5977  0017DA  EC54  F01A         	call	_LCDPrint
  5978  0017DE                     l3403:
  5979                           
  5980                           ;main.c: 123:                 state = HEATER;
  5981  0017DE  0E01               	movlw	1
  5982  0017E0  0100               	movlb	0	; () banked
  5983  0017E2  6F97               	movwf	_state& (0+255),b	;volatile
  5984  0017E4                     
  5985                           ; BSR set to: 0
  5986                           ;main.c: 124:                 check_timeout = get_time();
  5987  0017E4  EC39  F01C         	call	_get_time	;wreg free
  5988  0017E8  C09C  F088         	movff	?_get_time,_check_timeout
  5989  0017EC  C09D  F089         	movff	?_get_time+1,_check_timeout+1
  5990  0017F0  C09E  F08A         	movff	?_get_time+2,_check_timeout+2
  5991  0017F4  C09F  F08B         	movff	?_get_time+3,_check_timeout+3
  5992  0017F8                     
  5993                           ;main.c: 126:                 turn_off_heat_pump();
  5994  0017F8  EC59  F01C         	call	_turn_off_heat_pump	;wreg free
  5995  0017FC                     
  5996                           ;main.c: 127:                 turn_off_fan(2);
  5997  0017FC  0E00               	movlw	0
  5998  0017FE  0100               	movlb	0	; () banked
  5999  001800  6F9D               	movwf	(turn_off_fan@idx+1)& (0+255),b
  6000  001802  0E02               	movlw	2
  6001  001804  6F9C               	movwf	turn_off_fan@idx& (0+255),b
  6002  001806  EC2D  F01A         	call	_turn_off_fan	;wreg free
  6003  00180A                     
  6004                           ;main.c: 128:                 turn_on_heater();
  6005  00180A  EC53  F01C         	call	_turn_on_heater	;wreg free
  6006  00180E                     
  6007                           ;main.c: 129:                 turn_on_fan(1);
  6008  00180E  0E00               	movlw	0
  6009  001810  0100               	movlb	0	; () banked
  6010  001812  6F9D               	movwf	(turn_on_fan@idx+1)& (0+255),b
  6011  001814  0E01               	movlw	1
  6012  001816  6F9C               	movwf	turn_on_fan@idx& (0+255),b
  6013  001818  ECB7  F01A         	call	_turn_on_fan	;wreg free
  6014  00181C  EFEC  F00C         	goto	l105
  6015  001820                     l3415:
  6016                           
  6017                           ; BSR set to: 0
  6018                           ;main.c: 133:             LCDPrint(0, 0, "              ");
  6019  001820  0E00               	movlw	0
  6020  001822  6FA7               	movwf	LCDPrint@pos& (0+255),b
  6021  001824  0E34               	movlw	low STR_3
  6022  001826  6FA8               	movwf	LCDPrint@ptr& (0+255),b
  6023  001828  0E10               	movlw	high STR_3
  6024  00182A  6FA9               	movwf	(LCDPrint@ptr+1)& (0+255),b
  6025  00182C  0E00               	movlw	0
  6026  00182E  EC54  F01A         	call	_LCDPrint
  6027                           
  6028                           ;main.c: 134:             LCDPrint(0, 0, "Finish");
  6029  001832  0E00               	movlw	0
  6030  001834  0100               	movlb	0	; () banked
  6031  001836  6FA7               	movwf	LCDPrint@pos& (0+255),b
  6032  001838  0E65               	movlw	low STR_15
  6033  00183A  6FA8               	movwf	LCDPrint@ptr& (0+255),b
  6034  00183C  0E10               	movlw	high STR_15
  6035  00183E  6FA9               	movwf	(LCDPrint@ptr+1)& (0+255),b
  6036  001840  0E00               	movlw	0
  6037  001842  EC54  F01A         	call	_LCDPrint
  6038                           
  6039                           ;main.c: 135:             LCDPrint(1, 0, "T:");
  6040  001846  0E00               	movlw	0
  6041  001848  0100               	movlb	0	; () banked
  6042  00184A  6FA7               	movwf	LCDPrint@pos& (0+255),b
  6043  00184C  0E82               	movlw	low STR_16
  6044  00184E  6FA8               	movwf	LCDPrint@ptr& (0+255),b
  6045  001850  0E10               	movlw	high STR_16
  6046  001852  6FA9               	movwf	(LCDPrint@ptr+1)& (0+255),b
  6047  001854  0E01               	movlw	1
  6048  001856  EC54  F01A         	call	_LCDPrint
  6049                           
  6050                           ;main.c: 136:             LCDPrint(1, 6, "H:");
  6051  00185A  0E06               	movlw	6
  6052  00185C  0100               	movlb	0	; () banked
  6053  00185E  6FA7               	movwf	LCDPrint@pos& (0+255),b
  6054  001860  0E7F               	movlw	low STR_17
  6055  001862  6FA8               	movwf	LCDPrint@ptr& (0+255),b
  6056  001864  0E10               	movlw	high STR_17
  6057  001866  6FA9               	movwf	(LCDPrint@ptr+1)& (0+255),b
  6058  001868  0E01               	movlw	1
  6059  00186A  EC54  F01A         	call	_LCDPrint
  6060  00186E                     
  6061                           ;main.c: 137:             int temp = (int)temperature_value;
  6062  00186E  C098  F0AF         	movff	_temperature_value,LTD_process@temp
  6063  001872  0100               	movlb	0	; () banked
  6064  001874  6BB0               	clrf	(LTD_process@temp+1)& (0+255),b
  6065  001876                     
  6066                           ; BSR set to: 0
  6067                           ;main.c: 138:             int humid = (int)humidity_value;
  6068  001876  C099  F0B1         	movff	_humidity_value,LTD_process@humid
  6069  00187A  6BB2               	clrf	(LTD_process@humid+1)& (0+255),b
  6070  00187C                     
  6071                           ; BSR set to: 0
  6072                           ;main.c: 139:             LCDPrintChar(1, 3, temp / 10 + '0');
  6073  00187C  0E03               	movlw	3
  6074  00187E  6FA7               	movwf	LCDPrintChar@pos& (0+255),b
  6075  001880  C0AF  F09C         	movff	LTD_process@temp,___awdiv@dividend
  6076  001884  C0B0  F09D         	movff	LTD_process@temp+1,___awdiv@dividend+1
  6077  001888  0E00               	movlw	0
  6078  00188A  6F9F               	movwf	(___awdiv@divisor+1)& (0+255),b
  6079  00188C  0E0A               	movlw	10
  6080  00188E  6F9E               	movwf	___awdiv@divisor& (0+255),b
  6081  001890  ECC2  F015         	call	___awdiv	;wreg free
  6082  001894  0100               	movlb	0	; () banked
  6083  001896  519C               	movf	?___awdiv& (0+255),w,b
  6084  001898  0F30               	addlw	48
  6085  00189A  6FA8               	movwf	LCDPrintChar@ch& (0+255),b
  6086  00189C  0E01               	movlw	1
  6087  00189E  ECF7  F01A         	call	_LCDPrintChar
  6088  0018A2                     
  6089                           ;main.c: 140:             LCDPrintChar(1, 4, temp % 10 + '0');
  6090  0018A2  0E04               	movlw	4
  6091  0018A4  0100               	movlb	0	; () banked
  6092  0018A6  6FA7               	movwf	LCDPrintChar@pos& (0+255),b
  6093  0018A8  C0AF  F09C         	movff	LTD_process@temp,___awmod@dividend
  6094  0018AC  C0B0  F09D         	movff	LTD_process@temp+1,___awmod@dividend+1
  6095  0018B0  0E00               	movlw	0
  6096  0018B2  6F9F               	movwf	(___awmod@divisor+1)& (0+255),b
  6097  0018B4  0E0A               	movlw	10
  6098  0018B6  6F9E               	movwf	___awmod@divisor& (0+255),b
  6099  0018B8  EC86  F016         	call	___awmod	;wreg free
  6100  0018BC  0100               	movlb	0	; () banked
  6101  0018BE  519C               	movf	?___awmod& (0+255),w,b
  6102  0018C0  0F30               	addlw	48
  6103  0018C2  6FA8               	movwf	LCDPrintChar@ch& (0+255),b
  6104  0018C4  0E01               	movlw	1
  6105  0018C6  ECF7  F01A         	call	_LCDPrintChar
  6106  0018CA                     
  6107                           ;main.c: 141:             LCDPrintChar(1, 8, humid / 10 + '0');
  6108  0018CA  0E08               	movlw	8
  6109  0018CC  0100               	movlb	0	; () banked
  6110  0018CE  6FA7               	movwf	LCDPrintChar@pos& (0+255),b
  6111  0018D0  C0B1  F09C         	movff	LTD_process@humid,___awdiv@dividend
  6112  0018D4  C0B2  F09D         	movff	LTD_process@humid+1,___awdiv@dividend+1
  6113  0018D8  0E00               	movlw	0
  6114  0018DA  6F9F               	movwf	(___awdiv@divisor+1)& (0+255),b
  6115  0018DC  0E0A               	movlw	10
  6116  0018DE  6F9E               	movwf	___awdiv@divisor& (0+255),b
  6117  0018E0  ECC2  F015         	call	___awdiv	;wreg free
  6118  0018E4  0100               	movlb	0	; () banked
  6119  0018E6  519C               	movf	?___awdiv& (0+255),w,b
  6120  0018E8  0F30               	addlw	48
  6121  0018EA  6FA8               	movwf	LCDPrintChar@ch& (0+255),b
  6122  0018EC  0E01               	movlw	1
  6123  0018EE  ECF7  F01A         	call	_LCDPrintChar
  6124  0018F2                     
  6125                           ;main.c: 142:             LCDPrintChar(1, 9, humid % 10 + '0');
  6126  0018F2  0E09               	movlw	9
  6127  0018F4  0100               	movlb	0	; () banked
  6128  0018F6  6FA7               	movwf	LCDPrintChar@pos& (0+255),b
  6129  0018F8  C0B1  F09C         	movff	LTD_process@humid,___awmod@dividend
  6130  0018FC  C0B2  F09D         	movff	LTD_process@humid+1,___awmod@dividend+1
  6131  001900  0E00               	movlw	0
  6132  001902  6F9F               	movwf	(___awmod@divisor+1)& (0+255),b
  6133  001904  0E0A               	movlw	10
  6134  001906  6F9E               	movwf	___awmod@divisor& (0+255),b
  6135  001908  EC86  F016         	call	___awmod	;wreg free
  6136  00190C  0100               	movlb	0	; () banked
  6137  00190E  519C               	movf	?___awmod& (0+255),w,b
  6138  001910  0F30               	addlw	48
  6139  001912  6FA8               	movwf	LCDPrintChar@ch& (0+255),b
  6140  001914  0E01               	movlw	1
  6141  001916  ECF7  F01A         	call	_LCDPrintChar
  6142  00191A                     
  6143                           ;main.c: 143:             _delay((unsigned long)((2000)*(8000000/4000.0)));
  6144  00191A  0E15               	movlw	21
  6145  00191C  0100               	movlb	0	; () banked
  6146  00191E  6FAC               	movwf	(??_LTD_process+1)& (0+255),b
  6147  001920  0E4B               	movlw	75
  6148  001922  6FAB               	movwf	??_LTD_process& (0+255),b
  6149  001924  0EBE               	movlw	190
  6150  001926                     u2977:
  6151  001926  2EE8               	decfsz	wreg,f,c
  6152  001928  D7FE               	bra	u2977
  6153  00192A  2FAB               	decfsz	??_LTD_process& (0+255),f,b
  6154  00192C  D7FC               	bra	u2977
  6155  00192E  2FAC               	decfsz	(??_LTD_process+1)& (0+255),f,b
  6156  001930  D7FA               	bra	u2977
  6157  001932  F000               	nop	
  6158  001934                     
  6159                           ;main.c: 144:             turn_off_heater();
  6160  001934  EC57  F01C         	call	_turn_off_heater	;wreg free
  6161  001938                     
  6162                           ;main.c: 145:             turn_off_fan(1);
  6163  001938  0E00               	movlw	0
  6164  00193A  0100               	movlb	0	; () banked
  6165  00193C  6F9D               	movwf	(turn_off_fan@idx+1)& (0+255),b
  6166  00193E  0E01               	movlw	1
  6167  001940  6F9C               	movwf	turn_off_fan@idx& (0+255),b
  6168  001942  EC2D  F01A         	call	_turn_off_fan	;wreg free
  6169  001946                     
  6170                           ;main.c: 146:             turn_off_heat_pump();
  6171  001946  EC59  F01C         	call	_turn_off_heat_pump	;wreg free
  6172  00194A                     
  6173                           ;main.c: 147:             turn_off_fan(2);
  6174  00194A  0E00               	movlw	0
  6175  00194C  0100               	movlb	0	; () banked
  6176  00194E  6F9D               	movwf	(turn_off_fan@idx+1)& (0+255),b
  6177  001950  0E02               	movlw	2
  6178  001952  6F9C               	movwf	turn_off_fan@idx& (0+255),b
  6179  001954  EC2D  F01A         	call	_turn_off_fan	;wreg free
  6180  001958                     
  6181                           ;main.c: 148:             check_timeout = 0;
  6182  001958  0E00               	movlw	0
  6183  00195A  0100               	movlb	0	; () banked
  6184  00195C  6F88               	movwf	_check_timeout& (0+255),b
  6185  00195E  0E00               	movlw	0
  6186  001960  6F89               	movwf	(_check_timeout+1)& (0+255),b
  6187  001962  0E00               	movlw	0
  6188  001964  6F8A               	movwf	(_check_timeout+2)& (0+255),b
  6189  001966  0E00               	movlw	0
  6190  001968  6F8B               	movwf	(_check_timeout+3)& (0+255),b
  6191  00196A                     
  6192                           ; BSR set to: 0
  6193                           ;main.c: 149:             state = IDLE;
  6194  00196A  0E00               	movlw	0
  6195  00196C  6F97               	movwf	_state& (0+255),b	;volatile
  6196  00196E                     
  6197                           ; BSR set to: 0
  6198                           ;main.c: 150:             RA5_pressed = 0;
  6199  00196E  0E00               	movlw	0
  6200  001970  6F9B               	movwf	_RA5_pressed& (0+255),b
  6201  001972                     
  6202                           ; BSR set to: 0
  6203                           ;main.c: 151:             LCDPrint(0, 0, "              ");
  6204  001972  0E00               	movlw	0
  6205  001974  6FA7               	movwf	LCDPrint@pos& (0+255),b
  6206  001976  0E34               	movlw	low STR_3
  6207  001978  6FA8               	movwf	LCDPrint@ptr& (0+255),b
  6208  00197A  0E10               	movlw	high STR_3
  6209  00197C  6FA9               	movwf	(LCDPrint@ptr+1)& (0+255),b
  6210  00197E  0E00               	movlw	0
  6211  001980  EC54  F01A         	call	_LCDPrint
  6212  001984                     
  6213                           ;main.c: 152:             LCDPrint(0, 0, "IDLE");
  6214  001984  0E00               	movlw	0
  6215  001986  0100               	movlb	0	; () banked
  6216  001988  6FA7               	movwf	LCDPrint@pos& (0+255),b
  6217  00198A  0E73               	movlw	low STR_19
  6218  00198C  6FA8               	movwf	LCDPrint@ptr& (0+255),b
  6219  00198E  0E10               	movlw	high STR_19
  6220  001990  6FA9               	movwf	(LCDPrint@ptr+1)& (0+255),b
  6221  001992  0E00               	movlw	0
  6222  001994  EC54  F01A         	call	_LCDPrint
  6223                           
  6224                           ;main.c: 153:             break;
  6225  001998  EFEC  F00C         	goto	l105
  6226  00199C                     l3451:
  6227  00199C  0100               	movlb	0	; () banked
  6228  00199E  5197               	movf	_state& (0+255),w,b	;volatile
  6229  0019A0  6FAB               	movwf	??_LTD_process& (0+255),b
  6230  0019A2  6BAC               	clrf	(??_LTD_process+1)& (0+255),b
  6231                           
  6232                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6233                           ; Switch size 1, requested type "simple"
  6234                           ; Number of cases is 1, Range of values is 0 to 0
  6235                           ; switch strategies available:
  6236                           ; Name         Instructions Cycles
  6237                           ; simple_byte            4     3 (average)
  6238                           ;	Chosen strategy is simple_byte
  6239  0019A4  51AC               	movf	(??_LTD_process+1)& (0+255),w,b
  6240  0019A6  0A00               	xorlw	0	; case 0
  6241  0019A8  B4D8               	btfsc	status,2,c
  6242  0019AA  EFD9  F00C         	goto	l3795
  6243  0019AE  EFEC  F00C         	goto	l105
  6244  0019B2                     l3795:
  6245                           
  6246                           ; BSR set to: 0
  6247                           ; Switch size 1, requested type "simple"
  6248                           ; Number of cases is 4, Range of values is 0 to 3
  6249                           ; switch strategies available:
  6250                           ; Name         Instructions Cycles
  6251                           ; simple_byte           13     7 (average)
  6252                           ;	Chosen strategy is simple_byte
  6253  0019B2  51AB               	movf	??_LTD_process& (0+255),w,b
  6254  0019B4  0A00               	xorlw	0	; case 0
  6255  0019B6  B4D8               	btfsc	status,2,c
  6256  0019B8  EFF5  F00A         	goto	l3349
  6257  0019BC  0A01               	xorlw	1	; case 1
  6258  0019BE  B4D8               	btfsc	status,2,c
  6259  0019C0  EF2A  F00B         	goto	l3363
  6260  0019C4  0A03               	xorlw	3	; case 2
  6261  0019C6  B4D8               	btfsc	status,2,c
  6262  0019C8  EF9D  F00B         	goto	l3389
  6263  0019CC  0A01               	xorlw	1	; case 3
  6264  0019CE  B4D8               	btfsc	status,2,c
  6265  0019D0  EF10  F00C         	goto	l3415
  6266  0019D4  EFEC  F00C         	goto	l105
  6267  0019D8                     l105:
  6268  0019D8  0012               	return		;funcret
  6269  0019DA                     __end_of_LTD_process:
  6270                           	opt callstack 0
  6271                           
  6272 ;; *************** function _turn_on_heater *****************
  6273 ;; Defined at:
  6274 ;;		line 3 in file "LTDtasks.c"
  6275 ;; Parameters:    Size  Location     Type
  6276 ;;		None
  6277 ;; Auto vars:     Size  Location     Type
  6278 ;;		None
  6279 ;; Return value:  Size  Location     Type
  6280 ;;                  1    wreg      void 
  6281 ;; Registers used:
  6282 ;;		None
  6283 ;; Tracked objects:
  6284 ;;		On entry : 0/0
  6285 ;;		On exit  : 0/0
  6286 ;;		Unchanged: 0/0
  6287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6292 ;;Total ram usage:        0 bytes
  6293 ;; Hardware stack levels used:    1
  6294 ;; Hardware stack levels required when called:    5
  6295 ;; This function calls:
  6296 ;;		Nothing
  6297 ;; This function is called by:
  6298 ;;		_LTD_process
  6299 ;; This function uses a non-reentrant model
  6300 ;;
  6301                           
  6302                           	psect	text32
  6303  0038A6                     __ptext32:
  6304                           	opt callstack 0
  6305  0038A6                     _turn_on_heater:
  6306                           	opt callstack 24
  6307  0038A6                     
  6308                           ;LTDtasks.c: 4:     LATDbits.LATD0 = 1;
  6309  0038A6  808C               	bsf	140,0,c	;volatile
  6310  0038A8  0012               	return		;funcret
  6311  0038AA                     __end_of_turn_on_heater:
  6312                           	opt callstack 0
  6313                           
  6314 ;; *************** function _turn_on_heat_pump *****************
  6315 ;; Defined at:
  6316 ;;		line 11 in file "LTDtasks.c"
  6317 ;; Parameters:    Size  Location     Type
  6318 ;;		None
  6319 ;; Auto vars:     Size  Location     Type
  6320 ;;		None
  6321 ;; Return value:  Size  Location     Type
  6322 ;;                  1    wreg      void 
  6323 ;; Registers used:
  6324 ;;		None
  6325 ;; Tracked objects:
  6326 ;;		On entry : 0/0
  6327 ;;		On exit  : 0/0
  6328 ;;		Unchanged: 0/0
  6329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6334 ;;Total ram usage:        0 bytes
  6335 ;; Hardware stack levels used:    1
  6336 ;; Hardware stack levels required when called:    5
  6337 ;; This function calls:
  6338 ;;		Nothing
  6339 ;; This function is called by:
  6340 ;;		_LTD_process
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343                           
  6344                           	psect	text33
  6345  0038AA                     __ptext33:
  6346                           	opt callstack 0
  6347  0038AA                     _turn_on_heat_pump:
  6348                           	opt callstack 24
  6349  0038AA                     
  6350                           ;LTDtasks.c: 12:     LATDbits.LATD1 = 1;
  6351  0038AA  828C               	bsf	140,1,c	;volatile
  6352  0038AC  0012               	return		;funcret
  6353  0038AE                     __end_of_turn_on_heat_pump:
  6354                           	opt callstack 0
  6355                           
  6356 ;; *************** function _turn_on_fan *****************
  6357 ;; Defined at:
  6358 ;;		line 19 in file "LTDtasks.c"
  6359 ;; Parameters:    Size  Location     Type
  6360 ;;  idx             2    0[BANK0 ] int 
  6361 ;; Auto vars:     Size  Location     Type
  6362 ;;		None
  6363 ;; Return value:  Size  Location     Type
  6364 ;;                  1    wreg      void 
  6365 ;; Registers used:
  6366 ;;		wreg, status,2, status,0
  6367 ;; Tracked objects:
  6368 ;;		On entry : 0/0
  6369 ;;		On exit  : 0/0
  6370 ;;		Unchanged: 0/0
  6371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6372 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6374 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6375 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6376 ;;Total ram usage:        4 bytes
  6377 ;; Hardware stack levels used:    1
  6378 ;; Hardware stack levels required when called:    5
  6379 ;; This function calls:
  6380 ;;		Nothing
  6381 ;; This function is called by:
  6382 ;;		_LTD_process
  6383 ;; This function uses a non-reentrant model
  6384 ;;
  6385                           
  6386                           	psect	text34
  6387  00356E                     __ptext34:
  6388                           	opt callstack 0
  6389  00356E                     _turn_on_fan:
  6390                           	opt callstack 24
  6391  00356E                     
  6392                           ;LTDtasks.c: 20:     switch (idx) {
  6393  00356E  EFBF  F01A         	goto	l3035
  6394  003572                     l712:
  6395                           
  6396                           ; BSR set to: 0
  6397                           ;LTDtasks.c: 22:             LATDbits.LATD7 = 1;
  6398  003572  8E8C               	bsf	140,7,c	;volatile
  6399                           
  6400                           ;LTDtasks.c: 23:             break;
  6401  003574  EFD6  F01A         	goto	l715
  6402  003578                     l714:
  6403                           
  6404                           ; BSR set to: 0
  6405                           ;LTDtasks.c: 25:             LATDbits.LATD6 = 1;
  6406  003578  8C8C               	bsf	140,6,c	;volatile
  6407                           
  6408                           ;LTDtasks.c: 26:             break;
  6409  00357A  EFD6  F01A         	goto	l715
  6410  00357E                     l3035:
  6411  00357E  C09C  F09E         	movff	turn_on_fan@idx,??_turn_on_fan
  6412  003582  C09D  F09F         	movff	turn_on_fan@idx+1,??_turn_on_fan+1
  6413                           
  6414                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6415                           ; Switch size 1, requested type "simple"
  6416                           ; Number of cases is 1, Range of values is 0 to 0
  6417                           ; switch strategies available:
  6418                           ; Name         Instructions Cycles
  6419                           ; simple_byte            4     3 (average)
  6420                           ;	Chosen strategy is simple_byte
  6421  003586  0100               	movlb	0	; () banked
  6422  003588  519F               	movf	(??_turn_on_fan+1)& (0+255),w,b
  6423  00358A  0A00               	xorlw	0	; case 0
  6424  00358C  B4D8               	btfsc	status,2,c
  6425  00358E  EFCB  F01A         	goto	l3797
  6426  003592  EFD6  F01A         	goto	l715
  6427  003596                     l3797:
  6428                           
  6429                           ; BSR set to: 0
  6430                           ; Switch size 1, requested type "simple"
  6431                           ; Number of cases is 2, Range of values is 1 to 2
  6432                           ; switch strategies available:
  6433                           ; Name         Instructions Cycles
  6434                           ; simple_byte            7     4 (average)
  6435                           ;	Chosen strategy is simple_byte
  6436  003596  519E               	movf	??_turn_on_fan& (0+255),w,b
  6437  003598  0A01               	xorlw	1	; case 1
  6438  00359A  B4D8               	btfsc	status,2,c
  6439  00359C  EFB9  F01A         	goto	l712
  6440  0035A0  0A03               	xorlw	3	; case 2
  6441  0035A2  B4D8               	btfsc	status,2,c
  6442  0035A4  EFBC  F01A         	goto	l714
  6443  0035A8  EFD6  F01A         	goto	l715
  6444  0035AC                     l715:
  6445                           
  6446                           ; BSR set to: 0
  6447  0035AC  0012               	return		;funcret
  6448  0035AE                     __end_of_turn_on_fan:
  6449                           	opt callstack 0
  6450                           
  6451 ;; *************** function _turn_off_heater *****************
  6452 ;; Defined at:
  6453 ;;		line 7 in file "LTDtasks.c"
  6454 ;; Parameters:    Size  Location     Type
  6455 ;;		None
  6456 ;; Auto vars:     Size  Location     Type
  6457 ;;		None
  6458 ;; Return value:  Size  Location     Type
  6459 ;;                  1    wreg      void 
  6460 ;; Registers used:
  6461 ;;		None
  6462 ;; Tracked objects:
  6463 ;;		On entry : 0/0
  6464 ;;		On exit  : 0/0
  6465 ;;		Unchanged: 0/0
  6466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6471 ;;Total ram usage:        0 bytes
  6472 ;; Hardware stack levels used:    1
  6473 ;; Hardware stack levels required when called:    5
  6474 ;; This function calls:
  6475 ;;		Nothing
  6476 ;; This function is called by:
  6477 ;;		_LTD_process
  6478 ;;		_force_turn_off
  6479 ;; This function uses a non-reentrant model
  6480 ;;
  6481                           
  6482                           	psect	text35
  6483  0038AE                     __ptext35:
  6484                           	opt callstack 0
  6485  0038AE                     _turn_off_heater:
  6486                           	opt callstack 24
  6487  0038AE                     
  6488                           ;LTDtasks.c: 8:     LATDbits.LATD0 = 0;
  6489  0038AE  908C               	bcf	140,0,c	;volatile
  6490  0038B0  0012               	return		;funcret
  6491  0038B2                     __end_of_turn_off_heater:
  6492                           	opt callstack 0
  6493                           
  6494 ;; *************** function _turn_off_heat_pump *****************
  6495 ;; Defined at:
  6496 ;;		line 15 in file "LTDtasks.c"
  6497 ;; Parameters:    Size  Location     Type
  6498 ;;		None
  6499 ;; Auto vars:     Size  Location     Type
  6500 ;;		None
  6501 ;; Return value:  Size  Location     Type
  6502 ;;                  1    wreg      void 
  6503 ;; Registers used:
  6504 ;;		None
  6505 ;; Tracked objects:
  6506 ;;		On entry : 0/0
  6507 ;;		On exit  : 0/0
  6508 ;;		Unchanged: 0/0
  6509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6514 ;;Total ram usage:        0 bytes
  6515 ;; Hardware stack levels used:    1
  6516 ;; Hardware stack levels required when called:    5
  6517 ;; This function calls:
  6518 ;;		Nothing
  6519 ;; This function is called by:
  6520 ;;		_LTD_process
  6521 ;;		_force_turn_off
  6522 ;; This function uses a non-reentrant model
  6523 ;;
  6524                           
  6525                           	psect	text36
  6526  0038B2                     __ptext36:
  6527                           	opt callstack 0
  6528  0038B2                     _turn_off_heat_pump:
  6529                           	opt callstack 24
  6530  0038B2                     
  6531                           ;LTDtasks.c: 16:     LATDbits.LATD1 = 0;
  6532  0038B2  928C               	bcf	140,1,c	;volatile
  6533  0038B4  0012               	return		;funcret
  6534  0038B6                     __end_of_turn_off_heat_pump:
  6535                           	opt callstack 0
  6536                           
  6537 ;; *************** function _turn_off_fan *****************
  6538 ;; Defined at:
  6539 ;;		line 30 in file "LTDtasks.c"
  6540 ;; Parameters:    Size  Location     Type
  6541 ;;  idx             2    0[BANK0 ] int 
  6542 ;; Auto vars:     Size  Location     Type
  6543 ;;		None
  6544 ;; Return value:  Size  Location     Type
  6545 ;;                  1    wreg      void 
  6546 ;; Registers used:
  6547 ;;		wreg, status,2, status,0
  6548 ;; Tracked objects:
  6549 ;;		On entry : 0/0
  6550 ;;		On exit  : 0/0
  6551 ;;		Unchanged: 0/0
  6552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6553 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6555 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6556 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6557 ;;Total ram usage:        4 bytes
  6558 ;; Hardware stack levels used:    1
  6559 ;; Hardware stack levels required when called:    5
  6560 ;; This function calls:
  6561 ;;		Nothing
  6562 ;; This function is called by:
  6563 ;;		_LTD_process
  6564 ;;		_force_turn_off
  6565 ;; This function uses a non-reentrant model
  6566 ;;
  6567                           
  6568                           	psect	text37
  6569  00345A                     __ptext37:
  6570                           	opt callstack 0
  6571  00345A                     _turn_off_fan:
  6572                           	opt callstack 24
  6573  00345A                     
  6574                           ;LTDtasks.c: 31:     switch (idx) {
  6575  00345A  EF38  F01A         	goto	l3049
  6576  00345E                     l719:
  6577                           
  6578                           ; BSR set to: 0
  6579                           ;LTDtasks.c: 33:             LATDbits.LATD7 = 0;
  6580  00345E  9E8C               	bcf	140,7,c	;volatile
  6581                           
  6582                           ;LTDtasks.c: 34:             break;
  6583  003460  EF53  F01A         	goto	l723
  6584  003464                     l721:
  6585                           
  6586                           ; BSR set to: 0
  6587                           ;LTDtasks.c: 36:             LATDbits.LATD6 = 0;
  6588  003464  9C8C               	bcf	140,6,c	;volatile
  6589                           
  6590                           ;LTDtasks.c: 37:             break;
  6591  003466  EF53  F01A         	goto	l723
  6592  00346A                     l722:
  6593                           
  6594                           ; BSR set to: 0
  6595                           ;LTDtasks.c: 39:             LATDbits.LATD5 = 0;
  6596  00346A  9A8C               	bcf	140,5,c	;volatile
  6597                           
  6598                           ;LTDtasks.c: 40:             break;
  6599  00346C  EF53  F01A         	goto	l723
  6600  003470                     l3049:
  6601  003470  C09C  F09E         	movff	turn_off_fan@idx,??_turn_off_fan
  6602  003474  C09D  F09F         	movff	turn_off_fan@idx+1,??_turn_off_fan+1
  6603                           
  6604                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6605                           ; Switch size 1, requested type "simple"
  6606                           ; Number of cases is 1, Range of values is 0 to 0
  6607                           ; switch strategies available:
  6608                           ; Name         Instructions Cycles
  6609                           ; simple_byte            4     3 (average)
  6610                           ;	Chosen strategy is simple_byte
  6611  003478  0100               	movlb	0	; () banked
  6612  00347A  519F               	movf	(??_turn_off_fan+1)& (0+255),w,b
  6613  00347C  0A00               	xorlw	0	; case 0
  6614  00347E  B4D8               	btfsc	status,2,c
  6615  003480  EF44  F01A         	goto	l3799
  6616  003484  EF53  F01A         	goto	l723
  6617  003488                     l3799:
  6618                           
  6619                           ; BSR set to: 0
  6620                           ; Switch size 1, requested type "simple"
  6621                           ; Number of cases is 3, Range of values is 1 to 3
  6622                           ; switch strategies available:
  6623                           ; Name         Instructions Cycles
  6624                           ; simple_byte           10     6 (average)
  6625                           ;	Chosen strategy is simple_byte
  6626  003488  519E               	movf	??_turn_off_fan& (0+255),w,b
  6627  00348A  0A01               	xorlw	1	; case 1
  6628  00348C  B4D8               	btfsc	status,2,c
  6629  00348E  EF2F  F01A         	goto	l719
  6630  003492  0A03               	xorlw	3	; case 2
  6631  003494  B4D8               	btfsc	status,2,c
  6632  003496  EF32  F01A         	goto	l721
  6633  00349A  0A01               	xorlw	1	; case 3
  6634  00349C  B4D8               	btfsc	status,2,c
  6635  00349E  EF35  F01A         	goto	l722
  6636  0034A2  EF53  F01A         	goto	l723
  6637  0034A6                     l723:
  6638                           
  6639                           ; BSR set to: 0
  6640  0034A6  0012               	return		;funcret
  6641  0034A8                     __end_of_turn_off_fan:
  6642                           	opt callstack 0
  6643                           
  6644 ;; *************** function _get_time *****************
  6645 ;; Defined at:
  6646 ;;		line 112 in file "clock.c"
  6647 ;; Parameters:    Size  Location     Type
  6648 ;;		None
  6649 ;; Auto vars:     Size  Location     Type
  6650 ;;		None
  6651 ;; Return value:  Size  Location     Type
  6652 ;;                  4    0[BANK0 ] unsigned long 
  6653 ;; Registers used:
  6654 ;;		None
  6655 ;; Tracked objects:
  6656 ;;		On entry : 0/0
  6657 ;;		On exit  : 0/0
  6658 ;;		Unchanged: 0/0
  6659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6660 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6663 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6664 ;;Total ram usage:        4 bytes
  6665 ;; Hardware stack levels used:    1
  6666 ;; Hardware stack levels required when called:    5
  6667 ;; This function calls:
  6668 ;;		Nothing
  6669 ;; This function is called by:
  6670 ;;		_LTD_process
  6671 ;; This function uses a non-reentrant model
  6672 ;;
  6673                           
  6674                           	psect	text38
  6675  003872                     __ptext38:
  6676                           	opt callstack 0
  6677  003872                     _get_time:
  6678                           	opt callstack 24
  6679  003872                     
  6680                           ;clock.c: 113:     return time_ms;
  6681  003872  C084  F09C         	movff	_time_ms,?_get_time
  6682  003876  C085  F09D         	movff	_time_ms+1,?_get_time+1
  6683  00387A  C086  F09E         	movff	_time_ms+2,?_get_time+2
  6684  00387E  C087  F09F         	movff	_time_ms+3,?_get_time+3
  6685  003882  0012               	return		;funcret
  6686  003884                     __end_of_get_time:
  6687                           	opt callstack 0
  6688                           
  6689 ;; *************** function ___awmod *****************
  6690 ;; Defined at:
  6691 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  6692 ;; Parameters:    Size  Location     Type
  6693 ;;  dividend        2    0[BANK0 ] int 
  6694 ;;  divisor         2    2[BANK0 ] int 
  6695 ;; Auto vars:     Size  Location     Type
  6696 ;;  sign            1    5[BANK0 ] unsigned char 
  6697 ;;  counter         1    4[BANK0 ] unsigned char 
  6698 ;; Return value:  Size  Location     Type
  6699 ;;                  2    0[BANK0 ] int 
  6700 ;; Registers used:
  6701 ;;		wreg, status,2, status,0
  6702 ;; Tracked objects:
  6703 ;;		On entry : 0/0
  6704 ;;		On exit  : 0/0
  6705 ;;		Unchanged: 0/0
  6706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6707 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6708 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6710 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6711 ;;Total ram usage:        6 bytes
  6712 ;; Hardware stack levels used:    1
  6713 ;; Hardware stack levels required when called:    5
  6714 ;; This function calls:
  6715 ;;		Nothing
  6716 ;; This function is called by:
  6717 ;;		_set_time_process
  6718 ;;		_LTD_process
  6719 ;;		_check_humid_to_turn_fan
  6720 ;;		_print_temp_and_humid
  6721 ;;		_getSizeQueue
  6722 ;;		_dequeue
  6723 ;; This function uses a non-reentrant model
  6724 ;;
  6725                           
  6726                           	psect	text39
  6727  002D0C                     __ptext39:
  6728                           	opt callstack 0
  6729  002D0C                     ___awmod:
  6730                           	opt callstack 24
  6731  002D0C  0E00               	movlw	0
  6732  002D0E  0100               	movlb	0	; () banked
  6733  002D10  6FA1               	movwf	___awmod@sign& (0+255),b
  6734  002D12                     
  6735                           ; BSR set to: 0
  6736  002D12  BF9D               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  6737  002D14  EF90  F016         	goto	u1480
  6738  002D18  EF8E  F016         	goto	u1481
  6739  002D1C                     u1481:
  6740  002D1C  EF96  F016         	goto	l2611
  6741  002D20                     u1480:
  6742  002D20                     
  6743                           ; BSR set to: 0
  6744  002D20  6D9C               	negf	___awmod@dividend& (0+255),b
  6745  002D22  1F9D               	comf	(___awmod@dividend+1)& (0+255),f,b
  6746  002D24  B0D8               	btfsc	status,0,c
  6747  002D26  2B9D               	incf	(___awmod@dividend+1)& (0+255),f,b
  6748  002D28                     
  6749                           ; BSR set to: 0
  6750  002D28  0E01               	movlw	1
  6751  002D2A  6FA1               	movwf	___awmod@sign& (0+255),b
  6752  002D2C                     l2611:
  6753                           
  6754                           ; BSR set to: 0
  6755  002D2C  BF9F               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  6756  002D2E  EF9D  F016         	goto	u1490
  6757  002D32  EF9B  F016         	goto	u1491
  6758  002D36                     u1491:
  6759  002D36  EFA1  F016         	goto	l2615
  6760  002D3A                     u1490:
  6761  002D3A                     
  6762                           ; BSR set to: 0
  6763  002D3A  6D9E               	negf	___awmod@divisor& (0+255),b
  6764  002D3C  1F9F               	comf	(___awmod@divisor+1)& (0+255),f,b
  6765  002D3E  B0D8               	btfsc	status,0,c
  6766  002D40  2B9F               	incf	(___awmod@divisor+1)& (0+255),f,b
  6767  002D42                     l2615:
  6768                           
  6769                           ; BSR set to: 0
  6770  002D42  519E               	movf	___awmod@divisor& (0+255),w,b
  6771  002D44  119F               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  6772  002D46  B4D8               	btfsc	status,2,c
  6773  002D48  EFA8  F016         	goto	u1501
  6774  002D4C  EFAA  F016         	goto	u1500
  6775  002D50                     u1501:
  6776  002D50  EFCE  F016         	goto	l2631
  6777  002D54                     u1500:
  6778  002D54                     
  6779                           ; BSR set to: 0
  6780  002D54  0E01               	movlw	1
  6781  002D56  6FA0               	movwf	___awmod@counter& (0+255),b
  6782  002D58  EFB2  F016         	goto	l2621
  6783  002D5C                     l2619:
  6784                           
  6785                           ; BSR set to: 0
  6786  002D5C  90D8               	bcf	status,0,c
  6787  002D5E  379E               	rlcf	___awmod@divisor& (0+255),f,b
  6788  002D60  379F               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  6789  002D62  2BA0               	incf	___awmod@counter& (0+255),f,b
  6790  002D64                     l2621:
  6791                           
  6792                           ; BSR set to: 0
  6793  002D64  AF9F               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6794  002D66  EFB7  F016         	goto	u1511
  6795  002D6A  EFB9  F016         	goto	u1510
  6796  002D6E                     u1511:
  6797  002D6E  EFAE  F016         	goto	l2619
  6798  002D72                     u1510:
  6799  002D72                     l2623:
  6800                           
  6801                           ; BSR set to: 0
  6802  002D72  519E               	movf	___awmod@divisor& (0+255),w,b
  6803  002D74  5D9C               	subwf	___awmod@dividend& (0+255),w,b
  6804  002D76  519F               	movf	(___awmod@divisor+1)& (0+255),w,b
  6805  002D78  599D               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  6806  002D7A  A0D8               	btfss	status,0,c
  6807  002D7C  EFC2  F016         	goto	u1521
  6808  002D80  EFC4  F016         	goto	u1520
  6809  002D84                     u1521:
  6810  002D84  EFC8  F016         	goto	l2627
  6811  002D88                     u1520:
  6812  002D88                     
  6813                           ; BSR set to: 0
  6814  002D88  519E               	movf	___awmod@divisor& (0+255),w,b
  6815  002D8A  5F9C               	subwf	___awmod@dividend& (0+255),f,b
  6816  002D8C  519F               	movf	(___awmod@divisor+1)& (0+255),w,b
  6817  002D8E  5B9D               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  6818  002D90                     l2627:
  6819                           
  6820                           ; BSR set to: 0
  6821  002D90  90D8               	bcf	status,0,c
  6822  002D92  339F               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  6823  002D94  339E               	rrcf	___awmod@divisor& (0+255),f,b
  6824  002D96                     
  6825                           ; BSR set to: 0
  6826  002D96  2FA0               	decfsz	___awmod@counter& (0+255),f,b
  6827  002D98  EFB9  F016         	goto	l2623
  6828  002D9C                     l2631:
  6829                           
  6830                           ; BSR set to: 0
  6831  002D9C  51A1               	movf	___awmod@sign& (0+255),w,b
  6832  002D9E  B4D8               	btfsc	status,2,c
  6833  002DA0  EFD4  F016         	goto	u1531
  6834  002DA4  EFD6  F016         	goto	u1530
  6835  002DA8                     u1531:
  6836  002DA8  EFDA  F016         	goto	l2635
  6837  002DAC                     u1530:
  6838  002DAC                     
  6839                           ; BSR set to: 0
  6840  002DAC  6D9C               	negf	___awmod@dividend& (0+255),b
  6841  002DAE  1F9D               	comf	(___awmod@dividend+1)& (0+255),f,b
  6842  002DB0  B0D8               	btfsc	status,0,c
  6843  002DB2  2B9D               	incf	(___awmod@dividend+1)& (0+255),f,b
  6844  002DB4                     l2635:
  6845                           
  6846                           ; BSR set to: 0
  6847  002DB4  C09C  F09C         	movff	___awmod@dividend,?___awmod
  6848  002DB8  C09D  F09D         	movff	___awmod@dividend+1,?___awmod+1
  6849  002DBC                     
  6850                           ; BSR set to: 0
  6851  002DBC  0012               	return		;funcret
  6852  002DBE                     __end_of___awmod:
  6853                           	opt callstack 0
  6854                           
  6855 ;; *************** function ___awdiv *****************
  6856 ;; Defined at:
  6857 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  6858 ;; Parameters:    Size  Location     Type
  6859 ;;  dividend        2    0[BANK0 ] int 
  6860 ;;  divisor         2    2[BANK0 ] int 
  6861 ;; Auto vars:     Size  Location     Type
  6862 ;;  quotient        2    6[BANK0 ] int 
  6863 ;;  sign            1    5[BANK0 ] unsigned char 
  6864 ;;  counter         1    4[BANK0 ] unsigned char 
  6865 ;; Return value:  Size  Location     Type
  6866 ;;                  2    0[BANK0 ] int 
  6867 ;; Registers used:
  6868 ;;		wreg, status,2, status,0
  6869 ;; Tracked objects:
  6870 ;;		On entry : 0/0
  6871 ;;		On exit  : 0/0
  6872 ;;		Unchanged: 0/0
  6873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6874 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6875 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6877 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6878 ;;Total ram usage:        8 bytes
  6879 ;; Hardware stack levels used:    1
  6880 ;; Hardware stack levels required when called:    5
  6881 ;; This function calls:
  6882 ;;		Nothing
  6883 ;; This function is called by:
  6884 ;;		_set_time_process
  6885 ;;		_LTD_process
  6886 ;;		_check_humid_to_turn_fan
  6887 ;;		_print_temp_and_humid
  6888 ;; This function uses a non-reentrant model
  6889 ;;
  6890                           
  6891                           	psect	text40
  6892  002B84                     __ptext40:
  6893                           	opt callstack 0
  6894  002B84                     ___awdiv:
  6895                           	opt callstack 24
  6896  002B84  0E00               	movlw	0
  6897  002B86  0100               	movlb	0	; () banked
  6898  002B88  6FA1               	movwf	___awdiv@sign& (0+255),b
  6899  002B8A                     
  6900                           ; BSR set to: 0
  6901  002B8A  BF9F               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  6902  002B8C  EFCC  F015         	goto	u1980
  6903  002B90  EFCA  F015         	goto	u1981
  6904  002B94                     u1981:
  6905  002B94  EFD2  F015         	goto	l2897
  6906  002B98                     u1980:
  6907  002B98                     
  6908                           ; BSR set to: 0
  6909  002B98  6D9E               	negf	___awdiv@divisor& (0+255),b
  6910  002B9A  1F9F               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6911  002B9C  B0D8               	btfsc	status,0,c
  6912  002B9E  2B9F               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6913  002BA0                     
  6914                           ; BSR set to: 0
  6915  002BA0  0E01               	movlw	1
  6916  002BA2  6FA1               	movwf	___awdiv@sign& (0+255),b
  6917  002BA4                     l2897:
  6918                           
  6919                           ; BSR set to: 0
  6920  002BA4  BF9D               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  6921  002BA6  EFD9  F015         	goto	u1990
  6922  002BAA  EFD7  F015         	goto	u1991
  6923  002BAE                     u1991:
  6924  002BAE  EFDF  F015         	goto	l2903
  6925  002BB2                     u1990:
  6926  002BB2                     
  6927                           ; BSR set to: 0
  6928  002BB2  6D9C               	negf	___awdiv@dividend& (0+255),b
  6929  002BB4  1F9D               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6930  002BB6  B0D8               	btfsc	status,0,c
  6931  002BB8  2B9D               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6932  002BBA                     
  6933                           ; BSR set to: 0
  6934  002BBA  0E01               	movlw	1
  6935  002BBC  1BA1               	xorwf	___awdiv@sign& (0+255),f,b
  6936  002BBE                     l2903:
  6937                           
  6938                           ; BSR set to: 0
  6939  002BBE  0E00               	movlw	0
  6940  002BC0  6FA3               	movwf	(___awdiv@quotient+1)& (0+255),b
  6941  002BC2  0E00               	movlw	0
  6942  002BC4  6FA2               	movwf	___awdiv@quotient& (0+255),b
  6943  002BC6                     
  6944                           ; BSR set to: 0
  6945  002BC6  519E               	movf	___awdiv@divisor& (0+255),w,b
  6946  002BC8  119F               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6947  002BCA  B4D8               	btfsc	status,2,c
  6948  002BCC  EFEA  F015         	goto	u2001
  6949  002BD0  EFEC  F015         	goto	u2000
  6950  002BD4                     u2001:
  6951  002BD4  EF14  F016         	goto	l2925
  6952  002BD8                     u2000:
  6953  002BD8                     
  6954                           ; BSR set to: 0
  6955  002BD8  0E01               	movlw	1
  6956  002BDA  6FA0               	movwf	___awdiv@counter& (0+255),b
  6957  002BDC  EFF4  F015         	goto	l2911
  6958  002BE0                     l2909:
  6959                           
  6960                           ; BSR set to: 0
  6961  002BE0  90D8               	bcf	status,0,c
  6962  002BE2  379E               	rlcf	___awdiv@divisor& (0+255),f,b
  6963  002BE4  379F               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6964  002BE6  2BA0               	incf	___awdiv@counter& (0+255),f,b
  6965  002BE8                     l2911:
  6966                           
  6967                           ; BSR set to: 0
  6968  002BE8  AF9F               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6969  002BEA  EFF9  F015         	goto	u2011
  6970  002BEE  EFFB  F015         	goto	u2010
  6971  002BF2                     u2011:
  6972  002BF2  EFF0  F015         	goto	l2909
  6973  002BF6                     u2010:
  6974  002BF6                     l2913:
  6975                           
  6976                           ; BSR set to: 0
  6977  002BF6  90D8               	bcf	status,0,c
  6978  002BF8  37A2               	rlcf	___awdiv@quotient& (0+255),f,b
  6979  002BFA  37A3               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6980  002BFC                     
  6981                           ; BSR set to: 0
  6982  002BFC  519E               	movf	___awdiv@divisor& (0+255),w,b
  6983  002BFE  5D9C               	subwf	___awdiv@dividend& (0+255),w,b
  6984  002C00  519F               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6985  002C02  599D               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6986  002C04  A0D8               	btfss	status,0,c
  6987  002C06  EF07  F016         	goto	u2021
  6988  002C0A  EF09  F016         	goto	u2020
  6989  002C0E                     u2021:
  6990  002C0E  EF0E  F016         	goto	l2921
  6991  002C12                     u2020:
  6992  002C12                     
  6993                           ; BSR set to: 0
  6994  002C12  519E               	movf	___awdiv@divisor& (0+255),w,b
  6995  002C14  5F9C               	subwf	___awdiv@dividend& (0+255),f,b
  6996  002C16  519F               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6997  002C18  5B9D               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6998  002C1A                     
  6999                           ; BSR set to: 0
  7000  002C1A  81A2               	bsf	___awdiv@quotient& (0+255),0,b
  7001  002C1C                     l2921:
  7002                           
  7003                           ; BSR set to: 0
  7004  002C1C  90D8               	bcf	status,0,c
  7005  002C1E  339F               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7006  002C20  339E               	rrcf	___awdiv@divisor& (0+255),f,b
  7007  002C22                     
  7008                           ; BSR set to: 0
  7009  002C22  2FA0               	decfsz	___awdiv@counter& (0+255),f,b
  7010  002C24  EFFB  F015         	goto	l2913
  7011  002C28                     l2925:
  7012                           
  7013                           ; BSR set to: 0
  7014  002C28  51A1               	movf	___awdiv@sign& (0+255),w,b
  7015  002C2A  B4D8               	btfsc	status,2,c
  7016  002C2C  EF1A  F016         	goto	u2031
  7017  002C30  EF1C  F016         	goto	u2030
  7018  002C34                     u2031:
  7019  002C34  EF20  F016         	goto	l2929
  7020  002C38                     u2030:
  7021  002C38                     
  7022                           ; BSR set to: 0
  7023  002C38  6DA2               	negf	___awdiv@quotient& (0+255),b
  7024  002C3A  1FA3               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7025  002C3C  B0D8               	btfsc	status,0,c
  7026  002C3E  2BA3               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7027  002C40                     l2929:
  7028                           
  7029                           ; BSR set to: 0
  7030  002C40  C0A2  F09C         	movff	___awdiv@quotient,?___awdiv
  7031  002C44  C0A3  F09D         	movff	___awdiv@quotient+1,?___awdiv+1
  7032  002C48                     
  7033                           ; BSR set to: 0
  7034  002C48  0012               	return		;funcret
  7035  002C4A                     __end_of___awdiv:
  7036                           	opt callstack 0
  7037                           
  7038 ;; *************** function _LCDPrintChar *****************
  7039 ;; Defined at:
  7040 ;;		line 239 in file "lcd.c"
  7041 ;; Parameters:    Size  Location     Type
  7042 ;;  line            1    wreg     unsigned char 
  7043 ;;  pos             1   11[BANK0 ] unsigned char 
  7044 ;;  ch              1   12[BANK0 ] unsigned char 
  7045 ;; Auto vars:     Size  Location     Type
  7046 ;;  line            1   13[BANK0 ] unsigned char 
  7047 ;; Return value:  Size  Location     Type
  7048 ;;                  1    wreg      void 
  7049 ;; Registers used:
  7050 ;;		wreg, status,2, status,0, cstack
  7051 ;; Tracked objects:
  7052 ;;		On entry : 0/0
  7053 ;;		On exit  : 0/0
  7054 ;;		Unchanged: 0/0
  7055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7056 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7057 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7059 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7060 ;;Total ram usage:        3 bytes
  7061 ;; Hardware stack levels used:    1
  7062 ;; Hardware stack levels required when called:    9
  7063 ;; This function calls:
  7064 ;;		_LCDMoveCursor
  7065 ;;		_LCDPutChar
  7066 ;; This function is called by:
  7067 ;;		_set_time_process
  7068 ;;		_LTD_process
  7069 ;;		_check_humid_to_turn_fan
  7070 ;;		_print_temp_and_humid
  7071 ;; This function uses a non-reentrant model
  7072 ;;
  7073                           
  7074                           	psect	text41
  7075  0035EE                     __ptext41:
  7076                           	opt callstack 0
  7077  0035EE                     _LCDPrintChar:
  7078                           	opt callstack 20
  7079                           
  7080                           ; BSR set to: 0
  7081                           ;incstack = 0
  7082                           ;LCDPrintChar@line stored from wreg
  7083  0035EE  0100               	movlb	0	; () banked
  7084  0035F0  6FA9               	movwf	LCDPrintChar@line& (0+255),b
  7085  0035F2                     
  7086                           ;lcd.c: 240:     if(line <0 || line > 2 || pos < 0 || pos > 15)
  7087  0035F2  0E03               	movlw	3
  7088  0035F4  0100               	movlb	0	; () banked
  7089  0035F6  61A9               	cpfslt	LCDPrintChar@line& (0+255),b
  7090  0035F8  EF00  F01B         	goto	u1731
  7091  0035FC  EF02  F01B         	goto	u1730
  7092  003600                     u1731:
  7093  003600  EF15  F01B         	goto	l307
  7094  003604                     u1730:
  7095  003604                     
  7096                           ; BSR set to: 0
  7097  003604  0E0F               	movlw	15
  7098  003606  65A7               	cpfsgt	LCDPrintChar@pos& (0+255),b
  7099  003608  EF08  F01B         	goto	u1741
  7100  00360C  EF0A  F01B         	goto	u1740
  7101  003610                     u1741:
  7102  003610  EF0C  F01B         	goto	l2757
  7103  003614                     u1740:
  7104  003614  EF15  F01B         	goto	l307
  7105  003618                     l2757:
  7106                           
  7107                           ; BSR set to: 0
  7108                           ;lcd.c: 242:     LCDMoveCursor(line, pos);
  7109  003618  C0A7  F0A2         	movff	LCDPrintChar@pos,LCDMoveCursor@pos
  7110  00361C  51A9               	movf	LCDPrintChar@line& (0+255),w,b
  7111  00361E  EC16  F01B         	call	_LCDMoveCursor
  7112                           
  7113                           ;lcd.c: 243:     LCDPutChar(ch);
  7114  003622  0100               	movlb	0	; () banked
  7115  003624  51A8               	movf	LCDPrintChar@ch& (0+255),w,b
  7116  003626  EC75  F01A         	call	_LCDPutChar
  7117  00362A                     l307:
  7118  00362A  0012               	return		;funcret
  7119  00362C                     __end_of_LCDPrintChar:
  7120                           	opt callstack 0
  7121                           
  7122 ;; *************** function _LCDPrint *****************
  7123 ;; Defined at:
  7124 ;;		line 232 in file "lcd.c"
  7125 ;; Parameters:    Size  Location     Type
  7126 ;;  line            1    wreg     unsigned char 
  7127 ;;  pos             1   11[BANK0 ] unsigned char 
  7128 ;;  ptr             2   12[BANK0 ] PTR const unsigned char 
  7129 ;;		 -> STR_27(3), STR_26(3), STR_25(3), STR_24(3), 
  7130 ;;		 -> STR_23(4), STR_22(5), STR_21(17), STR_20(17), 
  7131 ;;		 -> STR_19(5), STR_18(15), STR_17(3), STR_16(3), 
  7132 ;;		 -> STR_15(7), STR_14(15), STR_13(7), STR_12(15), 
  7133 ;;		 -> STR_11(17), STR_10(10), STR_9(15), STR_8(17), 
  7134 ;;		 -> STR_7(7), STR_6(15), STR_5(10), STR_4(7), 
  7135 ;;		 -> STR_3(15), STR_2(15), STR_1(9), 
  7136 ;; Auto vars:     Size  Location     Type
  7137 ;;  line            1   14[BANK0 ] unsigned char 
  7138 ;; Return value:  Size  Location     Type
  7139 ;;                  1    wreg      void 
  7140 ;; Registers used:
  7141 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7142 ;; Tracked objects:
  7143 ;;		On entry : 0/0
  7144 ;;		On exit  : 0/0
  7145 ;;		Unchanged: 0/0
  7146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7147 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7148 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7150 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7151 ;;Total ram usage:        4 bytes
  7152 ;; Hardware stack levels used:    1
  7153 ;; Hardware stack levels required when called:    9
  7154 ;; This function calls:
  7155 ;;		_LCDMoveCursor
  7156 ;;		_LCDPutStr
  7157 ;; This function is called by:
  7158 ;;		_set_time_process
  7159 ;;		_LTD_process
  7160 ;;		_main
  7161 ;;		_check_humid_to_turn_fan
  7162 ;;		_print_temp_and_humid
  7163 ;; This function uses a non-reentrant model
  7164 ;;
  7165                           
  7166                           	psect	text42
  7167  0034A8                     __ptext42:
  7168                           	opt callstack 0
  7169  0034A8                     _LCDPrint:
  7170                           	opt callstack 20
  7171                           
  7172                           ;incstack = 0
  7173                           ;LCDPrint@line stored from wreg
  7174  0034A8  0100               	movlb	0	; () banked
  7175  0034AA  6FAA               	movwf	LCDPrint@line& (0+255),b
  7176  0034AC                     
  7177                           ;lcd.c: 233:     if(line <0 || line > 2 || pos < 0 || pos > 15)
  7178  0034AC  0E03               	movlw	3
  7179  0034AE  0100               	movlb	0	; () banked
  7180  0034B0  61AA               	cpfslt	LCDPrint@line& (0+255),b
  7181  0034B2  EF5D  F01A         	goto	u1711
  7182  0034B6  EF5F  F01A         	goto	u1710
  7183  0034BA                     u1711:
  7184  0034BA  EF74  F01A         	goto	l301
  7185  0034BE                     u1710:
  7186  0034BE                     
  7187                           ; BSR set to: 0
  7188  0034BE  0E0F               	movlw	15
  7189  0034C0  65A7               	cpfsgt	LCDPrint@pos& (0+255),b
  7190  0034C2  EF65  F01A         	goto	u1721
  7191  0034C6  EF67  F01A         	goto	u1720
  7192  0034CA                     u1721:
  7193  0034CA  EF69  F01A         	goto	l2749
  7194  0034CE                     u1720:
  7195  0034CE  EF74  F01A         	goto	l301
  7196  0034D2                     l2749:
  7197                           
  7198                           ; BSR set to: 0
  7199                           ;lcd.c: 235:     LCDMoveCursor(line, pos);
  7200  0034D2  C0A7  F0A2         	movff	LCDPrint@pos,LCDMoveCursor@pos
  7201  0034D6  51AA               	movf	LCDPrint@line& (0+255),w,b
  7202  0034D8  EC16  F01B         	call	_LCDMoveCursor
  7203  0034DC                     
  7204                           ;lcd.c: 236:     LCDPutStr(ptr);
  7205  0034DC  C0A8  F0A2         	movff	LCDPrint@ptr,LCDPutStr@ptr
  7206  0034E0  C0A9  F0A3         	movff	LCDPrint@ptr+1,LCDPutStr@ptr+1
  7207  0034E4  ECD7  F01A         	call	_LCDPutStr	;wreg free
  7208  0034E8                     l301:
  7209  0034E8  0012               	return		;funcret
  7210  0034EA                     __end_of_LCDPrint:
  7211                           	opt callstack 0
  7212                           
  7213 ;; *************** function _LCDPutStr *****************
  7214 ;; Defined at:
  7215 ;;		line 222 in file "lcd.c"
  7216 ;; Parameters:    Size  Location     Type
  7217 ;;  ptr             2    6[BANK0 ] PTR const unsigned char 
  7218 ;;		 -> STR_27(3), STR_26(3), STR_25(3), STR_24(3), 
  7219 ;;		 -> STR_23(4), STR_22(5), STR_21(17), STR_20(17), 
  7220 ;;		 -> STR_19(5), STR_18(15), STR_17(3), STR_16(3), 
  7221 ;;		 -> STR_15(7), STR_14(15), STR_13(7), STR_12(15), 
  7222 ;;		 -> STR_11(17), STR_10(10), STR_9(15), STR_8(17), 
  7223 ;;		 -> STR_7(7), STR_6(15), STR_5(10), STR_4(7), 
  7224 ;;		 -> STR_3(15), STR_2(15), STR_1(9), 
  7225 ;; Auto vars:     Size  Location     Type
  7226 ;;		None
  7227 ;; Return value:  Size  Location     Type
  7228 ;;                  1    wreg      void 
  7229 ;; Registers used:
  7230 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7231 ;; Tracked objects:
  7232 ;;		On entry : 0/0
  7233 ;;		On exit  : 0/0
  7234 ;;		Unchanged: 0/0
  7235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7236 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7239 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7240 ;;Total ram usage:        2 bytes
  7241 ;; Hardware stack levels used:    1
  7242 ;; Hardware stack levels required when called:    8
  7243 ;; This function calls:
  7244 ;;		_LCDPutChar
  7245 ;; This function is called by:
  7246 ;;		_LCDPrint
  7247 ;; This function uses a non-reentrant model
  7248 ;;
  7249                           
  7250                           	psect	text43
  7251  0035AE                     __ptext43:
  7252                           	opt callstack 0
  7253  0035AE                     _LCDPutStr:
  7254                           	opt callstack 20
  7255  0035AE                     
  7256                           ;lcd.c: 222: void LCDPutStr (const char *ptr);lcd.c: 223: {;lcd.c: 224:     while(*ptr) 
      +                          LCDPutChar(*(ptr++));
  7257  0035AE  EFE6  F01A         	goto	l2645
  7258  0035B2                     l2641:
  7259  0035B2  C0A2  FFF6         	movff	LCDPutStr@ptr,tblptrl
  7260  0035B6  C0A3  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
  7261  0035BA                     	if	0	;tblptru may be non-zero
  7262  0035BA                     	endif
  7263  0035BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7264  0035BA  0E00               	movlw	low (__mediumconst shr (0+16))
  7265  0035BC  6EF8               	movwf	tblptru,c
  7266  0035BE                     	endif
  7267  0035BE  0008               	tblrd		*
  7268  0035C0  50F5               	movf	tablat,w,c
  7269  0035C2  EC75  F01A         	call	_LCDPutChar
  7270  0035C6  0100               	movlb	0	; () banked
  7271  0035C8  4BA2               	infsnz	LCDPutStr@ptr& (0+255),f,b
  7272  0035CA  2BA3               	incf	(LCDPutStr@ptr+1)& (0+255),f,b
  7273  0035CC                     l2645:
  7274  0035CC  C0A2  FFF6         	movff	LCDPutStr@ptr,tblptrl
  7275  0035D0  C0A3  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
  7276  0035D4                     	if	0	;tblptru may be non-zero
  7277  0035D4                     	endif
  7278  0035D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7279  0035D4  0E00               	movlw	low (__mediumconst shr (0+16))
  7280  0035D6  6EF8               	movwf	tblptru,c
  7281  0035D8                     	endif
  7282  0035D8  0008               	tblrd		*
  7283  0035DA  50F5               	movf	tablat,w,c
  7284  0035DC  0900               	iorlw	0
  7285  0035DE  A4D8               	btfss	status,2,c
  7286  0035E0  EFF4  F01A         	goto	u1541
  7287  0035E4  EFF6  F01A         	goto	u1540
  7288  0035E8                     u1541:
  7289  0035E8  EFD9  F01A         	goto	l2641
  7290  0035EC                     u1540:
  7291  0035EC  0012               	return		;funcret
  7292  0035EE                     __end_of_LCDPutStr:
  7293                           	opt callstack 0
  7294                           
  7295 ;; *************** function _LCDPutChar *****************
  7296 ;; Defined at:
  7297 ;;		line 172 in file "lcd.c"
  7298 ;; Parameters:    Size  Location     Type
  7299 ;;  ch              1    wreg     unsigned char 
  7300 ;; Auto vars:     Size  Location     Type
  7301 ;;  ch              1    5[BANK0 ] unsigned char 
  7302 ;; Return value:  Size  Location     Type
  7303 ;;                  1    wreg      void 
  7304 ;; Registers used:
  7305 ;;		wreg, status,2, status,0, cstack
  7306 ;; Tracked objects:
  7307 ;;		On entry : 0/0
  7308 ;;		On exit  : 0/0
  7309 ;;		Unchanged: 0/0
  7310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7312 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7314 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7315 ;;Total ram usage:        1 bytes
  7316 ;; Hardware stack levels used:    1
  7317 ;; Hardware stack levels required when called:    7
  7318 ;; This function calls:
  7319 ;;		_WritePort_BBSPI
  7320 ;; This function is called by:
  7321 ;;		_LCDPutStr
  7322 ;;		_LCDPrintChar
  7323 ;; This function uses a non-reentrant model
  7324 ;;
  7325                           
  7326                           	psect	text44
  7327  0034EA                     __ptext44:
  7328                           	opt callstack 0
  7329  0034EA                     _LCDPutChar:
  7330                           	opt callstack 21
  7331                           
  7332                           ;incstack = 0
  7333                           ;LCDPutChar@ch stored from wreg
  7334  0034EA  0100               	movlb	0	; () banked
  7335  0034EC  6FA1               	movwf	LCDPutChar@ch& (0+255),b
  7336  0034EE                     
  7337                           ;lcd.c: 172: void LCDPutChar (unsigned char ch);lcd.c: 173: {;lcd.c: 174:     _delay((un
      +                          signed long)((10)*(8000000/4000000.0)));
  7338  0034EE  0E06               	movlw	6
  7339  0034F0                     u2987:
  7340  0034F0  2EE8               	decfsz	wreg,f,c
  7341  0034F2  D7FE               	bra	u2987
  7342  0034F4  D000               	nop2	
  7343  0034F6                     
  7344                           ;lcd.c: 175:     WritePort_BBSPI (0x12, 0x80);
  7345  0034F6  0E80               	movlw	128
  7346  0034F8  0100               	movlb	0	; () banked
  7347  0034FA  6F9F               	movwf	WritePort_BBSPI@a& (0+255),b
  7348  0034FC  0E12               	movlw	18
  7349  0034FE  ECDE  F01B         	call	_WritePort_BBSPI
  7350  003502                     
  7351                           ;lcd.c: 176:     _delay((unsigned long)((1)*(8000000/4000000.0)));
  7352  003502  D000               	nop2		;2 cycle nop
  7353  003504                     
  7354                           ;lcd.c: 177:     WritePort_BBSPI (0x13, ch);
  7355  003504  C0A1  F09F         	movff	LCDPutChar@ch,WritePort_BBSPI@a
  7356  003508  0E13               	movlw	19
  7357  00350A  ECDE  F01B         	call	_WritePort_BBSPI
  7358  00350E                     
  7359                           ;lcd.c: 178:     _delay((unsigned long)((1)*(8000000/4000000.0)));
  7360  00350E  D000               	nop2		;2 cycle nop
  7361  003510                     
  7362                           ;lcd.c: 179:     WritePort_BBSPI (0x12, 0xC0);
  7363  003510  0EC0               	movlw	192
  7364  003512  0100               	movlb	0	; () banked
  7365  003514  6F9F               	movwf	WritePort_BBSPI@a& (0+255),b
  7366  003516  0E12               	movlw	18
  7367  003518  ECDE  F01B         	call	_WritePort_BBSPI
  7368  00351C                     
  7369                           ;lcd.c: 180:     _delay((unsigned long)((1)*(8000000/4000000.0)));
  7370  00351C  D000               	nop2		;2 cycle nop
  7371  00351E                     
  7372                           ;lcd.c: 181:     WritePort_BBSPI (0x12, 0x00);
  7373  00351E  0E00               	movlw	0
  7374  003520  0100               	movlb	0	; () banked
  7375  003522  6F9F               	movwf	WritePort_BBSPI@a& (0+255),b
  7376  003524  0E12               	movlw	18
  7377  003526  ECDE  F01B         	call	_WritePort_BBSPI
  7378  00352A  0012               	return		;funcret
  7379  00352C                     __end_of_LCDPutChar:
  7380                           	opt callstack 0
  7381                           
  7382 ;; *************** function _LCDMoveCursor *****************
  7383 ;; Defined at:
  7384 ;;		line 227 in file "lcd.c"
  7385 ;; Parameters:    Size  Location     Type
  7386 ;;  line            1    wreg     unsigned char 
  7387 ;;  pos             1    6[BANK0 ] unsigned char 
  7388 ;; Auto vars:     Size  Location     Type
  7389 ;;  line            1    7[BANK0 ] unsigned char 
  7390 ;;  position        1   10[BANK0 ] unsigned char 
  7391 ;; Return value:  Size  Location     Type
  7392 ;;                  1    wreg      void 
  7393 ;; Registers used:
  7394 ;;		wreg, status,2, status,0, cstack
  7395 ;; Tracked objects:
  7396 ;;		On entry : 0/0
  7397 ;;		On exit  : 0/0
  7398 ;;		Unchanged: 0/0
  7399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7400 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7401 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7403 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7404 ;;Total ram usage:        5 bytes
  7405 ;; Hardware stack levels used:    1
  7406 ;; Hardware stack levels required when called:    8
  7407 ;; This function calls:
  7408 ;;		_LCDPutInst
  7409 ;; This function is called by:
  7410 ;;		_LCDPrint
  7411 ;;		_LCDPrintChar
  7412 ;; This function uses a non-reentrant model
  7413 ;;
  7414                           
  7415                           	psect	text45
  7416  00362C                     __ptext45:
  7417                           	opt callstack 0
  7418  00362C                     _LCDMoveCursor:
  7419                           	opt callstack 20
  7420                           
  7421                           ;incstack = 0
  7422                           ;LCDMoveCursor@line stored from wreg
  7423  00362C  0100               	movlb	0	; () banked
  7424  00362E  6FA3               	movwf	LCDMoveCursor@line& (0+255),b
  7425  003630                     
  7426                           ;lcd.c: 228:     unsigned char position = (line == 0) ? (128 + pos) : (192 + pos);
  7427  003630  0100               	movlb	0	; () banked
  7428  003632  51A3               	movf	LCDMoveCursor@line& (0+255),w,b
  7429  003634  B4D8               	btfsc	status,2,c
  7430  003636  EF1F  F01B         	goto	u1551
  7431  00363A  EF21  F01B         	goto	u1550
  7432  00363E                     u1551:
  7433  00363E  EF29  F01B         	goto	l2651
  7434  003642                     u1550:
  7435  003642                     
  7436                           ; BSR set to: 0
  7437  003642  0EC0               	movlw	192
  7438  003644  25A2               	addwf	LCDMoveCursor@pos& (0+255),w,b
  7439  003646  6FA4               	movwf	_LCDMoveCursor$733& (0+255),b
  7440  003648  6BA5               	clrf	(_LCDMoveCursor$733+1)& (0+255),b
  7441  00364A  0E00               	movlw	0
  7442  00364C  23A5               	addwfc	(_LCDMoveCursor$733+1)& (0+255),f,b
  7443  00364E  EF2F  F01B         	goto	l2653
  7444  003652                     l2651:
  7445                           
  7446                           ; BSR set to: 0
  7447  003652  0E80               	movlw	128
  7448  003654  25A2               	addwf	LCDMoveCursor@pos& (0+255),w,b
  7449  003656  6FA4               	movwf	_LCDMoveCursor$733& (0+255),b
  7450  003658  6BA5               	clrf	(_LCDMoveCursor$733+1)& (0+255),b
  7451  00365A  0E00               	movlw	0
  7452  00365C  23A5               	addwfc	(_LCDMoveCursor$733+1)& (0+255),f,b
  7453  00365E                     l2653:
  7454                           
  7455                           ; BSR set to: 0
  7456  00365E  C0A4  F0A6         	movff	_LCDMoveCursor$733,LCDMoveCursor@position
  7457  003662                     
  7458                           ; BSR set to: 0
  7459                           ;lcd.c: 229:     LCDPutInst(position);
  7460  003662  51A6               	movf	LCDMoveCursor@position& (0+255),w,b
  7461  003664  EC96  F01A         	call	_LCDPutInst
  7462  003668  0012               	return		;funcret
  7463  00366A                     __end_of_LCDMoveCursor:
  7464                           	opt callstack 0
  7465                           
  7466 ;; *************** function _LCDPutInst *****************
  7467 ;; Defined at:
  7468 ;;		line 203 in file "lcd.c"
  7469 ;; Parameters:    Size  Location     Type
  7470 ;;  ch              1    wreg     unsigned char 
  7471 ;; Auto vars:     Size  Location     Type
  7472 ;;  ch              1    5[BANK0 ] unsigned char 
  7473 ;; Return value:  Size  Location     Type
  7474 ;;                  1    wreg      void 
  7475 ;; Registers used:
  7476 ;;		wreg, status,2, status,0, cstack
  7477 ;; Tracked objects:
  7478 ;;		On entry : 0/0
  7479 ;;		On exit  : 0/0
  7480 ;;		Unchanged: 0/0
  7481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7483 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7485 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7486 ;;Total ram usage:        1 bytes
  7487 ;; Hardware stack levels used:    1
  7488 ;; Hardware stack levels required when called:    7
  7489 ;; This function calls:
  7490 ;;		_WritePort_BBSPI
  7491 ;; This function is called by:
  7492 ;;		_set_time_process
  7493 ;;		_LTD_process
  7494 ;;		_main
  7495 ;;		_LCDInit
  7496 ;;		_LCDMoveCursor
  7497 ;; This function uses a non-reentrant model
  7498 ;;
  7499                           
  7500                           	psect	text46
  7501  00352C                     __ptext46:
  7502                           	opt callstack 0
  7503  00352C                     _LCDPutInst:
  7504                           	opt callstack 21
  7505                           
  7506                           ;incstack = 0
  7507                           ;LCDPutInst@ch stored from wreg
  7508  00352C  0100               	movlb	0	; () banked
  7509  00352E  6FA1               	movwf	LCDPutInst@ch& (0+255),b
  7510  003530                     
  7511                           ;lcd.c: 203: void LCDPutInst (unsigned char ch);lcd.c: 204: {;lcd.c: 205:     _delay((un
      +                          signed long)((10)*(8000000/4000000.0)));
  7512  003530  0E06               	movlw	6
  7513  003532                     u2997:
  7514  003532  2EE8               	decfsz	wreg,f,c
  7515  003534  D7FE               	bra	u2997
  7516  003536  D000               	nop2	
  7517  003538                     
  7518                           ;lcd.c: 206:     WritePort_BBSPI (0x12, 0x00);
  7519  003538  0E00               	movlw	0
  7520  00353A  0100               	movlb	0	; () banked
  7521  00353C  6F9F               	movwf	WritePort_BBSPI@a& (0+255),b
  7522  00353E  0E12               	movlw	18
  7523  003540  ECDE  F01B         	call	_WritePort_BBSPI
  7524  003544                     
  7525                           ;lcd.c: 207:     _delay((unsigned long)((1)*(8000000/4000000.0)));
  7526  003544  D000               	nop2		;2 cycle nop
  7527  003546                     
  7528                           ;lcd.c: 208:     WritePort_BBSPI (0x13, ch);
  7529  003546  C0A1  F09F         	movff	LCDPutInst@ch,WritePort_BBSPI@a
  7530  00354A  0E13               	movlw	19
  7531  00354C  ECDE  F01B         	call	_WritePort_BBSPI
  7532  003550                     
  7533                           ;lcd.c: 209:     _delay((unsigned long)((1)*(8000000/4000000.0)));
  7534  003550  D000               	nop2		;2 cycle nop
  7535  003552                     
  7536                           ;lcd.c: 210:     WritePort_BBSPI (0x12,0x40);
  7537  003552  0E40               	movlw	64
  7538  003554  0100               	movlb	0	; () banked
  7539  003556  6F9F               	movwf	WritePort_BBSPI@a& (0+255),b
  7540  003558  0E12               	movlw	18
  7541  00355A  ECDE  F01B         	call	_WritePort_BBSPI
  7542  00355E                     
  7543                           ;lcd.c: 211:     _delay((unsigned long)((1)*(8000000/4000000.0)));
  7544  00355E  D000               	nop2		;2 cycle nop
  7545  003560                     
  7546                           ;lcd.c: 212:     WritePort_BBSPI (0x12, 0x00);
  7547  003560  0E00               	movlw	0
  7548  003562  0100               	movlb	0	; () banked
  7549  003564  6F9F               	movwf	WritePort_BBSPI@a& (0+255),b
  7550  003566  0E12               	movlw	18
  7551  003568  ECDE  F01B         	call	_WritePort_BBSPI
  7552  00356C  0012               	return		;funcret
  7553  00356E                     __end_of_LCDPutInst:
  7554                           	opt callstack 0
  7555                           
  7556 ;; *************** function _WritePort_BBSPI *****************
  7557 ;; Defined at:
  7558 ;;		line 144 in file "lcd.c"
  7559 ;; Parameters:    Size  Location     Type
  7560 ;;  port_add        1    wreg     unsigned char 
  7561 ;;  a               1    3[BANK0 ] unsigned char 
  7562 ;; Auto vars:     Size  Location     Type
  7563 ;;  port_add        1    4[BANK0 ] unsigned char 
  7564 ;; Return value:  Size  Location     Type
  7565 ;;                  1    wreg      void 
  7566 ;; Registers used:
  7567 ;;		wreg, status,2, status,0, cstack
  7568 ;; Tracked objects:
  7569 ;;		On entry : 0/0
  7570 ;;		On exit  : 0/0
  7571 ;;		Unchanged: 0/0
  7572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7573 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7574 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7576 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7577 ;;Total ram usage:        2 bytes
  7578 ;; Hardware stack levels used:    1
  7579 ;; Hardware stack levels required when called:    6
  7580 ;; This function calls:
  7581 ;;		_SendByteBBSPI
  7582 ;; This function is called by:
  7583 ;;		_LCDInit
  7584 ;;		_LCDPutChar
  7585 ;;		_LCDPutInst
  7586 ;; This function uses a non-reentrant model
  7587 ;;
  7588                           
  7589                           	psect	text47
  7590  0037BC                     __ptext47:
  7591                           	opt callstack 0
  7592  0037BC                     _WritePort_BBSPI:
  7593                           	opt callstack 22
  7594                           
  7595                           ;incstack = 0
  7596                           ;WritePort_BBSPI@port_add stored from wreg
  7597  0037BC  0100               	movlb	0	; () banked
  7598  0037BE  6FA0               	movwf	WritePort_BBSPI@port_add& (0+255),b
  7599  0037C0                     
  7600                           ;lcd.c: 144: void WritePort_BBSPI (unsigned char port_add, unsigned char a);lcd.c: 145: 
      +                          {;lcd.c: 146:     LATAbits.LATA2 = 0;
  7601  0037C0  9489               	bcf	137,2,c	;volatile
  7602  0037C2                     
  7603                           ;lcd.c: 147:     SendByteBBSPI(0x40);
  7604  0037C2  0E40               	movlw	64
  7605  0037C4  EC11  F019         	call	_SendByteBBSPI
  7606                           
  7607                           ;lcd.c: 148:     SendByteBBSPI(port_add);
  7608  0037C8  0100               	movlb	0	; () banked
  7609  0037CA  51A0               	movf	WritePort_BBSPI@port_add& (0+255),w,b
  7610  0037CC  EC11  F019         	call	_SendByteBBSPI
  7611                           
  7612                           ;lcd.c: 149:     SendByteBBSPI(a);
  7613  0037D0  0100               	movlb	0	; () banked
  7614  0037D2  519F               	movf	WritePort_BBSPI@a& (0+255),w,b
  7615  0037D4  EC11  F019         	call	_SendByteBBSPI
  7616  0037D8                     
  7617                           ;lcd.c: 150:     LATAbits.LATA2 = 1;
  7618  0037D8  8489               	bsf	137,2,c	;volatile
  7619  0037DA  0012               	return		;funcret
  7620  0037DC                     __end_of_WritePort_BBSPI:
  7621                           	opt callstack 0
  7622                           
  7623 ;; *************** function _SendByteBBSPI *****************
  7624 ;; Defined at:
  7625 ;;		line 91 in file "lcd.c"
  7626 ;; Parameters:    Size  Location     Type
  7627 ;;  output          1    wreg     unsigned char 
  7628 ;; Auto vars:     Size  Location     Type
  7629 ;;  output          1    0[BANK0 ] unsigned char 
  7630 ;;  input           1    2[BANK0 ] unsigned char 
  7631 ;;  bitcount        1    1[BANK0 ] unsigned char 
  7632 ;; Return value:  Size  Location     Type
  7633 ;;                  1    wreg      void 
  7634 ;; Registers used:
  7635 ;;		wreg, status,2, status,0
  7636 ;; Tracked objects:
  7637 ;;		On entry : 0/0
  7638 ;;		On exit  : 0/0
  7639 ;;		Unchanged: 0/0
  7640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7642 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7644 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7645 ;;Total ram usage:        3 bytes
  7646 ;; Hardware stack levels used:    1
  7647 ;; Hardware stack levels required when called:    5
  7648 ;; This function calls:
  7649 ;;		Nothing
  7650 ;; This function is called by:
  7651 ;;		_Port_BBSPIInit
  7652 ;;		_WritePort_BBSPI
  7653 ;; This function uses a non-reentrant model
  7654 ;;
  7655                           
  7656                           	psect	text48
  7657  003222                     __ptext48:
  7658                           	opt callstack 0
  7659  003222                     _SendByteBBSPI:
  7660                           	opt callstack 22
  7661                           
  7662                           ;incstack = 0
  7663                           ;SendByteBBSPI@output stored from wreg
  7664  003222  0100               	movlb	0	; () banked
  7665  003224  6F9C               	movwf	SendByteBBSPI@output& (0+255),b
  7666  003226                     
  7667                           ;lcd.c: 91: void SendByteBBSPI (unsigned char output);lcd.c: 92: {;lcd.c: 93:     unsign
      +                          ed char bitcount;;lcd.c: 94:     unsigned char input = output;
  7668  003226  C09C  F09E         	movff	SendByteBBSPI@output,SendByteBBSPI@input
  7669  00322A                     
  7670                           ;lcd.c: 96:     for(bitcount=0;bitcount<8;bitcount++)
  7671  00322A  0E00               	movlw	0
  7672  00322C  0100               	movlb	0	; () banked
  7673  00322E  6F9D               	movwf	SendByteBBSPI@bitcount& (0+255),b
  7674  003230                     l264:
  7675                           
  7676                           ; BSR set to: 0
  7677                           ;lcd.c: 97:     {;lcd.c: 99:         if(output & 0x80)
  7678  003230  AF9C               	btfss	SendByteBBSPI@output& (0+255),7,b
  7679  003232  EF1D  F019         	goto	u1451
  7680  003236  EF1F  F019         	goto	u1450
  7681  00323A                     u1451:
  7682  00323A  EF22  F019         	goto	l266
  7683  00323E                     u1450:
  7684  00323E                     
  7685                           ; BSR set to: 0
  7686                           ;lcd.c: 100:             LATCbits.LATC5 = 1;
  7687  00323E  8A8B               	bsf	139,5,c	;volatile
  7688  003240  EF23  F019         	goto	l267
  7689  003244                     l266:
  7690                           
  7691                           ; BSR set to: 0
  7692                           ;lcd.c: 102:             LATCbits.LATC5 = 0;
  7693  003244  9A8B               	bcf	139,5,c	;volatile
  7694  003246                     l267:
  7695                           
  7696                           ; BSR set to: 0
  7697                           ;lcd.c: 104:         if (LATCbits.LATC4)
  7698  003246  A88B               	btfss	139,4,c	;volatile
  7699  003248  EF28  F019         	goto	u1461
  7700  00324C  EF2A  F019         	goto	u1460
  7701  003250                     u1461:
  7702  003250  EF2E  F019         	goto	l2537
  7703  003254                     u1460:
  7704  003254                     
  7705                           ; BSR set to: 0
  7706                           ;lcd.c: 105:             input = (input << 1) | 0x1;
  7707  003254  80D8               	bsf	status,0,c
  7708  003256  379E               	rlcf	SendByteBBSPI@input& (0+255),f,b
  7709  003258  EF31  F019         	goto	l2539
  7710  00325C                     l2537:
  7711                           
  7712                           ; BSR set to: 0
  7713                           ;lcd.c: 107:             input = input << 1;
  7714  00325C  519E               	movf	SendByteBBSPI@input& (0+255),w,b
  7715  00325E  259E               	addwf	SendByteBBSPI@input& (0+255),w,b
  7716  003260  6F9E               	movwf	SendByteBBSPI@input& (0+255),b
  7717  003262                     l2539:
  7718                           
  7719                           ; BSR set to: 0
  7720                           ;lcd.c: 108:         LATCbits.LATC3 = 1;
  7721  003262  868B               	bsf	139,3,c	;volatile
  7722  003264                     
  7723                           ; BSR set to: 0
  7724                           ;lcd.c: 109:         __nop();__nop();__nop();__nop();__nop();__nop();
  7725  003264  F000               	nop	
  7726  003266  F000               	nop	
  7727  003268  F000               	nop	
  7728  00326A  F000               	nop	
  7729  00326C  F000               	nop	
  7730  00326E  F000               	nop	
  7731  003270                     
  7732                           ;lcd.c: 111:         LATCbits.LATC3 = 0;
  7733  003270  968B               	bcf	139,3,c	;volatile
  7734                           
  7735                           ;lcd.c: 112:         output <<= 1;
  7736  003272  0100               	movlb	0	; () banked
  7737  003274  90D8               	bcf	status,0,c
  7738  003276  379C               	rlcf	SendByteBBSPI@output& (0+255),f,b
  7739  003278                     
  7740                           ; BSR set to: 0
  7741                           ;lcd.c: 113:     }
  7742  003278  2B9D               	incf	SendByteBBSPI@bitcount& (0+255),f,b
  7743  00327A                     
  7744                           ; BSR set to: 0
  7745  00327A  0E07               	movlw	7
  7746  00327C  659D               	cpfsgt	SendByteBBSPI@bitcount& (0+255),b
  7747  00327E  EF43  F019         	goto	u1471
  7748  003282  EF45  F019         	goto	u1470
  7749  003286                     u1471:
  7750  003286  EF18  F019         	goto	l264
  7751  00328A                     u1470:
  7752  00328A                     
  7753                           ; BSR set to: 0
  7754  00328A  0012               	return		;funcret
  7755  00328C                     __end_of_SendByteBBSPI:
  7756                           	opt callstack 0
  7757                           
  7758 ;; *************** function _timer_interrupt *****************
  7759 ;; Defined at:
  7760 ;;		line 197 in file "clock.c"
  7761 ;; Parameters:    Size  Location     Type
  7762 ;;		None
  7763 ;; Auto vars:     Size  Location     Type
  7764 ;;  cur             2   47[COMRAM] int 
  7765 ;;  prev            2   43[COMRAM] int 
  7766 ;;  sum             2   45[COMRAM] int 
  7767 ;;  pos             2   49[COMRAM] int 
  7768 ;; Return value:  Size  Location     Type
  7769 ;;                  1    wreg      void 
  7770 ;; Registers used:
  7771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7772 ;; Tracked objects:
  7773 ;;		On entry : 0/0
  7774 ;;		On exit  : 0/0
  7775 ;;		Unchanged: 0/0
  7776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7778 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7779 ;;      Temps:         22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7780 ;;      Totals:        37       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7781 ;;Total ram usage:       37 bytes
  7782 ;; Hardware stack levels used:    1
  7783 ;; Hardware stack levels required when called:    4
  7784 ;; This function calls:
  7785 ;;		_enqueue
  7786 ;;		i2___wmul
  7787 ;;		i2_remove_timer
  7788 ;; This function is called by:
  7789 ;;		Interrupt level 2
  7790 ;; This function uses a non-reentrant model
  7791 ;;
  7792                           
  7793                           	psect	intcode
  7794  000008                     __pintcode:
  7795                           	opt callstack 0
  7796  000008                     _timer_interrupt:
  7797                           	opt callstack 19
  7798                           
  7799                           ; BSR set to: 0
  7800                           ;incstack = 0
  7801  000008  823C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7802  00000A  ED43  F008         	call	int_func,f	;refresh shadow registers
  7803                           
  7804                           	psect	intcode_body
  7805  001086                     __pintcode_body:
  7806                           	opt callstack 19
  7807  001086                     int_func:
  7808                           	opt callstack 19
  7809  001086  0006               	pop		; remove dummy address from shadow register refresh
  7810  001088  CFE1 F01F          	movff	fsr1l,??_timer_interrupt+16
  7811  00108C  CFE2 F020          	movff	fsr1h,??_timer_interrupt+17
  7812  001090  CFD9 F021          	movff	fsr2l,??_timer_interrupt+18
  7813  001094  CFDA F022          	movff	fsr2h,??_timer_interrupt+19
  7814  001098  CFF3 F023          	movff	prodl,??_timer_interrupt+20
  7815  00109C  CFF4 F024          	movff	prodh,??_timer_interrupt+21
  7816  0010A0                     
  7817                           ;clock.c: 198:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF) {
  7818  0010A0  AAF2               	btfss	242,5,c	;volatile
  7819  0010A2  EF55  F008         	goto	i2u275_41
  7820  0010A6  EF57  F008         	goto	i2u275_40
  7821  0010AA                     i2u275_41:
  7822  0010AA  EF7A  F008         	goto	i2l3559
  7823  0010AE                     i2u275_40:
  7824  0010AE  A4F2               	btfss	242,2,c	;volatile
  7825  0010B0  EF5C  F008         	goto	i2u276_41
  7826  0010B4  EF5E  F008         	goto	i2u276_40
  7827  0010B8                     i2u276_41:
  7828  0010B8  EF7A  F008         	goto	i2l3559
  7829  0010BC                     i2u276_40:
  7830  0010BC                     
  7831                           ;clock.c: 199:         INTCONbits.TMR0IF = 0;
  7832  0010BC  94F2               	bcf	242,2,c	;volatile
  7833  0010BE                     
  7834                           ;clock.c: 200:         TMR0L = 100;
  7835  0010BE  0E64               	movlw	100
  7836  0010C0  6ED6               	movwf	214,c	;volatile
  7837  0010C2                     
  7838                           ;clock.c: 201:         time_ms++;
  7839  0010C2  0E01               	movlw	1
  7840  0010C4  0100               	movlb	0	; () banked
  7841  0010C6  2784               	addwf	_time_ms& (0+255),f,b
  7842  0010C8  0E00               	movlw	0
  7843  0010CA  2385               	addwfc	(_time_ms+1)& (0+255),f,b
  7844  0010CC  2386               	addwfc	(_time_ms+2)& (0+255),f,b
  7845  0010CE  2387               	addwfc	(_time_ms+3)& (0+255),f,b
  7846  0010D0                     
  7847                           ; BSR set to: 0
  7848                           ;clock.c: 202:         count++;
  7849  0010D0  4A38               	infsnz	_count^0,f,c
  7850  0010D2  2A39               	incf	(_count+1)^0,f,c
  7851  0010D4                     
  7852                           ; BSR set to: 0
  7853                           ;clock.c: 203:         if(count == 1000) {
  7854  0010D4  0EE8               	movlw	232
  7855  0010D6  1838               	xorwf	_count^0,w,c
  7856  0010D8  E107               	bnz	i2u277_41
  7857  0010DA  0E03               	movlw	3
  7858  0010DC  1839               	xorwf	(_count+1)^0,w,c
  7859  0010DE  A4D8               	btfss	status,2,c
  7860  0010E0  EF74  F008         	goto	i2u277_41
  7861  0010E4  EF76  F008         	goto	i2u277_40
  7862  0010E8                     i2u277_41:
  7863  0010E8  EF7A  F008         	goto	i2l3559
  7864  0010EC                     i2u277_40:
  7865  0010EC                     
  7866                           ; BSR set to: 0
  7867                           ;clock.c: 204:             count = 0;
  7868  0010EC  0E00               	movlw	0
  7869  0010EE  6E39               	movwf	(_count+1)^0,c
  7870  0010F0  0E00               	movlw	0
  7871  0010F2  6E38               	movwf	_count^0,c
  7872  0010F4                     i2l3559:
  7873                           
  7874                           ;clock.c: 208:     if(PIE1bits.TMR1IE && PIR1bits.TMR1IF) {
  7875  0010F4  A09D               	btfss	157,0,c	;volatile
  7876  0010F6  EF7F  F008         	goto	i2u278_41
  7877  0010FA  EF81  F008         	goto	i2u278_40
  7878  0010FE                     i2u278_41:
  7879  0010FE  EFE5  F00A         	goto	i2l575
  7880  001102                     i2u278_40:
  7881  001102  A09E               	btfss	158,0,c	;volatile
  7882  001104  EF86  F008         	goto	i2u279_41
  7883  001108  EF88  F008         	goto	i2u279_40
  7884  00110C                     i2u279_41:
  7885  00110C  EFE5  F00A         	goto	i2l575
  7886  001110                     i2u279_40:
  7887  001110                     
  7888                           ;clock.c: 209:         PIR1bits.TMR1IF = 0;
  7889  001110  909E               	bcf	158,0,c	;volatile
  7890  001112                     
  7891                           ;clock.c: 210:         TMR1H = 0xB1;
  7892  001112  0EB1               	movlw	177
  7893  001114  6ECF               	movwf	207,c	;volatile
  7894                           
  7895                           ;clock.c: 211:         TMR1L = 0xE0;
  7896  001116  0EE0               	movlw	224
  7897  001118  6ECE               	movwf	206,c	;volatile
  7898  00111A                     
  7899                           ;clock.c: 212:         if(head == 105)
  7900  00111A  0E69               	movlw	105
  7901  00111C  0100               	movlb	0	; () banked
  7902  00111E  1990               	xorwf	_head& (0+255),w,b
  7903  001120  A4D8               	btfss	status,2,c
  7904  001122  EF95  F008         	goto	i2u280_41
  7905  001126  EF97  F008         	goto	i2u280_40
  7906  00112A                     i2u280_41:
  7907  00112A  EFC3  F00A         	goto	i2l3605
  7908  00112E                     i2u280_40:
  7909  00112E  EFE5  F00A         	goto	i2l575
  7910  001132                     i2l577:
  7911                           
  7912                           ; BSR set to: 0
  7913                           ;clock.c: 215:             int pos = head;
  7914  001132  C090  F032         	movff	_head,timer_interrupt@pos
  7915  001136  6A33               	clrf	(timer_interrupt@pos+1)^0,c
  7916  001138                     
  7917                           ; BSR set to: 0
  7918                           ;clock.c: 216:             enqueue(task_list[pos].func_ptr, task_list[pos].data_p);
  7919  001138  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  7920  00113C  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  7921  001140  0E00               	movlw	0
  7922  001142  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  7923  001144  0E0F               	movlw	15
  7924  001146  6E03               	movwf	i2___wmul@multiplicand^0,c
  7925  001148  ECB9  F01B         	call	i2___wmul	;wreg free
  7926  00114C  0E6C               	movlw	low (_task_list+8)
  7927  00114E  2401               	addwf	?i2___wmul^0,w,c
  7928  001150  6ED9               	movwf	fsr2l,c
  7929  001152  0E01               	movlw	high (_task_list+8)
  7930  001154  2002               	addwfc	(?i2___wmul+1)^0,w,c
  7931  001156  6EDA               	movwf	fsr2h,c
  7932  001158  CFDE F025          	movff	postinc2,_timer_interrupt$2170
  7933  00115C  CFDE F026          	movff	postinc2,_timer_interrupt$2170+1
  7934  001160  CFDD F027          	movff	postdec2,_timer_interrupt$2170+2
  7935                           
  7936                           ;clock.c: 216:             enqueue(task_list[pos].func_ptr, task_list[pos].data_p);
  7937  001164  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  7938  001168  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  7939  00116C  0E00               	movlw	0
  7940  00116E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  7941  001170  0E0F               	movlw	15
  7942  001172  6E03               	movwf	i2___wmul@multiplicand^0,c
  7943  001174  ECB9  F01B         	call	i2___wmul	;wreg free
  7944  001178  0E71               	movlw	low (_task_list+13)
  7945  00117A  2401               	addwf	?i2___wmul^0,w,c
  7946  00117C  6ED9               	movwf	fsr2l,c
  7947  00117E  0E01               	movlw	high (_task_list+13)
  7948  001180  2002               	addwfc	(?i2___wmul+1)^0,w,c
  7949  001182  6EDA               	movwf	fsr2h,c
  7950  001184  CFDE F028          	movff	postinc2,_timer_interrupt$2175
  7951  001188  CFDD F029          	movff	postdec2,_timer_interrupt$2175+1
  7952                           
  7953                           ;clock.c: 216:             enqueue(task_list[pos].func_ptr, task_list[pos].data_p);
  7954  00118C  C025  F00A         	movff	_timer_interrupt$2170,enqueue@ptr
  7955  001190  C026  F00B         	movff	_timer_interrupt$2170+1,enqueue@ptr+1
  7956  001194  C027  F00C         	movff	_timer_interrupt$2170+2,enqueue@ptr+2
  7957  001198  C028  F00D         	movff	_timer_interrupt$2175,enqueue@data_ptr
  7958  00119C  C029  F00E         	movff	_timer_interrupt$2175+1,enqueue@data_ptr+1
  7959  0011A0  EC8F  F017         	call	_enqueue	;wreg free
  7960                           
  7961                           ;clock.c: 217:             head = task_list[pos].next;
  7962  0011A4  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  7963  0011A8  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  7964  0011AC  0E00               	movlw	0
  7965  0011AE  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  7966  0011B0  0E0F               	movlw	15
  7967  0011B2  6E03               	movwf	i2___wmul@multiplicand^0,c
  7968  0011B4  ECB9  F01B         	call	i2___wmul	;wreg free
  7969  0011B8  0E6F               	movlw	low (_task_list+11)
  7970  0011BA  2401               	addwf	?i2___wmul^0,w,c
  7971  0011BC  6ED9               	movwf	fsr2l,c
  7972  0011BE  0E01               	movlw	high (_task_list+11)
  7973  0011C0  2002               	addwfc	(?i2___wmul+1)^0,w,c
  7974  0011C2  6EDA               	movwf	fsr2h,c
  7975  0011C4  50DF               	movf	indf2,w,c
  7976  0011C6  0100               	movlb	0	; () banked
  7977  0011C8  6F90               	movwf	_head& (0+255),b
  7978                           
  7979                           ;clock.c: 218:             if(task_list[pos].period_t == 0) {
  7980  0011CA  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  7981  0011CE  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  7982  0011D2  0E00               	movlw	0
  7983  0011D4  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  7984  0011D6  0E0F               	movlw	15
  7985  0011D8  6E03               	movwf	i2___wmul@multiplicand^0,c
  7986  0011DA  ECB9  F01B         	call	i2___wmul	;wreg free
  7987  0011DE  0E68               	movlw	low (_task_list+4)
  7988  0011E0  2401               	addwf	?i2___wmul^0,w,c
  7989  0011E2  6ED9               	movwf	fsr2l,c
  7990  0011E4  0E01               	movlw	high (_task_list+4)
  7991  0011E6  2002               	addwfc	(?i2___wmul+1)^0,w,c
  7992  0011E8  6EDA               	movwf	fsr2h,c
  7993  0011EA  50DE               	movf	postinc2,w,c
  7994  0011EC  10DE               	iorwf	postinc2,w,c
  7995  0011EE  10DE               	iorwf	postinc2,w,c
  7996  0011F0  10DE               	iorwf	postinc2,w,c
  7997  0011F2  A4D8               	btfss	status,2,c
  7998  0011F4  EFFE  F008         	goto	i2u281_41
  7999  0011F8  EF00  F009         	goto	i2u281_40
  8000  0011FC                     i2u281_41:
  8001  0011FC  EF05  F009         	goto	i2l3575
  8002  001200                     i2u281_40:
  8003  001200                     
  8004                           ;clock.c: 219:                 remove_timer(pos);
  8005  001200  5032               	movf	timer_interrupt@pos^0,w,c
  8006  001202  EC5D  F013         	call	i2_remove_timer
  8007                           
  8008                           ;clock.c: 220:             }
  8009  001206  EFC3  F00A         	goto	i2l3605
  8010  00120A                     i2l3575:
  8011                           
  8012                           ;clock.c: 222:                 task_list[pos].delay_t = task_list[pos].period_t;
  8013  00120A  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  8014  00120E  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  8015  001212  0E00               	movlw	0
  8016  001214  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8017  001216  0E0F               	movlw	15
  8018  001218  6E03               	movwf	i2___wmul@multiplicand^0,c
  8019  00121A  ECB9  F01B         	call	i2___wmul	;wreg free
  8020  00121E  0E68               	movlw	low (_task_list+4)
  8021  001220  2401               	addwf	?i2___wmul^0,w,c
  8022  001222  6ED9               	movwf	fsr2l,c
  8023  001224  0E01               	movlw	high (_task_list+4)
  8024  001226  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8025  001228  6EDA               	movwf	fsr2h,c
  8026  00122A  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  8027  00122E  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  8028  001232  0E00               	movlw	0
  8029  001234  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8030  001236  0E0F               	movlw	15
  8031  001238  6E03               	movwf	i2___wmul@multiplicand^0,c
  8032  00123A  ECB9  F01B         	call	i2___wmul	;wreg free
  8033  00123E  0E64               	movlw	low _task_list
  8034  001240  2401               	addwf	?i2___wmul^0,w,c
  8035  001242  6EE1               	movwf	fsr1l,c
  8036  001244  0E01               	movlw	high _task_list
  8037  001246  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8038  001248  6EE2               	movwf	fsr1h,c
  8039  00124A  CFDE FFE6          	movff	postinc2,postinc1
  8040  00124E  CFDE FFE6          	movff	postinc2,postinc1
  8041  001252  CFDE FFE6          	movff	postinc2,postinc1
  8042  001256  CFDE FFE6          	movff	postinc2,postinc1
  8043  00125A                     
  8044                           ;clock.c: 223:                 int sum = task_list[head].delay_t;
  8045  00125A  0100               	movlb	0	; () banked
  8046  00125C  5190               	movf	_head& (0+255),w,b
  8047  00125E  0D0F               	mullw	15
  8048  001260  0E64               	movlw	low _task_list
  8049  001262  24F3               	addwf	243,w,c
  8050  001264  6ED9               	movwf	fsr2l,c
  8051  001266  0E01               	movlw	high _task_list
  8052  001268  20F4               	addwfc	prodh,w,c
  8053  00126A  6EDA               	movwf	fsr2h,c
  8054  00126C  CFDE F02E          	movff	postinc2,timer_interrupt@sum
  8055  001270  CFDD F02F          	movff	postdec2,timer_interrupt@sum+1
  8056  001274                     
  8057                           ; BSR set to: 0
  8058                           ;clock.c: 224:                 if(head == 105 || (head != 105 && sum > task_list[pos].de
      +                          lay_t)) {
  8059  001274  0E69               	movlw	105
  8060  001276  1990               	xorwf	_head& (0+255),w,b
  8061  001278  B4D8               	btfsc	status,2,c
  8062  00127A  EF41  F009         	goto	i2u282_41
  8063  00127E  EF43  F009         	goto	i2u282_40
  8064  001282                     i2u282_41:
  8065  001282  EF74  F009         	goto	i2l3585
  8066  001286                     i2u282_40:
  8067  001286                     
  8068                           ; BSR set to: 0
  8069  001286  0E69               	movlw	105
  8070  001288  1990               	xorwf	_head& (0+255),w,b
  8071  00128A  B4D8               	btfsc	status,2,c
  8072  00128C  EF4A  F009         	goto	i2u283_41
  8073  001290  EF4C  F009         	goto	i2u283_40
  8074  001294                     i2u283_41:
  8075  001294  EF90  F009         	goto	i2l3589
  8076  001298                     i2u283_40:
  8077  001298                     
  8078                           ; BSR set to: 0
  8079  001298  C02E  F00F         	movff	timer_interrupt@sum,??_timer_interrupt
  8080  00129C  C02F  F010         	movff	timer_interrupt@sum+1,??_timer_interrupt+1
  8081  0012A0  0E00               	movlw	0
  8082  0012A2  BE10               	btfsc	(??_timer_interrupt+1)^0,7,c
  8083  0012A4  0EFF               	movlw	255
  8084  0012A6  6E11               	movwf	(??_timer_interrupt+2)^0,c
  8085  0012A8  6E12               	movwf	(??_timer_interrupt+3)^0,c
  8086  0012AA  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  8087  0012AE  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  8088  0012B2  0E00               	movlw	0
  8089  0012B4  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8090  0012B6  0E0F               	movlw	15
  8091  0012B8  6E03               	movwf	i2___wmul@multiplicand^0,c
  8092  0012BA  ECB9  F01B         	call	i2___wmul	;wreg free
  8093  0012BE  0E64               	movlw	low _task_list
  8094  0012C0  2401               	addwf	?i2___wmul^0,w,c
  8095  0012C2  6ED9               	movwf	fsr2l,c
  8096  0012C4  0E01               	movlw	high _task_list
  8097  0012C6  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8098  0012C8  6EDA               	movwf	fsr2h,c
  8099  0012CA  500F               	movf	??_timer_interrupt^0,w,c
  8100  0012CC  5CDE               	subwf	postinc2,w,c
  8101  0012CE  5010               	movf	(??_timer_interrupt+1)^0,w,c
  8102  0012D0  58DE               	subwfb	postinc2,w,c
  8103  0012D2  5011               	movf	(??_timer_interrupt+2)^0,w,c
  8104  0012D4  58DE               	subwfb	postinc2,w,c
  8105  0012D6  5012               	movf	(??_timer_interrupt+3)^0,w,c
  8106  0012D8  58DE               	subwfb	postinc2,w,c
  8107  0012DA  B0D8               	btfsc	status,0,c
  8108  0012DC  EF72  F009         	goto	i2u284_41
  8109  0012E0  EF74  F009         	goto	i2u284_40
  8110  0012E4                     i2u284_41:
  8111  0012E4  EF90  F009         	goto	i2l3589
  8112  0012E8                     i2u284_40:
  8113  0012E8                     i2l3585:
  8114                           
  8115                           ;clock.c: 225:                     task_list[pos].next = head;
  8116  0012E8  0100               	movlb	0	; () banked
  8117  0012EA  5190               	movf	_head& (0+255),w,b
  8118  0012EC  6E0F               	movwf	??_timer_interrupt^0,c
  8119  0012EE  6A10               	clrf	(??_timer_interrupt+1)^0,c
  8120  0012F0  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  8121  0012F4  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  8122  0012F8  0E00               	movlw	0
  8123  0012FA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8124  0012FC  0E0F               	movlw	15
  8125  0012FE  6E03               	movwf	i2___wmul@multiplicand^0,c
  8126  001300  ECB9  F01B         	call	i2___wmul	;wreg free
  8127  001304  0E6F               	movlw	low (_task_list+11)
  8128  001306  2401               	addwf	?i2___wmul^0,w,c
  8129  001308  6ED9               	movwf	fsr2l,c
  8130  00130A  0E01               	movlw	high (_task_list+11)
  8131  00130C  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8132  00130E  6EDA               	movwf	fsr2h,c
  8133  001310  C00F  FFDE         	movff	??_timer_interrupt,postinc2
  8134  001314  C010  FFDD         	movff	??_timer_interrupt+1,postdec2
  8135  001318                     
  8136                           ;clock.c: 226:                     head = pos;
  8137  001318  C032  F090         	movff	timer_interrupt@pos,_head
  8138                           
  8139                           ;clock.c: 227:                 } else {
  8140  00131C  EF65  F00A         	goto	i2l583
  8141  001320                     i2l3589:
  8142                           
  8143                           ;clock.c: 229:                     int cur = task_list[head].next;
  8144  001320  0100               	movlb	0	; () banked
  8145  001322  5190               	movf	_head& (0+255),w,b
  8146  001324  0D0F               	mullw	15
  8147  001326  0E6F               	movlw	low (_task_list+11)
  8148  001328  24F3               	addwf	243,w,c
  8149  00132A  6ED9               	movwf	fsr2l,c
  8150  00132C  0E01               	movlw	high (_task_list+11)
  8151  00132E  20F4               	addwfc	prodh,w,c
  8152  001330  6EDA               	movwf	fsr2h,c
  8153  001332  CFDE F030          	movff	postinc2,timer_interrupt@cur
  8154  001336  CFDD F031          	movff	postdec2,timer_interrupt@cur+1
  8155  00133A                     
  8156                           ; BSR set to: 0
  8157                           ;clock.c: 230:                     int prev = head;
  8158  00133A  C090  F02C         	movff	_head,timer_interrupt@prev
  8159  00133E  6A2D               	clrf	(timer_interrupt@prev+1)^0,c
  8160                           
  8161                           ;clock.c: 231:                     while(cur != 105 && sum + task_list[cur].delay_t <= t
      +                          ask_list[pos].delay_t) {
  8162  001340  EFCE  F009         	goto	i2l3597
  8163  001344                     i2l3593:
  8164                           
  8165                           ;clock.c: 233:                         sum+= task_list[cur].delay_t;
  8166  001344  C030  F001         	movff	timer_interrupt@cur,i2___wmul@multiplier
  8167  001348  C031  F002         	movff	timer_interrupt@cur+1,i2___wmul@multiplier+1
  8168  00134C  0E00               	movlw	0
  8169  00134E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8170  001350  0E0F               	movlw	15
  8171  001352  6E03               	movwf	i2___wmul@multiplicand^0,c
  8172  001354  ECB9  F01B         	call	i2___wmul	;wreg free
  8173  001358  0E64               	movlw	low _task_list
  8174  00135A  2401               	addwf	?i2___wmul^0,w,c
  8175  00135C  6ED9               	movwf	fsr2l,c
  8176  00135E  0E01               	movlw	high _task_list
  8177  001360  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8178  001362  6EDA               	movwf	fsr2h,c
  8179  001364  50DE               	movf	postinc2,w,c
  8180  001366  262E               	addwf	timer_interrupt@sum^0,f,c
  8181  001368  50DD               	movf	postdec2,w,c
  8182  00136A  222F               	addwfc	(timer_interrupt@sum+1)^0,f,c
  8183  00136C                     
  8184                           ;clock.c: 234:                         prev = cur;
  8185  00136C  C030  F02C         	movff	timer_interrupt@cur,timer_interrupt@prev
  8186  001370  C031  F02D         	movff	timer_interrupt@cur+1,timer_interrupt@prev+1
  8187                           
  8188                           ;clock.c: 235:                         cur = task_list[cur].next;
  8189  001374  C030  F001         	movff	timer_interrupt@cur,i2___wmul@multiplier
  8190  001378  C031  F002         	movff	timer_interrupt@cur+1,i2___wmul@multiplier+1
  8191  00137C  0E00               	movlw	0
  8192  00137E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8193  001380  0E0F               	movlw	15
  8194  001382  6E03               	movwf	i2___wmul@multiplicand^0,c
  8195  001384  ECB9  F01B         	call	i2___wmul	;wreg free
  8196  001388  0E6F               	movlw	low (_task_list+11)
  8197  00138A  2401               	addwf	?i2___wmul^0,w,c
  8198  00138C  6ED9               	movwf	fsr2l,c
  8199  00138E  0E01               	movlw	high (_task_list+11)
  8200  001390  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8201  001392  6EDA               	movwf	fsr2h,c
  8202  001394  CFDE F030          	movff	postinc2,timer_interrupt@cur
  8203  001398  CFDD F031          	movff	postdec2,timer_interrupt@cur+1
  8204  00139C                     i2l3597:
  8205                           
  8206                           ;clock.c: 231:                     while(cur != 105 && sum + task_list[cur].delay_t <= t
      +                          ask_list[pos].delay_t) {
  8207  00139C  0E69               	movlw	105
  8208  00139E  1830               	xorwf	timer_interrupt@cur^0,w,c
  8209  0013A0  1031               	iorwf	(timer_interrupt@cur+1)^0,w,c
  8210  0013A2  B4D8               	btfsc	status,2,c
  8211  0013A4  EFD6  F009         	goto	i2u285_41
  8212  0013A8  EFD8  F009         	goto	i2u285_40
  8213  0013AC                     i2u285_41:
  8214  0013AC  EF24  F00A         	goto	i2l3601
  8215  0013B0                     i2u285_40:
  8216  0013B0  C030  F001         	movff	timer_interrupt@cur,i2___wmul@multiplier
  8217  0013B4  C031  F002         	movff	timer_interrupt@cur+1,i2___wmul@multiplier+1
  8218  0013B8  0E00               	movlw	0
  8219  0013BA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8220  0013BC  0E0F               	movlw	15
  8221  0013BE  6E03               	movwf	i2___wmul@multiplicand^0,c
  8222  0013C0  ECB9  F01B         	call	i2___wmul	;wreg free
  8223  0013C4  0E64               	movlw	low _task_list
  8224  0013C6  2401               	addwf	?i2___wmul^0,w,c
  8225  0013C8  6ED9               	movwf	fsr2l,c
  8226  0013CA  0E01               	movlw	high _task_list
  8227  0013CC  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8228  0013CE  6EDA               	movwf	fsr2h,c
  8229  0013D0  CFDE F00F          	movff	postinc2,??_timer_interrupt
  8230  0013D4  CFDE F010          	movff	postinc2,??_timer_interrupt+1
  8231  0013D8  CFDE F011          	movff	postinc2,??_timer_interrupt+2
  8232  0013DC  CFDE F012          	movff	postinc2,??_timer_interrupt+3
  8233  0013E0  C02E  F013         	movff	timer_interrupt@sum,??_timer_interrupt+4
  8234  0013E4  C02F  F014         	movff	timer_interrupt@sum+1,??_timer_interrupt+5
  8235  0013E8  0E00               	movlw	0
  8236  0013EA  BE14               	btfsc	(??_timer_interrupt+5)^0,7,c
  8237  0013EC  0EFF               	movlw	255
  8238  0013EE  6E15               	movwf	(??_timer_interrupt+6)^0,c
  8239  0013F0  6E16               	movwf	(??_timer_interrupt+7)^0,c
  8240  0013F2  500F               	movf	??_timer_interrupt^0,w,c
  8241  0013F4  2413               	addwf	(??_timer_interrupt+4)^0,w,c
  8242  0013F6  6E17               	movwf	(??_timer_interrupt+8)^0,c
  8243  0013F8  5010               	movf	(??_timer_interrupt+1)^0,w,c
  8244  0013FA  2014               	addwfc	(??_timer_interrupt+5)^0,w,c
  8245  0013FC  6E18               	movwf	(??_timer_interrupt+9)^0,c
  8246  0013FE  5011               	movf	(??_timer_interrupt+2)^0,w,c
  8247  001400  2015               	addwfc	(??_timer_interrupt+6)^0,w,c
  8248  001402  6E19               	movwf	(??_timer_interrupt+10)^0,c
  8249  001404  5012               	movf	(??_timer_interrupt+3)^0,w,c
  8250  001406  2016               	addwfc	(??_timer_interrupt+7)^0,w,c
  8251  001408  6E1A               	movwf	(??_timer_interrupt+11)^0,c
  8252  00140A  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  8253  00140E  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  8254  001412  0E00               	movlw	0
  8255  001414  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8256  001416  0E0F               	movlw	15
  8257  001418  6E03               	movwf	i2___wmul@multiplicand^0,c
  8258  00141A  ECB9  F01B         	call	i2___wmul	;wreg free
  8259  00141E  0E64               	movlw	low _task_list
  8260  001420  2401               	addwf	?i2___wmul^0,w,c
  8261  001422  6ED9               	movwf	fsr2l,c
  8262  001424  0E01               	movlw	high _task_list
  8263  001426  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8264  001428  6EDA               	movwf	fsr2h,c
  8265  00142A  5017               	movf	(??_timer_interrupt+8)^0,w,c
  8266  00142C  5CDE               	subwf	postinc2,w,c
  8267  00142E  5018               	movf	(??_timer_interrupt+9)^0,w,c
  8268  001430  58DE               	subwfb	postinc2,w,c
  8269  001432  5019               	movf	(??_timer_interrupt+10)^0,w,c
  8270  001434  58DE               	subwfb	postinc2,w,c
  8271  001436  501A               	movf	(??_timer_interrupt+11)^0,w,c
  8272  001438  58DE               	subwfb	postinc2,w,c
  8273  00143A  B0D8               	btfsc	status,0,c
  8274  00143C  EF22  F00A         	goto	i2u286_41
  8275  001440  EF24  F00A         	goto	i2u286_40
  8276  001444                     i2u286_41:
  8277  001444  EFA2  F009         	goto	i2l3593
  8278  001448                     i2u286_40:
  8279  001448                     i2l3601:
  8280                           
  8281                           ;clock.c: 237:                     task_list[prev].next = pos;
  8282  001448  C02C  F001         	movff	timer_interrupt@prev,i2___wmul@multiplier
  8283  00144C  C02D  F002         	movff	timer_interrupt@prev+1,i2___wmul@multiplier+1
  8284  001450  0E00               	movlw	0
  8285  001452  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8286  001454  0E0F               	movlw	15
  8287  001456  6E03               	movwf	i2___wmul@multiplicand^0,c
  8288  001458  ECB9  F01B         	call	i2___wmul	;wreg free
  8289  00145C  0E6F               	movlw	low (_task_list+11)
  8290  00145E  2401               	addwf	?i2___wmul^0,w,c
  8291  001460  6ED9               	movwf	fsr2l,c
  8292  001462  0E01               	movlw	high (_task_list+11)
  8293  001464  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8294  001466  6EDA               	movwf	fsr2h,c
  8295  001468  C032  FFDE         	movff	timer_interrupt@pos,postinc2
  8296  00146C  C033  FFDD         	movff	timer_interrupt@pos+1,postdec2
  8297                           
  8298                           ;clock.c: 238:                     task_list[pos].next = cur;
  8299  001470  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  8300  001474  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  8301  001478  0E00               	movlw	0
  8302  00147A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8303  00147C  0E0F               	movlw	15
  8304  00147E  6E03               	movwf	i2___wmul@multiplicand^0,c
  8305  001480  ECB9  F01B         	call	i2___wmul	;wreg free
  8306  001484  0E6F               	movlw	low (_task_list+11)
  8307  001486  2401               	addwf	?i2___wmul^0,w,c
  8308  001488  6ED9               	movwf	fsr2l,c
  8309  00148A  0E01               	movlw	high (_task_list+11)
  8310  00148C  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8311  00148E  6EDA               	movwf	fsr2h,c
  8312  001490  C030  FFDE         	movff	timer_interrupt@cur,postinc2
  8313  001494  C031  FFDD         	movff	timer_interrupt@cur+1,postdec2
  8314                           
  8315                           ;clock.c: 239:                     task_list[pos].delay_t-= sum;
  8316  001498  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  8317  00149C  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  8318  0014A0  0E00               	movlw	0
  8319  0014A2  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8320  0014A4  0E0F               	movlw	15
  8321  0014A6  6E03               	movwf	i2___wmul@multiplicand^0,c
  8322  0014A8  ECB9  F01B         	call	i2___wmul	;wreg free
  8323  0014AC  0E64               	movlw	low _task_list
  8324  0014AE  2401               	addwf	?i2___wmul^0,w,c
  8325  0014B0  6ED9               	movwf	fsr2l,c
  8326  0014B2  0E01               	movlw	high _task_list
  8327  0014B4  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8328  0014B6  6EDA               	movwf	fsr2h,c
  8329  0014B8  502E               	movf	timer_interrupt@sum^0,w,c
  8330  0014BA  5EDE               	subwf	postinc2,f,c
  8331  0014BC  502F               	movf	(timer_interrupt@sum+1)^0,w,c
  8332  0014BE  5ADE               	subwfb	postinc2,f,c
  8333  0014C0  0E00               	movlw	0
  8334  0014C2  BE2F               	btfsc	(timer_interrupt@sum+1)^0,7,c
  8335  0014C4  0EFF               	movlw	255
  8336  0014C6  5ADE               	subwfb	postinc2,f,c
  8337  0014C8  5ADE               	subwfb	postinc2,f,c
  8338  0014CA                     i2l583:
  8339                           
  8340                           ;clock.c: 241:                 if(task_list[pos].next != 105)
  8341  0014CA  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  8342  0014CE  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  8343  0014D2  0E00               	movlw	0
  8344  0014D4  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8345  0014D6  0E0F               	movlw	15
  8346  0014D8  6E03               	movwf	i2___wmul@multiplicand^0,c
  8347  0014DA  ECB9  F01B         	call	i2___wmul	;wreg free
  8348  0014DE  0E6F               	movlw	low (_task_list+11)
  8349  0014E0  2401               	addwf	?i2___wmul^0,w,c
  8350  0014E2  6ED9               	movwf	fsr2l,c
  8351  0014E4  0E01               	movlw	high (_task_list+11)
  8352  0014E6  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8353  0014E8  6EDA               	movwf	fsr2h,c
  8354  0014EA  0E69               	movlw	105
  8355  0014EC  18DE               	xorwf	postinc2,w,c
  8356  0014EE  10DE               	iorwf	postinc2,w,c
  8357  0014F0  B4D8               	btfsc	status,2,c
  8358  0014F2  EF7D  F00A         	goto	i2u287_41
  8359  0014F6  EF7F  F00A         	goto	i2u287_40
  8360  0014FA                     i2u287_41:
  8361  0014FA  EFC3  F00A         	goto	i2l3605
  8362  0014FE                     i2u287_40:
  8363  0014FE                     
  8364                           ;clock.c: 242:                     task_list[task_list[pos].next].delay_t -= task_list[p
      +                          os].delay_t;
  8365  0014FE  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  8366  001502  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  8367  001506  0E00               	movlw	0
  8368  001508  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8369  00150A  0E0F               	movlw	15
  8370  00150C  6E03               	movwf	i2___wmul@multiplicand^0,c
  8371  00150E  ECB9  F01B         	call	i2___wmul	;wreg free
  8372  001512  0E6F               	movlw	low (_task_list+11)
  8373  001514  2401               	addwf	?i2___wmul^0,w,c
  8374  001516  6ED9               	movwf	fsr2l,c
  8375  001518  0E01               	movlw	high (_task_list+11)
  8376  00151A  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8377  00151C  6EDA               	movwf	fsr2h,c
  8378  00151E  CFDE F02A          	movff	postinc2,_timer_interrupt$2176
  8379  001522  CFDD F02B          	movff	postdec2,_timer_interrupt$2176+1
  8380                           
  8381                           ;clock.c: 242:                     task_list[task_list[pos].next].delay_t -= task_list[p
      +                          os].delay_t;
  8382  001526  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  8383  00152A  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  8384  00152E  0E00               	movlw	0
  8385  001530  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8386  001532  0E0F               	movlw	15
  8387  001534  6E03               	movwf	i2___wmul@multiplicand^0,c
  8388  001536  ECB9  F01B         	call	i2___wmul	;wreg free
  8389  00153A  0E64               	movlw	low _task_list
  8390  00153C  2401               	addwf	?i2___wmul^0,w,c
  8391  00153E  6ED9               	movwf	fsr2l,c
  8392  001540  0E01               	movlw	high _task_list
  8393  001542  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8394  001544  6EDA               	movwf	fsr2h,c
  8395  001546  CFDE F00F          	movff	postinc2,??_timer_interrupt
  8396  00154A  CFDE F010          	movff	postinc2,??_timer_interrupt+1
  8397  00154E  CFDE F011          	movff	postinc2,??_timer_interrupt+2
  8398  001552  CFDE F012          	movff	postinc2,??_timer_interrupt+3
  8399  001556  C02A  F001         	movff	_timer_interrupt$2176,i2___wmul@multiplier
  8400  00155A  C02B  F002         	movff	_timer_interrupt$2176+1,i2___wmul@multiplier+1
  8401  00155E  0E00               	movlw	0
  8402  001560  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8403  001562  0E0F               	movlw	15
  8404  001564  6E03               	movwf	i2___wmul@multiplicand^0,c
  8405  001566  ECB9  F01B         	call	i2___wmul	;wreg free
  8406  00156A  0E64               	movlw	low _task_list
  8407  00156C  2401               	addwf	?i2___wmul^0,w,c
  8408  00156E  6ED9               	movwf	fsr2l,c
  8409  001570  0E01               	movlw	high _task_list
  8410  001572  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8411  001574  6EDA               	movwf	fsr2h,c
  8412  001576  500F               	movf	??_timer_interrupt^0,w,c
  8413  001578  5EDE               	subwf	postinc2,f,c
  8414  00157A  5010               	movf	(??_timer_interrupt+1)^0,w,c
  8415  00157C  5ADE               	subwfb	postinc2,f,c
  8416  00157E  5011               	movf	(??_timer_interrupt+2)^0,w,c
  8417  001580  5ADE               	subwfb	postinc2,f,c
  8418  001582  5012               	movf	(??_timer_interrupt+3)^0,w,c
  8419  001584  5ADE               	subwfb	postinc2,f,c
  8420  001586                     i2l3605:
  8421                           
  8422                           ;clock.c: 214:         while(task_list[head].delay_t == 0) {
  8423  001586  0100               	movlb	0	; () banked
  8424  001588  5190               	movf	_head& (0+255),w,b
  8425  00158A  0D0F               	mullw	15
  8426  00158C  0E64               	movlw	low _task_list
  8427  00158E  24F3               	addwf	243,w,c
  8428  001590  6ED9               	movwf	fsr2l,c
  8429  001592  0E01               	movlw	high _task_list
  8430  001594  20F4               	addwfc	prodh,w,c
  8431  001596  6EDA               	movwf	fsr2h,c
  8432  001598  50DE               	movf	postinc2,w,c
  8433  00159A  10DE               	iorwf	postinc2,w,c
  8434  00159C  10DE               	iorwf	postinc2,w,c
  8435  00159E  10DE               	iorwf	postinc2,w,c
  8436  0015A0  B4D8               	btfsc	status,2,c
  8437  0015A2  EFD5  F00A         	goto	i2u288_41
  8438  0015A6  EFD7  F00A         	goto	i2u288_40
  8439  0015AA                     i2u288_41:
  8440  0015AA  EF99  F008         	goto	i2l577
  8441  0015AE                     i2u288_40:
  8442  0015AE                     
  8443                           ; BSR set to: 0
  8444                           ;clock.c: 245:         task_list[head].delay_t-= 10;
  8445  0015AE  5190               	movf	_head& (0+255),w,b
  8446  0015B0  0D0F               	mullw	15
  8447  0015B2  0E64               	movlw	low _task_list
  8448  0015B4  24F3               	addwf	243,w,c
  8449  0015B6  6ED9               	movwf	fsr2l,c
  8450  0015B8  0E01               	movlw	high _task_list
  8451  0015BA  20F4               	addwfc	prodh,w,c
  8452  0015BC  6EDA               	movwf	fsr2h,c
  8453  0015BE  0E0A               	movlw	10
  8454  0015C0  5EDE               	subwf	postinc2,f,c
  8455  0015C2  0E00               	movlw	0
  8456  0015C4  5ADE               	subwfb	postinc2,f,c
  8457  0015C6  5ADE               	subwfb	postinc2,f,c
  8458  0015C8  5ADE               	subwfb	postinc2,f,c
  8459  0015CA                     i2l575:
  8460  0015CA  C024  FFF4         	movff	??_timer_interrupt+21,prodh
  8461  0015CE  C023  FFF3         	movff	??_timer_interrupt+20,prodl
  8462  0015D2  C022  FFDA         	movff	??_timer_interrupt+19,fsr2h
  8463  0015D6  C021  FFD9         	movff	??_timer_interrupt+18,fsr2l
  8464  0015DA  C020  FFE2         	movff	??_timer_interrupt+17,fsr1h
  8465  0015DE  C01F  FFE1         	movff	??_timer_interrupt+16,fsr1l
  8466  0015E2  923C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8467  0015E4  0011               	retfie		f
  8468  0015E6                     __end_of_timer_interrupt:
  8469                           	opt callstack 0
  8470                           
  8471 ;; *************** function i2_remove_timer *****************
  8472 ;; Defined at:
  8473 ;;		line 155 in file "clock.c"
  8474 ;; Parameters:    Size  Location     Type
  8475 ;;  id              1    wreg     unsigned char 
  8476 ;; Auto vars:     Size  Location     Type
  8477 ;;  id              1    4[COMRAM] unsigned char 
  8478 ;;  remove_timer    1    5[COMRAM] unsigned char 
  8479 ;; Return value:  Size  Location     Type
  8480 ;;                  2    0[None  ] int 
  8481 ;; Registers used:
  8482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8483 ;; Tracked objects:
  8484 ;;		On entry : 0/0
  8485 ;;		On exit  : 0/0
  8486 ;;		Unchanged: 0/0
  8487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8489 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8490 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8491 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8492 ;;Total ram usage:        6 bytes
  8493 ;; Hardware stack levels used:    1
  8494 ;; Hardware stack levels required when called:    1
  8495 ;; This function calls:
  8496 ;;		i2_isEmptyList
  8497 ;; This function is called by:
  8498 ;;		_timer_interrupt
  8499 ;; This function uses a non-reentrant model
  8500 ;;
  8501                           
  8502                           	psect	text50
  8503  0026BA                     __ptext50:
  8504                           	opt callstack 0
  8505  0026BA                     i2_remove_timer:
  8506                           	opt callstack 21
  8507                           
  8508                           ;incstack = 0
  8509                           ;i2remove_timer@id stored from wreg
  8510  0026BA  6E05               	movwf	i2remove_timer@id^0,c
  8511  0026BC                     
  8512                           ;clock.c: 156:     if(isEmptyList() || task_list[id].func_ptr == ((void*)0))
  8513  0026BC  EC24  F01C         	call	i2_isEmptyList	;wreg free
  8514  0026C0  0900               	iorlw	0
  8515  0026C2  A4D8               	btfss	status,2,c
  8516  0026C4  EF66  F013         	goto	i2u270_41
  8517  0026C8  EF68  F013         	goto	i2u270_40
  8518  0026CC                     i2u270_41:
  8519  0026CC  EF28  F014         	goto	i2l556
  8520  0026D0                     i2u270_40:
  8521  0026D0  5005               	movf	i2remove_timer@id^0,w,c
  8522  0026D2  0D0F               	mullw	15
  8523  0026D4  0E6C               	movlw	low (_task_list+8)
  8524  0026D6  24F3               	addwf	243,w,c
  8525  0026D8  6ED9               	movwf	fsr2l,c
  8526  0026DA  0E01               	movlw	high (_task_list+8)
  8527  0026DC  20F4               	addwfc	prodh,w,c
  8528  0026DE  6EDA               	movwf	fsr2h,c
  8529  0026E0  50DE               	movf	postinc2,w,c
  8530  0026E2  10DE               	iorwf	postinc2,w,c
  8531  0026E4  10DE               	iorwf	postinc2,w,c
  8532  0026E6  A4D8               	btfss	status,2,c
  8533  0026E8  EF78  F013         	goto	i2u271_41
  8534  0026EC  EF7A  F013         	goto	i2u271_40
  8535  0026F0                     i2u271_41:
  8536  0026F0  EF7C  F013         	goto	i2l3501
  8537  0026F4                     i2u271_40:
  8538  0026F4  EF28  F014         	goto	i2l556
  8539  0026F8                     i2l3501:
  8540                           
  8541                           ;clock.c: 158:     task_list[id].delay_t = 0;
  8542  0026F8  5005               	movf	i2remove_timer@id^0,w,c
  8543  0026FA  0D0F               	mullw	15
  8544  0026FC  0E64               	movlw	low _task_list
  8545  0026FE  24F3               	addwf	243,w,c
  8546  002700  6ED9               	movwf	fsr2l,c
  8547  002702  0E01               	movlw	high _task_list
  8548  002704  20F4               	addwfc	prodh,w,c
  8549  002706  6EDA               	movwf	fsr2h,c
  8550  002708  6ADE               	clrf	postinc2,c
  8551  00270A  6ADE               	clrf	postinc2,c
  8552  00270C  6ADE               	clrf	postinc2,c
  8553  00270E  6ADD               	clrf	postdec2,c
  8554                           
  8555                           ;clock.c: 159:     task_list[id].period_t = 0;
  8556  002710  5005               	movf	i2remove_timer@id^0,w,c
  8557  002712  0D0F               	mullw	15
  8558  002714  0E68               	movlw	low (_task_list+4)
  8559  002716  24F3               	addwf	243,w,c
  8560  002718  6ED9               	movwf	fsr2l,c
  8561  00271A  0E01               	movlw	high (_task_list+4)
  8562  00271C  20F4               	addwfc	prodh,w,c
  8563  00271E  6EDA               	movwf	fsr2h,c
  8564  002720  6ADE               	clrf	postinc2,c
  8565  002722  6ADE               	clrf	postinc2,c
  8566  002724  6ADE               	clrf	postinc2,c
  8567  002726  6ADD               	clrf	postdec2,c
  8568                           
  8569                           ;clock.c: 160:     task_list[id].func_ptr = ((void*)0);
  8570  002728  5005               	movf	i2remove_timer@id^0,w,c
  8571  00272A  0D0F               	mullw	15
  8572  00272C  0E6C               	movlw	low (_task_list+8)
  8573  00272E  24F3               	addwf	243,w,c
  8574  002730  6ED9               	movwf	fsr2l,c
  8575  002732  0E01               	movlw	high (_task_list+8)
  8576  002734  20F4               	addwfc	prodh,w,c
  8577  002736  6EDA               	movwf	fsr2h,c
  8578  002738  0E00               	movlw	0
  8579  00273A  6EDE               	movwf	postinc2,c
  8580  00273C  0E00               	movlw	0
  8581  00273E  6EDE               	movwf	postinc2,c
  8582  002740  0E00               	movlw	0
  8583  002742  6EDE               	movwf	postinc2,c
  8584                           
  8585                           ;clock.c: 161:     task_list[id].data_p = ((void*)0);
  8586  002744  5005               	movf	i2remove_timer@id^0,w,c
  8587  002746  0D0F               	mullw	15
  8588  002748  0E71               	movlw	low (_task_list+13)
  8589  00274A  24F3               	addwf	243,w,c
  8590  00274C  6ED9               	movwf	fsr2l,c
  8591  00274E  0E01               	movlw	high (_task_list+13)
  8592  002750  20F4               	addwfc	prodh,w,c
  8593  002752  6EDA               	movwf	fsr2h,c
  8594  002754  0E00               	movlw	0
  8595  002756  6EDE               	movwf	postinc2,c
  8596  002758  0E00               	movlw	0
  8597  00275A  6EDD               	movwf	postdec2,c
  8598  00275C                     
  8599                           ;clock.c: 162:     num_task--;
  8600  00275C  0100               	movlb	0	; () banked
  8601  00275E  0791               	decf	_num_task& (0+255),f,b
  8602  002760                     
  8603                           ; BSR set to: 0
  8604                           ;clock.c: 163:     if(id == head) {
  8605  002760  5190               	movf	_head& (0+255),w,b
  8606  002762  1805               	xorwf	i2remove_timer@id^0,w,c
  8607  002764  A4D8               	btfss	status,2,c
  8608  002766  EFB7  F013         	goto	i2u272_41
  8609  00276A  EFB9  F013         	goto	i2u272_40
  8610  00276E                     i2u272_41:
  8611  00276E  EFD1  F013         	goto	i2l557
  8612  002772                     i2u272_40:
  8613  002772                     
  8614                           ; BSR set to: 0
  8615                           ;clock.c: 164:         head = task_list[id].next;
  8616  002772  5005               	movf	i2remove_timer@id^0,w,c
  8617  002774  0D0F               	mullw	15
  8618  002776  0E6F               	movlw	low (_task_list+11)
  8619  002778  24F3               	addwf	243,w,c
  8620  00277A  6ED9               	movwf	fsr2l,c
  8621  00277C  0E01               	movlw	high (_task_list+11)
  8622  00277E  20F4               	addwfc	prodh,w,c
  8623  002780  6EDA               	movwf	fsr2h,c
  8624  002782  50DF               	movf	indf2,w,c
  8625  002784  6F90               	movwf	_head& (0+255),b
  8626                           
  8627                           ;clock.c: 165:         task_list[id].next = 105;
  8628  002786  5005               	movf	i2remove_timer@id^0,w,c
  8629  002788  0D0F               	mullw	15
  8630  00278A  0E6F               	movlw	low (_task_list+11)
  8631  00278C  24F3               	addwf	243,w,c
  8632  00278E  6ED9               	movwf	fsr2l,c
  8633  002790  0E01               	movlw	high (_task_list+11)
  8634  002792  20F4               	addwfc	prodh,w,c
  8635  002794  6EDA               	movwf	fsr2h,c
  8636  002796  0E69               	movlw	105
  8637  002798  6EDE               	movwf	postinc2,c
  8638  00279A  0E00               	movlw	0
  8639  00279C  6EDD               	movwf	postdec2,c
  8640                           
  8641                           ;clock.c: 166:     }
  8642  00279E  EF28  F014         	goto	i2l556
  8643  0027A2                     i2l557:
  8644                           
  8645                           ; BSR set to: 0
  8646                           ;clock.c: 168:         char pos = head;
  8647  0027A2  C090  F006         	movff	_head,i2remove_timer@pos
  8648                           
  8649                           ;clock.c: 169:         while(task_list[pos].next != 105 && task_list[pos].next != id) {
  8650  0027A6  EFDF  F013         	goto	i2l559
  8651  0027AA                     i2l3509:
  8652                           
  8653                           ;clock.c: 170:             pos = task_list[pos].next;
  8654  0027AA  5006               	movf	i2remove_timer@pos^0,w,c
  8655  0027AC  0D0F               	mullw	15
  8656  0027AE  0E6F               	movlw	low (_task_list+11)
  8657  0027B0  24F3               	addwf	243,w,c
  8658  0027B2  6ED9               	movwf	fsr2l,c
  8659  0027B4  0E01               	movlw	high (_task_list+11)
  8660  0027B6  20F4               	addwfc	prodh,w,c
  8661  0027B8  6EDA               	movwf	fsr2h,c
  8662  0027BA  50DF               	movf	indf2,w,c
  8663  0027BC  6E06               	movwf	i2remove_timer@pos^0,c
  8664  0027BE                     i2l559:
  8665                           
  8666                           ;clock.c: 169:         while(task_list[pos].next != 105 && task_list[pos].next != id) {
  8667  0027BE  5006               	movf	i2remove_timer@pos^0,w,c
  8668  0027C0  0D0F               	mullw	15
  8669  0027C2  0E6F               	movlw	low (_task_list+11)
  8670  0027C4  24F3               	addwf	243,w,c
  8671  0027C6  6ED9               	movwf	fsr2l,c
  8672  0027C8  0E01               	movlw	high (_task_list+11)
  8673  0027CA  20F4               	addwfc	prodh,w,c
  8674  0027CC  6EDA               	movwf	fsr2h,c
  8675  0027CE  0E69               	movlw	105
  8676  0027D0  18DE               	xorwf	postinc2,w,c
  8677  0027D2  10DE               	iorwf	postinc2,w,c
  8678  0027D4  B4D8               	btfsc	status,2,c
  8679  0027D6  EFEF  F013         	goto	i2u273_41
  8680  0027DA  EFF1  F013         	goto	i2u273_40
  8681  0027DE                     i2u273_41:
  8682  0027DE  EF08  F014         	goto	i2l3513
  8683  0027E2                     i2u273_40:
  8684  0027E2  5006               	movf	i2remove_timer@pos^0,w,c
  8685  0027E4  0D0F               	mullw	15
  8686  0027E6  0E6F               	movlw	low (_task_list+11)
  8687  0027E8  24F3               	addwf	243,w,c
  8688  0027EA  6ED9               	movwf	fsr2l,c
  8689  0027EC  0E01               	movlw	high (_task_list+11)
  8690  0027EE  20F4               	addwfc	prodh,w,c
  8691  0027F0  6EDA               	movwf	fsr2h,c
  8692  0027F2  5005               	movf	i2remove_timer@id^0,w,c
  8693  0027F4  6E03               	movwf	(??i2_remove_timer+2)^0,c
  8694  0027F6  6A04               	clrf	(??i2_remove_timer+3)^0,c
  8695  0027F8  50DE               	movf	postinc2,w,c
  8696  0027FA  1803               	xorwf	(??i2_remove_timer+2)^0,w,c
  8697  0027FC  E107               	bnz	i2u274_41
  8698  0027FE  50DE               	movf	postinc2,w,c
  8699  002800  1804               	xorwf	(??i2_remove_timer+3)^0,w,c
  8700  002802  A4D8               	btfss	status,2,c
  8701  002804  EF06  F014         	goto	i2u274_41
  8702  002808  EF08  F014         	goto	i2u274_40
  8703  00280C                     i2u274_41:
  8704  00280C  EFD5  F013         	goto	i2l3509
  8705  002810                     i2u274_40:
  8706  002810                     i2l3513:
  8707                           
  8708                           ;clock.c: 172:         task_list[pos].next = task_list[id].next;
  8709  002810  5005               	movf	i2remove_timer@id^0,w,c
  8710  002812  0D0F               	mullw	15
  8711  002814  0E6F               	movlw	low (_task_list+11)
  8712  002816  24F3               	addwf	243,w,c
  8713  002818  6ED9               	movwf	fsr2l,c
  8714  00281A  0E01               	movlw	high (_task_list+11)
  8715  00281C  20F4               	addwfc	prodh,w,c
  8716  00281E  6EDA               	movwf	fsr2h,c
  8717  002820  5006               	movf	i2remove_timer@pos^0,w,c
  8718  002822  0D0F               	mullw	15
  8719  002824  0E6F               	movlw	low (_task_list+11)
  8720  002826  24F3               	addwf	243,w,c
  8721  002828  6EE1               	movwf	fsr1l,c
  8722  00282A  0E01               	movlw	high (_task_list+11)
  8723  00282C  20F4               	addwfc	prodh,w,c
  8724  00282E  6EE2               	movwf	fsr1h,c
  8725  002830  CFDE FFE6          	movff	postinc2,postinc1
  8726  002834  CFDD FFE5          	movff	postdec2,postdec1
  8727  002838                     
  8728                           ;clock.c: 173:         task_list[id].next = 105;
  8729  002838  5005               	movf	i2remove_timer@id^0,w,c
  8730  00283A  0D0F               	mullw	15
  8731  00283C  0E6F               	movlw	low (_task_list+11)
  8732  00283E  24F3               	addwf	243,w,c
  8733  002840  6ED9               	movwf	fsr2l,c
  8734  002842  0E01               	movlw	high (_task_list+11)
  8735  002844  20F4               	addwfc	prodh,w,c
  8736  002846  6EDA               	movwf	fsr2h,c
  8737  002848  0E69               	movlw	105
  8738  00284A  6EDE               	movwf	postinc2,c
  8739  00284C  0E00               	movlw	0
  8740  00284E  6EDD               	movwf	postdec2,c
  8741  002850                     i2l556:
  8742  002850  0012               	return		;funcret
  8743  002852                     __end_ofi2_remove_timer:
  8744                           	opt callstack 0
  8745                           
  8746 ;; *************** function i2_isEmptyList *****************
  8747 ;; Defined at:
  8748 ;;		line 73 in file "clock.c"
  8749 ;; Parameters:    Size  Location     Type
  8750 ;;		None
  8751 ;; Auto vars:     Size  Location     Type
  8752 ;;		None
  8753 ;; Return value:  Size  Location     Type
  8754 ;;                  1    wreg      unsigned char 
  8755 ;; Registers used:
  8756 ;;		wreg, status,2
  8757 ;; Tracked objects:
  8758 ;;		On entry : 0/0
  8759 ;;		On exit  : 0/0
  8760 ;;		Unchanged: 0/0
  8761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8766 ;;Total ram usage:        0 bytes
  8767 ;; Hardware stack levels used:    1
  8768 ;; This function calls:
  8769 ;;		Nothing
  8770 ;; This function is called by:
  8771 ;;		i2_remove_timer
  8772 ;; This function uses a non-reentrant model
  8773 ;;
  8774                           
  8775                           	psect	text51
  8776  003848                     __ptext51:
  8777                           	opt callstack 0
  8778  003848                     i2_isEmptyList:
  8779                           	opt callstack 21
  8780  003848                     
  8781                           ;clock.c: 74:     return num_task == 0 ? 1 : 0;
  8782  003848  0100               	movlb	0	; () banked
  8783  00384A  5191               	movf	_num_task& (0+255),w,b
  8784  00384C  B4D8               	btfsc	status,2,c
  8785  00384E  EF2B  F01C         	goto	i2u249_41
  8786  003852  EF2E  F01C         	goto	i2u249_40
  8787  003856                     i2u249_41:
  8788  003856  0E01               	movlw	1
  8789  003858  EF2F  F01C         	goto	i2u250_40
  8790  00385C                     i2u249_40:
  8791  00385C  0E00               	movlw	0
  8792  00385E                     i2u250_40:
  8793  00385E                     
  8794                           ; BSR set to: 0
  8795  00385E  0012               	return		;funcret
  8796  003860                     __end_ofi2_isEmptyList:
  8797                           	opt callstack 0
  8798                           
  8799 ;; *************** function _enqueue *****************
  8800 ;; Defined at:
  8801 ;;		line 29 in file "clock.c"
  8802 ;; Parameters:    Size  Location     Type
  8803 ;;  ptr             3    9[COMRAM] PTR FTN(PTR void ,)void 
  8804 ;;		 -> print_temp_and_humid(1), readTempAndHumid(1), check_humid_to_turn_fan(1), handleButton(1), 
  8805 ;;		 -> NULL(0), changeState(1), 
  8806 ;;  data_ptr        2   12[COMRAM] PTR void 
  8807 ;;		 -> NULL(0), 
  8808 ;; Auto vars:     Size  Location     Type
  8809 ;;		None
  8810 ;; Return value:  Size  Location     Type
  8811 ;;                  1    wreg      unsigned char 
  8812 ;; Registers used:
  8813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8814 ;; Tracked objects:
  8815 ;;		On entry : 0/0
  8816 ;;		On exit  : 0/0
  8817 ;;		Unchanged: 0/0
  8818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8819 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8822 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8823 ;;Total ram usage:        5 bytes
  8824 ;; Hardware stack levels used:    1
  8825 ;; Hardware stack levels required when called:    3
  8826 ;; This function calls:
  8827 ;;		_isFullQueue
  8828 ;;		i2___awmod
  8829 ;;		i2___wmul
  8830 ;; This function is called by:
  8831 ;;		_timer_interrupt
  8832 ;; This function uses a non-reentrant model
  8833 ;;
  8834                           
  8835                           	psect	text52
  8836  002F1E                     __ptext52:
  8837                           	opt callstack 0
  8838  002F1E                     _enqueue:
  8839                           	opt callstack 19
  8840  002F1E                     
  8841                           ;clock.c: 30:     if(isFullQueue())
  8842  002F1E  ECFD  F01B         	call	_isFullQueue	;wreg free
  8843  002F22  0900               	iorlw	0
  8844  002F24  B4D8               	btfsc	status,2,c
  8845  002F26  EF97  F017         	goto	i2u268_41
  8846  002F2A  EF99  F017         	goto	i2u268_40
  8847  002F2E                     i2u268_41:
  8848  002F2E  EF9B  F017         	goto	i2l3485
  8849  002F32                     i2u268_40:
  8850  002F32  EFE4  F017         	goto	i2l494
  8851  002F36                     i2l3485:
  8852                           
  8853                           ;clock.c: 32:     if(front == -1)
  8854  002F36  0100               	movlb	0	; () banked
  8855  002F38  29CC               	incf	_front& (0+255),w,b
  8856  002F3A  E106               	bnz	i2u269_41
  8857  002F3C  29CD               	incf	(_front+1)& (0+255),w,b
  8858  002F3E  A4D8               	btfss	status,2,c
  8859  002F40  EFA4  F017         	goto	i2u269_41
  8860  002F44  EFA6  F017         	goto	i2u269_40
  8861  002F48                     i2u269_41:
  8862  002F48  EFAA  F017         	goto	i2l3489
  8863  002F4C                     i2u269_40:
  8864  002F4C                     
  8865                           ; BSR set to: 0
  8866                           ;clock.c: 33:         front = 0;
  8867  002F4C  0E00               	movlw	0
  8868  002F4E  6FCD               	movwf	(_front+1)& (0+255),b
  8869  002F50  0E00               	movlw	0
  8870  002F52  6FCC               	movwf	_front& (0+255),b
  8871  002F54                     i2l3489:
  8872                           
  8873                           ; BSR set to: 0
  8874                           ;clock.c: 34:     rear = (rear + 1) % 20;
  8875  002F54  0E01               	movlw	1
  8876  002F56  25CA               	addwf	_rear& (0+255),w,b
  8877  002F58  6E01               	movwf	i2___awmod@dividend^0,c
  8878  002F5A  0E00               	movlw	0
  8879  002F5C  21CB               	addwfc	(_rear+1)& (0+255),w,b
  8880  002F5E  6E02               	movwf	(i2___awmod@dividend+1)^0,c
  8881  002F60  0E00               	movlw	0
  8882  002F62  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  8883  002F64  0E14               	movlw	20
  8884  002F66  6E03               	movwf	i2___awmod@divisor^0,c
  8885  002F68  EC37  F017         	call	i2___awmod	;wreg free
  8886  002F6C  C001  F0CA         	movff	?i2___awmod,_rear
  8887  002F70  C002  F0CB         	movff	?i2___awmod+1,_rear+1
  8888  002F74                     
  8889                           ;clock.c: 35:     ready_queue[rear].func_ptr = ptr;
  8890  002F74  C0CA  F001         	movff	_rear,i2___wmul@multiplier
  8891  002F78  C0CB  F002         	movff	_rear+1,i2___wmul@multiplier+1
  8892  002F7C  0E00               	movlw	0
  8893  002F7E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8894  002F80  0E05               	movlw	5
  8895  002F82  6E03               	movwf	i2___wmul@multiplicand^0,c
  8896  002F84  ECB9  F01B         	call	i2___wmul	;wreg free
  8897  002F88  0E00               	movlw	low _ready_queue
  8898  002F8A  2401               	addwf	?i2___wmul^0,w,c
  8899  002F8C  6ED9               	movwf	fsr2l,c
  8900  002F8E  0E01               	movlw	high _ready_queue
  8901  002F90  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8902  002F92  6EDA               	movwf	fsr2h,c
  8903  002F94  C00A  FFDE         	movff	enqueue@ptr,postinc2
  8904  002F98  C00B  FFDE         	movff	enqueue@ptr+1,postinc2
  8905  002F9C  C00C  FFDE         	movff	enqueue@ptr+2,postinc2
  8906  002FA0                     
  8907                           ;clock.c: 36:     ready_queue[rear].data_p = data_ptr;
  8908  002FA0  C0CA  F001         	movff	_rear,i2___wmul@multiplier
  8909  002FA4  C0CB  F002         	movff	_rear+1,i2___wmul@multiplier+1
  8910  002FA8  0E00               	movlw	0
  8911  002FAA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8912  002FAC  0E05               	movlw	5
  8913  002FAE  6E03               	movwf	i2___wmul@multiplicand^0,c
  8914  002FB0  ECB9  F01B         	call	i2___wmul	;wreg free
  8915  002FB4  0E03               	movlw	low (_ready_queue+3)
  8916  002FB6  2401               	addwf	?i2___wmul^0,w,c
  8917  002FB8  6ED9               	movwf	fsr2l,c
  8918  002FBA  0E01               	movlw	high (_ready_queue+3)
  8919  002FBC  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8920  002FBE  6EDA               	movwf	fsr2h,c
  8921  002FC0  C00D  FFDE         	movff	enqueue@data_ptr,postinc2
  8922  002FC4  C00E  FFDD         	movff	enqueue@data_ptr+1,postdec2
  8923  002FC8                     i2l494:
  8924  002FC8  0012               	return		;funcret
  8925  002FCA                     __end_of_enqueue:
  8926                           	opt callstack 0
  8927                           
  8928 ;; *************** function i2___wmul *****************
  8929 ;; Defined at:
  8930 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  8931 ;; Parameters:    Size  Location     Type
  8932 ;;  multiplier      2    0[COMRAM] unsigned int 
  8933 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8934 ;; Auto vars:     Size  Location     Type
  8935 ;;  __wmul          2    4[COMRAM] unsigned int 
  8936 ;; Return value:  Size  Location     Type
  8937 ;;                  2    0[COMRAM] unsigned int 
  8938 ;; Registers used:
  8939 ;;		wreg, status,2, status,0, prodl, prodh
  8940 ;; Tracked objects:
  8941 ;;		On entry : 0/0
  8942 ;;		On exit  : 0/0
  8943 ;;		Unchanged: 0/0
  8944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8945 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8946 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8948 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8949 ;;Total ram usage:        6 bytes
  8950 ;; Hardware stack levels used:    1
  8951 ;; This function calls:
  8952 ;;		Nothing
  8953 ;; This function is called by:
  8954 ;;		_enqueue
  8955 ;;		_timer_interrupt
  8956 ;; This function uses a non-reentrant model
  8957 ;;
  8958                           
  8959                           	psect	text53
  8960  003772                     __ptext53:
  8961                           	opt callstack 0
  8962  003772                     i2___wmul:
  8963                           	opt callstack 22
  8964  003772  5001               	movf	i2___wmul@multiplier^0,w,c
  8965  003774  0203               	mulwf	i2___wmul@multiplicand^0,c
  8966  003776  CFF3 F005          	movff	prodl,i2___wmul@product
  8967  00377A  CFF4 F006          	movff	prodh,i2___wmul@product+1
  8968  00377E  5001               	movf	i2___wmul@multiplier^0,w,c
  8969  003780  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
  8970  003782  50F3               	movf	243,w,c
  8971  003784  2606               	addwf	(i2___wmul@product+1)^0,f,c
  8972  003786  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
  8973  003788  0203               	mulwf	i2___wmul@multiplicand^0,c
  8974  00378A  50F3               	movf	243,w,c
  8975  00378C  2606               	addwf	(i2___wmul@product+1)^0,f,c
  8976  00378E  C005  F001         	movff	i2___wmul@product,?i2___wmul
  8977  003792  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  8978  003796  0012               	return		;funcret
  8979  003798                     __end_ofi2___wmul:
  8980                           	opt callstack 0
  8981                           
  8982 ;; *************** function _isFullQueue *****************
  8983 ;; Defined at:
  8984 ;;		line 19 in file "clock.c"
  8985 ;; Parameters:    Size  Location     Type
  8986 ;;		None
  8987 ;; Auto vars:     Size  Location     Type
  8988 ;;		None
  8989 ;; Return value:  Size  Location     Type
  8990 ;;                  1    wreg      unsigned char 
  8991 ;; Registers used:
  8992 ;;		wreg, status,2, status,0, cstack
  8993 ;; Tracked objects:
  8994 ;;		On entry : 0/0
  8995 ;;		On exit  : 0/0
  8996 ;;		Unchanged: 0/0
  8997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9000 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9001 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9002 ;;Total ram usage:        1 bytes
  9003 ;; Hardware stack levels used:    1
  9004 ;; Hardware stack levels required when called:    2
  9005 ;; This function calls:
  9006 ;;		i2_getSizeQueue
  9007 ;; This function is called by:
  9008 ;;		_enqueue
  9009 ;; This function uses a non-reentrant model
  9010 ;;
  9011                           
  9012                           	psect	text54
  9013  0037FA                     __ptext54:
  9014                           	opt callstack 0
  9015  0037FA                     _isFullQueue:
  9016                           	opt callstack 19
  9017  0037FA                     
  9018                           ;clock.c: 20:     return getSizeQueue() >= 20 ? 1 : 0;
  9019  0037FA  EC7C  F01B         	call	i2_getSizeQueue	;wreg free
  9020  0037FE  6E09               	movwf	??_isFullQueue^0,c
  9021  003800  0E14               	movlw	20
  9022  003802  6009               	cpfslt	??_isFullQueue^0,c
  9023  003804  EF06  F01C         	goto	i2u243_41
  9024  003808  EF09  F01C         	goto	i2u243_40
  9025  00380C                     i2u243_41:
  9026  00380C  0E01               	movlw	1
  9027  00380E  EF0A  F01C         	goto	i2u244_40
  9028  003812                     i2u243_40:
  9029  003812  0E00               	movlw	0
  9030  003814                     i2u244_40:
  9031  003814  0012               	return		;funcret
  9032  003816                     __end_of_isFullQueue:
  9033                           	opt callstack 0
  9034                           
  9035 ;; *************** function i2_getSizeQueue *****************
  9036 ;; Defined at:
  9037 ;;		line 15 in file "clock.c"
  9038 ;; Parameters:    Size  Location     Type
  9039 ;;		None
  9040 ;; Auto vars:     Size  Location     Type
  9041 ;;		None
  9042 ;; Return value:  Size  Location     Type
  9043 ;;                  1    wreg      unsigned char 
  9044 ;; Registers used:
  9045 ;;		wreg, status,2, status,0, cstack
  9046 ;; Tracked objects:
  9047 ;;		On entry : 0/0
  9048 ;;		On exit  : 0/0
  9049 ;;		Unchanged: 0/0
  9050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9053 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9054 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9055 ;;Total ram usage:        2 bytes
  9056 ;; Hardware stack levels used:    1
  9057 ;; Hardware stack levels required when called:    1
  9058 ;; This function calls:
  9059 ;;		i2___awmod
  9060 ;; This function is called by:
  9061 ;;		_isFullQueue
  9062 ;; This function uses a non-reentrant model
  9063 ;;
  9064                           
  9065                           	psect	text55
  9066  0036F8                     __ptext55:
  9067                           	opt callstack 0
  9068  0036F8                     i2_getSizeQueue:
  9069                           	opt callstack 19
  9070  0036F8                     
  9071                           ;clock.c: 16:     return (rear - front + 1 + 20) % 20;
  9072  0036F8  0100               	movlb	0	; () banked
  9073  0036FA  51CC               	movf	_front& (0+255),w,b
  9074  0036FC  5DCA               	subwf	_rear& (0+255),w,b
  9075  0036FE  6E07               	movwf	??i2_getSizeQueue^0,c
  9076  003700  51CD               	movf	(_front+1)& (0+255),w,b
  9077  003702  59CB               	subwfb	(_rear+1)& (0+255),w,b
  9078  003704  6E08               	movwf	(??i2_getSizeQueue+1)^0,c
  9079  003706  0E15               	movlw	21
  9080  003708  2407               	addwf	??i2_getSizeQueue^0,w,c
  9081  00370A  6E01               	movwf	i2___awmod@dividend^0,c
  9082  00370C  0E00               	movlw	0
  9083  00370E  2008               	addwfc	(??i2_getSizeQueue+1)^0,w,c
  9084  003710  6E02               	movwf	(i2___awmod@dividend+1)^0,c
  9085  003712  0E00               	movlw	0
  9086  003714  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  9087  003716  0E14               	movlw	20
  9088  003718  6E03               	movwf	i2___awmod@divisor^0,c
  9089  00371A  EC37  F017         	call	i2___awmod	;wreg free
  9090  00371E  5001               	movf	?i2___awmod^0,w,c
  9091  003720  0012               	return		;funcret
  9092  003722                     __end_ofi2_getSizeQueue:
  9093                           	opt callstack 0
  9094                           
  9095 ;; *************** function i2___awmod *****************
  9096 ;; Defined at:
  9097 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  9098 ;; Parameters:    Size  Location     Type
  9099 ;;  dividend        2    0[COMRAM] int 
  9100 ;;  divisor         2    2[COMRAM] int 
  9101 ;; Auto vars:     Size  Location     Type
  9102 ;;  __awmod         1    5[COMRAM] unsigned char 
  9103 ;;  __awmod         1    4[COMRAM] unsigned char 
  9104 ;; Return value:  Size  Location     Type
  9105 ;;                  2    0[COMRAM] int 
  9106 ;; Registers used:
  9107 ;;		wreg, status,2, status,0
  9108 ;; Tracked objects:
  9109 ;;		On entry : 0/0
  9110 ;;		On exit  : 0/0
  9111 ;;		Unchanged: 0/0
  9112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9113 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9114 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9116 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9117 ;;Total ram usage:        6 bytes
  9118 ;; Hardware stack levels used:    1
  9119 ;; This function calls:
  9120 ;;		Nothing
  9121 ;; This function is called by:
  9122 ;;		_enqueue
  9123 ;;		i2_getSizeQueue
  9124 ;; This function uses a non-reentrant model
  9125 ;;
  9126                           
  9127                           	psect	text56
  9128  002E6E                     __ptext56:
  9129                           	opt callstack 0
  9130  002E6E                     i2___awmod:
  9131                           	opt callstack 21
  9132  002E6E  0E00               	movlw	0
  9133  002E70  6E06               	movwf	i2___awmod@sign^0,c
  9134  002E72  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
  9135  002E74  EF40  F017         	goto	i2u165_40
  9136  002E78  EF3E  F017         	goto	i2u165_41
  9137  002E7C                     i2u165_41:
  9138  002E7C  EF46  F017         	goto	i2l2717
  9139  002E80                     i2u165_40:
  9140  002E80  6C01               	negf	i2___awmod@dividend^0,c
  9141  002E82  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  9142  002E84  B0D8               	btfsc	status,0,c
  9143  002E86  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  9144  002E88  0E01               	movlw	1
  9145  002E8A  6E06               	movwf	i2___awmod@sign^0,c
  9146  002E8C                     i2l2717:
  9147  002E8C  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
  9148  002E8E  EF4D  F017         	goto	i2u166_40
  9149  002E92  EF4B  F017         	goto	i2u166_41
  9150  002E96                     i2u166_41:
  9151  002E96  EF51  F017         	goto	i2l2721
  9152  002E9A                     i2u166_40:
  9153  002E9A  6C03               	negf	i2___awmod@divisor^0,c
  9154  002E9C  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  9155  002E9E  B0D8               	btfsc	status,0,c
  9156  002EA0  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  9157  002EA2                     i2l2721:
  9158  002EA2  5003               	movf	i2___awmod@divisor^0,w,c
  9159  002EA4  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  9160  002EA6  B4D8               	btfsc	status,2,c
  9161  002EA8  EF58  F017         	goto	i2u167_41
  9162  002EAC  EF5A  F017         	goto	i2u167_40
  9163  002EB0                     i2u167_41:
  9164  002EB0  EF7E  F017         	goto	i2l2737
  9165  002EB4                     i2u167_40:
  9166  002EB4  0E01               	movlw	1
  9167  002EB6  6E05               	movwf	i2___awmod@counter^0,c
  9168  002EB8  EF62  F017         	goto	i2l2727
  9169  002EBC                     i2l2725:
  9170  002EBC  90D8               	bcf	status,0,c
  9171  002EBE  3603               	rlcf	i2___awmod@divisor^0,f,c
  9172  002EC0  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  9173  002EC2  2A05               	incf	i2___awmod@counter^0,f,c
  9174  002EC4                     i2l2727:
  9175  002EC4  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  9176  002EC6  EF67  F017         	goto	i2u168_41
  9177  002ECA  EF69  F017         	goto	i2u168_40
  9178  002ECE                     i2u168_41:
  9179  002ECE  EF5E  F017         	goto	i2l2725
  9180  002ED2                     i2u168_40:
  9181  002ED2                     i2l2729:
  9182  002ED2  5003               	movf	i2___awmod@divisor^0,w,c
  9183  002ED4  5C01               	subwf	i2___awmod@dividend^0,w,c
  9184  002ED6  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  9185  002ED8  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  9186  002EDA  A0D8               	btfss	status,0,c
  9187  002EDC  EF72  F017         	goto	i2u169_41
  9188  002EE0  EF74  F017         	goto	i2u169_40
  9189  002EE4                     i2u169_41:
  9190  002EE4  EF78  F017         	goto	i2l2733
  9191  002EE8                     i2u169_40:
  9192  002EE8  5003               	movf	i2___awmod@divisor^0,w,c
  9193  002EEA  5E01               	subwf	i2___awmod@dividend^0,f,c
  9194  002EEC  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  9195  002EEE  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  9196  002EF0                     i2l2733:
  9197  002EF0  90D8               	bcf	status,0,c
  9198  002EF2  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  9199  002EF4  3203               	rrcf	i2___awmod@divisor^0,f,c
  9200  002EF6  2E05               	decfsz	i2___awmod@counter^0,f,c
  9201  002EF8  EF69  F017         	goto	i2l2729
  9202  002EFC                     i2l2737:
  9203  002EFC  5006               	movf	i2___awmod@sign^0,w,c
  9204  002EFE  B4D8               	btfsc	status,2,c
  9205  002F00  EF84  F017         	goto	i2u170_41
  9206  002F04  EF86  F017         	goto	i2u170_40
  9207  002F08                     i2u170_41:
  9208  002F08  EF8A  F017         	goto	i2l2741
  9209  002F0C                     i2u170_40:
  9210  002F0C  6C01               	negf	i2___awmod@dividend^0,c
  9211  002F0E  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  9212  002F10  B0D8               	btfsc	status,0,c
  9213  002F12  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  9214  002F14                     i2l2741:
  9215  002F14  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  9216  002F18  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  9217  002F1C  0012               	return		;funcret
  9218  002F1E                     __end_ofi2___awmod:
  9219                           	opt callstack 0
  9220                           
  9221                           	psect	text57
  9222  000000                     __ptext57:
  9223                           	opt callstack 0
  9224  000000                     
  9225                           	psect	rparam
  9226  0000                     
  9227                           	psect	temp
  9228  00003C                     btemp:
  9229                           	opt callstack 0
  9230  00003C                     	ds	1
  9231  0000                     int$flags	set	btemp
  9232  0000                     wtemp8	set	btemp+1
  9233  0000                     ttemp5	set	btemp+1
  9234  0000                     ttemp6	set	btemp+4
  9235  0000                     ttemp7	set	btemp+8
  9236                           tosu	equ	0xFFF
  9237                           tosh	equ	0xFFE
  9238                           tosl	equ	0xFFD
  9239                           stkptr	equ	0xFFC
  9240                           pclatu	equ	0xFFB
  9241                           pclath	equ	0xFFA
  9242                           pcl	equ	0xFF9
  9243                           tblptru	equ	0xFF8
  9244                           tblptrh	equ	0xFF7
  9245                           tblptrl	equ	0xFF6
  9246                           tablat	equ	0xFF5
  9247                           prodh	equ	0xFF4
  9248                           prodl	equ	0xFF3
  9249                           indf0	equ	0xFEF
  9250                           postinc0	equ	0xFEE
  9251                           postdec0	equ	0xFED
  9252                           preinc0	equ	0xFEC
  9253                           plusw0	equ	0xFEB
  9254                           fsr0h	equ	0xFEA
  9255                           fsr0l	equ	0xFE9
  9256                           wreg	equ	0xFE8
  9257                           indf1	equ	0xFE7
  9258                           postinc1	equ	0xFE6
  9259                           postdec1	equ	0xFE5
  9260                           preinc1	equ	0xFE4
  9261                           plusw1	equ	0xFE3
  9262                           fsr1h	equ	0xFE2
  9263                           fsr1l	equ	0xFE1
  9264                           bsr	equ	0xFE0
  9265                           indf2	equ	0xFDF
  9266                           postinc2	equ	0xFDE
  9267                           postdec2	equ	0xFDD
  9268                           preinc2	equ	0xFDC
  9269                           plusw2	equ	0xFDB
  9270                           fsr2h	equ	0xFDA
  9271                           fsr2l	equ	0xFD9
  9272                           status	equ	0xFD8


Data Sizes:
    Strings     132
    Constant    0
    Data        10
    BSS         468
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     51      59
    BANK0           160     46     116
    BANK1           256      0     100
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    timer_interrupt$2175	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    timer_interrupt$2170	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> print_temp_and_humid(), readTempAndHumid(), check_humid_to_turn_fan(), handleButton(), 
		 -> NULL(NULL[0]), changeState(), 

    ptr$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S958$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    callback$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    handleButton@data_ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S946$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ?_dequeue.data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ?_dequeue.func_ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> print_temp_and_humid(), readTempAndHumid(), check_humid_to_turn_fan(), handleButton(), 
		 -> NULL(NULL[0]), changeState(), 

    node.data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    node.func_ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> print_temp_and_humid(), readTempAndHumid(), check_humid_to_turn_fan(), handleButton(), 
		 -> NULL(NULL[0]), changeState(), 

    register_timer@data_ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    register_timer@callback	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> print_temp_and_humid(), readTempAndHumid(), check_humid_to_turn_fan(), handleButton(), 
		 -> changeState(), 

    S958$data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    task_list.data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S958$func_ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> print_temp_and_humid(), readTempAndHumid(), check_humid_to_turn_fan(), handleButton(), 
		 -> NULL(NULL[0]), changeState(), 

    task_list.func_ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> print_temp_and_humid(), readTempAndHumid(), check_humid_to_turn_fan(), handleButton(), 
		 -> NULL(NULL[0]), changeState(), 

    temp.data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    temp.func_ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> print_temp_and_humid(), readTempAndHumid(), check_humid_to_turn_fan(), handleButton(), 
		 -> NULL(NULL[0]), changeState(), 

    enqueue@data_ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    enqueue@ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> print_temp_and_humid(), readTempAndHumid(), check_humid_to_turn_fan(), handleButton(), 
		 -> NULL(NULL[0]), changeState(), 

    S946$data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ready_queue.data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S946$func_ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> print_temp_and_humid(), readTempAndHumid(), check_humid_to_turn_fan(), handleButton(), 
		 -> NULL(NULL[0]), changeState(), 

    ready_queue.func_ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> print_temp_and_humid(), readTempAndHumid(), check_humid_to_turn_fan(), handleButton(), 
		 -> NULL(NULL[0]), changeState(), 

    LCDPrint@ptr	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[4]), STR_22(CODE[5]), STR_21(CODE[17]), STR_20(CODE[17]), 
		 -> STR_19(CODE[5]), STR_18(CODE[15]), STR_17(CODE[3]), STR_16(CODE[3]), 
		 -> STR_15(CODE[7]), STR_14(CODE[15]), STR_13(CODE[7]), STR_12(CODE[15]), 
		 -> STR_11(CODE[17]), STR_10(CODE[10]), STR_9(CODE[15]), STR_8(CODE[17]), 
		 -> STR_7(CODE[7]), STR_6(CODE[15]), STR_5(CODE[10]), STR_4(CODE[7]), 
		 -> STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[9]), 

    LCDPutStr@ptr	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[4]), STR_22(CODE[5]), STR_21(CODE[17]), STR_20(CODE[17]), 
		 -> STR_19(CODE[5]), STR_18(CODE[15]), STR_17(CODE[3]), STR_16(CODE[3]), 
		 -> STR_15(CODE[7]), STR_14(CODE[15]), STR_13(CODE[7]), STR_12(CODE[15]), 
		 -> STR_11(CODE[17]), STR_10(CODE[10]), STR_9(CODE[15]), STR_8(CODE[17]), 
		 -> STR_7(CODE[7]), STR_6(CODE[15]), STR_5(CODE[10]), STR_4(CODE[7]), 
		 -> STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[9]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _timer_interrupt in COMRAM

    _timer_interrupt->_enqueue
    _enqueue->_isFullQueue
    _isFullQueue->i2_getSizeQueue
    i2_getSizeQueue->i2___awmod

Critical Paths under _main in BANK0

    _main->_set_time_process
    _system_initialize->_start_timer
    _start_timer->_initializeTaskList
    _initializeTaskList->_queueInitialize
    _queueInitialize->___wmul
    _LCDInit->_LCDPutInst
    _Port_BBSPIInit->_SendByteBBSPI
    _set_time_process->_register_timer
    _register_timer->___wmul
    _dispatch->_dequeue
    _readTempAndHumid->_readDHT
    _readDHT->_getByte
    _print_temp_and_humid->_LCDPrint
    _handleButton->_readButtonRA5
    _handleButton->_readButtonRB0
    _isEmptyQueue->_getSizeQueue
    _getSizeQueue->___awmod
    _check_humid_to_turn_fan->_LCDPrint
    _LTD_process->_LCDPrint
    _LCDPrintChar->_LCDMoveCursor
    _LCDPrint->_LCDMoveCursor
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_WritePort_BBSPI
    _LCDMoveCursor->_LCDPutInst
    _LCDPutInst->_WritePort_BBSPI
    _WritePort_BBSPI->_SendByteBBSPI

Critical Paths under _timer_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer_interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer_interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer_interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timer_interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timer_interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _timer_interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _timer_interrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _timer_interrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _timer_interrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _timer_interrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _timer_interrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _timer_interrupt in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _timer_interrupt in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _timer_interrupt in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _timer_interrupt in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   85771
                                             44 BANK0      2     2      0
                           _LCDPrint
                         _LCDPutInst
                        _LTD_process
                           _dispatch
                     _register_timer
                   _set_time_process
                  _system_initialize
 ---------------------------------------------------------------------------------
 (1) _system_initialize                                    0     0      0    3994
                            _LCDInit
               _interrupt_initialize
                     _osc_initialize
                     _pin_initialize
                        _start_timer
 ---------------------------------------------------------------------------------
 (2) _start_timer                                          3     3      0    2080
                                             10 BANK0      3     3      0
                 _initializeTaskList
 ---------------------------------------------------------------------------------
 (3) _initializeTaskList                                   2     2      0    2036
                                              8 BANK0      2     2      0
                             ___wmul
                    _queueInitialize
 ---------------------------------------------------------------------------------
 (4) _queueInitialize                                      2     2      0     985
                                              6 BANK0      2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _pin_initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _osc_initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _interrupt_initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0    1914
                                              6 BANK0      1     1      0
                          _InitBBSPI
                         _LCDPutInst
                     _Port_BBSPIInit
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (3) _Port_BBSPIInit                                       1     1      0     160
                                              3 BANK0      1     1      0
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (3) _InitBBSPI                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_time_process                                     6     6      0   19176
                                             38 BANK0      6     6      0
                           _LCDPrint
                       _LCDPrintChar
                         _LCDPutInst
                            ___awdiv
                            ___awmod
                     _register_timer
                       _remove_timer
 ---------------------------------------------------------------------------------
 (2) _remove_timer                                         6     6      0     332
                                              0 BANK0      6     6      0
                        _isEmptyList
 ---------------------------------------------------------------------------------
 (3) _isEmptyList                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _register_timer                                      32    19     13    3475
                                              6 BANK0     32    19     13
                             ___wmul
                         _isFullList
 ---------------------------------------------------------------------------------
 (3) _isFullList                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dispatch                                             5     5      0   35765
                                             20 BANK0      5     5      0
                        _changeState *
            _check_humid_to_turn_fan *
                            _dequeue
                       _handleButton *
                       _isEmptyQueue
               _print_temp_and_humid *
                   _readTempAndHumid *
 ---------------------------------------------------------------------------------
 (2) _readTempAndHumid                                     0     0      0     251
                            _readDHT
 ---------------------------------------------------------------------------------
 (3) _readDHT                                              5     5      0     251
                                              6 BANK0      5     5      0
                            _getByte
 ---------------------------------------------------------------------------------
 (4) _getByte                                              6     6      0     159
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _print_temp_and_humid                                 0     0      0   14391
                           _LCDPrint
                       _LCDPrintChar
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _handleButton                                         8     6      2     143
                                              2 BANK0      8     6      2
                      _readButtonRA5
                      _readButtonRB0
 ---------------------------------------------------------------------------------
 (3) _readButtonRB0                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _readButtonRA5                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _dequeue                                             12     7      5    4516
                                              8 BANK0     12     7      5
                            ___awmod
                             ___wmul
                       _isEmptyQueue
 ---------------------------------------------------------------------------------
 (2) _isEmptyQueue                                         0     0      0    1764
                       _getSizeQueue
 ---------------------------------------------------------------------------------
 (3) _getSizeQueue                                         2     2      0    1764
                                              6 BANK0      2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     895
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _check_humid_to_turn_fan                              2     2      0   14632
                                             15 BANK0      2     2      0
                           _LCDPrint
                       _LCDPrintChar
                            ___awdiv
                            ___awmod
                     _set_speed_fan3
 ---------------------------------------------------------------------------------
 (3) _set_speed_fan3                                       2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _changeState                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LTD_process                                          8     8      0   16097
                                             15 BANK0      8     8      0
                           _LCDPrint
                       _LCDPrintChar
                         _LCDPutInst
                            ___awdiv
                            ___awmod
                           _get_time
                       _turn_off_fan
                 _turn_off_heat_pump
                    _turn_off_heater
                        _turn_on_fan
                  _turn_on_heat_pump
                     _turn_on_heater
 ---------------------------------------------------------------------------------
 (2) _turn_on_heater                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _turn_on_heat_pump                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _turn_on_fan                                          4     2      2     250
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _turn_off_heater                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _turn_off_heat_pump                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _turn_off_fan                                         4     2      2     478
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _get_time                                             4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1764
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1668
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCDPrintChar                                         3     1      2    4583
                                             11 BANK0      3     1      2
                      _LCDMoveCursor
                         _LCDPutChar
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCDPrint                                             4     1      3    6376
                                             11 BANK0      4     1      3
                      _LCDMoveCursor
                          _LCDPutStr
 ---------------------------------------------------------------------------------
 (3) _LCDPutStr                                            2     0      2    1009
                                              6 BANK0      2     0      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (3) _LCDPutChar                                           1     1      0     888
                                              5 BANK0      1     1      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (3) _LCDMoveCursor                                        5     4      1    1153
                                              6 BANK0      5     4      1
                         _LCDPutInst
 ---------------------------------------------------------------------------------
 (3) _LCDPutInst                                           1     1      0     888
                                              5 BANK0      1     1      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (3) _WritePort_BBSPI                                      2     1      1     866
                                              3 BANK0      2     1      1
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (4) _SendByteBBSPI                                        3     3      0     138
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _timer_interrupt                                     37    37      0    2774
                                             14 COMRAM    37    37      0
                            _enqueue
                           i2___wmul
                     i2_remove_timer
 ---------------------------------------------------------------------------------
 (9) i2_remove_timer                                       6     6      0     332
                                              0 COMRAM     6     6      0
                      i2_isEmptyList
 ---------------------------------------------------------------------------------
 (10) i2_isEmptyList                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _enqueue                                              5     0      5    1411
                                              9 COMRAM     5     0      5
                        _isFullQueue
                          i2___awmod
                           i2___wmul
 ---------------------------------------------------------------------------------
 (9) i2___wmul                                             6     2      4     415
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) _isFullQueue                                         1     1      0     400
                                              8 COMRAM     1     1      0
                     i2_getSizeQueue
 ---------------------------------------------------------------------------------
 (11) i2_getSizeQueue                                      2     2      0     400
                                              6 COMRAM     2     2      0
                          i2___awmod
 ---------------------------------------------------------------------------------
 (10) i2___awmod                                           6     2      4     400
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDPrint
     _LCDMoveCursor
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
     _LCDPutStr
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
   _LCDPutInst
     _WritePort_BBSPI
       _SendByteBBSPI
   _LTD_process
     _LCDPrint
       _LCDMoveCursor
         _LCDPutInst
           _WritePort_BBSPI
             _SendByteBBSPI
       _LCDPutStr
         _LCDPutChar
           _WritePort_BBSPI
             _SendByteBBSPI
     _LCDPrintChar
       _LCDMoveCursor
         _LCDPutInst
           _WritePort_BBSPI
             _SendByteBBSPI
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
       ___awdiv (ARG)
       ___awmod (ARG)
     _LCDPutInst
       _WritePort_BBSPI
         _SendByteBBSPI
     ___awdiv
     ___awmod
     _get_time
     _turn_off_fan
     _turn_off_heat_pump
     _turn_off_heater
     _turn_on_fan
     _turn_on_heat_pump
     _turn_on_heater
   _dispatch
     _changeState *
     _check_humid_to_turn_fan *
       _LCDPrint
         _LCDMoveCursor
           _LCDPutInst
             _WritePort_BBSPI
               _SendByteBBSPI
         _LCDPutStr
           _LCDPutChar
             _WritePort_BBSPI
               _SendByteBBSPI
       _LCDPrintChar
         _LCDMoveCursor
           _LCDPutInst
             _WritePort_BBSPI
               _SendByteBBSPI
         _LCDPutChar
           _WritePort_BBSPI
             _SendByteBBSPI
         ___awdiv (ARG)
         ___awmod (ARG)
       ___awdiv
       ___awmod
       _set_speed_fan3
     _dequeue *
       ___awmod
       ___wmul
       _isEmptyQueue
         _getSizeQueue
           ___awmod
     _handleButton *
       _readButtonRA5
       _readButtonRB0
     _isEmptyQueue *
       _getSizeQueue
         ___awmod
     _print_temp_and_humid *
       _LCDPrint
         _LCDMoveCursor
           _LCDPutInst
             _WritePort_BBSPI
               _SendByteBBSPI
         _LCDPutStr
           _LCDPutChar
             _WritePort_BBSPI
               _SendByteBBSPI
       _LCDPrintChar
         _LCDMoveCursor
           _LCDPutInst
             _WritePort_BBSPI
               _SendByteBBSPI
         _LCDPutChar
           _WritePort_BBSPI
             _SendByteBBSPI
         ___awdiv (ARG)
         ___awmod (ARG)
       ___awdiv
       ___awmod
     _readTempAndHumid *
       _readDHT
         _getByte
   _register_timer
     ___wmul
     _isFullList
   _set_time_process
     _LCDPrint
       _LCDMoveCursor
         _LCDPutInst
           _WritePort_BBSPI
             _SendByteBBSPI
       _LCDPutStr
         _LCDPutChar
           _WritePort_BBSPI
             _SendByteBBSPI
     _LCDPrintChar
       _LCDMoveCursor
         _LCDPutInst
           _WritePort_BBSPI
             _SendByteBBSPI
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
       ___awdiv (ARG)
       ___awmod (ARG)
     _LCDPutInst
       _WritePort_BBSPI
         _SendByteBBSPI
     ___awdiv
     ___awmod
     _register_timer
       ___wmul
       _isFullList
     _remove_timer
       _isEmptyList
   _system_initialize
     _LCDInit
       _InitBBSPI
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
       _Port_BBSPIInit
         _SendByteBBSPI
       _WritePort_BBSPI
         _SendByteBBSPI
     _interrupt_initialize
     _osc_initialize
     _pin_initialize
     _start_timer
       _initializeTaskList
         ___wmul
         _queueInitialize
           ___wmul

 _timer_interrupt (ROOT)
   _enqueue
     _isFullQueue
       i2_getSizeQueue
         i2___awmod
     i2___awmod
     i2___wmul
   i2___wmul
   i2_remove_timer
     i2_isEmptyList

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0     12C      37        7.6%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      64       7       39.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2E      74       5       72.5%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     33      3B       1       62.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     113      32        0.0%
DATA                 0      0     23F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov 22 15:03:57 2019

                   _LCDMoveCursor 362C                  ??i2_getSizeQueue 0007  
                     ?_LCDPutChar 0001                                l82 224C  
                              l89 237C                    ??_getSizeQueue 00A2  
                    ___awdiv@sign 00A1                       ?_LCDPutInst 0001  
             ___wmul@multiplicand 009E             SendByteBBSPI@bitcount 009D  
                             l105 19D8                               l301 34E8  
                             l207 20B8                               l400 3748  
                             l307 362A                               l412 2E6C  
                             l261 3870                               l270 328A  
                             l406 2E6C                               l264 3230  
                             l512 2AA2                               l417 3090  
                             l169 3458                               l177 3406  
                             l425 2D0A                               l273 37F8  
                             l266 3244                               l282 356C  
                             l418 3106                               l258 32EE  
                             l522 319C                               l267 3246  
                             l515 3846                               l276 37DA  
                             l532 3882                               l524 3122  
                             l702 38B0                               l518 382E  
                             l295 3668                               l279 352A  
                             l391 37BA                               l288 35EC  
                             l712 3572                               l536 1D78  
                             l480 3220                               l721 3464  
                             l705 38AC                               l641 2B82  
                             l722 346A                               l714 3578  
                             l490 369E                               l723 34A6  
                             l715 35AC                               l483 36F6  
                             l651 28A2                               l708 38B4  
                             l732 3770                               l660 2926  
                             l556 26B8                               l388 389E  
                             l645 2B60                               l557 260A  
                             l397 38A4                               l726 388E  
                             l638 2ACC                               l654 2994  
                             l719 345E                               l559 2626  
                             l498 300A                               l499 306A  
                             l667 36C2                               l668 36CA  
                             l597 3352                               l963 2C48  
                             l699 38A8                               l976 2DBC  
                             _PR2 000FCB                       _start_timer 3108  
                    ___awmod@sign 00A1                               prod 000FF3  
                             tosl 000FFD                               wreg 000FE8  
                 __end_of_LCDInit 32F0                      __CFG_LVP$OFF 000000  
       __size_of_readTempAndHumid 002C                      __CFG_WDT$OFF 000000  
                            l3001 1B52                              l3011 1BE4  
                            l3003 1B6A                              l3101 1F9A  
                            l3021 1D14                              l3013 1C5E  
                            l3005 1B74                              l3031 356E  
                            l3103 1FAE                              l3023 1D76  
                            l3015 1C8E                              l3007 1B9E  
                            l3201 2DF8                              l3105 1FC8  
                            l3113 2012                              l3017 1CA6  
                            l3009 1BD0                              l3027 3872  
                            l3043 38AE                              l3035 357E  
                            l3203 2E08                              l3107 1FD4  
                            l3115 204C                              l3019 1CF0  
                            l3131 3290                              l3045 345A  
                            l3029 38A6                              l3213 2E46  
                            l3205 2E1A                              l3221 307E  
                            l3117 205E                              l3109 1FFA  
                            l3061 1D7A                              l3301 21A4  
                            l3141 32AE                              l3133 3292  
                            l3215 2E56                              l3207 2E22  
                            l3223 3096                              l3119 2070  
                            l3071 1E02                              l3063 1D92  
                            l3231 2C4A                              l3311 2214  
                            l3303 21AC                              l3151 32DC  
                            l3143 32B4                              l3135 3294  
                            l3049 3470                              l3057 38AA  
                            l3401 17B8                              l3209 2E32  
                            l3225 30A2                              l3081 1E78  
                            l3073 1E0E                              l3065 1DA8  
                            l3321 22A8                              l3313 223C  
                            l3305 21C8                              l3153 32E2  
                            l3145 32C0                              l3137 32A6  
                            l3129 328C                              l3161 37B0  
                            l2611 2D2C                              l2603 2D0C  
                            l3059 38B2                              l3411 180A  
                            l3403 17DE                              l3227 30B6  
                            l3219 306C                              l3091 1F04  
                            l3083 1E9E                              l3075 1E3E  
                            l3067 1DD0                              l3235 2C72  
                            l3331 22F8                              l3323 22B0  
                            l3315 225E                              l3307 21D0  
                            l3155 32E8                              l3147 32D0  
                            l3139 32A8                              l3163 38A0  
                            l3171 3142                              l2541 3264  
                            l2533 323E                              l2525 3226  
                            l2621 2D64                              l2613 2D3A  
                            l2605 2D12                              l3421 187C  
                            l3413 180E                              l3405 17E4  
                            l3229 30DE                              l3253 3012  
                            l3245 2FCA                              l3093 1F2C  
                            l3077 1E52                              l3069 1DDC  
                            l2701 2B6E                              l3261 36A0  
                            l3333 230A                              l3325 22B8  
                            l3317 2262                              l3309 21EC  
                            l3341 2348                              l3149 32D6  
                            l3157 389A                              l3181 3152  
                            l3173 3146                              l3165 310C  
                            l2551 326E                              l2543 3266  
                            l2535 3254                              l2527 322A  
                            l2623 2D72                              l2631 2D9C  
                            l2615 2D42                              l2607 2D20  
                            l3431 1934                              l3423 18A2  
                            l3415 1820                              l3407 17F8  
                            l3351 15FA                              l3255 3034  
                            l3247 2FE0                              l3095 1F38  
                            l3079 1E6C                              l3087 1EB6  
                            l3239 2CBE                              l2703 2B70  
                            l3263 36B4                              l3335 2320  
                            l3327 22CA                              l3319 2268  
                            l3159 3798                              l3175 3148  
                            l2553 3270                              l2545 3268  
                            l2537 325C                              l2561 37C2  
                            l2641 35B2                              l2633 2DAC  
                            l2625 2D88                              l2617 2D54  
                            l2609 2D28                              l3441 196A  
                            l3433 1938                              l3425 18CA  
                            l3417 186E                              l3409 17FC  
                            l3361 163C                              l3353 1602  
                            l3193 2DBE                              l3249 2FF4  
                            l3097 1F5E                              l3089 1EF0  
                            l2705 2B80                              l3337 2332  
                            l3329 22E4                              l3281 20CE  
                            l2801 37F6                              l3177 314A  
                            l3169 3126                              l3185 315A  
                            l3521 24B2                              l2555 3278  
                            l2547 326A                              l2539 3262  
                            l2563 37D8                              l2571 3546  
                            l2651 3652                              l2643 35C6  
                            l2635 2DB4                              l2627 2D90  
                            l2619 2D5C                              l3443 196E  
                            l3435 1946                              l3427 18F2  
                            l3419 1876                              l3371 16AE  
                            l3363 1654                              l3355 1616  
                            l3451 199C                              l3347 15E6  
                            l3195 2DD0                              l2803 3884  
                            l2811 3686                              l3099 1F6A  
                            l3291 213A                              l3283 20DA  
                            l3179 314E                              l3531 250C  
                            l3523 24C4                              l2557 327A  
                            l2549 326C                              l2573 3550  
                            l2565 3530                              l2653 365E  
                            l2581 34EE                              l2645 35CC  
                            l2901 2BBA                              l2629 2D96  
                            l3445 1972                              l3437 194A  
                            l3429 191A                              l3381 1712  
                            l3373 16BE                              l3365 168E  
                            l3357 161A                              l3349 15EA  
                            l3197 2DE0                              l2805 366A  
                            l3293 2162                              l3285 20E0  
                            l3277 20BA                              l3461 372E  
                            l3533 2510                              l3525 24D8  
                            l2559 37C0                              l2575 3552  
                            l2567 3538                              l2655 3662  
                            l2647 3630                              l2591 3510  
                            l2583 34F6                              l2639 35AE  
                            l2751 34DC                              l2911 2BE8  
                            l2903 2BBE                              l3447 1984  
                            l3439 1958                              l3391 1774  
                            l3383 1716                              l3375 16D2  
                            l3367 1694                              l3359 1628  
                            l3199 2DF0                              l2807 3680  
                            l3471 32F0                              l2831 3830  
                            l3295 2172                              l3287 20F4  
                            l3279 20BE                              l2663 31A8  
                            l2823 29A4                              l2815 2996  
                            l3463 3732                              l3535 2514  
                            l3527 24F2                              l3519 237E  
                            l2577 355E                              l2569 3544  
                            l2649 3642                              l2593 351C  
                            l2585 3502                              l2745 34AC  
                            l2753 35F2                              l2921 2C1C  
                            l2913 2BF6                              l2905 2BC6  
                            l3393 177A                              l3385 1724  
                            l3377 16F8                              l3369 16A8  
                            l2761 340C                              l2681 2AC6  
                            l2673 2AA4                              l2841 285C  
                            l3473 32F4                              l3297 2190  
                            l3289 2112                              l2665 3200  
                            l2657 319E                              l2825 2A7A  
                            l2817 299A                              l3465 3738  
                            l3457 3722                              l3529 24F8  
                            l2579 3560                              l2595 351E  
                            l2587 3504                              l2747 34BE  
                            l2755 3604                              l2923 2C22  
                            l2915 2BFC                              l2907 2BD8  
                            l3395 178E                              l3387 1728  
                            l3379 16FE                              l2763 3416  
                            l2691 2B16                              l2851 287C  
                            l2843 285E                              l3475 3306  
                            l2835 3816                              l3299 21A0  
                            l2667 3204                              l2827 2A7E  
                            l3467 373C                              l3459 372A  
                            l2589 350E                              l2749 34D2  
                            l2757 3618                              l2917 2C12  
                            l2909 2BE0                              l2925 2C28  
                            l3397 1794                              l3389 173A  
                            l2597 374A                              l2669 36CC  
                            l2765 3428                              l2773 3450  
                            l2781 33C4                              l2693 2B38  
                            l2685 2ADA                              l2861 28BE  
                            l2853 2882                              l2845 2860  
                            l3477 331C                              l2941 2562  
                            l2829 2A9A                              l3469 3742  
                            l2927 2C38                              l2919 2C1A  
                            l3399 17A4                              l2599 3768  
                            l2767 3438                              l2759 3408  
                            l2783 33D6                              l2791 33FE  
                            l2695 2B44                              l2687 2AE0  
                            l2679 2AAE                              l2871 290A  
                            l2855 289C                              l2847 2872  
                            l2839 2852                              l3479 333E  
                            l2951 264A                              l2943 25C6  
                            l2929 2C40                              l2769 3444  
                            l2785 33E6                              l2777 33B6  
                            l2689 2AEE                              l2849 2874  
                            l2961 19EE                              l2953 2678  
                            l2945 25C8                              l2937 2524  
                            l2891 2B8A                              l2787 33F2  
                            l2779 33BA                              l2867 28DA  
                            l2859 28B0                              l2971 19FA  
                            l2955 26A0                              l2947 25DA  
                            l2939 2538                              l2795 3860  
                            l2893 2B98                              l2885 2992  
                            l2877 2934                              l2869 28FE  
                            l2965 19F4                              l2949 2612  
                            l2797 37E0                              l2895 2BA0  
                            l3791 1ECA                              l2879 295C  
                            l2991 1AD8                              l2975 1A22  
                            l2959 19DA                              l2799 37E2  
                            l2897 2BA4                              l2889 2B84  
                            l3793 2026                              l2993 1AEA  
                            l2985 1A4A                              l2977 1A24  
                            l2899 2BB2                              l3795 19B2  
                            l2995 1AFC                              l2987 1ABE  
                            l2979 1A34                              l3787 316E  
                            l3797 3596                              l2997 1B2C  
                            l2989 1AC0                              l3789 235E  
                            l3799 3488                              l2999 1B4A  
                            STR_1 105C                              STR_2 1043  
                            STR_3 1034                              STR_4 106C  
                            STR_5 1052                              STR_6 1034  
                            STR_7 106C                              STR_8 1023  
                            STR_9 1034                              u2000 2BD8  
                            u2001 2BD4                              u2010 2BF6  
                            u2011 2BF2                              u2020 2C12  
                            u2100 1A1E                              u2021 2C0E  
                            u2101 1A1A                              u2030 2C38  
                            u2110 1A34                              u2031 2C34  
                            u2111 1A30                              u2200 1E02  
                            u2120 1A46                              u2040 2538  
                            u2201 1DFE                              u2121 1A42  
                            u2041 2534                              u2210 1E3E  
                            u2130 1AEA                              u2050 255E  
                            u2211 1E3A                              u2131 1AE6  
                            u2051 255A                              u1500 2D54  
                            u2300 2070                              u2220 1E6C  
                            u2140 1AFC                              u2060 25DA  
                            u1501 2D50                              u2301 206C  
                            u2221 1E68                              u2141 1AF8  
                            u2061 25D6                              _LATA 000F89  
                            u1510 2D72                              u2230 1E9E  
                            u2150 1B2C                              u2070 264A  
                            u2310 311E                              _LATB 000F8A  
                            u1511 2D6E                              u2231 1E9A  
                            u2151 1B28                              u2071 2646  
                            u2311 311A                              _LATC 000F8B  
                            u1520 2D88                              u2400 2E68  
                            u2320 2DD0                              u2240 1F04  
                            u2160 1BE4                              u2080 2678  
                            _LATD 000F8C                              u1521 2D84  
                            u2401 2E64                              u2321 2DCC  
                            u2241 1F00                              u2161 1BE0  
                            u2081 2674                              u1450 323E  
                            u1530 2DAC                              u2330 2DE0  
                            u2410 307E                              u2250 1F5E  
                            u2170 1C5E                              u2090 19EE  
                            u1451 323A                              u1531 2DA8  
                            u2331 2DDC                              u2411 307A  
                            u2251 1F5A                              u2171 1C5A  
                            u2091 19EA                              u1460 3254  
                            u1540 35EC                              u2340 2DF0  
                            u2420 3090                              u2260 1F9A  
                            u1620 2B5C                              u1604 2B04  
                            u2180 1D14                              u1461 3250  
                            u1541 35E8                              u2341 2DEC  
                            u2421 308C                              u2261 1F96  
                            u1621 2B58                              u1605 2B00  
                            u2181 1D10                              u1470 328A  
                            u1550 3642                              u1710 34BE  
                            u2350 2E08                              u2270 1FC8  
                            u2190 1DA8                              u1630 2B6E  
                            u1614 2B2C                              u2510 20CE  
                            u1471 3286                              u1551 363E  
                            u1711 34BA                              u2351 2E04  
                            u2271 1FC4                              u2191 1DA4  
                            u1631 2B6A                              u1615 2B28  
                            u2511 20CA                              u1720 34CE  
                            u1480 2D20                              u2600 16D2  
                            u2360 2E1A                              u1800 369C  
                            u2280 1FFA                              u1640 2B80  
                            u2520 21A0                              u1560 3220  
                            u1721 34CA                              u1481 2D1C  
                            u2601 16CE                              u2361 2E16  
                            u1801 3696                              u2281 1FF6  
                            u1641 2B7C                              u2521 219C  
                            u1561 321C                              u1730 3604  
                            u1490 2D3A                              u2610 1774  
                            u2370 2E32                              u1810 369E  
                            u2450 2FF4                              u2290 205E  
                            u1570 2AC6                              u2530 21C8  
                            u1731 3600                              u1491 2D36  
                            u2611 1770                              u2371 2E2E  
                            u2451 2FF0                              u2291 205A  
                            u1571 2AC2                              u2531 21C4  
                            u1740 3614                              u2620 17A4  
                            u2380 2E42                              u1580 2ADA  
                            u1900 28EA                              u2540 225E  
                            u1820 2A9A                              u1741 3610  
                            u2621 17A0                              u2381 2E3E  
                            u2461 2FFE                              u1581 2AD6  
                            u1901 28E4                              u2541 225A  
                            u1821 2A96                              u2630 17B8  
                            u2390 2E56                              u1750 3428  
                            u1590 2AEE                              u1910 28EC  
                            u1830 3844                              u2550 230A  
                            u2631 17B4                              u2391 2E52  
                            u2471 305E                              u1751 3424  
                            u1591 2AEA                              u1831 383E  
                            u2551 2306                              u1760 3438  
                            u1920 28FE                              u2480 36B4  
                            u1840 3846                              u2560 2332  
                            u1761 3434                              u1921 28FA  
                            u2481 36B0                              u2641 32FE  
                            u2561 232E                              u2570 15FA  
                            u1770 33D6                              u1930 2922  
                            u2650 331C                              u1850 382C  
                            u2571 15F6                              u1771 33D2  
                            u1931 291E                              u2651 3318  
                            u1851 3826                              u2580 168E  
                            u1780 33E6                              u1940 2934  
                            u1860 382E                              u2581 168A  
                            u1781 33E2                              u1941 2930  
                            u2590 16BE                              u1790 3680  
                            u1950 2970                              u1870 289C  
                            u2670 3352                              u2591 16BA  
                            u1791 367C                              u1951 2968  
                            u1871 2898                              u2671 334E  
                            u1880 28B0                              u1881 28AC  
                            u1970 298E                              u1890 28D6  
                            u1971 298A                              u1891 28D2  
                            u2907 329C                              u1980 2B98  
                            u2668 332A                              u1981 2B94  
                            u2669 333E                              u2917 32C8  
                            u1990 2BB2                              u1991 2BAE  
                            u2927 217E                              u1968 2974  
                            u2937 22D6                              u2947 2868  
                            u2957 2876                              u2967 2ADC  
                            u2977 1926                              u2897 24E4  
                            u2987 34F0                              u2997 3532  
                            _TMR2 000FCC                    ??_isEmptyQueue 00A4  
                   ?_LCDPrintChar 00A7                              _head 0090  
                            _main 237E                              _rear 00CA  
                            fsr1h 000FE2                              fsr2h 000FDA  
                            indf2 000FDF                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 003C  
                ?_WritePort_BBSPI 009F                              prodh 000FF4  
                            prodl 000FF3                 _LCDMoveCursor$733 00A4  
                            start 000E                __size_of_LCDPutStr 0040  
                   __CFG_IESO$OFF 000000                     _state_settime 0096  
                   __CFG_MCLRE$ON 000000                    ?_LCDMoveCursor 00A2  
                    ___param_bank 000000                    i2_remove_timer 26BA  
         __end_of_queueInitialize 3222                  __end_of_LCDPrint 34EA  
                    dispatch@node 00B0                   LTD_process@temp 00AF  
                     LCDPrint@pos 00A7                       LCDPrint@ptr 00A8  
                           ?_main 0001                   __end_of___awdiv 2C4A  
                           STR_10 1052                             STR_11 1023  
                           STR_12 1034                             STR_20 1012  
                           STR_13 106C                             STR_21 1001  
                           STR_14 1034                             STR_22 1073  
                           STR_23 1078                             STR_15 1065  
                           STR_24 1082                             STR_16 1082  
                           STR_25 107F                             STR_17 107F  
                           STR_18 1034                             STR_26 107C  
                           STR_19 1073                   __end_of___awmod 2DBE  
                           _T0CON 000FD5                   ___awdiv@divisor 009E  
                           _T1CON 000FCD                             _T2CON 000FCA  
                           i2l515 385E                             i2l483 3720  
                           i2l732 3796                             i2l556 2850  
                           i2l557 27A2                             i2l486 3814  
                           i2l494 2FC8                             i2l559 27BE  
                           i2l583 14CA                             i2l575 15CA  
                           i2l577 1132                   ___awdiv@counter 00A0  
                           i2l976 2F1C                             _TMR1H 000FCF  
                           _TMR0L 000FD6                             _TMR1L 000FCE  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                   __CFG_PWRT$OFF 000000                   __end_of_getByte 2B84  
                  __CFG_FCMEN$OFF 000000                       _turn_on_fan 356E  
                 __end_of_dequeue 306C           __size_of_Port_BBSPIInit 001E  
                 __end_of_readDHT 2996              __size_of_changeState 00B0  
                 __end_of_enqueue 2FCA                             _isSet 0094  
                           _count 0038                             _front 00CC  
     __size_of_initializeTaskList 010E                             _value 003B  
                           _state 0097                    ??_LCDPrintChar 00A9  
                  __CFG_BOREN$OFF 000000                             pclath 000FFA  
                           tablat 000FF5     __size_of_interrupt_initialize 0006  
             __size_of_LCDPutChar 0042                  __end_ofi2___wmul 3798  
                           plusw0 000FEB                             plusw1 000FE3  
                           plusw2 000FDB               __size_of_LCDPutInst 0042  
                           ttemp5 003D                             ttemp6 0040  
                           ttemp7 0044                             status 000FD8  
         __size_of_osc_initialize 0006                             wtemp8 003D  
              __size_ofi2___awmod 00B0            __end_ofi2_remove_timer 2852  
                  turn_on_fan@idx 009C                   __initialization 3354  
                    __end_of_main 2520              __end_of_handleButton 20BA  
           __size_of_turn_off_fan 004E                    _pin_initialize 3798  
        __size_of_timer_interrupt 15DE                            ??_main 00C8  
                   __activetblptr 000003            __size_of_readButtonRB0 0052  
          __size_of_readButtonRA5 0052                         ??_LCDInit 00A2  
                    LCDPutChar@ch 00A1                 __end_of_LCDPutStr 35EE  
                LTD_process@humid 00B1                      LCDPrint@line 00AA  
                          _ADCON1 000FC1                 register_timer@idx 00C1  
               register_timer@cur 00BF                __size_of_InitBBSPI 0012  
                          _CCPR4L 000F74          __size_of_turn_off_heater 0004  
                ___awdiv@dividend 009C                 register_timer@sum 00BD  
                    LCDPutInst@ch 00A1                 _temperature_dht11 008E  
                ??_turn_on_heater 009C                    _register_timer 19DA  
                          i2l3241 37FA                            i2l3501 26F8  
                          i2l2711 2E72                            i2l3271 3772  
                          i2l3511 27E2                            i2l3503 275C  
                          i2l2721 2EA2                            i2l2713 2E80  
                          i2l3273 378E                            i2l3513 2810  
                          i2l3505 2760                            i2l3601 1448  
                          i2l2731 2EE8                            i2l2723 2EB4  
                          i2l2715 2E88                            i2l3267 3848  
                          i2l3515 2838                            i2l3507 2772  
                          i2l3603 14FE                            i2l2741 2F14  
                          i2l2733 2EF0                            i2l2725 2EBC  
                          i2l2717 2E8C                            i2l2709 2E6E  
                          i2l3509 27AA                            i2l3605 1586  
                          i2l2735 2EF6                            i2l2727 2EC4  
                          i2l2719 2E9A                            i2l3607 15AE  
                          i2l3551 10C2                            i2l3543 10A0  
                          i2l2729 2ED2                            i2l2737 2EFC  
                          i2l3481 2F1E                            i2l3561 1102  
                          i2l3553 10D0                            i2l3545 10AE  
                          i2l2739 2F0C                            i2l3491 2F74  
                          i2l3571 1138                            i2l3563 1110  
                          i2l3555 10D4                            i2l3547 10BC  
                          i2l2933 36F8                            i2l3493 2FA0  
                          i2l3485 2F36                            i2l3581 1286  
                          i2l3573 1200                            i2l3565 1112  
                          i2l3557 10EC                            i2l3549 10BE  
                          i2l3487 2F4C                            i2l3591 133A  
                          i2l3583 1298                            i2l3575 120A  
                          i2l3567 111A                            i2l3559 10F4  
                          i2l3489 2F54                            i2l3497 26BC  
                          i2l3593 1344                            i2l3585 12E8  
                          i2l3577 125A                            i2l3499 26D0  
                          i2l3595 136C                            i2l3587 1318  
                          i2l3579 1274                            i2l3597 139C  
                          i2l3589 1320                            i2l3599 13B0  
             initializeTaskList@i 00A4                 _temperature_value 0098  
            __end_of_getSizeQueue 36F8                            _OSCCON 000FD3  
         _check_humid_to_turn_fan 306C                      LCDPutStr@ptr 00A2  
      fp__check_humid_to_turn_fan 0000                   ??_LCDMoveCursor 00A3  
                 ?i2_remove_timer 0001                      _turn_off_fan 345A  
                  __CFG_XINST$OFF 000000                  _set_time_process 20BA  
            __size_of_isEmptyList 0018                  __end_of_dispatch 3354  
                __end_of_get_time 3884                      ?_LTD_process 0001  
                          ___wmul 374A            __end_of_pin_initialize 37BC  
                       ??___awdiv 00A0                         ??___awmod 00A0  
            __size_of_isFullQueue 001C                  ?_queueInitialize 0001  
                          _ledVal 003A                   turn_off_fan@idx 009C  
                          clear_0 337C                            clear_1 338E  
                          clear_2 339A                            clear_3 33A6  
                ___awdiv@quotient 00A2                            _period 00CE  
                 ___awmod@divisor 009E                         ??_getByte 009C  
                 ___awmod@counter 00A0              __end_of_isEmptyQueue 36A0  
                       ??_dequeue 00A9                         ??_readDHT 00A2  
                       ??_enqueue 000F            Port_BBSPIInit@port_dir 009F  
               __end_ofi2___awmod 2F1E                  LCDMoveCursor@pos 00A2  
                    __mediumconst 0000            __size_ofi2_isEmptyList 0018  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8            __end_of_register_timer 1D7A  
                  i2___awmod@sign 0006                  _readTempAndHumid 36A0  
                i2remove_timer@id 0005                        __accesstop 0060  
         __end_of__initialization 33AC                         ?_LCDPrint 00A7  
                   _readButtonRB0 33B6                     _readButtonRA5 3408  
                   ___rparam_used 000001        __end_of_turn_off_heat_pump 38B6  
          __size_of_SendByteBBSPI 006A                    __pcstackCOMRAM 0001  
                    __pidataBANK0 3890                   ?_pin_initialize 0001  
               __end_of_InitBBSPI 3872                      ??_LCDPutChar 00A1  
                    ??_LCDPutInst 00A1              __end_of_LCDPrintChar 362C  
    __end_of_print_temp_and_humid 2D0C                         ?i2___wmul 0001  
                    ?_start_timer 0001                   __CFG_OSC$INTIO7 000000  
                  _Port_BBSPIInit 37DC                 ??_timer_interrupt 000F  
                 ?_register_timer 00A2         ??_check_humid_to_turn_fan 00AB  
                      __pbssBANK0 0060                        __pbssBANK1 0100  
                  _osc_initialize 389A                    ?_readButtonRB0 009C  
                  ?_readButtonRA5 009C                __end_of_LCDPutChar 352C  
                      ??_LCDPrint 00AA                __end_of_LCDPutInst 356E  
               ??_turn_off_heater 009C                 _flag_change_state 0095  
                   i2_isEmptyList 3848             __size_of_handleButton 0340  
          start_timer@timer_vaddr 00A8                timer_interrupt@cur 0030  
              timer_interrupt@pos 0032                timer_interrupt@sum 002E  
                         ?___wmul 009C                           _CCP4CON 000F73  
              register_timer@prev 00BB           __size_of_set_speed_fan3 000C  
                 LCDPrintChar@pos 00A7                        ??i2___wmul 0005  
          __end_of_Port_BBSPIInit 37FA                           _LCDInit 328C  
                   _SendByteBBSPI 3222                      ?_turn_on_fan 009C  
                      _isFullList 3816             __size_of_getSizeQueue 002C  
            _timer_interrupt$2170 0025              _timer_interrupt$2175 0028  
            _timer_interrupt$2176 002A            __end_of_osc_initialize 38A0  
                       ?_dispatch 0001                         ?_get_time 009C  
                      _countRB0_1 0074                        _countRA5_1 007C  
                    _handleButton 1D7A                  WritePort_BBSPI@a 009F  
           LCDMoveCursor@position 00A6                 _turn_on_heat_pump 38AA  
                   ?_remove_timer 0001                    ?i2_isEmptyList 0001  
            register_timer@period 00A2                ?_turn_on_heat_pump 0001  
                         __Hparam 0000                           __Lparam 0000  
           __size_of_isEmptyQueue 0036   __end_of_check_humid_to_turn_fan 3108  
                         ___awdiv 2B84                           ___awmod 2D0C  
                 __size_of___wmul 0028          __size_of_WritePort_BBSPI 0020  
    __end_of_interrupt_initialize 38A6                      __psmallconst 1000  
             ??_turn_on_heat_pump 009C                    remove_timer@id 00A1  
            __size_of_LTD_process 03F4                           __pcinit 3354  
                         __ramtop 1000                      _getSizeQueue 36CC  
                         _getByte 2AA4                           __ptext0 237E  
                         __ptext1 3722                           __ptext2 3108  
                         __ptext3 2996                           __ptext4 319E  
                         __ptext5 3798                           __ptext6 389A  
                         __ptext7 38A0                           __ptext8 328C  
                         __ptext9 37DC                           _dequeue 2FCA  
                         _readDHT 2852                    ?_SendByteBBSPI 0001  
                 ?_Port_BBSPIInit 0001                           _enqueue 2F1E  
                       _T2CONbits 000FCA                     ??_changeState 009C  
                ___awmod@dividend 009C           __size_ofi2_getSizeQueue 002A  
      __end_of_initializeTaskList 2AA4                           _task_id 0060  
        __end_of_set_time_process 237E                           _time_ms 0084  
                       _LCDPutStr 35AE                        ??_dispatch 00B0  
                      ??_get_time 00A0                    __pintcode_body 1086  
                 ?_osc_initialize 0001              end_of_initialization 33AC  
                 ??_readButtonRB0 009E                   ??_readButtonRA5 009E  
       __end_of_turn_on_heat_pump 38AE                  ??i2_remove_timer 0001  
             fp__readTempAndHumid 0000                           int_func 1086  
             i2___wmul@multiplier 0001                      _isEmptyQueue 366A  
                  ??_remove_timer 009C                 LCDMoveCursor@line 00A3  
            _print_temp_and_humid 2C4A             __size_of_LCDPrintChar 003E  
                         postdec1 000FE5                           postdec2 000FDD  
        __end_of_readTempAndHumid 36CC                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
            handleButton@checkRB0 00A4              handleButton@checkRA5 00A2  
                       _PORTAbits 000F80                         _PORTBbits 000F81  
                       _PORTDbits 000F83              handleButton@data_ptr 009E  
                  getByte@timeOut 009F                        dequeue@idx 00A9  
                     ?_isFullList 0001                         _TRISAbits 000F92  
                       _TRISCbits 000F94                         _TRISDbits 000F95  
                       _TRISFbits 000F97                         _TRISGbits 000F98  
               i2remove_timer@pos 0006              __size_of_start_timer 0096  
                      ?_LCDPutStr 00A2                         i2___awmod 2E6E  
             __end_of_changeState 2E6E               SendByteBBSPI@output 009C  
                    _LCDPrintChar 35EE                   ??i2_isEmptyList 0001  
                   ??_isEmptyList 009C             ?_print_temp_and_humid 0001  
                ??_pin_initialize 009C                     _check_timeout 0088  
               __size_of_LCDPrint 0042                     ??_isFullQueue 0009  
           __end_of_LCDMoveCursor 366A                   _timer_interrupt 0008  
                  __end_of___wmul 3772            register_timer@callback 00AA  
        set_time_process@temp_156 00C6                      _firstReadRB0 00D1  
                    _firstReadRA5 00D3                    _set_speed_fan3 3884  
                 ??_SendByteBBSPI 009C            register_timer@data_ptr 00AD  
                   _secondReadRB0 00D0                     _secondReadRA5 00D2  
              _turn_off_heat_pump 38B2                         _InitBBSPI 3860  
                ??_register_timer 00AF                  i2___wmul@product 0005  
               ??_WritePort_BBSPI 00A0          __size_of_queueInitialize 0084  
             start_initialization 3354                 __size_ofi2___wmul 0026  
                 _turn_off_heater 38AE               ?_turn_off_heat_pump 0001  
                      ?i2___awmod 0001              __size_of_turn_on_fan 0040  
      __size_of_turn_on_heat_pump 0004              _interrupt_initialize 38A0  
                      enqueue@ptr 000A           __size_of_turn_on_heater 0004  
            ??_turn_off_heat_pump 009C               __size_of_isFullList 001A  
                        ??___wmul 00A0            __end_of_set_speed_fan3 3890  
             __end_of_isEmptyList 3848                       __pdataBANK0 00CA  
             __end_of_isFullQueue 3816                        ?_InitBBSPI 0001  
            __end_of_remove_timer 26BA                          ?_LCDInit 0001  
                     __pbssBIGRAM 0164                    i2_getSizeQueue 36F8  
                     _changeState 2DBE                       __pbssCOMRAM 0034  
                   __pcstackBANK0 009C                       ??_LCDPutStr 00A4  
           ?_interrupt_initialize 0001                 __size_of_dispatch 0064  
          ??_print_temp_and_humid 00AB                 __size_of_get_time 0012  
         __end_of_timer_interrupt 15E6                         __pintcode 0008  
                        ?___awdiv 009C                          ?___awmod 009C  
                 ?_set_speed_fan3 009C               timer_interrupt@prev 002C  
                  LCDPrintChar@ch 00A8                  ??_Port_BBSPIInit 009F  
                 enqueue@data_ptr 000D                          ?_getByte 0001  
          __end_ofi2_getSizeQueue 3722                          ?_dequeue 00A4  
         __end_of_turn_off_heater 38B2                          ?_readDHT 0001  
                     __smallconst 1000                          ?_enqueue 000A  
             register_timer@delay 00A6                  ??_osc_initialize 009C  
        ?_check_humid_to_turn_fan 0001                 ?_set_time_process 0001  
                     ??i2___awmod 0005                  LCDPrintChar@line 00A9  
              ??_set_time_process 00C2                 ??_queueInitialize 00A2  
                  ___wmul@product 00A0                          _LCDPrint 34A8  
                        _LATAbits 000F89                          _LATCbits 000F8B  
                        _LATDbits 000F8C                          _LATFbits 000F8E  
              _initializeTaskList 2996                          _PIE1bits 000F9D  
                     _isEmptyList 3830                     ?_turn_off_fan 009C  
                        i2u170_40 2F0C                          i2u250_40 385E  
                        i2u170_41 2F08                          i2u243_40 3812  
                        i2u243_41 380C                          i2u244_40 3814  
                        i2u165_40 2E80                          i2u165_41 2E7C  
                        i2u166_40 2E9A                          i2u270_40 26D0  
                        i2u166_41 2E96                          i2u270_41 26CC  
                        i2u167_40 2EB4                          i2u271_40 26F4  
                        i2u167_41 2EB0                          i2u271_41 26F0  
                        i2u168_40 2ED2                          i2u272_40 2772  
                        i2u280_40 112E                          i2u168_41 2ECE  
                        i2u272_41 276E                          i2u280_41 112A  
                        i2u169_40 2EE8                          i2u249_40 385C  
                        i2u273_40 27E2                          i2u281_40 1200  
                        i2u169_41 2EE4                          i2u249_41 3856  
                        i2u273_41 27DE                          i2u281_41 11FC  
                        _PIR1bits 000F9E                         _task_list 0164  
                        i2u274_40 2810                          i2u282_40 1286  
                        i2u274_41 280C                          i2u282_41 1282  
                        i2u283_40 1298                          i2u275_40 10AE  
                        i2u283_41 1294                          i2u275_41 10AA  
                        i2u268_40 2F32                          i2u284_40 12E8  
                        i2u276_40 10BC                          i2u268_41 2F2E  
                        i2u284_41 12E4                          i2u276_41 10B8  
                        i2u269_40 2F4C                          i2u285_40 13B0  
                        i2u277_40 10EC                          i2u269_41 2F48  
                        i2u285_41 13AC                          i2u277_41 10E8  
                        i2u286_40 1448                          i2u278_40 1102  
                        i2u286_41 1444                          i2u278_41 10FE  
                        i2u287_40 14FE                          i2u279_40 1110  
                        i2u287_41 14FA                          i2u279_41 110C  
                     _isFullQueue 37FA                          i2u288_40 15AE  
                        i2u288_41 15AA                     ??_LTD_process 00AB  
             ?_initializeTaskList 0001                 ?_readTempAndHumid 0001  
              ??_readTempAndHumid 00A7                   ?i2_getSizeQueue 0001  
               ___wmul@multiplier 009C                       ??_InitBBSPI 009C  
              SendByteBBSPI@input 009E                          i2___wmul 3772  
                __size_of_LCDInit 0064                      ??_isFullList 009C  
               _system_initialize 3722              ??_initializeTaskList 00A4  
          ??_interrupt_initialize 009C                         copy_data0 3368  
              i2___awmod@dividend 0001                ?_system_initialize 0001  
           __end_of_readButtonRB0 3408             __end_of_readButtonRA5 345A  
         set_speed_fan3@dutyCycle 009C                    ??_turn_off_fan 009E  
             ??_system_initialize 00A9                  ?_timer_interrupt 0001  
                        __Hrparam 0000                    _turn_on_heater 38A6  
                        __Lrparam 0000                       _RB0_pressed 009A  
                 _WritePort_BBSPI 37BC                __end_of_isFullList 3830  
           __size_of_remove_timer 019A                  __size_of___awdiv 00C6  
                __size_of___awmod 00B2             i2___wmul@multiplicand 0003  
                     _RA5_pressed 009B               __end_of_LTD_process 19DA  
                ?_turn_off_heater 0001                  __size_of_getByte 00E0  
                __size_of_dequeue 00A2                     ??_start_timer 00A6  
                 remove_timer@pos 00A0                  __size_of_readDHT 0144  
       __end_of_system_initialize 374A                  __size_of_enqueue 00AC  
                 fp__handleButton 0000                          __ptext10 3860  
                        __ptext11 20BA                          __ptext20 2C4A  
                        __ptext12 2520                          __ptext21 1D7A  
                        __ptext13 3830                          __ptext30 2DBE  
                        __ptext22 33B6                          __ptext14 19DA  
                        __ptext31 15E6                          __ptext23 3408  
                        __ptext15 3816                          __ptext40 2B84  
                        __ptext32 38A6                          __ptext24 2FCA  
                        __ptext16 32F0                          __ptext41 35EE  
                        __ptext33 38AA                          __ptext25 366A  
                        __ptext17 36A0                          __ptext50 26BA  
                        __ptext42 34A8                          __ptext34 356E  
                        __ptext26 36CC                          __ptext18 2852  
                        __ptext51 3848                          __ptext43 35AE  
                        __ptext35 38AE                          __ptext27 374A  
                        __ptext19 2AA4                          __ptext52 2F1E  
                        __ptext44 34EA                          __ptext36 38B2  
                        __ptext28 306C                          __ptext53 3772  
                        __ptext45 362C                          __ptext37 345A  
                        __ptext29 3884                          __ptext54 37FA  
                        __ptext46 352C                          __ptext38 3872  
                        __ptext55 36F8                          __ptext47 37BC  
                        __ptext39 2D0C                          __ptext56 2E6E  
                        __ptext48 3222                          __ptext57 0000  
                        _dispatch 32F0                          _get_time 3872  
                        _countRB0 0078                          _countRA5 0080  
                   __size_of_main 01A2                    fp__changeState 0000  
          __end_of_turn_on_heater 38AA                      _remove_timer 2520  
           __end_ofi2_isEmptyList 3860                       _ready_queue 0100  
         fp__print_temp_and_humid 0000                          getByte@i 009E  
                        getByte@j 00A1                          _num_task 0091  
         __size_ofi2_remove_timer 0198                          _stateRB0 0092  
                        int$flags 003C                          _stateRA5 0093  
                      _LCDPutChar 34EA                        _LCDPutInst 352C  
           __end_of_SendByteBBSPI 328C                 i2___awmod@divisor 0003  
               i2___awmod@counter 0005                        _INTCONbits 000FF2  
                    ?_changeState 0001                     ??_turn_on_fan 009E  
          __size_of_LCDMoveCursor 003E               __end_of_start_timer 319E  
                        intlevel2 0000                     ?_handleButton 009E  
         __end_of_WritePort_BBSPI 37DC                   ?_turn_on_heater 0001  
                ??_set_speed_fan3 009E                       _LTD_process 15E6  
     __size_of_turn_off_heat_pump 0004      check_humid_to_turn_fan@humid 00AB  
                 readDHT@checkSum 00A4                      _prev_time_ms 0034  
                   ?_getSizeQueue 0001           __size_of_pin_initialize 0024  
                 _queueInitialize 319E           WritePort_BBSPI@port_add 00A0  
            __end_of_turn_off_fan 34A8        __size_of_system_initialize 0028  
                  _humidity_dht11 008C              set_time_process@temp 00C4  
                  ??_handleButton 00A0                    _humidity_value 0099  
         __size_of_register_timer 03A0               __end_of_turn_on_fan 35AE  
                     dequeue@temp 00AB                     ?_isEmptyQueue 0001  
                queueInitialize@i 00A2  __size_of_check_humid_to_turn_fan 009C  
                  readDHT@timeOut 00A5                      ?_isEmptyList 0001  
   __size_of_print_temp_and_humid 00C2                      ?_isFullQueue 0001  
       __size_of_set_time_process 02C4  
