

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Nov 30 18:15:46 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    76                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    77  0000                     
    78                           ; Version 2.10
    79                           ; Generated 31/07/2019 GMT
    80                           ; 
    81                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC18F8722 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112  0000                     
   113                           	psect	idataBANK0
   114  003B34                     __pidataBANK0:
   115                           	opt callstack 0
   116                           
   117                           ;initializer for _rear
   118  003B34  FFFF               	dw	65535
   119                           
   120                           ;initializer for _front
   121  003B36  FFFF               	dw	65535
   122                           
   123                           ;initializer for _period
   124  003B38  2710               	dw	10000
   125                           
   126                           ;initializer for _secondReadRB0
   127  003B3A  01                 	db	1
   128                           
   129                           ;initializer for _firstReadRB0
   130  003B3B  01                 	db	1
   131                           
   132                           ;initializer for _secondReadRA5
   133  003B3C  01                 	db	1
   134                           
   135                           ;initializer for _firstReadRA5
   136  003B3D  01                 	db	1
   137                           
   138                           ;initializer for _min_humidity
   139  003B3E  14                 	db	20
   140                           
   141                           ;initializer for _max_temperature
   142  003B3F  50                 	db	80
   143  0000                     _LATDbits	set	3980
   144  0000                     _TRISDbits	set	3989
   145  0000                     _PORTDbits	set	3971
   146  0000                     _TMR1L	set	4046
   147  0000                     _TMR1H	set	4047
   148  0000                     _T1CON	set	4045
   149  0000                     _PIR1bits	set	3998
   150  0000                     _PIE1bits	set	3997
   151  0000                     _TMR0L	set	4054
   152  0000                     _T0CON	set	4053
   153  0000                     _INTCONbits	set	4082
   154  0000                     _T2CONbits	set	4042
   155  0000                     _TMR2	set	4044
   156  0000                     _CCPR4L	set	3956
   157  0000                     _CCP4CON	set	3955
   158  0000                     _T2CON	set	4042
   159  0000                     _PR2	set	4043
   160  0000                     _TRISGbits	set	3992
   161  0000                     _TRISD	set	3989
   162  0000                     _LATD	set	3980
   163  0000                     _TRISB	set	3987
   164  0000                     _LATB	set	3978
   165  0000                     _TRISA	set	3986
   166  0000                     _LATA	set	3977
   167  0000                     _ADCON1	set	4033
   168  0000                     _TRISC	set	3988
   169  0000                     _LATC	set	3979
   170  0000                     _OSCCON	set	4051
   171  0000                     _LATCbits	set	3979
   172  0000                     _LATAbits	set	3977
   173  0000                     _TRISCbits	set	3988
   174  0000                     _TRISAbits	set	3986
   175  0000                     _LATFbits	set	3982
   176  0000                     _TRISFbits	set	3991
   177  0000                     _PORTBbits	set	3969
   178  0000                     _PORTAbits	set	3968
   179                           
   180                           	psect	smallconst
   181  001000                     __psmallconst:
   182                           	opt callstack 0
   183  001000  00                 	db	0
   184  001001                     STR_23:
   185  001001  49                 	db	73	;'I'
   186  001002  44                 	db	68	;'D'
   187  001003  3A                 	db	58	;':'
   188  001004  20                 	db	32
   189  001005  31                 	db	49	;'1'
   190  001006  37                 	db	55	;'7'
   191  001007  31                 	db	49	;'1'
   192  001008  30                 	db	48	;'0'
   193  001009  33                 	db	51	;'3'
   194  00100A  36                 	db	54	;'6'
   195  00100B  34                 	db	52	;'4'
   196  00100C  20                 	db	32
   197  00100D  20                 	db	32
   198  00100E  20                 	db	32
   199  00100F  20                 	db	32
   200  001010  20                 	db	32
   201  001011  00                 	db	0
   202  001012                     STR_22:
   203  001012  4C                 	db	76	;'L'
   204  001013  54                 	db	84	;'T'
   205  001014  44                 	db	68	;'D'
   206  001015  20                 	db	32
   207  001016  63                 	db	99	;'c'
   208  001017  6F                 	db	111	;'o'
   209  001018  6E                 	db	110	;'n'
   210  001019  74                 	db	116	;'t'
   211  00101A  72                 	db	114	;'r'
   212  00101B  6F                 	db	111	;'o'
   213  00101C  6C                 	db	108	;'l'
   214  00101D  6C                 	db	108	;'l'
   215  00101E  65                 	db	101	;'e'
   216  00101F  72                 	db	114	;'r'
   217  001020  20                 	db	32
   218  001021  20                 	db	32
   219  001022  00                 	db	0
   220  001023                     STR_10:
   221  001023  45                 	db	69	;'E'
   222  001024  52                 	db	82	;'R'
   223  001025  52                 	db	82	;'R'
   224  001026  4F                 	db	79	;'O'
   225  001027  52                 	db	82	;'R'
   226  001028  20                 	db	32
   227  001029  2D                 	db	45
   228  00102A  20                 	db	32
   229  00102B  54                 	db	84	;'T'
   230  00102C  55                 	db	85	;'U'
   231  00102D  52                 	db	82	;'R'
   232  00102E  4E                 	db	78	;'N'
   233  00102F  20                 	db	32
   234  001030  4F                 	db	79	;'O'
   235  001031  46                 	db	70	;'F'
   236  001032  46                 	db	70	;'F'
   237  001033  00                 	db	0
   238  001034                     STR_5:
   239  001034  20                 	db	32
   240  001035  20                 	db	32
   241  001036  20                 	db	32
   242  001037  20                 	db	32
   243  001038  20                 	db	32
   244  001039  20                 	db	32
   245  00103A  20                 	db	32
   246  00103B  20                 	db	32
   247  00103C  20                 	db	32
   248  00103D  20                 	db	32
   249  00103E  20                 	db	32
   250  00103F  20                 	db	32
   251  001040  20                 	db	32
   252  001041  20                 	db	32
   253  001042  00                 	db	0
   254  001043                     STR_4:
   255  001043  53                 	db	83	;'S'
   256  001044  65                 	db	101	;'e'
   257  001045  74                 	db	116	;'t'
   258  001046  20                 	db	32
   259  001047  73                 	db	115	;'s'
   260  001048  75                 	db	117	;'u'
   261  001049  63                 	db	99	;'c'
   262  00104A  63                 	db	99	;'c'
   263  00104B  65                 	db	101	;'e'
   264  00104C  73                 	db	115	;'s'
   265  00104D  73                 	db	115	;'s'
   266  00104E  66                 	db	102	;'f'
   267  00104F  75                 	db	117	;'u'
   268  001050  6C                 	db	108	;'l'
   269  001051  00                 	db	0
   270  001052                     STR_3:
   271  001052  53                 	db	83	;'S'
   272  001053  65                 	db	101	;'e'
   273  001054  74                 	db	116	;'t'
   274  001055  20                 	db	32
   275  001056  68                 	db	104	;'h'
   276  001057  75                 	db	117	;'u'
   277  001058  6D                 	db	109	;'m'
   278  001059  69                 	db	105	;'i'
   279  00105A  64                 	db	100	;'d'
   280  00105B  00                 	db	0
   281  00105C                     STR_7:
   282  00105C  48                 	db	72	;'H'
   283  00105D  65                 	db	101	;'e'
   284  00105E  61                 	db	97	;'a'
   285  00105F  74                 	db	116	;'t'
   286  001060  20                 	db	32
   287  001061  50                 	db	80	;'P'
   288  001062  75                 	db	117	;'u'
   289  001063  6D                 	db	109	;'m'
   290  001064  70                 	db	112	;'p'
   291  001065  00                 	db	0
   292  001066                     STR_1:
   293  001066  53                 	db	83	;'S'
   294  001067  65                 	db	101	;'e'
   295  001068  74                 	db	116	;'t'
   296  001069  20                 	db	32
   297  00106A  74                 	db	116	;'t'
   298  00106B  69                 	db	105	;'i'
   299  00106C  6D                 	db	109	;'m'
   300  00106D  65                 	db	101	;'e'
   301  00106E  00                 	db	0
   302  00106F                     STR_2:
   303  00106F  53                 	db	83	;'S'
   304  001070  65                 	db	101	;'e'
   305  001071  74                 	db	116	;'t'
   306  001072  20                 	db	32
   307  001073  74                 	db	116	;'t'
   308  001074  65                 	db	101	;'e'
   309  001075  6D                 	db	109	;'m'
   310  001076  70                 	db	112	;'p'
   311  001077  00                 	db	0
   312  001078                     STR_17:
   313  001078  46                 	db	70	;'F'
   314  001079  69                 	db	105	;'i'
   315  00107A  6E                 	db	110	;'n'
   316  00107B  69                 	db	105	;'i'
   317  00107C  73                 	db	115	;'s'
   318  00107D  68                 	db	104	;'h'
   319  00107E  00                 	db	0
   320  00107F                     STR_6:
   321  00107F  48                 	db	72	;'H'
   322  001080  65                 	db	101	;'e'
   323  001081  61                 	db	97	;'a'
   324  001082  74                 	db	116	;'t'
   325  001083  65                 	db	101	;'e'
   326  001084  72                 	db	114	;'r'
   327  001085  00                 	db	0
   328  001086                     STR_21:
   329  001086  49                 	db	73	;'I'
   330  001087  44                 	db	68	;'D'
   331  001088  4C                 	db	76	;'L'
   332  001089  45                 	db	69	;'E'
   333  00108A  00                 	db	0
   334  00108B                     STR_25:
   335  00108B  46                 	db	70	;'F'
   336  00108C  33                 	db	51	;'3'
   337  00108D  3A                 	db	58	;':'
   338  00108E  00                 	db	0
   339  00108F                     STR_26:
   340  00108F  45                 	db	69	;'E'
   341  001090  52                 	db	82	;'R'
   342  001091  00                 	db	0
   343  001092                     STR_19:
   344  001092  48                 	db	72	;'H'
   345  001093  3A                 	db	58	;':'
   346  001094  00                 	db	0
   347  001095                     STR_18:
   348  001095  54                 	db	84	;'T'
   349  001096  3A                 	db	58	;':'
   350  001097  00                 	db	0
   351  0000                     
   352                           ; #config settings
   353  001098  00                 	db	0	; dummy byte at the end
   354  0000                     
   355                           	psect	cinit
   356  0035DC                     __pcinit:
   357                           	opt callstack 0
   358  0035DC                     start_initialization:
   359                           	opt callstack 0
   360  0035DC                     __initialization:
   361                           	opt callstack 0
   362                           
   363                           ; Initialize objects allocated to BANK0 (12 bytes)
   364                           ; load TBLPTR registers with __pidataBANK0
   365  0035DC  0E34               	movlw	low __pidataBANK0
   366  0035DE  6EF6               	movwf	tblptrl,c
   367  0035E0  0E3B               	movlw	high __pidataBANK0
   368  0035E2  6EF7               	movwf	tblptrh,c
   369  0035E4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   370  0035E6  6EF8               	movwf	tblptru,c
   371  0035E8  EE00  F0CB         	lfsr	0,__pdataBANK0
   372  0035EC  EE10 F00C          	lfsr	1,12
   373  0035F0                     copy_data0:
   374  0035F0  0009               	tblrd		*+
   375  0035F2  CFF5 FFEE          	movff	tablat,postinc0
   376  0035F6  50E5               	movf	postdec1,w,c
   377  0035F8  50E1               	movf	fsr1l,w,c
   378  0035FA  E1FA               	bnz	copy_data0
   379                           
   380                           ; Clear objects allocated to BIGRAM (300 bytes)
   381  0035FC  EE01  F064         	lfsr	0,__pbssBIGRAM
   382  003600  EE11 F02C          	lfsr	1,300
   383  003604                     clear_0:
   384  003604  6AEE               	clrf	postinc0,c
   385  003606  50E5               	movf	postdec1,w,c
   386  003608  50E1               	movf	fsr1l,w,c
   387  00360A  E1FC               	bnz	clear_0
   388  00360C  50E2               	movf	fsr1h,w,c
   389  00360E  E1FA               	bnz	clear_0
   390                           
   391                           ; Clear objects allocated to BANK1 (100 bytes)
   392  003610  EE01  F000         	lfsr	0,__pbssBANK1
   393  003614  0E64               	movlw	100
   394  003616                     clear_1:
   395  003616  6AEE               	clrf	postinc0,c
   396  003618  06E8               	decf	wreg,f,c
   397  00361A  E1FD               	bnz	clear_1
   398                           
   399                           ; Clear objects allocated to BANK0 (61 bytes)
   400  00361C  EE00  F060         	lfsr	0,__pbssBANK0
   401  003620  0E3D               	movlw	61
   402  003622                     clear_2:
   403  003622  6AEE               	clrf	postinc0,c
   404  003624  06E8               	decf	wreg,f,c
   405  003626  E1FD               	bnz	clear_2
   406                           
   407                           ; Clear objects allocated to COMRAM (8 bytes)
   408  003628  EE00  F034         	lfsr	0,__pbssCOMRAM
   409  00362C  0E08               	movlw	8
   410  00362E                     clear_3:
   411  00362E  6AEE               	clrf	postinc0,c
   412  003630  06E8               	decf	wreg,f,c
   413  003632  E1FD               	bnz	clear_3
   414  003634                     end_of_initialization:
   415                           	opt callstack 0
   416  003634                     __end_of__initialization:
   417                           	opt callstack 0
   418  003634  903C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   419  003636  923C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   420  003638  0100               	movlb	0
   421  00363A  EFC7  F012         	goto	_main	;jump to C main() function
   422                           
   423                           	psect	bssCOMRAM
   424  000034                     __pbssCOMRAM:
   425                           	opt callstack 0
   426  000034                     _prev_time_ms:
   427                           	opt callstack 0
   428  000034                     	ds	4
   429  000038                     _count:
   430                           	opt callstack 0
   431  000038                     	ds	2
   432  00003A                     _ledVal:
   433                           	opt callstack 0
   434  00003A                     	ds	1
   435  00003B                     _value:
   436                           	opt callstack 0
   437  00003B                     	ds	1
   438                           
   439                           	psect	bssBANK0
   440  000060                     __pbssBANK0:
   441                           	opt callstack 0
   442  000060                     _task_id:
   443                           	opt callstack 0
   444  000060                     	ds	20
   445  000074                     _countRB0_1:
   446                           	opt callstack 0
   447  000074                     	ds	4
   448  000078                     _countRB0:
   449                           	opt callstack 0
   450  000078                     	ds	4
   451  00007C                     _countRA5_1:
   452                           	opt callstack 0
   453  00007C                     	ds	4
   454  000080                     _countRA5:
   455                           	opt callstack 0
   456  000080                     	ds	4
   457  000084                     _time_ms:
   458                           	opt callstack 0
   459  000084                     	ds	4
   460  000088                     _check_timeout:
   461                           	opt callstack 0
   462  000088                     	ds	4
   463  00008C                     _humidity_dht11:
   464                           	opt callstack 0
   465  00008C                     	ds	2
   466  00008E                     _temperature_dht11:
   467                           	opt callstack 0
   468  00008E                     	ds	2
   469  000090                     _head:
   470                           	opt callstack 0
   471  000090                     	ds	1
   472  000091                     _num_task:
   473                           	opt callstack 0
   474  000091                     	ds	1
   475  000092                     _stateRB0:
   476                           	opt callstack 0
   477  000092                     	ds	1
   478  000093                     _stateRA5:
   479                           	opt callstack 0
   480  000093                     	ds	1
   481  000094                     _isSet:
   482                           	opt callstack 0
   483  000094                     	ds	1
   484  000095                     _countError:
   485                           	opt callstack 0
   486  000095                     	ds	1
   487  000096                     _flag_change_state:
   488                           	opt callstack 0
   489  000096                     	ds	1
   490  000097                     _state_settime:
   491                           	opt callstack 0
   492  000097                     	ds	1
   493  000098                     _state:
   494                           	opt callstack 0
   495  000098                     	ds	1
   496  000099                     _temperature_value:
   497                           	opt callstack 0
   498  000099                     	ds	1
   499  00009A                     _humidity_value:
   500                           	opt callstack 0
   501  00009A                     	ds	1
   502  00009B                     _RB0_pressed:
   503                           	opt callstack 0
   504  00009B                     	ds	1
   505  00009C                     _RA5_pressed:
   506                           	opt callstack 0
   507  00009C                     	ds	1
   508                           
   509                           	psect	dataBANK0
   510  0000CB                     __pdataBANK0:
   511                           	opt callstack 0
   512  0000CB                     _rear:
   513                           	opt callstack 0
   514  0000CB                     	ds	2
   515  0000CD                     _front:
   516                           	opt callstack 0
   517  0000CD                     	ds	2
   518  0000CF                     _period:
   519                           	opt callstack 0
   520  0000CF                     	ds	2
   521  0000D1                     _secondReadRB0:
   522                           	opt callstack 0
   523  0000D1                     	ds	1
   524  0000D2                     _firstReadRB0:
   525                           	opt callstack 0
   526  0000D2                     	ds	1
   527  0000D3                     _secondReadRA5:
   528                           	opt callstack 0
   529  0000D3                     	ds	1
   530  0000D4                     _firstReadRA5:
   531                           	opt callstack 0
   532  0000D4                     	ds	1
   533  0000D5                     _min_humidity:
   534                           	opt callstack 0
   535  0000D5                     	ds	1
   536  0000D6                     _max_temperature:
   537                           	opt callstack 0
   538  0000D6                     	ds	1
   539                           
   540                           	psect	bssBANK1
   541  000100                     __pbssBANK1:
   542                           	opt callstack 0
   543  000100                     _ready_queue:
   544                           	opt callstack 0
   545  000100                     	ds	100
   546                           
   547                           	psect	bssBIGRAM
   548  000164                     __pbssBIGRAM:
   549                           	opt callstack 0
   550  000164                     _task_list:
   551                           	opt callstack 0
   552  000164                     	ds	300
   553                           
   554                           	psect	cstackBANK0
   555  00009D                     __pcstackBANK0:
   556                           	opt callstack 0
   557  00009D                     ??_remove_timer:
   558  00009D                     ??_getByte:
   559  00009D                     ?_readButtonRA5:
   560                           	opt callstack 0
   561  00009D                     ?_readButtonRB0:
   562                           	opt callstack 0
   563  00009D                     ?___wmul:
   564                           	opt callstack 0
   565  00009D                     ?___awdiv:
   566                           	opt callstack 0
   567  00009D                     ?___awmod:
   568                           	opt callstack 0
   569  00009D                     ?_get_time:
   570                           	opt callstack 0
   571  00009D                     SendByteBBSPI@output:
   572                           	opt callstack 0
   573  00009D                     turn_on_fan@idx:
   574                           	opt callstack 0
   575  00009D                     turn_off_fan@idx:
   576                           	opt callstack 0
   577  00009D                     set_speed_fan3@dutyCycle:
   578                           	opt callstack 0
   579  00009D                     ___wmul@multiplier:
   580                           	opt callstack 0
   581  00009D                     ___awdiv@dividend:
   582                           	opt callstack 0
   583  00009D                     ___awmod@dividend:
   584                           	opt callstack 0
   585                           
   586                           ; 2 bytes @ 0x0
   587  00009D                     	ds	1
   588  00009E                     SendByteBBSPI@bitcount:
   589                           	opt callstack 0
   590                           
   591                           ; 1 bytes @ 0x1
   592  00009E                     	ds	1
   593  00009F                     ??_turn_on_fan:
   594  00009F                     ??_turn_off_fan:
   595  00009F                     SendByteBBSPI@input:
   596                           	opt callstack 0
   597  00009F                     getByte@i:
   598                           	opt callstack 0
   599  00009F                     handleButton@data_ptr:
   600                           	opt callstack 0
   601  00009F                     ___wmul@multiplicand:
   602                           	opt callstack 0
   603  00009F                     ___awdiv@divisor:
   604                           	opt callstack 0
   605  00009F                     ___awmod@divisor:
   606                           	opt callstack 0
   607                           
   608                           ; 2 bytes @ 0x2
   609  00009F                     	ds	1
   610  0000A0                     Port_BBSPIInit@port_dir:
   611                           	opt callstack 0
   612  0000A0                     WritePort_BBSPI@a:
   613                           	opt callstack 0
   614  0000A0                     getByte@timeOut:
   615                           	opt callstack 0
   616                           
   617                           ; 2 bytes @ 0x3
   618  0000A0                     	ds	1
   619  0000A1                     ??_handleButton:
   620  0000A1                     WritePort_BBSPI@port_add:
   621                           	opt callstack 0
   622  0000A1                     remove_timer@pos:
   623                           	opt callstack 0
   624  0000A1                     ___awdiv@counter:
   625                           	opt callstack 0
   626  0000A1                     ___awmod@counter:
   627                           	opt callstack 0
   628  0000A1                     ___wmul@product:
   629                           	opt callstack 0
   630                           
   631                           ; 2 bytes @ 0x4
   632  0000A1                     	ds	1
   633  0000A2                     LCDPutChar@ch:
   634                           	opt callstack 0
   635  0000A2                     LCDPutInst@ch:
   636                           	opt callstack 0
   637  0000A2                     remove_timer@id:
   638                           	opt callstack 0
   639  0000A2                     getByte@j:
   640                           	opt callstack 0
   641  0000A2                     ___awdiv@sign:
   642                           	opt callstack 0
   643  0000A2                     ___awmod@sign:
   644                           	opt callstack 0
   645                           
   646                           ; 1 bytes @ 0x5
   647  0000A2                     	ds	1
   648  0000A3                     ??_LCDInit:
   649  0000A3                     ??_getSizeQueue:
   650  0000A3                     ??_readDHT:
   651  0000A3                     LCDMoveCursor@pos:
   652                           	opt callstack 0
   653  0000A3                     handleButton@checkRA5:
   654                           	opt callstack 0
   655  0000A3                     LCDPutStr@ptr:
   656                           	opt callstack 0
   657  0000A3                     queueInitialize@i:
   658                           	opt callstack 0
   659  0000A3                     ___awdiv@quotient:
   660                           	opt callstack 0
   661  0000A3                     register_timer@period:
   662                           	opt callstack 0
   663                           
   664                           ; 4 bytes @ 0x6
   665  0000A3                     	ds	1
   666  0000A4                     LCDMoveCursor@line:
   667                           	opt callstack 0
   668                           
   669                           ; 1 bytes @ 0x7
   670  0000A4                     	ds	1
   671  0000A5                     ?_dequeue:
   672                           	opt callstack 0
   673  0000A5                     readDHT@checkSum:
   674                           	opt callstack 0
   675  0000A5                     handleButton@checkRB0:
   676                           	opt callstack 0
   677  0000A5                     _LCDMoveCursor$748:
   678                           	opt callstack 0
   679  0000A5                     initializeTaskList@i:
   680                           	opt callstack 0
   681                           
   682                           ; 2 bytes @ 0x8
   683  0000A5                     	ds	1
   684  0000A6                     readDHT@timeOut:
   685                           	opt callstack 0
   686                           
   687                           ; 2 bytes @ 0x9
   688  0000A6                     	ds	1
   689  0000A7                     ??_start_timer:
   690  0000A7                     LCDMoveCursor@position:
   691                           	opt callstack 0
   692  0000A7                     register_timer@delay:
   693                           	opt callstack 0
   694                           
   695                           ; 4 bytes @ 0xA
   696  0000A7                     	ds	1
   697  0000A8                     LCDPrint@pos:
   698                           	opt callstack 0
   699  0000A8                     LCDPrintChar@pos:
   700                           	opt callstack 0
   701                           
   702                           ; 1 bytes @ 0xB
   703  0000A8                     	ds	1
   704  0000A9                     LCDPrintChar@ch:
   705                           	opt callstack 0
   706  0000A9                     start_timer@timer_vaddr:
   707                           	opt callstack 0
   708  0000A9                     LCDPrint@ptr:
   709                           	opt callstack 0
   710                           
   711                           ; 2 bytes @ 0xC
   712  0000A9                     	ds	1
   713  0000AA                     LCDPrintChar@line:
   714                           	opt callstack 0
   715  0000AA                     dequeue@idx:
   716                           	opt callstack 0
   717                           
   718                           ; 2 bytes @ 0xD
   719  0000AA                     	ds	1
   720  0000AB                     LCDPrint@line:
   721                           	opt callstack 0
   722  0000AB                     register_timer@callback:
   723                           	opt callstack 0
   724                           
   725                           ; 3 bytes @ 0xE
   726  0000AB                     	ds	1
   727  0000AC                     ??_LTD_process:
   728  0000AC                     dequeue@temp:
   729                           	opt callstack 0
   730                           
   731                           ; 5 bytes @ 0xF
   732  0000AC                     	ds	2
   733  0000AE                     register_timer@data_ptr:
   734                           	opt callstack 0
   735                           
   736                           ; 2 bytes @ 0x11
   737  0000AE                     	ds	2
   738  0000B0                     ??_register_timer:
   739  0000B0                     LTD_process@temp:
   740                           	opt callstack 0
   741                           
   742                           ; 2 bytes @ 0x13
   743  0000B0                     	ds	1
   744  0000B1                     dispatch@node:
   745                           	opt callstack 0
   746                           
   747                           ; 5 bytes @ 0x14
   748  0000B1                     	ds	1
   749  0000B2                     LTD_process@humid:
   750                           	opt callstack 0
   751                           
   752                           ; 2 bytes @ 0x15
   753  0000B2                     	ds	10
   754  0000BC                     register_timer@prev:
   755                           	opt callstack 0
   756                           
   757                           ; 2 bytes @ 0x1F
   758  0000BC                     	ds	2
   759  0000BE                     register_timer@sum:
   760                           	opt callstack 0
   761                           
   762                           ; 2 bytes @ 0x21
   763  0000BE                     	ds	2
   764  0000C0                     register_timer@cur:
   765                           	opt callstack 0
   766                           
   767                           ; 2 bytes @ 0x23
   768  0000C0                     	ds	2
   769  0000C2                     register_timer@idx:
   770                           	opt callstack 0
   771                           
   772                           ; 1 bytes @ 0x25
   773  0000C2                     	ds	1
   774  0000C3                     ??_set_time_process:
   775                           
   776                           ; 1 bytes @ 0x26
   777  0000C3                     	ds	2
   778  0000C5                     set_time_process@temp:
   779                           	opt callstack 0
   780                           
   781                           ; 2 bytes @ 0x28
   782  0000C5                     	ds	2
   783  0000C7                     set_time_process@temp_161:
   784                           	opt callstack 0
   785                           
   786                           ; 2 bytes @ 0x2A
   787  0000C7                     	ds	2
   788  0000C9                     ??_main:
   789                           
   790                           ; 1 bytes @ 0x2C
   791  0000C9                     	ds	2
   792                           
   793                           	psect	cstackCOMRAM
   794  000001                     __pcstackCOMRAM:
   795                           	opt callstack 0
   796  000001                     ??i2_remove_timer:
   797  000001                     ?i2___wmul:
   798                           	opt callstack 0
   799  000001                     ?i2___awmod:
   800                           	opt callstack 0
   801  000001                     i2___wmul@multiplier:
   802                           	opt callstack 0
   803  000001                     i2___awmod@dividend:
   804                           	opt callstack 0
   805                           
   806                           ; 2 bytes @ 0x0
   807  000001                     	ds	2
   808  000003                     i2___wmul@multiplicand:
   809                           	opt callstack 0
   810  000003                     i2___awmod@divisor:
   811                           	opt callstack 0
   812                           
   813                           ; 2 bytes @ 0x2
   814  000003                     	ds	2
   815  000005                     i2remove_timer@id:
   816                           	opt callstack 0
   817  000005                     i2___awmod@counter:
   818                           	opt callstack 0
   819  000005                     i2___wmul@product:
   820                           	opt callstack 0
   821                           
   822                           ; 2 bytes @ 0x4
   823  000005                     	ds	1
   824  000006                     i2remove_timer@pos:
   825                           	opt callstack 0
   826  000006                     i2___awmod@sign:
   827                           	opt callstack 0
   828                           
   829                           ; 1 bytes @ 0x5
   830  000006                     	ds	1
   831  000007                     ??i2_getSizeQueue:
   832                           
   833                           ; 1 bytes @ 0x6
   834  000007                     	ds	2
   835  000009                     ??_isFullQueue:
   836                           
   837                           ; 1 bytes @ 0x8
   838  000009                     	ds	1
   839  00000A                     enqueue@ptr:
   840                           	opt callstack 0
   841                           
   842                           ; 3 bytes @ 0x9
   843  00000A                     	ds	3
   844  00000D                     enqueue@data_ptr:
   845                           	opt callstack 0
   846                           
   847                           ; 2 bytes @ 0xC
   848  00000D                     	ds	2
   849  00000F                     ??_timer_interrupt:
   850                           
   851                           ; 1 bytes @ 0xE
   852  00000F                     	ds	22
   853  000025                     _timer_interrupt$2207:
   854                           	opt callstack 0
   855                           
   856                           ; 3 bytes @ 0x24
   857  000025                     	ds	3
   858  000028                     _timer_interrupt$2212:
   859                           	opt callstack 0
   860                           
   861                           ; 2 bytes @ 0x27
   862  000028                     	ds	2
   863  00002A                     _timer_interrupt$2213:
   864                           	opt callstack 0
   865                           
   866                           ; 2 bytes @ 0x29
   867  00002A                     	ds	2
   868  00002C                     timer_interrupt@prev:
   869                           	opt callstack 0
   870                           
   871                           ; 2 bytes @ 0x2B
   872  00002C                     	ds	2
   873  00002E                     timer_interrupt@sum:
   874                           	opt callstack 0
   875                           
   876                           ; 2 bytes @ 0x2D
   877  00002E                     	ds	2
   878  000030                     timer_interrupt@cur:
   879                           	opt callstack 0
   880                           
   881                           ; 2 bytes @ 0x2F
   882  000030                     	ds	2
   883  000032                     timer_interrupt@pos:
   884                           	opt callstack 0
   885                           
   886                           ; 2 bytes @ 0x31
   887  000032                     	ds	2
   888                           
   889 ;;
   890 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   891 ;;
   892 ;; *************** function _main *****************
   893 ;; Defined at:
   894 ;;		line 199 in file "main.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;		None
   897 ;; Auto vars:     Size  Location     Type
   898 ;;		None
   899 ;; Return value:  Size  Location     Type
   900 ;;                  1    wreg      void 
   901 ;; Registers used:
   902 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   910 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   911 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   912 ;;Total ram usage:        2 bytes
   913 ;; Hardware stack levels required when called:   12
   914 ;; This function calls:
   915 ;;		_LCDPrint
   916 ;;		_LCDPutInst
   917 ;;		_LTD_process
   918 ;;		_dispatch
   919 ;;		_register_timer
   920 ;;		_set_time_process
   921 ;;		_system_initialize
   922 ;; This function is called by:
   923 ;;		Startup code after reset
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927                           	psect	text0
   928  00258E                     __ptext0:
   929                           	opt callstack 0
   930  00258E                     _main:
   931                           	opt callstack 19
   932  00258E                     
   933                           ;main.c: 200:     system_initialize();
   934  00258E  EC25  F01D         	call	_system_initialize	;wreg free
   935                           
   936                           ;main.c: 202:     task_id[0] = register_timer(50, 0, handleButton, ((void*)0));
   937  002592  0E32               	movlw	50
   938  002594  0100               	movlb	0	; () banked
   939  002596  6FA3               	movwf	register_timer@period& (0+255),b
   940  002598  0E00               	movlw	0
   941  00259A  6FA4               	movwf	(register_timer@period+1)& (0+255),b
   942  00259C  0E00               	movlw	0
   943  00259E  6FA5               	movwf	(register_timer@period+2)& (0+255),b
   944  0025A0  0E00               	movlw	0
   945  0025A2  6FA6               	movwf	(register_timer@period+3)& (0+255),b
   946  0025A4  0E00               	movlw	0
   947  0025A6  6FA7               	movwf	register_timer@delay& (0+255),b
   948  0025A8  0E00               	movlw	0
   949  0025AA  6FA8               	movwf	(register_timer@delay+1)& (0+255),b
   950  0025AC  0E00               	movlw	0
   951  0025AE  6FA9               	movwf	(register_timer@delay+2)& (0+255),b
   952  0025B0  0E00               	movlw	0
   953  0025B2  6FAA               	movwf	(register_timer@delay+3)& (0+255),b
   954  0025B4  0E4E               	movlw	low _handleButton
   955  0025B6  6FAB               	movwf	register_timer@callback& (0+255),b
   956  0025B8  0E22               	movlw	high _handleButton
   957  0025BA  6FAC               	movwf	(register_timer@callback+1)& (0+255),b
   958  0025BC  0E00               	movlw	low (_handleButton shr (0+16))
   959  0025BE  6FAD               	movwf	(register_timer@callback+2)& (0+255),b
   960  0025C0  0E00               	movlw	0
   961  0025C2  6FAE               	movwf	register_timer@data_ptr& (0+255),b
   962  0025C4  0E00               	movlw	0
   963  0025C6  6FAF               	movwf	(register_timer@data_ptr+1)& (0+255),b
   964  0025C8  EC57  F00F         	call	_register_timer	;wreg free
   965  0025CC  0100               	movlb	0	; () banked
   966  0025CE  6F60               	movwf	_task_id& (0+255),b
   967                           
   968                           ;main.c: 203:     task_id[1] = register_timer(period, 5000, changeState, ((void*)0));
   969  0025D0  C0CF  F0A3         	movff	_period,register_timer@period
   970  0025D4  C0D0  F0A4         	movff	_period+1,register_timer@period+1
   971  0025D8  0E00               	movlw	0
   972  0025DA  BFA4               	btfsc	(register_timer@period+1)& (0+255),7,b
   973  0025DC  0EFF               	movlw	-1
   974  0025DE  6FA5               	movwf	(register_timer@period+2)& (0+255),b
   975  0025E0  6FA6               	movwf	(register_timer@period+3)& (0+255),b
   976  0025E2  0E88               	movlw	136
   977  0025E4  6FA7               	movwf	register_timer@delay& (0+255),b
   978  0025E6  0E13               	movlw	19
   979  0025E8  6FA8               	movwf	(register_timer@delay+1)& (0+255),b
   980  0025EA  0E00               	movlw	0
   981  0025EC  6FA9               	movwf	(register_timer@delay+2)& (0+255),b
   982  0025EE  0E00               	movlw	0
   983  0025F0  6FAA               	movwf	(register_timer@delay+3)& (0+255),b
   984  0025F2  0E6A               	movlw	low _changeState
   985  0025F4  6FAB               	movwf	register_timer@callback& (0+255),b
   986  0025F6  0E2F               	movlw	high _changeState
   987  0025F8  6FAC               	movwf	(register_timer@callback+1)& (0+255),b
   988  0025FA  0E00               	movlw	low (_changeState shr (0+16))
   989  0025FC  6FAD               	movwf	(register_timer@callback+2)& (0+255),b
   990  0025FE  0E00               	movlw	0
   991  002600  6FAE               	movwf	register_timer@data_ptr& (0+255),b
   992  002602  0E00               	movlw	0
   993  002604  6FAF               	movwf	(register_timer@data_ptr+1)& (0+255),b
   994  002606  EC57  F00F         	call	_register_timer	;wreg free
   995  00260A  0100               	movlb	0	; () banked
   996  00260C  6F61               	movwf	(_task_id+1)& (0+255),b
   997                           
   998                           ;main.c: 204:     task_id[2] = register_timer(4000, 3100, check_humid_to_turn_fan, ((voi
      +                          d*)0));
   999  00260E  0EA0               	movlw	160
  1000  002610  6FA3               	movwf	register_timer@period& (0+255),b
  1001  002612  0E0F               	movlw	15
  1002  002614  6FA4               	movwf	(register_timer@period+1)& (0+255),b
  1003  002616  0E00               	movlw	0
  1004  002618  6FA5               	movwf	(register_timer@period+2)& (0+255),b
  1005  00261A  0E00               	movlw	0
  1006  00261C  6FA6               	movwf	(register_timer@period+3)& (0+255),b
  1007  00261E  0E1C               	movlw	28
  1008  002620  6FA7               	movwf	register_timer@delay& (0+255),b
  1009  002622  0E0C               	movlw	12
  1010  002624  6FA8               	movwf	(register_timer@delay+1)& (0+255),b
  1011  002626  0E00               	movlw	0
  1012  002628  6FA9               	movwf	(register_timer@delay+2)& (0+255),b
  1013  00262A  0E00               	movlw	0
  1014  00262C  6FAA               	movwf	(register_timer@delay+3)& (0+255),b
  1015  00262E  0E26               	movlw	low _check_humid_to_turn_fan
  1016  002630  6FAB               	movwf	register_timer@callback& (0+255),b
  1017  002632  0E30               	movlw	high _check_humid_to_turn_fan
  1018  002634  6FAC               	movwf	(register_timer@callback+1)& (0+255),b
  1019  002636  0E00               	movlw	low (_check_humid_to_turn_fan shr (0+16))
  1020  002638  6FAD               	movwf	(register_timer@callback+2)& (0+255),b
  1021  00263A  0E00               	movlw	0
  1022  00263C  6FAE               	movwf	register_timer@data_ptr& (0+255),b
  1023  00263E  0E00               	movlw	0
  1024  002640  6FAF               	movwf	(register_timer@data_ptr+1)& (0+255),b
  1025  002642  EC57  F00F         	call	_register_timer	;wreg free
  1026  002646  0100               	movlb	0	; () banked
  1027  002648  6F62               	movwf	(_task_id+2)& (0+255),b
  1028                           
  1029                           ;main.c: 205:     task_id[3] = register_timer(4000, 3300, readTempAndHumid, ((void*)0));
  1030  00264A  0EA0               	movlw	160
  1031  00264C  6FA3               	movwf	register_timer@period& (0+255),b
  1032  00264E  0E0F               	movlw	15
  1033  002650  6FA4               	movwf	(register_timer@period+1)& (0+255),b
  1034  002652  0E00               	movlw	0
  1035  002654  6FA5               	movwf	(register_timer@period+2)& (0+255),b
  1036  002656  0E00               	movlw	0
  1037  002658  6FA6               	movwf	(register_timer@period+3)& (0+255),b
  1038  00265A  0EE4               	movlw	228
  1039  00265C  6FA7               	movwf	register_timer@delay& (0+255),b
  1040  00265E  0E0C               	movlw	12
  1041  002660  6FA8               	movwf	(register_timer@delay+1)& (0+255),b
  1042  002662  0E00               	movlw	0
  1043  002664  6FA9               	movwf	(register_timer@delay+2)& (0+255),b
  1044  002666  0E00               	movlw	0
  1045  002668  6FAA               	movwf	(register_timer@delay+3)& (0+255),b
  1046  00266A  0E56               	movlw	low _readTempAndHumid
  1047  00266C  6FAB               	movwf	register_timer@callback& (0+255),b
  1048  00266E  0E39               	movlw	high _readTempAndHumid
  1049  002670  6FAC               	movwf	(register_timer@callback+1)& (0+255),b
  1050  002672  0E00               	movlw	low (_readTempAndHumid shr (0+16))
  1051  002674  6FAD               	movwf	(register_timer@callback+2)& (0+255),b
  1052  002676  0E00               	movlw	0
  1053  002678  6FAE               	movwf	register_timer@data_ptr& (0+255),b
  1054  00267A  0E00               	movlw	0
  1055  00267C  6FAF               	movwf	(register_timer@data_ptr+1)& (0+255),b
  1056  00267E  EC57  F00F         	call	_register_timer	;wreg free
  1057  002682  0100               	movlb	0	; () banked
  1058  002684  6F63               	movwf	(_task_id+3)& (0+255),b
  1059                           
  1060                           ;main.c: 206:     task_id[4] = register_timer(4000, 1500, print_temp_and_humid, ((void*)
      +                          0));
  1061  002686  0EA0               	movlw	160
  1062  002688  6FA3               	movwf	register_timer@period& (0+255),b
  1063  00268A  0E0F               	movlw	15
  1064  00268C  6FA4               	movwf	(register_timer@period+1)& (0+255),b
  1065  00268E  0E00               	movlw	0
  1066  002690  6FA5               	movwf	(register_timer@period+2)& (0+255),b
  1067  002692  0E00               	movlw	0
  1068  002694  6FA6               	movwf	(register_timer@period+3)& (0+255),b
  1069  002696  0EDC               	movlw	220
  1070  002698  6FA7               	movwf	register_timer@delay& (0+255),b
  1071  00269A  0E05               	movlw	5
  1072  00269C  6FA8               	movwf	(register_timer@delay+1)& (0+255),b
  1073  00269E  0E00               	movlw	0
  1074  0026A0  6FA9               	movwf	(register_timer@delay+2)& (0+255),b
  1075  0026A2  0E00               	movlw	0
  1076  0026A4  6FAA               	movwf	(register_timer@delay+3)& (0+255),b
  1077  0026A6  0EA4               	movlw	low _print_temp_and_humid
  1078  0026A8  6FAB               	movwf	register_timer@callback& (0+255),b
  1079  0026AA  0E2B               	movlw	high _print_temp_and_humid
  1080  0026AC  6FAC               	movwf	(register_timer@callback+1)& (0+255),b
  1081  0026AE  0E00               	movlw	low (_print_temp_and_humid shr (0+16))
  1082  0026B0  6FAD               	movwf	(register_timer@callback+2)& (0+255),b
  1083  0026B2  0E00               	movlw	0
  1084  0026B4  6FAE               	movwf	register_timer@data_ptr& (0+255),b
  1085  0026B6  0E00               	movlw	0
  1086  0026B8  6FAF               	movwf	(register_timer@data_ptr+1)& (0+255),b
  1087  0026BA  EC57  F00F         	call	_register_timer	;wreg free
  1088  0026BE  0100               	movlb	0	; () banked
  1089  0026C0  6F64               	movwf	(_task_id+4)& (0+255),b
  1090  0026C2                     
  1091                           ; BSR set to: 0
  1092                           ;main.c: 208:     LCDPrint(0, 0, "LTD controller  ");
  1093  0026C2  0E00               	movlw	0
  1094  0026C4  6FA8               	movwf	LCDPrint@pos& (0+255),b
  1095  0026C6  0E12               	movlw	low STR_22
  1096  0026C8  6FA9               	movwf	LCDPrint@ptr& (0+255),b
  1097  0026CA  0E10               	movlw	high STR_22
  1098  0026CC  6FAA               	movwf	(LCDPrint@ptr+1)& (0+255),b
  1099  0026CE  0E00               	movlw	0
  1100  0026D0  EC98  F01B         	call	_LCDPrint
  1101  0026D4                     
  1102                           ;main.c: 209:     LCDPrint(1, 0, "ID: 1710364     ");
  1103  0026D4  0E00               	movlw	0
  1104  0026D6  0100               	movlb	0	; () banked
  1105  0026D8  6FA8               	movwf	LCDPrint@pos& (0+255),b
  1106  0026DA  0E01               	movlw	low STR_23
  1107  0026DC  6FA9               	movwf	LCDPrint@ptr& (0+255),b
  1108  0026DE  0E10               	movlw	high STR_23
  1109  0026E0  6FAA               	movwf	(LCDPrint@ptr+1)& (0+255),b
  1110  0026E2  0E01               	movlw	1
  1111  0026E4  EC98  F01B         	call	_LCDPrint
  1112  0026E8                     
  1113                           ;main.c: 211:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  1114  0026E8  0E15               	movlw	21
  1115  0026EA  0100               	movlb	0	; () banked
  1116  0026EC  6FCA               	movwf	(??_main+1)& (0+255),b
  1117  0026EE  0E4B               	movlw	75
  1118  0026F0  6FC9               	movwf	??_main& (0+255),b
  1119  0026F2  0EBE               	movlw	190
  1120  0026F4                     u3197:
  1121  0026F4  2EE8               	decfsz	wreg,f,c
  1122  0026F6  D7FE               	bra	u3197
  1123  0026F8  2FC9               	decfsz	??_main& (0+255),f,b
  1124  0026FA  D7FC               	bra	u3197
  1125  0026FC  2FCA               	decfsz	(??_main+1)& (0+255),f,b
  1126  0026FE  D7FA               	bra	u3197
  1127  002700  F000               	nop	
  1128  002702                     
  1129                           ;main.c: 212:     LCDPutInst(0x01);
  1130  002702  0E01               	movlw	1
  1131  002704  ECDA  F01B         	call	_LCDPutInst
  1132  002708                     
  1133                           ;main.c: 213:     LCDPrint(0, 0, "IDLE");
  1134  002708  0E00               	movlw	0
  1135  00270A  0100               	movlb	0	; () banked
  1136  00270C  6FA8               	movwf	LCDPrint@pos& (0+255),b
  1137  00270E  0E86               	movlw	low STR_21
  1138  002710  6FA9               	movwf	LCDPrint@ptr& (0+255),b
  1139  002712  0E10               	movlw	high STR_21
  1140  002714  6FAA               	movwf	(LCDPrint@ptr+1)& (0+255),b
  1141  002716  0E00               	movlw	0
  1142  002718  EC98  F01B         	call	_LCDPrint
  1143  00271C                     l3742:
  1144                           
  1145                           ;main.c: 215:         set_time_process();
  1146  00271C  ECFB  F00A         	call	_set_time_process	;wreg free
  1147  002720                     
  1148                           ;main.c: 216:         LTD_process();
  1149  002720  EC5D  F00D         	call	_LTD_process	;wreg free
  1150  002724                     
  1151                           ;main.c: 217:         dispatch();
  1152  002724  ECBC  F01A         	call	_dispatch	;wreg free
  1153  002728  EF8E  F013         	goto	l3742
  1154  00272C  EF07  F000         	goto	start
  1155  002730                     __end_of_main:
  1156                           	opt callstack 0
  1157                           
  1158 ;; *************** function _system_initialize *****************
  1159 ;; Defined at:
  1160 ;;		line 41 in file "mcc.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;		None
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;		None
  1165 ;; Return value:  Size  Location     Type
  1166 ;;                  1    wreg      void 
  1167 ;; Registers used:
  1168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1178 ;;Total ram usage:        0 bytes
  1179 ;; Hardware stack levels used:    1
  1180 ;; Hardware stack levels required when called:    9
  1181 ;; This function calls:
  1182 ;;		_LCDInit
  1183 ;;		_interrupt_initialize
  1184 ;;		_osc_initialize
  1185 ;;		_pin_initialize
  1186 ;;		_start_timer
  1187 ;; This function is called by:
  1188 ;;		_main
  1189 ;; This function uses a non-reentrant model
  1190 ;;
  1191                           
  1192                           	psect	text1
  1193  003A4A                     __ptext1:
  1194                           	opt callstack 0
  1195  003A4A                     _system_initialize:
  1196                           	opt callstack 21
  1197  003A4A                     
  1198                           ;mcc.c: 42:     osc_initialize();
  1199  003A4A  ECA0  F01D         	call	_osc_initialize	;wreg free
  1200                           
  1201                           ;mcc.c: 43:     pin_initialize();
  1202  003A4E  EC13  F01D         	call	_pin_initialize	;wreg free
  1203  003A52                     
  1204                           ;mcc.c: 44:     interrupt_initialize();
  1205  003A52  ECA3  F01D         	call	_interrupt_initialize	;wreg free
  1206  003A56                     
  1207                           ;mcc.c: 45:     LCDInit();
  1208  003A56  EC8A  F01A         	call	_LCDInit	;wreg free
  1209  003A5A                     
  1210                           ;mcc.c: 46:     humidity_value = 70;
  1211  003A5A  0E46               	movlw	70
  1212  003A5C  0100               	movlb	0	; () banked
  1213  003A5E  6F9A               	movwf	_humidity_value& (0+255),b
  1214  003A60                     
  1215                           ; BSR set to: 0
  1216                           ;mcc.c: 47:     temperature_value = 25;
  1217  003A60  0E19               	movlw	25
  1218  003A62  6F99               	movwf	_temperature_value& (0+255),b
  1219  003A64                     
  1220                           ; BSR set to: 0
  1221                           ;mcc.c: 49:     start_timer(1);
  1222  003A64  0E01               	movlw	1
  1223  003A66  ECC8  F019         	call	_start_timer
  1224  003A6A  0012               	return		;funcret
  1225  003A6C                     __end_of_system_initialize:
  1226                           	opt callstack 0
  1227                           
  1228 ;; *************** function _start_timer *****************
  1229 ;; Defined at:
  1230 ;;		line 83 in file "clock.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;  timer_vaddr     1    wreg     unsigned char 
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;  timer_vaddr     1   12[BANK0 ] unsigned char 
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  2  369[None  ] int 
  1237 ;; Registers used:
  1238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1245 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1246 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1247 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1248 ;;Total ram usage:        3 bytes
  1249 ;; Hardware stack levels used:    1
  1250 ;; Hardware stack levels required when called:    8
  1251 ;; This function calls:
  1252 ;;		_initializeTaskList
  1253 ;; This function is called by:
  1254 ;;		_system_initialize
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           	psect	text2
  1259  003390                     __ptext2:
  1260                           	opt callstack 0
  1261  003390                     _start_timer:
  1262                           	opt callstack 21
  1263                           
  1264                           ;incstack = 0
  1265                           ;start_timer@timer_vaddr stored from wreg
  1266  003390  0100               	movlb	0	; () banked
  1267  003392  6FA9               	movwf	start_timer@timer_vaddr& (0+255),b
  1268  003394                     
  1269                           ;clock.c: 84:     if(timer_vaddr > 4)
  1270  003394  0E04               	movlw	4
  1271  003396  0100               	movlb	0	; () banked
  1272  003398  65A9               	cpfsgt	start_timer@timer_vaddr& (0+255),b
  1273  00339A  EFD1  F019         	goto	u2471
  1274  00339E  EFD3  F019         	goto	u2470
  1275  0033A2                     u2471:
  1276  0033A2  EFF1  F019         	goto	l3330
  1277  0033A6                     u2470:
  1278  0033A6  EF12  F01A         	goto	l555
  1279  0033AA                     l557:
  1280                           
  1281                           ; BSR set to: 0
  1282                           ;clock.c: 88:             INTCONbits.TMR0IE = 1;
  1283  0033AA  8AF2               	bsf	242,5,c	;volatile
  1284                           
  1285                           ;clock.c: 89:             INTCONbits.TMR0IF = 0;
  1286  0033AC  94F2               	bcf	242,2,c	;volatile
  1287  0033AE                     
  1288                           ; BSR set to: 0
  1289                           ;clock.c: 90:             T0CON = 0b11000111;
  1290  0033AE  0EC7               	movlw	199
  1291  0033B0  6ED5               	movwf	213,c	;volatile
  1292                           
  1293                           ;clock.c: 91:             TMR0L = 0x82;
  1294  0033B2  0E82               	movlw	130
  1295  0033B4  6ED6               	movwf	214,c	;volatile
  1296                           
  1297                           ;clock.c: 92:             time_ms = 0;
  1298  0033B6  0E00               	movlw	0
  1299  0033B8  6F84               	movwf	_time_ms& (0+255),b
  1300  0033BA  0E00               	movlw	0
  1301  0033BC  6F85               	movwf	(_time_ms+1)& (0+255),b
  1302  0033BE  0E00               	movlw	0
  1303  0033C0  6F86               	movwf	(_time_ms+2)& (0+255),b
  1304  0033C2  0E00               	movlw	0
  1305  0033C4  6F87               	movwf	(_time_ms+3)& (0+255),b
  1306                           
  1307                           ;clock.c: 93:             break;
  1308  0033C6  EF12  F01A         	goto	l555
  1309  0033CA                     l3316:
  1310                           
  1311                           ; BSR set to: 0
  1312                           ;clock.c: 95:             initializeTaskList();
  1313  0033CA  EC5B  F016         	call	_initializeTaskList	;wreg free
  1314  0033CE                     
  1315                           ;clock.c: 96:             PIE1bits.TMR1IE = 1;
  1316  0033CE  809D               	bsf	157,0,c	;volatile
  1317  0033D0                     
  1318                           ;clock.c: 97:             PIR1bits.TMR1IF = 0;
  1319  0033D0  909E               	bcf	158,0,c	;volatile
  1320  0033D2                     
  1321                           ;clock.c: 98:             T1CON = 0b10000001;
  1322  0033D2  0E81               	movlw	129
  1323  0033D4  6ECD               	movwf	205,c	;volatile
  1324  0033D6                     
  1325                           ;clock.c: 99:             TMR1H = 0xB1;
  1326  0033D6  0EB1               	movlw	177
  1327  0033D8  6ECF               	movwf	207,c	;volatile
  1328  0033DA                     
  1329                           ;clock.c: 100:             TMR1L = 0xE0;
  1330  0033DA  0EE0               	movlw	224
  1331  0033DC  6ECE               	movwf	206,c	;volatile
  1332                           
  1333                           ;clock.c: 101:             break;
  1334  0033DE  EF12  F01A         	goto	l555
  1335  0033E2                     l3330:
  1336                           
  1337                           ; BSR set to: 0
  1338  0033E2  51A9               	movf	start_timer@timer_vaddr& (0+255),w,b
  1339  0033E4  6FA7               	movwf	??_start_timer& (0+255),b
  1340  0033E6  6BA8               	clrf	(??_start_timer+1)& (0+255),b
  1341                           
  1342                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1343                           ; Switch size 1, requested type "simple"
  1344                           ; Number of cases is 1, Range of values is 0 to 0
  1345                           ; switch strategies available:
  1346                           ; Name         Instructions Cycles
  1347                           ; simple_byte            4     3 (average)
  1348                           ;	Chosen strategy is simple_byte
  1349  0033E8  51A8               	movf	(??_start_timer+1)& (0+255),w,b
  1350  0033EA  0A00               	xorlw	0	; case 0
  1351  0033EC  B4D8               	btfsc	status,2,c
  1352  0033EE  EFFB  F019         	goto	l4016
  1353  0033F2  EF12  F01A         	goto	l555
  1354  0033F6                     l4016:
  1355                           
  1356                           ; BSR set to: 0
  1357                           ; Switch size 1, requested type "simple"
  1358                           ; Number of cases is 5, Range of values is 0 to 4
  1359                           ; switch strategies available:
  1360                           ; Name         Instructions Cycles
  1361                           ; simple_byte           16     9 (average)
  1362                           ;	Chosen strategy is simple_byte
  1363  0033F6  51A7               	movf	??_start_timer& (0+255),w,b
  1364  0033F8  0A00               	xorlw	0	; case 0
  1365  0033FA  B4D8               	btfsc	status,2,c
  1366  0033FC  EFD5  F019         	goto	l557
  1367  003400  0A01               	xorlw	1	; case 1
  1368  003402  B4D8               	btfsc	status,2,c
  1369  003404  EFE5  F019         	goto	l3316
  1370  003408  0A03               	xorlw	3	; case 2
  1371  00340A  B4D8               	btfsc	status,2,c
  1372  00340C  EF12  F01A         	goto	l555
  1373  003410  0A01               	xorlw	1	; case 3
  1374  003412  B4D8               	btfsc	status,2,c
  1375  003414  EF12  F01A         	goto	l555
  1376  003418  0A07               	xorlw	7	; case 4
  1377  00341A  B4D8               	btfsc	status,2,c
  1378  00341C  EF12  F01A         	goto	l555
  1379  003420  EF12  F01A         	goto	l555
  1380  003424                     l555:
  1381  003424  0012               	return		;funcret
  1382  003426                     __end_of_start_timer:
  1383                           	opt callstack 0
  1384                           
  1385 ;; *************** function _initializeTaskList *****************
  1386 ;; Defined at:
  1387 ;;		line 60 in file "clock.c"
  1388 ;; Parameters:    Size  Location     Type
  1389 ;;		None
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;  i               2    8[BANK0 ] int 
  1392 ;; Return value:  Size  Location     Type
  1393 ;;                  1    wreg      void 
  1394 ;; Registers used:
  1395 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1396 ;; Tracked objects:
  1397 ;;		On entry : 0/0
  1398 ;;		On exit  : 0/0
  1399 ;;		Unchanged: 0/0
  1400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1402 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1404 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1405 ;;Total ram usage:        2 bytes
  1406 ;; Hardware stack levels used:    1
  1407 ;; Hardware stack levels required when called:    7
  1408 ;; This function calls:
  1409 ;;		___wmul
  1410 ;;		_queueInitialize
  1411 ;; This function is called by:
  1412 ;;		_start_timer
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           	psect	text3
  1417  002CB6                     __ptext3:
  1418                           	opt callstack 0
  1419  002CB6                     _initializeTaskList:
  1420                           	opt callstack 21
  1421  002CB6                     
  1422                           ;clock.c: 61:     queueInitialize();
  1423  002CB6  EC13  F01A         	call	_queueInitialize	;wreg free
  1424  002CBA                     
  1425                           ;clock.c: 62:     for(int i = 0; i < 20; i++) {
  1426  002CBA  0E00               	movlw	0
  1427  002CBC  0100               	movlb	0	; () banked
  1428  002CBE  6FA6               	movwf	(initializeTaskList@i+1)& (0+255),b
  1429  002CC0  0E00               	movlw	0
  1430  002CC2  6FA5               	movwf	initializeTaskList@i& (0+255),b
  1431  002CC4                     l2968:
  1432                           
  1433                           ; BSR set to: 0
  1434                           ;clock.c: 63:         task_list[i].delay_t = 0;
  1435  002CC4  C0A5  F09D         	movff	initializeTaskList@i,___wmul@multiplier
  1436  002CC8  C0A6  F09E         	movff	initializeTaskList@i+1,___wmul@multiplier+1
  1437  002CCC  0E00               	movlw	0
  1438  002CCE  6FA0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1439  002CD0  0E0F               	movlw	15
  1440  002CD2  6F9F               	movwf	___wmul@multiplicand& (0+255),b
  1441  002CD4  ECEC  F01C         	call	___wmul	;wreg free
  1442  002CD8  0E64               	movlw	low _task_list
  1443  002CDA  0100               	movlb	0	; () banked
  1444  002CDC  259D               	addwf	?___wmul& (0+255),w,b
  1445  002CDE  6ED9               	movwf	fsr2l,c
  1446  002CE0  0E01               	movlw	high _task_list
  1447  002CE2  219E               	addwfc	(?___wmul+1)& (0+255),w,b
  1448  002CE4  6EDA               	movwf	fsr2h,c
  1449  002CE6  6ADE               	clrf	postinc2,c
  1450  002CE8  6ADE               	clrf	postinc2,c
  1451  002CEA  6ADE               	clrf	postinc2,c
  1452  002CEC  6ADD               	clrf	postdec2,c
  1453                           
  1454                           ;clock.c: 64:         task_list[i].period_t = 0;
  1455  002CEE  C0A5  F09D         	movff	initializeTaskList@i,___wmul@multiplier
  1456  002CF2  C0A6  F09E         	movff	initializeTaskList@i+1,___wmul@multiplier+1
  1457  002CF6  0E00               	movlw	0
  1458  002CF8  6FA0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1459  002CFA  0E0F               	movlw	15
  1460  002CFC  6F9F               	movwf	___wmul@multiplicand& (0+255),b
  1461  002CFE  ECEC  F01C         	call	___wmul	;wreg free
  1462  002D02  0E68               	movlw	low (_task_list+4)
  1463  002D04  0100               	movlb	0	; () banked
  1464  002D06  259D               	addwf	?___wmul& (0+255),w,b
  1465  002D08  6ED9               	movwf	fsr2l,c
  1466  002D0A  0E01               	movlw	high (_task_list+4)
  1467  002D0C  219E               	addwfc	(?___wmul+1)& (0+255),w,b
  1468  002D0E  6EDA               	movwf	fsr2h,c
  1469  002D10  6ADE               	clrf	postinc2,c
  1470  002D12  6ADE               	clrf	postinc2,c
  1471  002D14  6ADE               	clrf	postinc2,c
  1472  002D16  6ADD               	clrf	postdec2,c
  1473                           
  1474                           ;clock.c: 65:         task_list[i].func_ptr = ((void*)0);
  1475  002D18  C0A5  F09D         	movff	initializeTaskList@i,___wmul@multiplier
  1476  002D1C  C0A6  F09E         	movff	initializeTaskList@i+1,___wmul@multiplier+1
  1477  002D20  0E00               	movlw	0
  1478  002D22  6FA0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1479  002D24  0E0F               	movlw	15
  1480  002D26  6F9F               	movwf	___wmul@multiplicand& (0+255),b
  1481  002D28  ECEC  F01C         	call	___wmul	;wreg free
  1482  002D2C  0E6C               	movlw	low (_task_list+8)
  1483  002D2E  0100               	movlb	0	; () banked
  1484  002D30  259D               	addwf	?___wmul& (0+255),w,b
  1485  002D32  6ED9               	movwf	fsr2l,c
  1486  002D34  0E01               	movlw	high (_task_list+8)
  1487  002D36  219E               	addwfc	(?___wmul+1)& (0+255),w,b
  1488  002D38  6EDA               	movwf	fsr2h,c
  1489  002D3A  0E00               	movlw	0
  1490  002D3C  6EDE               	movwf	postinc2,c
  1491  002D3E  0E00               	movlw	0
  1492  002D40  6EDE               	movwf	postinc2,c
  1493  002D42  0E00               	movlw	0
  1494  002D44  6EDE               	movwf	postinc2,c
  1495                           
  1496                           ;clock.c: 66:         task_list[i].data_p = ((void*)0);
  1497  002D46  C0A5  F09D         	movff	initializeTaskList@i,___wmul@multiplier
  1498  002D4A  C0A6  F09E         	movff	initializeTaskList@i+1,___wmul@multiplier+1
  1499  002D4E  0E00               	movlw	0
  1500  002D50  6FA0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1501  002D52  0E0F               	movlw	15
  1502  002D54  6F9F               	movwf	___wmul@multiplicand& (0+255),b
  1503  002D56  ECEC  F01C         	call	___wmul	;wreg free
  1504  002D5A  0E71               	movlw	low (_task_list+13)
  1505  002D5C  0100               	movlb	0	; () banked
  1506  002D5E  259D               	addwf	?___wmul& (0+255),w,b
  1507  002D60  6ED9               	movwf	fsr2l,c
  1508  002D62  0E01               	movlw	high (_task_list+13)
  1509  002D64  219E               	addwfc	(?___wmul+1)& (0+255),w,b
  1510  002D66  6EDA               	movwf	fsr2h,c
  1511  002D68  0E00               	movlw	0
  1512  002D6A  6EDE               	movwf	postinc2,c
  1513  002D6C  0E00               	movlw	0
  1514  002D6E  6EDD               	movwf	postdec2,c
  1515                           
  1516                           ;clock.c: 67:         task_list[i].next = 105;
  1517  002D70  C0A5  F09D         	movff	initializeTaskList@i,___wmul@multiplier
  1518  002D74  C0A6  F09E         	movff	initializeTaskList@i+1,___wmul@multiplier+1
  1519  002D78  0E00               	movlw	0
  1520  002D7A  6FA0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1521  002D7C  0E0F               	movlw	15
  1522  002D7E  6F9F               	movwf	___wmul@multiplicand& (0+255),b
  1523  002D80  ECEC  F01C         	call	___wmul	;wreg free
  1524  002D84  0E6F               	movlw	low (_task_list+11)
  1525  002D86  0100               	movlb	0	; () banked
  1526  002D88  259D               	addwf	?___wmul& (0+255),w,b
  1527  002D8A  6ED9               	movwf	fsr2l,c
  1528  002D8C  0E01               	movlw	high (_task_list+11)
  1529  002D8E  219E               	addwfc	(?___wmul+1)& (0+255),w,b
  1530  002D90  6EDA               	movwf	fsr2h,c
  1531  002D92  0E69               	movlw	105
  1532  002D94  6EDE               	movwf	postinc2,c
  1533  002D96  0E00               	movlw	0
  1534  002D98  6EDD               	movwf	postdec2,c
  1535  002D9A                     
  1536                           ; BSR set to: 0
  1537                           ;clock.c: 68:     }
  1538  002D9A  4BA5               	infsnz	initializeTaskList@i& (0+255),f,b
  1539  002D9C  2BA6               	incf	(initializeTaskList@i+1)& (0+255),f,b
  1540  002D9E                     
  1541                           ; BSR set to: 0
  1542  002D9E  BFA6               	btfsc	(initializeTaskList@i+1)& (0+255),7,b
  1543  002DA0  EFDB  F016         	goto	u1981
  1544  002DA4  51A6               	movf	(initializeTaskList@i+1)& (0+255),w,b
  1545  002DA6  E109               	bnz	u1980
  1546  002DA8  0E14               	movlw	20
  1547  002DAA  5DA5               	subwf	initializeTaskList@i& (0+255),w,b
  1548  002DAC  A0D8               	btfss	status,0,c
  1549  002DAE  EFDB  F016         	goto	u1981
  1550  002DB2  EFDD  F016         	goto	u1980
  1551  002DB6                     u1981:
  1552  002DB6  EF62  F016         	goto	l2968
  1553  002DBA                     u1980:
  1554  002DBA                     
  1555                           ; BSR set to: 0
  1556                           ;clock.c: 69:     num_task = 0;
  1557  002DBA  0E00               	movlw	0
  1558  002DBC  6F91               	movwf	_num_task& (0+255),b
  1559                           
  1560                           ;clock.c: 70:     head = 105;
  1561  002DBE  0E69               	movlw	105
  1562  002DC0  6F90               	movwf	_head& (0+255),b
  1563  002DC2                     
  1564                           ; BSR set to: 0
  1565  002DC2  0012               	return		;funcret
  1566  002DC4                     __end_of_initializeTaskList:
  1567                           	opt callstack 0
  1568                           
  1569 ;; *************** function _queueInitialize *****************
  1570 ;; Defined at:
  1571 ;;		line 8 in file "clock.c"
  1572 ;; Parameters:    Size  Location     Type
  1573 ;;		None
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;  i               2    6[BANK0 ] int 
  1576 ;; Return value:  Size  Location     Type
  1577 ;;                  1    wreg      void 
  1578 ;; Registers used:
  1579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1586 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1588 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1589 ;;Total ram usage:        2 bytes
  1590 ;; Hardware stack levels used:    1
  1591 ;; Hardware stack levels required when called:    6
  1592 ;; This function calls:
  1593 ;;		___wmul
  1594 ;; This function is called by:
  1595 ;;		_initializeTaskList
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           	psect	text4
  1600  003426                     __ptext4:
  1601                           	opt callstack 0
  1602  003426                     _queueInitialize:
  1603                           	opt callstack 21
  1604  003426                     
  1605                           ;clock.c: 9:     for(int i = 0; i< 20; i++) {
  1606  003426  0E00               	movlw	0
  1607  003428  0100               	movlb	0	; () banked
  1608  00342A  6FA4               	movwf	(queueInitialize@i+1)& (0+255),b
  1609  00342C  0E00               	movlw	0
  1610  00342E  6FA3               	movwf	queueInitialize@i& (0+255),b
  1611  003430                     l2804:
  1612                           
  1613                           ; BSR set to: 0
  1614                           ;clock.c: 10:         ready_queue[i].data_p = ((void*)0);
  1615  003430  C0A3  F09D         	movff	queueInitialize@i,___wmul@multiplier
  1616  003434  C0A4  F09E         	movff	queueInitialize@i+1,___wmul@multiplier+1
  1617  003438  0E00               	movlw	0
  1618  00343A  6FA0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1619  00343C  0E05               	movlw	5
  1620  00343E  6F9F               	movwf	___wmul@multiplicand& (0+255),b
  1621  003440  ECEC  F01C         	call	___wmul	;wreg free
  1622  003444  0E03               	movlw	low (_ready_queue+3)
  1623  003446  0100               	movlb	0	; () banked
  1624  003448  259D               	addwf	?___wmul& (0+255),w,b
  1625  00344A  6ED9               	movwf	fsr2l,c
  1626  00344C  0E01               	movlw	high (_ready_queue+3)
  1627  00344E  219E               	addwfc	(?___wmul+1)& (0+255),w,b
  1628  003450  6EDA               	movwf	fsr2h,c
  1629  003452  0E00               	movlw	0
  1630  003454  6EDE               	movwf	postinc2,c
  1631  003456  0E00               	movlw	0
  1632  003458  6EDD               	movwf	postdec2,c
  1633                           
  1634                           ;clock.c: 11:         ready_queue[i].func_ptr = ((void*)0);
  1635  00345A  C0A3  F09D         	movff	queueInitialize@i,___wmul@multiplier
  1636  00345E  C0A4  F09E         	movff	queueInitialize@i+1,___wmul@multiplier+1
  1637  003462  0E00               	movlw	0
  1638  003464  6FA0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1639  003466  0E05               	movlw	5
  1640  003468  6F9F               	movwf	___wmul@multiplicand& (0+255),b
  1641  00346A  ECEC  F01C         	call	___wmul	;wreg free
  1642  00346E  0E00               	movlw	low _ready_queue
  1643  003470  0100               	movlb	0	; () banked
  1644  003472  259D               	addwf	?___wmul& (0+255),w,b
  1645  003474  6ED9               	movwf	fsr2l,c
  1646  003476  0E01               	movlw	high _ready_queue
  1647  003478  219E               	addwfc	(?___wmul+1)& (0+255),w,b
  1648  00347A  6EDA               	movwf	fsr2h,c
  1649  00347C  0E00               	movlw	0
  1650  00347E  6EDE               	movwf	postinc2,c
  1651  003480  0E00               	movlw	0
  1652  003482  6EDE               	movwf	postinc2,c
  1653  003484  0E00               	movlw	0
  1654  003486  6EDE               	movwf	postinc2,c
  1655  003488                     
  1656                           ; BSR set to: 0
  1657                           ;clock.c: 12:     }
  1658  003488  4BA3               	infsnz	queueInitialize@i& (0+255),f,b
  1659  00348A  2BA4               	incf	(queueInitialize@i+1)& (0+255),f,b
  1660  00348C                     
  1661                           ; BSR set to: 0
  1662  00348C  BFA4               	btfsc	(queueInitialize@i+1)& (0+255),7,b
  1663  00348E  EF52  F01A         	goto	u1711
  1664  003492  51A4               	movf	(queueInitialize@i+1)& (0+255),w,b
  1665  003494  E109               	bnz	u1710
  1666  003496  0E14               	movlw	20
  1667  003498  5DA3               	subwf	queueInitialize@i& (0+255),w,b
  1668  00349A  A0D8               	btfss	status,0,c
  1669  00349C  EF52  F01A         	goto	u1711
  1670  0034A0  EF54  F01A         	goto	u1710
  1671  0034A4                     u1711:
  1672  0034A4  EF18  F01A         	goto	l2804
  1673  0034A8                     u1710:
  1674  0034A8                     
  1675                           ; BSR set to: 0
  1676  0034A8  0012               	return		;funcret
  1677  0034AA                     __end_of_queueInitialize:
  1678                           	opt callstack 0
  1679                           
  1680 ;; *************** function _pin_initialize *****************
  1681 ;; Defined at:
  1682 ;;		line 7 in file "mcc.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;		None
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;		None
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  1    wreg      void 
  1689 ;; Registers used:
  1690 ;;		wreg, status,2
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1700 ;;Total ram usage:        0 bytes
  1701 ;; Hardware stack levels used:    1
  1702 ;; Hardware stack levels required when called:    5
  1703 ;; This function calls:
  1704 ;;		Nothing
  1705 ;; This function is called by:
  1706 ;;		_system_initialize
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           	psect	text5
  1711  003A26                     __ptext5:
  1712                           	opt callstack 0
  1713  003A26                     _pin_initialize:
  1714                           	opt callstack 24
  1715  003A26                     
  1716                           ;mcc.c: 8:     LATC = 0x00;
  1717  003A26  0E00               	movlw	0
  1718  003A28  6E8B               	movwf	139,c	;volatile
  1719                           
  1720                           ;mcc.c: 9:     TRISC = 0xD7;
  1721  003A2A  0ED7               	movlw	215
  1722  003A2C  6E94               	movwf	148,c	;volatile
  1723                           
  1724                           ;mcc.c: 10:     ADCON1 = 0b00001111;
  1725  003A2E  0E0F               	movlw	15
  1726  003A30  6EC1               	movwf	193,c	;volatile
  1727                           
  1728                           ;mcc.c: 12:     LATA = 0x00;
  1729  003A32  0E00               	movlw	0
  1730  003A34  6E89               	movwf	137,c	;volatile
  1731                           
  1732                           ;mcc.c: 13:     TRISA = 0xF3;
  1733  003A36  0EF3               	movlw	243
  1734  003A38  6E92               	movwf	146,c	;volatile
  1735                           
  1736                           ;mcc.c: 16:     LATB = 0x00;
  1737  003A3A  0E00               	movlw	0
  1738  003A3C  6E8A               	movwf	138,c	;volatile
  1739  003A3E                     
  1740                           ;mcc.c: 17:     TRISB = 0xFF;
  1741  003A3E  6893               	setf	147,c	;volatile
  1742                           
  1743                           ;mcc.c: 20:     LATD = 0x00;
  1744  003A40  0E00               	movlw	0
  1745  003A42  6E8C               	movwf	140,c	;volatile
  1746                           
  1747                           ;mcc.c: 21:     TRISD = 0x00;
  1748  003A44  0E00               	movlw	0
  1749  003A46  6E95               	movwf	149,c	;volatile
  1750  003A48  0012               	return		;funcret
  1751  003A4A                     __end_of_pin_initialize:
  1752                           	opt callstack 0
  1753                           
  1754 ;; *************** function _osc_initialize *****************
  1755 ;; Defined at:
  1756 ;;		line 3 in file "mcc.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;		None
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;		None
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  1    wreg      void 
  1763 ;; Registers used:
  1764 ;;		wreg, status,2
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1774 ;;Total ram usage:        0 bytes
  1775 ;; Hardware stack levels used:    1
  1776 ;; Hardware stack levels required when called:    5
  1777 ;; This function calls:
  1778 ;;		Nothing
  1779 ;; This function is called by:
  1780 ;;		_system_initialize
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           	psect	text6
  1785  003B40                     __ptext6:
  1786                           	opt callstack 0
  1787  003B40                     _osc_initialize:
  1788                           	opt callstack 24
  1789  003B40                     
  1790                           ;mcc.c: 4:     OSCCON = 0x70;
  1791  003B40  0E70               	movlw	112
  1792  003B42  6ED3               	movwf	211,c	;volatile
  1793  003B44  0012               	return		;funcret
  1794  003B46                     __end_of_osc_initialize:
  1795                           	opt callstack 0
  1796                           
  1797 ;; *************** function _interrupt_initialize *****************
  1798 ;; Defined at:
  1799 ;;		line 35 in file "mcc.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;		None
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;		None
  1804 ;; Return value:  Size  Location     Type
  1805 ;;                  1    wreg      void 
  1806 ;; Registers used:
  1807 ;;		None
  1808 ;; Tracked objects:
  1809 ;;		On entry : 0/0
  1810 ;;		On exit  : 0/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1817 ;;Total ram usage:        0 bytes
  1818 ;; Hardware stack levels used:    1
  1819 ;; Hardware stack levels required when called:    5
  1820 ;; This function calls:
  1821 ;;		Nothing
  1822 ;; This function is called by:
  1823 ;;		_system_initialize
  1824 ;; This function uses a non-reentrant model
  1825 ;;
  1826                           
  1827                           	psect	text7
  1828  003B46                     __ptext7:
  1829                           	opt callstack 0
  1830  003B46                     _interrupt_initialize:
  1831                           	opt callstack 24
  1832  003B46                     
  1833                           ;mcc.c: 36:     INTCONbits.GIE = 1;
  1834  003B46  8EF2               	bsf	242,7,c	;volatile
  1835                           
  1836                           ;mcc.c: 37:     INTCONbits.PEIE = 1;
  1837  003B48  8CF2               	bsf	242,6,c	;volatile
  1838  003B4A  0012               	return		;funcret
  1839  003B4C                     __end_of_interrupt_initialize:
  1840                           	opt callstack 0
  1841                           
  1842 ;; *************** function _LCDInit *****************
  1843 ;; Defined at:
  1844 ;;		line 45 in file "lcd.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;		None
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;		None
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  1    wreg      void 
  1851 ;; Registers used:
  1852 ;;		wreg, status,2, status,0, cstack
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1860 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1862 ;;Total ram usage:        1 bytes
  1863 ;; Hardware stack levels used:    1
  1864 ;; Hardware stack levels required when called:    8
  1865 ;; This function calls:
  1866 ;;		_InitBBSPI
  1867 ;;		_LCDPutInst
  1868 ;;		_Port_BBSPIInit
  1869 ;;		_WritePort_BBSPI
  1870 ;; This function is called by:
  1871 ;;		_system_initialize
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           	psect	text8
  1876  003514                     __ptext8:
  1877                           	opt callstack 0
  1878  003514                     _LCDInit:
  1879                           	opt callstack 21
  1880  003514                     
  1881                           ;lcd.c: 47:     InitBBSPI();
  1882  003514  EC88  F01D         	call	_InitBBSPI	;wreg free
  1883  003518                     
  1884                           ;lcd.c: 48:     TRISFbits.TRISF6 = 0;
  1885  003518  9C97               	bcf	151,6,c	;volatile
  1886  00351A                     
  1887                           ;lcd.c: 49:     LATFbits.LATF6 = 0;
  1888  00351A  9C8E               	bcf	142,6,c	;volatile
  1889  00351C                     
  1890                           ;lcd.c: 50:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1891  00351C  0E0D               	movlw	13
  1892  00351E  0100               	movlb	0	; () banked
  1893  003520  6FA3               	movwf	??_LCDInit& (0+255),b
  1894  003522  0EFB               	movlw	251
  1895  003524                     u3207:
  1896  003524  2EE8               	decfsz	wreg,f,c
  1897  003526  D7FE               	bra	u3207
  1898  003528  2FA3               	decfsz	??_LCDInit& (0+255),f,b
  1899  00352A  D7FC               	bra	u3207
  1900  00352C  D000               	nop2	
  1901  00352E                     
  1902                           ;lcd.c: 51:     LATFbits.LATF6 = 1;
  1903  00352E  8C8E               	bsf	142,6,c	;volatile
  1904  003530                     
  1905                           ;lcd.c: 52:     Port_BBSPIInit (0x00);
  1906  003530  0E00               	movlw	0
  1907  003532  EC46  F01D         	call	_Port_BBSPIInit
  1908  003536                     
  1909                           ;lcd.c: 53:     Port_BBSPIInit (0x01);
  1910  003536  0E01               	movlw	1
  1911  003538  EC46  F01D         	call	_Port_BBSPIInit
  1912  00353C                     
  1913                           ;lcd.c: 54:     WritePort_BBSPI (0x12, 0);
  1914  00353C  0E00               	movlw	0
  1915  00353E  0100               	movlb	0	; () banked
  1916  003540  6FA0               	movwf	WritePort_BBSPI@a& (0+255),b
  1917  003542  0E12               	movlw	18
  1918  003544  EC36  F01D         	call	_WritePort_BBSPI
  1919  003548                     
  1920                           ;lcd.c: 55:     _delay((unsigned long)((15)*(8000000/4000.0)));
  1921  003548  0E27               	movlw	39
  1922  00354A  0100               	movlb	0	; () banked
  1923  00354C  6FA3               	movwf	??_LCDInit& (0+255),b
  1924  00354E  0EF5               	movlw	245
  1925  003550                     u3217:
  1926  003550  2EE8               	decfsz	wreg,f,c
  1927  003552  D7FE               	bra	u3217
  1928  003554  2FA3               	decfsz	??_LCDInit& (0+255),f,b
  1929  003556  D7FC               	bra	u3217
  1930  003558                     
  1931                           ;lcd.c: 56:     LCDPutInst(0x32);
  1932  003558  0E32               	movlw	50
  1933  00355A  ECDA  F01B         	call	_LCDPutInst
  1934  00355E                     
  1935                           ;lcd.c: 57:     LCDPutInst(0x3C);
  1936  00355E  0E3C               	movlw	60
  1937  003560  ECDA  F01B         	call	_LCDPutInst
  1938  003564                     
  1939                           ;lcd.c: 58:     LCDPutInst(0x0C);
  1940  003564  0E0C               	movlw	12
  1941  003566  ECDA  F01B         	call	_LCDPutInst
  1942  00356A                     
  1943                           ;lcd.c: 59:     LCDPutInst(0x01);
  1944  00356A  0E01               	movlw	1
  1945  00356C  ECDA  F01B         	call	_LCDPutInst
  1946  003570                     
  1947                           ;lcd.c: 60:     LCDPutInst(0x06);
  1948  003570  0E06               	movlw	6
  1949  003572  ECDA  F01B         	call	_LCDPutInst
  1950  003576  0012               	return		;funcret
  1951  003578                     __end_of_LCDInit:
  1952                           	opt callstack 0
  1953                           
  1954 ;; *************** function _Port_BBSPIInit *****************
  1955 ;; Defined at:
  1956 ;;		line 123 in file "lcd.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;  port_dir        1    wreg     unsigned char 
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;  port_dir        1    3[BANK0 ] unsigned char 
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  1    wreg      void 
  1963 ;; Registers used:
  1964 ;;		wreg, status,2, status,0, cstack
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1971 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1973 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1974 ;;Total ram usage:        1 bytes
  1975 ;; Hardware stack levels used:    1
  1976 ;; Hardware stack levels required when called:    6
  1977 ;; This function calls:
  1978 ;;		_SendByteBBSPI
  1979 ;; This function is called by:
  1980 ;;		_LCDInit
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984                           	psect	text9
  1985  003A8C                     __ptext9:
  1986                           	opt callstack 0
  1987  003A8C                     _Port_BBSPIInit:
  1988                           	opt callstack 22
  1989                           
  1990                           ;incstack = 0
  1991                           ;Port_BBSPIInit@port_dir stored from wreg
  1992  003A8C  0100               	movlb	0	; () banked
  1993  003A8E  6FA0               	movwf	Port_BBSPIInit@port_dir& (0+255),b
  1994  003A90                     
  1995                           ;lcd.c: 123: void Port_BBSPIInit (unsigned char port_dir);lcd.c: 124: {;lcd.c: 128:     
      +                          LATAbits.LATA2 = 0;
  1996  003A90  9489               	bcf	137,2,c	;volatile
  1997  003A92                     
  1998                           ;lcd.c: 129:     SendByteBBSPI(0x40);
  1999  003A92  0E40               	movlw	64
  2000  003A94  EC55  F01A         	call	_SendByteBBSPI
  2001                           
  2002                           ;lcd.c: 130:     SendByteBBSPI(port_dir);
  2003  003A98  0100               	movlb	0	; () banked
  2004  003A9A  51A0               	movf	Port_BBSPIInit@port_dir& (0+255),w,b
  2005  003A9C  EC55  F01A         	call	_SendByteBBSPI
  2006                           
  2007                           ;lcd.c: 131:     SendByteBBSPI(0x00);
  2008  003AA0  0E00               	movlw	0
  2009  003AA2  EC55  F01A         	call	_SendByteBBSPI
  2010  003AA6                     
  2011                           ;lcd.c: 132:     LATAbits.LATA2 = 1;
  2012  003AA6  8489               	bsf	137,2,c	;volatile
  2013  003AA8  0012               	return		;funcret
  2014  003AAA                     __end_of_Port_BBSPIInit:
  2015                           	opt callstack 0
  2016                           
  2017 ;; *************** function _InitBBSPI *****************
  2018 ;; Defined at:
  2019 ;;		line 70 in file "lcd.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;		None
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;		None
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  1    wreg      void 
  2026 ;; Registers used:
  2027 ;;		None
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2037 ;;Total ram usage:        0 bytes
  2038 ;; Hardware stack levels used:    1
  2039 ;; Hardware stack levels required when called:    5
  2040 ;; This function calls:
  2041 ;;		Nothing
  2042 ;; This function is called by:
  2043 ;;		_LCDInit
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           	psect	text10
  2048  003B10                     __ptext10:
  2049                           	opt callstack 0
  2050  003B10                     _InitBBSPI:
  2051                           	opt callstack 23
  2052  003B10                     
  2053                           ;lcd.c: 72:     TRISAbits.TRISA2 = 0;
  2054  003B10  9492               	bcf	146,2,c	;volatile
  2055                           
  2056                           ;lcd.c: 73:     TRISCbits.TRISC4 = 1;
  2057  003B12  8894               	bsf	148,4,c	;volatile
  2058                           
  2059                           ;lcd.c: 74:     TRISCbits.TRISC5 = 0;
  2060  003B14  9A94               	bcf	148,5,c	;volatile
  2061                           
  2062                           ;lcd.c: 75:     TRISCbits.TRISC3 = 0;
  2063  003B16  9694               	bcf	148,3,c	;volatile
  2064                           
  2065                           ;lcd.c: 77:     LATAbits.LATA2 = 1;
  2066  003B18  8489               	bsf	137,2,c	;volatile
  2067                           
  2068                           ;lcd.c: 78:     LATCbits.LATC4 = 1;
  2069  003B1A  888B               	bsf	139,4,c	;volatile
  2070                           
  2071                           ;lcd.c: 79:     LATCbits.LATC5 = 0;
  2072  003B1C  9A8B               	bcf	139,5,c	;volatile
  2073                           
  2074                           ;lcd.c: 80:     LATCbits.LATC3 = 0;
  2075  003B1E  968B               	bcf	139,3,c	;volatile
  2076  003B20  0012               	return		;funcret
  2077  003B22                     __end_of_InitBBSPI:
  2078                           	opt callstack 0
  2079                           
  2080 ;; *************** function _set_time_process *****************
  2081 ;; Defined at:
  2082 ;;		line 27 in file "main.c"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;		None
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;  temp            2   42[BANK0 ] int 
  2087 ;;  temp            2   40[BANK0 ] int 
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  1    wreg      void 
  2090 ;; Registers used:
  2091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2098 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2099 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2100 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2101 ;;Total ram usage:        6 bytes
  2102 ;; Hardware stack levels used:    1
  2103 ;; Hardware stack levels required when called:   10
  2104 ;; This function calls:
  2105 ;;		_LCDPrint
  2106 ;;		_LCDPrintChar
  2107 ;;		_LCDPutInst
  2108 ;;		___awdiv
  2109 ;;		___awmod
  2110 ;;		_register_timer
  2111 ;;		_remove_timer
  2112 ;; This function is called by:
  2113 ;;		_main
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           	psect	text11
  2118  0015F6                     __ptext11:
  2119                           	opt callstack 0
  2120  0015F6                     _set_time_process:
  2121                           	opt callstack 20
  2122  0015F6                     
  2123                           ;main.c: 28:     switch(state_settime) {
  2124  0015F6  EF3A  F00D         	goto	l3554
  2125  0015FA                     l3444:
  2126                           
  2127                           ; BSR set to: 0
  2128                           ;main.c: 30:             if(RB0_pressed) {
  2129  0015FA  519B               	movf	_RB0_pressed& (0+255),w,b
  2130  0015FC  B4D8               	btfsc	status,2,c
  2131  0015FE  EF03  F00B         	goto	u2701
  2132  001602  EF05  F00B         	goto	u2700
  2133  001606                     u2701:
  2134  001606  EF5C  F00D         	goto	l103
  2135  00160A                     u2700:
  2136  00160A                     
  2137                           ; BSR set to: 0
  2138                           ;main.c: 31:                 RB0_pressed = 0;
  2139  00160A  0E00               	movlw	0
  2140  00160C  6F9B               	movwf	_RB0_pressed& (0+255),b
  2141                           
  2142                           ;main.c: 32:                 isSet = 1;
  2143  00160E  0E01               	movlw	1
  2144  001610  6F94               	movwf	_isSet& (0+255),b
  2145                           
  2146                           ;main.c: 33:                 state_settime = 1;
  2147  001612  0E01               	movlw	1
  2148  001614  6F97               	movwf	_state_settime& (0+255),b	;volatile
  2149  001616                     
  2150                           ; BSR set to: 0
  2151                           ;main.c: 34:                 LCDPutInst(0x01);
  2152  001616  0E01               	movlw	1
  2153  001618  ECDA  F01B         	call	_LCDPutInst
  2154  00161C                     
  2155                           ;main.c: 35:                 LCDPrint(0, 0, "Set time");
  2156  00161C  0E00               	movlw	0
  2157  00161E  0100               	movlb	0	; () banked
  2158  001620  6FA8               	movwf	LCDPrint@pos& (0+255),b
  2159  001622  0E66               	movlw	low STR_1
  2160  001624  6FA9               	movwf	LCDPrint@ptr& (0+255),b
  2161  001626  0E10               	movlw	high STR_1
  2162  001628  6FAA               	movwf	(LCDPrint@ptr+1)& (0+255),b
  2163  00162A  0E00               	movlw	0
  2164  00162C  EC98  F01B         	call	_LCDPrint
  2165  001630                     
  2166                           ;main.c: 36:                 int temp = period/1000;
  2167  001630  C0CF  F09D         	movff	_period,___awdiv@dividend
  2168  001634  C0D0  F09E         	movff	_period+1,___awdiv@dividend+1
  2169  001638  0E03               	movlw	3
  2170  00163A  0100               	movlb	0	; () banked
  2171  00163C  6FA0               	movwf	(___awdiv@divisor+1)& (0+255),b
  2172  00163E  0EE8               	movlw	232
  2173  001640  6F9F               	movwf	___awdiv@divisor& (0+255),b
  2174  001642  EC52  F017         	call	___awdiv	;wreg free
  2175  001646  C09D  F0C5         	movff	?___awdiv,set_time_process@temp
  2176  00164A  C09E  F0C6         	movff	?___awdiv+1,set_time_process@temp+1
  2177  00164E                     
  2178                           ;main.c: 37:                 LCDPrintChar(0, 10, temp / 10 + '0');
  2179  00164E  0E0A               	movlw	10
  2180  001650  0100               	movlb	0	; () banked
  2181  001652  6FA8               	movwf	LCDPrintChar@pos& (0+255),b
  2182  001654  C0C5  F09D         	movff	set_time_process@temp,___awdiv@dividend
  2183  001658  C0C6  F09E         	movff	set_time_process@temp+1,___awdiv@dividend+1
  2184  00165C  0E00               	movlw	0
  2185  00165E  6FA0               	movwf	(___awdiv@divisor+1)& (0+255),b
  2186  001660  0E0A               	movlw	10
  2187  001662  6F9F               	movwf	___awdiv@divisor& (0+255),b
  2188  001664  EC52  F017         	call	___awdiv	;wreg free
  2189  001668  0100               	movlb	0	; () banked
  2190  00166A  519D               	movf	?___awdiv& (0+255),w,b
  2191  00166C  0F30               	addlw	48
  2192  00166E  6FA9               	movwf	LCDPrintChar@ch& (0+255),b
  2193  001670  0E00               	movlw	0
  2194  001672  EC3B  F01C         	call	_LCDPrintChar
  2195  001676                     
  2196                           ;main.c: 38:                 LCDPrintChar(0, 11, temp % 10 + '0');
  2197  001676  0E0B               	movlw	11
  2198  001678  0100               	movlb	0	; () banked
  2199  00167A  6FA8               	movwf	LCDPrintChar@pos& (0+255),b
  2200  00167C  C0C5  F09D         	movff	set_time_process@temp,___awmod@dividend
  2201  001680  C0C6  F09E         	movff	set_time_process@temp+1,___awmod@dividend+1
  2202  001684  0E00               	movlw	0
  2203  001686  6FA0               	movwf	(___awmod@divisor+1)& (0+255),b
  2204  001688  0E0A               	movlw	10
  2205  00168A  6F9F               	movwf	___awmod@divisor& (0+255),b
  2206  00168C  EC70  F018         	call	___awmod	;wreg free
  2207  001690  0100               	movlb	0	; () banked
  2208  001692  519D               	movf	?___awmod& (0+255),w,b
  2209  001694  0F30               	addlw	48
  2210  001696  6FA9               	movwf	LCDPrintChar@ch& (0+255),b
  2211  001698  0E00               	movlw	0
  2212  00169A  EC3B  F01C         	call	_LCDPrintChar
  2213  00169E                     
  2214                           ;main.c: 39:                 LCDPrintChar(0, 12, 's');
  2215  00169E  0E0C               	movlw	12
  2216  0016A0  0100               	movlb	0	; () banked
  2217  0016A2  6FA8               	movwf	LCDPrintChar@pos& (0+255),b
  2218  0016A4  0E73               	movlw	115
  2219  0016A6  6FA9               	movwf	LCDPrintChar@ch& (0+255),b
  2220  0016A8  0E00               	movlw	0
  2221  0016AA  EC3B  F01C         	call	_LCDPrintChar
  2222  0016AE                     
  2223                           ;main.c: 40:                 _delay((unsigned long)((2000)*(8000000/4000.0)));
  2224  0016AE  0E15               	movlw	21
  2225  0016B0  0100               	movlb	0	; () banked
  2226  0016B2  6FC4               	movwf	(??_set_time_process+1)& (0+255),b
  2227  0016B4  0E4B               	movlw	75
  2228  0016B6  6FC3               	movwf	??_set_time_process& (0+255),b
  2229  0016B8  0EBE               	movlw	190
  2230  0016BA                     u3227:
  2231  0016BA  2EE8               	decfsz	wreg,f,c
  2232  0016BC  D7FE               	bra	u3227
  2233  0016BE  2FC3               	decfsz	??_set_time_process& (0+255),f,b
  2234  0016C0  D7FC               	bra	u3227
  2235  0016C2  2FC4               	decfsz	(??_set_time_process+1)& (0+255),f,b
  2236  0016C4  D7FA               	bra	u3227
  2237  0016C6  F000               	nop	
  2238  0016C8  EF5C  F00D         	goto	l103
  2239  0016CC                     l3462:
  2240                           
  2241                           ; BSR set to: 0
  2242                           ;main.c: 44:             if(RA5_pressed) {
  2243  0016CC  519C               	movf	_RA5_pressed& (0+255),w,b
  2244  0016CE  B4D8               	btfsc	status,2,c
  2245  0016D0  EF6C  F00B         	goto	u2711
  2246  0016D4  EF6E  F00B         	goto	u2710
  2247  0016D8                     u2711:
  2248  0016D8  EFC4  F00B         	goto	l88
  2249  0016DC                     u2710:
  2250  0016DC                     
  2251                           ; BSR set to: 0
  2252                           ;main.c: 45:                 RA5_pressed = 0;
  2253  0016DC  0E00               	movlw	0
  2254  0016DE  6F9C               	movwf	_RA5_pressed& (0+255),b
  2255  0016E0                     
  2256                           ; BSR set to: 0
  2257                           ;main.c: 47:                 period+= 1000;
  2258  0016E0  0EE8               	movlw	232
  2259  0016E2  27CF               	addwf	_period& (0+255),f,b
  2260  0016E4  0E03               	movlw	3
  2261  0016E6  23D0               	addwfc	(_period+1)& (0+255),f,b
  2262  0016E8                     
  2263                           ; BSR set to: 0
  2264                           ;main.c: 48:                 if(period >= 20000)
  2265  0016E8  BFD0               	btfsc	(_period+1)& (0+255),7,b
  2266  0016EA  EF80  F00B         	goto	u2721
  2267  0016EE  0E20               	movlw	32
  2268  0016F0  5DCF               	subwf	_period& (0+255),w,b
  2269  0016F2  0E4E               	movlw	78
  2270  0016F4  59D0               	subwfb	(_period+1)& (0+255),w,b
  2271  0016F6  A0D8               	btfss	status,0,c
  2272  0016F8  EF80  F00B         	goto	u2721
  2273  0016FC  EF82  F00B         	goto	u2720
  2274  001700                     u2721:
  2275  001700  EF86  F00B         	goto	l3472
  2276  001704                     u2720:
  2277  001704                     
  2278                           ; BSR set to: 0
  2279                           ;main.c: 49:                     period = 1000;
  2280  001704  0E03               	movlw	3
  2281  001706  6FD0               	movwf	(_period+1)& (0+255),b
  2282  001708  0EE8               	movlw	232
  2283  00170A  6FCF               	movwf	_period& (0+255),b
  2284  00170C                     l3472:
  2285                           
  2286                           ; BSR set to: 0
  2287                           ;main.c: 50:                 int temp = period/1000;
  2288  00170C  C0CF  F09D         	movff	_period,___awdiv@dividend
  2289  001710  C0D0  F09E         	movff	_period+1,___awdiv@dividend+1
  2290  001714  0E03               	movlw	3
  2291  001716  6FA0               	movwf	(___awdiv@divisor+1)& (0+255),b
  2292  001718  0EE8               	movlw	232
  2293  00171A  6F9F               	movwf	___awdiv@divisor& (0+255),b
  2294  00171C  EC52  F017         	call	___awdiv	;wreg free
  2295  001720  C09D  F0C7         	movff	?___awdiv,set_time_process@temp_161
  2296  001724  C09E  F0C8         	movff	?___awdiv+1,set_time_process@temp_161+1
  2297  001728                     
  2298                           ;main.c: 51:                 LCDPrintChar(0, 10, temp / 10 + '0');
  2299  001728  0E0A               	movlw	10
  2300  00172A  0100               	movlb	0	; () banked
  2301  00172C  6FA8               	movwf	LCDPrintChar@pos& (0+255),b
  2302  00172E  C0C7  F09D         	movff	set_time_process@temp_161,___awdiv@dividend
  2303  001732  C0C8  F09E         	movff	set_time_process@temp_161+1,___awdiv@dividend+1
  2304  001736  0E00               	movlw	0
  2305  001738  6FA0               	movwf	(___awdiv@divisor+1)& (0+255),b
  2306  00173A  0E0A               	movlw	10
  2307  00173C  6F9F               	movwf	___awdiv@divisor& (0+255),b
  2308  00173E  EC52  F017         	call	___awdiv	;wreg free
  2309  001742  0100               	movlb	0	; () banked
  2310  001744  519D               	movf	?___awdiv& (0+255),w,b
  2311  001746  0F30               	addlw	48
  2312  001748  6FA9               	movwf	LCDPrintChar@ch& (0+255),b
  2313  00174A  0E00               	movlw	0
  2314  00174C  EC3B  F01C         	call	_LCDPrintChar
  2315  001750                     
  2316                           ;main.c: 52:                 LCDPrintChar(0, 11, temp % 10 + '0');
  2317  001750  0E0B               	movlw	11
  2318  001752  0100               	movlb	0	; () banked
  2319  001754  6FA8               	movwf	LCDPrintChar@pos& (0+255),b
  2320  001756  C0C7  F09D         	movff	set_time_process@temp_161,___awmod@dividend
  2321  00175A  C0C8  F09E         	movff	set_time_process@temp_161+1,___awmod@dividend+1
  2322  00175E  0E00               	movlw	0
  2323  001760  6FA0               	movwf	(___awmod@divisor+1)& (0+255),b
  2324  001762  0E0A               	movlw	10
  2325  001764  6F9F               	movwf	___awmod@divisor& (0+255),b
  2326  001766  EC70  F018         	call	___awmod	;wreg free
  2327  00176A  0100               	movlb	0	; () banked
  2328  00176C  519D               	movf	?___awmod& (0+255),w,b
  2329  00176E  0F30               	addlw	48
  2330  001770  6FA9               	movwf	LCDPrintChar@ch& (0+255),b
  2331  001772  0E00               	movlw	0
  2332  001774  EC3B  F01C         	call	_LCDPrintChar
  2333  001778                     
  2334                           ;main.c: 53:                 LCDPrintChar(0, 12, 's');
  2335  001778  0E0C               	movlw	12
  2336  00177A  0100               	movlb	0	; () banked
  2337  00177C  6FA8               	movwf	LCDPrintChar@pos& (0+255),b
  2338  00177E  0E73               	movlw	115
  2339  001780  6FA9               	movwf	LCDPrintChar@ch& (0+255),b
  2340  001782  0E00               	movlw	0
  2341  001784  EC3B  F01C         	call	_LCDPrintChar
  2342  001788                     l88:
  2343                           
  2344                           ;main.c: 55:             if(RB0_pressed) {
  2345  001788  0100               	movlb	0	; () banked
  2346  00178A  519B               	movf	_RB0_pressed& (0+255),w,b
  2347  00178C  B4D8               	btfsc	status,2,c
  2348  00178E  EFCB  F00B         	goto	u2731
  2349  001792  EFCD  F00B         	goto	u2730
  2350  001796                     u2731:
  2351  001796  EF5C  F00D         	goto	l103
  2352  00179A                     u2730:
  2353  00179A                     
  2354                           ; BSR set to: 0
  2355                           ;main.c: 56:                 RB0_pressed = 0;
  2356  00179A  0E00               	movlw	0
  2357  00179C  6F9B               	movwf	_RB0_pressed& (0+255),b
  2358  00179E                     
  2359                           ; BSR set to: 0
  2360                           ;main.c: 57:                 remove_timer(task_id[1]);
  2361  00179E  5161               	movf	(_task_id+1)& (0+255),w,b
  2362  0017A0  EC98  F013         	call	_remove_timer
  2363  0017A4                     
  2364                           ;main.c: 58:                 task_id[1] = register_timer(period, 0, changeState, ((void*
      +                          )0));
  2365  0017A4  C0CF  F0A3         	movff	_period,register_timer@period
  2366  0017A8  C0D0  F0A4         	movff	_period+1,register_timer@period+1
  2367  0017AC  0100               	movlb	0	; () banked
  2368  0017AE  0E00               	movlw	0
  2369  0017B0  BFA4               	btfsc	(register_timer@period+1)& (0+255),7,b
  2370  0017B2  0EFF               	movlw	-1
  2371  0017B4  6FA5               	movwf	(register_timer@period+2)& (0+255),b
  2372  0017B6  6FA6               	movwf	(register_timer@period+3)& (0+255),b
  2373  0017B8  0E00               	movlw	0
  2374  0017BA  6FA7               	movwf	register_timer@delay& (0+255),b
  2375  0017BC  0E00               	movlw	0
  2376  0017BE  6FA8               	movwf	(register_timer@delay+1)& (0+255),b
  2377  0017C0  0E00               	movlw	0
  2378  0017C2  6FA9               	movwf	(register_timer@delay+2)& (0+255),b
  2379  0017C4  0E00               	movlw	0
  2380  0017C6  6FAA               	movwf	(register_timer@delay+3)& (0+255),b
  2381  0017C8  0E6A               	movlw	low _changeState
  2382  0017CA  6FAB               	movwf	register_timer@callback& (0+255),b
  2383  0017CC  0E2F               	movlw	high _changeState
  2384  0017CE  6FAC               	movwf	(register_timer@callback+1)& (0+255),b
  2385  0017D0  0E00               	movlw	low (_changeState shr (0+16))
  2386  0017D2  6FAD               	movwf	(register_timer@callback+2)& (0+255),b
  2387  0017D4  0E00               	movlw	0
  2388  0017D6  6FAE               	movwf	register_timer@data_ptr& (0+255),b
  2389  0017D8  0E00               	movlw	0
  2390  0017DA  6FAF               	movwf	(register_timer@data_ptr+1)& (0+255),b
  2391  0017DC  EC57  F00F         	call	_register_timer	;wreg free
  2392  0017E0  0100               	movlb	0	; () banked
  2393  0017E2  6F61               	movwf	(_task_id+1)& (0+255),b
  2394  0017E4                     
  2395                           ; BSR set to: 0
  2396                           ;main.c: 59:                 state_settime = 2;
  2397  0017E4  0E02               	movlw	2
  2398  0017E6  6F97               	movwf	_state_settime& (0+255),b	;volatile
  2399  0017E8                     
  2400                           ; BSR set to: 0
  2401                           ;main.c: 60:                 LCDPutInst(0x01);
  2402  0017E8  0E01               	movlw	1
  2403  0017EA  ECDA  F01B         	call	_LCDPutInst
  2404  0017EE                     
  2405                           ;main.c: 61:                 LCDPrint(0, 0, "Set temp");
  2406  0017EE  0E00               	movlw	0
  2407  0017F0  0100               	movlb	0	; () banked
  2408  0017F2  6FA8               	movwf	LCDPrint@pos& (0+255),b
  2409  0017F4  0E6F               	movlw	low STR_2
  2410  0017F6  6FA9               	movwf	LCDPrint@ptr& (0+255),b
  2411  0017F8  0E10               	movlw	high STR_2
  2412  0017FA  6FAA               	movwf	(LCDPrint@ptr+1)& (0+255),b
  2413  0017FC  0E00               	movlw	0
  2414  0017FE  EC98  F01B         	call	_LCDPrint
  2415  001802                     
  2416                           ;main.c: 62:                 LCDPrintChar(0, 10, max_temperature / 10 + '0');
  2417  001802  0E0A               	movlw	10
  2418  001804  0100               	movlb	0	; () banked
  2419  001806  6FA8               	movwf	LCDPrintChar@pos& (0+255),b
  2420  001808  C0D6  F09D         	movff	_max_temperature,___awdiv@dividend	;volatile
  2421  00180C  6B9E               	clrf	(___awdiv@dividend+1)& (0+255),b
  2422  00180E  0E00               	movlw	0
  2423  001810  6FA0               	movwf	(___awdiv@divisor+1)& (0+255),b
  2424  001812  0E0A               	movlw	10
  2425  001814  6F9F               	movwf	___awdiv@divisor& (0+255),b
  2426  001816  EC52  F017         	call	___awdiv	;wreg free
  2427  00181A  0100               	movlb	0	; () banked
  2428  00181C  519D               	movf	?___awdiv& (0+255),w,b
  2429  00181E  0F30               	addlw	48
  2430  001820  6FA9               	movwf	LCDPrintChar@ch& (0+255),b
  2431  001822  0E00               	movlw	0
  2432  001824  EC3B  F01C         	call	_LCDPrintChar
  2433  001828                     
  2434                           ;main.c: 63:                 LCDPrintChar(0, 11, max_temperature % 10 + '0');
  2435  001828  0E0B               	movlw	11
  2436  00182A  0100               	movlb	0	; () banked
  2437  00182C  6FA8               	movwf	LCDPrintChar@pos& (0+255),b
  2438  00182E  C0D6  F09D         	movff	_max_temperature,___awmod@dividend	;volatile
  2439  001832  6B9E               	clrf	(___awmod@dividend+1)& (0+255),b
  2440  001834  0E00               	movlw	0
  2441  001836  6FA0               	movwf	(___awmod@divisor+1)& (0+255),b
  2442  001838  0E0A               	movlw	10
  2443  00183A  6F9F               	movwf	___awmod@divisor& (0+255),b
  2444  00183C  EC70  F018         	call	___awmod	;wreg free
  2445  001840  0100               	movlb	0	; () banked
  2446  001842  519D               	movf	?___awmod& (0+255),w,b
  2447  001844  0F30               	addlw	48
  2448  001846  6FA9               	movwf	LCDPrintChar@ch& (0+255),b
  2449  001848  0E00               	movlw	0
  2450  00184A  EC3B  F01C         	call	_LCDPrintChar
  2451  00184E  EF5C  F00D         	goto	l103
  2452  001852                     l3496:
  2453                           
  2454                           ; BSR set to: 0
  2455                           ;main.c: 67:             if(RA5_pressed) {
  2456  001852  519C               	movf	_RA5_pressed& (0+255),w,b
  2457  001854  B4D8               	btfsc	status,2,c
  2458  001856  EF2F  F00C         	goto	u2741
  2459  00185A  EF31  F00C         	goto	u2740
  2460  00185E                     u2741:
  2461  00185E  EF63  F00C         	goto	l92
  2462  001862                     u2740:
  2463  001862                     
  2464                           ; BSR set to: 0
  2465                           ;main.c: 68:                 RA5_pressed = 0;
  2466  001862  0E00               	movlw	0
  2467  001864  6F9C               	movwf	_RA5_pressed& (0+255),b
  2468  001866                     
  2469                           ; BSR set to: 0
  2470                           ;main.c: 70:                 max_temperature+= 1;
  2471  001866  2BD6               	incf	_max_temperature& (0+255),f,b	;volatile
  2472  001868                     
  2473                           ; BSR set to: 0
  2474                           ;main.c: 71:                 if(max_temperature >= 100)
  2475  001868  0E63               	movlw	99
  2476  00186A  65D6               	cpfsgt	_max_temperature& (0+255),b	;volatile
  2477  00186C  EF3A  F00C         	goto	u2751
  2478  001870  EF3C  F00C         	goto	u2750
  2479  001874                     u2751:
  2480  001874  EF3E  F00C         	goto	l3506
  2481  001878                     u2750:
  2482  001878                     
  2483                           ; BSR set to: 0
  2484                           ;main.c: 72:                     max_temperature = 27;
  2485  001878  0E1B               	movlw	27
  2486  00187A  6FD6               	movwf	_max_temperature& (0+255),b	;volatile
  2487  00187C                     l3506:
  2488                           
  2489                           ; BSR set to: 0
  2490                           ;main.c: 74:                 LCDPrintChar(0, 10, max_temperature / 10 + '0');
  2491  00187C  0E0A               	movlw	10
  2492  00187E  6FA8               	movwf	LCDPrintChar@pos& (0+255),b
  2493  001880  C0D6  F09D         	movff	_max_temperature,___awdiv@dividend	;volatile
  2494  001884  6B9E               	clrf	(___awdiv@dividend+1)& (0+255),b
  2495  001886  0E00               	movlw	0
  2496  001888  6FA0               	movwf	(___awdiv@divisor+1)& (0+255),b
  2497  00188A  0E0A               	movlw	10
  2498  00188C  6F9F               	movwf	___awdiv@divisor& (0+255),b
  2499  00188E  EC52  F017         	call	___awdiv	;wreg free
  2500  001892  0100               	movlb	0	; () banked
  2501  001894  519D               	movf	?___awdiv& (0+255),w,b
  2502  001896  0F30               	addlw	48
  2503  001898  6FA9               	movwf	LCDPrintChar@ch& (0+255),b
  2504  00189A  0E00               	movlw	0
  2505  00189C  EC3B  F01C         	call	_LCDPrintChar
  2506  0018A0                     
  2507                           ;main.c: 75:                 LCDPrintChar(0, 11, max_temperature % 10 + '0');
  2508  0018A0  0E0B               	movlw	11
  2509  0018A2  0100               	movlb	0	; () banked
  2510  0018A4  6FA8               	movwf	LCDPrintChar@pos& (0+255),b
  2511  0018A6  C0D6  F09D         	movff	_max_temperature,___awmod@dividend	;volatile
  2512  0018AA  6B9E               	clrf	(___awmod@dividend+1)& (0+255),b
  2513  0018AC  0E00               	movlw	0
  2514  0018AE  6FA0               	movwf	(___awmod@divisor+1)& (0+255),b
  2515  0018B0  0E0A               	movlw	10
  2516  0018B2  6F9F               	movwf	___awmod@divisor& (0+255),b
  2517  0018B4  EC70  F018         	call	___awmod	;wreg free
  2518  0018B8  0100               	movlb	0	; () banked
  2519  0018BA  519D               	movf	?___awmod& (0+255),w,b
  2520  0018BC  0F30               	addlw	48
  2521  0018BE  6FA9               	movwf	LCDPrintChar@ch& (0+255),b
  2522  0018C0  0E00               	movlw	0
  2523  0018C2  EC3B  F01C         	call	_LCDPrintChar
  2524  0018C6                     l92:
  2525                           
  2526                           ;main.c: 78:             if(RB0_pressed) {
  2527  0018C6  0100               	movlb	0	; () banked
  2528  0018C8  519B               	movf	_RB0_pressed& (0+255),w,b
  2529  0018CA  B4D8               	btfsc	status,2,c
  2530  0018CC  EF6A  F00C         	goto	u2761
  2531  0018D0  EF6C  F00C         	goto	u2760
  2532  0018D4                     u2761:
  2533  0018D4  EF5C  F00D         	goto	l103
  2534  0018D8                     u2760:
  2535  0018D8                     
  2536                           ; BSR set to: 0
  2537                           ;main.c: 79:                 RB0_pressed = 0;
  2538  0018D8  0E00               	movlw	0
  2539  0018DA  6F9B               	movwf	_RB0_pressed& (0+255),b
  2540                           
  2541                           ;main.c: 80:                 state_settime = 3;
  2542  0018DC  0E03               	movlw	3
  2543  0018DE  6F97               	movwf	_state_settime& (0+255),b	;volatile
  2544  0018E0                     
  2545                           ; BSR set to: 0
  2546                           ;main.c: 81:                 LCDPutInst(0x01);
  2547  0018E0  0E01               	movlw	1
  2548  0018E2  ECDA  F01B         	call	_LCDPutInst
  2549  0018E6                     
  2550                           ;main.c: 82:                 LCDPrint(0, 0, "Set humid");
  2551  0018E6  0E00               	movlw	0
  2552  0018E8  0100               	movlb	0	; () banked
  2553  0018EA  6FA8               	movwf	LCDPrint@pos& (0+255),b
  2554  0018EC  0E52               	movlw	low STR_3
  2555  0018EE  6FA9               	movwf	LCDPrint@ptr& (0+255),b
  2556  0018F0  0E10               	movlw	high STR_3
  2557  0018F2  6FAA               	movwf	(LCDPrint@ptr+1)& (0+255),b
  2558  0018F4  0E00               	movlw	0
  2559  0018F6  EC98  F01B         	call	_LCDPrint
  2560  0018FA                     
  2561                           ;main.c: 83:                 LCDPrintChar(0, 10, min_humidity / 10 + '0');
  2562  0018FA  0E0A               	movlw	10
  2563  0018FC  0100               	movlb	0	; () banked
  2564  0018FE  6FA8               	movwf	LCDPrintChar@pos& (0+255),b
  2565  001900  C0D5  F09D         	movff	_min_humidity,___awdiv@dividend	;volatile
  2566  001904  6B9E               	clrf	(___awdiv@dividend+1)& (0+255),b
  2567  001906  0E00               	movlw	0
  2568  001908  6FA0               	movwf	(___awdiv@divisor+1)& (0+255),b
  2569  00190A  0E0A               	movlw	10
  2570  00190C  6F9F               	movwf	___awdiv@divisor& (0+255),b
  2571  00190E  EC52  F017         	call	___awdiv	;wreg free
  2572  001912  0100               	movlb	0	; () banked
  2573  001914  519D               	movf	?___awdiv& (0+255),w,b
  2574  001916  0F30               	addlw	48
  2575  001918  6FA9               	movwf	LCDPrintChar@ch& (0+255),b
  2576  00191A  0E00               	movlw	0
  2577  00191C  EC3B  F01C         	call	_LCDPrintChar
  2578  001920                     
  2579                           ;main.c: 84:                 LCDPrintChar(0, 11, min_humidity % 10 + '0');
  2580  001920  0E0B               	movlw	11
  2581  001922  0100               	movlb	0	; () banked
  2582  001924  6FA8               	movwf	LCDPrintChar@pos& (0+255),b
  2583  001926  C0D5  F09D         	movff	_min_humidity,___awmod@dividend	;volatile
  2584  00192A  6B9E               	clrf	(___awmod@dividend+1)& (0+255),b
  2585  00192C  0E00               	movlw	0
  2586  00192E  6FA0               	movwf	(___awmod@divisor+1)& (0+255),b
  2587  001930  0E0A               	movlw	10
  2588  001932  6F9F               	movwf	___awmod@divisor& (0+255),b
  2589  001934  EC70  F018         	call	___awmod	;wreg free
  2590  001938  0100               	movlb	0	; () banked
  2591  00193A  519D               	movf	?___awmod& (0+255),w,b
  2592  00193C  0F30               	addlw	48
  2593  00193E  6FA9               	movwf	LCDPrintChar@ch& (0+255),b
  2594  001940  0E00               	movlw	0
  2595  001942  EC3B  F01C         	call	_LCDPrintChar
  2596  001946  EF5C  F00D         	goto	l103
  2597  00194A                     l3520:
  2598                           
  2599                           ; BSR set to: 0
  2600                           ;main.c: 88:             if(RA5_pressed) {
  2601  00194A  519C               	movf	_RA5_pressed& (0+255),w,b
  2602  00194C  B4D8               	btfsc	status,2,c
  2603  00194E  EFAB  F00C         	goto	u2771
  2604  001952  EFAD  F00C         	goto	u2770
  2605  001956                     u2771:
  2606  001956  EFDF  F00C         	goto	l96
  2607  00195A                     u2770:
  2608  00195A                     
  2609                           ; BSR set to: 0
  2610                           ;main.c: 89:                 RA5_pressed = 0;
  2611  00195A  0E00               	movlw	0
  2612  00195C  6F9C               	movwf	_RA5_pressed& (0+255),b
  2613  00195E                     
  2614                           ; BSR set to: 0
  2615                           ;main.c: 91:                 min_humidity-= 1;
  2616  00195E  07D5               	decf	_min_humidity& (0+255),f,b	;volatile
  2617  001960                     
  2618                           ; BSR set to: 0
  2619                           ;main.c: 92:                 if(min_humidity <= 10)
  2620  001960  0E0B               	movlw	11
  2621  001962  61D5               	cpfslt	_min_humidity& (0+255),b	;volatile
  2622  001964  EFB6  F00C         	goto	u2781
  2623  001968  EFB8  F00C         	goto	u2780
  2624  00196C                     u2781:
  2625  00196C  EFBA  F00C         	goto	l3530
  2626  001970                     u2780:
  2627  001970                     
  2628                           ; BSR set to: 0
  2629                           ;main.c: 93:                     min_humidity = 80;
  2630  001970  0E50               	movlw	80
  2631  001972  6FD5               	movwf	_min_humidity& (0+255),b	;volatile
  2632  001974                     l3530:
  2633                           
  2634                           ; BSR set to: 0
  2635                           ;main.c: 95:                 LCDPrintChar(0, 10, min_humidity / 10 + '0');
  2636  001974  0E0A               	movlw	10
  2637  001976  6FA8               	movwf	LCDPrintChar@pos& (0+255),b
  2638  001978  C0D5  F09D         	movff	_min_humidity,___awdiv@dividend	;volatile
  2639  00197C  6B9E               	clrf	(___awdiv@dividend+1)& (0+255),b
  2640  00197E  0E00               	movlw	0
  2641  001980  6FA0               	movwf	(___awdiv@divisor+1)& (0+255),b
  2642  001982  0E0A               	movlw	10
  2643  001984  6F9F               	movwf	___awdiv@divisor& (0+255),b
  2644  001986  EC52  F017         	call	___awdiv	;wreg free
  2645  00198A  0100               	movlb	0	; () banked
  2646  00198C  519D               	movf	?___awdiv& (0+255),w,b
  2647  00198E  0F30               	addlw	48
  2648  001990  6FA9               	movwf	LCDPrintChar@ch& (0+255),b
  2649  001992  0E00               	movlw	0
  2650  001994  EC3B  F01C         	call	_LCDPrintChar
  2651  001998                     
  2652                           ;main.c: 96:                 LCDPrintChar(0, 11, min_humidity % 10 + '0');
  2653  001998  0E0B               	movlw	11
  2654  00199A  0100               	movlb	0	; () banked
  2655  00199C  6FA8               	movwf	LCDPrintChar@pos& (0+255),b
  2656  00199E  C0D5  F09D         	movff	_min_humidity,___awmod@dividend	;volatile
  2657  0019A2  6B9E               	clrf	(___awmod@dividend+1)& (0+255),b
  2658  0019A4  0E00               	movlw	0
  2659  0019A6  6FA0               	movwf	(___awmod@divisor+1)& (0+255),b
  2660  0019A8  0E0A               	movlw	10
  2661  0019AA  6F9F               	movwf	___awmod@divisor& (0+255),b
  2662  0019AC  EC70  F018         	call	___awmod	;wreg free
  2663  0019B0  0100               	movlb	0	; () banked
  2664  0019B2  519D               	movf	?___awmod& (0+255),w,b
  2665  0019B4  0F30               	addlw	48
  2666  0019B6  6FA9               	movwf	LCDPrintChar@ch& (0+255),b
  2667  0019B8  0E00               	movlw	0
  2668  0019BA  EC3B  F01C         	call	_LCDPrintChar
  2669  0019BE                     l96:
  2670                           
  2671                           ;main.c: 99:             if(RB0_pressed) {
  2672  0019BE  0100               	movlb	0	; () banked
  2673  0019C0  519B               	movf	_RB0_pressed& (0+255),w,b
  2674  0019C2  B4D8               	btfsc	status,2,c
  2675  0019C4  EFE6  F00C         	goto	u2791
  2676  0019C8  EFE8  F00C         	goto	u2790
  2677  0019CC                     u2791:
  2678  0019CC  EF5C  F00D         	goto	l103
  2679  0019D0                     u2790:
  2680  0019D0                     
  2681                           ; BSR set to: 0
  2682                           ;main.c: 100:                 RB0_pressed = 0;
  2683  0019D0  0E00               	movlw	0
  2684  0019D2  6F9B               	movwf	_RB0_pressed& (0+255),b
  2685                           
  2686                           ;main.c: 101:                 state_settime = 4;
  2687  0019D4  0E04               	movlw	4
  2688  0019D6  6F97               	movwf	_state_settime& (0+255),b	;volatile
  2689  0019D8  EF5C  F00D         	goto	l103
  2690  0019DC                     l3536:
  2691                           
  2692                           ; BSR set to: 0
  2693                           ;main.c: 105:             isSet = 0;
  2694  0019DC  0E00               	movlw	0
  2695  0019DE  6F94               	movwf	_isSet& (0+255),b
  2696                           
  2697                           ;main.c: 106:             state_settime = 0;
  2698  0019E0  0E00               	movlw	0
  2699  0019E2  6F97               	movwf	_state_settime& (0+255),b	;volatile
  2700  0019E4                     
  2701                           ; BSR set to: 0
  2702                           ;main.c: 107:             LCDPrint(0, 0, "Set successful");
  2703  0019E4  0E00               	movlw	0
  2704  0019E6  6FA8               	movwf	LCDPrint@pos& (0+255),b
  2705  0019E8  0E43               	movlw	low STR_4
  2706  0019EA  6FA9               	movwf	LCDPrint@ptr& (0+255),b
  2707  0019EC  0E10               	movlw	high STR_4
  2708  0019EE  6FAA               	movwf	(LCDPrint@ptr+1)& (0+255),b
  2709  0019F0  0E00               	movlw	0
  2710  0019F2  EC98  F01B         	call	_LCDPrint
  2711  0019F6                     
  2712                           ;main.c: 108:             _delay((unsigned long)((2000)*(8000000/4000.0)));
  2713  0019F6  0E15               	movlw	21
  2714  0019F8  0100               	movlb	0	; () banked
  2715  0019FA  6FC4               	movwf	(??_set_time_process+1)& (0+255),b
  2716  0019FC  0E4B               	movlw	75
  2717  0019FE  6FC3               	movwf	??_set_time_process& (0+255),b
  2718  001A00  0EBE               	movlw	190
  2719  001A02                     u3237:
  2720  001A02  2EE8               	decfsz	wreg,f,c
  2721  001A04  D7FE               	bra	u3237
  2722  001A06  2FC3               	decfsz	??_set_time_process& (0+255),f,b
  2723  001A08  D7FC               	bra	u3237
  2724  001A0A  2FC4               	decfsz	(??_set_time_process+1)& (0+255),f,b
  2725  001A0C  D7FA               	bra	u3237
  2726  001A0E  F000               	nop	
  2727  001A10                     
  2728                           ;main.c: 109:             LCDPrint(0, 0, "              ");
  2729  001A10  0E00               	movlw	0
  2730  001A12  0100               	movlb	0	; () banked
  2731  001A14  6FA8               	movwf	LCDPrint@pos& (0+255),b
  2732  001A16  0E34               	movlw	low STR_5
  2733  001A18  6FA9               	movwf	LCDPrint@ptr& (0+255),b
  2734  001A1A  0E10               	movlw	high STR_5
  2735  001A1C  6FAA               	movwf	(LCDPrint@ptr+1)& (0+255),b
  2736  001A1E  0E00               	movlw	0
  2737  001A20  EC98  F01B         	call	_LCDPrint
  2738  001A24                     
  2739                           ;main.c: 110:             if(state == HEATER) LCDPrint(0, 0, "Heater");
  2740  001A24  0100               	movlb	0	; () banked
  2741  001A26  0598               	decf	_state& (0+255),w,b	;volatile
  2742  001A28  A4D8               	btfss	status,2,c
  2743  001A2A  EF19  F00D         	goto	u2801
  2744  001A2E  EF1B  F00D         	goto	u2800
  2745  001A32                     u2801:
  2746  001A32  EF26  F00D         	goto	l3548
  2747  001A36                     u2800:
  2748  001A36                     
  2749                           ; BSR set to: 0
  2750  001A36  0E00               	movlw	0
  2751  001A38  6FA8               	movwf	LCDPrint@pos& (0+255),b
  2752  001A3A  0E7F               	movlw	low STR_6
  2753  001A3C  6FA9               	movwf	LCDPrint@ptr& (0+255),b
  2754  001A3E  0E10               	movlw	high STR_6
  2755  001A40  6FAA               	movwf	(LCDPrint@ptr+1)& (0+255),b
  2756  001A42  0E00               	movlw	0
  2757  001A44  EC98  F01B         	call	_LCDPrint
  2758  001A48  EF5C  F00D         	goto	l103
  2759  001A4C                     l3548:
  2760                           
  2761                           ; BSR set to: 0
  2762  001A4C  0E02               	movlw	2
  2763  001A4E  1998               	xorwf	_state& (0+255),w,b	;volatile
  2764  001A50  A4D8               	btfss	status,2,c
  2765  001A52  EF2D  F00D         	goto	u2811
  2766  001A56  EF2F  F00D         	goto	u2810
  2767  001A5A                     u2811:
  2768  001A5A  EF5C  F00D         	goto	l103
  2769  001A5E                     u2810:
  2770  001A5E                     
  2771                           ; BSR set to: 0
  2772  001A5E  0E00               	movlw	0
  2773  001A60  6FA8               	movwf	LCDPrint@pos& (0+255),b
  2774  001A62  0E5C               	movlw	low STR_7
  2775  001A64  6FA9               	movwf	LCDPrint@ptr& (0+255),b
  2776  001A66  0E10               	movlw	high STR_7
  2777  001A68  6FAA               	movwf	(LCDPrint@ptr+1)& (0+255),b
  2778  001A6A  0E00               	movlw	0
  2779  001A6C  EC98  F01B         	call	_LCDPrint
  2780  001A70  EF5C  F00D         	goto	l103
  2781  001A74                     l3554:
  2782  001A74  0100               	movlb	0	; () banked
  2783  001A76  5197               	movf	_state_settime& (0+255),w,b	;volatile
  2784  001A78  6FC3               	movwf	??_set_time_process& (0+255),b
  2785  001A7A  6BC4               	clrf	(??_set_time_process+1)& (0+255),b
  2786                           
  2787                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2788                           ; Switch size 1, requested type "simple"
  2789                           ; Number of cases is 1, Range of values is 0 to 0
  2790                           ; switch strategies available:
  2791                           ; Name         Instructions Cycles
  2792                           ; simple_byte            4     3 (average)
  2793                           ;	Chosen strategy is simple_byte
  2794  001A7C  51C4               	movf	(??_set_time_process+1)& (0+255),w,b
  2795  001A7E  0A00               	xorlw	0	; case 0
  2796  001A80  B4D8               	btfsc	status,2,c
  2797  001A82  EF45  F00D         	goto	l4018
  2798  001A86  EF5C  F00D         	goto	l103
  2799  001A8A                     l4018:
  2800                           
  2801                           ; BSR set to: 0
  2802                           ; Switch size 1, requested type "simple"
  2803                           ; Number of cases is 5, Range of values is 0 to 4
  2804                           ; switch strategies available:
  2805                           ; Name         Instructions Cycles
  2806                           ; simple_byte           16     9 (average)
  2807                           ;	Chosen strategy is simple_byte
  2808  001A8A  51C3               	movf	??_set_time_process& (0+255),w,b
  2809  001A8C  0A00               	xorlw	0	; case 0
  2810  001A8E  B4D8               	btfsc	status,2,c
  2811  001A90  EFFD  F00A         	goto	l3444
  2812  001A94  0A01               	xorlw	1	; case 1
  2813  001A96  B4D8               	btfsc	status,2,c
  2814  001A98  EF66  F00B         	goto	l3462
  2815  001A9C  0A03               	xorlw	3	; case 2
  2816  001A9E  B4D8               	btfsc	status,2,c
  2817  001AA0  EF29  F00C         	goto	l3496
  2818  001AA4  0A01               	xorlw	1	; case 3
  2819  001AA6  B4D8               	btfsc	status,2,c
  2820  001AA8  EFA5  F00C         	goto	l3520
  2821  001AAC  0A07               	xorlw	7	; case 4
  2822  001AAE  B4D8               	btfsc	status,2,c
  2823  001AB0  EFEE  F00C         	goto	l3536
  2824  001AB4  EF5C  F00D         	goto	l103
  2825  001AB8                     l103:
  2826  001AB8  0012               	return		;funcret
  2827  001ABA                     __end_of_set_time_process:
  2828                           	opt callstack 0
  2829                           
  2830 ;; *************** function _remove_timer *****************
  2831 ;; Defined at:
  2832 ;;		line 155 in file "clock.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;  id              1    wreg     unsigned char 
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;  id              1    5[BANK0 ] unsigned char 
  2837 ;;  pos             1    4[BANK0 ] unsigned char 
  2838 ;; Return value:  Size  Location     Type
  2839 ;;                  2   10[None  ] int 
  2840 ;; Registers used:
  2841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2842 ;; Tracked objects:
  2843 ;;		On entry : 0/0
  2844 ;;		On exit  : 0/0
  2845 ;;		Unchanged: 0/0
  2846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2848 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2849 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2850 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2851 ;;Total ram usage:        6 bytes
  2852 ;; Hardware stack levels used:    1
  2853 ;; Hardware stack levels required when called:    6
  2854 ;; This function calls:
  2855 ;;		_isEmptyList
  2856 ;; This function is called by:
  2857 ;;		_set_time_process
  2858 ;; This function uses a non-reentrant model
  2859 ;;
  2860                           
  2861                           	psect	text12
  2862  002730                     __ptext12:
  2863                           	opt callstack 0
  2864  002730                     _remove_timer:
  2865                           	opt callstack 23
  2866                           
  2867                           ;incstack = 0
  2868                           ;remove_timer@id stored from wreg
  2869  002730  0100               	movlb	0	; () banked
  2870  002732  6FA2               	movwf	remove_timer@id& (0+255),b
  2871  002734                     
  2872                           ;clock.c: 156:     if(isEmptyList() || task_list[id].func_ptr == ((void*)0))
  2873  002734  EC70  F01D         	call	_isEmptyList	;wreg free
  2874  002738  0900               	iorlw	0
  2875  00273A  A4D8               	btfss	status,2,c
  2876  00273C  EFA2  F013         	goto	u2201
  2877  002740  EFA4  F013         	goto	u2200
  2878  002744                     u2201:
  2879  002744  EF64  F014         	goto	l589
  2880  002748                     u2200:
  2881  002748  0100               	movlb	0	; () banked
  2882  00274A  51A2               	movf	remove_timer@id& (0+255),w,b
  2883  00274C  0D0F               	mullw	15
  2884  00274E  0E6C               	movlw	low (_task_list+8)
  2885  002750  24F3               	addwf	243,w,c
  2886  002752  6ED9               	movwf	fsr2l,c
  2887  002754  0E01               	movlw	high (_task_list+8)
  2888  002756  20F4               	addwfc	prodh,w,c
  2889  002758  6EDA               	movwf	fsr2h,c
  2890  00275A  50DE               	movf	postinc2,w,c
  2891  00275C  10DE               	iorwf	postinc2,w,c
  2892  00275E  10DE               	iorwf	postinc2,w,c
  2893  002760  A4D8               	btfss	status,2,c
  2894  002762  EFB5  F013         	goto	u2211
  2895  002766  EFB7  F013         	goto	u2210
  2896  00276A                     u2211:
  2897  00276A  EFB9  F013         	goto	l3086
  2898  00276E                     u2210:
  2899  00276E  EF64  F014         	goto	l589
  2900  002772                     l3086:
  2901                           
  2902                           ; BSR set to: 0
  2903                           ;clock.c: 158:     task_list[id].delay_t = 0;
  2904  002772  51A2               	movf	remove_timer@id& (0+255),w,b
  2905  002774  0D0F               	mullw	15
  2906  002776  0E64               	movlw	low _task_list
  2907  002778  24F3               	addwf	243,w,c
  2908  00277A  6ED9               	movwf	fsr2l,c
  2909  00277C  0E01               	movlw	high _task_list
  2910  00277E  20F4               	addwfc	prodh,w,c
  2911  002780  6EDA               	movwf	fsr2h,c
  2912  002782  6ADE               	clrf	postinc2,c
  2913  002784  6ADE               	clrf	postinc2,c
  2914  002786  6ADE               	clrf	postinc2,c
  2915  002788  6ADD               	clrf	postdec2,c
  2916                           
  2917                           ;clock.c: 159:     task_list[id].period_t = 0;
  2918  00278A  51A2               	movf	remove_timer@id& (0+255),w,b
  2919  00278C  0D0F               	mullw	15
  2920  00278E  0E68               	movlw	low (_task_list+4)
  2921  002790  24F3               	addwf	243,w,c
  2922  002792  6ED9               	movwf	fsr2l,c
  2923  002794  0E01               	movlw	high (_task_list+4)
  2924  002796  20F4               	addwfc	prodh,w,c
  2925  002798  6EDA               	movwf	fsr2h,c
  2926  00279A  6ADE               	clrf	postinc2,c
  2927  00279C  6ADE               	clrf	postinc2,c
  2928  00279E  6ADE               	clrf	postinc2,c
  2929  0027A0  6ADD               	clrf	postdec2,c
  2930                           
  2931                           ;clock.c: 160:     task_list[id].func_ptr = ((void*)0);
  2932  0027A2  51A2               	movf	remove_timer@id& (0+255),w,b
  2933  0027A4  0D0F               	mullw	15
  2934  0027A6  0E6C               	movlw	low (_task_list+8)
  2935  0027A8  24F3               	addwf	243,w,c
  2936  0027AA  6ED9               	movwf	fsr2l,c
  2937  0027AC  0E01               	movlw	high (_task_list+8)
  2938  0027AE  20F4               	addwfc	prodh,w,c
  2939  0027B0  6EDA               	movwf	fsr2h,c
  2940  0027B2  0E00               	movlw	0
  2941  0027B4  6EDE               	movwf	postinc2,c
  2942  0027B6  0E00               	movlw	0
  2943  0027B8  6EDE               	movwf	postinc2,c
  2944  0027BA  0E00               	movlw	0
  2945  0027BC  6EDE               	movwf	postinc2,c
  2946                           
  2947                           ;clock.c: 161:     task_list[id].data_p = ((void*)0);
  2948  0027BE  51A2               	movf	remove_timer@id& (0+255),w,b
  2949  0027C0  0D0F               	mullw	15
  2950  0027C2  0E71               	movlw	low (_task_list+13)
  2951  0027C4  24F3               	addwf	243,w,c
  2952  0027C6  6ED9               	movwf	fsr2l,c
  2953  0027C8  0E01               	movlw	high (_task_list+13)
  2954  0027CA  20F4               	addwfc	prodh,w,c
  2955  0027CC  6EDA               	movwf	fsr2h,c
  2956  0027CE  0E00               	movlw	0
  2957  0027D0  6EDE               	movwf	postinc2,c
  2958  0027D2  0E00               	movlw	0
  2959  0027D4  6EDD               	movwf	postdec2,c
  2960  0027D6                     
  2961                           ; BSR set to: 0
  2962                           ;clock.c: 162:     num_task--;
  2963  0027D6  0791               	decf	_num_task& (0+255),f,b
  2964  0027D8                     
  2965                           ; BSR set to: 0
  2966                           ;clock.c: 163:     if(id == head) {
  2967  0027D8  5190               	movf	_head& (0+255),w,b
  2968  0027DA  19A2               	xorwf	remove_timer@id& (0+255),w,b
  2969  0027DC  A4D8               	btfss	status,2,c
  2970  0027DE  EFF3  F013         	goto	u2221
  2971  0027E2  EFF5  F013         	goto	u2220
  2972  0027E6                     u2221:
  2973  0027E6  EF0D  F014         	goto	l590
  2974  0027EA                     u2220:
  2975  0027EA                     
  2976                           ; BSR set to: 0
  2977                           ;clock.c: 164:         head = task_list[id].next;
  2978  0027EA  51A2               	movf	remove_timer@id& (0+255),w,b
  2979  0027EC  0D0F               	mullw	15
  2980  0027EE  0E6F               	movlw	low (_task_list+11)
  2981  0027F0  24F3               	addwf	243,w,c
  2982  0027F2  6ED9               	movwf	fsr2l,c
  2983  0027F4  0E01               	movlw	high (_task_list+11)
  2984  0027F6  20F4               	addwfc	prodh,w,c
  2985  0027F8  6EDA               	movwf	fsr2h,c
  2986  0027FA  50DF               	movf	indf2,w,c
  2987  0027FC  6F90               	movwf	_head& (0+255),b
  2988                           
  2989                           ;clock.c: 165:         task_list[id].next = 105;
  2990  0027FE  51A2               	movf	remove_timer@id& (0+255),w,b
  2991  002800  0D0F               	mullw	15
  2992  002802  0E6F               	movlw	low (_task_list+11)
  2993  002804  24F3               	addwf	243,w,c
  2994  002806  6ED9               	movwf	fsr2l,c
  2995  002808  0E01               	movlw	high (_task_list+11)
  2996  00280A  20F4               	addwfc	prodh,w,c
  2997  00280C  6EDA               	movwf	fsr2h,c
  2998  00280E  0E69               	movlw	105
  2999  002810  6EDE               	movwf	postinc2,c
  3000  002812  0E00               	movlw	0
  3001  002814  6EDD               	movwf	postdec2,c
  3002                           
  3003                           ;clock.c: 166:     }
  3004  002816  EF64  F014         	goto	l589
  3005  00281A                     l590:
  3006                           
  3007                           ; BSR set to: 0
  3008                           ;clock.c: 168:         char pos = head;
  3009  00281A  C090  F0A1         	movff	_head,remove_timer@pos
  3010                           
  3011                           ;clock.c: 169:         while(task_list[pos].next != 105 && task_list[pos].next != id) {
  3012  00281E  EF1B  F014         	goto	l592
  3013  002822                     l3094:
  3014                           
  3015                           ; BSR set to: 0
  3016                           ;clock.c: 170:             pos = task_list[pos].next;
  3017  002822  51A1               	movf	remove_timer@pos& (0+255),w,b
  3018  002824  0D0F               	mullw	15
  3019  002826  0E6F               	movlw	low (_task_list+11)
  3020  002828  24F3               	addwf	243,w,c
  3021  00282A  6ED9               	movwf	fsr2l,c
  3022  00282C  0E01               	movlw	high (_task_list+11)
  3023  00282E  20F4               	addwfc	prodh,w,c
  3024  002830  6EDA               	movwf	fsr2h,c
  3025  002832  50DF               	movf	indf2,w,c
  3026  002834  6FA1               	movwf	remove_timer@pos& (0+255),b
  3027  002836                     l592:
  3028                           
  3029                           ; BSR set to: 0
  3030                           ;clock.c: 169:         while(task_list[pos].next != 105 && task_list[pos].next != id) {
  3031  002836  51A1               	movf	remove_timer@pos& (0+255),w,b
  3032  002838  0D0F               	mullw	15
  3033  00283A  0E6F               	movlw	low (_task_list+11)
  3034  00283C  24F3               	addwf	243,w,c
  3035  00283E  6ED9               	movwf	fsr2l,c
  3036  002840  0E01               	movlw	high (_task_list+11)
  3037  002842  20F4               	addwfc	prodh,w,c
  3038  002844  6EDA               	movwf	fsr2h,c
  3039  002846  0E69               	movlw	105
  3040  002848  18DE               	xorwf	postinc2,w,c
  3041  00284A  10DE               	iorwf	postinc2,w,c
  3042  00284C  B4D8               	btfsc	status,2,c
  3043  00284E  EF2B  F014         	goto	u2231
  3044  002852  EF2D  F014         	goto	u2230
  3045  002856                     u2231:
  3046  002856  EF44  F014         	goto	l3098
  3047  00285A                     u2230:
  3048  00285A                     
  3049                           ; BSR set to: 0
  3050  00285A  51A1               	movf	remove_timer@pos& (0+255),w,b
  3051  00285C  0D0F               	mullw	15
  3052  00285E  0E6F               	movlw	low (_task_list+11)
  3053  002860  24F3               	addwf	243,w,c
  3054  002862  6ED9               	movwf	fsr2l,c
  3055  002864  0E01               	movlw	high (_task_list+11)
  3056  002866  20F4               	addwfc	prodh,w,c
  3057  002868  6EDA               	movwf	fsr2h,c
  3058  00286A  51A2               	movf	remove_timer@id& (0+255),w,b
  3059  00286C  6F9F               	movwf	(??_remove_timer+2)& (0+255),b
  3060  00286E  6BA0               	clrf	(??_remove_timer+3)& (0+255),b
  3061  002870  50DE               	movf	postinc2,w,c
  3062  002872  199F               	xorwf	(??_remove_timer+2)& (0+255),w,b
  3063  002874  E107               	bnz	u2241
  3064  002876  50DE               	movf	postinc2,w,c
  3065  002878  19A0               	xorwf	(??_remove_timer+3)& (0+255),w,b
  3066  00287A  A4D8               	btfss	status,2,c
  3067  00287C  EF42  F014         	goto	u2241
  3068  002880  EF44  F014         	goto	u2240
  3069  002884                     u2241:
  3070  002884  EF11  F014         	goto	l3094
  3071  002888                     u2240:
  3072  002888                     l3098:
  3073                           
  3074                           ; BSR set to: 0
  3075                           ;clock.c: 172:         task_list[pos].next = task_list[id].next;
  3076  002888  51A2               	movf	remove_timer@id& (0+255),w,b
  3077  00288A  0D0F               	mullw	15
  3078  00288C  0E6F               	movlw	low (_task_list+11)
  3079  00288E  24F3               	addwf	243,w,c
  3080  002890  6ED9               	movwf	fsr2l,c
  3081  002892  0E01               	movlw	high (_task_list+11)
  3082  002894  20F4               	addwfc	prodh,w,c
  3083  002896  6EDA               	movwf	fsr2h,c
  3084  002898  51A1               	movf	remove_timer@pos& (0+255),w,b
  3085  00289A  0D0F               	mullw	15
  3086  00289C  0E6F               	movlw	low (_task_list+11)
  3087  00289E  24F3               	addwf	243,w,c
  3088  0028A0  6EE1               	movwf	fsr1l,c
  3089  0028A2  0E01               	movlw	high (_task_list+11)
  3090  0028A4  20F4               	addwfc	prodh,w,c
  3091  0028A6  6EE2               	movwf	fsr1h,c
  3092  0028A8  CFDE FFE6          	movff	postinc2,postinc1
  3093  0028AC  CFDD FFE5          	movff	postdec2,postdec1
  3094  0028B0                     
  3095                           ; BSR set to: 0
  3096                           ;clock.c: 173:         task_list[id].next = 105;
  3097  0028B0  51A2               	movf	remove_timer@id& (0+255),w,b
  3098  0028B2  0D0F               	mullw	15
  3099  0028B4  0E6F               	movlw	low (_task_list+11)
  3100  0028B6  24F3               	addwf	243,w,c
  3101  0028B8  6ED9               	movwf	fsr2l,c
  3102  0028BA  0E01               	movlw	high (_task_list+11)
  3103  0028BC  20F4               	addwfc	prodh,w,c
  3104  0028BE  6EDA               	movwf	fsr2h,c
  3105  0028C0  0E69               	movlw	105
  3106  0028C2  6EDE               	movwf	postinc2,c
  3107  0028C4  0E00               	movlw	0
  3108  0028C6  6EDD               	movwf	postdec2,c
  3109  0028C8                     l589:
  3110  0028C8  0012               	return		;funcret
  3111  0028CA                     __end_of_remove_timer:
  3112                           	opt callstack 0
  3113                           
  3114 ;; *************** function _isEmptyList *****************
  3115 ;; Defined at:
  3116 ;;		line 73 in file "clock.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;		None
  3119 ;; Auto vars:     Size  Location     Type
  3120 ;;		None
  3121 ;; Return value:  Size  Location     Type
  3122 ;;                  1    wreg      unsigned char 
  3123 ;; Registers used:
  3124 ;;		wreg, status,2
  3125 ;; Tracked objects:
  3126 ;;		On entry : 0/0
  3127 ;;		On exit  : 0/0
  3128 ;;		Unchanged: 0/0
  3129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3134 ;;Total ram usage:        0 bytes
  3135 ;; Hardware stack levels used:    1
  3136 ;; Hardware stack levels required when called:    5
  3137 ;; This function calls:
  3138 ;;		Nothing
  3139 ;; This function is called by:
  3140 ;;		_remove_timer
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           	psect	text13
  3145  003AE0                     __ptext13:
  3146                           	opt callstack 0
  3147  003AE0                     _isEmptyList:
  3148                           	opt callstack 23
  3149  003AE0                     
  3150                           ;clock.c: 74:     return num_task == 0 ? 1 : 0;
  3151  003AE0  0100               	movlb	0	; () banked
  3152  003AE2  5191               	movf	_num_task& (0+255),w,b
  3153  003AE4  B4D8               	btfsc	status,2,c
  3154  003AE6  EF77  F01D         	goto	u1991
  3155  003AEA  EF7A  F01D         	goto	u1990
  3156  003AEE                     u1991:
  3157  003AEE  0E01               	movlw	1
  3158  003AF0  EF7B  F01D         	goto	u2000
  3159  003AF4                     u1990:
  3160  003AF4  0E00               	movlw	0
  3161  003AF6                     u2000:
  3162  003AF6                     
  3163                           ; BSR set to: 0
  3164  003AF6  0012               	return		;funcret
  3165  003AF8                     __end_of_isEmptyList:
  3166                           	opt callstack 0
  3167                           
  3168 ;; *************** function _register_timer *****************
  3169 ;; Defined at:
  3170 ;;		line 116 in file "clock.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;  period          4    6[BANK0 ] unsigned long 
  3173 ;;  delay           4   10[BANK0 ] unsigned long 
  3174 ;;  callback        3   14[BANK0 ] PTR FTN(PTR void ,)void 
  3175 ;;		 -> print_temp_and_humid(1), readTempAndHumid(1), check_humid_to_turn_fan(1), handleButton(1), 
  3176 ;;		 -> changeState(1), 
  3177 ;;  data_ptr        2   17[BANK0 ] PTR void 
  3178 ;;		 -> NULL(0), 
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;  cur             2   35[BANK0 ] int 
  3181 ;;  prev            2   31[BANK0 ] int 
  3182 ;;  sum             2   33[BANK0 ] int 
  3183 ;;  idx             1   37[BANK0 ] unsigned char 
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  1    wreg      unsigned char 
  3186 ;; Registers used:
  3187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3193 ;;      Params:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3194 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3195 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3196 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3197 ;;Total ram usage:       32 bytes
  3198 ;; Hardware stack levels used:    1
  3199 ;; Hardware stack levels required when called:    6
  3200 ;; This function calls:
  3201 ;;		___wmul
  3202 ;;		_isFullList
  3203 ;; This function is called by:
  3204 ;;		_set_time_process
  3205 ;;		_main
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209                           	psect	text14
  3210  001EAE                     __ptext14:
  3211                           	opt callstack 0
  3212  001EAE                     _register_timer:
  3213                           	opt callstack 23
  3214  001EAE                     
  3215                           ;clock.c: 117:     if(isFullList())
  3216  001EAE  EC63  F01D         	call	_isFullList	;wreg free
  3217  001EB2  0900               	iorlw	0
  3218  001EB4  B4D8               	btfsc	status,2,c
  3219  001EB6  EF5F  F00F         	goto	u2251
  3220  001EBA  EF61  F00F         	goto	u2250
  3221  001EBE                     u2251:
  3222  001EBE  EF64  F00F         	goto	l3110
  3223  001EC2                     u2250:
  3224  001EC2                     l3106:
  3225                           
  3226                           ;clock.c: 118:         return 109;
  3227  001EC2  0E6D               	movlw	109
  3228  001EC4  EF26  F011         	goto	l569
  3229  001EC8                     l3110:
  3230                           
  3231                           ;clock.c: 119:     char idx;;clock.c: 120:     for(idx = 0; idx < 20; idx++) {
  3232  001EC8  0E00               	movlw	0
  3233  001ECA  0100               	movlb	0	; () banked
  3234  001ECC  6FC2               	movwf	register_timer@idx& (0+255),b
  3235  001ECE                     l3116:
  3236                           
  3237                           ; BSR set to: 0
  3238                           ;clock.c: 121:         if(task_list[idx].func_ptr == ((void*)0))
  3239  001ECE  51C2               	movf	register_timer@idx& (0+255),w,b
  3240  001ED0  0D0F               	mullw	15
  3241  001ED2  0E6C               	movlw	low (_task_list+8)
  3242  001ED4  24F3               	addwf	243,w,c
  3243  001ED6  6ED9               	movwf	fsr2l,c
  3244  001ED8  0E01               	movlw	high (_task_list+8)
  3245  001EDA  20F4               	addwfc	prodh,w,c
  3246  001EDC  6EDA               	movwf	fsr2h,c
  3247  001EDE  50DE               	movf	postinc2,w,c
  3248  001EE0  10DE               	iorwf	postinc2,w,c
  3249  001EE2  10DE               	iorwf	postinc2,w,c
  3250  001EE4  A4D8               	btfss	status,2,c
  3251  001EE6  EF77  F00F         	goto	u2261
  3252  001EEA  EF79  F00F         	goto	u2260
  3253  001EEE                     u2261:
  3254  001EEE  EF7B  F00F         	goto	l3120
  3255  001EF2                     u2260:
  3256  001EF2  EF84  F00F         	goto	l3124
  3257  001EF6                     l3120:
  3258                           
  3259                           ; BSR set to: 0
  3260                           ;clock.c: 123:     }
  3261  001EF6  2BC2               	incf	register_timer@idx& (0+255),f,b
  3262  001EF8                     
  3263                           ; BSR set to: 0
  3264  001EF8  0E13               	movlw	19
  3265  001EFA  65C2               	cpfsgt	register_timer@idx& (0+255),b
  3266  001EFC  EF82  F00F         	goto	u2271
  3267  001F00  EF84  F00F         	goto	u2270
  3268  001F04                     u2271:
  3269  001F04  EF67  F00F         	goto	l3116
  3270  001F08                     u2270:
  3271  001F08                     l3124:
  3272                           
  3273                           ; BSR set to: 0
  3274                           ;clock.c: 124:     if(idx == 20)
  3275  001F08  0E14               	movlw	20
  3276  001F0A  19C2               	xorwf	register_timer@idx& (0+255),w,b
  3277  001F0C  A4D8               	btfss	status,2,c
  3278  001F0E  EF8B  F00F         	goto	u2281
  3279  001F12  EF8D  F00F         	goto	u2280
  3280  001F16                     u2281:
  3281  001F16  EF8F  F00F         	goto	l3130
  3282  001F1A                     u2280:
  3283  001F1A  EF61  F00F         	goto	l3106
  3284  001F1E                     l3130:
  3285                           
  3286                           ; BSR set to: 0
  3287                           ;clock.c: 126:     task_list[idx].delay_t = delay;
  3288  001F1E  51C2               	movf	register_timer@idx& (0+255),w,b
  3289  001F20  0D0F               	mullw	15
  3290  001F22  0E64               	movlw	low _task_list
  3291  001F24  24F3               	addwf	243,w,c
  3292  001F26  6ED9               	movwf	fsr2l,c
  3293  001F28  0E01               	movlw	high _task_list
  3294  001F2A  20F4               	addwfc	prodh,w,c
  3295  001F2C  6EDA               	movwf	fsr2h,c
  3296  001F2E  C0A7  FFDE         	movff	register_timer@delay,postinc2
  3297  001F32  C0A8  FFDE         	movff	register_timer@delay+1,postinc2
  3298  001F36  C0A9  FFDE         	movff	register_timer@delay+2,postinc2
  3299  001F3A  C0AA  FFDE         	movff	register_timer@delay+3,postinc2
  3300                           
  3301                           ;clock.c: 127:     task_list[idx].period_t = period;
  3302  001F3E  51C2               	movf	register_timer@idx& (0+255),w,b
  3303  001F40  0D0F               	mullw	15
  3304  001F42  0E68               	movlw	low (_task_list+4)
  3305  001F44  24F3               	addwf	243,w,c
  3306  001F46  6ED9               	movwf	fsr2l,c
  3307  001F48  0E01               	movlw	high (_task_list+4)
  3308  001F4A  20F4               	addwfc	prodh,w,c
  3309  001F4C  6EDA               	movwf	fsr2h,c
  3310  001F4E  C0A3  FFDE         	movff	register_timer@period,postinc2
  3311  001F52  C0A4  FFDE         	movff	register_timer@period+1,postinc2
  3312  001F56  C0A5  FFDE         	movff	register_timer@period+2,postinc2
  3313  001F5A  C0A6  FFDE         	movff	register_timer@period+3,postinc2
  3314                           
  3315                           ;clock.c: 128:     task_list[idx].func_ptr = callback;
  3316  001F5E  51C2               	movf	register_timer@idx& (0+255),w,b
  3317  001F60  0D0F               	mullw	15
  3318  001F62  0E6C               	movlw	low (_task_list+8)
  3319  001F64  24F3               	addwf	243,w,c
  3320  001F66  6ED9               	movwf	fsr2l,c
  3321  001F68  0E01               	movlw	high (_task_list+8)
  3322  001F6A  20F4               	addwfc	prodh,w,c
  3323  001F6C  6EDA               	movwf	fsr2h,c
  3324  001F6E  C0AB  FFDE         	movff	register_timer@callback,postinc2
  3325  001F72  C0AC  FFDE         	movff	register_timer@callback+1,postinc2
  3326  001F76  C0AD  FFDE         	movff	register_timer@callback+2,postinc2
  3327                           
  3328                           ;clock.c: 129:     task_list[idx].data_p = data_ptr;
  3329  001F7A  51C2               	movf	register_timer@idx& (0+255),w,b
  3330  001F7C  0D0F               	mullw	15
  3331  001F7E  0E71               	movlw	low (_task_list+13)
  3332  001F80  24F3               	addwf	243,w,c
  3333  001F82  6ED9               	movwf	fsr2l,c
  3334  001F84  0E01               	movlw	high (_task_list+13)
  3335  001F86  20F4               	addwfc	prodh,w,c
  3336  001F88  6EDA               	movwf	fsr2h,c
  3337  001F8A  C0AE  FFDE         	movff	register_timer@data_ptr,postinc2
  3338  001F8E  C0AF  FFDD         	movff	register_timer@data_ptr+1,postdec2
  3339  001F92                     
  3340                           ; BSR set to: 0
  3341                           ;clock.c: 130:     num_task++;
  3342  001F92  2B91               	incf	_num_task& (0+255),f,b
  3343  001F94                     
  3344                           ; BSR set to: 0
  3345                           ;clock.c: 131:     int sum = task_list[head].delay_t;
  3346  001F94  5190               	movf	_head& (0+255),w,b
  3347  001F96  0D0F               	mullw	15
  3348  001F98  0E64               	movlw	low _task_list
  3349  001F9A  24F3               	addwf	243,w,c
  3350  001F9C  6ED9               	movwf	fsr2l,c
  3351  001F9E  0E01               	movlw	high _task_list
  3352  001FA0  20F4               	addwfc	prodh,w,c
  3353  001FA2  6EDA               	movwf	fsr2h,c
  3354  001FA4  CFDE F0BE          	movff	postinc2,register_timer@sum
  3355  001FA8  CFDD F0BF          	movff	postdec2,register_timer@sum+1
  3356  001FAC                     
  3357                           ; BSR set to: 0
  3358                           ;clock.c: 132:     if(head == 105 || (head != 105 && sum > delay)) {
  3359  001FAC  0E69               	movlw	105
  3360  001FAE  1990               	xorwf	_head& (0+255),w,b
  3361  001FB0  B4D8               	btfsc	status,2,c
  3362  001FB2  EFDD  F00F         	goto	u2291
  3363  001FB6  EFDF  F00F         	goto	u2290
  3364  001FBA                     u2291:
  3365  001FBA  EF00  F010         	goto	l3142
  3366  001FBE                     u2290:
  3367  001FBE                     
  3368                           ; BSR set to: 0
  3369  001FBE  0E69               	movlw	105
  3370  001FC0  1990               	xorwf	_head& (0+255),w,b
  3371  001FC2  B4D8               	btfsc	status,2,c
  3372  001FC4  EFE6  F00F         	goto	u2301
  3373  001FC8  EFE8  F00F         	goto	u2300
  3374  001FCC                     u2301:
  3375  001FCC  EF13  F010         	goto	l3146
  3376  001FD0                     u2300:
  3377  001FD0                     
  3378                           ; BSR set to: 0
  3379  001FD0  C0BE  F0B0         	movff	register_timer@sum,??_register_timer
  3380  001FD4  C0BF  F0B1         	movff	register_timer@sum+1,??_register_timer+1
  3381  001FD8  0E00               	movlw	0
  3382  001FDA  BFB1               	btfsc	(??_register_timer+1)& (0+255),7,b
  3383  001FDC  0EFF               	movlw	255
  3384  001FDE  6FB2               	movwf	(??_register_timer+2)& (0+255),b
  3385  001FE0  6FB3               	movwf	(??_register_timer+3)& (0+255),b
  3386  001FE2  51B0               	movf	??_register_timer& (0+255),w,b
  3387  001FE4  5DA7               	subwf	register_timer@delay& (0+255),w,b
  3388  001FE6  51B1               	movf	(??_register_timer+1)& (0+255),w,b
  3389  001FE8  59A8               	subwfb	(register_timer@delay+1)& (0+255),w,b
  3390  001FEA  51B2               	movf	(??_register_timer+2)& (0+255),w,b
  3391  001FEC  59A9               	subwfb	(register_timer@delay+2)& (0+255),w,b
  3392  001FEE  51B3               	movf	(??_register_timer+3)& (0+255),w,b
  3393  001FF0  59AA               	subwfb	(register_timer@delay+3)& (0+255),w,b
  3394  001FF2  B0D8               	btfsc	status,0,c
  3395  001FF4  EFFE  F00F         	goto	u2311
  3396  001FF8  EF00  F010         	goto	u2310
  3397  001FFC                     u2311:
  3398  001FFC  EF13  F010         	goto	l3146
  3399  002000                     u2310:
  3400  002000                     l3142:
  3401                           
  3402                           ; BSR set to: 0
  3403                           ;clock.c: 133:         task_list[idx].next = head;
  3404  002000  5190               	movf	_head& (0+255),w,b
  3405  002002  6FB0               	movwf	??_register_timer& (0+255),b
  3406  002004  6BB1               	clrf	(??_register_timer+1)& (0+255),b
  3407  002006  51C2               	movf	register_timer@idx& (0+255),w,b
  3408  002008  0D0F               	mullw	15
  3409  00200A  0E6F               	movlw	low (_task_list+11)
  3410  00200C  24F3               	addwf	243,w,c
  3411  00200E  6ED9               	movwf	fsr2l,c
  3412  002010  0E01               	movlw	high (_task_list+11)
  3413  002012  20F4               	addwfc	prodh,w,c
  3414  002014  6EDA               	movwf	fsr2h,c
  3415  002016  C0B0  FFDE         	movff	??_register_timer,postinc2
  3416  00201A  C0B1  FFDD         	movff	??_register_timer+1,postdec2
  3417  00201E                     
  3418                           ; BSR set to: 0
  3419                           ;clock.c: 134:         head = idx;
  3420  00201E  C0C2  F090         	movff	register_timer@idx,_head
  3421                           
  3422                           ;clock.c: 135:     }
  3423  002022  EFE2  F010         	goto	l3164
  3424  002026                     l3146:
  3425                           
  3426                           ; BSR set to: 0
  3427                           ;clock.c: 138:         int cur = task_list[head].next;
  3428  002026  5190               	movf	_head& (0+255),w,b
  3429  002028  0D0F               	mullw	15
  3430  00202A  0E6F               	movlw	low (_task_list+11)
  3431  00202C  24F3               	addwf	243,w,c
  3432  00202E  6ED9               	movwf	fsr2l,c
  3433  002030  0E01               	movlw	high (_task_list+11)
  3434  002032  20F4               	addwfc	prodh,w,c
  3435  002034  6EDA               	movwf	fsr2h,c
  3436  002036  CFDE F0C0          	movff	postinc2,register_timer@cur
  3437  00203A  CFDD F0C1          	movff	postdec2,register_timer@cur+1
  3438  00203E                     
  3439                           ; BSR set to: 0
  3440                           ;clock.c: 139:         int prev = head;
  3441  00203E  C090  F0BC         	movff	_head,register_timer@prev
  3442  002042  6BBD               	clrf	(register_timer@prev+1)& (0+255),b
  3443                           
  3444                           ;clock.c: 140:         while(cur != 105 && sum + task_list[cur].delay_t <= delay) {
  3445  002044  EF52  F010         	goto	l3154
  3446  002048                     l3150:
  3447                           
  3448                           ; BSR set to: 0
  3449                           ;clock.c: 142:             sum+= task_list[cur].delay_t;
  3450  002048  C0C0  F09D         	movff	register_timer@cur,___wmul@multiplier
  3451  00204C  C0C1  F09E         	movff	register_timer@cur+1,___wmul@multiplier+1
  3452  002050  0E00               	movlw	0
  3453  002052  6FA0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3454  002054  0E0F               	movlw	15
  3455  002056  6F9F               	movwf	___wmul@multiplicand& (0+255),b
  3456  002058  ECEC  F01C         	call	___wmul	;wreg free
  3457  00205C  0E64               	movlw	low _task_list
  3458  00205E  0100               	movlb	0	; () banked
  3459  002060  259D               	addwf	?___wmul& (0+255),w,b
  3460  002062  6ED9               	movwf	fsr2l,c
  3461  002064  0E01               	movlw	high _task_list
  3462  002066  219E               	addwfc	(?___wmul+1)& (0+255),w,b
  3463  002068  6EDA               	movwf	fsr2h,c
  3464  00206A  50DE               	movf	postinc2,w,c
  3465  00206C  27BE               	addwf	register_timer@sum& (0+255),f,b
  3466  00206E  50DD               	movf	postdec2,w,c
  3467  002070  23BF               	addwfc	(register_timer@sum+1)& (0+255),f,b
  3468  002072                     
  3469                           ; BSR set to: 0
  3470                           ;clock.c: 143:             prev = cur;
  3471  002072  C0C0  F0BC         	movff	register_timer@cur,register_timer@prev
  3472  002076  C0C1  F0BD         	movff	register_timer@cur+1,register_timer@prev+1
  3473                           
  3474                           ;clock.c: 144:             cur = task_list[cur].next;
  3475  00207A  C0C0  F09D         	movff	register_timer@cur,___wmul@multiplier
  3476  00207E  C0C1  F09E         	movff	register_timer@cur+1,___wmul@multiplier+1
  3477  002082  0E00               	movlw	0
  3478  002084  6FA0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3479  002086  0E0F               	movlw	15
  3480  002088  6F9F               	movwf	___wmul@multiplicand& (0+255),b
  3481  00208A  ECEC  F01C         	call	___wmul	;wreg free
  3482  00208E  0E6F               	movlw	low (_task_list+11)
  3483  002090  0100               	movlb	0	; () banked
  3484  002092  259D               	addwf	?___wmul& (0+255),w,b
  3485  002094  6ED9               	movwf	fsr2l,c
  3486  002096  0E01               	movlw	high (_task_list+11)
  3487  002098  219E               	addwfc	(?___wmul+1)& (0+255),w,b
  3488  00209A  6EDA               	movwf	fsr2h,c
  3489  00209C  CFDE F0C0          	movff	postinc2,register_timer@cur
  3490  0020A0  CFDD F0C1          	movff	postdec2,register_timer@cur+1
  3491  0020A4                     l3154:
  3492                           
  3493                           ; BSR set to: 0
  3494                           ;clock.c: 140:         while(cur != 105 && sum + task_list[cur].delay_t <= delay) {
  3495  0020A4  0E69               	movlw	105
  3496  0020A6  19C0               	xorwf	register_timer@cur& (0+255),w,b
  3497  0020A8  11C1               	iorwf	(register_timer@cur+1)& (0+255),w,b
  3498  0020AA  B4D8               	btfsc	status,2,c
  3499  0020AC  EF5A  F010         	goto	u2321
  3500  0020B0  EF5C  F010         	goto	u2320
  3501  0020B4                     u2321:
  3502  0020B4  EF99  F010         	goto	l3158
  3503  0020B8                     u2320:
  3504  0020B8                     
  3505                           ; BSR set to: 0
  3506  0020B8  C0C0  F09D         	movff	register_timer@cur,___wmul@multiplier
  3507  0020BC  C0C1  F09E         	movff	register_timer@cur+1,___wmul@multiplier+1
  3508  0020C0  0E00               	movlw	0
  3509  0020C2  6FA0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3510  0020C4  0E0F               	movlw	15
  3511  0020C6  6F9F               	movwf	___wmul@multiplicand& (0+255),b
  3512  0020C8  ECEC  F01C         	call	___wmul	;wreg free
  3513  0020CC  0E64               	movlw	low _task_list
  3514  0020CE  0100               	movlb	0	; () banked
  3515  0020D0  259D               	addwf	?___wmul& (0+255),w,b
  3516  0020D2  6ED9               	movwf	fsr2l,c
  3517  0020D4  0E01               	movlw	high _task_list
  3518  0020D6  219E               	addwfc	(?___wmul+1)& (0+255),w,b
  3519  0020D8  6EDA               	movwf	fsr2h,c
  3520  0020DA  CFDE F0B0          	movff	postinc2,??_register_timer
  3521  0020DE  CFDE F0B1          	movff	postinc2,??_register_timer+1
  3522  0020E2  CFDE F0B2          	movff	postinc2,??_register_timer+2
  3523  0020E6  CFDE F0B3          	movff	postinc2,??_register_timer+3
  3524  0020EA  C0BE  F0B4         	movff	register_timer@sum,??_register_timer+4
  3525  0020EE  C0BF  F0B5         	movff	register_timer@sum+1,??_register_timer+5
  3526  0020F2  0E00               	movlw	0
  3527  0020F4  BFB5               	btfsc	(??_register_timer+5)& (0+255),7,b
  3528  0020F6  0EFF               	movlw	255
  3529  0020F8  6FB6               	movwf	(??_register_timer+6)& (0+255),b
  3530  0020FA  6FB7               	movwf	(??_register_timer+7)& (0+255),b
  3531  0020FC  51B0               	movf	??_register_timer& (0+255),w,b
  3532  0020FE  25B4               	addwf	(??_register_timer+4)& (0+255),w,b
  3533  002100  6FB8               	movwf	(??_register_timer+8)& (0+255),b
  3534  002102  51B1               	movf	(??_register_timer+1)& (0+255),w,b
  3535  002104  21B5               	addwfc	(??_register_timer+5)& (0+255),w,b
  3536  002106  6FB9               	movwf	(??_register_timer+9)& (0+255),b
  3537  002108  51B2               	movf	(??_register_timer+2)& (0+255),w,b
  3538  00210A  21B6               	addwfc	(??_register_timer+6)& (0+255),w,b
  3539  00210C  6FBA               	movwf	(??_register_timer+10)& (0+255),b
  3540  00210E  51B3               	movf	(??_register_timer+3)& (0+255),w,b
  3541  002110  21B7               	addwfc	(??_register_timer+7)& (0+255),w,b
  3542  002112  6FBB               	movwf	(??_register_timer+11)& (0+255),b
  3543  002114  51B8               	movf	(??_register_timer+8)& (0+255),w,b
  3544  002116  5DA7               	subwf	register_timer@delay& (0+255),w,b
  3545  002118  51B9               	movf	(??_register_timer+9)& (0+255),w,b
  3546  00211A  59A8               	subwfb	(register_timer@delay+1)& (0+255),w,b
  3547  00211C  51BA               	movf	(??_register_timer+10)& (0+255),w,b
  3548  00211E  59A9               	subwfb	(register_timer@delay+2)& (0+255),w,b
  3549  002120  51BB               	movf	(??_register_timer+11)& (0+255),w,b
  3550  002122  59AA               	subwfb	(register_timer@delay+3)& (0+255),w,b
  3551  002124  B0D8               	btfsc	status,0,c
  3552  002126  EF97  F010         	goto	u2331
  3553  00212A  EF99  F010         	goto	u2330
  3554  00212E                     u2331:
  3555  00212E  EF24  F010         	goto	l3150
  3556  002132                     u2330:
  3557  002132                     l3158:
  3558                           
  3559                           ; BSR set to: 0
  3560                           ;clock.c: 146:         task_list[prev].next = idx;
  3561  002132  51C2               	movf	register_timer@idx& (0+255),w,b
  3562  002134  6FB0               	movwf	??_register_timer& (0+255),b
  3563  002136  6BB1               	clrf	(??_register_timer+1)& (0+255),b
  3564  002138  C0BC  F09D         	movff	register_timer@prev,___wmul@multiplier
  3565  00213C  C0BD  F09E         	movff	register_timer@prev+1,___wmul@multiplier+1
  3566  002140  0E00               	movlw	0
  3567  002142  6FA0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3568  002144  0E0F               	movlw	15
  3569  002146  6F9F               	movwf	___wmul@multiplicand& (0+255),b
  3570  002148  ECEC  F01C         	call	___wmul	;wreg free
  3571  00214C  0E6F               	movlw	low (_task_list+11)
  3572  00214E  0100               	movlb	0	; () banked
  3573  002150  259D               	addwf	?___wmul& (0+255),w,b
  3574  002152  6ED9               	movwf	fsr2l,c
  3575  002154  0E01               	movlw	high (_task_list+11)
  3576  002156  219E               	addwfc	(?___wmul+1)& (0+255),w,b
  3577  002158  6EDA               	movwf	fsr2h,c
  3578  00215A  C0B0  FFDE         	movff	??_register_timer,postinc2
  3579  00215E  C0B1  FFDD         	movff	??_register_timer+1,postdec2
  3580  002162                     
  3581                           ; BSR set to: 0
  3582                           ;clock.c: 147:         task_list[idx].next = cur;
  3583  002162  51C2               	movf	register_timer@idx& (0+255),w,b
  3584  002164  0D0F               	mullw	15
  3585  002166  0E6F               	movlw	low (_task_list+11)
  3586  002168  24F3               	addwf	243,w,c
  3587  00216A  6ED9               	movwf	fsr2l,c
  3588  00216C  0E01               	movlw	high (_task_list+11)
  3589  00216E  20F4               	addwfc	prodh,w,c
  3590  002170  6EDA               	movwf	fsr2h,c
  3591  002172  C0C0  FFDE         	movff	register_timer@cur,postinc2
  3592  002176  C0C1  FFDD         	movff	register_timer@cur+1,postdec2
  3593  00217A                     
  3594                           ; BSR set to: 0
  3595                           ;clock.c: 148:         task_list[idx].delay_t = delay - sum;
  3596  00217A  C0BE  F0B0         	movff	register_timer@sum,??_register_timer
  3597  00217E  C0BF  F0B1         	movff	register_timer@sum+1,??_register_timer+1
  3598  002182  0E00               	movlw	0
  3599  002184  BFB1               	btfsc	(??_register_timer+1)& (0+255),7,b
  3600  002186  0EFF               	movlw	255
  3601  002188  6FB2               	movwf	(??_register_timer+2)& (0+255),b
  3602  00218A  6FB3               	movwf	(??_register_timer+3)& (0+255),b
  3603  00218C  51B0               	movf	??_register_timer& (0+255),w,b
  3604  00218E  5DA7               	subwf	register_timer@delay& (0+255),w,b
  3605  002190  6FB4               	movwf	(??_register_timer+4)& (0+255),b
  3606  002192  51B1               	movf	(??_register_timer+1)& (0+255),w,b
  3607  002194  59A8               	subwfb	(register_timer@delay+1)& (0+255),w,b
  3608  002196  6FB5               	movwf	(??_register_timer+5)& (0+255),b
  3609  002198  51B2               	movf	(??_register_timer+2)& (0+255),w,b
  3610  00219A  59A9               	subwfb	(register_timer@delay+2)& (0+255),w,b
  3611  00219C  6FB6               	movwf	(??_register_timer+6)& (0+255),b
  3612  00219E  51B3               	movf	(??_register_timer+3)& (0+255),w,b
  3613  0021A0  59AA               	subwfb	(register_timer@delay+3)& (0+255),w,b
  3614  0021A2  6FB7               	movwf	(??_register_timer+7)& (0+255),b
  3615  0021A4  51C2               	movf	register_timer@idx& (0+255),w,b
  3616  0021A6  0D0F               	mullw	15
  3617  0021A8  0E64               	movlw	low _task_list
  3618  0021AA  24F3               	addwf	243,w,c
  3619  0021AC  6ED9               	movwf	fsr2l,c
  3620  0021AE  0E01               	movlw	high _task_list
  3621  0021B0  20F4               	addwfc	prodh,w,c
  3622  0021B2  6EDA               	movwf	fsr2h,c
  3623  0021B4  C0B4  FFDE         	movff	??_register_timer+4,postinc2
  3624  0021B8  C0B5  FFDE         	movff	??_register_timer+5,postinc2
  3625  0021BC  C0B6  FFDE         	movff	??_register_timer+6,postinc2
  3626  0021C0  C0B7  FFDE         	movff	??_register_timer+7,postinc2
  3627  0021C4                     l3164:
  3628                           
  3629                           ; BSR set to: 0
  3630                           ;clock.c: 150:     if(task_list[idx].next != 105)
  3631  0021C4  51C2               	movf	register_timer@idx& (0+255),w,b
  3632  0021C6  0D0F               	mullw	15
  3633  0021C8  0E6F               	movlw	low (_task_list+11)
  3634  0021CA  24F3               	addwf	243,w,c
  3635  0021CC  6ED9               	movwf	fsr2l,c
  3636  0021CE  0E01               	movlw	high (_task_list+11)
  3637  0021D0  20F4               	addwfc	prodh,w,c
  3638  0021D2  6EDA               	movwf	fsr2h,c
  3639  0021D4  0E69               	movlw	105
  3640  0021D6  18DE               	xorwf	postinc2,w,c
  3641  0021D8  10DE               	iorwf	postinc2,w,c
  3642  0021DA  B4D8               	btfsc	status,2,c
  3643  0021DC  EFF2  F010         	goto	u2341
  3644  0021E0  EFF4  F010         	goto	u2340
  3645  0021E4                     u2341:
  3646  0021E4  EF25  F011         	goto	l3168
  3647  0021E8                     u2340:
  3648  0021E8                     
  3649                           ; BSR set to: 0
  3650                           ;clock.c: 151:         task_list[task_list[idx].next].delay_t-= task_list[idx].delay_t;
  3651  0021E8  51C2               	movf	register_timer@idx& (0+255),w,b
  3652  0021EA  0D0F               	mullw	15
  3653  0021EC  0E64               	movlw	low _task_list
  3654  0021EE  24F3               	addwf	243,w,c
  3655  0021F0  6ED9               	movwf	fsr2l,c
  3656  0021F2  0E01               	movlw	high _task_list
  3657  0021F4  20F4               	addwfc	prodh,w,c
  3658  0021F6  6EDA               	movwf	fsr2h,c
  3659  0021F8  CFDE F0B0          	movff	postinc2,??_register_timer
  3660  0021FC  CFDE F0B1          	movff	postinc2,??_register_timer+1
  3661  002200  CFDE F0B2          	movff	postinc2,??_register_timer+2
  3662  002204  CFDE F0B3          	movff	postinc2,??_register_timer+3
  3663  002208  51C2               	movf	register_timer@idx& (0+255),w,b
  3664  00220A  0D0F               	mullw	15
  3665  00220C  0E6F               	movlw	low (_task_list+11)
  3666  00220E  24F3               	addwf	243,w,c
  3667  002210  6ED9               	movwf	fsr2l,c
  3668  002212  0E01               	movlw	high (_task_list+11)
  3669  002214  20F4               	addwfc	prodh,w,c
  3670  002216  6EDA               	movwf	fsr2h,c
  3671  002218  CFDE F09D          	movff	postinc2,___wmul@multiplier
  3672  00221C  CFDD F09E          	movff	postdec2,___wmul@multiplier+1
  3673  002220  0E00               	movlw	0
  3674  002222  6FA0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3675  002224  0E0F               	movlw	15
  3676  002226  6F9F               	movwf	___wmul@multiplicand& (0+255),b
  3677  002228  ECEC  F01C         	call	___wmul	;wreg free
  3678  00222C  0E64               	movlw	low _task_list
  3679  00222E  0100               	movlb	0	; () banked
  3680  002230  259D               	addwf	?___wmul& (0+255),w,b
  3681  002232  6ED9               	movwf	fsr2l,c
  3682  002234  0E01               	movlw	high _task_list
  3683  002236  219E               	addwfc	(?___wmul+1)& (0+255),w,b
  3684  002238  6EDA               	movwf	fsr2h,c
  3685  00223A  51B0               	movf	??_register_timer& (0+255),w,b
  3686  00223C  5EDE               	subwf	postinc2,f,c
  3687  00223E  51B1               	movf	(??_register_timer+1)& (0+255),w,b
  3688  002240  5ADE               	subwfb	postinc2,f,c
  3689  002242  51B2               	movf	(??_register_timer+2)& (0+255),w,b
  3690  002244  5ADE               	subwfb	postinc2,f,c
  3691  002246  51B3               	movf	(??_register_timer+3)& (0+255),w,b
  3692  002248  5ADE               	subwfb	postinc2,f,c
  3693  00224A                     l3168:
  3694                           
  3695                           ; BSR set to: 0
  3696                           ;clock.c: 152:     return idx;
  3697  00224A  51C2               	movf	register_timer@idx& (0+255),w,b
  3698  00224C                     l569:
  3699  00224C  0012               	return		;funcret
  3700  00224E                     __end_of_register_timer:
  3701                           	opt callstack 0
  3702                           
  3703 ;; *************** function _isFullList *****************
  3704 ;; Defined at:
  3705 ;;		line 77 in file "clock.c"
  3706 ;; Parameters:    Size  Location     Type
  3707 ;;		None
  3708 ;; Auto vars:     Size  Location     Type
  3709 ;;		None
  3710 ;; Return value:  Size  Location     Type
  3711 ;;                  1    wreg      unsigned char 
  3712 ;; Registers used:
  3713 ;;		wreg, status,2, status,0
  3714 ;; Tracked objects:
  3715 ;;		On entry : 0/0
  3716 ;;		On exit  : 0/0
  3717 ;;		Unchanged: 0/0
  3718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3723 ;;Total ram usage:        0 bytes
  3724 ;; Hardware stack levels used:    1
  3725 ;; Hardware stack levels required when called:    5
  3726 ;; This function calls:
  3727 ;;		Nothing
  3728 ;; This function is called by:
  3729 ;;		_register_timer
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732                           
  3733                           	psect	text15
  3734  003AC6                     __ptext15:
  3735                           	opt callstack 0
  3736  003AC6                     _isFullList:
  3737                           	opt callstack 23
  3738  003AC6                     
  3739                           ;clock.c: 78:     return num_task == 20 ? 1 : 0;
  3740  003AC6  0E14               	movlw	20
  3741  003AC8  0100               	movlb	0	; () banked
  3742  003ACA  1991               	xorwf	_num_task& (0+255),w,b
  3743  003ACC  B4D8               	btfsc	status,2,c
  3744  003ACE  EF6B  F01D         	goto	u2011
  3745  003AD2  EF6E  F01D         	goto	u2010
  3746  003AD6                     u2011:
  3747  003AD6  0E01               	movlw	1
  3748  003AD8  EF6F  F01D         	goto	u2020
  3749  003ADC                     u2010:
  3750  003ADC  0E00               	movlw	0
  3751  003ADE                     u2020:
  3752  003ADE                     
  3753                           ; BSR set to: 0
  3754  003ADE  0012               	return		;funcret
  3755  003AE0                     __end_of_isFullList:
  3756                           	opt callstack 0
  3757                           
  3758 ;; *************** function _dispatch *****************
  3759 ;; Defined at:
  3760 ;;		line 250 in file "clock.c"
  3761 ;; Parameters:    Size  Location     Type
  3762 ;;		None
  3763 ;; Auto vars:     Size  Location     Type
  3764 ;;  node            5   20[BANK0 ] struct .
  3765 ;; Return value:  Size  Location     Type
  3766 ;;                  1    wreg      void 
  3767 ;; Registers used:
  3768 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3769 ;; Tracked objects:
  3770 ;;		On entry : 0/0
  3771 ;;		On exit  : 0/0
  3772 ;;		Unchanged: 0/0
  3773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3775 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3777 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3778 ;;Total ram usage:        5 bytes
  3779 ;; Hardware stack levels used:    1
  3780 ;; Hardware stack levels required when called:   11
  3781 ;; This function calls:
  3782 ;;		_changeState
  3783 ;;		_check_humid_to_turn_fan
  3784 ;;		_dequeue
  3785 ;;		_handleButton
  3786 ;;		_isEmptyQueue
  3787 ;;		_print_temp_and_humid
  3788 ;;		_readTempAndHumid
  3789 ;; This function is called by:
  3790 ;;		_main
  3791 ;; This function uses a non-reentrant model
  3792 ;;
  3793                           
  3794                           	psect	text16
  3795  003578                     __ptext16:
  3796                           	opt callstack 0
  3797  003578                     _dispatch:
  3798                           	opt callstack 19
  3799  003578                     
  3800                           ;clock.c: 251:     while(!isEmptyQueue()) {
  3801  003578  EFE3  F01A         	goto	l3690
  3802  00357C                     l3684:
  3803                           
  3804                           ;clock.c: 252:         queue_node node = dequeue();
  3805  00357C  EC77  F019         	call	_dequeue	;wreg free
  3806  003580  EE20  F0B1         	lfsr	2,dispatch@node
  3807  003584  0E04               	movlw	4
  3808  003586                     u2891:
  3809  003586  CFEB FFDB          	movff	plusw0,plusw2
  3810  00358A  06E8               	decf	wreg,f,c
  3811  00358C  E2FC               	bc	u2891
  3812  00358E                     
  3813                           ;clock.c: 253:         if(node.func_ptr != ((void*)0))
  3814  00358E  0100               	movlb	0	; () banked
  3815  003590  51B1               	movf	dispatch@node& (0+255),w,b
  3816  003592  11B2               	iorwf	(dispatch@node+1)& (0+255),w,b
  3817  003594  11B3               	iorwf	(dispatch@node+2)& (0+255),w,b
  3818  003596  B4D8               	btfsc	status,2,c
  3819  003598  EFD0  F01A         	goto	u2901
  3820  00359C  EFD2  F01A         	goto	u2900
  3821  0035A0                     u2901:
  3822  0035A0  EFE3  F01A         	goto	l3690
  3823  0035A4                     u2900:
  3824  0035A4                     
  3825                           ; BSR set to: 0
  3826                           ;clock.c: 254:             (node.func_ptr)(node.data_p);
  3827  0035A4  C0B4  F09F         	movff	dispatch@node+3,handleButton@data_ptr
  3828  0035A8  C0B5  F0A0         	movff	dispatch@node+4,handleButton@data_ptr+1
  3829  0035AC  D802               	call	u2918
  3830  0035AE  EFE3  F01A         	goto	u2919
  3831  0035B2                     u2918:
  3832  0035B2  0005               	push	
  3833  0035B4  6EFA               	movwf	pclath,c
  3834  0035B6  51B1               	movf	dispatch@node& (0+255),w,b
  3835  0035B8  6EFD               	movwf	tosl,c
  3836  0035BA  51B2               	movf	(dispatch@node+1)& (0+255),w,b
  3837  0035BC  6EFE               	movwf	tosh,c
  3838  0035BE  51B3               	movf	(dispatch@node+2)& (0+255),w,b
  3839  0035C0  6EFF               	movwf	tosu,c
  3840  0035C2  50FA               	movf	pclath,w,c
  3841  0035C4  0012               	return		;indir
  3842  0035C6                     u2919:
  3843  0035C6                     l3690:
  3844                           
  3845                           ;clock.c: 251:     while(!isEmptyQueue()) {
  3846  0035C6  EC79  F01C         	call	_isEmptyQueue	;wreg free
  3847  0035CA  0900               	iorlw	0
  3848  0035CC  B4D8               	btfsc	status,2,c
  3849  0035CE  EFEB  F01A         	goto	u2921
  3850  0035D2  EFED  F01A         	goto	u2920
  3851  0035D6                     u2921:
  3852  0035D6  EFBE  F01A         	goto	l3684
  3853  0035DA                     u2920:
  3854  0035DA  0012               	return		;funcret
  3855  0035DC                     __end_of_dispatch:
  3856                           	opt callstack 0
  3857                           
  3858 ;; *************** function _readTempAndHumid *****************
  3859 ;; Defined at:
  3860 ;;		line 75 in file "dht11.c"
  3861 ;; Parameters:    Size  Location     Type
  3862 ;;		None
  3863 ;; Auto vars:     Size  Location     Type
  3864 ;;		None
  3865 ;; Return value:  Size  Location     Type
  3866 ;;                  1    wreg      void 
  3867 ;; Registers used:
  3868 ;;		wreg, status,2, status,0, cstack
  3869 ;; Tracked objects:
  3870 ;;		On entry : 0/0
  3871 ;;		On exit  : 0/0
  3872 ;;		Unchanged: 0/0
  3873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3878 ;;Total ram usage:        0 bytes
  3879 ;; Hardware stack levels used:    1
  3880 ;; Hardware stack levels required when called:    7
  3881 ;; This function calls:
  3882 ;;		_readDHT
  3883 ;; This function is called by:
  3884 ;;		_main
  3885 ;;		_dispatch
  3886 ;; This function uses a non-reentrant model
  3887 ;;
  3888                           
  3889                           	psect	text17
  3890  003956                     __ptext17:
  3891                           	opt callstack 0
  3892  003956                     _readTempAndHumid:
  3893                           	opt callstack 22
  3894  003956                     
  3895                           ;dht11.c: 76:     if(!readDHT()) {
  3896  003956  EC31  F015         	call	_readDHT	;wreg free
  3897  00395A  0900               	iorlw	0
  3898  00395C  A4D8               	btfss	status,2,c
  3899  00395E  EFB3  F01C         	goto	u2671
  3900  003962  EFB5  F01C         	goto	u2670
  3901  003966                     u2671:
  3902  003966  EFB9  F01C         	goto	l3422
  3903  00396A                     u2670:
  3904  00396A                     
  3905                           ;dht11.c: 77:         countError++;
  3906  00396A  0100               	movlb	0	; () banked
  3907  00396C  2B95               	incf	_countError& (0+255),f,b
  3908  00396E  EFC0  F01C         	goto	l713
  3909  003972                     l3422:
  3910                           
  3911                           ;dht11.c: 84:         countError = 0;
  3912  003972  0E00               	movlw	0
  3913  003974  0100               	movlb	0	; () banked
  3914  003976  6F95               	movwf	_countError& (0+255),b
  3915  003978                     
  3916                           ; BSR set to: 0
  3917                           ;dht11.c: 85:         temperature_value = temperature_dht11[0];
  3918  003978  C08E  F099         	movff	_temperature_dht11,_temperature_value
  3919  00397C                     
  3920                           ; BSR set to: 0
  3921                           ;dht11.c: 86:         humidity_value = humidity_dht11[0];
  3922  00397C  C08C  F09A         	movff	_humidity_dht11,_humidity_value
  3923  003980                     l713:
  3924                           
  3925                           ; BSR set to: 0
  3926  003980  0012               	return		;funcret
  3927  003982                     __end_of_readTempAndHumid:
  3928                           	opt callstack 0
  3929                           
  3930 ;; *************** function _readDHT *****************
  3931 ;; Defined at:
  3932 ;;		line 22 in file "dht11.c"
  3933 ;; Parameters:    Size  Location     Type
  3934 ;;		None
  3935 ;; Auto vars:     Size  Location     Type
  3936 ;;  timeOut         2    9[BANK0 ] unsigned int 
  3937 ;;  checkSum        1    8[BANK0 ] unsigned char 
  3938 ;; Return value:  Size  Location     Type
  3939 ;;                  1    wreg      unsigned char 
  3940 ;; Registers used:
  3941 ;;		wreg, status,2, status,0, cstack
  3942 ;; Tracked objects:
  3943 ;;		On entry : 0/0
  3944 ;;		On exit  : 0/0
  3945 ;;		Unchanged: 0/0
  3946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3948 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3949 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3950 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3951 ;;Total ram usage:        5 bytes
  3952 ;; Hardware stack levels used:    1
  3953 ;; Hardware stack levels required when called:    6
  3954 ;; This function calls:
  3955 ;;		_getByte
  3956 ;; This function is called by:
  3957 ;;		_readTempAndHumid
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960                           
  3961                           	psect	text18
  3962  002A62                     __ptext18:
  3963                           	opt callstack 0
  3964  002A62                     _readDHT:
  3965                           	opt callstack 22
  3966  002A62                     
  3967                           ;dht11.c: 24:     char checkSum;;dht11.c: 25:     unsigned int timeOut = 80;
  3968  002A62  0E00               	movlw	0
  3969  002A64  0100               	movlb	0	; () banked
  3970  002A66  6FA7               	movwf	(readDHT@timeOut+1)& (0+255),b
  3971  002A68  0E50               	movlw	80
  3972  002A6A  6FA6               	movwf	readDHT@timeOut& (0+255),b
  3973  002A6C                     
  3974                           ; BSR set to: 0
  3975                           ;dht11.c: 26:     TRISDbits.TRISD0 = 0;
  3976  002A6C  9095               	bcf	149,0,c	;volatile
  3977  002A6E                     
  3978                           ; BSR set to: 0
  3979                           ;dht11.c: 27:     LATDbits.LATD0 = 0;
  3980  002A6E  908C               	bcf	140,0,c	;volatile
  3981  002A70                     
  3982                           ; BSR set to: 0
  3983                           ;dht11.c: 28:     _delay((unsigned long)((18)*(8000000/4000.0)));
  3984  002A70  0E2F               	movlw	47
  3985  002A72  0100               	movlb	0	; () banked
  3986  002A74  6FA3               	movwf	??_readDHT& (0+255),b
  3987  002A76  0EBF               	movlw	191
  3988  002A78                     u3247:
  3989  002A78  2EE8               	decfsz	wreg,f,c
  3990  002A7A  D7FE               	bra	u3247
  3991  002A7C  2FA3               	decfsz	??_readDHT& (0+255),f,b
  3992  002A7E  D7FC               	bra	u3247
  3993  002A80  D000               	nop2	
  3994  002A82                     
  3995                           ;dht11.c: 30:     LATDbits.LATD0 = 1;
  3996  002A82  808C               	bsf	140,0,c	;volatile
  3997  002A84                     
  3998                           ;dht11.c: 31:     _delay((unsigned long)((30)*(8000000/4000000.0)));
  3999  002A84  0E14               	movlw	20
  4000  002A86                     u3257:
  4001  002A86  2EE8               	decfsz	wreg,f,c
  4002  002A88  D7FE               	bra	u3257
  4003  002A8A                     
  4004                           ;dht11.c: 32:     TRISDbits.TRISD0 = 1;
  4005  002A8A  8095               	bsf	149,0,c	;volatile
  4006                           
  4007                           ;dht11.c: 34:     while(PORTDbits.RD0 & 1) {
  4008  002A8C  EF58  F015         	goto	l696
  4009  002A90                     l2998:
  4010                           
  4011                           ;dht11.c: 35:         if(--timeOut == 0)
  4012  002A90  0100               	movlb	0	; () banked
  4013  002A92  07A6               	decf	readDHT@timeOut& (0+255),f,b
  4014  002A94  A0D8               	btfss	status,0,c
  4015  002A96  07A7               	decf	(readDHT@timeOut+1)& (0+255),f,b
  4016  002A98  51A6               	movf	readDHT@timeOut& (0+255),w,b
  4017  002A9A  11A7               	iorwf	(readDHT@timeOut+1)& (0+255),w,b
  4018  002A9C  A4D8               	btfss	status,2,c
  4019  002A9E  EF53  F015         	goto	u2031
  4020  002AA2  EF55  F015         	goto	u2030
  4021  002AA6                     u2031:
  4022  002AA6  EF58  F015         	goto	l696
  4023  002AAA                     u2030:
  4024  002AAA                     l3000:
  4025                           
  4026                           ; BSR set to: 0
  4027                           ;dht11.c: 36:             return 0;
  4028  002AAA  0E00               	movlw	0
  4029  002AAC  EFD1  F015         	goto	l699
  4030  002AB0                     l696:
  4031                           
  4032                           ;dht11.c: 34:     while(PORTDbits.RD0 & 1) {
  4033  002AB0  B083               	btfsc	131,0,c	;volatile
  4034  002AB2  EF5D  F015         	goto	u2041
  4035  002AB6  EF5F  F015         	goto	u2040
  4036  002ABA                     u2041:
  4037  002ABA  EF48  F015         	goto	l2998
  4038  002ABE                     u2040:
  4039  002ABE                     
  4040                           ;dht11.c: 40:     timeOut = 80;
  4041  002ABE  0E00               	movlw	0
  4042  002AC0  0100               	movlb	0	; () banked
  4043  002AC2  6FA7               	movwf	(readDHT@timeOut+1)& (0+255),b
  4044  002AC4  0E50               	movlw	80
  4045  002AC6  6FA6               	movwf	readDHT@timeOut& (0+255),b
  4046                           
  4047                           ;dht11.c: 41:     while(!PORTDbits.RD0 & 1) {
  4048  002AC8  EF74  F015         	goto	l3012
  4049  002ACC                     l3006:
  4050                           
  4051                           ; BSR set to: 0
  4052                           ;dht11.c: 42:         if(--timeOut == 0)
  4053  002ACC  07A6               	decf	readDHT@timeOut& (0+255),f,b
  4054  002ACE  A0D8               	btfss	status,0,c
  4055  002AD0  07A7               	decf	(readDHT@timeOut+1)& (0+255),f,b
  4056  002AD2  51A6               	movf	readDHT@timeOut& (0+255),w,b
  4057  002AD4  11A7               	iorwf	(readDHT@timeOut+1)& (0+255),w,b
  4058  002AD6  A4D8               	btfss	status,2,c
  4059  002AD8  EF70  F015         	goto	u2051
  4060  002ADC  EF72  F015         	goto	u2050
  4061  002AE0                     u2051:
  4062  002AE0  EF74  F015         	goto	l3012
  4063  002AE4                     u2050:
  4064  002AE4  EF55  F015         	goto	l3000
  4065  002AE8                     l3012:
  4066                           
  4067                           ; BSR set to: 0
  4068                           ;dht11.c: 41:     while(!PORTDbits.RD0 & 1) {
  4069  002AE8  A083               	btfss	131,0,c	;volatile
  4070  002AEA  EF79  F015         	goto	u2061
  4071  002AEE  EF7C  F015         	goto	u2060
  4072  002AF2                     u2061:
  4073  002AF2  0E01               	movlw	1
  4074  002AF4  EF7D  F015         	goto	u2070
  4075  002AF8                     u2060:
  4076  002AF8  0E00               	movlw	0
  4077  002AFA                     u2070:
  4078  002AFA  6FA3               	movwf	??_readDHT& (0+255),b
  4079  002AFC  6BA4               	clrf	(??_readDHT+1)& (0+255),b
  4080  002AFE  B1A3               	btfsc	??_readDHT& (0+255),0,b
  4081  002B00  EF84  F015         	goto	u2081
  4082  002B04  EF86  F015         	goto	u2080
  4083  002B08                     u2081:
  4084  002B08  EF66  F015         	goto	l3006
  4085  002B0C                     u2080:
  4086  002B0C                     
  4087                           ; BSR set to: 0
  4088                           ;dht11.c: 46:     timeOut = 80;
  4089  002B0C  0E00               	movlw	0
  4090  002B0E  6FA7               	movwf	(readDHT@timeOut+1)& (0+255),b
  4091  002B10  0E50               	movlw	80
  4092  002B12  6FA6               	movwf	readDHT@timeOut& (0+255),b
  4093                           
  4094                           ;dht11.c: 47:     while(PORTDbits.RD0 & 1) {
  4095  002B14  EF9A  F015         	goto	l705
  4096  002B18                     l3016:
  4097                           
  4098                           ; BSR set to: 0
  4099                           ;dht11.c: 48:         if(--timeOut == 0)
  4100  002B18  07A6               	decf	readDHT@timeOut& (0+255),f,b
  4101  002B1A  A0D8               	btfss	status,0,c
  4102  002B1C  07A7               	decf	(readDHT@timeOut+1)& (0+255),f,b
  4103  002B1E  51A6               	movf	readDHT@timeOut& (0+255),w,b
  4104  002B20  11A7               	iorwf	(readDHT@timeOut+1)& (0+255),w,b
  4105  002B22  A4D8               	btfss	status,2,c
  4106  002B24  EF96  F015         	goto	u2091
  4107  002B28  EF98  F015         	goto	u2090
  4108  002B2C                     u2091:
  4109  002B2C  EF9A  F015         	goto	l705
  4110  002B30                     u2090:
  4111  002B30  EF55  F015         	goto	l3000
  4112  002B34                     l705:
  4113                           
  4114                           ; BSR set to: 0
  4115                           ;dht11.c: 47:     while(PORTDbits.RD0 & 1) {
  4116  002B34  B083               	btfsc	131,0,c	;volatile
  4117  002B36  EF9F  F015         	goto	u2101
  4118  002B3A  EFA1  F015         	goto	u2100
  4119  002B3E                     u2101:
  4120  002B3E  EF8C  F015         	goto	l3016
  4121  002B42                     u2100:
  4122  002B42                     
  4123                           ; BSR set to: 0
  4124                           ;dht11.c: 52:     humidity_dht11[0] = getByte();
  4125  002B42  ECE2  F016         	call	_getByte	;wreg free
  4126  002B46  0100               	movlb	0	; () banked
  4127  002B48  6F8C               	movwf	_humidity_dht11& (0+255),b
  4128                           
  4129                           ;dht11.c: 53:     humidity_dht11[1] = getByte();
  4130  002B4A  ECE2  F016         	call	_getByte	;wreg free
  4131  002B4E  0100               	movlb	0	; () banked
  4132  002B50  6F8D               	movwf	(_humidity_dht11+1)& (0+255),b
  4133                           
  4134                           ;dht11.c: 54:     temperature_dht11[0] = getByte();
  4135  002B52  ECE2  F016         	call	_getByte	;wreg free
  4136  002B56  0100               	movlb	0	; () banked
  4137  002B58  6F8E               	movwf	_temperature_dht11& (0+255),b
  4138                           
  4139                           ;dht11.c: 55:     temperature_dht11[1] = getByte();
  4140  002B5A  ECE2  F016         	call	_getByte	;wreg free
  4141  002B5E  0100               	movlb	0	; () banked
  4142  002B60  6F8F               	movwf	(_temperature_dht11+1)& (0+255),b
  4143                           
  4144                           ;dht11.c: 56:     checkSum = getByte();
  4145  002B62  ECE2  F016         	call	_getByte	;wreg free
  4146  002B66  0100               	movlb	0	; () banked
  4147  002B68  6FA5               	movwf	readDHT@checkSum& (0+255),b
  4148  002B6A                     
  4149                           ; BSR set to: 0
  4150                           ;dht11.c: 70:     if( (char)( humidity_dht11[0] + humidity_dht11[1] + temperature_dht11[
      +                          0] + temperature_dht11[1] ) & 0xFF != checkSum )
  4151  002B6A  29A5               	incf	readDHT@checkSum& (0+255),w,b
  4152  002B6C  A4D8               	btfss	status,2,c
  4153  002B6E  EFBB  F015         	goto	u2111
  4154  002B72  EFBF  F015         	goto	u2110
  4155  002B76                     u2111:
  4156  002B76  6BA3               	clrf	??_readDHT& (0+255),b
  4157  002B78  2BA3               	incf	??_readDHT& (0+255),f,b
  4158  002B7A  EFC1  F015         	goto	u2128
  4159  002B7E                     u2110:
  4160  002B7E  0100               	movlb	0	; () banked
  4161  002B80  6BA3               	clrf	??_readDHT& (0+255),b
  4162  002B82                     u2128:
  4163  002B82  518D               	movf	(_humidity_dht11+1)& (0+255),w,b
  4164  002B84  258F               	addwf	(_temperature_dht11+1)& (0+255),w,b
  4165  002B86  258C               	addwf	_humidity_dht11& (0+255),w,b
  4166  002B88  258E               	addwf	_temperature_dht11& (0+255),w,b
  4167  002B8A  15A3               	andwf	??_readDHT& (0+255),w,b
  4168  002B8C  0900               	iorlw	0
  4169  002B8E  B4D8               	btfsc	status,2,c
  4170  002B90  EFCC  F015         	goto	u2131
  4171  002B94  EFCE  F015         	goto	u2130
  4172  002B98                     u2131:
  4173  002B98  EFD0  F015         	goto	l3030
  4174  002B9C                     u2130:
  4175  002B9C  EF55  F015         	goto	l3000
  4176  002BA0                     l3030:
  4177                           
  4178                           ; BSR set to: 0
  4179                           ;dht11.c: 72:     return 1;
  4180  002BA0  0E01               	movlw	1
  4181  002BA2                     l699:
  4182                           
  4183                           ; BSR set to: 0
  4184  002BA2  0012               	return		;funcret
  4185  002BA4                     __end_of_readDHT:
  4186                           	opt callstack 0
  4187                           
  4188 ;; *************** function _getByte *****************
  4189 ;; Defined at:
  4190 ;;		line 3 in file "dht11.c"
  4191 ;; Parameters:    Size  Location     Type
  4192 ;;		None
  4193 ;; Auto vars:     Size  Location     Type
  4194 ;;  timeOut         2    3[BANK0 ] unsigned int 
  4195 ;;  j               1    5[BANK0 ] unsigned char 
  4196 ;;  i               1    2[BANK0 ] unsigned char 
  4197 ;; Return value:  Size  Location     Type
  4198 ;;                  1    wreg      unsigned char 
  4199 ;; Registers used:
  4200 ;;		wreg, status,2, status,0
  4201 ;; Tracked objects:
  4202 ;;		On entry : 0/0
  4203 ;;		On exit  : 0/0
  4204 ;;		Unchanged: 0/0
  4205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4207 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4208 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4209 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4210 ;;Total ram usage:        6 bytes
  4211 ;; Hardware stack levels used:    1
  4212 ;; Hardware stack levels required when called:    5
  4213 ;; This function calls:
  4214 ;;		Nothing
  4215 ;; This function is called by:
  4216 ;;		_readDHT
  4217 ;; This function uses a non-reentrant model
  4218 ;;
  4219                           
  4220                           	psect	text19
  4221  002DC4                     __ptext19:
  4222                           	opt callstack 0
  4223  002DC4                     _getByte:
  4224                           	opt callstack 22
  4225  002DC4                     
  4226                           ;dht11.c: 4:     char i, j;;dht11.c: 5:     unsigned int timeOut;;dht11.c: 6:     for(j 
      +                          = 0; j < 8; j++){
  4227  002DC4  0E00               	movlw	0
  4228  002DC6  0100               	movlb	0	; () banked
  4229  002DC8  6FA2               	movwf	getByte@j& (0+255),b
  4230  002DCA  EFF6  F016         	goto	l683
  4231  002DCE                     l2820:
  4232                           
  4233                           ; BSR set to: 0
  4234                           ;dht11.c: 8:             if(--timeOut == 0) return 0;
  4235  002DCE  07A0               	decf	getByte@timeOut& (0+255),f,b
  4236  002DD0  A0D8               	btfss	status,0,c
  4237  002DD2  07A1               	decf	(getByte@timeOut+1)& (0+255),f,b
  4238  002DD4  51A0               	movf	getByte@timeOut& (0+255),w,b
  4239  002DD6  11A1               	iorwf	(getByte@timeOut+1)& (0+255),w,b
  4240  002DD8  A4D8               	btfss	status,2,c
  4241  002DDA  EFF1  F016         	goto	u1721
  4242  002DDE  EFF3  F016         	goto	u1720
  4243  002DE2                     u1721:
  4244  002DE2  EFF6  F016         	goto	l683
  4245  002DE6                     u1720:
  4246  002DE6                     l2822:
  4247                           
  4248                           ; BSR set to: 0
  4249  002DE6  0E00               	movlw	0
  4250  002DE8  EF51  F017         	goto	l686
  4251  002DEC                     l683:
  4252                           
  4253                           ; BSR set to: 0
  4254                           ;dht11.c: 7:         while(!PORTDbits.RD0)
  4255  002DEC  A083               	btfss	131,0,c	;volatile
  4256  002DEE  EFFB  F016         	goto	u1731
  4257  002DF2  EFFD  F016         	goto	u1730
  4258  002DF6                     u1731:
  4259  002DF6  EFE7  F016         	goto	l2820
  4260  002DFA                     u1730:
  4261  002DFA                     
  4262                           ; BSR set to: 0
  4263                           ;dht11.c: 9:          _delay((unsigned long)((30)*(8000000/4000000.0)));
  4264  002DFA  0E14               	movlw	20
  4265  002DFC                     u3267:
  4266  002DFC  2EE8               	decfsz	wreg,f,c
  4267  002DFE  D7FE               	bra	u3267
  4268  002E00                     
  4269                           ;dht11.c: 10:         if(PORTDbits.RD0 == 0)
  4270  002E00  B083               	btfsc	131,0,c	;volatile
  4271  002E02  EF05  F017         	goto	u1741
  4272  002E06  EF07  F017         	goto	u1740
  4273  002E0A                     u1741:
  4274  002E0A  EF1B  F017         	goto	l2832
  4275  002E0E                     u1740:
  4276  002E0E                     
  4277                           ;dht11.c: 11:             i&= ~(1<<(7 - j));
  4278  002E0E  0100               	movlb	0	; () banked
  4279  002E10  51A2               	movf	getByte@j& (0+255),w,b
  4280  002E12  0807               	sublw	7
  4281  002E14  6F9D               	movwf	??_getByte& (0+255),b
  4282  002E16  0E01               	movlw	1
  4283  002E18  6F9E               	movwf	(??_getByte+1)& (0+255),b
  4284  002E1A  2B9D               	incf	??_getByte& (0+255),f,b
  4285  002E1C  EF12  F017         	goto	u1754
  4286  002E20                     u1755:
  4287  002E20  90D8               	bcf	status,0,c
  4288  002E22  379E               	rlcf	(??_getByte+1)& (0+255),f,b
  4289  002E24                     u1754:
  4290  002E24  2F9D               	decfsz	??_getByte& (0+255),f,b
  4291  002E26  EF10  F017         	goto	u1755
  4292  002E2A  0100               	movlb	0	; () banked
  4293  002E2C  519E               	movf	(??_getByte+1)& (0+255),w,b
  4294  002E2E  0AFF               	xorlw	255
  4295  002E30  179F               	andwf	getByte@i& (0+255),f,b
  4296  002E32  EF47  F017         	goto	l2842
  4297  002E36                     l2832:
  4298                           
  4299                           ;dht11.c: 13:             i|= (1 << (7 - j));
  4300  002E36  0100               	movlb	0	; () banked
  4301  002E38  51A2               	movf	getByte@j& (0+255),w,b
  4302  002E3A  0807               	sublw	7
  4303  002E3C  6F9D               	movwf	??_getByte& (0+255),b
  4304  002E3E  0E01               	movlw	1
  4305  002E40  6F9E               	movwf	(??_getByte+1)& (0+255),b
  4306  002E42  2B9D               	incf	??_getByte& (0+255),f,b
  4307  002E44  EF26  F017         	goto	u1764
  4308  002E48                     u1765:
  4309  002E48  90D8               	bcf	status,0,c
  4310  002E4A  379E               	rlcf	(??_getByte+1)& (0+255),f,b
  4311  002E4C                     u1764:
  4312  002E4C  2F9D               	decfsz	??_getByte& (0+255),f,b
  4313  002E4E  EF24  F017         	goto	u1765
  4314  002E52  0100               	movlb	0	; () banked
  4315  002E54  519E               	movf	(??_getByte+1)& (0+255),w,b
  4316  002E56  139F               	iorwf	getByte@i& (0+255),f,b
  4317  002E58                     
  4318                           ; BSR set to: 0
  4319                           ;dht11.c: 14:             timeOut = 80;
  4320  002E58  0E00               	movlw	0
  4321  002E5A  6FA1               	movwf	(getByte@timeOut+1)& (0+255),b
  4322  002E5C  0E50               	movlw	80
  4323  002E5E  6FA0               	movwf	getByte@timeOut& (0+255),b
  4324                           
  4325                           ;dht11.c: 15:             while(PORTDbits.RD0)
  4326  002E60  EF40  F017         	goto	l690
  4327  002E64                     l2836:
  4328                           
  4329                           ; BSR set to: 0
  4330                           ;dht11.c: 16:                 if(--timeOut == 0) return 0;
  4331  002E64  07A0               	decf	getByte@timeOut& (0+255),f,b
  4332  002E66  A0D8               	btfss	status,0,c
  4333  002E68  07A1               	decf	(getByte@timeOut+1)& (0+255),f,b
  4334  002E6A  51A0               	movf	getByte@timeOut& (0+255),w,b
  4335  002E6C  11A1               	iorwf	(getByte@timeOut+1)& (0+255),w,b
  4336  002E6E  A4D8               	btfss	status,2,c
  4337  002E70  EF3C  F017         	goto	u1771
  4338  002E74  EF3E  F017         	goto	u1770
  4339  002E78                     u1771:
  4340  002E78  EF40  F017         	goto	l690
  4341  002E7C                     u1770:
  4342  002E7C  EFF3  F016         	goto	l2822
  4343  002E80                     l690:
  4344                           
  4345                           ; BSR set to: 0
  4346                           ;dht11.c: 15:             while(PORTDbits.RD0)
  4347  002E80  B083               	btfsc	131,0,c	;volatile
  4348  002E82  EF45  F017         	goto	u1781
  4349  002E86  EF47  F017         	goto	u1780
  4350  002E8A                     u1781:
  4351  002E8A  EF32  F017         	goto	l2836
  4352  002E8E                     u1780:
  4353  002E8E                     l2842:
  4354                           
  4355                           ; BSR set to: 0
  4356                           ;dht11.c: 18:     }
  4357  002E8E  2BA2               	incf	getByte@j& (0+255),f,b
  4358  002E90                     
  4359                           ; BSR set to: 0
  4360  002E90  0E07               	movlw	7
  4361  002E92  65A2               	cpfsgt	getByte@j& (0+255),b
  4362  002E94  EF4E  F017         	goto	u1791
  4363  002E98  EF50  F017         	goto	u1790
  4364  002E9C                     u1791:
  4365  002E9C  EFF6  F016         	goto	l683
  4366  002EA0                     u1790:
  4367  002EA0                     
  4368                           ; BSR set to: 0
  4369                           ;dht11.c: 19:     return i;
  4370  002EA0  519F               	movf	getByte@i& (0+255),w,b
  4371  002EA2                     l686:
  4372                           
  4373                           ; BSR set to: 0
  4374  002EA2  0012               	return		;funcret
  4375  002EA4                     __end_of_getByte:
  4376                           	opt callstack 0
  4377                           
  4378 ;; *************** function _print_temp_and_humid *****************
  4379 ;; Defined at:
  4380 ;;		line 82 in file "mcc.c"
  4381 ;; Parameters:    Size  Location     Type
  4382 ;;		None
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;		None
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  1    wreg      void 
  4387 ;; Registers used:
  4388 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4398 ;;Total ram usage:        0 bytes
  4399 ;; Hardware stack levels used:    1
  4400 ;; Hardware stack levels required when called:   10
  4401 ;; This function calls:
  4402 ;;		_LCDPrint
  4403 ;;		_LCDPrintChar
  4404 ;;		___awdiv
  4405 ;;		___awmod
  4406 ;; This function is called by:
  4407 ;;		_main
  4408 ;;		_dispatch
  4409 ;; This function uses a non-reentrant model
  4410 ;;
  4411                           
  4412                           	psect	text20
  4413  002BA4                     __ptext20:
  4414                           	opt callstack 0
  4415  002BA4                     _print_temp_and_humid:
  4416                           	opt callstack 19
  4417  002BA4                     
  4418                           ;mcc.c: 83:     LCDPrint(1, 0, "T:");
  4419  002BA4  0E00               	movlw	0
  4420  002BA6  0100               	movlb	0	; () banked
  4421  002BA8  6FA8               	movwf	LCDPrint@pos& (0+255),b
  4422  002BAA  0E95               	movlw	low STR_18
  4423  002BAC  6FA9               	movwf	LCDPrint@ptr& (0+255),b
  4424  002BAE  0E10               	movlw	high STR_18
  4425  002BB0  6FAA               	movwf	(LCDPrint@ptr+1)& (0+255),b
  4426  002BB2  0E01               	movlw	1
  4427  002BB4  EC98  F01B         	call	_LCDPrint
  4428                           
  4429                           ;mcc.c: 84:     LCDPrint(1, 6, "H:");
  4430  002BB8  0E06               	movlw	6
  4431  002BBA  0100               	movlb	0	; () banked
  4432  002BBC  6FA8               	movwf	LCDPrint@pos& (0+255),b
  4433  002BBE  0E92               	movlw	low STR_19
  4434  002BC0  6FA9               	movwf	LCDPrint@ptr& (0+255),b
  4435  002BC2  0E10               	movlw	high STR_19
  4436  002BC4  6FAA               	movwf	(LCDPrint@ptr+1)& (0+255),b
  4437  002BC6  0E01               	movlw	1
  4438  002BC8  EC98  F01B         	call	_LCDPrint
  4439  002BCC                     
  4440                           ;mcc.c: 85:     if(temperature_value == 5) {
  4441  002BCC  0E05               	movlw	5
  4442  002BCE  0100               	movlb	0	; () banked
  4443  002BD0  1999               	xorwf	_temperature_value& (0+255),w,b
  4444  002BD2  A4D8               	btfss	status,2,c
  4445  002BD4  EFEE  F015         	goto	u2601
  4446  002BD8  EFF0  F015         	goto	u2600
  4447  002BDC                     u2601:
  4448  002BDC  EFFB  F015         	goto	l3386
  4449  002BE0                     u2600:
  4450  002BE0                     
  4451                           ; BSR set to: 0
  4452                           ;mcc.c: 86:         LCDPrint(1, 3, "ER");
  4453  002BE0  0E03               	movlw	3
  4454  002BE2  6FA8               	movwf	LCDPrint@pos& (0+255),b
  4455  002BE4  0E8F               	movlw	low STR_26
  4456  002BE6  6FA9               	movwf	LCDPrint@ptr& (0+255),b
  4457  002BE8  0E10               	movlw	high STR_26
  4458  002BEA  6FAA               	movwf	(LCDPrint@ptr+1)& (0+255),b
  4459  002BEC  0E01               	movlw	1
  4460  002BEE  EC98  F01B         	call	_LCDPrint
  4461                           
  4462                           ;mcc.c: 87:     } else{
  4463  002BF2  EF20  F016         	goto	l3388
  4464  002BF6                     l3386:
  4465                           
  4466                           ; BSR set to: 0
  4467                           ;mcc.c: 88:         LCDPrintChar(1, 3, temperature_value / 10 + '0');
  4468  002BF6  0E03               	movlw	3
  4469  002BF8  6FA8               	movwf	LCDPrintChar@pos& (0+255),b
  4470  002BFA  C099  F09D         	movff	_temperature_value,___awdiv@dividend
  4471  002BFE  6B9E               	clrf	(___awdiv@dividend+1)& (0+255),b
  4472  002C00  0E00               	movlw	0
  4473  002C02  6FA0               	movwf	(___awdiv@divisor+1)& (0+255),b
  4474  002C04  0E0A               	movlw	10
  4475  002C06  6F9F               	movwf	___awdiv@divisor& (0+255),b
  4476  002C08  EC52  F017         	call	___awdiv	;wreg free
  4477  002C0C  0100               	movlb	0	; () banked
  4478  002C0E  519D               	movf	?___awdiv& (0+255),w,b
  4479  002C10  0F30               	addlw	48
  4480  002C12  6FA9               	movwf	LCDPrintChar@ch& (0+255),b
  4481  002C14  0E01               	movlw	1
  4482  002C16  EC3B  F01C         	call	_LCDPrintChar
  4483                           
  4484                           ;mcc.c: 89:         LCDPrintChar(1, 4, temperature_value % 10 + '0');
  4485  002C1A  0E04               	movlw	4
  4486  002C1C  0100               	movlb	0	; () banked
  4487  002C1E  6FA8               	movwf	LCDPrintChar@pos& (0+255),b
  4488  002C20  C099  F09D         	movff	_temperature_value,___awmod@dividend
  4489  002C24  6B9E               	clrf	(___awmod@dividend+1)& (0+255),b
  4490  002C26  0E00               	movlw	0
  4491  002C28  6FA0               	movwf	(___awmod@divisor+1)& (0+255),b
  4492  002C2A  0E0A               	movlw	10
  4493  002C2C  6F9F               	movwf	___awmod@divisor& (0+255),b
  4494  002C2E  EC70  F018         	call	___awmod	;wreg free
  4495  002C32  0100               	movlb	0	; () banked
  4496  002C34  519D               	movf	?___awmod& (0+255),w,b
  4497  002C36  0F30               	addlw	48
  4498  002C38  6FA9               	movwf	LCDPrintChar@ch& (0+255),b
  4499  002C3A  0E01               	movlw	1
  4500  002C3C  EC3B  F01C         	call	_LCDPrintChar
  4501  002C40                     l3388:
  4502                           
  4503                           ;mcc.c: 91:     if(humidity_value == 5) {
  4504  002C40  0E05               	movlw	5
  4505  002C42  0100               	movlb	0	; () banked
  4506  002C44  199A               	xorwf	_humidity_value& (0+255),w,b
  4507  002C46  A4D8               	btfss	status,2,c
  4508  002C48  EF28  F016         	goto	u2611
  4509  002C4C  EF2A  F016         	goto	u2610
  4510  002C50                     u2611:
  4511  002C50  EF35  F016         	goto	l3392
  4512  002C54                     u2610:
  4513  002C54                     
  4514                           ; BSR set to: 0
  4515                           ;mcc.c: 92:         LCDPrint(1, 8, "ER");
  4516  002C54  0E08               	movlw	8
  4517  002C56  6FA8               	movwf	LCDPrint@pos& (0+255),b
  4518  002C58  0E8F               	movlw	low STR_26
  4519  002C5A  6FA9               	movwf	LCDPrint@ptr& (0+255),b
  4520  002C5C  0E10               	movlw	high STR_26
  4521  002C5E  6FAA               	movwf	(LCDPrint@ptr+1)& (0+255),b
  4522  002C60  0E01               	movlw	1
  4523  002C62  EC98  F01B         	call	_LCDPrint
  4524                           
  4525                           ;mcc.c: 93:     } else {
  4526  002C66  EF5A  F016         	goto	l454
  4527  002C6A                     l3392:
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;mcc.c: 94:         LCDPrintChar(1, 8, humidity_value / 10 + '0');
  4531  002C6A  0E08               	movlw	8
  4532  002C6C  6FA8               	movwf	LCDPrintChar@pos& (0+255),b
  4533  002C6E  C09A  F09D         	movff	_humidity_value,___awdiv@dividend
  4534  002C72  6B9E               	clrf	(___awdiv@dividend+1)& (0+255),b
  4535  002C74  0E00               	movlw	0
  4536  002C76  6FA0               	movwf	(___awdiv@divisor+1)& (0+255),b
  4537  002C78  0E0A               	movlw	10
  4538  002C7A  6F9F               	movwf	___awdiv@divisor& (0+255),b
  4539  002C7C  EC52  F017         	call	___awdiv	;wreg free
  4540  002C80  0100               	movlb	0	; () banked
  4541  002C82  519D               	movf	?___awdiv& (0+255),w,b
  4542  002C84  0F30               	addlw	48
  4543  002C86  6FA9               	movwf	LCDPrintChar@ch& (0+255),b
  4544  002C88  0E01               	movlw	1
  4545  002C8A  EC3B  F01C         	call	_LCDPrintChar
  4546                           
  4547                           ;mcc.c: 95:         LCDPrintChar(1, 9, humidity_value % 10 + '0');
  4548  002C8E  0E09               	movlw	9
  4549  002C90  0100               	movlb	0	; () banked
  4550  002C92  6FA8               	movwf	LCDPrintChar@pos& (0+255),b
  4551  002C94  C09A  F09D         	movff	_humidity_value,___awmod@dividend
  4552  002C98  6B9E               	clrf	(___awmod@dividend+1)& (0+255),b
  4553  002C9A  0E00               	movlw	0
  4554  002C9C  6FA0               	movwf	(___awmod@divisor+1)& (0+255),b
  4555  002C9E  0E0A               	movlw	10
  4556  002CA0  6F9F               	movwf	___awmod@divisor& (0+255),b
  4557  002CA2  EC70  F018         	call	___awmod	;wreg free
  4558  002CA6  0100               	movlb	0	; () banked
  4559  002CA8  519D               	movf	?___awmod& (0+255),w,b
  4560  002CAA  0F30               	addlw	48
  4561  002CAC  6FA9               	movwf	LCDPrintChar@ch& (0+255),b
  4562  002CAE  0E01               	movlw	1
  4563  002CB0  EC3B  F01C         	call	_LCDPrintChar
  4564  002CB4                     l454:
  4565  002CB4  0012               	return		;funcret
  4566  002CB6                     __end_of_print_temp_and_humid:
  4567                           	opt callstack 0
  4568                           
  4569 ;; *************** function _handleButton *****************
  4570 ;; Defined at:
  4571 ;;		line 35 in file "buttons.c"
  4572 ;; Parameters:    Size  Location     Type
  4573 ;;  data_ptr        2    2[BANK0 ] PTR void 
  4574 ;;		 -> NULL(0), 
  4575 ;; Auto vars:     Size  Location     Type
  4576 ;;  checkRB0        2    8[BANK0 ] int 
  4577 ;;  checkRA5        2    6[BANK0 ] int 
  4578 ;; Return value:  Size  Location     Type
  4579 ;;                  1    wreg      void 
  4580 ;; Registers used:
  4581 ;;		wreg, status,2, status,0, cstack
  4582 ;; Tracked objects:
  4583 ;;		On entry : 0/0
  4584 ;;		On exit  : 0/0
  4585 ;;		Unchanged: 0/0
  4586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4587 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4588 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4589 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4590 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4591 ;;Total ram usage:        8 bytes
  4592 ;; Hardware stack levels used:    1
  4593 ;; Hardware stack levels required when called:    6
  4594 ;; This function calls:
  4595 ;;		_readButtonRA5
  4596 ;;		_readButtonRB0
  4597 ;; This function is called by:
  4598 ;;		_main
  4599 ;;		_dispatch
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           
  4603                           	psect	text21
  4604  00224E                     __ptext21:
  4605                           	opt callstack 0
  4606  00224E                     _handleButton:
  4607                           	opt callstack 23
  4608  00224E                     
  4609                           ;buttons.c: 36:     int checkRA5 = readButtonRA5();
  4610  00224E  EC48  F01B         	call	_readButtonRA5	;wreg free
  4611  002252  C09D  F0A3         	movff	?_readButtonRA5,handleButton@checkRA5
  4612  002256  C09E  F0A4         	movff	?_readButtonRA5+1,handleButton@checkRA5+1
  4613                           
  4614                           ;buttons.c: 37:     int checkRB0 = readButtonRB0();
  4615  00225A  EC1F  F01B         	call	_readButtonRB0	;wreg free
  4616  00225E  C09D  F0A5         	movff	?_readButtonRB0,handleButton@checkRB0
  4617  002262  C09E  F0A6         	movff	?_readButtonRB0+1,handleButton@checkRB0+1
  4618  002266                     
  4619                           ;buttons.c: 38:     if(checkRA5 == 2) {
  4620  002266  0E02               	movlw	2
  4621  002268  0100               	movlb	0	; () banked
  4622  00226A  19A3               	xorwf	handleButton@checkRA5& (0+255),w,b
  4623  00226C  11A4               	iorwf	(handleButton@checkRA5+1)& (0+255),w,b
  4624  00226E  A4D8               	btfss	status,2,c
  4625  002270  EF3C  F011         	goto	u2351
  4626  002274  EF3E  F011         	goto	u2350
  4627  002278                     u2351:
  4628  002278  EFE2  F011         	goto	l3234
  4629  00227C                     u2350:
  4630  00227C                     
  4631                           ; BSR set to: 0
  4632                           ;buttons.c: 39:         stateRB0 = 0;
  4633  00227C  0E00               	movlw	0
  4634  00227E  6F92               	movwf	_stateRB0& (0+255),b
  4635                           
  4636                           ;buttons.c: 40:         countRB0 = 0;
  4637  002280  0E00               	movlw	0
  4638  002282  6F78               	movwf	_countRB0& (0+255),b
  4639  002284  0E00               	movlw	0
  4640  002286  6F79               	movwf	(_countRB0+1)& (0+255),b
  4641  002288  0E00               	movlw	0
  4642  00228A  6F7A               	movwf	(_countRB0+2)& (0+255),b
  4643  00228C  0E00               	movlw	0
  4644  00228E  6F7B               	movwf	(_countRB0+3)& (0+255),b
  4645                           
  4646                           ;buttons.c: 41:         countRB0_1 = 0;
  4647  002290  0E00               	movlw	0
  4648  002292  6F74               	movwf	_countRB0_1& (0+255),b
  4649  002294  0E00               	movlw	0
  4650  002296  6F75               	movwf	(_countRB0_1+1)& (0+255),b
  4651  002298  0E00               	movlw	0
  4652  00229A  6F76               	movwf	(_countRB0_1+2)& (0+255),b
  4653  00229C  0E00               	movlw	0
  4654  00229E  6F77               	movwf	(_countRB0_1+3)& (0+255),b
  4655                           
  4656                           ;buttons.c: 42:         switch(stateRA5) {
  4657  0022A0  EFC5  F011         	goto	l3232
  4658  0022A4                     l3212:
  4659                           
  4660                           ; BSR set to: 0
  4661                           ;buttons.c: 44:                 RA5_pressed = 1;
  4662  0022A4  0E01               	movlw	1
  4663  0022A6  6F9C               	movwf	_RA5_pressed& (0+255),b
  4664                           
  4665                           ;buttons.c: 45:                 stateRA5 = 1;
  4666  0022A8  0E01               	movlw	1
  4667  0022AA  6F93               	movwf	_stateRA5& (0+255),b
  4668                           
  4669                           ;buttons.c: 46:                 break;
  4670  0022AC  EFC6  F012         	goto	l225
  4671  0022B0                     l3214:
  4672                           
  4673                           ; BSR set to: 0
  4674                           ;buttons.c: 48:                 countRA5++;
  4675  0022B0  0E01               	movlw	1
  4676  0022B2  2780               	addwf	_countRA5& (0+255),f,b
  4677  0022B4  0E00               	movlw	0
  4678  0022B6  2381               	addwfc	(_countRA5+1)& (0+255),f,b
  4679  0022B8  2382               	addwfc	(_countRA5+2)& (0+255),f,b
  4680  0022BA  2383               	addwfc	(_countRA5+3)& (0+255),f,b
  4681                           
  4682                           ;buttons.c: 49:                 if(countRA5 >= 1000 / 80) {
  4683  0022BC  5183               	movf	(_countRA5+3)& (0+255),w,b
  4684  0022BE  1182               	iorwf	(_countRA5+2)& (0+255),w,b
  4685  0022C0  1181               	iorwf	(_countRA5+1)& (0+255),w,b
  4686  0022C2  E109               	bnz	u2360
  4687  0022C4  0E0C               	movlw	12
  4688  0022C6  5D80               	subwf	_countRA5& (0+255),w,b
  4689  0022C8  A0D8               	btfss	status,0,c
  4690  0022CA  EF69  F011         	goto	u2361
  4691  0022CE  EF6B  F011         	goto	u2360
  4692  0022D2                     u2361:
  4693  0022D2  EFC6  F012         	goto	l225
  4694  0022D6                     u2360:
  4695  0022D6                     
  4696                           ; BSR set to: 0
  4697                           ;buttons.c: 50:                     RA5_pressed = 1;
  4698  0022D6  0E01               	movlw	1
  4699  0022D8  6F9C               	movwf	_RA5_pressed& (0+255),b
  4700                           
  4701                           ;buttons.c: 51:                     stateRA5 = 2;
  4702  0022DA  0E02               	movlw	2
  4703  0022DC  6F93               	movwf	_stateRA5& (0+255),b
  4704  0022DE  EFC6  F012         	goto	l225
  4705  0022E2                     l3218:
  4706                           
  4707                           ; BSR set to: 0
  4708                           ;buttons.c: 55:                 countRA5++;
  4709  0022E2  0E01               	movlw	1
  4710  0022E4  2780               	addwf	_countRA5& (0+255),f,b
  4711  0022E6  0E00               	movlw	0
  4712  0022E8  2381               	addwfc	(_countRA5+1)& (0+255),f,b
  4713  0022EA  2382               	addwfc	(_countRA5+2)& (0+255),f,b
  4714  0022EC  2383               	addwfc	(_countRA5+3)& (0+255),f,b
  4715                           
  4716                           ;buttons.c: 56:                 countRA5_1++;
  4717  0022EE  0E01               	movlw	1
  4718  0022F0  277C               	addwf	_countRA5_1& (0+255),f,b
  4719  0022F2  0E00               	movlw	0
  4720  0022F4  237D               	addwfc	(_countRA5_1+1)& (0+255),f,b
  4721  0022F6  237E               	addwfc	(_countRA5_1+2)& (0+255),f,b
  4722  0022F8  237F               	addwfc	(_countRA5_1+3)& (0+255),f,b
  4723                           
  4724                           ;buttons.c: 57:                 if(countRA5_1 == 600 / 80) {
  4725  0022FA  0E07               	movlw	7
  4726  0022FC  197C               	xorwf	_countRA5_1& (0+255),w,b
  4727  0022FE  117D               	iorwf	(_countRA5_1+1)& (0+255),w,b
  4728  002300  117E               	iorwf	(_countRA5_1+2)& (0+255),w,b
  4729  002302  117F               	iorwf	(_countRA5_1+3)& (0+255),w,b
  4730  002304  A4D8               	btfss	status,2,c
  4731  002306  EF87  F011         	goto	u2371
  4732  00230A  EF89  F011         	goto	u2370
  4733  00230E                     u2371:
  4734  00230E  EF93  F011         	goto	l3222
  4735  002312                     u2370:
  4736  002312                     
  4737                           ; BSR set to: 0
  4738                           ;buttons.c: 58:                     RA5_pressed = 1;
  4739  002312  0E01               	movlw	1
  4740  002314  6F9C               	movwf	_RA5_pressed& (0+255),b
  4741                           
  4742                           ;buttons.c: 59:                     countRA5_1 = 0;
  4743  002316  0E00               	movlw	0
  4744  002318  6F7C               	movwf	_countRA5_1& (0+255),b
  4745  00231A  0E00               	movlw	0
  4746  00231C  6F7D               	movwf	(_countRA5_1+1)& (0+255),b
  4747  00231E  0E00               	movlw	0
  4748  002320  6F7E               	movwf	(_countRA5_1+2)& (0+255),b
  4749  002322  0E00               	movlw	0
  4750  002324  6F7F               	movwf	(_countRA5_1+3)& (0+255),b
  4751  002326                     l3222:
  4752                           
  4753                           ; BSR set to: 0
  4754                           ;buttons.c: 61:                 if(countRA5 >= 3000 / 80) {
  4755  002326  5183               	movf	(_countRA5+3)& (0+255),w,b
  4756  002328  1182               	iorwf	(_countRA5+2)& (0+255),w,b
  4757  00232A  1181               	iorwf	(_countRA5+1)& (0+255),w,b
  4758  00232C  E109               	bnz	u2380
  4759  00232E  0E25               	movlw	37
  4760  002330  5D80               	subwf	_countRA5& (0+255),w,b
  4761  002332  A0D8               	btfss	status,0,c
  4762  002334  EF9E  F011         	goto	u2381
  4763  002338  EFA0  F011         	goto	u2380
  4764  00233C                     u2381:
  4765  00233C  EFC6  F012         	goto	l225
  4766  002340                     u2380:
  4767  002340                     
  4768                           ; BSR set to: 0
  4769                           ;buttons.c: 62:                     RA5_pressed = 1;
  4770  002340  0E01               	movlw	1
  4771  002342  6F9C               	movwf	_RA5_pressed& (0+255),b
  4772                           
  4773                           ;buttons.c: 63:                     stateRA5 = 3;
  4774  002344  0E03               	movlw	3
  4775  002346  6F93               	movwf	_stateRA5& (0+255),b
  4776  002348  EFC6  F012         	goto	l225
  4777  00234C                     l3226:
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;buttons.c: 67:                 countRA5++;
  4781  00234C  0E01               	movlw	1
  4782  00234E  2780               	addwf	_countRA5& (0+255),f,b
  4783  002350  0E00               	movlw	0
  4784  002352  2381               	addwfc	(_countRA5+1)& (0+255),f,b
  4785  002354  2382               	addwfc	(_countRA5+2)& (0+255),f,b
  4786  002356  2383               	addwfc	(_countRA5+3)& (0+255),f,b
  4787                           
  4788                           ;buttons.c: 68:                 if(countRA5 >= 200 / 80) {
  4789  002358  5183               	movf	(_countRA5+3)& (0+255),w,b
  4790  00235A  1182               	iorwf	(_countRA5+2)& (0+255),w,b
  4791  00235C  1181               	iorwf	(_countRA5+1)& (0+255),w,b
  4792  00235E  E109               	bnz	u2390
  4793  002360  0E02               	movlw	2
  4794  002362  5D80               	subwf	_countRA5& (0+255),w,b
  4795  002364  A0D8               	btfss	status,0,c
  4796  002366  EFB7  F011         	goto	u2391
  4797  00236A  EFB9  F011         	goto	u2390
  4798  00236E                     u2391:
  4799  00236E  EFC6  F012         	goto	l225
  4800  002372                     u2390:
  4801  002372                     
  4802                           ; BSR set to: 0
  4803                           ;buttons.c: 69:                     RA5_pressed = 1;
  4804  002372  0E01               	movlw	1
  4805  002374  6F9C               	movwf	_RA5_pressed& (0+255),b
  4806                           
  4807                           ;buttons.c: 70:                     countRA5 = 0;
  4808  002376  0E00               	movlw	0
  4809  002378  6F80               	movwf	_countRA5& (0+255),b
  4810  00237A  0E00               	movlw	0
  4811  00237C  6F81               	movwf	(_countRA5+1)& (0+255),b
  4812  00237E  0E00               	movlw	0
  4813  002380  6F82               	movwf	(_countRA5+2)& (0+255),b
  4814  002382  0E00               	movlw	0
  4815  002384  6F83               	movwf	(_countRA5+3)& (0+255),b
  4816  002386  EFC6  F012         	goto	l225
  4817  00238A                     l3232:
  4818                           
  4819                           ; BSR set to: 0
  4820  00238A  5193               	movf	_stateRA5& (0+255),w,b
  4821  00238C  6FA1               	movwf	??_handleButton& (0+255),b
  4822  00238E  6BA2               	clrf	(??_handleButton+1)& (0+255),b
  4823                           
  4824                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4825                           ; Switch size 1, requested type "simple"
  4826                           ; Number of cases is 1, Range of values is 0 to 0
  4827                           ; switch strategies available:
  4828                           ; Name         Instructions Cycles
  4829                           ; simple_byte            4     3 (average)
  4830                           ;	Chosen strategy is simple_byte
  4831  002390  51A2               	movf	(??_handleButton+1)& (0+255),w,b
  4832  002392  0A00               	xorlw	0	; case 0
  4833  002394  B4D8               	btfsc	status,2,c
  4834  002396  EFCF  F011         	goto	l4020
  4835  00239A  EFC6  F012         	goto	l225
  4836  00239E                     l4020:
  4837                           
  4838                           ; BSR set to: 0
  4839                           ; Switch size 1, requested type "simple"
  4840                           ; Number of cases is 4, Range of values is 0 to 3
  4841                           ; switch strategies available:
  4842                           ; Name         Instructions Cycles
  4843                           ; simple_byte           13     7 (average)
  4844                           ;	Chosen strategy is simple_byte
  4845  00239E  51A1               	movf	??_handleButton& (0+255),w,b
  4846  0023A0  0A00               	xorlw	0	; case 0
  4847  0023A2  B4D8               	btfsc	status,2,c
  4848  0023A4  EF52  F011         	goto	l3212
  4849  0023A8  0A01               	xorlw	1	; case 1
  4850  0023AA  B4D8               	btfsc	status,2,c
  4851  0023AC  EF58  F011         	goto	l3214
  4852  0023B0  0A03               	xorlw	3	; case 2
  4853  0023B2  B4D8               	btfsc	status,2,c
  4854  0023B4  EF71  F011         	goto	l3218
  4855  0023B8  0A01               	xorlw	1	; case 3
  4856  0023BA  B4D8               	btfsc	status,2,c
  4857  0023BC  EFA6  F011         	goto	l3226
  4858  0023C0  EFC6  F012         	goto	l225
  4859  0023C4                     l3234:
  4860                           
  4861                           ; BSR set to: 0
  4862  0023C4  0E02               	movlw	2
  4863  0023C6  19A5               	xorwf	handleButton@checkRB0& (0+255),w,b
  4864  0023C8  11A6               	iorwf	(handleButton@checkRB0+1)& (0+255),w,b
  4865  0023CA  A4D8               	btfss	status,2,c
  4866  0023CC  EFEA  F011         	goto	u2401
  4867  0023D0  EFEC  F011         	goto	u2400
  4868  0023D4                     u2401:
  4869  0023D4  EF90  F012         	goto	l3260
  4870  0023D8                     u2400:
  4871  0023D8                     
  4872                           ; BSR set to: 0
  4873                           ;buttons.c: 76:         stateRA5 = 0;
  4874  0023D8  0E00               	movlw	0
  4875  0023DA  6F93               	movwf	_stateRA5& (0+255),b
  4876                           
  4877                           ;buttons.c: 77:         countRA5 = 0;
  4878  0023DC  0E00               	movlw	0
  4879  0023DE  6F80               	movwf	_countRA5& (0+255),b
  4880  0023E0  0E00               	movlw	0
  4881  0023E2  6F81               	movwf	(_countRA5+1)& (0+255),b
  4882  0023E4  0E00               	movlw	0
  4883  0023E6  6F82               	movwf	(_countRA5+2)& (0+255),b
  4884  0023E8  0E00               	movlw	0
  4885  0023EA  6F83               	movwf	(_countRA5+3)& (0+255),b
  4886                           
  4887                           ;buttons.c: 78:         countRA5_1 = 0;
  4888  0023EC  0E00               	movlw	0
  4889  0023EE  6F7C               	movwf	_countRA5_1& (0+255),b
  4890  0023F0  0E00               	movlw	0
  4891  0023F2  6F7D               	movwf	(_countRA5_1+1)& (0+255),b
  4892  0023F4  0E00               	movlw	0
  4893  0023F6  6F7E               	movwf	(_countRA5_1+2)& (0+255),b
  4894  0023F8  0E00               	movlw	0
  4895  0023FA  6F7F               	movwf	(_countRA5_1+3)& (0+255),b
  4896                           
  4897                           ;buttons.c: 79:         switch(stateRB0) {
  4898  0023FC  EF73  F012         	goto	l3258
  4899  002400                     l3238:
  4900                           
  4901                           ; BSR set to: 0
  4902                           ;buttons.c: 81:                 RB0_pressed = 1;
  4903  002400  0E01               	movlw	1
  4904  002402  6F9B               	movwf	_RB0_pressed& (0+255),b
  4905                           
  4906                           ;buttons.c: 82:                 stateRB0 = 1;
  4907  002404  0E01               	movlw	1
  4908  002406  6F92               	movwf	_stateRB0& (0+255),b
  4909                           
  4910                           ;buttons.c: 83:                 break;
  4911  002408  EFC6  F012         	goto	l225
  4912  00240C                     l3240:
  4913                           
  4914                           ; BSR set to: 0
  4915                           ;buttons.c: 85:                 countRB0++;
  4916  00240C  0E01               	movlw	1
  4917  00240E  2778               	addwf	_countRB0& (0+255),f,b
  4918  002410  0E00               	movlw	0
  4919  002412  2379               	addwfc	(_countRB0+1)& (0+255),f,b
  4920  002414  237A               	addwfc	(_countRB0+2)& (0+255),f,b
  4921  002416  237B               	addwfc	(_countRB0+3)& (0+255),f,b
  4922                           
  4923                           ;buttons.c: 86:                 if(countRB0 >= 1000 / 80) {
  4924  002418  517B               	movf	(_countRB0+3)& (0+255),w,b
  4925  00241A  117A               	iorwf	(_countRB0+2)& (0+255),w,b
  4926  00241C  1179               	iorwf	(_countRB0+1)& (0+255),w,b
  4927  00241E  E109               	bnz	u2410
  4928  002420  0E0C               	movlw	12
  4929  002422  5D78               	subwf	_countRB0& (0+255),w,b
  4930  002424  A0D8               	btfss	status,0,c
  4931  002426  EF17  F012         	goto	u2411
  4932  00242A  EF19  F012         	goto	u2410
  4933  00242E                     u2411:
  4934  00242E  EFC6  F012         	goto	l225
  4935  002432                     u2410:
  4936  002432                     
  4937                           ; BSR set to: 0
  4938                           ;buttons.c: 87:                     RB0_pressed = 1;
  4939  002432  0E01               	movlw	1
  4940  002434  6F9B               	movwf	_RB0_pressed& (0+255),b
  4941                           
  4942                           ;buttons.c: 88:                     stateRB0 = 2;
  4943  002436  0E02               	movlw	2
  4944  002438  6F92               	movwf	_stateRB0& (0+255),b
  4945  00243A  EFC6  F012         	goto	l225
  4946  00243E                     l3244:
  4947                           
  4948                           ; BSR set to: 0
  4949                           ;buttons.c: 92:                 countRB0++;
  4950  00243E  0E01               	movlw	1
  4951  002440  2778               	addwf	_countRB0& (0+255),f,b
  4952  002442  0E00               	movlw	0
  4953  002444  2379               	addwfc	(_countRB0+1)& (0+255),f,b
  4954  002446  237A               	addwfc	(_countRB0+2)& (0+255),f,b
  4955  002448  237B               	addwfc	(_countRB0+3)& (0+255),f,b
  4956                           
  4957                           ;buttons.c: 93:                 countRB0_1++;
  4958  00244A  0E01               	movlw	1
  4959  00244C  2774               	addwf	_countRB0_1& (0+255),f,b
  4960  00244E  0E00               	movlw	0
  4961  002450  2375               	addwfc	(_countRB0_1+1)& (0+255),f,b
  4962  002452  2376               	addwfc	(_countRB0_1+2)& (0+255),f,b
  4963  002454  2377               	addwfc	(_countRB0_1+3)& (0+255),f,b
  4964                           
  4965                           ;buttons.c: 94:                 if(countRB0_1 == 600 / 80) {
  4966  002456  0E07               	movlw	7
  4967  002458  1974               	xorwf	_countRB0_1& (0+255),w,b
  4968  00245A  1175               	iorwf	(_countRB0_1+1)& (0+255),w,b
  4969  00245C  1176               	iorwf	(_countRB0_1+2)& (0+255),w,b
  4970  00245E  1177               	iorwf	(_countRB0_1+3)& (0+255),w,b
  4971  002460  A4D8               	btfss	status,2,c
  4972  002462  EF35  F012         	goto	u2421
  4973  002466  EF37  F012         	goto	u2420
  4974  00246A                     u2421:
  4975  00246A  EF41  F012         	goto	l3248
  4976  00246E                     u2420:
  4977  00246E                     
  4978                           ; BSR set to: 0
  4979                           ;buttons.c: 95:                     RB0_pressed = 1;
  4980  00246E  0E01               	movlw	1
  4981  002470  6F9B               	movwf	_RB0_pressed& (0+255),b
  4982                           
  4983                           ;buttons.c: 96:                     countRB0_1 = 0;
  4984  002472  0E00               	movlw	0
  4985  002474  6F74               	movwf	_countRB0_1& (0+255),b
  4986  002476  0E00               	movlw	0
  4987  002478  6F75               	movwf	(_countRB0_1+1)& (0+255),b
  4988  00247A  0E00               	movlw	0
  4989  00247C  6F76               	movwf	(_countRB0_1+2)& (0+255),b
  4990  00247E  0E00               	movlw	0
  4991  002480  6F77               	movwf	(_countRB0_1+3)& (0+255),b
  4992  002482                     l3248:
  4993                           
  4994                           ; BSR set to: 0
  4995                           ;buttons.c: 98:                 if(countRB0 >= 3000 / 80) {
  4996  002482  517B               	movf	(_countRB0+3)& (0+255),w,b
  4997  002484  117A               	iorwf	(_countRB0+2)& (0+255),w,b
  4998  002486  1179               	iorwf	(_countRB0+1)& (0+255),w,b
  4999  002488  E109               	bnz	u2430
  5000  00248A  0E25               	movlw	37
  5001  00248C  5D78               	subwf	_countRB0& (0+255),w,b
  5002  00248E  A0D8               	btfss	status,0,c
  5003  002490  EF4C  F012         	goto	u2431
  5004  002494  EF4E  F012         	goto	u2430
  5005  002498                     u2431:
  5006  002498  EFC6  F012         	goto	l225
  5007  00249C                     u2430:
  5008  00249C                     
  5009                           ; BSR set to: 0
  5010                           ;buttons.c: 99:                     RB0_pressed = 1;
  5011  00249C  0E01               	movlw	1
  5012  00249E  6F9B               	movwf	_RB0_pressed& (0+255),b
  5013                           
  5014                           ;buttons.c: 100:                     stateRB0 = 3;
  5015  0024A0  0E03               	movlw	3
  5016  0024A2  6F92               	movwf	_stateRB0& (0+255),b
  5017  0024A4  EFC6  F012         	goto	l225
  5018  0024A8                     l3252:
  5019                           
  5020                           ; BSR set to: 0
  5021                           ;buttons.c: 104:                 countRB0++;
  5022  0024A8  0E01               	movlw	1
  5023  0024AA  2778               	addwf	_countRB0& (0+255),f,b
  5024  0024AC  0E00               	movlw	0
  5025  0024AE  2379               	addwfc	(_countRB0+1)& (0+255),f,b
  5026  0024B0  237A               	addwfc	(_countRB0+2)& (0+255),f,b
  5027  0024B2  237B               	addwfc	(_countRB0+3)& (0+255),f,b
  5028                           
  5029                           ;buttons.c: 105:                 if(countRB0 >= 200 / 80) {
  5030  0024B4  517B               	movf	(_countRB0+3)& (0+255),w,b
  5031  0024B6  117A               	iorwf	(_countRB0+2)& (0+255),w,b
  5032  0024B8  1179               	iorwf	(_countRB0+1)& (0+255),w,b
  5033  0024BA  E109               	bnz	u2440
  5034  0024BC  0E02               	movlw	2
  5035  0024BE  5D78               	subwf	_countRB0& (0+255),w,b
  5036  0024C0  A0D8               	btfss	status,0,c
  5037  0024C2  EF65  F012         	goto	u2441
  5038  0024C6  EF67  F012         	goto	u2440
  5039  0024CA                     u2441:
  5040  0024CA  EFC6  F012         	goto	l225
  5041  0024CE                     u2440:
  5042  0024CE                     
  5043                           ; BSR set to: 0
  5044                           ;buttons.c: 106:                     RB0_pressed = 1;
  5045  0024CE  0E01               	movlw	1
  5046  0024D0  6F9B               	movwf	_RB0_pressed& (0+255),b
  5047                           
  5048                           ;buttons.c: 107:                     countRB0 = 0;
  5049  0024D2  0E00               	movlw	0
  5050  0024D4  6F78               	movwf	_countRB0& (0+255),b
  5051  0024D6  0E00               	movlw	0
  5052  0024D8  6F79               	movwf	(_countRB0+1)& (0+255),b
  5053  0024DA  0E00               	movlw	0
  5054  0024DC  6F7A               	movwf	(_countRB0+2)& (0+255),b
  5055  0024DE  0E00               	movlw	0
  5056  0024E0  6F7B               	movwf	(_countRB0+3)& (0+255),b
  5057  0024E2  EFC6  F012         	goto	l225
  5058  0024E6                     l3258:
  5059                           
  5060                           ; BSR set to: 0
  5061  0024E6  5192               	movf	_stateRB0& (0+255),w,b
  5062  0024E8  6FA1               	movwf	??_handleButton& (0+255),b
  5063  0024EA  6BA2               	clrf	(??_handleButton+1)& (0+255),b
  5064                           
  5065                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5066                           ; Switch size 1, requested type "simple"
  5067                           ; Number of cases is 1, Range of values is 0 to 0
  5068                           ; switch strategies available:
  5069                           ; Name         Instructions Cycles
  5070                           ; simple_byte            4     3 (average)
  5071                           ;	Chosen strategy is simple_byte
  5072  0024EC  51A2               	movf	(??_handleButton+1)& (0+255),w,b
  5073  0024EE  0A00               	xorlw	0	; case 0
  5074  0024F0  B4D8               	btfsc	status,2,c
  5075  0024F2  EF7D  F012         	goto	l4022
  5076  0024F6  EFC6  F012         	goto	l225
  5077  0024FA                     l4022:
  5078                           
  5079                           ; BSR set to: 0
  5080                           ; Switch size 1, requested type "simple"
  5081                           ; Number of cases is 4, Range of values is 0 to 3
  5082                           ; switch strategies available:
  5083                           ; Name         Instructions Cycles
  5084                           ; simple_byte           13     7 (average)
  5085                           ;	Chosen strategy is simple_byte
  5086  0024FA  51A1               	movf	??_handleButton& (0+255),w,b
  5087  0024FC  0A00               	xorlw	0	; case 0
  5088  0024FE  B4D8               	btfsc	status,2,c
  5089  002500  EF00  F012         	goto	l3238
  5090  002504  0A01               	xorlw	1	; case 1
  5091  002506  B4D8               	btfsc	status,2,c
  5092  002508  EF06  F012         	goto	l3240
  5093  00250C  0A03               	xorlw	3	; case 2
  5094  00250E  B4D8               	btfsc	status,2,c
  5095  002510  EF1F  F012         	goto	l3244
  5096  002514  0A01               	xorlw	1	; case 3
  5097  002516  B4D8               	btfsc	status,2,c
  5098  002518  EF54  F012         	goto	l3252
  5099  00251C  EFC6  F012         	goto	l225
  5100  002520                     l3260:
  5101                           
  5102                           ; BSR set to: 0
  5103  002520  05A5               	decf	handleButton@checkRB0& (0+255),w,b
  5104  002522  11A6               	iorwf	(handleButton@checkRB0+1)& (0+255),w,b
  5105  002524  B4D8               	btfsc	status,2,c
  5106  002526  EF97  F012         	goto	u2451
  5107  00252A  EF99  F012         	goto	u2450
  5108  00252E                     u2451:
  5109  00252E  EFA2  F012         	goto	l3264
  5110  002532                     u2450:
  5111  002532                     
  5112                           ; BSR set to: 0
  5113  002532  05A3               	decf	handleButton@checkRA5& (0+255),w,b
  5114  002534  11A4               	iorwf	(handleButton@checkRA5+1)& (0+255),w,b
  5115  002536  A4D8               	btfss	status,2,c
  5116  002538  EFA0  F012         	goto	u2461
  5117  00253C  EFA2  F012         	goto	u2460
  5118  002540                     u2461:
  5119  002540  EFC6  F012         	goto	l225
  5120  002544                     u2460:
  5121  002544                     l3264:
  5122                           
  5123                           ; BSR set to: 0
  5124                           ;buttons.c: 113:         countRA5 = 0;
  5125  002544  0E00               	movlw	0
  5126  002546  6F80               	movwf	_countRA5& (0+255),b
  5127  002548  0E00               	movlw	0
  5128  00254A  6F81               	movwf	(_countRA5+1)& (0+255),b
  5129  00254C  0E00               	movlw	0
  5130  00254E  6F82               	movwf	(_countRA5+2)& (0+255),b
  5131  002550  0E00               	movlw	0
  5132  002552  6F83               	movwf	(_countRA5+3)& (0+255),b
  5133                           
  5134                           ;buttons.c: 114:         countRA5_1 = 0;
  5135  002554  0E00               	movlw	0
  5136  002556  6F7C               	movwf	_countRA5_1& (0+255),b
  5137  002558  0E00               	movlw	0
  5138  00255A  6F7D               	movwf	(_countRA5_1+1)& (0+255),b
  5139  00255C  0E00               	movlw	0
  5140  00255E  6F7E               	movwf	(_countRA5_1+2)& (0+255),b
  5141  002560  0E00               	movlw	0
  5142  002562  6F7F               	movwf	(_countRA5_1+3)& (0+255),b
  5143                           
  5144                           ;buttons.c: 115:         countRB0 = 0;
  5145  002564  0E00               	movlw	0
  5146  002566  6F78               	movwf	_countRB0& (0+255),b
  5147  002568  0E00               	movlw	0
  5148  00256A  6F79               	movwf	(_countRB0+1)& (0+255),b
  5149  00256C  0E00               	movlw	0
  5150  00256E  6F7A               	movwf	(_countRB0+2)& (0+255),b
  5151  002570  0E00               	movlw	0
  5152  002572  6F7B               	movwf	(_countRB0+3)& (0+255),b
  5153                           
  5154                           ;buttons.c: 116:         countRB0_1 = 0;
  5155  002574  0E00               	movlw	0
  5156  002576  6F74               	movwf	_countRB0_1& (0+255),b
  5157  002578  0E00               	movlw	0
  5158  00257A  6F75               	movwf	(_countRB0_1+1)& (0+255),b
  5159  00257C  0E00               	movlw	0
  5160  00257E  6F76               	movwf	(_countRB0_1+2)& (0+255),b
  5161  002580  0E00               	movlw	0
  5162  002582  6F77               	movwf	(_countRB0_1+3)& (0+255),b
  5163                           
  5164                           ;buttons.c: 117:         stateRA5 = 0;
  5165  002584  0E00               	movlw	0
  5166  002586  6F93               	movwf	_stateRA5& (0+255),b
  5167                           
  5168                           ;buttons.c: 118:         stateRB0 = 0;
  5169  002588  0E00               	movlw	0
  5170  00258A  6F92               	movwf	_stateRB0& (0+255),b
  5171  00258C                     l225:
  5172                           
  5173                           ; BSR set to: 0
  5174  00258C  0012               	return		;funcret
  5175  00258E                     __end_of_handleButton:
  5176                           	opt callstack 0
  5177                           
  5178 ;; *************** function _readButtonRB0 *****************
  5179 ;; Defined at:
  5180 ;;		line 26 in file "buttons.c"
  5181 ;; Parameters:    Size  Location     Type
  5182 ;;		None
  5183 ;; Auto vars:     Size  Location     Type
  5184 ;;		None
  5185 ;; Return value:  Size  Location     Type
  5186 ;;                  2    0[BANK0 ] int 
  5187 ;; Registers used:
  5188 ;;		wreg, status,2, status,0
  5189 ;; Tracked objects:
  5190 ;;		On entry : 0/0
  5191 ;;		On exit  : 0/0
  5192 ;;		Unchanged: 0/0
  5193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5194 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5197 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5198 ;;Total ram usage:        2 bytes
  5199 ;; Hardware stack levels used:    1
  5200 ;; Hardware stack levels required when called:    5
  5201 ;; This function calls:
  5202 ;;		Nothing
  5203 ;; This function is called by:
  5204 ;;		_handleButton
  5205 ;; This function uses a non-reentrant model
  5206 ;;
  5207                           
  5208                           	psect	text22
  5209  00363E                     __ptext22:
  5210                           	opt callstack 0
  5211  00363E                     _readButtonRB0:
  5212                           	opt callstack 23
  5213  00363E                     
  5214                           ;buttons.c: 27:     firstReadRB0 = secondReadRB0;
  5215  00363E  C0D1  F0D2         	movff	_secondReadRB0,_firstReadRB0
  5216  003642                     
  5217                           ;buttons.c: 28:     secondReadRB0 = PORTBbits.RB0;
  5218  003642  0E00               	movlw	0
  5219  003644  B081               	btfsc	129,0,c	;volatile
  5220  003646  0E01               	movlw	1
  5221  003648  0100               	movlb	0	; () banked
  5222  00364A  6FD1               	movwf	_secondReadRB0& (0+255),b
  5223  00364C                     
  5224                           ; BSR set to: 0
  5225                           ;buttons.c: 29:     if(secondReadRB0 == firstReadRB0) {
  5226  00364C  51D2               	movf	_firstReadRB0& (0+255),w,b
  5227  00364E  19D1               	xorwf	_secondReadRB0& (0+255),w,b
  5228  003650  A4D8               	btfss	status,2,c
  5229  003652  EF2D  F01B         	goto	u1921
  5230  003656  EF2F  F01B         	goto	u1920
  5231  00365A                     u1921:
  5232  00365A  EF43  F01B         	goto	l2932
  5233  00365E                     u1920:
  5234  00365E                     
  5235                           ; BSR set to: 0
  5236                           ;buttons.c: 30:         return (secondReadRB0 == 0) ? 2 : 1;
  5237  00365E  51D1               	movf	_secondReadRB0& (0+255),w,b
  5238  003660  B4D8               	btfsc	status,2,c
  5239  003662  EF35  F01B         	goto	u1931
  5240  003666  EF37  F01B         	goto	u1930
  5241  00366A                     u1931:
  5242  00366A  EF3D  F01B         	goto	l2928
  5243  00366E                     u1930:
  5244  00366E                     
  5245                           ; BSR set to: 0
  5246  00366E  0E00               	movlw	0
  5247  003670  6F9E               	movwf	(?_readButtonRB0+1)& (0+255),b
  5248  003672  0E01               	movlw	1
  5249  003674  6F9D               	movwf	?_readButtonRB0& (0+255),b
  5250  003676  EF47  F01B         	goto	l195
  5251  00367A                     l2928:
  5252                           
  5253                           ; BSR set to: 0
  5254  00367A  0E00               	movlw	0
  5255  00367C  6F9E               	movwf	(?_readButtonRB0+1)& (0+255),b
  5256  00367E  0E02               	movlw	2
  5257  003680  6F9D               	movwf	?_readButtonRB0& (0+255),b
  5258  003682  EF47  F01B         	goto	l195
  5259  003686                     l2932:
  5260                           
  5261                           ; BSR set to: 0
  5262                           ;buttons.c: 32:     return 0;
  5263  003686  0E00               	movlw	0
  5264  003688  6F9E               	movwf	(?_readButtonRB0+1)& (0+255),b
  5265  00368A  0E00               	movlw	0
  5266  00368C  6F9D               	movwf	?_readButtonRB0& (0+255),b
  5267  00368E                     l195:
  5268                           
  5269                           ; BSR set to: 0
  5270  00368E  0012               	return		;funcret
  5271  003690                     __end_of_readButtonRB0:
  5272                           	opt callstack 0
  5273                           
  5274 ;; *************** function _readButtonRA5 *****************
  5275 ;; Defined at:
  5276 ;;		line 17 in file "buttons.c"
  5277 ;; Parameters:    Size  Location     Type
  5278 ;;		None
  5279 ;; Auto vars:     Size  Location     Type
  5280 ;;		None
  5281 ;; Return value:  Size  Location     Type
  5282 ;;                  2    0[BANK0 ] int 
  5283 ;; Registers used:
  5284 ;;		wreg, status,2, status,0
  5285 ;; Tracked objects:
  5286 ;;		On entry : 0/0
  5287 ;;		On exit  : 0/0
  5288 ;;		Unchanged: 0/0
  5289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5290 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5293 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5294 ;;Total ram usage:        2 bytes
  5295 ;; Hardware stack levels used:    1
  5296 ;; Hardware stack levels required when called:    5
  5297 ;; This function calls:
  5298 ;;		Nothing
  5299 ;; This function is called by:
  5300 ;;		_handleButton
  5301 ;; This function uses a non-reentrant model
  5302 ;;
  5303                           
  5304                           	psect	text23
  5305  003690                     __ptext23:
  5306                           	opt callstack 0
  5307  003690                     _readButtonRA5:
  5308                           	opt callstack 23
  5309  003690                     
  5310                           ;buttons.c: 18:     firstReadRA5 = secondReadRA5;
  5311  003690  C0D3  F0D4         	movff	_secondReadRA5,_firstReadRA5
  5312  003694                     
  5313                           ;buttons.c: 19:     secondReadRA5 = PORTAbits.RA5;
  5314  003694  0E00               	movlw	0
  5315  003696  BA80               	btfsc	128,5,c	;volatile
  5316  003698  0E01               	movlw	1
  5317  00369A  0100               	movlb	0	; () banked
  5318  00369C  6FD3               	movwf	_secondReadRA5& (0+255),b
  5319  00369E                     
  5320                           ; BSR set to: 0
  5321                           ;buttons.c: 20:     if(secondReadRA5 == firstReadRA5) {
  5322  00369E  51D4               	movf	_firstReadRA5& (0+255),w,b
  5323  0036A0  19D3               	xorwf	_secondReadRA5& (0+255),w,b
  5324  0036A2  A4D8               	btfss	status,2,c
  5325  0036A4  EF56  F01B         	goto	u1901
  5326  0036A8  EF58  F01B         	goto	u1900
  5327  0036AC                     u1901:
  5328  0036AC  EF6C  F01B         	goto	l2914
  5329  0036B0                     u1900:
  5330  0036B0                     
  5331                           ; BSR set to: 0
  5332                           ;buttons.c: 21:         return (secondReadRA5 == 0) ? 2 : 1;
  5333  0036B0  51D3               	movf	_secondReadRA5& (0+255),w,b
  5334  0036B2  B4D8               	btfsc	status,2,c
  5335  0036B4  EF5E  F01B         	goto	u1911
  5336  0036B8  EF60  F01B         	goto	u1910
  5337  0036BC                     u1911:
  5338  0036BC  EF66  F01B         	goto	l2910
  5339  0036C0                     u1910:
  5340  0036C0                     
  5341                           ; BSR set to: 0
  5342  0036C0  0E00               	movlw	0
  5343  0036C2  6F9E               	movwf	(?_readButtonRA5+1)& (0+255),b
  5344  0036C4  0E01               	movlw	1
  5345  0036C6  6F9D               	movwf	?_readButtonRA5& (0+255),b
  5346  0036C8  EF70  F01B         	goto	l187
  5347  0036CC                     l2910:
  5348                           
  5349                           ; BSR set to: 0
  5350  0036CC  0E00               	movlw	0
  5351  0036CE  6F9E               	movwf	(?_readButtonRA5+1)& (0+255),b
  5352  0036D0  0E02               	movlw	2
  5353  0036D2  6F9D               	movwf	?_readButtonRA5& (0+255),b
  5354  0036D4  EF70  F01B         	goto	l187
  5355  0036D8                     l2914:
  5356                           
  5357                           ; BSR set to: 0
  5358                           ;buttons.c: 23:     return 0;
  5359  0036D8  0E00               	movlw	0
  5360  0036DA  6F9E               	movwf	(?_readButtonRA5+1)& (0+255),b
  5361  0036DC  0E00               	movlw	0
  5362  0036DE  6F9D               	movwf	?_readButtonRA5& (0+255),b
  5363  0036E0                     l187:
  5364                           
  5365                           ; BSR set to: 0
  5366  0036E0  0012               	return		;funcret
  5367  0036E2                     __end_of_readButtonRA5:
  5368                           	opt callstack 0
  5369                           
  5370 ;; *************** function _dequeue *****************
  5371 ;; Defined at:
  5372 ;;		line 40 in file "clock.c"
  5373 ;; Parameters:    Size  Location     Type
  5374 ;;		None
  5375 ;; Auto vars:     Size  Location     Type
  5376 ;;  temp            5   15[BANK0 ] struct .
  5377 ;;  idx             2   13[BANK0 ] int 
  5378 ;; Return value:  Size  Location     Type
  5379 ;;                  5    8[BANK0 ] struct .
  5380 ;; Registers used:
  5381 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5382 ;; Tracked objects:
  5383 ;;		On entry : 0/0
  5384 ;;		On exit  : 0/0
  5385 ;;		Unchanged: 0/0
  5386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5387 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5388 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5390 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5391 ;;Total ram usage:       12 bytes
  5392 ;; Hardware stack levels used:    1
  5393 ;; Hardware stack levels required when called:    8
  5394 ;; This function calls:
  5395 ;;		___awmod
  5396 ;;		___wmul
  5397 ;;		_isEmptyQueue
  5398 ;; This function is called by:
  5399 ;;		_dispatch
  5400 ;; This function uses a non-reentrant model
  5401 ;;
  5402                           
  5403                           	psect	text24
  5404  0032EE                     __ptext24:
  5405                           	opt callstack 0
  5406  0032EE                     _dequeue:
  5407                           	opt callstack 21
  5408  0032EE                     
  5409                           ;clock.c: 41:     queue_node temp;;clock.c: 42:     temp.func_ptr = ((void*)0);
  5410  0032EE  0E00               	movlw	0
  5411  0032F0  0100               	movlb	0	; () banked
  5412  0032F2  6FAC               	movwf	dequeue@temp& (0+255),b
  5413  0032F4  0E00               	movlw	0
  5414  0032F6  6FAD               	movwf	(dequeue@temp+1)& (0+255),b
  5415  0032F8  0E00               	movlw	0
  5416  0032FA  6FAE               	movwf	(dequeue@temp+2)& (0+255),b
  5417                           
  5418                           ;clock.c: 43:     temp.data_p = ((void*)0);
  5419  0032FC  0E00               	movlw	0
  5420  0032FE  6FAF               	movwf	(dequeue@temp+3)& (0+255),b
  5421  003300  0E00               	movlw	0
  5422  003302  6FB0               	movwf	(dequeue@temp+4)& (0+255),b
  5423  003304                     
  5424                           ; BSR set to: 0
  5425                           ;clock.c: 44:     if(isEmptyQueue())
  5426  003304  EC79  F01C         	call	_isEmptyQueue	;wreg free
  5427  003308  0900               	iorlw	0
  5428  00330A  B4D8               	btfsc	status,2,c
  5429  00330C  EF8A  F019         	goto	u2641
  5430  003310  EF8C  F019         	goto	u2640
  5431  003314                     u2641:
  5432  003314  EF97  F019         	goto	l531
  5433  003318                     u2640:
  5434  003318                     l3402:
  5435                           
  5436                           ;clock.c: 45:         return temp;
  5437  003318  EE20  F0AC         	lfsr	2,dequeue@temp
  5438  00331C  EE00  F0A5         	lfsr	0,?_dequeue
  5439  003320  0E04               	movlw	4
  5440  003322                     u2651:
  5441  003322  CFDB FFEB          	movff	plusw2,plusw0
  5442  003326  06E8               	decf	wreg,f,c
  5443  003328  E2FC               	bc	u2651
  5444  00332A  EFC7  F019         	goto	l532
  5445  00332E                     l531:
  5446                           
  5447                           ;clock.c: 46:     int idx = front;
  5448  00332E  C0CD  F0AA         	movff	_front,dequeue@idx
  5449  003332  C0CE  F0AB         	movff	_front+1,dequeue@idx+1
  5450  003336                     
  5451                           ;clock.c: 47:     front = (front + 1) % 20;
  5452  003336  0E01               	movlw	1
  5453  003338  0100               	movlb	0	; () banked
  5454  00333A  25CD               	addwf	_front& (0+255),w,b
  5455  00333C  6F9D               	movwf	___awmod@dividend& (0+255),b
  5456  00333E  0E00               	movlw	0
  5457  003340  21CE               	addwfc	(_front+1)& (0+255),w,b
  5458  003342  6F9E               	movwf	(___awmod@dividend+1)& (0+255),b
  5459  003344  0E00               	movlw	0
  5460  003346  6FA0               	movwf	(___awmod@divisor+1)& (0+255),b
  5461  003348  0E14               	movlw	20
  5462  00334A  6F9F               	movwf	___awmod@divisor& (0+255),b
  5463  00334C  EC70  F018         	call	___awmod	;wreg free
  5464  003350  C09D  F0CD         	movff	?___awmod,_front
  5465  003354  C09E  F0CE         	movff	?___awmod+1,_front+1
  5466  003358                     
  5467                           ;clock.c: 48:     temp = ready_queue[idx];
  5468  003358  C0AA  F09D         	movff	dequeue@idx,___wmul@multiplier
  5469  00335C  C0AB  F09E         	movff	dequeue@idx+1,___wmul@multiplier+1
  5470  003360  0E00               	movlw	0
  5471  003362  0100               	movlb	0	; () banked
  5472  003364  6FA0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5473  003366  0E05               	movlw	5
  5474  003368  6F9F               	movwf	___wmul@multiplicand& (0+255),b
  5475  00336A  ECEC  F01C         	call	___wmul	;wreg free
  5476  00336E  0E00               	movlw	low _ready_queue
  5477  003370  0100               	movlb	0	; () banked
  5478  003372  259D               	addwf	?___wmul& (0+255),w,b
  5479  003374  6ED9               	movwf	fsr2l,c
  5480  003376  0E01               	movlw	high _ready_queue
  5481  003378  219E               	addwfc	(?___wmul+1)& (0+255),w,b
  5482  00337A  6EDA               	movwf	fsr2h,c
  5483  00337C  EE10  F0AC         	lfsr	1,dequeue@temp
  5484  003380  0E04               	movlw	4
  5485  003382                     u2661:
  5486  003382  CFDB FFE3          	movff	plusw2,plusw1
  5487  003386  06E8               	decf	wreg,f,c
  5488  003388  E2FC               	bc	u2661
  5489  00338A  EF8C  F019         	goto	l3402
  5490  00338E                     l532:
  5491  00338E  0012               	return		;funcret
  5492  003390                     __end_of_dequeue:
  5493                           	opt callstack 0
  5494                           
  5495 ;; *************** function _isEmptyQueue *****************
  5496 ;; Defined at:
  5497 ;;		line 23 in file "clock.c"
  5498 ;; Parameters:    Size  Location     Type
  5499 ;;		None
  5500 ;; Auto vars:     Size  Location     Type
  5501 ;;		None
  5502 ;; Return value:  Size  Location     Type
  5503 ;;                  1    wreg      unsigned char 
  5504 ;; Registers used:
  5505 ;;		wreg, status,2, status,0, cstack
  5506 ;; Tracked objects:
  5507 ;;		On entry : 0/0
  5508 ;;		On exit  : 0/0
  5509 ;;		Unchanged: 0/0
  5510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5515 ;;Total ram usage:        0 bytes
  5516 ;; Hardware stack levels used:    1
  5517 ;; Hardware stack levels required when called:    7
  5518 ;; This function calls:
  5519 ;;		_getSizeQueue
  5520 ;; This function is called by:
  5521 ;;		_dequeue
  5522 ;;		_dispatch
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           
  5526                           	psect	text25
  5527  0038F2                     __ptext25:
  5528                           	opt callstack 0
  5529  0038F2                     _isEmptyQueue:
  5530                           	opt callstack 22
  5531  0038F2                     
  5532                           ;clock.c: 24:     if(front == -1)
  5533  0038F2  0100               	movlb	0	; () banked
  5534  0038F4  29CD               	incf	_front& (0+255),w,b
  5535  0038F6  E106               	bnz	u1951
  5536  0038F8  29CE               	incf	(_front+1)& (0+255),w,b
  5537  0038FA  A4D8               	btfss	status,2,c
  5538  0038FC  EF82  F01C         	goto	u1951
  5539  003900  EF84  F01C         	goto	u1950
  5540  003904                     u1951:
  5541  003904  EF87  F01C         	goto	l2956
  5542  003908                     u1950:
  5543  003908                     
  5544                           ; BSR set to: 0
  5545                           ;clock.c: 25:         return 0;
  5546  003908  0E00               	movlw	0
  5547  00390A  EF93  F01C         	goto	l523
  5548  00390E                     l2956:
  5549                           
  5550                           ; BSR set to: 0
  5551                           ;clock.c: 26:     return getSizeQueue() == 0 ? 1 : 0;
  5552  00390E  ECC1  F01C         	call	_getSizeQueue	;wreg free
  5553  003912  0900               	iorlw	0
  5554  003914  B4D8               	btfsc	status,2,c
  5555  003916  EF8F  F01C         	goto	u1961
  5556  00391A  EF92  F01C         	goto	u1960
  5557  00391E                     u1961:
  5558  00391E  0E01               	movlw	1
  5559  003920  EF93  F01C         	goto	u1970
  5560  003924                     u1960:
  5561  003924  0E00               	movlw	0
  5562  003926                     u1970:
  5563  003926                     l523:
  5564  003926  0012               	return		;funcret
  5565  003928                     __end_of_isEmptyQueue:
  5566                           	opt callstack 0
  5567                           
  5568 ;; *************** function _getSizeQueue *****************
  5569 ;; Defined at:
  5570 ;;		line 15 in file "clock.c"
  5571 ;; Parameters:    Size  Location     Type
  5572 ;;		None
  5573 ;; Auto vars:     Size  Location     Type
  5574 ;;		None
  5575 ;; Return value:  Size  Location     Type
  5576 ;;                  1    wreg      unsigned char 
  5577 ;; Registers used:
  5578 ;;		wreg, status,2, status,0, cstack
  5579 ;; Tracked objects:
  5580 ;;		On entry : 0/0
  5581 ;;		On exit  : 0/0
  5582 ;;		Unchanged: 0/0
  5583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5586 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5587 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5588 ;;Total ram usage:        2 bytes
  5589 ;; Hardware stack levels used:    1
  5590 ;; Hardware stack levels required when called:    6
  5591 ;; This function calls:
  5592 ;;		___awmod
  5593 ;; This function is called by:
  5594 ;;		_isEmptyQueue
  5595 ;; This function uses a non-reentrant model
  5596 ;;
  5597                           
  5598                           	psect	text26
  5599  003982                     __ptext26:
  5600                           	opt callstack 0
  5601  003982                     _getSizeQueue:
  5602                           	opt callstack 22
  5603  003982                     
  5604                           ;clock.c: 16:     return (rear - front + 1 + 20) % 20;
  5605  003982  0100               	movlb	0	; () banked
  5606  003984  51CD               	movf	_front& (0+255),w,b
  5607  003986  5DCB               	subwf	_rear& (0+255),w,b
  5608  003988  6FA3               	movwf	??_getSizeQueue& (0+255),b
  5609  00398A  51CE               	movf	(_front+1)& (0+255),w,b
  5610  00398C  59CC               	subwfb	(_rear+1)& (0+255),w,b
  5611  00398E  6FA4               	movwf	(??_getSizeQueue+1)& (0+255),b
  5612  003990  0E15               	movlw	21
  5613  003992  25A3               	addwf	??_getSizeQueue& (0+255),w,b
  5614  003994  6F9D               	movwf	___awmod@dividend& (0+255),b
  5615  003996  0E00               	movlw	0
  5616  003998  21A4               	addwfc	(??_getSizeQueue+1)& (0+255),w,b
  5617  00399A  6F9E               	movwf	(___awmod@dividend+1)& (0+255),b
  5618  00399C  0E00               	movlw	0
  5619  00399E  6FA0               	movwf	(___awmod@divisor+1)& (0+255),b
  5620  0039A0  0E14               	movlw	20
  5621  0039A2  6F9F               	movwf	___awmod@divisor& (0+255),b
  5622  0039A4  EC70  F018         	call	___awmod	;wreg free
  5623  0039A8  0100               	movlb	0	; () banked
  5624  0039AA  519D               	movf	?___awmod& (0+255),w,b
  5625  0039AC                     
  5626                           ; BSR set to: 0
  5627  0039AC  0012               	return		;funcret
  5628  0039AE                     __end_of_getSizeQueue:
  5629                           	opt callstack 0
  5630                           
  5631 ;; *************** function ___wmul *****************
  5632 ;; Defined at:
  5633 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  5634 ;; Parameters:    Size  Location     Type
  5635 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5636 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5637 ;; Auto vars:     Size  Location     Type
  5638 ;;  product         2    4[BANK0 ] unsigned int 
  5639 ;; Return value:  Size  Location     Type
  5640 ;;                  2    0[BANK0 ] unsigned int 
  5641 ;; Registers used:
  5642 ;;		wreg, status,2, status,0, prodl, prodh
  5643 ;; Tracked objects:
  5644 ;;		On entry : 0/0
  5645 ;;		On exit  : 0/0
  5646 ;;		Unchanged: 0/0
  5647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5648 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5649 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5651 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5652 ;;Total ram usage:        6 bytes
  5653 ;; Hardware stack levels used:    1
  5654 ;; Hardware stack levels required when called:    5
  5655 ;; This function calls:
  5656 ;;		Nothing
  5657 ;; This function is called by:
  5658 ;;		_queueInitialize
  5659 ;;		_dequeue
  5660 ;;		_initializeTaskList
  5661 ;;		_register_timer
  5662 ;; This function uses a non-reentrant model
  5663 ;;
  5664                           
  5665                           	psect	text27
  5666  0039D8                     __ptext27:
  5667                           	opt callstack 0
  5668  0039D8                     ___wmul:
  5669                           	opt callstack 21
  5670  0039D8  0100               	movlb	0	; () banked
  5671  0039DA  519D               	movf	___wmul@multiplier& (0+255),w,b
  5672  0039DC  039F               	mulwf	___wmul@multiplicand& (0+255),b
  5673  0039DE  CFF3 F0A1          	movff	prodl,___wmul@product
  5674  0039E2  CFF4 F0A2          	movff	prodh,___wmul@product+1
  5675  0039E6  519D               	movf	___wmul@multiplier& (0+255),w,b
  5676  0039E8  03A0               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5677  0039EA  50F3               	movf	243,w,c
  5678  0039EC  27A2               	addwf	(___wmul@product+1)& (0+255),f,b
  5679  0039EE  519E               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5680  0039F0  039F               	mulwf	___wmul@multiplicand& (0+255),b
  5681  0039F2  50F3               	movf	243,w,c
  5682  0039F4  27A2               	addwf	(___wmul@product+1)& (0+255),f,b
  5683  0039F6                     
  5684                           ; BSR set to: 0
  5685  0039F6  C0A1  F09D         	movff	___wmul@product,?___wmul
  5686  0039FA  C0A2  F09E         	movff	___wmul@product+1,?___wmul+1
  5687  0039FE                     
  5688                           ; BSR set to: 0
  5689  0039FE  0012               	return		;funcret
  5690  003A00                     __end_of___wmul:
  5691                           	opt callstack 0
  5692                           
  5693 ;; *************** function _check_humid_to_turn_fan *****************
  5694 ;; Defined at:
  5695 ;;		line 69 in file "mcc.c"
  5696 ;; Parameters:    Size  Location     Type
  5697 ;;		None
  5698 ;; Auto vars:     Size  Location     Type
  5699 ;;		None
  5700 ;; Return value:  Size  Location     Type
  5701 ;;                  1    wreg      void 
  5702 ;; Registers used:
  5703 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5704 ;; Tracked objects:
  5705 ;;		On entry : 0/0
  5706 ;;		On exit  : 0/0
  5707 ;;		Unchanged: 0/0
  5708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5713 ;;Total ram usage:        0 bytes
  5714 ;; Hardware stack levels used:    1
  5715 ;; Hardware stack levels required when called:   10
  5716 ;; This function calls:
  5717 ;;		_LCDPrint
  5718 ;;		_LCDPrintChar
  5719 ;;		___awdiv
  5720 ;;		___awmod
  5721 ;;		_set_speed_fan3
  5722 ;; This function is called by:
  5723 ;;		_main
  5724 ;;		_dispatch
  5725 ;; This function uses a non-reentrant model
  5726 ;;
  5727                           
  5728                           	psect	text28
  5729  003026                     __ptext28:
  5730                           	opt callstack 0
  5731  003026                     _check_humid_to_turn_fan:
  5732                           	opt callstack 19
  5733  003026                     
  5734                           ;mcc.c: 70:     if(state == HEATER || state == HEAT_PUMP) {
  5735  003026  0100               	movlb	0	; () banked
  5736  003028  0598               	decf	_state& (0+255),w,b	;volatile
  5737  00302A  B4D8               	btfsc	status,2,c
  5738  00302C  EF1A  F018         	goto	u2571
  5739  003030  EF1C  F018         	goto	u2570
  5740  003034                     u2571:
  5741  003034  EF25  F018         	goto	l3368
  5742  003038                     u2570:
  5743  003038                     
  5744                           ; BSR set to: 0
  5745  003038  0E02               	movlw	2
  5746  00303A  1998               	xorwf	_state& (0+255),w,b	;volatile
  5747  00303C  A4D8               	btfss	status,2,c
  5748  00303E  EF23  F018         	goto	u2581
  5749  003042  EF25  F018         	goto	u2580
  5750  003046                     u2581:
  5751  003046  EF6F  F018         	goto	l447
  5752  00304A                     u2580:
  5753  00304A                     l3368:
  5754                           
  5755                           ; BSR set to: 0
  5756                           ;mcc.c: 71:         LCDPrint(1, 11, "F3:");
  5757  00304A  0E0B               	movlw	11
  5758  00304C  6FA8               	movwf	LCDPrint@pos& (0+255),b
  5759  00304E  0E8B               	movlw	low STR_25
  5760  003050  6FA9               	movwf	LCDPrint@ptr& (0+255),b
  5761  003052  0E10               	movlw	high STR_25
  5762  003054  6FAA               	movwf	(LCDPrint@ptr+1)& (0+255),b
  5763  003056  0E01               	movlw	1
  5764  003058  EC98  F01B         	call	_LCDPrint
  5765  00305C                     
  5766                           ;mcc.c: 72:         if(humidity_value == 5) {
  5767  00305C  0E05               	movlw	5
  5768  00305E  0100               	movlb	0	; () banked
  5769  003060  199A               	xorwf	_humidity_value& (0+255),w,b
  5770  003062  A4D8               	btfss	status,2,c
  5771  003064  EF36  F018         	goto	u2591
  5772  003068  EF38  F018         	goto	u2590
  5773  00306C                     u2591:
  5774  00306C  EF4A  F018         	goto	l3378
  5775  003070                     u2590:
  5776  003070                     
  5777                           ; BSR set to: 0
  5778                           ;mcc.c: 73:             LCDPrint(1, 14, "ER");
  5779  003070  0E0E               	movlw	14
  5780  003072  6FA8               	movwf	LCDPrint@pos& (0+255),b
  5781  003074  0E8F               	movlw	low STR_26
  5782  003076  6FA9               	movwf	LCDPrint@ptr& (0+255),b
  5783  003078  0E10               	movlw	high STR_26
  5784  00307A  6FAA               	movwf	(LCDPrint@ptr+1)& (0+255),b
  5785  00307C  0E01               	movlw	1
  5786  00307E  EC98  F01B         	call	_LCDPrint
  5787  003082                     
  5788                           ;mcc.c: 74:             set_speed_fan3(0);
  5789  003082  0E00               	movlw	0
  5790  003084  0100               	movlb	0	; () banked
  5791  003086  6F9E               	movwf	(set_speed_fan3@dutyCycle+1)& (0+255),b
  5792  003088  0E00               	movlw	0
  5793  00308A  6F9D               	movwf	set_speed_fan3@dutyCycle& (0+255),b
  5794  00308C  EC94  F01C         	call	_set_speed_fan3	;wreg free
  5795  003090  EF6F  F018         	goto	l447
  5796  003094                     l3378:
  5797                           
  5798                           ; BSR set to: 0
  5799                           ;mcc.c: 77:         LCDPrintChar(1, 14, humidity_value / 10 + '0');
  5800  003094  0E0E               	movlw	14
  5801  003096  6FA8               	movwf	LCDPrintChar@pos& (0+255),b
  5802  003098  C09A  F09D         	movff	_humidity_value,___awdiv@dividend
  5803  00309C  6B9E               	clrf	(___awdiv@dividend+1)& (0+255),b
  5804  00309E  0E00               	movlw	0
  5805  0030A0  6FA0               	movwf	(___awdiv@divisor+1)& (0+255),b
  5806  0030A2  0E0A               	movlw	10
  5807  0030A4  6F9F               	movwf	___awdiv@divisor& (0+255),b
  5808  0030A6  EC52  F017         	call	___awdiv	;wreg free
  5809  0030AA  0100               	movlb	0	; () banked
  5810  0030AC  519D               	movf	?___awdiv& (0+255),w,b
  5811  0030AE  0F30               	addlw	48
  5812  0030B0  6FA9               	movwf	LCDPrintChar@ch& (0+255),b
  5813  0030B2  0E01               	movlw	1
  5814  0030B4  EC3B  F01C         	call	_LCDPrintChar
  5815                           
  5816                           ;mcc.c: 78:         LCDPrintChar(1, 15, humidity_value % 10 + '0');
  5817  0030B8  0E0F               	movlw	15
  5818  0030BA  0100               	movlb	0	; () banked
  5819  0030BC  6FA8               	movwf	LCDPrintChar@pos& (0+255),b
  5820  0030BE  C09A  F09D         	movff	_humidity_value,___awmod@dividend
  5821  0030C2  6B9E               	clrf	(___awmod@dividend+1)& (0+255),b
  5822  0030C4  0E00               	movlw	0
  5823  0030C6  6FA0               	movwf	(___awmod@divisor+1)& (0+255),b
  5824  0030C8  0E0A               	movlw	10
  5825  0030CA  6F9F               	movwf	___awmod@divisor& (0+255),b
  5826  0030CC  EC70  F018         	call	___awmod	;wreg free
  5827  0030D0  0100               	movlb	0	; () banked
  5828  0030D2  519D               	movf	?___awmod& (0+255),w,b
  5829  0030D4  0F30               	addlw	48
  5830  0030D6  6FA9               	movwf	LCDPrintChar@ch& (0+255),b
  5831  0030D8  0E01               	movlw	1
  5832  0030DA  EC3B  F01C         	call	_LCDPrintChar
  5833  0030DE                     l447:
  5834  0030DE  0012               	return		;funcret
  5835  0030E0                     __end_of_check_humid_to_turn_fan:
  5836                           	opt callstack 0
  5837                           
  5838 ;; *************** function _set_speed_fan3 *****************
  5839 ;; Defined at:
  5840 ;;		line 44 in file "LTDtasks.c"
  5841 ;; Parameters:    Size  Location     Type
  5842 ;;  dutyCycle       2    0[BANK0 ] int 
  5843 ;; Auto vars:     Size  Location     Type
  5844 ;;		None
  5845 ;; Return value:  Size  Location     Type
  5846 ;;                  1    wreg      void 
  5847 ;; Registers used:
  5848 ;;		wreg, status,2, status,0, prodl, prodh
  5849 ;; Tracked objects:
  5850 ;;		On entry : 0/0
  5851 ;;		On exit  : 0/0
  5852 ;;		Unchanged: 0/0
  5853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5854 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5857 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5858 ;;Total ram usage:        2 bytes
  5859 ;; Hardware stack levels used:    1
  5860 ;; Hardware stack levels required when called:    5
  5861 ;; This function calls:
  5862 ;;		Nothing
  5863 ;; This function is called by:
  5864 ;;		_check_humid_to_turn_fan
  5865 ;;		_force_turn_off
  5866 ;; This function uses a non-reentrant model
  5867 ;;
  5868                           
  5869                           	psect	text29
  5870  003928                     __ptext29:
  5871                           	opt callstack 0
  5872  003928                     _set_speed_fan3:
  5873                           	opt callstack 23
  5874  003928                     
  5875                           ;LTDtasks.c: 45:     CCPR4L = 24 * dutyCycle;
  5876  003928  0100               	movlb	0	; () banked
  5877  00392A  519D               	movf	set_speed_fan3@dutyCycle& (0+255),w,b
  5878  00392C  0D18               	mullw	24
  5879  00392E  CFF3 FF74          	movff	prodl,3956	;volatile
  5880  003932                     
  5881                           ; BSR set to: 0
  5882                           ;LTDtasks.c: 46:     if(dutyCycle > 0)
  5883  003932  BF9E               	btfsc	(set_speed_fan3@dutyCycle+1)& (0+255),7,b
  5884  003934  EFA4  F01C         	goto	u1941
  5885  003938  519E               	movf	(set_speed_fan3@dutyCycle+1)& (0+255),w,b
  5886  00393A  E108               	bnz	u1940
  5887  00393C  059D               	decf	set_speed_fan3@dutyCycle& (0+255),w,b
  5888  00393E  A0D8               	btfss	status,0,c
  5889  003940  EFA4  F01C         	goto	u1941
  5890  003944  EFA6  F01C         	goto	u1940
  5891  003948                     u1941:
  5892  003948  EFA9  F01C         	goto	l777
  5893  00394C                     u1940:
  5894  00394C                     
  5895                           ; BSR set to: 0
  5896                           ;LTDtasks.c: 47:         LATDbits.LATD5 = 1;
  5897  00394C  8A8C               	bsf	140,5,c	;volatile
  5898  00394E  EFAA  F01C         	goto	l779
  5899  003952                     l777:
  5900                           
  5901                           ; BSR set to: 0
  5902  003952  9A8C               	bcf	140,5,c	;volatile
  5903  003954                     l779:
  5904                           
  5905                           ; BSR set to: 0
  5906  003954  0012               	return		;funcret
  5907  003956                     __end_of_set_speed_fan3:
  5908                           	opt callstack 0
  5909                           
  5910 ;; *************** function _changeState *****************
  5911 ;; Defined at:
  5912 ;;		line 52 in file "mcc.c"
  5913 ;; Parameters:    Size  Location     Type
  5914 ;;		None
  5915 ;; Auto vars:     Size  Location     Type
  5916 ;;		None
  5917 ;; Return value:  Size  Location     Type
  5918 ;;                  1    wreg      void 
  5919 ;; Registers used:
  5920 ;;		wreg, status,2, status,0
  5921 ;; Tracked objects:
  5922 ;;		On entry : 0/0
  5923 ;;		On exit  : 0/0
  5924 ;;		Unchanged: 0/0
  5925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5930 ;;Total ram usage:        0 bytes
  5931 ;; Hardware stack levels used:    1
  5932 ;; Hardware stack levels required when called:    5
  5933 ;; This function calls:
  5934 ;;		Nothing
  5935 ;; This function is called by:
  5936 ;;		_set_time_process
  5937 ;;		_main
  5938 ;;		_dispatch
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941                           
  5942                           	psect	text30
  5943  002F6A                     __ptext30:
  5944                           	opt callstack 0
  5945  002F6A                     _changeState:
  5946                           	opt callstack 24
  5947  002F6A                     
  5948                           ;mcc.c: 53:     if(temperature_value >= max_temperature && humidity_value <= min_humidit
      +                          y && state != IDLE) {
  5949  002F6A  0100               	movlb	0	; () banked
  5950  002F6C  51D6               	movf	_max_temperature& (0+255),w,b	;volatile
  5951  002F6E  5D99               	subwf	_temperature_value& (0+255),w,b
  5952  002F70  A0D8               	btfss	status,0,c
  5953  002F72  EFBD  F017         	goto	u2481
  5954  002F76  EFBF  F017         	goto	u2480
  5955  002F7A                     u2481:
  5956  002F7A  EFD4  F017         	goto	l3346
  5957  002F7E                     u2480:
  5958  002F7E                     
  5959                           ; BSR set to: 0
  5960  002F7E  519A               	movf	_humidity_value& (0+255),w,b
  5961  002F80  5DD5               	subwf	_min_humidity& (0+255),w,b	;volatile
  5962  002F82  A0D8               	btfss	status,0,c
  5963  002F84  EFC6  F017         	goto	u2491
  5964  002F88  EFC8  F017         	goto	u2490
  5965  002F8C                     u2491:
  5966  002F8C  EFD4  F017         	goto	l3346
  5967  002F90                     u2490:
  5968  002F90                     
  5969                           ; BSR set to: 0
  5970  002F90  5198               	movf	_state& (0+255),w,b	;volatile
  5971  002F92  B4D8               	btfsc	status,2,c
  5972  002F94  EFCE  F017         	goto	u2501
  5973  002F98  EFD0  F017         	goto	u2500
  5974  002F9C                     u2501:
  5975  002F9C  EFD4  F017         	goto	l3346
  5976  002FA0                     u2500:
  5977  002FA0                     
  5978                           ; BSR set to: 0
  5979                           ;mcc.c: 54:         state = TERMINATE;
  5980  002FA0  0E03               	movlw	3
  5981  002FA2  6F98               	movwf	_state& (0+255),b	;volatile
  5982                           
  5983                           ;mcc.c: 55:     }
  5984  002FA4  EF12  F018         	goto	l440
  5985  002FA8                     l3346:
  5986                           
  5987                           ; BSR set to: 0
  5988  002FA8  519A               	movf	_humidity_value& (0+255),w,b
  5989  002FAA  5DD5               	subwf	_min_humidity& (0+255),w,b	;volatile
  5990  002FAC  A0D8               	btfss	status,0,c
  5991  002FAE  EFDB  F017         	goto	u2511
  5992  002FB2  EFDD  F017         	goto	u2510
  5993  002FB6                     u2511:
  5994  002FB6  EFE9  F017         	goto	l3352
  5995  002FBA                     u2510:
  5996  002FBA                     
  5997                           ; BSR set to: 0
  5998  002FBA  0598               	decf	_state& (0+255),w,b	;volatile
  5999  002FBC  A4D8               	btfss	status,2,c
  6000  002FBE  EFE3  F017         	goto	u2521
  6001  002FC2  EFE5  F017         	goto	u2520
  6002  002FC6                     u2521:
  6003  002FC6  EFE9  F017         	goto	l3352
  6004  002FCA                     u2520:
  6005  002FCA                     l3350:
  6006                           
  6007                           ; BSR set to: 0
  6008                           ;mcc.c: 57:         flag_change_state = 0;
  6009  002FCA  0E00               	movlw	0
  6010  002FCC  6F96               	movwf	_flag_change_state& (0+255),b
  6011                           
  6012                           ;mcc.c: 58:     }
  6013  002FCE  EF12  F018         	goto	l440
  6014  002FD2                     l3352:
  6015                           
  6016                           ; BSR set to: 0
  6017  002FD2  51D6               	movf	_max_temperature& (0+255),w,b	;volatile
  6018  002FD4  5D99               	subwf	_temperature_value& (0+255),w,b
  6019  002FD6  A0D8               	btfss	status,0,c
  6020  002FD8  EFF0  F017         	goto	u2531
  6021  002FDC  EFF2  F017         	goto	u2530
  6022  002FE0                     u2531:
  6023  002FE0  EFFD  F017         	goto	l3358
  6024  002FE4                     u2530:
  6025  002FE4                     
  6026                           ; BSR set to: 0
  6027  002FE4  0E02               	movlw	2
  6028  002FE6  1998               	xorwf	_state& (0+255),w,b	;volatile
  6029  002FE8  A4D8               	btfss	status,2,c
  6030  002FEA  EFF9  F017         	goto	u2541
  6031  002FEE  EFFB  F017         	goto	u2540
  6032  002FF2                     u2541:
  6033  002FF2  EFFD  F017         	goto	l3358
  6034  002FF6                     u2540:
  6035  002FF6  EFE5  F017         	goto	l3350
  6036  002FFA                     l3358:
  6037                           
  6038                           ; BSR set to: 0
  6039  002FFA  0598               	decf	_state& (0+255),w,b	;volatile
  6040  002FFC  B4D8               	btfsc	status,2,c
  6041  002FFE  EF03  F018         	goto	u2551
  6042  003002  EF05  F018         	goto	u2550
  6043  003006                     u2551:
  6044  003006  EF0E  F018         	goto	l3362
  6045  00300A                     u2550:
  6046  00300A                     
  6047                           ; BSR set to: 0
  6048  00300A  0E02               	movlw	2
  6049  00300C  1998               	xorwf	_state& (0+255),w,b	;volatile
  6050  00300E  A4D8               	btfss	status,2,c
  6051  003010  EF0C  F018         	goto	u2561
  6052  003014  EF0E  F018         	goto	u2560
  6053  003018                     u2561:
  6054  003018  EF12  F018         	goto	l434
  6055  00301C                     u2560:
  6056  00301C                     l3362:
  6057                           
  6058                           ; BSR set to: 0
  6059                           ;mcc.c: 63:         flag_change_state = 1;
  6060  00301C  0E01               	movlw	1
  6061  00301E  6F96               	movwf	_flag_change_state& (0+255),b
  6062  003020  EF12  F018         	goto	l440
  6063  003024                     l434:
  6064  003024                     l440:
  6065                           
  6066                           ; BSR set to: 0
  6067  003024  0012               	return		;funcret
  6068  003026                     __end_of_changeState:
  6069                           	opt callstack 0
  6070                           
  6071 ;; *************** function _LTD_process *****************
  6072 ;; Defined at:
  6073 ;;		line 116 in file "main.c"
  6074 ;; Parameters:    Size  Location     Type
  6075 ;;		None
  6076 ;; Auto vars:     Size  Location     Type
  6077 ;;  humid           2   21[BANK0 ] int 
  6078 ;;  temp            2   19[BANK0 ] int 
  6079 ;; Return value:  Size  Location     Type
  6080 ;;                  1    wreg      void 
  6081 ;; Registers used:
  6082 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6083 ;; Tracked objects:
  6084 ;;		On entry : 0/0
  6085 ;;		On exit  : 0/0
  6086 ;;		Unchanged: 0/0
  6087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6089 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6090 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6091 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6092 ;;Total ram usage:        8 bytes
  6093 ;; Hardware stack levels used:    1
  6094 ;; Hardware stack levels required when called:   10
  6095 ;; This function calls:
  6096 ;;		_LCDPrint
  6097 ;;		_LCDPrintChar
  6098 ;;		_LCDPutInst
  6099 ;;		___awdiv
  6100 ;;		___awmod
  6101 ;;		_get_time
  6102 ;;		_turn_off_fan
  6103 ;;		_turn_off_heat_pump
  6104 ;;		_turn_off_heater
  6105 ;;		_turn_on_fan
  6106 ;;		_turn_on_heat_pump
  6107 ;;		_turn_on_heater
  6108 ;; This function is called by:
  6109 ;;		_main
  6110 ;; This function uses a non-reentrant model
  6111 ;;
  6112                           
  6113                           	psect	text31
  6114  001ABA                     __ptext31:
  6115                           	opt callstack 0
  6116  001ABA                     _LTD_process:
  6117                           	opt callstack 20
  6118  001ABA                     
  6119                           ;main.c: 117:     switch(state) {
  6120  001ABA  EF38  F00F         	goto	l3664
  6121  001ABE                     l3562:
  6122                           
  6123                           ; BSR set to: 0
  6124                           ;main.c: 119:             if(RA5_pressed) {
  6125  001ABE  519C               	movf	_RA5_pressed& (0+255),w,b
  6126  001AC0  B4D8               	btfsc	status,2,c
  6127  001AC2  EF65  F00D         	goto	u2821
  6128  001AC6  EF67  F00D         	goto	u2820
  6129  001ACA                     u2821:
  6130  001ACA  EF56  F00F         	goto	l119
  6131  001ACE                     u2820:
  6132  001ACE                     
  6133                           ; BSR set to: 0
  6134                           ;main.c: 120:                 RA5_pressed = 0;
  6135  001ACE  0E00               	movlw	0
  6136  001AD0  6F9C               	movwf	_RA5_pressed& (0+255),b
  6137                           
  6138                           ;main.c: 121:                 state = HEATER;
  6139  001AD2  0E01               	movlw	1
  6140  001AD4  6F98               	movwf	_state& (0+255),b	;volatile
  6141  001AD6                     
  6142                           ; BSR set to: 0
  6143                           ;main.c: 122:                 check_timeout = get_time();
  6144  001AD6  EC91  F01D         	call	_get_time	;wreg free
  6145  001ADA  C09D  F088         	movff	?_get_time,_check_timeout
  6146  001ADE  C09E  F089         	movff	?_get_time+1,_check_timeout+1
  6147  001AE2  C09F  F08A         	movff	?_get_time+2,_check_timeout+2
  6148  001AE6  C0A0  F08B         	movff	?_get_time+3,_check_timeout+3
  6149  001AEA                     
  6150                           ;main.c: 123:                 turn_on_heater();
  6151  001AEA  ECA6  F01D         	call	_turn_on_heater	;wreg free
  6152  001AEE                     
  6153                           ;main.c: 124:                 turn_on_fan(1);
  6154  001AEE  0E00               	movlw	0
  6155  001AF0  0100               	movlb	0	; () banked
  6156  001AF2  6F9E               	movwf	(turn_on_fan@idx+1)& (0+255),b
  6157  001AF4  0E01               	movlw	1
  6158  001AF6  6F9D               	movwf	turn_on_fan@idx& (0+255),b
  6159  001AF8  ECFB  F01B         	call	_turn_on_fan	;wreg free
  6160  001AFC                     
  6161                           ;main.c: 125:                 LCDPrint(0, 0, "              ");
  6162  001AFC  0E00               	movlw	0
  6163  001AFE  0100               	movlb	0	; () banked
  6164  001B00  6FA8               	movwf	LCDPrint@pos& (0+255),b
  6165  001B02  0E34               	movlw	low STR_5
  6166  001B04  6FA9               	movwf	LCDPrint@ptr& (0+255),b
  6167  001B06  0E10               	movlw	high STR_5
  6168  001B08  6FAA               	movwf	(LCDPrint@ptr+1)& (0+255),b
  6169  001B0A  0E00               	movlw	0
  6170  001B0C  EC98  F01B         	call	_LCDPrint
  6171  001B10                     
  6172                           ;main.c: 126:                 LCDPrint(0, 0, "Heater");
  6173  001B10  0E00               	movlw	0
  6174  001B12  0100               	movlb	0	; () banked
  6175  001B14  6FA8               	movwf	LCDPrint@pos& (0+255),b
  6176  001B16  0E7F               	movlw	low STR_6
  6177  001B18  6FA9               	movwf	LCDPrint@ptr& (0+255),b
  6178  001B1A  0E10               	movlw	high STR_6
  6179  001B1C  6FAA               	movwf	(LCDPrint@ptr+1)& (0+255),b
  6180  001B1E  0E00               	movlw	0
  6181  001B20  EC98  F01B         	call	_LCDPrint
  6182  001B24  EF56  F00F         	goto	l119
  6183  001B28                     l3576:
  6184                           
  6185                           ; BSR set to: 0
  6186                           ;main.c: 130:             if(get_time() - check_timeout > 30000) {
  6187  001B28  EC91  F01D         	call	_get_time	;wreg free
  6188  001B2C  0100               	movlb	0	; () banked
  6189  001B2E  5188               	movf	_check_timeout& (0+255),w,b
  6190  001B30  5D9D               	subwf	?_get_time& (0+255),w,b
  6191  001B32  6FAC               	movwf	??_LTD_process& (0+255),b
  6192  001B34  5189               	movf	(_check_timeout+1)& (0+255),w,b
  6193  001B36  599E               	subwfb	(?_get_time+1)& (0+255),w,b
  6194  001B38  6FAD               	movwf	(??_LTD_process+1)& (0+255),b
  6195  001B3A  518A               	movf	(_check_timeout+2)& (0+255),w,b
  6196  001B3C  599F               	subwfb	(?_get_time+2)& (0+255),w,b
  6197  001B3E  6FAE               	movwf	(??_LTD_process+2)& (0+255),b
  6198  001B40  518B               	movf	(_check_timeout+3)& (0+255),w,b
  6199  001B42  59A0               	subwfb	(?_get_time+3)& (0+255),w,b
  6200  001B44  6FAF               	movwf	(??_LTD_process+3)& (0+255),b
  6201  001B46  51AF               	movf	(??_LTD_process+3)& (0+255),w,b
  6202  001B48  11AE               	iorwf	(??_LTD_process+2)& (0+255),w,b
  6203  001B4A  E10B               	bnz	u2830
  6204  001B4C  0E31               	movlw	49
  6205  001B4E  5DAC               	subwf	??_LTD_process& (0+255),w,b
  6206  001B50  0E75               	movlw	117
  6207  001B52  59AD               	subwfb	(??_LTD_process+1)& (0+255),w,b
  6208  001B54  A0D8               	btfss	status,0,c
  6209  001B56  EFAF  F00D         	goto	u2831
  6210  001B5A  EFB1  F00D         	goto	u2830
  6211  001B5E                     u2831:
  6212  001B5E  EFC1  F00D         	goto	l3584
  6213  001B62                     u2830:
  6214  001B62                     
  6215                           ; BSR set to: 0
  6216                           ;main.c: 131:                 LCDPutInst(0x01);
  6217  001B62  0E01               	movlw	1
  6218  001B64  ECDA  F01B         	call	_LCDPutInst
  6219  001B68                     
  6220                           ;main.c: 132:                 LCDPrint(0, 0, "ERROR - TURN OFF");
  6221  001B68  0E00               	movlw	0
  6222  001B6A  0100               	movlb	0	; () banked
  6223  001B6C  6FA8               	movwf	LCDPrint@pos& (0+255),b
  6224  001B6E  0E23               	movlw	low STR_10
  6225  001B70  6FA9               	movwf	LCDPrint@ptr& (0+255),b
  6226  001B72  0E10               	movlw	high STR_10
  6227  001B74  6FAA               	movwf	(LCDPrint@ptr+1)& (0+255),b
  6228  001B76  0E00               	movlw	0
  6229  001B78  EC98  F01B         	call	_LCDPrint
  6230  001B7C                     
  6231                           ;main.c: 133:                 state = TERMINATE;
  6232  001B7C  0E03               	movlw	3
  6233  001B7E  0100               	movlb	0	; () banked
  6234  001B80  6F98               	movwf	_state& (0+255),b	;volatile
  6235  001B82                     l3584:
  6236                           
  6237                           ; BSR set to: 0
  6238                           ;main.c: 135:             if(flag_change_state) {
  6239  001B82  5196               	movf	_flag_change_state& (0+255),w,b
  6240  001B84  B4D8               	btfsc	status,2,c
  6241  001B86  EFC7  F00D         	goto	u2841
  6242  001B8A  EFC9  F00D         	goto	u2840
  6243  001B8E                     u2841:
  6244  001B8E  EF56  F00F         	goto	l119
  6245  001B92                     u2840:
  6246  001B92                     
  6247                           ; BSR set to: 0
  6248                           ;main.c: 136:                 flag_change_state = 0;
  6249  001B92  0E00               	movlw	0
  6250  001B94  6F96               	movwf	_flag_change_state& (0+255),b
  6251                           
  6252                           ;main.c: 137:                 if(!isSet) {
  6253  001B96  5194               	movf	_isSet& (0+255),w,b
  6254  001B98  A4D8               	btfss	status,2,c
  6255  001B9A  EFD1  F00D         	goto	u2851
  6256  001B9E  EFD3  F00D         	goto	u2850
  6257  001BA2                     u2851:
  6258  001BA2  EFE6  F00D         	goto	l3590
  6259  001BA6                     u2850:
  6260  001BA6                     
  6261                           ; BSR set to: 0
  6262                           ;main.c: 138:                     LCDPrint(0, 0, "              ");
  6263  001BA6  0E00               	movlw	0
  6264  001BA8  6FA8               	movwf	LCDPrint@pos& (0+255),b
  6265  001BAA  0E34               	movlw	low STR_5
  6266  001BAC  6FA9               	movwf	LCDPrint@ptr& (0+255),b
  6267  001BAE  0E10               	movlw	high STR_5
  6268  001BB0  6FAA               	movwf	(LCDPrint@ptr+1)& (0+255),b
  6269  001BB2  0E00               	movlw	0
  6270  001BB4  EC98  F01B         	call	_LCDPrint
  6271                           
  6272                           ;main.c: 139:                     LCDPrint(0, 0, "Heat Pump");
  6273  001BB8  0E00               	movlw	0
  6274  001BBA  0100               	movlb	0	; () banked
  6275  001BBC  6FA8               	movwf	LCDPrint@pos& (0+255),b
  6276  001BBE  0E5C               	movlw	low STR_7
  6277  001BC0  6FA9               	movwf	LCDPrint@ptr& (0+255),b
  6278  001BC2  0E10               	movlw	high STR_7
  6279  001BC4  6FAA               	movwf	(LCDPrint@ptr+1)& (0+255),b
  6280  001BC6  0E00               	movlw	0
  6281  001BC8  EC98  F01B         	call	_LCDPrint
  6282  001BCC                     l3590:
  6283                           
  6284                           ;main.c: 142:                 state = HEAT_PUMP;
  6285  001BCC  0E02               	movlw	2
  6286  001BCE  0100               	movlb	0	; () banked
  6287  001BD0  6F98               	movwf	_state& (0+255),b	;volatile
  6288  001BD2                     
  6289                           ; BSR set to: 0
  6290                           ;main.c: 143:                 check_timeout = get_time();
  6291  001BD2  EC91  F01D         	call	_get_time	;wreg free
  6292  001BD6  C09D  F088         	movff	?_get_time,_check_timeout
  6293  001BDA  C09E  F089         	movff	?_get_time+1,_check_timeout+1
  6294  001BDE  C09F  F08A         	movff	?_get_time+2,_check_timeout+2
  6295  001BE2  C0A0  F08B         	movff	?_get_time+3,_check_timeout+3
  6296  001BE6                     
  6297                           ;main.c: 145:                 turn_off_heater();
  6298  001BE6  ECAA  F01D         	call	_turn_off_heater	;wreg free
  6299  001BEA                     
  6300                           ;main.c: 146:                 turn_off_fan(1);
  6301  001BEA  0E00               	movlw	0
  6302  001BEC  0100               	movlb	0	; () banked
  6303  001BEE  6F9E               	movwf	(turn_off_fan@idx+1)& (0+255),b
  6304  001BF0  0E01               	movlw	1
  6305  001BF2  6F9D               	movwf	turn_off_fan@idx& (0+255),b
  6306  001BF4  EC71  F01B         	call	_turn_off_fan	;wreg free
  6307  001BF8                     
  6308                           ;main.c: 147:                 turn_on_heat_pump();
  6309  001BF8  ECA8  F01D         	call	_turn_on_heat_pump	;wreg free
  6310  001BFC                     
  6311                           ;main.c: 148:                 turn_on_fan(2);
  6312  001BFC  0E00               	movlw	0
  6313  001BFE  0100               	movlb	0	; () banked
  6314  001C00  6F9E               	movwf	(turn_on_fan@idx+1)& (0+255),b
  6315  001C02  0E02               	movlw	2
  6316  001C04  6F9D               	movwf	turn_on_fan@idx& (0+255),b
  6317  001C06  ECFB  F01B         	call	_turn_on_fan	;wreg free
  6318  001C0A  EF56  F00F         	goto	l119
  6319  001C0E                     l3602:
  6320                           
  6321                           ; BSR set to: 0
  6322                           ;main.c: 152:             if(get_time() - check_timeout > 30000) {
  6323  001C0E  EC91  F01D         	call	_get_time	;wreg free
  6324  001C12  0100               	movlb	0	; () banked
  6325  001C14  5188               	movf	_check_timeout& (0+255),w,b
  6326  001C16  5D9D               	subwf	?_get_time& (0+255),w,b
  6327  001C18  6FAC               	movwf	??_LTD_process& (0+255),b
  6328  001C1A  5189               	movf	(_check_timeout+1)& (0+255),w,b
  6329  001C1C  599E               	subwfb	(?_get_time+1)& (0+255),w,b
  6330  001C1E  6FAD               	movwf	(??_LTD_process+1)& (0+255),b
  6331  001C20  518A               	movf	(_check_timeout+2)& (0+255),w,b
  6332  001C22  599F               	subwfb	(?_get_time+2)& (0+255),w,b
  6333  001C24  6FAE               	movwf	(??_LTD_process+2)& (0+255),b
  6334  001C26  518B               	movf	(_check_timeout+3)& (0+255),w,b
  6335  001C28  59A0               	subwfb	(?_get_time+3)& (0+255),w,b
  6336  001C2A  6FAF               	movwf	(??_LTD_process+3)& (0+255),b
  6337  001C2C  51AF               	movf	(??_LTD_process+3)& (0+255),w,b
  6338  001C2E  11AE               	iorwf	(??_LTD_process+2)& (0+255),w,b
  6339  001C30  E10B               	bnz	u2860
  6340  001C32  0E31               	movlw	49
  6341  001C34  5DAC               	subwf	??_LTD_process& (0+255),w,b
  6342  001C36  0E75               	movlw	117
  6343  001C38  59AD               	subwfb	(??_LTD_process+1)& (0+255),w,b
  6344  001C3A  A0D8               	btfss	status,0,c
  6345  001C3C  EF22  F00E         	goto	u2861
  6346  001C40  EF24  F00E         	goto	u2860
  6347  001C44                     u2861:
  6348  001C44  EF34  F00E         	goto	l3610
  6349  001C48                     u2860:
  6350  001C48                     
  6351                           ; BSR set to: 0
  6352                           ;main.c: 153:                 LCDPutInst(0x01);
  6353  001C48  0E01               	movlw	1
  6354  001C4A  ECDA  F01B         	call	_LCDPutInst
  6355  001C4E                     
  6356                           ;main.c: 154:                 LCDPrint(0, 0, "ERROR - TURN OFF");
  6357  001C4E  0E00               	movlw	0
  6358  001C50  0100               	movlb	0	; () banked
  6359  001C52  6FA8               	movwf	LCDPrint@pos& (0+255),b
  6360  001C54  0E23               	movlw	low STR_10
  6361  001C56  6FA9               	movwf	LCDPrint@ptr& (0+255),b
  6362  001C58  0E10               	movlw	high STR_10
  6363  001C5A  6FAA               	movwf	(LCDPrint@ptr+1)& (0+255),b
  6364  001C5C  0E00               	movlw	0
  6365  001C5E  EC98  F01B         	call	_LCDPrint
  6366  001C62                     
  6367                           ;main.c: 155:                 state = TERMINATE;
  6368  001C62  0E03               	movlw	3
  6369  001C64  0100               	movlb	0	; () banked
  6370  001C66  6F98               	movwf	_state& (0+255),b	;volatile
  6371  001C68                     l3610:
  6372                           
  6373                           ; BSR set to: 0
  6374                           ;main.c: 157:             if(flag_change_state) {
  6375  001C68  5196               	movf	_flag_change_state& (0+255),w,b
  6376  001C6A  B4D8               	btfsc	status,2,c
  6377  001C6C  EF3A  F00E         	goto	u2871
  6378  001C70  EF3C  F00E         	goto	u2870
  6379  001C74                     u2871:
  6380  001C74  EF56  F00F         	goto	l119
  6381  001C78                     u2870:
  6382  001C78                     
  6383                           ; BSR set to: 0
  6384                           ;main.c: 158:                 flag_change_state = 0;
  6385  001C78  0E00               	movlw	0
  6386  001C7A  6F96               	movwf	_flag_change_state& (0+255),b
  6387                           
  6388                           ;main.c: 160:                 if(!isSet) {
  6389  001C7C  5194               	movf	_isSet& (0+255),w,b
  6390  001C7E  A4D8               	btfss	status,2,c
  6391  001C80  EF44  F00E         	goto	u2881
  6392  001C84  EF46  F00E         	goto	u2880
  6393  001C88                     u2881:
  6394  001C88  EF59  F00E         	goto	l3616
  6395  001C8C                     u2880:
  6396  001C8C                     
  6397                           ; BSR set to: 0
  6398                           ;main.c: 161:                     LCDPrint(0, 0, "              ");
  6399  001C8C  0E00               	movlw	0
  6400  001C8E  6FA8               	movwf	LCDPrint@pos& (0+255),b
  6401  001C90  0E34               	movlw	low STR_5
  6402  001C92  6FA9               	movwf	LCDPrint@ptr& (0+255),b
  6403  001C94  0E10               	movlw	high STR_5
  6404  001C96  6FAA               	movwf	(LCDPrint@ptr+1)& (0+255),b
  6405  001C98  0E00               	movlw	0
  6406  001C9A  EC98  F01B         	call	_LCDPrint
  6407                           
  6408                           ;main.c: 162:                     LCDPrint(0, 0, "Heater");
  6409  001C9E  0E00               	movlw	0
  6410  001CA0  0100               	movlb	0	; () banked
  6411  001CA2  6FA8               	movwf	LCDPrint@pos& (0+255),b
  6412  001CA4  0E7F               	movlw	low STR_6
  6413  001CA6  6FA9               	movwf	LCDPrint@ptr& (0+255),b
  6414  001CA8  0E10               	movlw	high STR_6
  6415  001CAA  6FAA               	movwf	(LCDPrint@ptr+1)& (0+255),b
  6416  001CAC  0E00               	movlw	0
  6417  001CAE  EC98  F01B         	call	_LCDPrint
  6418  001CB2                     l3616:
  6419                           
  6420                           ;main.c: 165:                 state = HEATER;
  6421  001CB2  0E01               	movlw	1
  6422  001CB4  0100               	movlb	0	; () banked
  6423  001CB6  6F98               	movwf	_state& (0+255),b	;volatile
  6424  001CB8                     
  6425                           ; BSR set to: 0
  6426                           ;main.c: 166:                 check_timeout = get_time();
  6427  001CB8  EC91  F01D         	call	_get_time	;wreg free
  6428  001CBC  C09D  F088         	movff	?_get_time,_check_timeout
  6429  001CC0  C09E  F089         	movff	?_get_time+1,_check_timeout+1
  6430  001CC4  C09F  F08A         	movff	?_get_time+2,_check_timeout+2
  6431  001CC8  C0A0  F08B         	movff	?_get_time+3,_check_timeout+3
  6432  001CCC                     
  6433                           ;main.c: 168:                 turn_off_heat_pump();
  6434  001CCC  ECAC  F01D         	call	_turn_off_heat_pump	;wreg free
  6435  001CD0                     
  6436                           ;main.c: 169:                 turn_off_fan(2);
  6437  001CD0  0E00               	movlw	0
  6438  001CD2  0100               	movlb	0	; () banked
  6439  001CD4  6F9E               	movwf	(turn_off_fan@idx+1)& (0+255),b
  6440  001CD6  0E02               	movlw	2
  6441  001CD8  6F9D               	movwf	turn_off_fan@idx& (0+255),b
  6442  001CDA  EC71  F01B         	call	_turn_off_fan	;wreg free
  6443  001CDE                     
  6444                           ;main.c: 170:                 turn_on_heater();
  6445  001CDE  ECA6  F01D         	call	_turn_on_heater	;wreg free
  6446  001CE2                     
  6447                           ;main.c: 171:                 turn_on_fan(1);
  6448  001CE2  0E00               	movlw	0
  6449  001CE4  0100               	movlb	0	; () banked
  6450  001CE6  6F9E               	movwf	(turn_on_fan@idx+1)& (0+255),b
  6451  001CE8  0E01               	movlw	1
  6452  001CEA  6F9D               	movwf	turn_on_fan@idx& (0+255),b
  6453  001CEC  ECFB  F01B         	call	_turn_on_fan	;wreg free
  6454  001CF0  EF56  F00F         	goto	l119
  6455  001CF4                     l3628:
  6456                           
  6457                           ; BSR set to: 0
  6458                           ;main.c: 175:             LCDPrint(0, 0, "              ");
  6459  001CF4  0E00               	movlw	0
  6460  001CF6  6FA8               	movwf	LCDPrint@pos& (0+255),b
  6461  001CF8  0E34               	movlw	low STR_5
  6462  001CFA  6FA9               	movwf	LCDPrint@ptr& (0+255),b
  6463  001CFC  0E10               	movlw	high STR_5
  6464  001CFE  6FAA               	movwf	(LCDPrint@ptr+1)& (0+255),b
  6465  001D00  0E00               	movlw	0
  6466  001D02  EC98  F01B         	call	_LCDPrint
  6467                           
  6468                           ;main.c: 176:             LCDPrint(0, 0, "Finish");
  6469  001D06  0E00               	movlw	0
  6470  001D08  0100               	movlb	0	; () banked
  6471  001D0A  6FA8               	movwf	LCDPrint@pos& (0+255),b
  6472  001D0C  0E78               	movlw	low STR_17
  6473  001D0E  6FA9               	movwf	LCDPrint@ptr& (0+255),b
  6474  001D10  0E10               	movlw	high STR_17
  6475  001D12  6FAA               	movwf	(LCDPrint@ptr+1)& (0+255),b
  6476  001D14  0E00               	movlw	0
  6477  001D16  EC98  F01B         	call	_LCDPrint
  6478                           
  6479                           ;main.c: 177:             LCDPrint(1, 0, "T:");
  6480  001D1A  0E00               	movlw	0
  6481  001D1C  0100               	movlb	0	; () banked
  6482  001D1E  6FA8               	movwf	LCDPrint@pos& (0+255),b
  6483  001D20  0E95               	movlw	low STR_18
  6484  001D22  6FA9               	movwf	LCDPrint@ptr& (0+255),b
  6485  001D24  0E10               	movlw	high STR_18
  6486  001D26  6FAA               	movwf	(LCDPrint@ptr+1)& (0+255),b
  6487  001D28  0E01               	movlw	1
  6488  001D2A  EC98  F01B         	call	_LCDPrint
  6489                           
  6490                           ;main.c: 178:             LCDPrint(1, 6, "H:");
  6491  001D2E  0E06               	movlw	6
  6492  001D30  0100               	movlb	0	; () banked
  6493  001D32  6FA8               	movwf	LCDPrint@pos& (0+255),b
  6494  001D34  0E92               	movlw	low STR_19
  6495  001D36  6FA9               	movwf	LCDPrint@ptr& (0+255),b
  6496  001D38  0E10               	movlw	high STR_19
  6497  001D3A  6FAA               	movwf	(LCDPrint@ptr+1)& (0+255),b
  6498  001D3C  0E01               	movlw	1
  6499  001D3E  EC98  F01B         	call	_LCDPrint
  6500  001D42                     
  6501                           ;main.c: 179:             int temp = (int)temperature_value;
  6502  001D42  C099  F0B0         	movff	_temperature_value,LTD_process@temp
  6503  001D46  0100               	movlb	0	; () banked
  6504  001D48  6BB1               	clrf	(LTD_process@temp+1)& (0+255),b
  6505  001D4A                     
  6506                           ; BSR set to: 0
  6507                           ;main.c: 180:             int humid = (int)humidity_value;
  6508  001D4A  C09A  F0B2         	movff	_humidity_value,LTD_process@humid
  6509  001D4E  6BB3               	clrf	(LTD_process@humid+1)& (0+255),b
  6510  001D50                     
  6511                           ; BSR set to: 0
  6512                           ;main.c: 181:             LCDPrintChar(1, 3, temp / 10 + '0');
  6513  001D50  0E03               	movlw	3
  6514  001D52  6FA8               	movwf	LCDPrintChar@pos& (0+255),b
  6515  001D54  C0B0  F09D         	movff	LTD_process@temp,___awdiv@dividend
  6516  001D58  C0B1  F09E         	movff	LTD_process@temp+1,___awdiv@dividend+1
  6517  001D5C  0E00               	movlw	0
  6518  001D5E  6FA0               	movwf	(___awdiv@divisor+1)& (0+255),b
  6519  001D60  0E0A               	movlw	10
  6520  001D62  6F9F               	movwf	___awdiv@divisor& (0+255),b
  6521  001D64  EC52  F017         	call	___awdiv	;wreg free
  6522  001D68  0100               	movlb	0	; () banked
  6523  001D6A  519D               	movf	?___awdiv& (0+255),w,b
  6524  001D6C  0F30               	addlw	48
  6525  001D6E  6FA9               	movwf	LCDPrintChar@ch& (0+255),b
  6526  001D70  0E01               	movlw	1
  6527  001D72  EC3B  F01C         	call	_LCDPrintChar
  6528  001D76                     
  6529                           ;main.c: 182:             LCDPrintChar(1, 4, temp % 10 + '0');
  6530  001D76  0E04               	movlw	4
  6531  001D78  0100               	movlb	0	; () banked
  6532  001D7A  6FA8               	movwf	LCDPrintChar@pos& (0+255),b
  6533  001D7C  C0B0  F09D         	movff	LTD_process@temp,___awmod@dividend
  6534  001D80  C0B1  F09E         	movff	LTD_process@temp+1,___awmod@dividend+1
  6535  001D84  0E00               	movlw	0
  6536  001D86  6FA0               	movwf	(___awmod@divisor+1)& (0+255),b
  6537  001D88  0E0A               	movlw	10
  6538  001D8A  6F9F               	movwf	___awmod@divisor& (0+255),b
  6539  001D8C  EC70  F018         	call	___awmod	;wreg free
  6540  001D90  0100               	movlb	0	; () banked
  6541  001D92  519D               	movf	?___awmod& (0+255),w,b
  6542  001D94  0F30               	addlw	48
  6543  001D96  6FA9               	movwf	LCDPrintChar@ch& (0+255),b
  6544  001D98  0E01               	movlw	1
  6545  001D9A  EC3B  F01C         	call	_LCDPrintChar
  6546  001D9E                     
  6547                           ;main.c: 183:             LCDPrintChar(1, 8, humid / 10 + '0');
  6548  001D9E  0E08               	movlw	8
  6549  001DA0  0100               	movlb	0	; () banked
  6550  001DA2  6FA8               	movwf	LCDPrintChar@pos& (0+255),b
  6551  001DA4  C0B2  F09D         	movff	LTD_process@humid,___awdiv@dividend
  6552  001DA8  C0B3  F09E         	movff	LTD_process@humid+1,___awdiv@dividend+1
  6553  001DAC  0E00               	movlw	0
  6554  001DAE  6FA0               	movwf	(___awdiv@divisor+1)& (0+255),b
  6555  001DB0  0E0A               	movlw	10
  6556  001DB2  6F9F               	movwf	___awdiv@divisor& (0+255),b
  6557  001DB4  EC52  F017         	call	___awdiv	;wreg free
  6558  001DB8  0100               	movlb	0	; () banked
  6559  001DBA  519D               	movf	?___awdiv& (0+255),w,b
  6560  001DBC  0F30               	addlw	48
  6561  001DBE  6FA9               	movwf	LCDPrintChar@ch& (0+255),b
  6562  001DC0  0E01               	movlw	1
  6563  001DC2  EC3B  F01C         	call	_LCDPrintChar
  6564  001DC6                     
  6565                           ;main.c: 184:             LCDPrintChar(1, 9, humid % 10 + '0');
  6566  001DC6  0E09               	movlw	9
  6567  001DC8  0100               	movlb	0	; () banked
  6568  001DCA  6FA8               	movwf	LCDPrintChar@pos& (0+255),b
  6569  001DCC  C0B2  F09D         	movff	LTD_process@humid,___awmod@dividend
  6570  001DD0  C0B3  F09E         	movff	LTD_process@humid+1,___awmod@dividend+1
  6571  001DD4  0E00               	movlw	0
  6572  001DD6  6FA0               	movwf	(___awmod@divisor+1)& (0+255),b
  6573  001DD8  0E0A               	movlw	10
  6574  001DDA  6F9F               	movwf	___awmod@divisor& (0+255),b
  6575  001DDC  EC70  F018         	call	___awmod	;wreg free
  6576  001DE0  0100               	movlb	0	; () banked
  6577  001DE2  519D               	movf	?___awmod& (0+255),w,b
  6578  001DE4  0F30               	addlw	48
  6579  001DE6  6FA9               	movwf	LCDPrintChar@ch& (0+255),b
  6580  001DE8  0E01               	movlw	1
  6581  001DEA  EC3B  F01C         	call	_LCDPrintChar
  6582  001DEE                     
  6583                           ;main.c: 185:             _delay((unsigned long)((2000)*(8000000/4000.0)));
  6584  001DEE  0E15               	movlw	21
  6585  001DF0  0100               	movlb	0	; () banked
  6586  001DF2  6FAD               	movwf	(??_LTD_process+1)& (0+255),b
  6587  001DF4  0E4B               	movlw	75
  6588  001DF6  6FAC               	movwf	??_LTD_process& (0+255),b
  6589  001DF8  0EBE               	movlw	190
  6590  001DFA                     u3277:
  6591  001DFA  2EE8               	decfsz	wreg,f,c
  6592  001DFC  D7FE               	bra	u3277
  6593  001DFE  2FAC               	decfsz	??_LTD_process& (0+255),f,b
  6594  001E00  D7FC               	bra	u3277
  6595  001E02  2FAD               	decfsz	(??_LTD_process+1)& (0+255),f,b
  6596  001E04  D7FA               	bra	u3277
  6597  001E06  F000               	nop	
  6598  001E08                     
  6599                           ;main.c: 186:             turn_off_heater();
  6600  001E08  ECAA  F01D         	call	_turn_off_heater	;wreg free
  6601  001E0C                     
  6602                           ;main.c: 187:             turn_off_fan(1);
  6603  001E0C  0E00               	movlw	0
  6604  001E0E  0100               	movlb	0	; () banked
  6605  001E10  6F9E               	movwf	(turn_off_fan@idx+1)& (0+255),b
  6606  001E12  0E01               	movlw	1
  6607  001E14  6F9D               	movwf	turn_off_fan@idx& (0+255),b
  6608  001E16  EC71  F01B         	call	_turn_off_fan	;wreg free
  6609  001E1A                     
  6610                           ;main.c: 188:             turn_off_heat_pump();
  6611  001E1A  ECAC  F01D         	call	_turn_off_heat_pump	;wreg free
  6612  001E1E                     
  6613                           ;main.c: 189:             turn_off_fan(2);
  6614  001E1E  0E00               	movlw	0
  6615  001E20  0100               	movlb	0	; () banked
  6616  001E22  6F9E               	movwf	(turn_off_fan@idx+1)& (0+255),b
  6617  001E24  0E02               	movlw	2
  6618  001E26  6F9D               	movwf	turn_off_fan@idx& (0+255),b
  6619  001E28  EC71  F01B         	call	_turn_off_fan	;wreg free
  6620  001E2C                     
  6621                           ;main.c: 190:             check_timeout = 0;
  6622  001E2C  0E00               	movlw	0
  6623  001E2E  0100               	movlb	0	; () banked
  6624  001E30  6F88               	movwf	_check_timeout& (0+255),b
  6625  001E32  0E00               	movlw	0
  6626  001E34  6F89               	movwf	(_check_timeout+1)& (0+255),b
  6627  001E36  0E00               	movlw	0
  6628  001E38  6F8A               	movwf	(_check_timeout+2)& (0+255),b
  6629  001E3A  0E00               	movlw	0
  6630  001E3C  6F8B               	movwf	(_check_timeout+3)& (0+255),b
  6631  001E3E                     
  6632                           ; BSR set to: 0
  6633                           ;main.c: 191:             state = IDLE;
  6634  001E3E  0E00               	movlw	0
  6635  001E40  6F98               	movwf	_state& (0+255),b	;volatile
  6636  001E42                     
  6637                           ; BSR set to: 0
  6638                           ;main.c: 192:             RA5_pressed = 0;
  6639  001E42  0E00               	movlw	0
  6640  001E44  6F9C               	movwf	_RA5_pressed& (0+255),b
  6641  001E46                     
  6642                           ; BSR set to: 0
  6643                           ;main.c: 193:             LCDPrint(0, 0, "              ");
  6644  001E46  0E00               	movlw	0
  6645  001E48  6FA8               	movwf	LCDPrint@pos& (0+255),b
  6646  001E4A  0E34               	movlw	low STR_5
  6647  001E4C  6FA9               	movwf	LCDPrint@ptr& (0+255),b
  6648  001E4E  0E10               	movlw	high STR_5
  6649  001E50  6FAA               	movwf	(LCDPrint@ptr+1)& (0+255),b
  6650  001E52  0E00               	movlw	0
  6651  001E54  EC98  F01B         	call	_LCDPrint
  6652  001E58                     
  6653                           ;main.c: 194:             LCDPrint(0, 0, "IDLE");
  6654  001E58  0E00               	movlw	0
  6655  001E5A  0100               	movlb	0	; () banked
  6656  001E5C  6FA8               	movwf	LCDPrint@pos& (0+255),b
  6657  001E5E  0E86               	movlw	low STR_21
  6658  001E60  6FA9               	movwf	LCDPrint@ptr& (0+255),b
  6659  001E62  0E10               	movlw	high STR_21
  6660  001E64  6FAA               	movwf	(LCDPrint@ptr+1)& (0+255),b
  6661  001E66  0E00               	movlw	0
  6662  001E68  EC98  F01B         	call	_LCDPrint
  6663                           
  6664                           ;main.c: 195:             break;
  6665  001E6C  EF56  F00F         	goto	l119
  6666  001E70                     l3664:
  6667  001E70  0100               	movlb	0	; () banked
  6668  001E72  5198               	movf	_state& (0+255),w,b	;volatile
  6669  001E74  6FAC               	movwf	??_LTD_process& (0+255),b
  6670  001E76  6BAD               	clrf	(??_LTD_process+1)& (0+255),b
  6671                           
  6672                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6673                           ; Switch size 1, requested type "simple"
  6674                           ; Number of cases is 1, Range of values is 0 to 0
  6675                           ; switch strategies available:
  6676                           ; Name         Instructions Cycles
  6677                           ; simple_byte            4     3 (average)
  6678                           ;	Chosen strategy is simple_byte
  6679  001E78  51AD               	movf	(??_LTD_process+1)& (0+255),w,b
  6680  001E7A  0A00               	xorlw	0	; case 0
  6681  001E7C  B4D8               	btfsc	status,2,c
  6682  001E7E  EF43  F00F         	goto	l4024
  6683  001E82  EF56  F00F         	goto	l119
  6684  001E86                     l4024:
  6685                           
  6686                           ; BSR set to: 0
  6687                           ; Switch size 1, requested type "simple"
  6688                           ; Number of cases is 4, Range of values is 0 to 3
  6689                           ; switch strategies available:
  6690                           ; Name         Instructions Cycles
  6691                           ; simple_byte           13     7 (average)
  6692                           ;	Chosen strategy is simple_byte
  6693  001E86  51AC               	movf	??_LTD_process& (0+255),w,b
  6694  001E88  0A00               	xorlw	0	; case 0
  6695  001E8A  B4D8               	btfsc	status,2,c
  6696  001E8C  EF5F  F00D         	goto	l3562
  6697  001E90  0A01               	xorlw	1	; case 1
  6698  001E92  B4D8               	btfsc	status,2,c
  6699  001E94  EF94  F00D         	goto	l3576
  6700  001E98  0A03               	xorlw	3	; case 2
  6701  001E9A  B4D8               	btfsc	status,2,c
  6702  001E9C  EF07  F00E         	goto	l3602
  6703  001EA0  0A01               	xorlw	1	; case 3
  6704  001EA2  B4D8               	btfsc	status,2,c
  6705  001EA4  EF7A  F00E         	goto	l3628
  6706  001EA8  EF56  F00F         	goto	l119
  6707  001EAC                     l119:
  6708  001EAC  0012               	return		;funcret
  6709  001EAE                     __end_of_LTD_process:
  6710                           	opt callstack 0
  6711                           
  6712 ;; *************** function _turn_on_heater *****************
  6713 ;; Defined at:
  6714 ;;		line 3 in file "LTDtasks.c"
  6715 ;; Parameters:    Size  Location     Type
  6716 ;;		None
  6717 ;; Auto vars:     Size  Location     Type
  6718 ;;		None
  6719 ;; Return value:  Size  Location     Type
  6720 ;;                  1    wreg      void 
  6721 ;; Registers used:
  6722 ;;		None
  6723 ;; Tracked objects:
  6724 ;;		On entry : 0/0
  6725 ;;		On exit  : 0/0
  6726 ;;		Unchanged: 0/0
  6727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6732 ;;Total ram usage:        0 bytes
  6733 ;; Hardware stack levels used:    1
  6734 ;; Hardware stack levels required when called:    5
  6735 ;; This function calls:
  6736 ;;		Nothing
  6737 ;; This function is called by:
  6738 ;;		_LTD_process
  6739 ;; This function uses a non-reentrant model
  6740 ;;
  6741                           
  6742                           	psect	text32
  6743  003B4C                     __ptext32:
  6744                           	opt callstack 0
  6745  003B4C                     _turn_on_heater:
  6746                           	opt callstack 24
  6747  003B4C                     
  6748                           ;LTDtasks.c: 4:     LATDbits.LATD0 = 1;
  6749  003B4C  808C               	bsf	140,0,c	;volatile
  6750  003B4E  0012               	return		;funcret
  6751  003B50                     __end_of_turn_on_heater:
  6752                           	opt callstack 0
  6753                           
  6754 ;; *************** function _turn_on_heat_pump *****************
  6755 ;; Defined at:
  6756 ;;		line 11 in file "LTDtasks.c"
  6757 ;; Parameters:    Size  Location     Type
  6758 ;;		None
  6759 ;; Auto vars:     Size  Location     Type
  6760 ;;		None
  6761 ;; Return value:  Size  Location     Type
  6762 ;;                  1    wreg      void 
  6763 ;; Registers used:
  6764 ;;		None
  6765 ;; Tracked objects:
  6766 ;;		On entry : 0/0
  6767 ;;		On exit  : 0/0
  6768 ;;		Unchanged: 0/0
  6769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6774 ;;Total ram usage:        0 bytes
  6775 ;; Hardware stack levels used:    1
  6776 ;; Hardware stack levels required when called:    5
  6777 ;; This function calls:
  6778 ;;		Nothing
  6779 ;; This function is called by:
  6780 ;;		_LTD_process
  6781 ;; This function uses a non-reentrant model
  6782 ;;
  6783                           
  6784                           	psect	text33
  6785  003B50                     __ptext33:
  6786                           	opt callstack 0
  6787  003B50                     _turn_on_heat_pump:
  6788                           	opt callstack 24
  6789  003B50                     
  6790                           ;LTDtasks.c: 12:     LATDbits.LATD1 = 1;
  6791  003B50  828C               	bsf	140,1,c	;volatile
  6792  003B52  0012               	return		;funcret
  6793  003B54                     __end_of_turn_on_heat_pump:
  6794                           	opt callstack 0
  6795                           
  6796 ;; *************** function _turn_on_fan *****************
  6797 ;; Defined at:
  6798 ;;		line 19 in file "LTDtasks.c"
  6799 ;; Parameters:    Size  Location     Type
  6800 ;;  idx             2    0[BANK0 ] int 
  6801 ;; Auto vars:     Size  Location     Type
  6802 ;;		None
  6803 ;; Return value:  Size  Location     Type
  6804 ;;                  1    wreg      void 
  6805 ;; Registers used:
  6806 ;;		wreg, status,2, status,0
  6807 ;; Tracked objects:
  6808 ;;		On entry : 0/0
  6809 ;;		On exit  : 0/0
  6810 ;;		Unchanged: 0/0
  6811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6812 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6814 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6815 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6816 ;;Total ram usage:        4 bytes
  6817 ;; Hardware stack levels used:    1
  6818 ;; Hardware stack levels required when called:    5
  6819 ;; This function calls:
  6820 ;;		Nothing
  6821 ;; This function is called by:
  6822 ;;		_LTD_process
  6823 ;; This function uses a non-reentrant model
  6824 ;;
  6825                           
  6826                           	psect	text34
  6827  0037F6                     __ptext34:
  6828                           	opt callstack 0
  6829  0037F6                     _turn_on_fan:
  6830                           	opt callstack 24
  6831  0037F6                     
  6832                           ;LTDtasks.c: 20:     switch (idx) {
  6833  0037F6  EF03  F01C         	goto	l3180
  6834  0037FA                     l763:
  6835                           
  6836                           ; BSR set to: 0
  6837                           ;LTDtasks.c: 22:             LATDbits.LATD7 = 1;
  6838  0037FA  8E8C               	bsf	140,7,c	;volatile
  6839                           
  6840                           ;LTDtasks.c: 23:             break;
  6841  0037FC  EF1A  F01C         	goto	l766
  6842  003800                     l765:
  6843                           
  6844                           ; BSR set to: 0
  6845                           ;LTDtasks.c: 25:             LATDbits.LATD6 = 1;
  6846  003800  8C8C               	bsf	140,6,c	;volatile
  6847                           
  6848                           ;LTDtasks.c: 26:             break;
  6849  003802  EF1A  F01C         	goto	l766
  6850  003806                     l3180:
  6851  003806  C09D  F09F         	movff	turn_on_fan@idx,??_turn_on_fan
  6852  00380A  C09E  F0A0         	movff	turn_on_fan@idx+1,??_turn_on_fan+1
  6853                           
  6854                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6855                           ; Switch size 1, requested type "simple"
  6856                           ; Number of cases is 1, Range of values is 0 to 0
  6857                           ; switch strategies available:
  6858                           ; Name         Instructions Cycles
  6859                           ; simple_byte            4     3 (average)
  6860                           ;	Chosen strategy is simple_byte
  6861  00380E  0100               	movlb	0	; () banked
  6862  003810  51A0               	movf	(??_turn_on_fan+1)& (0+255),w,b
  6863  003812  0A00               	xorlw	0	; case 0
  6864  003814  B4D8               	btfsc	status,2,c
  6865  003816  EF0F  F01C         	goto	l4026
  6866  00381A  EF1A  F01C         	goto	l766
  6867  00381E                     l4026:
  6868                           
  6869                           ; BSR set to: 0
  6870                           ; Switch size 1, requested type "simple"
  6871                           ; Number of cases is 2, Range of values is 1 to 2
  6872                           ; switch strategies available:
  6873                           ; Name         Instructions Cycles
  6874                           ; simple_byte            7     4 (average)
  6875                           ;	Chosen strategy is simple_byte
  6876  00381E  519F               	movf	??_turn_on_fan& (0+255),w,b
  6877  003820  0A01               	xorlw	1	; case 1
  6878  003822  B4D8               	btfsc	status,2,c
  6879  003824  EFFD  F01B         	goto	l763
  6880  003828  0A03               	xorlw	3	; case 2
  6881  00382A  B4D8               	btfsc	status,2,c
  6882  00382C  EF00  F01C         	goto	l765
  6883  003830  EF1A  F01C         	goto	l766
  6884  003834                     l766:
  6885                           
  6886                           ; BSR set to: 0
  6887  003834  0012               	return		;funcret
  6888  003836                     __end_of_turn_on_fan:
  6889                           	opt callstack 0
  6890                           
  6891 ;; *************** function _turn_off_heater *****************
  6892 ;; Defined at:
  6893 ;;		line 7 in file "LTDtasks.c"
  6894 ;; Parameters:    Size  Location     Type
  6895 ;;		None
  6896 ;; Auto vars:     Size  Location     Type
  6897 ;;		None
  6898 ;; Return value:  Size  Location     Type
  6899 ;;                  1    wreg      void 
  6900 ;; Registers used:
  6901 ;;		None
  6902 ;; Tracked objects:
  6903 ;;		On entry : 0/0
  6904 ;;		On exit  : 0/0
  6905 ;;		Unchanged: 0/0
  6906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6911 ;;Total ram usage:        0 bytes
  6912 ;; Hardware stack levels used:    1
  6913 ;; Hardware stack levels required when called:    5
  6914 ;; This function calls:
  6915 ;;		Nothing
  6916 ;; This function is called by:
  6917 ;;		_LTD_process
  6918 ;;		_force_turn_off
  6919 ;; This function uses a non-reentrant model
  6920 ;;
  6921                           
  6922                           	psect	text35
  6923  003B54                     __ptext35:
  6924                           	opt callstack 0
  6925  003B54                     _turn_off_heater:
  6926                           	opt callstack 24
  6927  003B54                     
  6928                           ;LTDtasks.c: 8:     LATDbits.LATD0 = 0;
  6929  003B54  908C               	bcf	140,0,c	;volatile
  6930  003B56  0012               	return		;funcret
  6931  003B58                     __end_of_turn_off_heater:
  6932                           	opt callstack 0
  6933                           
  6934 ;; *************** function _turn_off_heat_pump *****************
  6935 ;; Defined at:
  6936 ;;		line 15 in file "LTDtasks.c"
  6937 ;; Parameters:    Size  Location     Type
  6938 ;;		None
  6939 ;; Auto vars:     Size  Location     Type
  6940 ;;		None
  6941 ;; Return value:  Size  Location     Type
  6942 ;;                  1    wreg      void 
  6943 ;; Registers used:
  6944 ;;		None
  6945 ;; Tracked objects:
  6946 ;;		On entry : 0/0
  6947 ;;		On exit  : 0/0
  6948 ;;		Unchanged: 0/0
  6949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6954 ;;Total ram usage:        0 bytes
  6955 ;; Hardware stack levels used:    1
  6956 ;; Hardware stack levels required when called:    5
  6957 ;; This function calls:
  6958 ;;		Nothing
  6959 ;; This function is called by:
  6960 ;;		_LTD_process
  6961 ;;		_force_turn_off
  6962 ;; This function uses a non-reentrant model
  6963 ;;
  6964                           
  6965                           	psect	text36
  6966  003B58                     __ptext36:
  6967                           	opt callstack 0
  6968  003B58                     _turn_off_heat_pump:
  6969                           	opt callstack 24
  6970  003B58                     
  6971                           ;LTDtasks.c: 16:     LATDbits.LATD1 = 0;
  6972  003B58  928C               	bcf	140,1,c	;volatile
  6973  003B5A  0012               	return		;funcret
  6974  003B5C                     __end_of_turn_off_heat_pump:
  6975                           	opt callstack 0
  6976                           
  6977 ;; *************** function _turn_off_fan *****************
  6978 ;; Defined at:
  6979 ;;		line 30 in file "LTDtasks.c"
  6980 ;; Parameters:    Size  Location     Type
  6981 ;;  idx             2    0[BANK0 ] int 
  6982 ;; Auto vars:     Size  Location     Type
  6983 ;;		None
  6984 ;; Return value:  Size  Location     Type
  6985 ;;                  1    wreg      void 
  6986 ;; Registers used:
  6987 ;;		wreg, status,2, status,0
  6988 ;; Tracked objects:
  6989 ;;		On entry : 0/0
  6990 ;;		On exit  : 0/0
  6991 ;;		Unchanged: 0/0
  6992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6993 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6995 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6996 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6997 ;;Total ram usage:        4 bytes
  6998 ;; Hardware stack levels used:    1
  6999 ;; Hardware stack levels required when called:    5
  7000 ;; This function calls:
  7001 ;;		Nothing
  7002 ;; This function is called by:
  7003 ;;		_LTD_process
  7004 ;;		_force_turn_off
  7005 ;; This function uses a non-reentrant model
  7006 ;;
  7007                           
  7008                           	psect	text37
  7009  0036E2                     __ptext37:
  7010                           	opt callstack 0
  7011  0036E2                     _turn_off_fan:
  7012                           	opt callstack 24
  7013  0036E2                     
  7014                           ;LTDtasks.c: 31:     switch (idx) {
  7015  0036E2  EF7C  F01B         	goto	l3194
  7016  0036E6                     l770:
  7017                           
  7018                           ; BSR set to: 0
  7019                           ;LTDtasks.c: 33:             LATDbits.LATD7 = 0;
  7020  0036E6  9E8C               	bcf	140,7,c	;volatile
  7021                           
  7022                           ;LTDtasks.c: 34:             break;
  7023  0036E8  EF97  F01B         	goto	l774
  7024  0036EC                     l772:
  7025                           
  7026                           ; BSR set to: 0
  7027                           ;LTDtasks.c: 36:             LATDbits.LATD6 = 0;
  7028  0036EC  9C8C               	bcf	140,6,c	;volatile
  7029                           
  7030                           ;LTDtasks.c: 37:             break;
  7031  0036EE  EF97  F01B         	goto	l774
  7032  0036F2                     l773:
  7033                           
  7034                           ; BSR set to: 0
  7035                           ;LTDtasks.c: 39:             LATDbits.LATD5 = 0;
  7036  0036F2  9A8C               	bcf	140,5,c	;volatile
  7037                           
  7038                           ;LTDtasks.c: 40:             break;
  7039  0036F4  EF97  F01B         	goto	l774
  7040  0036F8                     l3194:
  7041  0036F8  C09D  F09F         	movff	turn_off_fan@idx,??_turn_off_fan
  7042  0036FC  C09E  F0A0         	movff	turn_off_fan@idx+1,??_turn_off_fan+1
  7043                           
  7044                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7045                           ; Switch size 1, requested type "simple"
  7046                           ; Number of cases is 1, Range of values is 0 to 0
  7047                           ; switch strategies available:
  7048                           ; Name         Instructions Cycles
  7049                           ; simple_byte            4     3 (average)
  7050                           ;	Chosen strategy is simple_byte
  7051  003700  0100               	movlb	0	; () banked
  7052  003702  51A0               	movf	(??_turn_off_fan+1)& (0+255),w,b
  7053  003704  0A00               	xorlw	0	; case 0
  7054  003706  B4D8               	btfsc	status,2,c
  7055  003708  EF88  F01B         	goto	l4028
  7056  00370C  EF97  F01B         	goto	l774
  7057  003710                     l4028:
  7058                           
  7059                           ; BSR set to: 0
  7060                           ; Switch size 1, requested type "simple"
  7061                           ; Number of cases is 3, Range of values is 1 to 3
  7062                           ; switch strategies available:
  7063                           ; Name         Instructions Cycles
  7064                           ; simple_byte           10     6 (average)
  7065                           ;	Chosen strategy is simple_byte
  7066  003710  519F               	movf	??_turn_off_fan& (0+255),w,b
  7067  003712  0A01               	xorlw	1	; case 1
  7068  003714  B4D8               	btfsc	status,2,c
  7069  003716  EF73  F01B         	goto	l770
  7070  00371A  0A03               	xorlw	3	; case 2
  7071  00371C  B4D8               	btfsc	status,2,c
  7072  00371E  EF76  F01B         	goto	l772
  7073  003722  0A01               	xorlw	1	; case 3
  7074  003724  B4D8               	btfsc	status,2,c
  7075  003726  EF79  F01B         	goto	l773
  7076  00372A  EF97  F01B         	goto	l774
  7077  00372E                     l774:
  7078                           
  7079                           ; BSR set to: 0
  7080  00372E  0012               	return		;funcret
  7081  003730                     __end_of_turn_off_fan:
  7082                           	opt callstack 0
  7083                           
  7084 ;; *************** function _get_time *****************
  7085 ;; Defined at:
  7086 ;;		line 112 in file "clock.c"
  7087 ;; Parameters:    Size  Location     Type
  7088 ;;		None
  7089 ;; Auto vars:     Size  Location     Type
  7090 ;;		None
  7091 ;; Return value:  Size  Location     Type
  7092 ;;                  4    0[BANK0 ] unsigned long 
  7093 ;; Registers used:
  7094 ;;		None
  7095 ;; Tracked objects:
  7096 ;;		On entry : 0/0
  7097 ;;		On exit  : 0/0
  7098 ;;		Unchanged: 0/0
  7099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7100 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7103 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7104 ;;Total ram usage:        4 bytes
  7105 ;; Hardware stack levels used:    1
  7106 ;; Hardware stack levels required when called:    5
  7107 ;; This function calls:
  7108 ;;		Nothing
  7109 ;; This function is called by:
  7110 ;;		_LTD_process
  7111 ;; This function uses a non-reentrant model
  7112 ;;
  7113                           
  7114                           	psect	text38
  7115  003B22                     __ptext38:
  7116                           	opt callstack 0
  7117  003B22                     _get_time:
  7118                           	opt callstack 24
  7119  003B22                     
  7120                           ;clock.c: 113:     return time_ms;
  7121  003B22  C084  F09D         	movff	_time_ms,?_get_time
  7122  003B26  C085  F09E         	movff	_time_ms+1,?_get_time+1
  7123  003B2A  C086  F09F         	movff	_time_ms+2,?_get_time+2
  7124  003B2E  C087  F0A0         	movff	_time_ms+3,?_get_time+3
  7125  003B32  0012               	return		;funcret
  7126  003B34                     __end_of_get_time:
  7127                           	opt callstack 0
  7128                           
  7129 ;; *************** function ___awmod *****************
  7130 ;; Defined at:
  7131 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  7132 ;; Parameters:    Size  Location     Type
  7133 ;;  dividend        2    0[BANK0 ] int 
  7134 ;;  divisor         2    2[BANK0 ] int 
  7135 ;; Auto vars:     Size  Location     Type
  7136 ;;  sign            1    5[BANK0 ] unsigned char 
  7137 ;;  counter         1    4[BANK0 ] unsigned char 
  7138 ;; Return value:  Size  Location     Type
  7139 ;;                  2    0[BANK0 ] int 
  7140 ;; Registers used:
  7141 ;;		wreg, status,2, status,0
  7142 ;; Tracked objects:
  7143 ;;		On entry : 0/0
  7144 ;;		On exit  : 0/0
  7145 ;;		Unchanged: 0/0
  7146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7147 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7148 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7150 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7151 ;;Total ram usage:        6 bytes
  7152 ;; Hardware stack levels used:    1
  7153 ;; Hardware stack levels required when called:    5
  7154 ;; This function calls:
  7155 ;;		Nothing
  7156 ;; This function is called by:
  7157 ;;		_set_time_process
  7158 ;;		_LTD_process
  7159 ;;		_check_humid_to_turn_fan
  7160 ;;		_print_temp_and_humid
  7161 ;;		_getSizeQueue
  7162 ;;		_dequeue
  7163 ;; This function uses a non-reentrant model
  7164 ;;
  7165                           
  7166                           	psect	text39
  7167  0030E0                     __ptext39:
  7168                           	opt callstack 0
  7169  0030E0                     ___awmod:
  7170                           	opt callstack 24
  7171  0030E0  0E00               	movlw	0
  7172  0030E2  0100               	movlb	0	; () banked
  7173  0030E4  6FA2               	movwf	___awmod@sign& (0+255),b
  7174  0030E6                     
  7175                           ; BSR set to: 0
  7176  0030E6  BF9E               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  7177  0030E8  EF7A  F018         	goto	u1630
  7178  0030EC  EF78  F018         	goto	u1631
  7179  0030F0                     u1631:
  7180  0030F0  EF80  F018         	goto	l2752
  7181  0030F4                     u1630:
  7182  0030F4                     
  7183                           ; BSR set to: 0
  7184  0030F4  6D9D               	negf	___awmod@dividend& (0+255),b
  7185  0030F6  1F9E               	comf	(___awmod@dividend+1)& (0+255),f,b
  7186  0030F8  B0D8               	btfsc	status,0,c
  7187  0030FA  2B9E               	incf	(___awmod@dividend+1)& (0+255),f,b
  7188  0030FC                     
  7189                           ; BSR set to: 0
  7190  0030FC  0E01               	movlw	1
  7191  0030FE  6FA2               	movwf	___awmod@sign& (0+255),b
  7192  003100                     l2752:
  7193                           
  7194                           ; BSR set to: 0
  7195  003100  BFA0               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  7196  003102  EF87  F018         	goto	u1640
  7197  003106  EF85  F018         	goto	u1641
  7198  00310A                     u1641:
  7199  00310A  EF8B  F018         	goto	l2756
  7200  00310E                     u1640:
  7201  00310E                     
  7202                           ; BSR set to: 0
  7203  00310E  6D9F               	negf	___awmod@divisor& (0+255),b
  7204  003110  1FA0               	comf	(___awmod@divisor+1)& (0+255),f,b
  7205  003112  B0D8               	btfsc	status,0,c
  7206  003114  2BA0               	incf	(___awmod@divisor+1)& (0+255),f,b
  7207  003116                     l2756:
  7208                           
  7209                           ; BSR set to: 0
  7210  003116  519F               	movf	___awmod@divisor& (0+255),w,b
  7211  003118  11A0               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  7212  00311A  B4D8               	btfsc	status,2,c
  7213  00311C  EF92  F018         	goto	u1651
  7214  003120  EF94  F018         	goto	u1650
  7215  003124                     u1651:
  7216  003124  EFB8  F018         	goto	l2772
  7217  003128                     u1650:
  7218  003128                     
  7219                           ; BSR set to: 0
  7220  003128  0E01               	movlw	1
  7221  00312A  6FA1               	movwf	___awmod@counter& (0+255),b
  7222  00312C  EF9C  F018         	goto	l2762
  7223  003130                     l2760:
  7224                           
  7225                           ; BSR set to: 0
  7226  003130  90D8               	bcf	status,0,c
  7227  003132  379F               	rlcf	___awmod@divisor& (0+255),f,b
  7228  003134  37A0               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  7229  003136  2BA1               	incf	___awmod@counter& (0+255),f,b
  7230  003138                     l2762:
  7231                           
  7232                           ; BSR set to: 0
  7233  003138  AFA0               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7234  00313A  EFA1  F018         	goto	u1661
  7235  00313E  EFA3  F018         	goto	u1660
  7236  003142                     u1661:
  7237  003142  EF98  F018         	goto	l2760
  7238  003146                     u1660:
  7239  003146                     l2764:
  7240                           
  7241                           ; BSR set to: 0
  7242  003146  519F               	movf	___awmod@divisor& (0+255),w,b
  7243  003148  5D9D               	subwf	___awmod@dividend& (0+255),w,b
  7244  00314A  51A0               	movf	(___awmod@divisor+1)& (0+255),w,b
  7245  00314C  599E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  7246  00314E  A0D8               	btfss	status,0,c
  7247  003150  EFAC  F018         	goto	u1671
  7248  003154  EFAE  F018         	goto	u1670
  7249  003158                     u1671:
  7250  003158  EFB2  F018         	goto	l2768
  7251  00315C                     u1670:
  7252  00315C                     
  7253                           ; BSR set to: 0
  7254  00315C  519F               	movf	___awmod@divisor& (0+255),w,b
  7255  00315E  5F9D               	subwf	___awmod@dividend& (0+255),f,b
  7256  003160  51A0               	movf	(___awmod@divisor+1)& (0+255),w,b
  7257  003162  5B9E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  7258  003164                     l2768:
  7259                           
  7260                           ; BSR set to: 0
  7261  003164  90D8               	bcf	status,0,c
  7262  003166  33A0               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  7263  003168  339F               	rrcf	___awmod@divisor& (0+255),f,b
  7264  00316A                     
  7265                           ; BSR set to: 0
  7266  00316A  2FA1               	decfsz	___awmod@counter& (0+255),f,b
  7267  00316C  EFA3  F018         	goto	l2764
  7268  003170                     l2772:
  7269                           
  7270                           ; BSR set to: 0
  7271  003170  51A2               	movf	___awmod@sign& (0+255),w,b
  7272  003172  B4D8               	btfsc	status,2,c
  7273  003174  EFBE  F018         	goto	u1681
  7274  003178  EFC0  F018         	goto	u1680
  7275  00317C                     u1681:
  7276  00317C  EFC4  F018         	goto	l2776
  7277  003180                     u1680:
  7278  003180                     
  7279                           ; BSR set to: 0
  7280  003180  6D9D               	negf	___awmod@dividend& (0+255),b
  7281  003182  1F9E               	comf	(___awmod@dividend+1)& (0+255),f,b
  7282  003184  B0D8               	btfsc	status,0,c
  7283  003186  2B9E               	incf	(___awmod@dividend+1)& (0+255),f,b
  7284  003188                     l2776:
  7285                           
  7286                           ; BSR set to: 0
  7287  003188  C09D  F09D         	movff	___awmod@dividend,?___awmod
  7288  00318C  C09E  F09E         	movff	___awmod@dividend+1,?___awmod+1
  7289  003190                     
  7290                           ; BSR set to: 0
  7291  003190  0012               	return		;funcret
  7292  003192                     __end_of___awmod:
  7293                           	opt callstack 0
  7294                           
  7295 ;; *************** function ___awdiv *****************
  7296 ;; Defined at:
  7297 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  7298 ;; Parameters:    Size  Location     Type
  7299 ;;  dividend        2    0[BANK0 ] int 
  7300 ;;  divisor         2    2[BANK0 ] int 
  7301 ;; Auto vars:     Size  Location     Type
  7302 ;;  quotient        2    6[BANK0 ] int 
  7303 ;;  sign            1    5[BANK0 ] unsigned char 
  7304 ;;  counter         1    4[BANK0 ] unsigned char 
  7305 ;; Return value:  Size  Location     Type
  7306 ;;                  2    0[BANK0 ] int 
  7307 ;; Registers used:
  7308 ;;		wreg, status,2, status,0
  7309 ;; Tracked objects:
  7310 ;;		On entry : 0/0
  7311 ;;		On exit  : 0/0
  7312 ;;		Unchanged: 0/0
  7313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7314 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7315 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7317 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7318 ;;Total ram usage:        8 bytes
  7319 ;; Hardware stack levels used:    1
  7320 ;; Hardware stack levels required when called:    5
  7321 ;; This function calls:
  7322 ;;		Nothing
  7323 ;; This function is called by:
  7324 ;;		_set_time_process
  7325 ;;		_LTD_process
  7326 ;;		_check_humid_to_turn_fan
  7327 ;;		_print_temp_and_humid
  7328 ;; This function uses a non-reentrant model
  7329 ;;
  7330                           
  7331                           	psect	text40
  7332  002EA4                     __ptext40:
  7333                           	opt callstack 0
  7334  002EA4                     ___awdiv:
  7335                           	opt callstack 24
  7336  002EA4  0E00               	movlw	0
  7337  002EA6  0100               	movlb	0	; () banked
  7338  002EA8  6FA2               	movwf	___awdiv@sign& (0+255),b
  7339  002EAA                     
  7340                           ; BSR set to: 0
  7341  002EAA  BFA0               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  7342  002EAC  EF5C  F017         	goto	u2140
  7343  002EB0  EF5A  F017         	goto	u2141
  7344  002EB4                     u2141:
  7345  002EB4  EF62  F017         	goto	l3042
  7346  002EB8                     u2140:
  7347  002EB8                     
  7348                           ; BSR set to: 0
  7349  002EB8  6D9F               	negf	___awdiv@divisor& (0+255),b
  7350  002EBA  1FA0               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7351  002EBC  B0D8               	btfsc	status,0,c
  7352  002EBE  2BA0               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7353  002EC0                     
  7354                           ; BSR set to: 0
  7355  002EC0  0E01               	movlw	1
  7356  002EC2  6FA2               	movwf	___awdiv@sign& (0+255),b
  7357  002EC4                     l3042:
  7358                           
  7359                           ; BSR set to: 0
  7360  002EC4  BF9E               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  7361  002EC6  EF69  F017         	goto	u2150
  7362  002ECA  EF67  F017         	goto	u2151
  7363  002ECE                     u2151:
  7364  002ECE  EF6F  F017         	goto	l3048
  7365  002ED2                     u2150:
  7366  002ED2                     
  7367                           ; BSR set to: 0
  7368  002ED2  6D9D               	negf	___awdiv@dividend& (0+255),b
  7369  002ED4  1F9E               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7370  002ED6  B0D8               	btfsc	status,0,c
  7371  002ED8  2B9E               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7372  002EDA                     
  7373                           ; BSR set to: 0
  7374  002EDA  0E01               	movlw	1
  7375  002EDC  1BA2               	xorwf	___awdiv@sign& (0+255),f,b
  7376  002EDE                     l3048:
  7377                           
  7378                           ; BSR set to: 0
  7379  002EDE  0E00               	movlw	0
  7380  002EE0  6FA4               	movwf	(___awdiv@quotient+1)& (0+255),b
  7381  002EE2  0E00               	movlw	0
  7382  002EE4  6FA3               	movwf	___awdiv@quotient& (0+255),b
  7383  002EE6                     
  7384                           ; BSR set to: 0
  7385  002EE6  519F               	movf	___awdiv@divisor& (0+255),w,b
  7386  002EE8  11A0               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7387  002EEA  B4D8               	btfsc	status,2,c
  7388  002EEC  EF7A  F017         	goto	u2161
  7389  002EF0  EF7C  F017         	goto	u2160
  7390  002EF4                     u2161:
  7391  002EF4  EFA4  F017         	goto	l3070
  7392  002EF8                     u2160:
  7393  002EF8                     
  7394                           ; BSR set to: 0
  7395  002EF8  0E01               	movlw	1
  7396  002EFA  6FA1               	movwf	___awdiv@counter& (0+255),b
  7397  002EFC  EF84  F017         	goto	l3056
  7398  002F00                     l3054:
  7399                           
  7400                           ; BSR set to: 0
  7401  002F00  90D8               	bcf	status,0,c
  7402  002F02  379F               	rlcf	___awdiv@divisor& (0+255),f,b
  7403  002F04  37A0               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7404  002F06  2BA1               	incf	___awdiv@counter& (0+255),f,b
  7405  002F08                     l3056:
  7406                           
  7407                           ; BSR set to: 0
  7408  002F08  AFA0               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7409  002F0A  EF89  F017         	goto	u2171
  7410  002F0E  EF8B  F017         	goto	u2170
  7411  002F12                     u2171:
  7412  002F12  EF80  F017         	goto	l3054
  7413  002F16                     u2170:
  7414  002F16                     l3058:
  7415                           
  7416                           ; BSR set to: 0
  7417  002F16  90D8               	bcf	status,0,c
  7418  002F18  37A3               	rlcf	___awdiv@quotient& (0+255),f,b
  7419  002F1A  37A4               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7420  002F1C                     
  7421                           ; BSR set to: 0
  7422  002F1C  519F               	movf	___awdiv@divisor& (0+255),w,b
  7423  002F1E  5D9D               	subwf	___awdiv@dividend& (0+255),w,b
  7424  002F20  51A0               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7425  002F22  599E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7426  002F24  A0D8               	btfss	status,0,c
  7427  002F26  EF97  F017         	goto	u2181
  7428  002F2A  EF99  F017         	goto	u2180
  7429  002F2E                     u2181:
  7430  002F2E  EF9E  F017         	goto	l3066
  7431  002F32                     u2180:
  7432  002F32                     
  7433                           ; BSR set to: 0
  7434  002F32  519F               	movf	___awdiv@divisor& (0+255),w,b
  7435  002F34  5F9D               	subwf	___awdiv@dividend& (0+255),f,b
  7436  002F36  51A0               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7437  002F38  5B9E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7438  002F3A                     
  7439                           ; BSR set to: 0
  7440  002F3A  81A3               	bsf	___awdiv@quotient& (0+255),0,b
  7441  002F3C                     l3066:
  7442                           
  7443                           ; BSR set to: 0
  7444  002F3C  90D8               	bcf	status,0,c
  7445  002F3E  33A0               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7446  002F40  339F               	rrcf	___awdiv@divisor& (0+255),f,b
  7447  002F42                     
  7448                           ; BSR set to: 0
  7449  002F42  2FA1               	decfsz	___awdiv@counter& (0+255),f,b
  7450  002F44  EF8B  F017         	goto	l3058
  7451  002F48                     l3070:
  7452                           
  7453                           ; BSR set to: 0
  7454  002F48  51A2               	movf	___awdiv@sign& (0+255),w,b
  7455  002F4A  B4D8               	btfsc	status,2,c
  7456  002F4C  EFAA  F017         	goto	u2191
  7457  002F50  EFAC  F017         	goto	u2190
  7458  002F54                     u2191:
  7459  002F54  EFB0  F017         	goto	l3074
  7460  002F58                     u2190:
  7461  002F58                     
  7462                           ; BSR set to: 0
  7463  002F58  6DA3               	negf	___awdiv@quotient& (0+255),b
  7464  002F5A  1FA4               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7465  002F5C  B0D8               	btfsc	status,0,c
  7466  002F5E  2BA4               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7467  002F60                     l3074:
  7468                           
  7469                           ; BSR set to: 0
  7470  002F60  C0A3  F09D         	movff	___awdiv@quotient,?___awdiv
  7471  002F64  C0A4  F09E         	movff	___awdiv@quotient+1,?___awdiv+1
  7472  002F68                     
  7473                           ; BSR set to: 0
  7474  002F68  0012               	return		;funcret
  7475  002F6A                     __end_of___awdiv:
  7476                           	opt callstack 0
  7477                           
  7478 ;; *************** function _LCDPrintChar *****************
  7479 ;; Defined at:
  7480 ;;		line 239 in file "lcd.c"
  7481 ;; Parameters:    Size  Location     Type
  7482 ;;  line            1    wreg     unsigned char 
  7483 ;;  pos             1   11[BANK0 ] unsigned char 
  7484 ;;  ch              1   12[BANK0 ] unsigned char 
  7485 ;; Auto vars:     Size  Location     Type
  7486 ;;  line            1   13[BANK0 ] unsigned char 
  7487 ;; Return value:  Size  Location     Type
  7488 ;;                  1    wreg      void 
  7489 ;; Registers used:
  7490 ;;		wreg, status,2, status,0, cstack
  7491 ;; Tracked objects:
  7492 ;;		On entry : 0/0
  7493 ;;		On exit  : 0/0
  7494 ;;		Unchanged: 0/0
  7495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7496 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7497 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7499 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7500 ;;Total ram usage:        3 bytes
  7501 ;; Hardware stack levels used:    1
  7502 ;; Hardware stack levels required when called:    9
  7503 ;; This function calls:
  7504 ;;		_LCDMoveCursor
  7505 ;;		_LCDPutChar
  7506 ;; This function is called by:
  7507 ;;		_set_time_process
  7508 ;;		_LTD_process
  7509 ;;		_check_humid_to_turn_fan
  7510 ;;		_print_temp_and_humid
  7511 ;; This function uses a non-reentrant model
  7512 ;;
  7513                           
  7514                           	psect	text41
  7515  003876                     __ptext41:
  7516                           	opt callstack 0
  7517  003876                     _LCDPrintChar:
  7518                           	opt callstack 20
  7519                           
  7520                           ; BSR set to: 0
  7521                           ;incstack = 0
  7522                           ;LCDPrintChar@line stored from wreg
  7523  003876  0100               	movlb	0	; () banked
  7524  003878  6FAA               	movwf	LCDPrintChar@line& (0+255),b
  7525  00387A                     
  7526                           ;lcd.c: 240:     if(line <0 || line > 2 || pos < 0 || pos > 15)
  7527  00387A  0E03               	movlw	3
  7528  00387C  0100               	movlb	0	; () banked
  7529  00387E  61AA               	cpfslt	LCDPrintChar@line& (0+255),b
  7530  003880  EF44  F01C         	goto	u1881
  7531  003884  EF46  F01C         	goto	u1880
  7532  003888                     u1881:
  7533  003888  EF59  F01C         	goto	l329
  7534  00388C                     u1880:
  7535  00388C                     
  7536                           ; BSR set to: 0
  7537  00388C  0E0F               	movlw	15
  7538  00388E  65A8               	cpfsgt	LCDPrintChar@pos& (0+255),b
  7539  003890  EF4C  F01C         	goto	u1891
  7540  003894  EF4E  F01C         	goto	u1890
  7541  003898                     u1891:
  7542  003898  EF50  F01C         	goto	l2898
  7543  00389C                     u1890:
  7544  00389C  EF59  F01C         	goto	l329
  7545  0038A0                     l2898:
  7546                           
  7547                           ; BSR set to: 0
  7548                           ;lcd.c: 242:     LCDMoveCursor(line, pos);
  7549  0038A0  C0A8  F0A3         	movff	LCDPrintChar@pos,LCDMoveCursor@pos
  7550  0038A4  51AA               	movf	LCDPrintChar@line& (0+255),w,b
  7551  0038A6  EC5A  F01C         	call	_LCDMoveCursor
  7552                           
  7553                           ;lcd.c: 243:     LCDPutChar(ch);
  7554  0038AA  0100               	movlb	0	; () banked
  7555  0038AC  51A9               	movf	LCDPrintChar@ch& (0+255),w,b
  7556  0038AE  ECB9  F01B         	call	_LCDPutChar
  7557  0038B2                     l329:
  7558  0038B2  0012               	return		;funcret
  7559  0038B4                     __end_of_LCDPrintChar:
  7560                           	opt callstack 0
  7561                           
  7562 ;; *************** function _LCDPrint *****************
  7563 ;; Defined at:
  7564 ;;		line 232 in file "lcd.c"
  7565 ;; Parameters:    Size  Location     Type
  7566 ;;  line            1    wreg     unsigned char 
  7567 ;;  pos             1   11[BANK0 ] unsigned char 
  7568 ;;  ptr             2   12[BANK0 ] PTR const unsigned char 
  7569 ;;		 -> STR_30(3), STR_29(3), STR_28(3), STR_27(3), 
  7570 ;;		 -> STR_26(3), STR_25(4), STR_24(5), STR_23(17), 
  7571 ;;		 -> STR_22(17), STR_21(5), STR_20(15), STR_19(3), 
  7572 ;;		 -> STR_18(3), STR_17(7), STR_16(15), STR_15(7), 
  7573 ;;		 -> STR_14(15), STR_13(17), STR_12(10), STR_11(15), 
  7574 ;;		 -> STR_10(17), STR_9(7), STR_8(15), STR_7(10), 
  7575 ;;		 -> STR_6(7), STR_5(15), STR_4(15), STR_3(10), 
  7576 ;;		 -> STR_2(9), STR_1(9), 
  7577 ;; Auto vars:     Size  Location     Type
  7578 ;;  line            1   14[BANK0 ] unsigned char 
  7579 ;; Return value:  Size  Location     Type
  7580 ;;                  1    wreg      void 
  7581 ;; Registers used:
  7582 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7583 ;; Tracked objects:
  7584 ;;		On entry : 0/0
  7585 ;;		On exit  : 0/0
  7586 ;;		Unchanged: 0/0
  7587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7588 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7589 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7591 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7592 ;;Total ram usage:        4 bytes
  7593 ;; Hardware stack levels used:    1
  7594 ;; Hardware stack levels required when called:    9
  7595 ;; This function calls:
  7596 ;;		_LCDMoveCursor
  7597 ;;		_LCDPutStr
  7598 ;; This function is called by:
  7599 ;;		_set_time_process
  7600 ;;		_LTD_process
  7601 ;;		_main
  7602 ;;		_check_humid_to_turn_fan
  7603 ;;		_print_temp_and_humid
  7604 ;; This function uses a non-reentrant model
  7605 ;;
  7606                           
  7607                           	psect	text42
  7608  003730                     __ptext42:
  7609                           	opt callstack 0
  7610  003730                     _LCDPrint:
  7611                           	opt callstack 20
  7612                           
  7613                           ;incstack = 0
  7614                           ;LCDPrint@line stored from wreg
  7615  003730  0100               	movlb	0	; () banked
  7616  003732  6FAB               	movwf	LCDPrint@line& (0+255),b
  7617  003734                     
  7618                           ;lcd.c: 233:     if(line <0 || line > 2 || pos < 0 || pos > 15)
  7619  003734  0E03               	movlw	3
  7620  003736  0100               	movlb	0	; () banked
  7621  003738  61AB               	cpfslt	LCDPrint@line& (0+255),b
  7622  00373A  EFA1  F01B         	goto	u1861
  7623  00373E  EFA3  F01B         	goto	u1860
  7624  003742                     u1861:
  7625  003742  EFB8  F01B         	goto	l323
  7626  003746                     u1860:
  7627  003746                     
  7628                           ; BSR set to: 0
  7629  003746  0E0F               	movlw	15
  7630  003748  65A8               	cpfsgt	LCDPrint@pos& (0+255),b
  7631  00374A  EFA9  F01B         	goto	u1871
  7632  00374E  EFAB  F01B         	goto	u1870
  7633  003752                     u1871:
  7634  003752  EFAD  F01B         	goto	l2890
  7635  003756                     u1870:
  7636  003756  EFB8  F01B         	goto	l323
  7637  00375A                     l2890:
  7638                           
  7639                           ; BSR set to: 0
  7640                           ;lcd.c: 235:     LCDMoveCursor(line, pos);
  7641  00375A  C0A8  F0A3         	movff	LCDPrint@pos,LCDMoveCursor@pos
  7642  00375E  51AB               	movf	LCDPrint@line& (0+255),w,b
  7643  003760  EC5A  F01C         	call	_LCDMoveCursor
  7644  003764                     
  7645                           ;lcd.c: 236:     LCDPutStr(ptr);
  7646  003764  C0A9  F0A3         	movff	LCDPrint@ptr,LCDPutStr@ptr
  7647  003768  C0AA  F0A4         	movff	LCDPrint@ptr+1,LCDPutStr@ptr+1
  7648  00376C  EC1B  F01C         	call	_LCDPutStr	;wreg free
  7649  003770                     l323:
  7650  003770  0012               	return		;funcret
  7651  003772                     __end_of_LCDPrint:
  7652                           	opt callstack 0
  7653                           
  7654 ;; *************** function _LCDPutStr *****************
  7655 ;; Defined at:
  7656 ;;		line 222 in file "lcd.c"
  7657 ;; Parameters:    Size  Location     Type
  7658 ;;  ptr             2    6[BANK0 ] PTR const unsigned char 
  7659 ;;		 -> STR_30(3), STR_29(3), STR_28(3), STR_27(3), 
  7660 ;;		 -> STR_26(3), STR_25(4), STR_24(5), STR_23(17), 
  7661 ;;		 -> STR_22(17), STR_21(5), STR_20(15), STR_19(3), 
  7662 ;;		 -> STR_18(3), STR_17(7), STR_16(15), STR_15(7), 
  7663 ;;		 -> STR_14(15), STR_13(17), STR_12(10), STR_11(15), 
  7664 ;;		 -> STR_10(17), STR_9(7), STR_8(15), STR_7(10), 
  7665 ;;		 -> STR_6(7), STR_5(15), STR_4(15), STR_3(10), 
  7666 ;;		 -> STR_2(9), STR_1(9), 
  7667 ;; Auto vars:     Size  Location     Type
  7668 ;;		None
  7669 ;; Return value:  Size  Location     Type
  7670 ;;                  1    wreg      void 
  7671 ;; Registers used:
  7672 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7673 ;; Tracked objects:
  7674 ;;		On entry : 0/0
  7675 ;;		On exit  : 0/0
  7676 ;;		Unchanged: 0/0
  7677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7678 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7681 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7682 ;;Total ram usage:        2 bytes
  7683 ;; Hardware stack levels used:    1
  7684 ;; Hardware stack levels required when called:    8
  7685 ;; This function calls:
  7686 ;;		_LCDPutChar
  7687 ;; This function is called by:
  7688 ;;		_LCDPrint
  7689 ;; This function uses a non-reentrant model
  7690 ;;
  7691                           
  7692                           	psect	text43
  7693  003836                     __ptext43:
  7694                           	opt callstack 0
  7695  003836                     _LCDPutStr:
  7696                           	opt callstack 20
  7697  003836                     
  7698                           ;lcd.c: 222: void LCDPutStr (const char *ptr);lcd.c: 223: {;lcd.c: 224:     while(*ptr) 
      +                          LCDPutChar(*(ptr++));
  7699  003836  EF2A  F01C         	goto	l2786
  7700  00383A                     l2782:
  7701  00383A  C0A3  FFF6         	movff	LCDPutStr@ptr,tblptrl
  7702  00383E  C0A4  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
  7703  003842                     	if	0	;tblptru may be non-zero
  7704  003842                     	endif
  7705  003842                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7706  003842  0E00               	movlw	low (__mediumconst shr (0+16))
  7707  003844  6EF8               	movwf	tblptru,c
  7708  003846                     	endif
  7709  003846  0008               	tblrd		*
  7710  003848  50F5               	movf	tablat,w,c
  7711  00384A  ECB9  F01B         	call	_LCDPutChar
  7712  00384E  0100               	movlb	0	; () banked
  7713  003850  4BA3               	infsnz	LCDPutStr@ptr& (0+255),f,b
  7714  003852  2BA4               	incf	(LCDPutStr@ptr+1)& (0+255),f,b
  7715  003854                     l2786:
  7716  003854  C0A3  FFF6         	movff	LCDPutStr@ptr,tblptrl
  7717  003858  C0A4  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
  7718  00385C                     	if	0	;tblptru may be non-zero
  7719  00385C                     	endif
  7720  00385C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7721  00385C  0E00               	movlw	low (__mediumconst shr (0+16))
  7722  00385E  6EF8               	movwf	tblptru,c
  7723  003860                     	endif
  7724  003860  0008               	tblrd		*
  7725  003862  50F5               	movf	tablat,w,c
  7726  003864  0900               	iorlw	0
  7727  003866  A4D8               	btfss	status,2,c
  7728  003868  EF38  F01C         	goto	u1691
  7729  00386C  EF3A  F01C         	goto	u1690
  7730  003870                     u1691:
  7731  003870  EF1D  F01C         	goto	l2782
  7732  003874                     u1690:
  7733  003874  0012               	return		;funcret
  7734  003876                     __end_of_LCDPutStr:
  7735                           	opt callstack 0
  7736                           
  7737 ;; *************** function _LCDPutChar *****************
  7738 ;; Defined at:
  7739 ;;		line 172 in file "lcd.c"
  7740 ;; Parameters:    Size  Location     Type
  7741 ;;  ch              1    wreg     unsigned char 
  7742 ;; Auto vars:     Size  Location     Type
  7743 ;;  ch              1    5[BANK0 ] unsigned char 
  7744 ;; Return value:  Size  Location     Type
  7745 ;;                  1    wreg      void 
  7746 ;; Registers used:
  7747 ;;		wreg, status,2, status,0, cstack
  7748 ;; Tracked objects:
  7749 ;;		On entry : 0/0
  7750 ;;		On exit  : 0/0
  7751 ;;		Unchanged: 0/0
  7752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7754 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7756 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7757 ;;Total ram usage:        1 bytes
  7758 ;; Hardware stack levels used:    1
  7759 ;; Hardware stack levels required when called:    7
  7760 ;; This function calls:
  7761 ;;		_WritePort_BBSPI
  7762 ;; This function is called by:
  7763 ;;		_LCDPutStr
  7764 ;;		_LCDPrintChar
  7765 ;; This function uses a non-reentrant model
  7766 ;;
  7767                           
  7768                           	psect	text44
  7769  003772                     __ptext44:
  7770                           	opt callstack 0
  7771  003772                     _LCDPutChar:
  7772                           	opt callstack 21
  7773                           
  7774                           ;incstack = 0
  7775                           ;LCDPutChar@ch stored from wreg
  7776  003772  0100               	movlb	0	; () banked
  7777  003774  6FA2               	movwf	LCDPutChar@ch& (0+255),b
  7778  003776                     
  7779                           ;lcd.c: 172: void LCDPutChar (unsigned char ch);lcd.c: 173: {;lcd.c: 174:     _delay((un
      +                          signed long)((10)*(8000000/4000000.0)));
  7780  003776  0E06               	movlw	6
  7781  003778                     u3287:
  7782  003778  2EE8               	decfsz	wreg,f,c
  7783  00377A  D7FE               	bra	u3287
  7784  00377C  D000               	nop2	
  7785  00377E                     
  7786                           ;lcd.c: 175:     WritePort_BBSPI (0x12, 0x80);
  7787  00377E  0E80               	movlw	128
  7788  003780  0100               	movlb	0	; () banked
  7789  003782  6FA0               	movwf	WritePort_BBSPI@a& (0+255),b
  7790  003784  0E12               	movlw	18
  7791  003786  EC36  F01D         	call	_WritePort_BBSPI
  7792  00378A                     
  7793                           ;lcd.c: 176:     _delay((unsigned long)((1)*(8000000/4000000.0)));
  7794  00378A  D000               	nop2		;2 cycle nop
  7795  00378C                     
  7796                           ;lcd.c: 177:     WritePort_BBSPI (0x13, ch);
  7797  00378C  C0A2  F0A0         	movff	LCDPutChar@ch,WritePort_BBSPI@a
  7798  003790  0E13               	movlw	19
  7799  003792  EC36  F01D         	call	_WritePort_BBSPI
  7800  003796                     
  7801                           ;lcd.c: 178:     _delay((unsigned long)((1)*(8000000/4000000.0)));
  7802  003796  D000               	nop2		;2 cycle nop
  7803  003798                     
  7804                           ;lcd.c: 179:     WritePort_BBSPI (0x12, 0xC0);
  7805  003798  0EC0               	movlw	192
  7806  00379A  0100               	movlb	0	; () banked
  7807  00379C  6FA0               	movwf	WritePort_BBSPI@a& (0+255),b
  7808  00379E  0E12               	movlw	18
  7809  0037A0  EC36  F01D         	call	_WritePort_BBSPI
  7810  0037A4                     
  7811                           ;lcd.c: 180:     _delay((unsigned long)((1)*(8000000/4000000.0)));
  7812  0037A4  D000               	nop2		;2 cycle nop
  7813  0037A6                     
  7814                           ;lcd.c: 181:     WritePort_BBSPI (0x12, 0x00);
  7815  0037A6  0E00               	movlw	0
  7816  0037A8  0100               	movlb	0	; () banked
  7817  0037AA  6FA0               	movwf	WritePort_BBSPI@a& (0+255),b
  7818  0037AC  0E12               	movlw	18
  7819  0037AE  EC36  F01D         	call	_WritePort_BBSPI
  7820  0037B2  0012               	return		;funcret
  7821  0037B4                     __end_of_LCDPutChar:
  7822                           	opt callstack 0
  7823                           
  7824 ;; *************** function _LCDMoveCursor *****************
  7825 ;; Defined at:
  7826 ;;		line 227 in file "lcd.c"
  7827 ;; Parameters:    Size  Location     Type
  7828 ;;  line            1    wreg     unsigned char 
  7829 ;;  pos             1    6[BANK0 ] unsigned char 
  7830 ;; Auto vars:     Size  Location     Type
  7831 ;;  line            1    7[BANK0 ] unsigned char 
  7832 ;;  position        1   10[BANK0 ] unsigned char 
  7833 ;; Return value:  Size  Location     Type
  7834 ;;                  1    wreg      void 
  7835 ;; Registers used:
  7836 ;;		wreg, status,2, status,0, cstack
  7837 ;; Tracked objects:
  7838 ;;		On entry : 0/0
  7839 ;;		On exit  : 0/0
  7840 ;;		Unchanged: 0/0
  7841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7842 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7843 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7845 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7846 ;;Total ram usage:        5 bytes
  7847 ;; Hardware stack levels used:    1
  7848 ;; Hardware stack levels required when called:    8
  7849 ;; This function calls:
  7850 ;;		_LCDPutInst
  7851 ;; This function is called by:
  7852 ;;		_LCDPrint
  7853 ;;		_LCDPrintChar
  7854 ;; This function uses a non-reentrant model
  7855 ;;
  7856                           
  7857                           	psect	text45
  7858  0038B4                     __ptext45:
  7859                           	opt callstack 0
  7860  0038B4                     _LCDMoveCursor:
  7861                           	opt callstack 20
  7862                           
  7863                           ;incstack = 0
  7864                           ;LCDMoveCursor@line stored from wreg
  7865  0038B4  0100               	movlb	0	; () banked
  7866  0038B6  6FA4               	movwf	LCDMoveCursor@line& (0+255),b
  7867  0038B8                     
  7868                           ;lcd.c: 228:     unsigned char position = (line == 0) ? (128 + pos) : (192 + pos);
  7869  0038B8  0100               	movlb	0	; () banked
  7870  0038BA  51A4               	movf	LCDMoveCursor@line& (0+255),w,b
  7871  0038BC  B4D8               	btfsc	status,2,c
  7872  0038BE  EF63  F01C         	goto	u1701
  7873  0038C2  EF65  F01C         	goto	u1700
  7874  0038C6                     u1701:
  7875  0038C6  EF6D  F01C         	goto	l2792
  7876  0038CA                     u1700:
  7877  0038CA                     
  7878                           ; BSR set to: 0
  7879  0038CA  0EC0               	movlw	192
  7880  0038CC  25A3               	addwf	LCDMoveCursor@pos& (0+255),w,b
  7881  0038CE  6FA5               	movwf	_LCDMoveCursor$748& (0+255),b
  7882  0038D0  6BA6               	clrf	(_LCDMoveCursor$748+1)& (0+255),b
  7883  0038D2  0E00               	movlw	0
  7884  0038D4  23A6               	addwfc	(_LCDMoveCursor$748+1)& (0+255),f,b
  7885  0038D6  EF73  F01C         	goto	l2794
  7886  0038DA                     l2792:
  7887                           
  7888                           ; BSR set to: 0
  7889  0038DA  0E80               	movlw	128
  7890  0038DC  25A3               	addwf	LCDMoveCursor@pos& (0+255),w,b
  7891  0038DE  6FA5               	movwf	_LCDMoveCursor$748& (0+255),b
  7892  0038E0  6BA6               	clrf	(_LCDMoveCursor$748+1)& (0+255),b
  7893  0038E2  0E00               	movlw	0
  7894  0038E4  23A6               	addwfc	(_LCDMoveCursor$748+1)& (0+255),f,b
  7895  0038E6                     l2794:
  7896                           
  7897                           ; BSR set to: 0
  7898  0038E6  C0A5  F0A7         	movff	_LCDMoveCursor$748,LCDMoveCursor@position
  7899  0038EA                     
  7900                           ; BSR set to: 0
  7901                           ;lcd.c: 229:     LCDPutInst(position);
  7902  0038EA  51A7               	movf	LCDMoveCursor@position& (0+255),w,b
  7903  0038EC  ECDA  F01B         	call	_LCDPutInst
  7904  0038F0  0012               	return		;funcret
  7905  0038F2                     __end_of_LCDMoveCursor:
  7906                           	opt callstack 0
  7907                           
  7908 ;; *************** function _LCDPutInst *****************
  7909 ;; Defined at:
  7910 ;;		line 203 in file "lcd.c"
  7911 ;; Parameters:    Size  Location     Type
  7912 ;;  ch              1    wreg     unsigned char 
  7913 ;; Auto vars:     Size  Location     Type
  7914 ;;  ch              1    5[BANK0 ] unsigned char 
  7915 ;; Return value:  Size  Location     Type
  7916 ;;                  1    wreg      void 
  7917 ;; Registers used:
  7918 ;;		wreg, status,2, status,0, cstack
  7919 ;; Tracked objects:
  7920 ;;		On entry : 0/0
  7921 ;;		On exit  : 0/0
  7922 ;;		Unchanged: 0/0
  7923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7925 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7927 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7928 ;;Total ram usage:        1 bytes
  7929 ;; Hardware stack levels used:    1
  7930 ;; Hardware stack levels required when called:    7
  7931 ;; This function calls:
  7932 ;;		_WritePort_BBSPI
  7933 ;; This function is called by:
  7934 ;;		_set_time_process
  7935 ;;		_LTD_process
  7936 ;;		_main
  7937 ;;		_LCDInit
  7938 ;;		_LCDMoveCursor
  7939 ;; This function uses a non-reentrant model
  7940 ;;
  7941                           
  7942                           	psect	text46
  7943  0037B4                     __ptext46:
  7944                           	opt callstack 0
  7945  0037B4                     _LCDPutInst:
  7946                           	opt callstack 21
  7947                           
  7948                           ;incstack = 0
  7949                           ;LCDPutInst@ch stored from wreg
  7950  0037B4  0100               	movlb	0	; () banked
  7951  0037B6  6FA2               	movwf	LCDPutInst@ch& (0+255),b
  7952  0037B8                     
  7953                           ;lcd.c: 203: void LCDPutInst (unsigned char ch);lcd.c: 204: {;lcd.c: 205:     _delay((un
      +                          signed long)((10)*(8000000/4000000.0)));
  7954  0037B8  0E06               	movlw	6
  7955  0037BA                     u3297:
  7956  0037BA  2EE8               	decfsz	wreg,f,c
  7957  0037BC  D7FE               	bra	u3297
  7958  0037BE  D000               	nop2	
  7959  0037C0                     
  7960                           ;lcd.c: 206:     WritePort_BBSPI (0x12, 0x00);
  7961  0037C0  0E00               	movlw	0
  7962  0037C2  0100               	movlb	0	; () banked
  7963  0037C4  6FA0               	movwf	WritePort_BBSPI@a& (0+255),b
  7964  0037C6  0E12               	movlw	18
  7965  0037C8  EC36  F01D         	call	_WritePort_BBSPI
  7966  0037CC                     
  7967                           ;lcd.c: 207:     _delay((unsigned long)((1)*(8000000/4000000.0)));
  7968  0037CC  D000               	nop2		;2 cycle nop
  7969  0037CE                     
  7970                           ;lcd.c: 208:     WritePort_BBSPI (0x13, ch);
  7971  0037CE  C0A2  F0A0         	movff	LCDPutInst@ch,WritePort_BBSPI@a
  7972  0037D2  0E13               	movlw	19
  7973  0037D4  EC36  F01D         	call	_WritePort_BBSPI
  7974  0037D8                     
  7975                           ;lcd.c: 209:     _delay((unsigned long)((1)*(8000000/4000000.0)));
  7976  0037D8  D000               	nop2		;2 cycle nop
  7977  0037DA                     
  7978                           ;lcd.c: 210:     WritePort_BBSPI (0x12,0x40);
  7979  0037DA  0E40               	movlw	64
  7980  0037DC  0100               	movlb	0	; () banked
  7981  0037DE  6FA0               	movwf	WritePort_BBSPI@a& (0+255),b
  7982  0037E0  0E12               	movlw	18
  7983  0037E2  EC36  F01D         	call	_WritePort_BBSPI
  7984  0037E6                     
  7985                           ;lcd.c: 211:     _delay((unsigned long)((1)*(8000000/4000000.0)));
  7986  0037E6  D000               	nop2		;2 cycle nop
  7987  0037E8                     
  7988                           ;lcd.c: 212:     WritePort_BBSPI (0x12, 0x00);
  7989  0037E8  0E00               	movlw	0
  7990  0037EA  0100               	movlb	0	; () banked
  7991  0037EC  6FA0               	movwf	WritePort_BBSPI@a& (0+255),b
  7992  0037EE  0E12               	movlw	18
  7993  0037F0  EC36  F01D         	call	_WritePort_BBSPI
  7994  0037F4  0012               	return		;funcret
  7995  0037F6                     __end_of_LCDPutInst:
  7996                           	opt callstack 0
  7997                           
  7998 ;; *************** function _WritePort_BBSPI *****************
  7999 ;; Defined at:
  8000 ;;		line 144 in file "lcd.c"
  8001 ;; Parameters:    Size  Location     Type
  8002 ;;  port_add        1    wreg     unsigned char 
  8003 ;;  a               1    3[BANK0 ] unsigned char 
  8004 ;; Auto vars:     Size  Location     Type
  8005 ;;  port_add        1    4[BANK0 ] unsigned char 
  8006 ;; Return value:  Size  Location     Type
  8007 ;;                  1    wreg      void 
  8008 ;; Registers used:
  8009 ;;		wreg, status,2, status,0, cstack
  8010 ;; Tracked objects:
  8011 ;;		On entry : 0/0
  8012 ;;		On exit  : 0/0
  8013 ;;		Unchanged: 0/0
  8014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8015 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8016 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8018 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8019 ;;Total ram usage:        2 bytes
  8020 ;; Hardware stack levels used:    1
  8021 ;; Hardware stack levels required when called:    6
  8022 ;; This function calls:
  8023 ;;		_SendByteBBSPI
  8024 ;; This function is called by:
  8025 ;;		_LCDInit
  8026 ;;		_LCDPutChar
  8027 ;;		_LCDPutInst
  8028 ;; This function uses a non-reentrant model
  8029 ;;
  8030                           
  8031                           	psect	text47
  8032  003A6C                     __ptext47:
  8033                           	opt callstack 0
  8034  003A6C                     _WritePort_BBSPI:
  8035                           	opt callstack 22
  8036                           
  8037                           ;incstack = 0
  8038                           ;WritePort_BBSPI@port_add stored from wreg
  8039  003A6C  0100               	movlb	0	; () banked
  8040  003A6E  6FA1               	movwf	WritePort_BBSPI@port_add& (0+255),b
  8041  003A70                     
  8042                           ;lcd.c: 144: void WritePort_BBSPI (unsigned char port_add, unsigned char a);lcd.c: 145: 
      +                          {;lcd.c: 146:     LATAbits.LATA2 = 0;
  8043  003A70  9489               	bcf	137,2,c	;volatile
  8044  003A72                     
  8045                           ;lcd.c: 147:     SendByteBBSPI(0x40);
  8046  003A72  0E40               	movlw	64
  8047  003A74  EC55  F01A         	call	_SendByteBBSPI
  8048                           
  8049                           ;lcd.c: 148:     SendByteBBSPI(port_add);
  8050  003A78  0100               	movlb	0	; () banked
  8051  003A7A  51A1               	movf	WritePort_BBSPI@port_add& (0+255),w,b
  8052  003A7C  EC55  F01A         	call	_SendByteBBSPI
  8053                           
  8054                           ;lcd.c: 149:     SendByteBBSPI(a);
  8055  003A80  0100               	movlb	0	; () banked
  8056  003A82  51A0               	movf	WritePort_BBSPI@a& (0+255),w,b
  8057  003A84  EC55  F01A         	call	_SendByteBBSPI
  8058  003A88                     
  8059                           ;lcd.c: 150:     LATAbits.LATA2 = 1;
  8060  003A88  8489               	bsf	137,2,c	;volatile
  8061  003A8A  0012               	return		;funcret
  8062  003A8C                     __end_of_WritePort_BBSPI:
  8063                           	opt callstack 0
  8064                           
  8065 ;; *************** function _SendByteBBSPI *****************
  8066 ;; Defined at:
  8067 ;;		line 91 in file "lcd.c"
  8068 ;; Parameters:    Size  Location     Type
  8069 ;;  output          1    wreg     unsigned char 
  8070 ;; Auto vars:     Size  Location     Type
  8071 ;;  output          1    0[BANK0 ] unsigned char 
  8072 ;;  input           1    2[BANK0 ] unsigned char 
  8073 ;;  bitcount        1    1[BANK0 ] unsigned char 
  8074 ;; Return value:  Size  Location     Type
  8075 ;;                  1    wreg      void 
  8076 ;; Registers used:
  8077 ;;		wreg, status,2, status,0
  8078 ;; Tracked objects:
  8079 ;;		On entry : 0/0
  8080 ;;		On exit  : 0/0
  8081 ;;		Unchanged: 0/0
  8082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8084 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8086 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8087 ;;Total ram usage:        3 bytes
  8088 ;; Hardware stack levels used:    1
  8089 ;; Hardware stack levels required when called:    5
  8090 ;; This function calls:
  8091 ;;		Nothing
  8092 ;; This function is called by:
  8093 ;;		_Port_BBSPIInit
  8094 ;;		_WritePort_BBSPI
  8095 ;; This function uses a non-reentrant model
  8096 ;;
  8097                           
  8098                           	psect	text48
  8099  0034AA                     __ptext48:
  8100                           	opt callstack 0
  8101  0034AA                     _SendByteBBSPI:
  8102                           	opt callstack 22
  8103                           
  8104                           ;incstack = 0
  8105                           ;SendByteBBSPI@output stored from wreg
  8106  0034AA  0100               	movlb	0	; () banked
  8107  0034AC  6F9D               	movwf	SendByteBBSPI@output& (0+255),b
  8108  0034AE                     
  8109                           ;lcd.c: 91: void SendByteBBSPI (unsigned char output);lcd.c: 92: {;lcd.c: 93:     unsign
      +                          ed char bitcount;;lcd.c: 94:     unsigned char input = output;
  8110  0034AE  C09D  F09F         	movff	SendByteBBSPI@output,SendByteBBSPI@input
  8111  0034B2                     
  8112                           ;lcd.c: 96:     for(bitcount=0;bitcount<8;bitcount++)
  8113  0034B2  0E00               	movlw	0
  8114  0034B4  0100               	movlb	0	; () banked
  8115  0034B6  6F9E               	movwf	SendByteBBSPI@bitcount& (0+255),b
  8116  0034B8                     l286:
  8117                           
  8118                           ; BSR set to: 0
  8119                           ;lcd.c: 97:     {;lcd.c: 99:         if(output & 0x80)
  8120  0034B8  AF9D               	btfss	SendByteBBSPI@output& (0+255),7,b
  8121  0034BA  EF61  F01A         	goto	u1601
  8122  0034BE  EF63  F01A         	goto	u1600
  8123  0034C2                     u1601:
  8124  0034C2  EF66  F01A         	goto	l288
  8125  0034C6                     u1600:
  8126  0034C6                     
  8127                           ; BSR set to: 0
  8128                           ;lcd.c: 100:             LATCbits.LATC5 = 1;
  8129  0034C6  8A8B               	bsf	139,5,c	;volatile
  8130  0034C8  EF67  F01A         	goto	l289
  8131  0034CC                     l288:
  8132                           
  8133                           ; BSR set to: 0
  8134                           ;lcd.c: 102:             LATCbits.LATC5 = 0;
  8135  0034CC  9A8B               	bcf	139,5,c	;volatile
  8136  0034CE                     l289:
  8137                           
  8138                           ; BSR set to: 0
  8139                           ;lcd.c: 104:         if (LATCbits.LATC4)
  8140  0034CE  A88B               	btfss	139,4,c	;volatile
  8141  0034D0  EF6C  F01A         	goto	u1611
  8142  0034D4  EF6E  F01A         	goto	u1610
  8143  0034D8                     u1611:
  8144  0034D8  EF72  F01A         	goto	l2678
  8145  0034DC                     u1610:
  8146  0034DC                     
  8147                           ; BSR set to: 0
  8148                           ;lcd.c: 105:             input = (input << 1) | 0x1;
  8149  0034DC  80D8               	bsf	status,0,c
  8150  0034DE  379F               	rlcf	SendByteBBSPI@input& (0+255),f,b
  8151  0034E0  EF75  F01A         	goto	l2680
  8152  0034E4                     l2678:
  8153                           
  8154                           ; BSR set to: 0
  8155                           ;lcd.c: 107:             input = input << 1;
  8156  0034E4  519F               	movf	SendByteBBSPI@input& (0+255),w,b
  8157  0034E6  259F               	addwf	SendByteBBSPI@input& (0+255),w,b
  8158  0034E8  6F9F               	movwf	SendByteBBSPI@input& (0+255),b
  8159  0034EA                     l2680:
  8160                           
  8161                           ; BSR set to: 0
  8162                           ;lcd.c: 108:         LATCbits.LATC3 = 1;
  8163  0034EA  868B               	bsf	139,3,c	;volatile
  8164  0034EC                     
  8165                           ; BSR set to: 0
  8166                           ;lcd.c: 109:         __nop();__nop();__nop();__nop();__nop();__nop();
  8167  0034EC  F000               	nop	
  8168  0034EE  F000               	nop	
  8169  0034F0  F000               	nop	
  8170  0034F2  F000               	nop	
  8171  0034F4  F000               	nop	
  8172  0034F6  F000               	nop	
  8173  0034F8                     
  8174                           ;lcd.c: 111:         LATCbits.LATC3 = 0;
  8175  0034F8  968B               	bcf	139,3,c	;volatile
  8176                           
  8177                           ;lcd.c: 112:         output <<= 1;
  8178  0034FA  0100               	movlb	0	; () banked
  8179  0034FC  90D8               	bcf	status,0,c
  8180  0034FE  379D               	rlcf	SendByteBBSPI@output& (0+255),f,b
  8181  003500                     
  8182                           ; BSR set to: 0
  8183                           ;lcd.c: 113:     }
  8184  003500  2B9E               	incf	SendByteBBSPI@bitcount& (0+255),f,b
  8185  003502                     
  8186                           ; BSR set to: 0
  8187  003502  0E07               	movlw	7
  8188  003504  659E               	cpfsgt	SendByteBBSPI@bitcount& (0+255),b
  8189  003506  EF87  F01A         	goto	u1621
  8190  00350A  EF89  F01A         	goto	u1620
  8191  00350E                     u1621:
  8192  00350E  EF5C  F01A         	goto	l286
  8193  003512                     u1620:
  8194  003512                     
  8195                           ; BSR set to: 0
  8196  003512  0012               	return		;funcret
  8197  003514                     __end_of_SendByteBBSPI:
  8198                           	opt callstack 0
  8199                           
  8200 ;; *************** function _timer_interrupt *****************
  8201 ;; Defined at:
  8202 ;;		line 198 in file "clock.c"
  8203 ;; Parameters:    Size  Location     Type
  8204 ;;		None
  8205 ;; Auto vars:     Size  Location     Type
  8206 ;;  cur             2   47[COMRAM] int 
  8207 ;;  prev            2   43[COMRAM] int 
  8208 ;;  sum             2   45[COMRAM] int 
  8209 ;;  pos             2   49[COMRAM] int 
  8210 ;; Return value:  Size  Location     Type
  8211 ;;                  1    wreg      void 
  8212 ;; Registers used:
  8213 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8214 ;; Tracked objects:
  8215 ;;		On entry : 0/0
  8216 ;;		On exit  : 0/0
  8217 ;;		Unchanged: 0/0
  8218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8220 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8221 ;;      Temps:         22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8222 ;;      Totals:        37       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8223 ;;Total ram usage:       37 bytes
  8224 ;; Hardware stack levels used:    1
  8225 ;; Hardware stack levels required when called:    4
  8226 ;; This function calls:
  8227 ;;		_enqueue
  8228 ;;		i2___wmul
  8229 ;;		i2_remove_timer
  8230 ;; This function is called by:
  8231 ;;		Interrupt level 2
  8232 ;; This function uses a non-reentrant model
  8233 ;;
  8234                           
  8235                           	psect	intcode
  8236  000008                     __pintcode:
  8237                           	opt callstack 0
  8238  000008                     _timer_interrupt:
  8239                           	opt callstack 19
  8240                           
  8241                           ; BSR set to: 0
  8242                           ;incstack = 0
  8243  000008  823C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8244  00000A  ED4D  F008         	call	int_func,f	;refresh shadow registers
  8245                           
  8246                           	psect	intcode_body
  8247  00109A                     __pintcode_body:
  8248                           	opt callstack 19
  8249  00109A                     int_func:
  8250                           	opt callstack 19
  8251  00109A  0006               	pop		; remove dummy address from shadow register refresh
  8252  00109C  CFE1 F01F          	movff	fsr1l,??_timer_interrupt+16
  8253  0010A0  CFE2 F020          	movff	fsr1h,??_timer_interrupt+17
  8254  0010A4  CFD9 F021          	movff	fsr2l,??_timer_interrupt+18
  8255  0010A8  CFDA F022          	movff	fsr2h,??_timer_interrupt+19
  8256  0010AC  CFF3 F023          	movff	prodl,??_timer_interrupt+20
  8257  0010B0  CFF4 F024          	movff	prodh,??_timer_interrupt+21
  8258  0010B4                     
  8259                           ;clock.c: 199:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF) {
  8260  0010B4  AAF2               	btfss	242,5,c	;volatile
  8261  0010B6  EF5F  F008         	goto	i2u305_41
  8262  0010BA  EF61  F008         	goto	i2u305_40
  8263  0010BE                     i2u305_41:
  8264  0010BE  EF82  F008         	goto	i2l3788
  8265  0010C2                     i2u305_40:
  8266  0010C2  A4F2               	btfss	242,2,c	;volatile
  8267  0010C4  EF66  F008         	goto	i2u306_41
  8268  0010C8  EF68  F008         	goto	i2u306_40
  8269  0010CC                     i2u306_41:
  8270  0010CC  EF82  F008         	goto	i2l3788
  8271  0010D0                     i2u306_40:
  8272  0010D0                     
  8273                           ;clock.c: 200:         INTCONbits.TMR0IF = 0;
  8274  0010D0  94F2               	bcf	242,2,c	;volatile
  8275  0010D2                     
  8276                           ;clock.c: 201:         TMR0L = 0x82;
  8277  0010D2  0E82               	movlw	130
  8278  0010D4  6ED6               	movwf	214,c	;volatile
  8279  0010D6                     
  8280                           ;clock.c: 202:         time_ms+= 10;
  8281  0010D6  0E0A               	movlw	10
  8282  0010D8  0100               	movlb	0	; () banked
  8283  0010DA  2784               	addwf	_time_ms& (0+255),f,b
  8284  0010DC  0E00               	movlw	0
  8285  0010DE  2385               	addwfc	(_time_ms+1)& (0+255),f,b
  8286  0010E0  2386               	addwfc	(_time_ms+2)& (0+255),f,b
  8287  0010E2  2387               	addwfc	(_time_ms+3)& (0+255),f,b
  8288  0010E4                     
  8289                           ; BSR set to: 0
  8290                           ;clock.c: 203:         count++;
  8291  0010E4  4A38               	infsnz	_count^0,f,c
  8292  0010E6  2A39               	incf	(_count+1)^0,f,c
  8293  0010E8                     
  8294                           ; BSR set to: 0
  8295                           ;clock.c: 204:         if(count == 100) {
  8296  0010E8  0E64               	movlw	100
  8297  0010EA  1838               	xorwf	_count^0,w,c
  8298  0010EC  1039               	iorwf	(_count+1)^0,w,c
  8299  0010EE  A4D8               	btfss	status,2,c
  8300  0010F0  EF7C  F008         	goto	i2u307_41
  8301  0010F4  EF7E  F008         	goto	i2u307_40
  8302  0010F8                     i2u307_41:
  8303  0010F8  EF82  F008         	goto	i2l3788
  8304  0010FC                     i2u307_40:
  8305  0010FC                     
  8306                           ; BSR set to: 0
  8307                           ;clock.c: 205:             count = 0;
  8308  0010FC  0E00               	movlw	0
  8309  0010FE  6E39               	movwf	(_count+1)^0,c
  8310  001100  0E00               	movlw	0
  8311  001102  6E38               	movwf	_count^0,c
  8312  001104                     i2l3788:
  8313                           
  8314                           ;clock.c: 209:     if(PIE1bits.TMR1IE && PIR1bits.TMR1IF) {
  8315  001104  A09D               	btfss	157,0,c	;volatile
  8316  001106  EF87  F008         	goto	i2u308_41
  8317  00110A  EF89  F008         	goto	i2u308_40
  8318  00110E                     i2u308_41:
  8319  00110E  EFED  F00A         	goto	i2l614
  8320  001112                     i2u308_40:
  8321  001112  A09E               	btfss	158,0,c	;volatile
  8322  001114  EF8E  F008         	goto	i2u309_41
  8323  001118  EF90  F008         	goto	i2u309_40
  8324  00111C                     i2u309_41:
  8325  00111C  EFED  F00A         	goto	i2l614
  8326  001120                     i2u309_40:
  8327  001120                     
  8328                           ;clock.c: 210:         PIR1bits.TMR1IF = 0;
  8329  001120  909E               	bcf	158,0,c	;volatile
  8330  001122                     
  8331                           ;clock.c: 211:         TMR1H = 0xB1;
  8332  001122  0EB1               	movlw	177
  8333  001124  6ECF               	movwf	207,c	;volatile
  8334                           
  8335                           ;clock.c: 212:         TMR1L = 0xE0;
  8336  001126  0EE0               	movlw	224
  8337  001128  6ECE               	movwf	206,c	;volatile
  8338  00112A                     
  8339                           ;clock.c: 213:         if(head == 105)
  8340  00112A  0E69               	movlw	105
  8341  00112C  0100               	movlb	0	; () banked
  8342  00112E  1990               	xorwf	_head& (0+255),w,b
  8343  001130  A4D8               	btfss	status,2,c
  8344  001132  EF9D  F008         	goto	i2u310_41
  8345  001136  EF9F  F008         	goto	i2u310_40
  8346  00113A                     i2u310_41:
  8347  00113A  EFCB  F00A         	goto	i2l3834
  8348  00113E                     i2u310_40:
  8349  00113E  EFED  F00A         	goto	i2l614
  8350  001142                     i2l616:
  8351                           
  8352                           ; BSR set to: 0
  8353                           ;clock.c: 216:             int pos = head;
  8354  001142  C090  F032         	movff	_head,timer_interrupt@pos
  8355  001146  6A33               	clrf	(timer_interrupt@pos+1)^0,c
  8356  001148                     
  8357                           ; BSR set to: 0
  8358                           ;clock.c: 217:             enqueue(task_list[pos].func_ptr, task_list[pos].data_p);
  8359  001148  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  8360  00114C  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  8361  001150  0E00               	movlw	0
  8362  001152  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8363  001154  0E0F               	movlw	15
  8364  001156  6E03               	movwf	i2___wmul@multiplicand^0,c
  8365  001158  EC00  F01D         	call	i2___wmul	;wreg free
  8366  00115C  0E6C               	movlw	low (_task_list+8)
  8367  00115E  2401               	addwf	?i2___wmul^0,w,c
  8368  001160  6ED9               	movwf	fsr2l,c
  8369  001162  0E01               	movlw	high (_task_list+8)
  8370  001164  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8371  001166  6EDA               	movwf	fsr2h,c
  8372  001168  CFDE F025          	movff	postinc2,_timer_interrupt$2207
  8373  00116C  CFDE F026          	movff	postinc2,_timer_interrupt$2207+1
  8374  001170  CFDD F027          	movff	postdec2,_timer_interrupt$2207+2
  8375                           
  8376                           ;clock.c: 217:             enqueue(task_list[pos].func_ptr, task_list[pos].data_p);
  8377  001174  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  8378  001178  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  8379  00117C  0E00               	movlw	0
  8380  00117E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8381  001180  0E0F               	movlw	15
  8382  001182  6E03               	movwf	i2___wmul@multiplicand^0,c
  8383  001184  EC00  F01D         	call	i2___wmul	;wreg free
  8384  001188  0E71               	movlw	low (_task_list+13)
  8385  00118A  2401               	addwf	?i2___wmul^0,w,c
  8386  00118C  6ED9               	movwf	fsr2l,c
  8387  00118E  0E01               	movlw	high (_task_list+13)
  8388  001190  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8389  001192  6EDA               	movwf	fsr2h,c
  8390  001194  CFDE F028          	movff	postinc2,_timer_interrupt$2212
  8391  001198  CFDD F029          	movff	postdec2,_timer_interrupt$2212+1
  8392                           
  8393                           ;clock.c: 217:             enqueue(task_list[pos].func_ptr, task_list[pos].data_p);
  8394  00119C  C025  F00A         	movff	_timer_interrupt$2207,enqueue@ptr
  8395  0011A0  C026  F00B         	movff	_timer_interrupt$2207+1,enqueue@ptr+1
  8396  0011A4  C027  F00C         	movff	_timer_interrupt$2207+2,enqueue@ptr+2
  8397  0011A8  C028  F00D         	movff	_timer_interrupt$2212,enqueue@data_ptr
  8398  0011AC  C029  F00E         	movff	_timer_interrupt$2212+1,enqueue@data_ptr+1
  8399  0011B0  EC21  F019         	call	_enqueue	;wreg free
  8400                           
  8401                           ;clock.c: 218:             head = task_list[pos].next;
  8402  0011B4  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  8403  0011B8  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  8404  0011BC  0E00               	movlw	0
  8405  0011BE  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8406  0011C0  0E0F               	movlw	15
  8407  0011C2  6E03               	movwf	i2___wmul@multiplicand^0,c
  8408  0011C4  EC00  F01D         	call	i2___wmul	;wreg free
  8409  0011C8  0E6F               	movlw	low (_task_list+11)
  8410  0011CA  2401               	addwf	?i2___wmul^0,w,c
  8411  0011CC  6ED9               	movwf	fsr2l,c
  8412  0011CE  0E01               	movlw	high (_task_list+11)
  8413  0011D0  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8414  0011D2  6EDA               	movwf	fsr2h,c
  8415  0011D4  50DF               	movf	indf2,w,c
  8416  0011D6  0100               	movlb	0	; () banked
  8417  0011D8  6F90               	movwf	_head& (0+255),b
  8418                           
  8419                           ;clock.c: 219:             if(task_list[pos].period_t == 0) {
  8420  0011DA  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  8421  0011DE  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  8422  0011E2  0E00               	movlw	0
  8423  0011E4  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8424  0011E6  0E0F               	movlw	15
  8425  0011E8  6E03               	movwf	i2___wmul@multiplicand^0,c
  8426  0011EA  EC00  F01D         	call	i2___wmul	;wreg free
  8427  0011EE  0E68               	movlw	low (_task_list+4)
  8428  0011F0  2401               	addwf	?i2___wmul^0,w,c
  8429  0011F2  6ED9               	movwf	fsr2l,c
  8430  0011F4  0E01               	movlw	high (_task_list+4)
  8431  0011F6  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8432  0011F8  6EDA               	movwf	fsr2h,c
  8433  0011FA  50DE               	movf	postinc2,w,c
  8434  0011FC  10DE               	iorwf	postinc2,w,c
  8435  0011FE  10DE               	iorwf	postinc2,w,c
  8436  001200  10DE               	iorwf	postinc2,w,c
  8437  001202  A4D8               	btfss	status,2,c
  8438  001204  EF06  F009         	goto	i2u311_41
  8439  001208  EF08  F009         	goto	i2u311_40
  8440  00120C                     i2u311_41:
  8441  00120C  EF0D  F009         	goto	i2l3804
  8442  001210                     i2u311_40:
  8443  001210                     
  8444                           ;clock.c: 220:                 remove_timer(pos);
  8445  001210  5032               	movf	timer_interrupt@pos^0,w,c
  8446  001212  EC65  F014         	call	i2_remove_timer
  8447                           
  8448                           ;clock.c: 221:             }
  8449  001216  EFCB  F00A         	goto	i2l3834
  8450  00121A                     i2l3804:
  8451                           
  8452                           ;clock.c: 223:                 task_list[pos].delay_t = task_list[pos].period_t;
  8453  00121A  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  8454  00121E  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  8455  001222  0E00               	movlw	0
  8456  001224  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8457  001226  0E0F               	movlw	15
  8458  001228  6E03               	movwf	i2___wmul@multiplicand^0,c
  8459  00122A  EC00  F01D         	call	i2___wmul	;wreg free
  8460  00122E  0E68               	movlw	low (_task_list+4)
  8461  001230  2401               	addwf	?i2___wmul^0,w,c
  8462  001232  6ED9               	movwf	fsr2l,c
  8463  001234  0E01               	movlw	high (_task_list+4)
  8464  001236  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8465  001238  6EDA               	movwf	fsr2h,c
  8466  00123A  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  8467  00123E  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  8468  001242  0E00               	movlw	0
  8469  001244  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8470  001246  0E0F               	movlw	15
  8471  001248  6E03               	movwf	i2___wmul@multiplicand^0,c
  8472  00124A  EC00  F01D         	call	i2___wmul	;wreg free
  8473  00124E  0E64               	movlw	low _task_list
  8474  001250  2401               	addwf	?i2___wmul^0,w,c
  8475  001252  6EE1               	movwf	fsr1l,c
  8476  001254  0E01               	movlw	high _task_list
  8477  001256  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8478  001258  6EE2               	movwf	fsr1h,c
  8479  00125A  CFDE FFE6          	movff	postinc2,postinc1
  8480  00125E  CFDE FFE6          	movff	postinc2,postinc1
  8481  001262  CFDE FFE6          	movff	postinc2,postinc1
  8482  001266  CFDE FFE6          	movff	postinc2,postinc1
  8483  00126A                     
  8484                           ;clock.c: 224:                 int sum = task_list[head].delay_t;
  8485  00126A  0100               	movlb	0	; () banked
  8486  00126C  5190               	movf	_head& (0+255),w,b
  8487  00126E  0D0F               	mullw	15
  8488  001270  0E64               	movlw	low _task_list
  8489  001272  24F3               	addwf	243,w,c
  8490  001274  6ED9               	movwf	fsr2l,c
  8491  001276  0E01               	movlw	high _task_list
  8492  001278  20F4               	addwfc	prodh,w,c
  8493  00127A  6EDA               	movwf	fsr2h,c
  8494  00127C  CFDE F02E          	movff	postinc2,timer_interrupt@sum
  8495  001280  CFDD F02F          	movff	postdec2,timer_interrupt@sum+1
  8496  001284                     
  8497                           ; BSR set to: 0
  8498                           ;clock.c: 225:                 if(head == 105 || (head != 105 && sum > task_list[pos].de
      +                          lay_t)) {
  8499  001284  0E69               	movlw	105
  8500  001286  1990               	xorwf	_head& (0+255),w,b
  8501  001288  B4D8               	btfsc	status,2,c
  8502  00128A  EF49  F009         	goto	i2u312_41
  8503  00128E  EF4B  F009         	goto	i2u312_40
  8504  001292                     i2u312_41:
  8505  001292  EF7C  F009         	goto	i2l3814
  8506  001296                     i2u312_40:
  8507  001296                     
  8508                           ; BSR set to: 0
  8509  001296  0E69               	movlw	105
  8510  001298  1990               	xorwf	_head& (0+255),w,b
  8511  00129A  B4D8               	btfsc	status,2,c
  8512  00129C  EF52  F009         	goto	i2u313_41
  8513  0012A0  EF54  F009         	goto	i2u313_40
  8514  0012A4                     i2u313_41:
  8515  0012A4  EF98  F009         	goto	i2l3818
  8516  0012A8                     i2u313_40:
  8517  0012A8                     
  8518                           ; BSR set to: 0
  8519  0012A8  C02E  F00F         	movff	timer_interrupt@sum,??_timer_interrupt
  8520  0012AC  C02F  F010         	movff	timer_interrupt@sum+1,??_timer_interrupt+1
  8521  0012B0  0E00               	movlw	0
  8522  0012B2  BE10               	btfsc	(??_timer_interrupt+1)^0,7,c
  8523  0012B4  0EFF               	movlw	255
  8524  0012B6  6E11               	movwf	(??_timer_interrupt+2)^0,c
  8525  0012B8  6E12               	movwf	(??_timer_interrupt+3)^0,c
  8526  0012BA  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  8527  0012BE  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  8528  0012C2  0E00               	movlw	0
  8529  0012C4  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8530  0012C6  0E0F               	movlw	15
  8531  0012C8  6E03               	movwf	i2___wmul@multiplicand^0,c
  8532  0012CA  EC00  F01D         	call	i2___wmul	;wreg free
  8533  0012CE  0E64               	movlw	low _task_list
  8534  0012D0  2401               	addwf	?i2___wmul^0,w,c
  8535  0012D2  6ED9               	movwf	fsr2l,c
  8536  0012D4  0E01               	movlw	high _task_list
  8537  0012D6  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8538  0012D8  6EDA               	movwf	fsr2h,c
  8539  0012DA  500F               	movf	??_timer_interrupt^0,w,c
  8540  0012DC  5CDE               	subwf	postinc2,w,c
  8541  0012DE  5010               	movf	(??_timer_interrupt+1)^0,w,c
  8542  0012E0  58DE               	subwfb	postinc2,w,c
  8543  0012E2  5011               	movf	(??_timer_interrupt+2)^0,w,c
  8544  0012E4  58DE               	subwfb	postinc2,w,c
  8545  0012E6  5012               	movf	(??_timer_interrupt+3)^0,w,c
  8546  0012E8  58DE               	subwfb	postinc2,w,c
  8547  0012EA  B0D8               	btfsc	status,0,c
  8548  0012EC  EF7A  F009         	goto	i2u314_41
  8549  0012F0  EF7C  F009         	goto	i2u314_40
  8550  0012F4                     i2u314_41:
  8551  0012F4  EF98  F009         	goto	i2l3818
  8552  0012F8                     i2u314_40:
  8553  0012F8                     i2l3814:
  8554                           
  8555                           ;clock.c: 226:                     task_list[pos].next = head;
  8556  0012F8  0100               	movlb	0	; () banked
  8557  0012FA  5190               	movf	_head& (0+255),w,b
  8558  0012FC  6E0F               	movwf	??_timer_interrupt^0,c
  8559  0012FE  6A10               	clrf	(??_timer_interrupt+1)^0,c
  8560  001300  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  8561  001304  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  8562  001308  0E00               	movlw	0
  8563  00130A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8564  00130C  0E0F               	movlw	15
  8565  00130E  6E03               	movwf	i2___wmul@multiplicand^0,c
  8566  001310  EC00  F01D         	call	i2___wmul	;wreg free
  8567  001314  0E6F               	movlw	low (_task_list+11)
  8568  001316  2401               	addwf	?i2___wmul^0,w,c
  8569  001318  6ED9               	movwf	fsr2l,c
  8570  00131A  0E01               	movlw	high (_task_list+11)
  8571  00131C  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8572  00131E  6EDA               	movwf	fsr2h,c
  8573  001320  C00F  FFDE         	movff	??_timer_interrupt,postinc2
  8574  001324  C010  FFDD         	movff	??_timer_interrupt+1,postdec2
  8575  001328                     
  8576                           ;clock.c: 227:                     head = pos;
  8577  001328  C032  F090         	movff	timer_interrupt@pos,_head
  8578                           
  8579                           ;clock.c: 228:                 } else {
  8580  00132C  EF6D  F00A         	goto	i2l622
  8581  001330                     i2l3818:
  8582                           
  8583                           ;clock.c: 230:                     int cur = task_list[head].next;
  8584  001330  0100               	movlb	0	; () banked
  8585  001332  5190               	movf	_head& (0+255),w,b
  8586  001334  0D0F               	mullw	15
  8587  001336  0E6F               	movlw	low (_task_list+11)
  8588  001338  24F3               	addwf	243,w,c
  8589  00133A  6ED9               	movwf	fsr2l,c
  8590  00133C  0E01               	movlw	high (_task_list+11)
  8591  00133E  20F4               	addwfc	prodh,w,c
  8592  001340  6EDA               	movwf	fsr2h,c
  8593  001342  CFDE F030          	movff	postinc2,timer_interrupt@cur
  8594  001346  CFDD F031          	movff	postdec2,timer_interrupt@cur+1
  8595  00134A                     
  8596                           ; BSR set to: 0
  8597                           ;clock.c: 231:                     int prev = head;
  8598  00134A  C090  F02C         	movff	_head,timer_interrupt@prev
  8599  00134E  6A2D               	clrf	(timer_interrupt@prev+1)^0,c
  8600                           
  8601                           ;clock.c: 232:                     while(cur != 105 && sum + task_list[cur].delay_t <= t
      +                          ask_list[pos].delay_t) {
  8602  001350  EFD6  F009         	goto	i2l3826
  8603  001354                     i2l3822:
  8604                           
  8605                           ;clock.c: 234:                         sum+= task_list[cur].delay_t;
  8606  001354  C030  F001         	movff	timer_interrupt@cur,i2___wmul@multiplier
  8607  001358  C031  F002         	movff	timer_interrupt@cur+1,i2___wmul@multiplier+1
  8608  00135C  0E00               	movlw	0
  8609  00135E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8610  001360  0E0F               	movlw	15
  8611  001362  6E03               	movwf	i2___wmul@multiplicand^0,c
  8612  001364  EC00  F01D         	call	i2___wmul	;wreg free
  8613  001368  0E64               	movlw	low _task_list
  8614  00136A  2401               	addwf	?i2___wmul^0,w,c
  8615  00136C  6ED9               	movwf	fsr2l,c
  8616  00136E  0E01               	movlw	high _task_list
  8617  001370  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8618  001372  6EDA               	movwf	fsr2h,c
  8619  001374  50DE               	movf	postinc2,w,c
  8620  001376  262E               	addwf	timer_interrupt@sum^0,f,c
  8621  001378  50DD               	movf	postdec2,w,c
  8622  00137A  222F               	addwfc	(timer_interrupt@sum+1)^0,f,c
  8623  00137C                     
  8624                           ;clock.c: 235:                         prev = cur;
  8625  00137C  C030  F02C         	movff	timer_interrupt@cur,timer_interrupt@prev
  8626  001380  C031  F02D         	movff	timer_interrupt@cur+1,timer_interrupt@prev+1
  8627                           
  8628                           ;clock.c: 236:                         cur = task_list[cur].next;
  8629  001384  C030  F001         	movff	timer_interrupt@cur,i2___wmul@multiplier
  8630  001388  C031  F002         	movff	timer_interrupt@cur+1,i2___wmul@multiplier+1
  8631  00138C  0E00               	movlw	0
  8632  00138E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8633  001390  0E0F               	movlw	15
  8634  001392  6E03               	movwf	i2___wmul@multiplicand^0,c
  8635  001394  EC00  F01D         	call	i2___wmul	;wreg free
  8636  001398  0E6F               	movlw	low (_task_list+11)
  8637  00139A  2401               	addwf	?i2___wmul^0,w,c
  8638  00139C  6ED9               	movwf	fsr2l,c
  8639  00139E  0E01               	movlw	high (_task_list+11)
  8640  0013A0  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8641  0013A2  6EDA               	movwf	fsr2h,c
  8642  0013A4  CFDE F030          	movff	postinc2,timer_interrupt@cur
  8643  0013A8  CFDD F031          	movff	postdec2,timer_interrupt@cur+1
  8644  0013AC                     i2l3826:
  8645                           
  8646                           ;clock.c: 232:                     while(cur != 105 && sum + task_list[cur].delay_t <= t
      +                          ask_list[pos].delay_t) {
  8647  0013AC  0E69               	movlw	105
  8648  0013AE  1830               	xorwf	timer_interrupt@cur^0,w,c
  8649  0013B0  1031               	iorwf	(timer_interrupt@cur+1)^0,w,c
  8650  0013B2  B4D8               	btfsc	status,2,c
  8651  0013B4  EFDE  F009         	goto	i2u315_41
  8652  0013B8  EFE0  F009         	goto	i2u315_40
  8653  0013BC                     i2u315_41:
  8654  0013BC  EF2C  F00A         	goto	i2l3830
  8655  0013C0                     i2u315_40:
  8656  0013C0  C030  F001         	movff	timer_interrupt@cur,i2___wmul@multiplier
  8657  0013C4  C031  F002         	movff	timer_interrupt@cur+1,i2___wmul@multiplier+1
  8658  0013C8  0E00               	movlw	0
  8659  0013CA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8660  0013CC  0E0F               	movlw	15
  8661  0013CE  6E03               	movwf	i2___wmul@multiplicand^0,c
  8662  0013D0  EC00  F01D         	call	i2___wmul	;wreg free
  8663  0013D4  0E64               	movlw	low _task_list
  8664  0013D6  2401               	addwf	?i2___wmul^0,w,c
  8665  0013D8  6ED9               	movwf	fsr2l,c
  8666  0013DA  0E01               	movlw	high _task_list
  8667  0013DC  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8668  0013DE  6EDA               	movwf	fsr2h,c
  8669  0013E0  CFDE F00F          	movff	postinc2,??_timer_interrupt
  8670  0013E4  CFDE F010          	movff	postinc2,??_timer_interrupt+1
  8671  0013E8  CFDE F011          	movff	postinc2,??_timer_interrupt+2
  8672  0013EC  CFDE F012          	movff	postinc2,??_timer_interrupt+3
  8673  0013F0  C02E  F013         	movff	timer_interrupt@sum,??_timer_interrupt+4
  8674  0013F4  C02F  F014         	movff	timer_interrupt@sum+1,??_timer_interrupt+5
  8675  0013F8  0E00               	movlw	0
  8676  0013FA  BE14               	btfsc	(??_timer_interrupt+5)^0,7,c
  8677  0013FC  0EFF               	movlw	255
  8678  0013FE  6E15               	movwf	(??_timer_interrupt+6)^0,c
  8679  001400  6E16               	movwf	(??_timer_interrupt+7)^0,c
  8680  001402  500F               	movf	??_timer_interrupt^0,w,c
  8681  001404  2413               	addwf	(??_timer_interrupt+4)^0,w,c
  8682  001406  6E17               	movwf	(??_timer_interrupt+8)^0,c
  8683  001408  5010               	movf	(??_timer_interrupt+1)^0,w,c
  8684  00140A  2014               	addwfc	(??_timer_interrupt+5)^0,w,c
  8685  00140C  6E18               	movwf	(??_timer_interrupt+9)^0,c
  8686  00140E  5011               	movf	(??_timer_interrupt+2)^0,w,c
  8687  001410  2015               	addwfc	(??_timer_interrupt+6)^0,w,c
  8688  001412  6E19               	movwf	(??_timer_interrupt+10)^0,c
  8689  001414  5012               	movf	(??_timer_interrupt+3)^0,w,c
  8690  001416  2016               	addwfc	(??_timer_interrupt+7)^0,w,c
  8691  001418  6E1A               	movwf	(??_timer_interrupt+11)^0,c
  8692  00141A  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  8693  00141E  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  8694  001422  0E00               	movlw	0
  8695  001424  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8696  001426  0E0F               	movlw	15
  8697  001428  6E03               	movwf	i2___wmul@multiplicand^0,c
  8698  00142A  EC00  F01D         	call	i2___wmul	;wreg free
  8699  00142E  0E64               	movlw	low _task_list
  8700  001430  2401               	addwf	?i2___wmul^0,w,c
  8701  001432  6ED9               	movwf	fsr2l,c
  8702  001434  0E01               	movlw	high _task_list
  8703  001436  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8704  001438  6EDA               	movwf	fsr2h,c
  8705  00143A  5017               	movf	(??_timer_interrupt+8)^0,w,c
  8706  00143C  5CDE               	subwf	postinc2,w,c
  8707  00143E  5018               	movf	(??_timer_interrupt+9)^0,w,c
  8708  001440  58DE               	subwfb	postinc2,w,c
  8709  001442  5019               	movf	(??_timer_interrupt+10)^0,w,c
  8710  001444  58DE               	subwfb	postinc2,w,c
  8711  001446  501A               	movf	(??_timer_interrupt+11)^0,w,c
  8712  001448  58DE               	subwfb	postinc2,w,c
  8713  00144A  B0D8               	btfsc	status,0,c
  8714  00144C  EF2A  F00A         	goto	i2u316_41
  8715  001450  EF2C  F00A         	goto	i2u316_40
  8716  001454                     i2u316_41:
  8717  001454  EFAA  F009         	goto	i2l3822
  8718  001458                     i2u316_40:
  8719  001458                     i2l3830:
  8720                           
  8721                           ;clock.c: 238:                     task_list[prev].next = pos;
  8722  001458  C02C  F001         	movff	timer_interrupt@prev,i2___wmul@multiplier
  8723  00145C  C02D  F002         	movff	timer_interrupt@prev+1,i2___wmul@multiplier+1
  8724  001460  0E00               	movlw	0
  8725  001462  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8726  001464  0E0F               	movlw	15
  8727  001466  6E03               	movwf	i2___wmul@multiplicand^0,c
  8728  001468  EC00  F01D         	call	i2___wmul	;wreg free
  8729  00146C  0E6F               	movlw	low (_task_list+11)
  8730  00146E  2401               	addwf	?i2___wmul^0,w,c
  8731  001470  6ED9               	movwf	fsr2l,c
  8732  001472  0E01               	movlw	high (_task_list+11)
  8733  001474  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8734  001476  6EDA               	movwf	fsr2h,c
  8735  001478  C032  FFDE         	movff	timer_interrupt@pos,postinc2
  8736  00147C  C033  FFDD         	movff	timer_interrupt@pos+1,postdec2
  8737                           
  8738                           ;clock.c: 239:                     task_list[pos].next = cur;
  8739  001480  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  8740  001484  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  8741  001488  0E00               	movlw	0
  8742  00148A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8743  00148C  0E0F               	movlw	15
  8744  00148E  6E03               	movwf	i2___wmul@multiplicand^0,c
  8745  001490  EC00  F01D         	call	i2___wmul	;wreg free
  8746  001494  0E6F               	movlw	low (_task_list+11)
  8747  001496  2401               	addwf	?i2___wmul^0,w,c
  8748  001498  6ED9               	movwf	fsr2l,c
  8749  00149A  0E01               	movlw	high (_task_list+11)
  8750  00149C  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8751  00149E  6EDA               	movwf	fsr2h,c
  8752  0014A0  C030  FFDE         	movff	timer_interrupt@cur,postinc2
  8753  0014A4  C031  FFDD         	movff	timer_interrupt@cur+1,postdec2
  8754                           
  8755                           ;clock.c: 240:                     task_list[pos].delay_t-= sum;
  8756  0014A8  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  8757  0014AC  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  8758  0014B0  0E00               	movlw	0
  8759  0014B2  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8760  0014B4  0E0F               	movlw	15
  8761  0014B6  6E03               	movwf	i2___wmul@multiplicand^0,c
  8762  0014B8  EC00  F01D         	call	i2___wmul	;wreg free
  8763  0014BC  0E64               	movlw	low _task_list
  8764  0014BE  2401               	addwf	?i2___wmul^0,w,c
  8765  0014C0  6ED9               	movwf	fsr2l,c
  8766  0014C2  0E01               	movlw	high _task_list
  8767  0014C4  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8768  0014C6  6EDA               	movwf	fsr2h,c
  8769  0014C8  502E               	movf	timer_interrupt@sum^0,w,c
  8770  0014CA  5EDE               	subwf	postinc2,f,c
  8771  0014CC  502F               	movf	(timer_interrupt@sum+1)^0,w,c
  8772  0014CE  5ADE               	subwfb	postinc2,f,c
  8773  0014D0  0E00               	movlw	0
  8774  0014D2  BE2F               	btfsc	(timer_interrupt@sum+1)^0,7,c
  8775  0014D4  0EFF               	movlw	255
  8776  0014D6  5ADE               	subwfb	postinc2,f,c
  8777  0014D8  5ADE               	subwfb	postinc2,f,c
  8778  0014DA                     i2l622:
  8779                           
  8780                           ;clock.c: 242:                 if(task_list[pos].next != 105)
  8781  0014DA  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  8782  0014DE  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  8783  0014E2  0E00               	movlw	0
  8784  0014E4  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8785  0014E6  0E0F               	movlw	15
  8786  0014E8  6E03               	movwf	i2___wmul@multiplicand^0,c
  8787  0014EA  EC00  F01D         	call	i2___wmul	;wreg free
  8788  0014EE  0E6F               	movlw	low (_task_list+11)
  8789  0014F0  2401               	addwf	?i2___wmul^0,w,c
  8790  0014F2  6ED9               	movwf	fsr2l,c
  8791  0014F4  0E01               	movlw	high (_task_list+11)
  8792  0014F6  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8793  0014F8  6EDA               	movwf	fsr2h,c
  8794  0014FA  0E69               	movlw	105
  8795  0014FC  18DE               	xorwf	postinc2,w,c
  8796  0014FE  10DE               	iorwf	postinc2,w,c
  8797  001500  B4D8               	btfsc	status,2,c
  8798  001502  EF85  F00A         	goto	i2u317_41
  8799  001506  EF87  F00A         	goto	i2u317_40
  8800  00150A                     i2u317_41:
  8801  00150A  EFCB  F00A         	goto	i2l3834
  8802  00150E                     i2u317_40:
  8803  00150E                     
  8804                           ;clock.c: 243:                     task_list[task_list[pos].next].delay_t -= task_list[p
      +                          os].delay_t;
  8805  00150E  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  8806  001512  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  8807  001516  0E00               	movlw	0
  8808  001518  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8809  00151A  0E0F               	movlw	15
  8810  00151C  6E03               	movwf	i2___wmul@multiplicand^0,c
  8811  00151E  EC00  F01D         	call	i2___wmul	;wreg free
  8812  001522  0E6F               	movlw	low (_task_list+11)
  8813  001524  2401               	addwf	?i2___wmul^0,w,c
  8814  001526  6ED9               	movwf	fsr2l,c
  8815  001528  0E01               	movlw	high (_task_list+11)
  8816  00152A  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8817  00152C  6EDA               	movwf	fsr2h,c
  8818  00152E  CFDE F02A          	movff	postinc2,_timer_interrupt$2213
  8819  001532  CFDD F02B          	movff	postdec2,_timer_interrupt$2213+1
  8820                           
  8821                           ;clock.c: 243:                     task_list[task_list[pos].next].delay_t -= task_list[p
      +                          os].delay_t;
  8822  001536  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  8823  00153A  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  8824  00153E  0E00               	movlw	0
  8825  001540  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8826  001542  0E0F               	movlw	15
  8827  001544  6E03               	movwf	i2___wmul@multiplicand^0,c
  8828  001546  EC00  F01D         	call	i2___wmul	;wreg free
  8829  00154A  0E64               	movlw	low _task_list
  8830  00154C  2401               	addwf	?i2___wmul^0,w,c
  8831  00154E  6ED9               	movwf	fsr2l,c
  8832  001550  0E01               	movlw	high _task_list
  8833  001552  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8834  001554  6EDA               	movwf	fsr2h,c
  8835  001556  CFDE F00F          	movff	postinc2,??_timer_interrupt
  8836  00155A  CFDE F010          	movff	postinc2,??_timer_interrupt+1
  8837  00155E  CFDE F011          	movff	postinc2,??_timer_interrupt+2
  8838  001562  CFDE F012          	movff	postinc2,??_timer_interrupt+3
  8839  001566  C02A  F001         	movff	_timer_interrupt$2213,i2___wmul@multiplier
  8840  00156A  C02B  F002         	movff	_timer_interrupt$2213+1,i2___wmul@multiplier+1
  8841  00156E  0E00               	movlw	0
  8842  001570  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8843  001572  0E0F               	movlw	15
  8844  001574  6E03               	movwf	i2___wmul@multiplicand^0,c
  8845  001576  EC00  F01D         	call	i2___wmul	;wreg free
  8846  00157A  0E64               	movlw	low _task_list
  8847  00157C  2401               	addwf	?i2___wmul^0,w,c
  8848  00157E  6ED9               	movwf	fsr2l,c
  8849  001580  0E01               	movlw	high _task_list
  8850  001582  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8851  001584  6EDA               	movwf	fsr2h,c
  8852  001586  500F               	movf	??_timer_interrupt^0,w,c
  8853  001588  5EDE               	subwf	postinc2,f,c
  8854  00158A  5010               	movf	(??_timer_interrupt+1)^0,w,c
  8855  00158C  5ADE               	subwfb	postinc2,f,c
  8856  00158E  5011               	movf	(??_timer_interrupt+2)^0,w,c
  8857  001590  5ADE               	subwfb	postinc2,f,c
  8858  001592  5012               	movf	(??_timer_interrupt+3)^0,w,c
  8859  001594  5ADE               	subwfb	postinc2,f,c
  8860  001596                     i2l3834:
  8861                           
  8862                           ;clock.c: 215:         while(task_list[head].delay_t == 0) {
  8863  001596  0100               	movlb	0	; () banked
  8864  001598  5190               	movf	_head& (0+255),w,b
  8865  00159A  0D0F               	mullw	15
  8866  00159C  0E64               	movlw	low _task_list
  8867  00159E  24F3               	addwf	243,w,c
  8868  0015A0  6ED9               	movwf	fsr2l,c
  8869  0015A2  0E01               	movlw	high _task_list
  8870  0015A4  20F4               	addwfc	prodh,w,c
  8871  0015A6  6EDA               	movwf	fsr2h,c
  8872  0015A8  50DE               	movf	postinc2,w,c
  8873  0015AA  10DE               	iorwf	postinc2,w,c
  8874  0015AC  10DE               	iorwf	postinc2,w,c
  8875  0015AE  10DE               	iorwf	postinc2,w,c
  8876  0015B0  B4D8               	btfsc	status,2,c
  8877  0015B2  EFDD  F00A         	goto	i2u318_41
  8878  0015B6  EFDF  F00A         	goto	i2u318_40
  8879  0015BA                     i2u318_41:
  8880  0015BA  EFA1  F008         	goto	i2l616
  8881  0015BE                     i2u318_40:
  8882  0015BE                     
  8883                           ; BSR set to: 0
  8884                           ;clock.c: 246:         task_list[head].delay_t-= 10;
  8885  0015BE  5190               	movf	_head& (0+255),w,b
  8886  0015C0  0D0F               	mullw	15
  8887  0015C2  0E64               	movlw	low _task_list
  8888  0015C4  24F3               	addwf	243,w,c
  8889  0015C6  6ED9               	movwf	fsr2l,c
  8890  0015C8  0E01               	movlw	high _task_list
  8891  0015CA  20F4               	addwfc	prodh,w,c
  8892  0015CC  6EDA               	movwf	fsr2h,c
  8893  0015CE  0E0A               	movlw	10
  8894  0015D0  5EDE               	subwf	postinc2,f,c
  8895  0015D2  0E00               	movlw	0
  8896  0015D4  5ADE               	subwfb	postinc2,f,c
  8897  0015D6  5ADE               	subwfb	postinc2,f,c
  8898  0015D8  5ADE               	subwfb	postinc2,f,c
  8899  0015DA                     i2l614:
  8900  0015DA  C024  FFF4         	movff	??_timer_interrupt+21,prodh
  8901  0015DE  C023  FFF3         	movff	??_timer_interrupt+20,prodl
  8902  0015E2  C022  FFDA         	movff	??_timer_interrupt+19,fsr2h
  8903  0015E6  C021  FFD9         	movff	??_timer_interrupt+18,fsr2l
  8904  0015EA  C020  FFE2         	movff	??_timer_interrupt+17,fsr1h
  8905  0015EE  C01F  FFE1         	movff	??_timer_interrupt+16,fsr1l
  8906  0015F2  923C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8907  0015F4  0011               	retfie		f
  8908  0015F6                     __end_of_timer_interrupt:
  8909                           	opt callstack 0
  8910                           
  8911 ;; *************** function i2_remove_timer *****************
  8912 ;; Defined at:
  8913 ;;		line 155 in file "clock.c"
  8914 ;; Parameters:    Size  Location     Type
  8915 ;;  id              1    wreg     unsigned char 
  8916 ;; Auto vars:     Size  Location     Type
  8917 ;;  id              1    4[COMRAM] unsigned char 
  8918 ;;  remove_timer    1    5[COMRAM] unsigned char 
  8919 ;; Return value:  Size  Location     Type
  8920 ;;                  2    0[None  ] int 
  8921 ;; Registers used:
  8922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8923 ;; Tracked objects:
  8924 ;;		On entry : 0/0
  8925 ;;		On exit  : 0/0
  8926 ;;		Unchanged: 0/0
  8927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8929 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8930 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8931 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8932 ;;Total ram usage:        6 bytes
  8933 ;; Hardware stack levels used:    1
  8934 ;; Hardware stack levels required when called:    1
  8935 ;; This function calls:
  8936 ;;		i2_isEmptyList
  8937 ;; This function is called by:
  8938 ;;		_timer_interrupt
  8939 ;; This function uses a non-reentrant model
  8940 ;;
  8941                           
  8942                           	psect	text50
  8943  0028CA                     __ptext50:
  8944                           	opt callstack 0
  8945  0028CA                     i2_remove_timer:
  8946                           	opt callstack 21
  8947                           
  8948                           ;incstack = 0
  8949                           ;i2remove_timer@id stored from wreg
  8950  0028CA  6E05               	movwf	i2remove_timer@id^0,c
  8951  0028CC                     
  8952                           ;clock.c: 156:     if(isEmptyList() || task_list[id].func_ptr == ((void*)0))
  8953  0028CC  EC7C  F01D         	call	i2_isEmptyList	;wreg free
  8954  0028D0  0900               	iorlw	0
  8955  0028D2  A4D8               	btfss	status,2,c
  8956  0028D4  EF6E  F014         	goto	i2u295_41
  8957  0028D8  EF70  F014         	goto	i2u295_40
  8958  0028DC                     i2u295_41:
  8959  0028DC  EF30  F015         	goto	i2l589
  8960  0028E0                     i2u295_40:
  8961  0028E0  5005               	movf	i2remove_timer@id^0,w,c
  8962  0028E2  0D0F               	mullw	15
  8963  0028E4  0E6C               	movlw	low (_task_list+8)
  8964  0028E6  24F3               	addwf	243,w,c
  8965  0028E8  6ED9               	movwf	fsr2l,c
  8966  0028EA  0E01               	movlw	high (_task_list+8)
  8967  0028EC  20F4               	addwfc	prodh,w,c
  8968  0028EE  6EDA               	movwf	fsr2h,c
  8969  0028F0  50DE               	movf	postinc2,w,c
  8970  0028F2  10DE               	iorwf	postinc2,w,c
  8971  0028F4  10DE               	iorwf	postinc2,w,c
  8972  0028F6  A4D8               	btfss	status,2,c
  8973  0028F8  EF80  F014         	goto	i2u296_41
  8974  0028FC  EF82  F014         	goto	i2u296_40
  8975  002900                     i2u296_41:
  8976  002900  EF84  F014         	goto	i2l3712
  8977  002904                     i2u296_40:
  8978  002904  EF30  F015         	goto	i2l589
  8979  002908                     i2l3712:
  8980                           
  8981                           ;clock.c: 158:     task_list[id].delay_t = 0;
  8982  002908  5005               	movf	i2remove_timer@id^0,w,c
  8983  00290A  0D0F               	mullw	15
  8984  00290C  0E64               	movlw	low _task_list
  8985  00290E  24F3               	addwf	243,w,c
  8986  002910  6ED9               	movwf	fsr2l,c
  8987  002912  0E01               	movlw	high _task_list
  8988  002914  20F4               	addwfc	prodh,w,c
  8989  002916  6EDA               	movwf	fsr2h,c
  8990  002918  6ADE               	clrf	postinc2,c
  8991  00291A  6ADE               	clrf	postinc2,c
  8992  00291C  6ADE               	clrf	postinc2,c
  8993  00291E  6ADD               	clrf	postdec2,c
  8994                           
  8995                           ;clock.c: 159:     task_list[id].period_t = 0;
  8996  002920  5005               	movf	i2remove_timer@id^0,w,c
  8997  002922  0D0F               	mullw	15
  8998  002924  0E68               	movlw	low (_task_list+4)
  8999  002926  24F3               	addwf	243,w,c
  9000  002928  6ED9               	movwf	fsr2l,c
  9001  00292A  0E01               	movlw	high (_task_list+4)
  9002  00292C  20F4               	addwfc	prodh,w,c
  9003  00292E  6EDA               	movwf	fsr2h,c
  9004  002930  6ADE               	clrf	postinc2,c
  9005  002932  6ADE               	clrf	postinc2,c
  9006  002934  6ADE               	clrf	postinc2,c
  9007  002936  6ADD               	clrf	postdec2,c
  9008                           
  9009                           ;clock.c: 160:     task_list[id].func_ptr = ((void*)0);
  9010  002938  5005               	movf	i2remove_timer@id^0,w,c
  9011  00293A  0D0F               	mullw	15
  9012  00293C  0E6C               	movlw	low (_task_list+8)
  9013  00293E  24F3               	addwf	243,w,c
  9014  002940  6ED9               	movwf	fsr2l,c
  9015  002942  0E01               	movlw	high (_task_list+8)
  9016  002944  20F4               	addwfc	prodh,w,c
  9017  002946  6EDA               	movwf	fsr2h,c
  9018  002948  0E00               	movlw	0
  9019  00294A  6EDE               	movwf	postinc2,c
  9020  00294C  0E00               	movlw	0
  9021  00294E  6EDE               	movwf	postinc2,c
  9022  002950  0E00               	movlw	0
  9023  002952  6EDE               	movwf	postinc2,c
  9024                           
  9025                           ;clock.c: 161:     task_list[id].data_p = ((void*)0);
  9026  002954  5005               	movf	i2remove_timer@id^0,w,c
  9027  002956  0D0F               	mullw	15
  9028  002958  0E71               	movlw	low (_task_list+13)
  9029  00295A  24F3               	addwf	243,w,c
  9030  00295C  6ED9               	movwf	fsr2l,c
  9031  00295E  0E01               	movlw	high (_task_list+13)
  9032  002960  20F4               	addwfc	prodh,w,c
  9033  002962  6EDA               	movwf	fsr2h,c
  9034  002964  0E00               	movlw	0
  9035  002966  6EDE               	movwf	postinc2,c
  9036  002968  0E00               	movlw	0
  9037  00296A  6EDD               	movwf	postdec2,c
  9038  00296C                     
  9039                           ;clock.c: 162:     num_task--;
  9040  00296C  0100               	movlb	0	; () banked
  9041  00296E  0791               	decf	_num_task& (0+255),f,b
  9042  002970                     
  9043                           ; BSR set to: 0
  9044                           ;clock.c: 163:     if(id == head) {
  9045  002970  5190               	movf	_head& (0+255),w,b
  9046  002972  1805               	xorwf	i2remove_timer@id^0,w,c
  9047  002974  A4D8               	btfss	status,2,c
  9048  002976  EFBF  F014         	goto	i2u297_41
  9049  00297A  EFC1  F014         	goto	i2u297_40
  9050  00297E                     i2u297_41:
  9051  00297E  EFD9  F014         	goto	i2l590
  9052  002982                     i2u297_40:
  9053  002982                     
  9054                           ; BSR set to: 0
  9055                           ;clock.c: 164:         head = task_list[id].next;
  9056  002982  5005               	movf	i2remove_timer@id^0,w,c
  9057  002984  0D0F               	mullw	15
  9058  002986  0E6F               	movlw	low (_task_list+11)
  9059  002988  24F3               	addwf	243,w,c
  9060  00298A  6ED9               	movwf	fsr2l,c
  9061  00298C  0E01               	movlw	high (_task_list+11)
  9062  00298E  20F4               	addwfc	prodh,w,c
  9063  002990  6EDA               	movwf	fsr2h,c
  9064  002992  50DF               	movf	indf2,w,c
  9065  002994  6F90               	movwf	_head& (0+255),b
  9066                           
  9067                           ;clock.c: 165:         task_list[id].next = 105;
  9068  002996  5005               	movf	i2remove_timer@id^0,w,c
  9069  002998  0D0F               	mullw	15
  9070  00299A  0E6F               	movlw	low (_task_list+11)
  9071  00299C  24F3               	addwf	243,w,c
  9072  00299E  6ED9               	movwf	fsr2l,c
  9073  0029A0  0E01               	movlw	high (_task_list+11)
  9074  0029A2  20F4               	addwfc	prodh,w,c
  9075  0029A4  6EDA               	movwf	fsr2h,c
  9076  0029A6  0E69               	movlw	105
  9077  0029A8  6EDE               	movwf	postinc2,c
  9078  0029AA  0E00               	movlw	0
  9079  0029AC  6EDD               	movwf	postdec2,c
  9080                           
  9081                           ;clock.c: 166:     }
  9082  0029AE  EF30  F015         	goto	i2l589
  9083  0029B2                     i2l590:
  9084                           
  9085                           ; BSR set to: 0
  9086                           ;clock.c: 168:         char pos = head;
  9087  0029B2  C090  F006         	movff	_head,i2remove_timer@pos
  9088                           
  9089                           ;clock.c: 169:         while(task_list[pos].next != 105 && task_list[pos].next != id) {
  9090  0029B6  EFE7  F014         	goto	i2l592
  9091  0029BA                     i2l3720:
  9092                           
  9093                           ;clock.c: 170:             pos = task_list[pos].next;
  9094  0029BA  5006               	movf	i2remove_timer@pos^0,w,c
  9095  0029BC  0D0F               	mullw	15
  9096  0029BE  0E6F               	movlw	low (_task_list+11)
  9097  0029C0  24F3               	addwf	243,w,c
  9098  0029C2  6ED9               	movwf	fsr2l,c
  9099  0029C4  0E01               	movlw	high (_task_list+11)
  9100  0029C6  20F4               	addwfc	prodh,w,c
  9101  0029C8  6EDA               	movwf	fsr2h,c
  9102  0029CA  50DF               	movf	indf2,w,c
  9103  0029CC  6E06               	movwf	i2remove_timer@pos^0,c
  9104  0029CE                     i2l592:
  9105                           
  9106                           ;clock.c: 169:         while(task_list[pos].next != 105 && task_list[pos].next != id) {
  9107  0029CE  5006               	movf	i2remove_timer@pos^0,w,c
  9108  0029D0  0D0F               	mullw	15
  9109  0029D2  0E6F               	movlw	low (_task_list+11)
  9110  0029D4  24F3               	addwf	243,w,c
  9111  0029D6  6ED9               	movwf	fsr2l,c
  9112  0029D8  0E01               	movlw	high (_task_list+11)
  9113  0029DA  20F4               	addwfc	prodh,w,c
  9114  0029DC  6EDA               	movwf	fsr2h,c
  9115  0029DE  0E69               	movlw	105
  9116  0029E0  18DE               	xorwf	postinc2,w,c
  9117  0029E2  10DE               	iorwf	postinc2,w,c
  9118  0029E4  B4D8               	btfsc	status,2,c
  9119  0029E6  EFF7  F014         	goto	i2u298_41
  9120  0029EA  EFF9  F014         	goto	i2u298_40
  9121  0029EE                     i2u298_41:
  9122  0029EE  EF10  F015         	goto	i2l3724
  9123  0029F2                     i2u298_40:
  9124  0029F2  5006               	movf	i2remove_timer@pos^0,w,c
  9125  0029F4  0D0F               	mullw	15
  9126  0029F6  0E6F               	movlw	low (_task_list+11)
  9127  0029F8  24F3               	addwf	243,w,c
  9128  0029FA  6ED9               	movwf	fsr2l,c
  9129  0029FC  0E01               	movlw	high (_task_list+11)
  9130  0029FE  20F4               	addwfc	prodh,w,c
  9131  002A00  6EDA               	movwf	fsr2h,c
  9132  002A02  5005               	movf	i2remove_timer@id^0,w,c
  9133  002A04  6E03               	movwf	(??i2_remove_timer+2)^0,c
  9134  002A06  6A04               	clrf	(??i2_remove_timer+3)^0,c
  9135  002A08  50DE               	movf	postinc2,w,c
  9136  002A0A  1803               	xorwf	(??i2_remove_timer+2)^0,w,c
  9137  002A0C  E107               	bnz	i2u299_41
  9138  002A0E  50DE               	movf	postinc2,w,c
  9139  002A10  1804               	xorwf	(??i2_remove_timer+3)^0,w,c
  9140  002A12  A4D8               	btfss	status,2,c
  9141  002A14  EF0E  F015         	goto	i2u299_41
  9142  002A18  EF10  F015         	goto	i2u299_40
  9143  002A1C                     i2u299_41:
  9144  002A1C  EFDD  F014         	goto	i2l3720
  9145  002A20                     i2u299_40:
  9146  002A20                     i2l3724:
  9147                           
  9148                           ;clock.c: 172:         task_list[pos].next = task_list[id].next;
  9149  002A20  5005               	movf	i2remove_timer@id^0,w,c
  9150  002A22  0D0F               	mullw	15
  9151  002A24  0E6F               	movlw	low (_task_list+11)
  9152  002A26  24F3               	addwf	243,w,c
  9153  002A28  6ED9               	movwf	fsr2l,c
  9154  002A2A  0E01               	movlw	high (_task_list+11)
  9155  002A2C  20F4               	addwfc	prodh,w,c
  9156  002A2E  6EDA               	movwf	fsr2h,c
  9157  002A30  5006               	movf	i2remove_timer@pos^0,w,c
  9158  002A32  0D0F               	mullw	15
  9159  002A34  0E6F               	movlw	low (_task_list+11)
  9160  002A36  24F3               	addwf	243,w,c
  9161  002A38  6EE1               	movwf	fsr1l,c
  9162  002A3A  0E01               	movlw	high (_task_list+11)
  9163  002A3C  20F4               	addwfc	prodh,w,c
  9164  002A3E  6EE2               	movwf	fsr1h,c
  9165  002A40  CFDE FFE6          	movff	postinc2,postinc1
  9166  002A44  CFDD FFE5          	movff	postdec2,postdec1
  9167  002A48                     
  9168                           ;clock.c: 173:         task_list[id].next = 105;
  9169  002A48  5005               	movf	i2remove_timer@id^0,w,c
  9170  002A4A  0D0F               	mullw	15
  9171  002A4C  0E6F               	movlw	low (_task_list+11)
  9172  002A4E  24F3               	addwf	243,w,c
  9173  002A50  6ED9               	movwf	fsr2l,c
  9174  002A52  0E01               	movlw	high (_task_list+11)
  9175  002A54  20F4               	addwfc	prodh,w,c
  9176  002A56  6EDA               	movwf	fsr2h,c
  9177  002A58  0E69               	movlw	105
  9178  002A5A  6EDE               	movwf	postinc2,c
  9179  002A5C  0E00               	movlw	0
  9180  002A5E  6EDD               	movwf	postdec2,c
  9181  002A60                     i2l589:
  9182  002A60  0012               	return		;funcret
  9183  002A62                     __end_ofi2_remove_timer:
  9184                           	opt callstack 0
  9185                           
  9186 ;; *************** function i2_isEmptyList *****************
  9187 ;; Defined at:
  9188 ;;		line 73 in file "clock.c"
  9189 ;; Parameters:    Size  Location     Type
  9190 ;;		None
  9191 ;; Auto vars:     Size  Location     Type
  9192 ;;		None
  9193 ;; Return value:  Size  Location     Type
  9194 ;;                  1    wreg      unsigned char 
  9195 ;; Registers used:
  9196 ;;		wreg, status,2
  9197 ;; Tracked objects:
  9198 ;;		On entry : 0/0
  9199 ;;		On exit  : 0/0
  9200 ;;		Unchanged: 0/0
  9201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9206 ;;Total ram usage:        0 bytes
  9207 ;; Hardware stack levels used:    1
  9208 ;; This function calls:
  9209 ;;		Nothing
  9210 ;; This function is called by:
  9211 ;;		i2_remove_timer
  9212 ;; This function uses a non-reentrant model
  9213 ;;
  9214                           
  9215                           	psect	text51
  9216  003AF8                     __ptext51:
  9217                           	opt callstack 0
  9218  003AF8                     i2_isEmptyList:
  9219                           	opt callstack 21
  9220  003AF8                     
  9221                           ;clock.c: 74:     return num_task == 0 ? 1 : 0;
  9222  003AF8  0100               	movlb	0	; () banked
  9223  003AFA  5191               	movf	_num_task& (0+255),w,b
  9224  003AFC  B4D8               	btfsc	status,2,c
  9225  003AFE  EF83  F01D         	goto	i2u268_41
  9226  003B02  EF86  F01D         	goto	i2u268_40
  9227  003B06                     i2u268_41:
  9228  003B06  0E01               	movlw	1
  9229  003B08  EF87  F01D         	goto	i2u269_40
  9230  003B0C                     i2u268_40:
  9231  003B0C  0E00               	movlw	0
  9232  003B0E                     i2u269_40:
  9233  003B0E                     
  9234                           ; BSR set to: 0
  9235  003B0E  0012               	return		;funcret
  9236  003B10                     __end_ofi2_isEmptyList:
  9237                           	opt callstack 0
  9238                           
  9239 ;; *************** function _enqueue *****************
  9240 ;; Defined at:
  9241 ;;		line 29 in file "clock.c"
  9242 ;; Parameters:    Size  Location     Type
  9243 ;;  ptr             3    9[COMRAM] PTR FTN(PTR void ,)void 
  9244 ;;		 -> print_temp_and_humid(1), readTempAndHumid(1), check_humid_to_turn_fan(1), handleButton(1), 
  9245 ;;		 -> NULL(0), changeState(1), 
  9246 ;;  data_ptr        2   12[COMRAM] PTR void 
  9247 ;;		 -> NULL(0), 
  9248 ;; Auto vars:     Size  Location     Type
  9249 ;;		None
  9250 ;; Return value:  Size  Location     Type
  9251 ;;                  1    wreg      unsigned char 
  9252 ;; Registers used:
  9253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9254 ;; Tracked objects:
  9255 ;;		On entry : 0/0
  9256 ;;		On exit  : 0/0
  9257 ;;		Unchanged: 0/0
  9258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9259 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9262 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9263 ;;Total ram usage:        5 bytes
  9264 ;; Hardware stack levels used:    1
  9265 ;; Hardware stack levels required when called:    3
  9266 ;; This function calls:
  9267 ;;		_isFullQueue
  9268 ;;		i2___awmod
  9269 ;;		i2___wmul
  9270 ;; This function is called by:
  9271 ;;		_timer_interrupt
  9272 ;; This function uses a non-reentrant model
  9273 ;;
  9274                           
  9275                           	psect	text52
  9276  003242                     __ptext52:
  9277                           	opt callstack 0
  9278  003242                     _enqueue:
  9279                           	opt callstack 19
  9280  003242                     
  9281                           ;clock.c: 30:     if(isFullQueue())
  9282  003242  EC55  F01D         	call	_isFullQueue	;wreg free
  9283  003246  0900               	iorlw	0
  9284  003248  B4D8               	btfsc	status,2,c
  9285  00324A  EF29  F019         	goto	i2u293_41
  9286  00324E  EF2B  F019         	goto	i2u293_40
  9287  003252                     i2u293_41:
  9288  003252  EF2D  F019         	goto	i2l3696
  9289  003256                     i2u293_40:
  9290  003256  EF76  F019         	goto	i2l527
  9291  00325A                     i2l3696:
  9292                           
  9293                           ;clock.c: 32:     if(front == -1)
  9294  00325A  0100               	movlb	0	; () banked
  9295  00325C  29CD               	incf	_front& (0+255),w,b
  9296  00325E  E106               	bnz	i2u294_41
  9297  003260  29CE               	incf	(_front+1)& (0+255),w,b
  9298  003262  A4D8               	btfss	status,2,c
  9299  003264  EF36  F019         	goto	i2u294_41
  9300  003268  EF38  F019         	goto	i2u294_40
  9301  00326C                     i2u294_41:
  9302  00326C  EF3C  F019         	goto	i2l3700
  9303  003270                     i2u294_40:
  9304  003270                     
  9305                           ; BSR set to: 0
  9306                           ;clock.c: 33:         front = 0;
  9307  003270  0E00               	movlw	0
  9308  003272  6FCE               	movwf	(_front+1)& (0+255),b
  9309  003274  0E00               	movlw	0
  9310  003276  6FCD               	movwf	_front& (0+255),b
  9311  003278                     i2l3700:
  9312                           
  9313                           ; BSR set to: 0
  9314                           ;clock.c: 34:     rear = (rear + 1) % 20;
  9315  003278  0E01               	movlw	1
  9316  00327A  25CB               	addwf	_rear& (0+255),w,b
  9317  00327C  6E01               	movwf	i2___awmod@dividend^0,c
  9318  00327E  0E00               	movlw	0
  9319  003280  21CC               	addwfc	(_rear+1)& (0+255),w,b
  9320  003282  6E02               	movwf	(i2___awmod@dividend+1)^0,c
  9321  003284  0E00               	movlw	0
  9322  003286  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  9323  003288  0E14               	movlw	20
  9324  00328A  6E03               	movwf	i2___awmod@divisor^0,c
  9325  00328C  ECC9  F018         	call	i2___awmod	;wreg free
  9326  003290  C001  F0CB         	movff	?i2___awmod,_rear
  9327  003294  C002  F0CC         	movff	?i2___awmod+1,_rear+1
  9328  003298                     
  9329                           ;clock.c: 35:     ready_queue[rear].func_ptr = ptr;
  9330  003298  C0CB  F001         	movff	_rear,i2___wmul@multiplier
  9331  00329C  C0CC  F002         	movff	_rear+1,i2___wmul@multiplier+1
  9332  0032A0  0E00               	movlw	0
  9333  0032A2  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9334  0032A4  0E05               	movlw	5
  9335  0032A6  6E03               	movwf	i2___wmul@multiplicand^0,c
  9336  0032A8  EC00  F01D         	call	i2___wmul	;wreg free
  9337  0032AC  0E00               	movlw	low _ready_queue
  9338  0032AE  2401               	addwf	?i2___wmul^0,w,c
  9339  0032B0  6ED9               	movwf	fsr2l,c
  9340  0032B2  0E01               	movlw	high _ready_queue
  9341  0032B4  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9342  0032B6  6EDA               	movwf	fsr2h,c
  9343  0032B8  C00A  FFDE         	movff	enqueue@ptr,postinc2
  9344  0032BC  C00B  FFDE         	movff	enqueue@ptr+1,postinc2
  9345  0032C0  C00C  FFDE         	movff	enqueue@ptr+2,postinc2
  9346  0032C4                     
  9347                           ;clock.c: 36:     ready_queue[rear].data_p = data_ptr;
  9348  0032C4  C0CB  F001         	movff	_rear,i2___wmul@multiplier
  9349  0032C8  C0CC  F002         	movff	_rear+1,i2___wmul@multiplier+1
  9350  0032CC  0E00               	movlw	0
  9351  0032CE  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9352  0032D0  0E05               	movlw	5
  9353  0032D2  6E03               	movwf	i2___wmul@multiplicand^0,c
  9354  0032D4  EC00  F01D         	call	i2___wmul	;wreg free
  9355  0032D8  0E03               	movlw	low (_ready_queue+3)
  9356  0032DA  2401               	addwf	?i2___wmul^0,w,c
  9357  0032DC  6ED9               	movwf	fsr2l,c
  9358  0032DE  0E01               	movlw	high (_ready_queue+3)
  9359  0032E0  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9360  0032E2  6EDA               	movwf	fsr2h,c
  9361  0032E4  C00D  FFDE         	movff	enqueue@data_ptr,postinc2
  9362  0032E8  C00E  FFDD         	movff	enqueue@data_ptr+1,postdec2
  9363  0032EC                     i2l527:
  9364  0032EC  0012               	return		;funcret
  9365  0032EE                     __end_of_enqueue:
  9366                           	opt callstack 0
  9367                           
  9368 ;; *************** function i2___wmul *****************
  9369 ;; Defined at:
  9370 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  9371 ;; Parameters:    Size  Location     Type
  9372 ;;  multiplier      2    0[COMRAM] unsigned int 
  9373 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9374 ;; Auto vars:     Size  Location     Type
  9375 ;;  __wmul          2    4[COMRAM] unsigned int 
  9376 ;; Return value:  Size  Location     Type
  9377 ;;                  2    0[COMRAM] unsigned int 
  9378 ;; Registers used:
  9379 ;;		wreg, status,2, status,0, prodl, prodh
  9380 ;; Tracked objects:
  9381 ;;		On entry : 0/0
  9382 ;;		On exit  : 0/0
  9383 ;;		Unchanged: 0/0
  9384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9385 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9386 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9388 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9389 ;;Total ram usage:        6 bytes
  9390 ;; Hardware stack levels used:    1
  9391 ;; This function calls:
  9392 ;;		Nothing
  9393 ;; This function is called by:
  9394 ;;		_enqueue
  9395 ;;		_timer_interrupt
  9396 ;; This function uses a non-reentrant model
  9397 ;;
  9398                           
  9399                           	psect	text53
  9400  003A00                     __ptext53:
  9401                           	opt callstack 0
  9402  003A00                     i2___wmul:
  9403                           	opt callstack 22
  9404  003A00  5001               	movf	i2___wmul@multiplier^0,w,c
  9405  003A02  0203               	mulwf	i2___wmul@multiplicand^0,c
  9406  003A04  CFF3 F005          	movff	prodl,i2___wmul@product
  9407  003A08  CFF4 F006          	movff	prodh,i2___wmul@product+1
  9408  003A0C  5001               	movf	i2___wmul@multiplier^0,w,c
  9409  003A0E  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
  9410  003A10  50F3               	movf	243,w,c
  9411  003A12  2606               	addwf	(i2___wmul@product+1)^0,f,c
  9412  003A14  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
  9413  003A16  0203               	mulwf	i2___wmul@multiplicand^0,c
  9414  003A18  50F3               	movf	243,w,c
  9415  003A1A  2606               	addwf	(i2___wmul@product+1)^0,f,c
  9416  003A1C  C005  F001         	movff	i2___wmul@product,?i2___wmul
  9417  003A20  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  9418  003A24  0012               	return		;funcret
  9419  003A26                     __end_ofi2___wmul:
  9420                           	opt callstack 0
  9421                           
  9422 ;; *************** function _isFullQueue *****************
  9423 ;; Defined at:
  9424 ;;		line 19 in file "clock.c"
  9425 ;; Parameters:    Size  Location     Type
  9426 ;;		None
  9427 ;; Auto vars:     Size  Location     Type
  9428 ;;		None
  9429 ;; Return value:  Size  Location     Type
  9430 ;;                  1    wreg      unsigned char 
  9431 ;; Registers used:
  9432 ;;		wreg, status,2, status,0, cstack
  9433 ;; Tracked objects:
  9434 ;;		On entry : 0/0
  9435 ;;		On exit  : 0/0
  9436 ;;		Unchanged: 0/0
  9437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9440 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9441 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9442 ;;Total ram usage:        1 bytes
  9443 ;; Hardware stack levels used:    1
  9444 ;; Hardware stack levels required when called:    2
  9445 ;; This function calls:
  9446 ;;		i2_getSizeQueue
  9447 ;; This function is called by:
  9448 ;;		_enqueue
  9449 ;; This function uses a non-reentrant model
  9450 ;;
  9451                           
  9452                           	psect	text54
  9453  003AAA                     __ptext54:
  9454                           	opt callstack 0
  9455  003AAA                     _isFullQueue:
  9456                           	opt callstack 19
  9457  003AAA                     
  9458                           ;clock.c: 20:     return getSizeQueue() >= 20 ? 1 : 0;
  9459  003AAA  ECD7  F01C         	call	i2_getSizeQueue	;wreg free
  9460  003AAE  6E09               	movwf	??_isFullQueue^0,c
  9461  003AB0  0E14               	movlw	20
  9462  003AB2  6009               	cpfslt	??_isFullQueue^0,c
  9463  003AB4  EF5E  F01D         	goto	i2u262_41
  9464  003AB8  EF61  F01D         	goto	i2u262_40
  9465  003ABC                     i2u262_41:
  9466  003ABC  0E01               	movlw	1
  9467  003ABE  EF62  F01D         	goto	i2u263_40
  9468  003AC2                     i2u262_40:
  9469  003AC2  0E00               	movlw	0
  9470  003AC4                     i2u263_40:
  9471  003AC4  0012               	return		;funcret
  9472  003AC6                     __end_of_isFullQueue:
  9473                           	opt callstack 0
  9474                           
  9475 ;; *************** function i2_getSizeQueue *****************
  9476 ;; Defined at:
  9477 ;;		line 15 in file "clock.c"
  9478 ;; Parameters:    Size  Location     Type
  9479 ;;		None
  9480 ;; Auto vars:     Size  Location     Type
  9481 ;;		None
  9482 ;; Return value:  Size  Location     Type
  9483 ;;                  1    wreg      unsigned char 
  9484 ;; Registers used:
  9485 ;;		wreg, status,2, status,0, cstack
  9486 ;; Tracked objects:
  9487 ;;		On entry : 0/0
  9488 ;;		On exit  : 0/0
  9489 ;;		Unchanged: 0/0
  9490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9493 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9494 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9495 ;;Total ram usage:        2 bytes
  9496 ;; Hardware stack levels used:    1
  9497 ;; Hardware stack levels required when called:    1
  9498 ;; This function calls:
  9499 ;;		i2___awmod
  9500 ;; This function is called by:
  9501 ;;		_isFullQueue
  9502 ;; This function uses a non-reentrant model
  9503 ;;
  9504                           
  9505                           	psect	text55
  9506  0039AE                     __ptext55:
  9507                           	opt callstack 0
  9508  0039AE                     i2_getSizeQueue:
  9509                           	opt callstack 19
  9510  0039AE                     
  9511                           ;clock.c: 16:     return (rear - front + 1 + 20) % 20;
  9512  0039AE  0100               	movlb	0	; () banked
  9513  0039B0  51CD               	movf	_front& (0+255),w,b
  9514  0039B2  5DCB               	subwf	_rear& (0+255),w,b
  9515  0039B4  6E07               	movwf	??i2_getSizeQueue^0,c
  9516  0039B6  51CE               	movf	(_front+1)& (0+255),w,b
  9517  0039B8  59CC               	subwfb	(_rear+1)& (0+255),w,b
  9518  0039BA  6E08               	movwf	(??i2_getSizeQueue+1)^0,c
  9519  0039BC  0E15               	movlw	21
  9520  0039BE  2407               	addwf	??i2_getSizeQueue^0,w,c
  9521  0039C0  6E01               	movwf	i2___awmod@dividend^0,c
  9522  0039C2  0E00               	movlw	0
  9523  0039C4  2008               	addwfc	(??i2_getSizeQueue+1)^0,w,c
  9524  0039C6  6E02               	movwf	(i2___awmod@dividend+1)^0,c
  9525  0039C8  0E00               	movlw	0
  9526  0039CA  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  9527  0039CC  0E14               	movlw	20
  9528  0039CE  6E03               	movwf	i2___awmod@divisor^0,c
  9529  0039D0  ECC9  F018         	call	i2___awmod	;wreg free
  9530  0039D4  5001               	movf	?i2___awmod^0,w,c
  9531  0039D6  0012               	return		;funcret
  9532  0039D8                     __end_ofi2_getSizeQueue:
  9533                           	opt callstack 0
  9534                           
  9535 ;; *************** function i2___awmod *****************
  9536 ;; Defined at:
  9537 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  9538 ;; Parameters:    Size  Location     Type
  9539 ;;  dividend        2    0[COMRAM] int 
  9540 ;;  divisor         2    2[COMRAM] int 
  9541 ;; Auto vars:     Size  Location     Type
  9542 ;;  __awmod         1    5[COMRAM] unsigned char 
  9543 ;;  __awmod         1    4[COMRAM] unsigned char 
  9544 ;; Return value:  Size  Location     Type
  9545 ;;                  2    0[COMRAM] int 
  9546 ;; Registers used:
  9547 ;;		wreg, status,2, status,0
  9548 ;; Tracked objects:
  9549 ;;		On entry : 0/0
  9550 ;;		On exit  : 0/0
  9551 ;;		Unchanged: 0/0
  9552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9553 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9554 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9556 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9557 ;;Total ram usage:        6 bytes
  9558 ;; Hardware stack levels used:    1
  9559 ;; This function calls:
  9560 ;;		Nothing
  9561 ;; This function is called by:
  9562 ;;		_enqueue
  9563 ;;		i2_getSizeQueue
  9564 ;; This function uses a non-reentrant model
  9565 ;;
  9566                           
  9567                           	psect	text56
  9568  003192                     __ptext56:
  9569                           	opt callstack 0
  9570  003192                     i2___awmod:
  9571                           	opt callstack 21
  9572  003192  0E00               	movlw	0
  9573  003194  6E06               	movwf	i2___awmod@sign^0,c
  9574  003196  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
  9575  003198  EFD2  F018         	goto	i2u180_40
  9576  00319C  EFD0  F018         	goto	i2u180_41
  9577  0031A0                     i2u180_41:
  9578  0031A0  EFD8  F018         	goto	i2l2858
  9579  0031A4                     i2u180_40:
  9580  0031A4  6C01               	negf	i2___awmod@dividend^0,c
  9581  0031A6  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  9582  0031A8  B0D8               	btfsc	status,0,c
  9583  0031AA  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  9584  0031AC  0E01               	movlw	1
  9585  0031AE  6E06               	movwf	i2___awmod@sign^0,c
  9586  0031B0                     i2l2858:
  9587  0031B0  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
  9588  0031B2  EFDF  F018         	goto	i2u181_40
  9589  0031B6  EFDD  F018         	goto	i2u181_41
  9590  0031BA                     i2u181_41:
  9591  0031BA  EFE3  F018         	goto	i2l2862
  9592  0031BE                     i2u181_40:
  9593  0031BE  6C03               	negf	i2___awmod@divisor^0,c
  9594  0031C0  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  9595  0031C2  B0D8               	btfsc	status,0,c
  9596  0031C4  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  9597  0031C6                     i2l2862:
  9598  0031C6  5003               	movf	i2___awmod@divisor^0,w,c
  9599  0031C8  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  9600  0031CA  B4D8               	btfsc	status,2,c
  9601  0031CC  EFEA  F018         	goto	i2u182_41
  9602  0031D0  EFEC  F018         	goto	i2u182_40
  9603  0031D4                     i2u182_41:
  9604  0031D4  EF10  F019         	goto	i2l2878
  9605  0031D8                     i2u182_40:
  9606  0031D8  0E01               	movlw	1
  9607  0031DA  6E05               	movwf	i2___awmod@counter^0,c
  9608  0031DC  EFF4  F018         	goto	i2l2868
  9609  0031E0                     i2l2866:
  9610  0031E0  90D8               	bcf	status,0,c
  9611  0031E2  3603               	rlcf	i2___awmod@divisor^0,f,c
  9612  0031E4  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  9613  0031E6  2A05               	incf	i2___awmod@counter^0,f,c
  9614  0031E8                     i2l2868:
  9615  0031E8  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  9616  0031EA  EFF9  F018         	goto	i2u183_41
  9617  0031EE  EFFB  F018         	goto	i2u183_40
  9618  0031F2                     i2u183_41:
  9619  0031F2  EFF0  F018         	goto	i2l2866
  9620  0031F6                     i2u183_40:
  9621  0031F6                     i2l2870:
  9622  0031F6  5003               	movf	i2___awmod@divisor^0,w,c
  9623  0031F8  5C01               	subwf	i2___awmod@dividend^0,w,c
  9624  0031FA  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  9625  0031FC  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  9626  0031FE  A0D8               	btfss	status,0,c
  9627  003200  EF04  F019         	goto	i2u184_41
  9628  003204  EF06  F019         	goto	i2u184_40
  9629  003208                     i2u184_41:
  9630  003208  EF0A  F019         	goto	i2l2874
  9631  00320C                     i2u184_40:
  9632  00320C  5003               	movf	i2___awmod@divisor^0,w,c
  9633  00320E  5E01               	subwf	i2___awmod@dividend^0,f,c
  9634  003210  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  9635  003212  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  9636  003214                     i2l2874:
  9637  003214  90D8               	bcf	status,0,c
  9638  003216  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  9639  003218  3203               	rrcf	i2___awmod@divisor^0,f,c
  9640  00321A  2E05               	decfsz	i2___awmod@counter^0,f,c
  9641  00321C  EFFB  F018         	goto	i2l2870
  9642  003220                     i2l2878:
  9643  003220  5006               	movf	i2___awmod@sign^0,w,c
  9644  003222  B4D8               	btfsc	status,2,c
  9645  003224  EF16  F019         	goto	i2u185_41
  9646  003228  EF18  F019         	goto	i2u185_40
  9647  00322C                     i2u185_41:
  9648  00322C  EF1C  F019         	goto	i2l2882
  9649  003230                     i2u185_40:
  9650  003230  6C01               	negf	i2___awmod@dividend^0,c
  9651  003232  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  9652  003234  B0D8               	btfsc	status,0,c
  9653  003236  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  9654  003238                     i2l2882:
  9655  003238  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  9656  00323C  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  9657  003240  0012               	return		;funcret
  9658  003242                     __end_ofi2___awmod:
  9659                           	opt callstack 0
  9660                           
  9661                           	psect	text57
  9662  000000                     __ptext57:
  9663                           	opt callstack 0
  9664  000000                     
  9665                           	psect	rparam
  9666  0000                     
  9667                           	psect	temp
  9668  00003C                     btemp:
  9669                           	opt callstack 0
  9670  00003C                     	ds	1
  9671  0000                     int$flags	set	btemp
  9672  0000                     wtemp8	set	btemp+1
  9673  0000                     ttemp5	set	btemp+1
  9674  0000                     ttemp6	set	btemp+4
  9675  0000                     ttemp7	set	btemp+8
  9676                           tosu	equ	0xFFF
  9677                           tosh	equ	0xFFE
  9678                           tosl	equ	0xFFD
  9679                           stkptr	equ	0xFFC
  9680                           pclatu	equ	0xFFB
  9681                           pclath	equ	0xFFA
  9682                           pcl	equ	0xFF9
  9683                           tblptru	equ	0xFF8
  9684                           tblptrh	equ	0xFF7
  9685                           tblptrl	equ	0xFF6
  9686                           tablat	equ	0xFF5
  9687                           prodh	equ	0xFF4
  9688                           prodl	equ	0xFF3
  9689                           indf0	equ	0xFEF
  9690                           postinc0	equ	0xFEE
  9691                           postdec0	equ	0xFED
  9692                           preinc0	equ	0xFEC
  9693                           plusw0	equ	0xFEB
  9694                           fsr0h	equ	0xFEA
  9695                           fsr0l	equ	0xFE9
  9696                           wreg	equ	0xFE8
  9697                           indf1	equ	0xFE7
  9698                           postinc1	equ	0xFE6
  9699                           postdec1	equ	0xFE5
  9700                           preinc1	equ	0xFE4
  9701                           plusw1	equ	0xFE3
  9702                           fsr1h	equ	0xFE2
  9703                           fsr1l	equ	0xFE1
  9704                           bsr	equ	0xFE0
  9705                           indf2	equ	0xFDF
  9706                           postinc2	equ	0xFDE
  9707                           postdec2	equ	0xFDD
  9708                           preinc2	equ	0xFDC
  9709                           plusw2	equ	0xFDB
  9710                           fsr2h	equ	0xFDA
  9711                           fsr2l	equ	0xFD9
  9712                           status	equ	0xFD8


Data Sizes:
    Strings     151
    Constant    0
    Data        12
    BSS         469
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     51      59
    BANK0           160     46     119
    BANK1           256      0     100
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    timer_interrupt$2212	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    timer_interrupt$2207	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> print_temp_and_humid(), readTempAndHumid(), check_humid_to_turn_fan(), handleButton(), 
		 -> NULL(NULL[0]), changeState(), 

    ptr$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S980$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    callback$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    handleButton@data_ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S968$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ?_dequeue.data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ?_dequeue.func_ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> print_temp_and_humid(), readTempAndHumid(), check_humid_to_turn_fan(), handleButton(), 
		 -> NULL(NULL[0]), changeState(), 

    node.data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    node.func_ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> print_temp_and_humid(), readTempAndHumid(), check_humid_to_turn_fan(), handleButton(), 
		 -> NULL(NULL[0]), changeState(), 

    register_timer@data_ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    register_timer@callback	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> print_temp_and_humid(), readTempAndHumid(), check_humid_to_turn_fan(), handleButton(), 
		 -> changeState(), 

    S980$data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    task_list.data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S980$func_ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> print_temp_and_humid(), readTempAndHumid(), check_humid_to_turn_fan(), handleButton(), 
		 -> NULL(NULL[0]), changeState(), 

    task_list.func_ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> print_temp_and_humid(), readTempAndHumid(), check_humid_to_turn_fan(), handleButton(), 
		 -> NULL(NULL[0]), changeState(), 

    temp.data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    temp.func_ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> print_temp_and_humid(), readTempAndHumid(), check_humid_to_turn_fan(), handleButton(), 
		 -> NULL(NULL[0]), changeState(), 

    enqueue@data_ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    enqueue@ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> print_temp_and_humid(), readTempAndHumid(), check_humid_to_turn_fan(), handleButton(), 
		 -> NULL(NULL[0]), changeState(), 

    S968$data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ready_queue.data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S968$func_ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> print_temp_and_humid(), readTempAndHumid(), check_humid_to_turn_fan(), handleButton(), 
		 -> NULL(NULL[0]), changeState(), 

    ready_queue.func_ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> print_temp_and_humid(), readTempAndHumid(), check_humid_to_turn_fan(), handleButton(), 
		 -> NULL(NULL[0]), changeState(), 

    LCDPrint@ptr	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_30(CODE[3]), STR_29(CODE[3]), STR_28(CODE[3]), STR_27(CODE[3]), 
		 -> STR_26(CODE[3]), STR_25(CODE[4]), STR_24(CODE[5]), STR_23(CODE[17]), 
		 -> STR_22(CODE[17]), STR_21(CODE[5]), STR_20(CODE[15]), STR_19(CODE[3]), 
		 -> STR_18(CODE[3]), STR_17(CODE[7]), STR_16(CODE[15]), STR_15(CODE[7]), 
		 -> STR_14(CODE[15]), STR_13(CODE[17]), STR_12(CODE[10]), STR_11(CODE[15]), 
		 -> STR_10(CODE[17]), STR_9(CODE[7]), STR_8(CODE[15]), STR_7(CODE[10]), 
		 -> STR_6(CODE[7]), STR_5(CODE[15]), STR_4(CODE[15]), STR_3(CODE[10]), 
		 -> STR_2(CODE[9]), STR_1(CODE[9]), 

    LCDPutStr@ptr	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_30(CODE[3]), STR_29(CODE[3]), STR_28(CODE[3]), STR_27(CODE[3]), 
		 -> STR_26(CODE[3]), STR_25(CODE[4]), STR_24(CODE[5]), STR_23(CODE[17]), 
		 -> STR_22(CODE[17]), STR_21(CODE[5]), STR_20(CODE[15]), STR_19(CODE[3]), 
		 -> STR_18(CODE[3]), STR_17(CODE[7]), STR_16(CODE[15]), STR_15(CODE[7]), 
		 -> STR_14(CODE[15]), STR_13(CODE[17]), STR_12(CODE[10]), STR_11(CODE[15]), 
		 -> STR_10(CODE[17]), STR_9(CODE[7]), STR_8(CODE[15]), STR_7(CODE[10]), 
		 -> STR_6(CODE[7]), STR_5(CODE[15]), STR_4(CODE[15]), STR_3(CODE[10]), 
		 -> STR_2(CODE[9]), STR_1(CODE[9]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _timer_interrupt in COMRAM

    _timer_interrupt->_enqueue
    _enqueue->_isFullQueue
    _isFullQueue->i2_getSizeQueue
    i2_getSizeQueue->i2___awmod

Critical Paths under _main in BANK0

    _main->_set_time_process
    _system_initialize->_start_timer
    _start_timer->_initializeTaskList
    _initializeTaskList->_queueInitialize
    _queueInitialize->___wmul
    _LCDInit->_LCDPutInst
    _Port_BBSPIInit->_SendByteBBSPI
    _set_time_process->_register_timer
    _register_timer->___wmul
    _dispatch->_dequeue
    _readTempAndHumid->_readDHT
    _readDHT->_getByte
    _print_temp_and_humid->_LCDPrint
    _handleButton->_readButtonRA5
    _handleButton->_readButtonRB0
    _isEmptyQueue->_getSizeQueue
    _getSizeQueue->___awmod
    _check_humid_to_turn_fan->_LCDPrint
    _LTD_process->_LCDPrint
    _LCDPrintChar->_LCDMoveCursor
    _LCDPrint->_LCDMoveCursor
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_WritePort_BBSPI
    _LCDMoveCursor->_LCDPutInst
    _LCDPutInst->_WritePort_BBSPI
    _WritePort_BBSPI->_SendByteBBSPI

Critical Paths under _timer_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer_interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer_interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer_interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timer_interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timer_interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _timer_interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _timer_interrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _timer_interrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _timer_interrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _timer_interrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _timer_interrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _timer_interrupt in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _timer_interrupt in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _timer_interrupt in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _timer_interrupt in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   99558
                                             44 BANK0      2     2      0
                           _LCDPrint
                         _LCDPutInst
                        _LTD_process
                           _dispatch
                     _register_timer
                   _set_time_process
                  _system_initialize
 ---------------------------------------------------------------------------------
 (1) _system_initialize                                    0     0      0    3994
                            _LCDInit
               _interrupt_initialize
                     _osc_initialize
                     _pin_initialize
                        _start_timer
 ---------------------------------------------------------------------------------
 (2) _start_timer                                          3     3      0    2080
                                             10 BANK0      3     3      0
                 _initializeTaskList
 ---------------------------------------------------------------------------------
 (3) _initializeTaskList                                   2     2      0    2036
                                              8 BANK0      2     2      0
                             ___wmul
                    _queueInitialize
 ---------------------------------------------------------------------------------
 (4) _queueInitialize                                      2     2      0     985
                                              6 BANK0      2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _pin_initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _osc_initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _interrupt_initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0    1914
                                              6 BANK0      1     1      0
                          _InitBBSPI
                         _LCDPutInst
                     _Port_BBSPIInit
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (3) _Port_BBSPIInit                                       1     1      0     160
                                              3 BANK0      1     1      0
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (3) _InitBBSPI                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_time_process                                     6     6      0   22064
                                             38 BANK0      6     6      0
                           _LCDPrint
                       _LCDPrintChar
                         _LCDPutInst
                            ___awdiv
                            ___awmod
                     _register_timer
                       _remove_timer
 ---------------------------------------------------------------------------------
 (2) _remove_timer                                         6     6      0     332
                                              0 BANK0      6     6      0
                        _isEmptyList
 ---------------------------------------------------------------------------------
 (3) _isEmptyList                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _register_timer                                      32    19     13    3475
                                              6 BANK0     32    19     13
                             ___wmul
                         _isFullList
 ---------------------------------------------------------------------------------
 (3) _isFullList                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dispatch                                             5     5      0   43320
                                             20 BANK0      5     5      0
                        _changeState *
            _check_humid_to_turn_fan *
                            _dequeue
                       _handleButton *
                       _isEmptyQueue
               _print_temp_and_humid *
                   _readTempAndHumid *
 ---------------------------------------------------------------------------------
 (2) _readTempAndHumid                                     0     0      0     251
                            _readDHT
 ---------------------------------------------------------------------------------
 (3) _readDHT                                              5     5      0     251
                                              6 BANK0      5     5      0
                            _getByte
 ---------------------------------------------------------------------------------
 (4) _getByte                                              6     6      0     159
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _print_temp_and_humid                                 0     0      0   17279
                           _LCDPrint
                       _LCDPrintChar
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _handleButton                                         8     6      2     143
                                              2 BANK0      8     6      2
                      _readButtonRA5
                      _readButtonRB0
 ---------------------------------------------------------------------------------
 (3) _readButtonRB0                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _readButtonRA5                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _dequeue                                             12     7      5    5732
                                              8 BANK0     12     7      5
                            ___awmod
                             ___wmul
                       _isEmptyQueue
 ---------------------------------------------------------------------------------
 (2) _isEmptyQueue                                         0     0      0    2372
                       _getSizeQueue
 ---------------------------------------------------------------------------------
 (3) _getSizeQueue                                         2     2      0    2372
                                              6 BANK0      2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     895
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _check_humid_to_turn_fan                              0     0      0   17475
                           _LCDPrint
                       _LCDPrintChar
                            ___awdiv
                            ___awmod
                     _set_speed_fan3
 ---------------------------------------------------------------------------------
 (3) _set_speed_fan3                                       2     0      2     196
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _changeState                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LTD_process                                          8     8      0   18985
                                             15 BANK0      8     8      0
                           _LCDPrint
                       _LCDPrintChar
                         _LCDPutInst
                            ___awdiv
                            ___awmod
                           _get_time
                       _turn_off_fan
                 _turn_off_heat_pump
                    _turn_off_heater
                        _turn_on_fan
                  _turn_on_heat_pump
                     _turn_on_heater
 ---------------------------------------------------------------------------------
 (2) _turn_on_heater                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _turn_on_heat_pump                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _turn_on_fan                                          4     2      2     250
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _turn_off_heater                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _turn_off_heat_pump                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _turn_off_fan                                         4     2      2     478
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _get_time                                             4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    2372
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    2276
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCDPrintChar                                         3     1      2    5799
                                             11 BANK0      3     1      2
                      _LCDMoveCursor
                         _LCDPutChar
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCDPrint                                             4     1      3    6832
                                             11 BANK0      4     1      3
                      _LCDMoveCursor
                          _LCDPutStr
 ---------------------------------------------------------------------------------
 (3) _LCDPutStr                                            2     0      2    1009
                                              6 BANK0      2     0      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (3) _LCDPutChar                                           1     1      0     888
                                              5 BANK0      1     1      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (3) _LCDMoveCursor                                        5     4      1    1153
                                              6 BANK0      5     4      1
                         _LCDPutInst
 ---------------------------------------------------------------------------------
 (3) _LCDPutInst                                           1     1      0     888
                                              5 BANK0      1     1      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (3) _WritePort_BBSPI                                      2     1      1     866
                                              3 BANK0      2     1      1
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (4) _SendByteBBSPI                                        3     3      0     138
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _timer_interrupt                                     37    37      0    2774
                                             14 COMRAM    37    37      0
                            _enqueue
                           i2___wmul
                     i2_remove_timer
 ---------------------------------------------------------------------------------
 (9) i2_remove_timer                                       6     6      0     332
                                              0 COMRAM     6     6      0
                      i2_isEmptyList
 ---------------------------------------------------------------------------------
 (10) i2_isEmptyList                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _enqueue                                              5     0      5    1411
                                              9 COMRAM     5     0      5
                        _isFullQueue
                          i2___awmod
                           i2___wmul
 ---------------------------------------------------------------------------------
 (9) i2___wmul                                             6     2      4     415
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) _isFullQueue                                         1     1      0     400
                                              8 COMRAM     1     1      0
                     i2_getSizeQueue
 ---------------------------------------------------------------------------------
 (11) i2_getSizeQueue                                      2     2      0     400
                                              6 COMRAM     2     2      0
                          i2___awmod
 ---------------------------------------------------------------------------------
 (10) i2___awmod                                           6     2      4     400
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDPrint
     _LCDMoveCursor
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
     _LCDPutStr
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
   _LCDPutInst
     _WritePort_BBSPI
       _SendByteBBSPI
   _LTD_process
     _LCDPrint
       _LCDMoveCursor
         _LCDPutInst
           _WritePort_BBSPI
             _SendByteBBSPI
       _LCDPutStr
         _LCDPutChar
           _WritePort_BBSPI
             _SendByteBBSPI
     _LCDPrintChar
       _LCDMoveCursor
         _LCDPutInst
           _WritePort_BBSPI
             _SendByteBBSPI
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
       ___awdiv (ARG)
       ___awmod (ARG)
     _LCDPutInst
       _WritePort_BBSPI
         _SendByteBBSPI
     ___awdiv
     ___awmod
     _get_time
     _turn_off_fan
     _turn_off_heat_pump
     _turn_off_heater
     _turn_on_fan
     _turn_on_heat_pump
     _turn_on_heater
   _dispatch
     _changeState *
     _check_humid_to_turn_fan *
       _LCDPrint
         _LCDMoveCursor
           _LCDPutInst
             _WritePort_BBSPI
               _SendByteBBSPI
         _LCDPutStr
           _LCDPutChar
             _WritePort_BBSPI
               _SendByteBBSPI
       _LCDPrintChar
         _LCDMoveCursor
           _LCDPutInst
             _WritePort_BBSPI
               _SendByteBBSPI
         _LCDPutChar
           _WritePort_BBSPI
             _SendByteBBSPI
         ___awdiv (ARG)
         ___awmod (ARG)
       ___awdiv
       ___awmod
       _set_speed_fan3
     _dequeue *
       ___awmod
       ___wmul
       _isEmptyQueue
         _getSizeQueue
           ___awmod
     _handleButton *
       _readButtonRA5
       _readButtonRB0
     _isEmptyQueue *
       _getSizeQueue
         ___awmod
     _print_temp_and_humid *
       _LCDPrint
         _LCDMoveCursor
           _LCDPutInst
             _WritePort_BBSPI
               _SendByteBBSPI
         _LCDPutStr
           _LCDPutChar
             _WritePort_BBSPI
               _SendByteBBSPI
       _LCDPrintChar
         _LCDMoveCursor
           _LCDPutInst
             _WritePort_BBSPI
               _SendByteBBSPI
         _LCDPutChar
           _WritePort_BBSPI
             _SendByteBBSPI
         ___awdiv (ARG)
         ___awmod (ARG)
       ___awdiv
       ___awmod
     _readTempAndHumid *
       _readDHT
         _getByte
   _register_timer
     ___wmul
     _isFullList
   _set_time_process
     _LCDPrint
       _LCDMoveCursor
         _LCDPutInst
           _WritePort_BBSPI
             _SendByteBBSPI
       _LCDPutStr
         _LCDPutChar
           _WritePort_BBSPI
             _SendByteBBSPI
     _LCDPrintChar
       _LCDMoveCursor
         _LCDPutInst
           _WritePort_BBSPI
             _SendByteBBSPI
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
       ___awdiv (ARG)
       ___awmod (ARG)
     _LCDPutInst
       _WritePort_BBSPI
         _SendByteBBSPI
     ___awdiv
     ___awmod
     _register_timer
       ___wmul
       _isFullList
     _remove_timer
       _isEmptyList
   _system_initialize
     _LCDInit
       _InitBBSPI
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
       _Port_BBSPIInit
         _SendByteBBSPI
       _WritePort_BBSPI
         _SendByteBBSPI
     _interrupt_initialize
     _osc_initialize
     _pin_initialize
     _start_timer
       _initializeTaskList
         ___wmul
         _queueInitialize
           ___wmul

 _timer_interrupt (ROOT)
   _enqueue
     _isFullQueue
       i2_getSizeQueue
         i2___awmod
     i2___awmod
     i2___wmul
   i2___wmul
   i2_remove_timer
     i2_isEmptyList

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0     12C      37        7.6%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      64       7       39.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2E      77       5       74.4%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     33      3B       1       62.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     116      32        0.0%
DATA                 0      0     242       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Nov 30 18:15:46 2019

                   _LCDMoveCursor 38B4                  ??i2_getSizeQueue 0007  
                     ?_LCDPutChar 0001                                l92 18C6  
                              l96 19BE                                l88 1788  
                  ??_getSizeQueue 00A3                      ___awdiv@sign 00A2  
                     ?_LCDPutInst 0001               ___wmul@multiplicand 009F  
           SendByteBBSPI@bitcount 009E                               l103 1AB8  
                             l301 37B2                               l310 3874  
                             l119 1EAC                               l304 37F4  
                             l225 258C                               l323 3770  
                             l317 38F0                               l440 3024  
                             l280 3576                               l416 3B44  
                             l329 38B2                               l425 3B4A  
                             l513 34A8                               l434 3024  
                             l523 3926                               l531 332E  
                             l187 36E0                               l195 368E  
                             l283 3B20                               l419 3A48  
                             l292 3512                               l516 39AC  
                             l532 338E                               l428 3A6A  
                             l286 34B8                               l454 2CB4  
                             l447 30DE                               l551 3ADE  
                             l295 3AA8                               l288 34CC  
                             l289 34CE                               l705 2B34  
                             l713 3980                               l545 2DC2  
                             l298 3A8A                               l555 3424  
                             l636 35DA                               l548 3AF6  
                             l565 3B32                               l557 33AA  
                             l750 3B4E                               l590 281A  
                             l592 2836                               l753 3B56  
                             l569 224C                               l770 36E6  
                             l690 2E80                               l763 37FA  
                             l683 2DEC                               l772 36EC  
                             l756 3B52                               l773 36F2  
                             l765 3800                               l589 28C8  
                             l774 372E                               l766 3834  
                             l686 2EA2                               l759 3B5A  
                             l696 2AB0                               l777 3952  
                             l785 39FE                               l779 3954  
                             l699 2BA2                               _PR2 000FCB  
                     _start_timer 3390                      ___awmod@sign 00A2  
                             prod 000FF3                               tosl 000FFD  
                             wreg 000FE8                   __end_of_LCDInit 3578  
                    __CFG_LVP$OFF 000000         __size_of_readTempAndHumid 002C  
                    __CFG_WDT$OFF 000000                              l1016 2F68  
                            l1029 3190                              l3000 2AAA  
                            l3012 2AE8                              l3004 2ABE  
                            l3100 28B0                              l3030 2BA0  
                            l3022 2B42                              l3014 2B0C  
                            l3006 2ACC                              l3110 1EC8  
                            l3040 2EC0                              l3024 2B6A  
                            l3016 2B18                              l3120 1EF6  
                            l3104 1EAE                              l3050 2EE6  
                            l3042 2EC4                              l3034 2EA4  
                            l3202 3B50                              l3210 227C  
                            l3130 1F1E                              l3122 1EF8  
                            l3106 1EC2                              l3060 2F1C  
                            l3052 2EF8                              l3044 2ED2  
                            l3036 2EAA                              l3204 3B58  
                            l4020 239E                              l3220 2312  
                            l3212 22A4                              l3140 1FD0  
                            l3132 1F92                              l3124 1F08  
                            l3116 1ECE                              l3300 3570  
                            l3062 2F32                              l3054 2F00  
                            l3070 2F48                              l3046 2EDA  
                            l3038 2EB8                              l4022 24FA  
                            l3222 2326                              l3214 22B0  
                            l3206 224E                              l3150 2048  
                            l3142 2000                              l3134 1F94  
                            l3302 3B40                              l3310 3394  
                            l3072 2F58                              l3064 2F3A  
                            l3056 2F08                              l3048 2EDE  
                            l4024 1E86                              l3400 3304  
                            l3240 240C                              l3224 2340  
                            l3216 22D6                              l3232 238A  
                            l3208 2266                              l3160 2162  
                            l3152 2072                              l3144 201E  
                            l3136 1FAC                              l3304 3A26  
                            l4016 33F6                              l3320 33D0  
                            l3074 2F60                              l3066 2F3C  
                            l3058 2F16                              l4026 381E  
                            l3402 3318                              l3250 249C  
                            l3242 2432                              l3226 234C  
                            l3218 22E2                              l3234 23C4  
                            l3162 217A                              l3154 20A4  
                            l3146 2026                              l3138 1FBE  
                            l3090 27D8                              l3082 2734  
                            l4018 1A8A                              l3306 3A3E  
                            l3322 33D2                              l3314 33AE  
                            l3330 33E2                              l2700 3A70  
                            l3068 2F42                              l3172 3B22  
                            l4028 3710                              l3180 3806  
                            l3340 2F7E                              l3252 24A8  
                            l3244 243E                              l3236 23D8  
                            l3260 2520                              l3228 2372  
                            l3156 20B8                              l3148 203E  
                            l3164 21C4                              l3092 27EA  
                            l3084 2748                              l3500 1866  
                            l3308 3B46                              l3324 33D6  
                            l3316 33CA                              l2702 3A72  
                            l2710 37CC                              l3190 36E2  
                            l3174 3B4C                              l3350 2FCA  
                            l3342 2F90                              l3406 3336  
                            l3262 2532                              l3254 24CE  
                            l3246 246E                              l3238 2400  
                            l3422 3972                              l3414 3956  
                            l3166 21E8                              l3158 2132  
                            l3094 2822                              l3086 2772  
                            l3510 18D8                              l3502 1868  
                            l3326 33DA                              l3318 33CE  
                            l2704 3A88                              l2720 37E8  
                            l2712 37CE                              l3176 37F6  
                            l3600 1BFC                              l3360 300A  
                            l3352 2FD2                              l3344 2FA0  
                            l3408 3358                              l3264 2544  
                            l3248 2482                              l3424 3978  
                            l3416 396A                              l3168 224A  
                            l3096 285A                              l3088 27D6  
                            l3520 194A                              l3512 18E0  
                            l3504 1878                              l3280 351C  
                            l2714 37D8                              l2706 37B8  
                            l2730 3796                              l2722 3776  
                            l3194 36F8                              l3610 1C68  
                            l3602 1C0E                              l3362 301C  
                            l3354 2FE4                              l3346 2FA8  
                            l3338 2F6A                              l3370 305C  
                            l2810 3982                              l3258 24E6  
                            l3426 397C                              l3098 2888  
                            l3530 1974                              l3522 195A  
                            l3514 18E6                              l3506 187C  
                            l3450 161C                              l3442 15F6  
                            l3290 3548                              l3282 352E  
                            l3274 3514                              l2716 37DA  
                            l2708 37C0                              l2732 3798  
                            l2724 377E                              l3188 3B54  
                            l3620 1CCC                              l3612 1C78  
                            l3604 1C48                              l3348 2FBA  
                            l3372 3070                              l3364 3026  
                            l2740 39F6                              l2900 3690  
                            l3380 2BA4                              l2820 2DCE  
                            l3540 19F6                              l3532 1998  
                            l3524 195E                              l3516 18FA  
                            l3508 18A0                              l3460 16AE  
                            l3452 1630                              l3444 15FA  
                            l3292 3558                              l3284 3530  
                            l3276 3518                              l2804 3430  
                            l2718 37E6                              l2734 37A4  
                            l2726 378A                              l2750 30FC  
                            l3630 1D42                              l3622 1CD0  
                            l3614 1C8C                              l3606 1C4E  
                            l3358 2FFA                              l3374 3082  
                            l3366 3038                              l2910 36CC  
                            l2902 3694                              l3390 2C54  
                            l3382 2BCC                              l2830 2E0E  
                            l2822 2DE6                              l2814 2DC4  
                            l3550 1A5E                              l3542 1A10  
                            l3534 19D0                              l3526 1960  
                            l3518 1920                              l3470 1704  
                            l3462 16CC                              l3454 164E  
                            l3446 160A                              l3294 355E  
                            l3286 3536                              l3278 351A  
                            l2806 3488                              l2680 34EA  
                            l2736 37A6                              l2728 378C  
                            l2760 3130                              l2752 3100  
                            l2744 30E0                              l3640 1DC6  
                            l3632 1D4A                              l3624 1CDE  
                            l3616 1CB2                              l3608 1C62  
                            l3560 1ABA                              l3368 304A  
                            l2904 369E                              l2920 3642  
                            l3392 2C6A                              l3384 2BE0  
                            l2832 2E36                              l3544 1A24  
                            l3536 19DC                              l3528 1970  
                            l3480 179A                              l3472 170C  
                            l3464 16DC                              l3456 1676  
                            l3448 1616                              l3296 3564  
                            l3288 353C                              l2808 348C  
                            l2690 34F4                              l2682 34EC  
                            l2674 34C6                              l2666 34AE  
                            l2770 316A                              l2762 3138  
                            l2754 310E                              l2746 30E6  
                            l3650 1E1E                              l3642 1DEE  
                            l3634 1D50                              l3626 1CE2  
                            l3618 1CB8                              l3570 1AEE  
                            l3562 1ABE                              l3378 3094  
                            l2738 39D8                              l2906 36B0  
                            l2914 36D8                              l2922 364C  
                            l3386 2BF6                              l2834 2E58  
                            l2842 2E8E                              l2826 2DFA  
                            l3546 1A36                              l3538 19E4  
                            l3490 17EE                              l3482 179E  
                            l3474 1728                              l3466 16E0  
                            l3458 169E                              l3554 1A74  
                            l3298 356A                              l3730 258E  
                            l2692 34F6                              l2684 34EE  
                            l2676 34DC                              l2668 34B2  
                            l2780 3836                              l2764 3146  
                            l2772 3170                              l2756 3116  
                            l2748 30F4                              l3660 1E58  
                            l3652 1E2C                              l3644 1E08  
                            l3636 1D76                              l3628 1CF4  
                            l3580 1B68                              l3572 1AFC  
                            l3564 1ACE                              l2908 36C0  
                            l2924 365E                              l2932 3686  
                            l3388 2C40                              l2844 2E90  
                            l2836 2E64                              l2828 2E00  
                            l3548 1A4C                              l3492 1802  
                            l3484 17A4                              l3476 1750  
                            l3468 16E8                              l2940 3A92  
                            l3740 2708                              l3732 26C2  
                            l2694 34F8                              l2686 34F0  
                            l2678 34E4                              l2790 38CA  
                            l2782 383A                              l2774 3180  
                            l2766 315C                              l2758 3128  
                            l3654 1E3E                              l3646 1E0C  
                            l3638 1D9E                              l3590 1BCC  
                            l3582 1B7C                              l3574 1B10  
                            l3566 1AD6                              l2950 38F2  
                            l3398 32EE                              l2926 366E  
                            l2918 363E                              l2846 2EA0  
                            l3494 1828                              l3486 17E4  
                            l3478 1778                              l2942 3AA6  
                            l3670 3A4A                              l3742 271C  
                            l3734 26D4                              l2696 3500  
                            l2688 34F2                              l2792 38DA  
                            l2784 384E                              l2776 3188  
                            l2768 3164                              l3656 1E42  
                            l3648 1E1A                              l3592 1BD2  
                            l3584 1B82                              l3576 1B28  
                            l3568 1AEA                              l3664 1E70  
                            l2944 3928                              l2952 3908  
                            l2928 367A                              l3496 1852  
                            l3488 17E8                              l2936 3B10  
                            l2960 2CB6                              l3680 3A64  
                            l3672 3A52                              l3744 2720  
                            l3736 26E8                              l2698 3502  
                            l2794 38E6                              l2786 3854  
                            l2890 375A                              l3658 1E46  
                            l3594 1BE6                              l3586 1B92  
                            l3578 1B62                              l2946 3932  
                            l3690 35C6                              l3682 3578  
                            l3498 1862                              l2938 3A90  
                            l2970 2D9A                              l2962 2CBA  
                            l3674 3A56                              l3746 2724  
                            l3738 2702                              l2796 38EA  
                            l2788 38B8                              l2892 3764  
                            l3596 1BEA                              l3588 1BA6  
                            l2948 394C                              l2956 390E  
                            l3684 357C                              l2980 3AC6  
                            l2972 2D9E                              l3676 3A5A  
                            l2886 3734                              l2894 387A  
                            l3598 1BF8                              l2990 2A70  
                            l3686 358E                              l2798 3426  
                            l2974 2DBA                              l3678 3A60  
                            l2888 3746                              l2896 388C  
                            l2992 2A82                              l2984 2A62  
                            l3688 35A4                              l2976 3AE0  
                            l2968 2CC4                              l2898 38A0  
                            l2994 2A84                              l2986 2A6C  
                            l2996 2A8A                              l2988 2A6E  
                            l2998 2A90                              STR_1 1066  
                            STR_2 106F                              STR_3 1052  
                            STR_4 1043                              STR_5 1034  
                            STR_6 107F                              STR_7 105C  
                            STR_8 1034                              STR_9 107F  
                            u2000 3AF6                              u2010 3ADC  
                            u2011 3AD6                              u2100 2B42  
                            u2020 3ADE                              u2101 2B3E  
                            u2110 2B7E                              u2030 2AAA  
                            u2111 2B76                              u2031 2AA6  
                            u2040 2ABE                              u2200 2748  
                            u2041 2ABA                              u2201 2744  
                            u2130 2B9C                              u2050 2AE4  
                            u2210 276E                              u2131 2B98  
                            u2051 2AE0                              u2211 276A  
                            u2140 2EB8                              u2060 2AF8  
                            u2300 1FD0                              u2220 27EA  
                            u2141 2EB4                              u2061 2AF2  
                            u2301 1FCC                              u2221 27E6  
                            _LATA 000F89                              u2150 2ED2  
                            u2070 2AFA                              u2310 2000  
                            u2230 285A                              _LATB 000F8A  
                            u2151 2ECE                              u2311 1FFC  
                            u2231 2856                              _LATC 000F8B  
                            u1600 34C6                              u2160 2EF8  
                            u2400 23D8                              u2128 2B82  
                            u2080 2B0C                              u2320 20B8  
                            u2240 2888                              _LATD 000F8C  
                            u1601 34C2                              u2161 2EF4  
                            u2401 23D4                              u2081 2B08  
                            u2321 20B4                              u2241 2884  
                            u1610 34DC                              u2170 2F16  
                            u2410 2432                              u2090 2B30  
                            u2330 2132                              u2250 1EC2  
                            u1611 34D8                              u2171 2F12  
                            u2411 242E                              u2091 2B2C  
                            u2331 212E                              u2251 1EBE  
                            u1620 3512                              u1700 38CA  
                            u2180 2F32                              u2500 2FA0  
                            u2420 246E                              u2340 21E8  
                            u2260 1EF2                              u1621 350E  
                            u1701 38C6                              u2181 2F2E  
                            u2501 2F9C                              u2421 246A  
                            u2341 21E4                              u2261 1EEE  
                            u2190 2F58                              u1630 30F4  
                            u2510 2FBA                              u2430 249C  
                            u2350 227C                              u2270 1F08  
                            u1710 34A8                              u2191 2F54  
                            u1631 30F0                              u2511 2FB6  
                            u2431 2498                              u2351 2278  
                            u2271 1F04                              u3207 3524  
                            u1711 34A4                              u1640 310E  
                            u2520 2FCA                              u2440 24CE  
                            u2360 22D6                              u2600 2BE0  
                            u1720 2DE6                              u2280 1F1A  
                            u1641 310A                              u2521 2FC6  
                            u2441 24CA                              u2361 22D2  
                            u2601 2BDC                              u1721 2DE2  
                            u2281 1F16                              u3217 3550  
                            u1650 3128                              u2530 2FE4  
                            u2450 2532                              u2370 2312  
                            u2610 2C54                              u1730 2DFA  
                            u2290 1FBE                              u1651 3124  
                            u2531 2FE0                              u2451 252E  
                            u2371 230E                              u2611 2C50  
                            u1731 2DF6                              u2291 1FBA  
                            u3227 16BA                              u1660 3146  
                            u2540 2FF6                              u1900 36B0  
                            u2460 2544                              u2380 2340  
                            u1740 2E0E                              u2700 160A  
                            u1661 3142                              u2541 2FF2  
                            u1901 36AC                              u2461 2540  
                            u2381 233C                              u1741 2E0A  
                            u3237 1A02                              u2701 1606  
                            u1670 315C                              u2550 300A  
                            u1910 36C0                              u2390 2372  
                            u2710 16DC                              u2470 33A6  
                            u1671 3158                              u2551 3006  
                            u1911 36BC                              u2391 236E  
                            u3247 2A78                              u2711 16D8  
                            u2471 33A2                              u1680 3180  
                            u2560 301C                              u2480 2F7E  
                            u2640 3318                              u1920 365E  
                            u2800 1A36                              u2720 1704  
                            u1681 317C                              u2561 3018  
                            u2481 2F7A                              u2641 3314  
                            u1921 365A                              u3257 2A86  
                            u2801 1A32                              u2721 1700  
                            u1690 3874                              u2490 2F90  
                            u2570 3038                              u1930 366E  
                            u1770 2E7C                              u1754 2E24  
                            u2810 1A5E                              u2730 179A  
                            u1691 3870                              u2491 2F8C  
                            u2571 3034                              u2651 3322  
                            u1931 366A                              u1771 2E78  
                            u1755 2E20                              u3267 2DFC  
                            u2811 1A5A                              u2731 1796  
                            u1860 3746                              u2820 1ACE  
                            u1940 394C                              u2580 304A  
                            u1780 2E8E                              u1764 2E4C  
                            u2900 35A4                              u2740 1862  
                            u1861 3742                              u3277 1DFA  
                            u2821 1ACA                              u1941 3948  
                            u2581 3046                              u2661 3382  
                            u1781 2E8A                              u1765 2E48  
                            u2901 35A0                              u2741 185E  
                            u3197 26F4                              u1870 3756  
                            u2830 1B62                              u2590 3070  
                            u1950 3908                              u1790 2EA0  
                            u2670 396A                              u2750 1878  
                            u3287 3778                              u1871 3752  
                            u2831 1B5E                              u2591 306C  
                            u1951 3904                              u1791 2E9C  
                            u2671 3966                              u2751 1874  
                            u1880 388C                              u2840 1B92  
                            u1960 3924                              u2920 35DA  
                            u2760 18D8                              u3297 37BA  
                            u1881 3888                              u2841 1B8E  
                            u1961 391E                              u2921 35D6  
                            u2761 18D4                              u1890 389C  
                            u2850 1BA6                              u1970 3926  
                            u2770 195A                              u1891 3898  
                            u2851 1BA2                              u2771 1956  
                            u2860 1C48                              u2780 1970  
                            u1980 2DBA                              u2861 1C44  
                            u2781 196C                              u1981 2DB6  
                            u2870 1C78                              u2918 35B2  
                            u1990 3AF4                              u2790 19D0  
                            u2871 1C74                              u2919 35C6  
                            u1991 3AEE                              u2791 19CC  
                            u2880 1C8C                              u2881 1C88  
                            u2891 3586                              _TMR2 000FCC  
                  ??_isEmptyQueue 00A5                     ?_LCDPrintChar 00A8  
                            _head 0090                              _main 258E  
                            _rear 00CB                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf2 000FDF  
                            fsr1l 000FE1                              fsr2l 000FD9  
                            btemp 003C                  ?_WritePort_BBSPI 00A0  
                            prodh 000FF4                              prodl 000FF3  
                            start 000E                 _LCDMoveCursor$748 00A5  
              __size_of_LCDPutStr 0040                     __CFG_IESO$OFF 000000  
                   _state_settime 0097                     __CFG_MCLRE$ON 000000  
                  ?_LCDMoveCursor 00A3                      ___param_bank 000000  
                  i2_remove_timer 28CA           __end_of_queueInitialize 34AA  
                __end_of_LCDPrint 3772                      dispatch@node 00B1  
                 LTD_process@temp 00B0                       LCDPrint@pos 00A8  
                     LCDPrint@ptr 00A9                             ?_main 0001  
                 __end_of___awdiv 2F6A                             STR_10 1023  
                           STR_11 1034                             STR_20 1034  
                           STR_12 105C                             STR_13 1023  
                           STR_21 1086                             STR_14 1034  
                           STR_30 108F                             STR_22 1012  
                           STR_15 107F                             STR_23 1001  
                           STR_16 1034                             STR_24 1086  
                           STR_25 108B                             STR_17 1078  
                           STR_18 1095                             STR_26 108F  
                           STR_27 1095                             STR_19 1092  
                           STR_28 1092                   __end_of___awmod 3192  
                           STR_29 108F                             _T0CON 000FD5  
                 ___awdiv@divisor 009F                             _T1CON 000FCD  
                           _T2CON 000FCA                             i2l516 39D6  
                           i2l622 14DA                             i2l614 15DA  
                           i2l519 3AC4                             i2l527 32EC  
                           i2l616 1142                             i2l548 3B0E  
                           i2l590 29B2                             i2l592 29CE  
                           i2l589 2A60                             i2l785 3A24  
                 ___awdiv@counter 00A1                             _TMR1H 000FCF  
                           _TMR0L 000FD6                             _TMR1L 000FCE  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                   __CFG_PWRT$OFF 000000                   __end_of_getByte 2EA4  
                  __CFG_FCMEN$OFF 000000                       _turn_on_fan 37F6  
                 __end_of_dequeue 3390           __size_of_Port_BBSPIInit 001E  
                 __end_of_readDHT 2BA4              __size_of_changeState 00BC  
                 __end_of_enqueue 32EE                             _isSet 0094  
                           _count 0038                             _front 00CD  
     __size_of_initializeTaskList 010E                             _value 003B  
                           _state 0098                    ??_LCDPrintChar 00AA  
                  __CFG_BOREN$OFF 000000                             pclath 000FFA  
                           tablat 000FF5     __size_of_interrupt_initialize 0006  
             __size_of_LCDPutChar 0042                  __end_ofi2___wmul 3A26  
                           plusw0 000FEB                             plusw1 000FE3  
                           plusw2 000FDB               __size_of_LCDPutInst 0042  
                           ttemp5 003D                             ttemp6 0040  
                           ttemp7 0044                             status 000FD8  
         __size_of_osc_initialize 0006                             wtemp8 003D  
              __size_ofi2___awmod 00B0            __end_ofi2_remove_timer 2A62  
                  turn_on_fan@idx 009D                   __initialization 35DC  
                    __end_of_main 2730              __end_of_handleButton 258E  
           __size_of_turn_off_fan 004E                    _pin_initialize 3A26  
        __size_of_timer_interrupt 15EE                            ??_main 00C9  
                   __activetblptr 000003            __size_of_readButtonRB0 0052  
          __size_of_readButtonRA5 0052                         ??_LCDInit 00A3  
                    LCDPutChar@ch 00A2                 __end_of_LCDPutStr 3876  
                LTD_process@humid 00B2                      LCDPrint@line 00AB  
                          _ADCON1 000FC1                 register_timer@idx 00C2  
               register_timer@cur 00C0                __size_of_InitBBSPI 0012  
                          _CCPR4L 000F74          __size_of_turn_off_heater 0004  
                ___awdiv@dividend 009D                 register_timer@sum 00BE  
                    LCDPutInst@ch 00A2                 _temperature_dht11 008E  
                ??_turn_on_heater 009D                    _register_timer 1EAE  
                          i2l1029 3240                            i2l3078 39AE  
                          i2l3432 3AF8                            i2l3436 3A00  
                          i2l3700 3278                            i2l3438 3A1C  
                          i2l3702 3298                            i2l3710 28E0  
                          i2l3704 32C4                            i2l3720 29BA  
                          i2l3712 2908                            i2l3800 1148  
                          i2l2850 3192                            i2l3394 3AAA  
                          i2l3722 29F2                            i2l3714 296C  
                          i2l3810 1296                            i2l3802 1210  
                          i2l2860 31BE                            i2l2852 3196  
                          i2l3724 2A20                            i2l3716 2970  
                          i2l3708 28CC                            i2l3820 134A  
                          i2l3812 12A8                            i2l3804 121A  
                          i2l2870 31F6                            i2l2862 31C6  
                          i2l2854 31A4                            i2l3726 2A48  
                          i2l3718 2982                            i2l3830 1458  
                          i2l3822 1354                            i2l3814 12F8  
                          i2l3806 126A                            i2l2880 3230  
                          i2l2872 320C                            i2l2864 31D8  
                          i2l2856 31AC                            i2l3832 150E  
                          i2l3824 137C                            i2l3816 1328  
                          i2l3808 1284                            i2l2882 3238  
                          i2l2874 3214                            i2l2866 31E0  
                          i2l2858 31B0                            i2l3826 13AC  
                          i2l3818 1330                            i2l3834 1596  
                          i2l2876 321A                            i2l2868 31E8  
                          i2l3692 3242                            i2l3836 15BE  
                          i2l3828 13C0                            i2l3780 10D6  
                          i2l3772 10B4                            i2l2878 3220  
                          i2l3790 1112                            i2l3782 10E4  
                          i2l3774 10C2                            i2l3696 325A  
                          i2l3792 1120                            i2l3784 10E8  
                          i2l3776 10D0                            i2l3698 3270  
                          i2l3794 1122                            i2l3786 10FC  
                          i2l3778 10D2                            i2l3796 112A  
                          i2l3788 1104               initializeTaskList@i 00A5  
               _temperature_value 0099              __end_of_getSizeQueue 39AE  
                          _OSCCON 000FD3           _check_humid_to_turn_fan 3026  
                    LCDPutStr@ptr 00A3        fp__check_humid_to_turn_fan 0000  
                 ??_LCDMoveCursor 00A4                   ?i2_remove_timer 0001  
                    _turn_off_fan 36E2                    __CFG_XINST$OFF 000000  
                 _max_temperature 00D6                  _set_time_process 15F6  
            __size_of_isEmptyList 0018                  __end_of_dispatch 35DC  
                __end_of_get_time 3B34                      ?_LTD_process 0001  
                          ___wmul 39D8            __end_of_pin_initialize 3A4A  
                       ??___awdiv 00A1                         ??___awmod 00A1  
            __size_of_isFullQueue 001C                  ?_queueInitialize 0001  
                          _ledVal 003A                   turn_off_fan@idx 009D  
                          clear_0 3604                            clear_1 3616  
                          clear_2 3622                            clear_3 362E  
                ___awdiv@quotient 00A3                            _period 00CF  
                 ___awmod@divisor 009F                         ??_getByte 009D  
                 ___awmod@counter 00A1              __end_of_isEmptyQueue 3928  
                       ??_dequeue 00AA                         ??_readDHT 00A3  
                       ??_enqueue 000F            Port_BBSPIInit@port_dir 00A0  
               __end_ofi2___awmod 3242                  LCDMoveCursor@pos 00A3  
                    __mediumconst 0000            __size_ofi2_isEmptyList 0018  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8            __end_of_register_timer 224E  
                  i2___awmod@sign 0006                  _readTempAndHumid 3956  
                i2remove_timer@id 0005                        __accesstop 0060  
         __end_of__initialization 3634                         ?_LCDPrint 00A8  
                   _readButtonRB0 363E                     _readButtonRA5 3690  
                   ___rparam_used 000001        __end_of_turn_off_heat_pump 3B5C  
          __size_of_SendByteBBSPI 006A                    __pcstackCOMRAM 0001  
                    __pidataBANK0 3B34                   ?_pin_initialize 0001  
               __end_of_InitBBSPI 3B22                      ??_LCDPutChar 00A2  
                    ??_LCDPutInst 00A2              __end_of_LCDPrintChar 38B4  
    __end_of_print_temp_and_humid 2CB6                         ?i2___wmul 0001  
                    ?_start_timer 0001                   __CFG_OSC$INTIO7 000000  
                  _Port_BBSPIInit 3A8C                 ??_timer_interrupt 000F  
                 ?_register_timer 00A3         ??_check_humid_to_turn_fan 00AC  
                      __pbssBANK0 0060                        __pbssBANK1 0100  
                  _osc_initialize 3B40                    ?_readButtonRB0 009D  
                  ?_readButtonRA5 009D                __end_of_LCDPutChar 37B4  
                      ??_LCDPrint 00AB                __end_of_LCDPutInst 37F6  
               ??_turn_off_heater 009D                 _flag_change_state 0096  
                   i2_isEmptyList 3AF8             __size_of_handleButton 0340  
          start_timer@timer_vaddr 00A9                timer_interrupt@cur 0030  
              timer_interrupt@pos 0032                timer_interrupt@sum 002E  
                         ?___wmul 009D                           _CCP4CON 000F73  
              register_timer@prev 00BC           __size_of_set_speed_fan3 002E  
                 LCDPrintChar@pos 00A8                        ??i2___wmul 0005  
          __end_of_Port_BBSPIInit 3AAA                           _LCDInit 3514  
                   _SendByteBBSPI 34AA                      ?_turn_on_fan 009D  
                      _isFullList 3AC6             __size_of_getSizeQueue 002C  
            _timer_interrupt$2212 0028              _timer_interrupt$2213 002A  
            _timer_interrupt$2207 0025            __end_of_osc_initialize 3B46  
                       ?_dispatch 0001                         ?_get_time 009D  
                      _countRB0_1 0074                        _countRA5_1 007C  
                    _handleButton 224E                  WritePort_BBSPI@a 00A0  
           LCDMoveCursor@position 00A7                 _turn_on_heat_pump 3B50  
                      _countError 0095                     ?_remove_timer 0001  
                  ?i2_isEmptyList 0001              register_timer@period 00A3  
              ?_turn_on_heat_pump 0001                           __Hparam 0000  
                         __Lparam 0000             __size_of_isEmptyQueue 0036  
 __end_of_check_humid_to_turn_fan 30E0                           ___awdiv 2EA4  
                         ___awmod 30E0                   __size_of___wmul 0028  
        __size_of_WritePort_BBSPI 0020      __end_of_interrupt_initialize 3B4C  
                    __psmallconst 1000               ??_turn_on_heat_pump 009D  
                  remove_timer@id 00A2              __size_of_LTD_process 03F4  
                         __pcinit 35DC                           __ramtop 1000  
                    _getSizeQueue 3982                           _getByte 2DC4  
                         __ptext0 258E                           __ptext1 3A4A  
                         __ptext2 3390                           __ptext3 2CB6  
                         __ptext4 3426                           __ptext5 3A26  
                         __ptext6 3B40                           __ptext7 3B46  
                         __ptext8 3514                           __ptext9 3A8C  
                         _dequeue 32EE                           _readDHT 2A62  
                  ?_SendByteBBSPI 0001                   ?_Port_BBSPIInit 0001  
                         _enqueue 3242                         _T2CONbits 000FCA  
                   ??_changeState 009D                  ___awmod@dividend 009D  
         __size_ofi2_getSizeQueue 002A        __end_of_initializeTaskList 2DC4  
                         _task_id 0060          __end_of_set_time_process 1ABA  
                         _time_ms 0084                         _LCDPutStr 3836  
                      ??_dispatch 00B1                        ??_get_time 00A1  
                  __pintcode_body 109A                   ?_osc_initialize 0001  
            end_of_initialization 3634                   ??_readButtonRB0 009F  
                 ??_readButtonRA5 009F         __end_of_turn_on_heat_pump 3B54  
                ??i2_remove_timer 0001               fp__readTempAndHumid 0000  
                         int_func 109A               i2___wmul@multiplier 0001  
                    _isEmptyQueue 38F2                    ??_remove_timer 009D  
               LCDMoveCursor@line 00A4              _print_temp_and_humid 2BA4  
           __size_of_LCDPrintChar 003E                           postdec1 000FE5  
                         postdec2 000FDD          __end_of_readTempAndHumid 3982  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE              handleButton@checkRB0 00A5  
            handleButton@checkRA5 00A3                         _PORTAbits 000F80  
                       _PORTBbits 000F81                         _PORTDbits 000F83  
            handleButton@data_ptr 009F                    getByte@timeOut 00A0  
                      dequeue@idx 00AA                       ?_isFullList 0001  
                       _TRISAbits 000F92                         _TRISCbits 000F94  
                       _TRISDbits 000F95                         _TRISFbits 000F97  
                       _TRISGbits 000F98                 i2remove_timer@pos 0006  
            __size_of_start_timer 0096                        ?_LCDPutStr 00A3  
                       i2___awmod 3192               __end_of_changeState 3026  
             SendByteBBSPI@output 009D                      _LCDPrintChar 3876  
                 ??i2_isEmptyList 0001                     ??_isEmptyList 009D  
           ?_print_temp_and_humid 0001                  ??_pin_initialize 009D  
                   _check_timeout 0088                 __size_of_LCDPrint 0042  
                   ??_isFullQueue 0009             __end_of_LCDMoveCursor 38F2  
                 _timer_interrupt 0008                    __end_of___wmul 3A00  
          register_timer@callback 00AB          set_time_process@temp_161 00C7  
                    _firstReadRB0 00D2                      _firstReadRA5 00D4  
                  _set_speed_fan3 3928                   ??_SendByteBBSPI 009D  
          register_timer@data_ptr 00AE                     _secondReadRB0 00D1  
                   _secondReadRA5 00D3                _turn_off_heat_pump 3B58  
                       _InitBBSPI 3B10                  ??_register_timer 00B0  
                i2___wmul@product 0005                 ??_WritePort_BBSPI 00A1  
        __size_of_queueInitialize 0084               start_initialization 35DC  
               __size_ofi2___wmul 0026                   _turn_off_heater 3B54  
             ?_turn_off_heat_pump 0001                        ?i2___awmod 0001  
            __size_of_turn_on_fan 0040        __size_of_turn_on_heat_pump 0004  
            _interrupt_initialize 3B46                        enqueue@ptr 000A  
         __size_of_turn_on_heater 0004              ??_turn_off_heat_pump 009D  
             __size_of_isFullList 001A                          ??___wmul 00A1  
          __end_of_set_speed_fan3 3956               __end_of_isEmptyList 3AF8  
                     __pdataBANK0 00CB               __end_of_isFullQueue 3AC6  
                      ?_InitBBSPI 0001              __end_of_remove_timer 28CA  
                        ?_LCDInit 0001                       __pbssBIGRAM 0164  
                  i2_getSizeQueue 39AE                       _changeState 2F6A  
                     __pbssCOMRAM 0034                     __pcstackBANK0 009D  
                     ??_LCDPutStr 00A5             ?_interrupt_initialize 0001  
               __size_of_dispatch 0064            ??_print_temp_and_humid 00AC  
               __size_of_get_time 0012           __end_of_timer_interrupt 15F6  
                       __pintcode 0008                          ?___awdiv 009D  
                        ?___awmod 009D                   ?_set_speed_fan3 009D  
             timer_interrupt@prev 002C                    LCDPrintChar@ch 00A9  
                ??_Port_BBSPIInit 00A0                   enqueue@data_ptr 000D  
                        ?_getByte 0001            __end_ofi2_getSizeQueue 39D8  
                        ?_dequeue 00A5           __end_of_turn_off_heater 3B58  
                    _min_humidity 00D5                          ?_readDHT 0001  
                     __smallconst 1000                          ?_enqueue 000A  
             register_timer@delay 00A7                  ??_osc_initialize 009D  
        ?_check_humid_to_turn_fan 0001                 ?_set_time_process 0001  
                     ??i2___awmod 0005                  LCDPrintChar@line 00AA  
              ??_set_time_process 00C3                 ??_queueInitialize 00A3  
                  ___wmul@product 00A1                          _LCDPrint 3730  
                        _LATAbits 000F89                          _LATCbits 000F8B  
                        _LATDbits 000F8C                          _LATFbits 000F8E  
              _initializeTaskList 2CB6                          _PIE1bits 000F9D  
                     _isEmptyList 3AE0                     ?_turn_off_fan 009D  
                        i2u310_40 113E                          i2u310_41 113A  
                        i2u311_40 1210                          i2u311_41 120C  
                        i2u312_40 1296                          i2u312_41 1292  
                        i2u313_40 12A8                          i2u305_40 10C2  
                        i2u313_41 12A4                          i2u305_41 10BE  
                        i2u314_40 12F8                          i2u306_40 10D0  
                        i2u314_41 12F4                          i2u306_41 10CC  
                        i2u315_40 13C0                          i2u307_40 10FC  
                        i2u315_41 13BC                          i2u307_41 10F8  
                        i2u180_40 31A4                          i2u316_40 1458  
                        i2u308_40 1112                          i2u180_41 31A0  
                        i2u316_41 1454                          i2u308_41 110E  
                        i2u181_40 31BE                          i2u317_40 150E  
                        i2u309_40 1120                          i2u181_41 31BA  
                        i2u317_41 150A                          i2u309_41 111C  
                        i2u182_40 31D8                          i2u262_40 3AC2  
                        i2u318_40 15BE                          i2u182_41 31D4  
                        i2u262_41 3ABC                          i2u318_41 15BA  
                        i2u183_40 31F6                          i2u263_40 3AC4  
                        i2u183_41 31F2                          i2u184_40 320C  
                        i2u184_41 3208                          i2u185_40 3230  
                        i2u185_41 322C                          _PIR1bits 000F9E  
                       _task_list 0164                          i2u268_40 3B0C  
                        i2u268_41 3B06                          i2u293_40 3256  
                        i2u269_40 3B0E                          i2u293_41 3252  
                        i2u294_40 3270                          i2u294_41 326C  
                        i2u295_40 28E0                          i2u295_41 28DC  
                     _isFullQueue 3AAA                          i2u296_40 2904  
                        i2u296_41 2900                          i2u297_40 2982  
                        i2u297_41 297E                          i2u298_40 29F2  
                        i2u298_41 29EE                          i2u299_40 2A20  
                        i2u299_41 2A1C                     ??_LTD_process 00AC  
             ?_initializeTaskList 0001                 ?_readTempAndHumid 0001  
              ??_readTempAndHumid 00A8                   ?i2_getSizeQueue 0001  
               ___wmul@multiplier 009D                       ??_InitBBSPI 009D  
              SendByteBBSPI@input 009F                          i2___wmul 3A00  
                __size_of_LCDInit 0064                      ??_isFullList 009D  
               _system_initialize 3A4A              ??_initializeTaskList 00A5  
          ??_interrupt_initialize 009D                         copy_data0 35F0  
              i2___awmod@dividend 0001                ?_system_initialize 0001  
           __end_of_readButtonRB0 3690             __end_of_readButtonRA5 36E2  
         set_speed_fan3@dutyCycle 009D                    ??_turn_off_fan 009F  
             ??_system_initialize 00AA                  ?_timer_interrupt 0001  
                        __Hrparam 0000                    _turn_on_heater 3B4C  
                        __Lrparam 0000                       _RB0_pressed 009B  
                 _WritePort_BBSPI 3A6C                __end_of_isFullList 3AE0  
           __size_of_remove_timer 019A                  __size_of___awdiv 00C6  
                __size_of___awmod 00B2             i2___wmul@multiplicand 0003  
                     _RA5_pressed 009C               __end_of_LTD_process 1EAE  
                ?_turn_off_heater 0001                  __size_of_getByte 00E0  
                __size_of_dequeue 00A2                     ??_start_timer 00A7  
                 remove_timer@pos 00A1                  __size_of_readDHT 0142  
       __end_of_system_initialize 3A6C                  __size_of_enqueue 00AC  
                 fp__handleButton 0000                          __ptext10 3B10  
                        __ptext11 15F6                          __ptext20 2BA4  
                        __ptext12 2730                          __ptext21 224E  
                        __ptext13 3AE0                          __ptext30 2F6A  
                        __ptext22 363E                          __ptext14 1EAE  
                        __ptext31 1ABA                          __ptext23 3690  
                        __ptext15 3AC6                          __ptext40 2EA4  
                        __ptext32 3B4C                          __ptext24 32EE  
                        __ptext16 3578                          __ptext41 3876  
                        __ptext33 3B50                          __ptext25 38F2  
                        __ptext17 3956                          __ptext50 28CA  
                        __ptext42 3730                          __ptext34 37F6  
                        __ptext26 3982                          __ptext18 2A62  
                        __ptext51 3AF8                          __ptext43 3836  
                        __ptext35 3B54                          __ptext27 39D8  
                        __ptext19 2DC4                          __ptext52 3242  
                        __ptext44 3772                          __ptext36 3B58  
                        __ptext28 3026                          __ptext53 3A00  
                        __ptext45 38B4                          __ptext37 36E2  
                        __ptext29 3928                          __ptext54 3AAA  
                        __ptext46 37B4                          __ptext38 3B22  
                        __ptext55 39AE                          __ptext47 3A6C  
                        __ptext39 30E0                          __ptext56 3192  
                        __ptext48 34AA                          __ptext57 0000  
                        _dispatch 3578                          _get_time 3B22  
                        _countRB0 0078                          _countRA5 0080  
                   __size_of_main 01A2                    fp__changeState 0000  
          __end_of_turn_on_heater 3B50                      _remove_timer 2730  
           __end_ofi2_isEmptyList 3B10                       _ready_queue 0100  
         fp__print_temp_and_humid 0000                          getByte@i 009F  
                        getByte@j 00A2                          _num_task 0091  
         __size_ofi2_remove_timer 0198                          _stateRB0 0092  
                        int$flags 003C                          _stateRA5 0093  
                      _LCDPutChar 3772                        _LCDPutInst 37B4  
           __end_of_SendByteBBSPI 3514                 i2___awmod@divisor 0003  
               i2___awmod@counter 0005                        _INTCONbits 000FF2  
                    ?_changeState 0001                     ??_turn_on_fan 009F  
          __size_of_LCDMoveCursor 003E               __end_of_start_timer 3426  
                        intlevel2 0000                     ?_handleButton 009F  
         __end_of_WritePort_BBSPI 3A8C                   ?_turn_on_heater 0001  
                ??_set_speed_fan3 009F                       _LTD_process 1ABA  
     __size_of_turn_off_heat_pump 0004                   readDHT@checkSum 00A5  
                    _prev_time_ms 0034                     ?_getSizeQueue 0001  
         __size_of_pin_initialize 0024                   _queueInitialize 3426  
         WritePort_BBSPI@port_add 00A1              __end_of_turn_off_fan 3730  
      __size_of_system_initialize 0022                    _humidity_dht11 008C  
            set_time_process@temp 00C5                    ??_handleButton 00A1  
                  _humidity_value 009A           __size_of_register_timer 03A0  
             __end_of_turn_on_fan 3836                       dequeue@temp 00AC  
                   ?_isEmptyQueue 0001                  queueInitialize@i 00A3  
__size_of_check_humid_to_turn_fan 00BA                    readDHT@timeOut 00A6  
                    ?_isEmptyList 0001     __size_of_print_temp_and_humid 0112  
                    ?_isFullQueue 0001         __size_of_set_time_process 04C4  
