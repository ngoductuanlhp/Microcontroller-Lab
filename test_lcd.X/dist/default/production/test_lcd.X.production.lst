

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Sep 21 09:43:00 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22  0000                     
    23                           ; Version 2.10
    24                           ; Generated 31/07/2019 GMT
    25                           ; 
    26                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F8722 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     _OSCTUNE	set	3995
    58  0000                     _OSCCON	set	4051
    59  0000                     _ADCON1	set	4033
    60  0000                     _TRISC	set	3988
    61  0000                     _LATC	set	3979
    62  0000                     _TRISB	set	3987
    63  0000                     _LATB	set	3978
    64  0000                     _TRISA	set	3986
    65  0000                     _LATA	set	3977
    66  0000                     _LATD	set	3980
    67  0000                     _TRISD	set	3989
    68  0000                     _LATCbits	set	3979
    69  0000                     _LATAbits	set	3977
    70  0000                     _TRISCbits	set	3988
    71  0000                     _TRISAbits	set	3986
    72  0000                     _LATFbits	set	3982
    73  0000                     _TRISFbits	set	3991
    74                           
    75                           	psect	smallconst
    76  001000                     __psmallconst:
    77                           	opt callstack 0
    78  001000  00                 	db	0
    79  001001                     STR_1:
    80  001001  61                 	db	97	;'a'
    81  001002  62                 	db	98	;'b'
    82  001003  63                 	db	99	;'c'
    83  001004  00                 	db	0
    84                           
    85                           ; #config settings
    86  001005  00                 	db	0	; dummy byte at the end
    87  0000                     
    88                           	psect	cinit
    89  0012E4                     __pcinit:
    90                           	opt callstack 0
    91  0012E4                     start_initialization:
    92                           	opt callstack 0
    93  0012E4                     __initialization:
    94                           	opt callstack 0
    95  0012E4                     end_of_initialization:
    96                           	opt callstack 0
    97  0012E4                     __end_of__initialization:
    98                           	opt callstack 0
    99  0012E4  0E00               	movlw	low (__Lsmallconst shr (0+16))
   100  0012E6  6EF8               	movwf	tblptru,c
   101  0012E8  0E10               	movlw	high __Lsmallconst
   102  0012EA  6EF7               	movwf	tblptrh,c
   103  0012EC  0100               	movlb	0
   104  0012EE  EF28  F009         	goto	_main	;jump to C main() function
   105                           
   106                           	psect	cstackCOMRAM
   107  000001                     __pcstackCOMRAM:
   108                           	opt callstack 0
   109  000001                     SendByteBBSPI@output:
   110                           	opt callstack 0
   111                           
   112                           ; 1 bytes @ 0x0
   113  000001                     	ds	1
   114  000002                     SendByteBBSPI@bitcount:
   115                           	opt callstack 0
   116                           
   117                           ; 1 bytes @ 0x1
   118  000002                     	ds	1
   119  000003                     SendByteBBSPI@input:
   120                           	opt callstack 0
   121                           
   122                           ; 1 bytes @ 0x2
   123  000003                     	ds	1
   124  000004                     Port_BBSPIInit@port_dir:
   125                           	opt callstack 0
   126  000004                     WritePort_BBSPI@a:
   127                           	opt callstack 0
   128                           
   129                           ; 1 bytes @ 0x3
   130  000004                     	ds	1
   131  000005                     WritePort_BBSPI@port_add:
   132                           	opt callstack 0
   133                           
   134                           ; 1 bytes @ 0x4
   135  000005                     	ds	1
   136  000006                     ??_LCDPutInst:
   137  000006                     ??_LCDPutChar:
   138                           
   139                           ; 1 bytes @ 0x5
   140  000006                     	ds	1
   141  000007                     LCDPutChar@ch:
   142                           	opt callstack 0
   143  000007                     LCDPutInst@ch:
   144                           	opt callstack 0
   145                           
   146                           ; 1 bytes @ 0x6
   147  000007                     	ds	1
   148  000008                     ??_LCDInit:
   149  000008                     LCDMoveCursor@pos:
   150                           	opt callstack 0
   151  000008                     LCDPutStr@ptr:
   152                           	opt callstack 0
   153                           
   154                           ; 2 bytes @ 0x7
   155  000008                     	ds	1
   156  000009                     LCDMoveCursor@line:
   157                           	opt callstack 0
   158                           
   159                           ; 1 bytes @ 0x8
   160  000009                     	ds	1
   161  00000A                     _LCDMoveCursor$365:
   162                           	opt callstack 0
   163                           
   164                           ; 2 bytes @ 0x9
   165  00000A                     	ds	2
   166  00000C                     LCDMoveCursor@position:
   167                           	opt callstack 0
   168                           
   169                           ; 1 bytes @ 0xB
   170  00000C                     	ds	1
   171  00000D                     LCDPrint@pos:
   172                           	opt callstack 0
   173                           
   174                           ; 1 bytes @ 0xC
   175  00000D                     	ds	1
   176  00000E                     LCDPrint@ptr:
   177                           	opt callstack 0
   178                           
   179                           ; 2 bytes @ 0xD
   180  00000E                     	ds	2
   181  000010                     LCDPrint@line:
   182                           	opt callstack 0
   183                           
   184                           ; 1 bytes @ 0xF
   185  000010                     	ds	1
   186  000011                     
   187                           ; 1 bytes @ 0x10
   188 ;;
   189 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   190 ;;
   191 ;; *************** function _main *****************
   192 ;; Defined at:
   193 ;;		line 51 in file "main.c"
   194 ;; Parameters:    Size  Location     Type
   195 ;;		None
   196 ;; Auto vars:     Size  Location     Type
   197 ;;		None
   198 ;; Return value:  Size  Location     Type
   199 ;;                  1    wreg      void 
   200 ;; Registers used:
   201 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   202 ;; Tracked objects:
   203 ;;		On entry : 0/0
   204 ;;		On exit  : 0/0
   205 ;;		Unchanged: 0/0
   206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   211 ;;Total ram usage:        0 bytes
   212 ;; Hardware stack levels required when called:    5
   213 ;; This function calls:
   214 ;;		_LCDInit
   215 ;;		_LCDPrint
   216 ;;		_pin_init
   217 ;; This function is called by:
   218 ;;		Startup code after reset
   219 ;; This function uses a non-reentrant model
   220 ;;
   221                           
   222                           	psect	text0
   223  001250                     __ptext0:
   224                           	opt callstack 0
   225  001250                     _main:
   226                           	opt callstack 26
   227  001250  0E77               	movlw	119
   228  001252  6ED3               	movwf	211,c	;volatile
   229  001254  0E0F               	movlw	15
   230  001256  6E9B               	movwf	155,c	;volatile
   231  001258  EC3D  F009         	call	_pin_init	;wreg free
   232  00125C  ECA1  F008         	call	_LCDInit	;wreg free
   233  001260  0E05               	movlw	5
   234  001262  6E0D               	movwf	LCDPrint@pos^0,c
   235  001264  0E01               	movlw	low STR_1
   236  001266  6E0E               	movwf	LCDPrint@ptr^0,c
   237  001268  0E10               	movlw	high STR_1
   238  00126A  6E0F               	movwf	(LCDPrint@ptr+1)^0,c
   239  00126C  0E01               	movlw	1
   240  00126E  ECD1  F008         	call	_LCDPrint
   241  001272                     l104:
   242  001272  EF39  F009         	goto	l104
   243  001276  EF00  F000         	goto	start
   244  00127A                     __end_of_main:
   245                           	opt callstack 0
   246                           
   247 ;; *************** function _pin_init *****************
   248 ;; Defined at:
   249 ;;		line 27 in file "main.c"
   250 ;; Parameters:    Size  Location     Type
   251 ;;		None
   252 ;; Auto vars:     Size  Location     Type
   253 ;;		None
   254 ;; Return value:  Size  Location     Type
   255 ;;                  1    wreg      void 
   256 ;; Registers used:
   257 ;;		wreg, status,2
   258 ;; Tracked objects:
   259 ;;		On entry : 0/0
   260 ;;		On exit  : 0/0
   261 ;;		Unchanged: 0/0
   262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   267 ;;Total ram usage:        0 bytes
   268 ;; Hardware stack levels used:    1
   269 ;; This function calls:
   270 ;;		Nothing
   271 ;; This function is called by:
   272 ;;		_main
   273 ;; This function uses a non-reentrant model
   274 ;;
   275                           
   276                           	psect	text1
   277  00127A                     __ptext1:
   278                           	opt callstack 0
   279  00127A                     _pin_init:
   280                           	opt callstack 30
   281  00127A                     
   282                           ;main.c: 28:     OSCCON = 0b01110111;
   283  00127A  0E00               	movlw	0
   284  00127C  6E95               	movwf	149,c	;volatile
   285                           
   286                           ;main.c: 29:     OSCTUNE = 0b00001111;
   287  00127E  0E00               	movlw	0
   288  001280  6E8C               	movwf	140,c	;volatile
   289                           
   290                           ;main.c: 37: }
   291  001282  0E00               	movlw	0
   292  001284  6E89               	movwf	137,c	;volatile
   293  001286  0EF3               	movlw	243
   294  001288  6E92               	movwf	146,c	;volatile
   295  00128A  0E00               	movlw	0
   296  00128C  6E8A               	movwf	138,c	;volatile
   297  00128E  6893               	setf	147,c	;volatile
   298  001290  0E00               	movlw	0
   299  001292  6E8B               	movwf	139,c	;volatile
   300  001294  0ED7               	movlw	215
   301  001296  6E94               	movwf	148,c	;volatile
   302  001298  0E0F               	movlw	15
   303  00129A  6EC1               	movwf	193,c	;volatile
   304  00129C  0012               	return		;funcret
   305  00129E                     __end_of_pin_init:
   306                           	opt callstack 0
   307                           
   308 ;; *************** function _LCDPrint *****************
   309 ;; Defined at:
   310 ;;		line 209 in file "SPI_LCD.c"
   311 ;; Parameters:    Size  Location     Type
   312 ;;  line            1    wreg     unsigned char 
   313 ;;  pos             1   12[COMRAM] unsigned char 
   314 ;;  ptr             2   13[COMRAM] PTR const unsigned char 
   315 ;;		 -> STR_1(4), 
   316 ;; Auto vars:     Size  Location     Type
   317 ;;  line            1   15[COMRAM] unsigned char 
   318 ;; Return value:  Size  Location     Type
   319 ;;                  1    wreg      void 
   320 ;; Registers used:
   321 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   322 ;; Tracked objects:
   323 ;;		On entry : 0/0
   324 ;;		On exit  : 0/0
   325 ;;		Unchanged: 0/0
   326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   327 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   328 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   330 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   331 ;;Total ram usage:        4 bytes
   332 ;; Hardware stack levels used:    1
   333 ;; Hardware stack levels required when called:    4
   334 ;; This function calls:
   335 ;;		_LCDMoveCursor
   336 ;;		_LCDPutStr
   337 ;; This function is called by:
   338 ;;		_main
   339 ;; This function uses a non-reentrant model
   340 ;;
   341                           
   342                           	psect	text2
   343  0011A2                     __ptext2:
   344                           	opt callstack 0
   345  0011A2                     _LCDPrint:
   346                           	opt callstack 26
   347                           
   348                           ;incstack = 0
   349                           ;LCDPrint@line stored from wreg
   350  0011A2  6E10               	movwf	LCDPrint@line^0,c
   351  0011A4                     
   352                           ;SPI_LCD.c: 210:     if(line <0 || line > 2 || pos < 0 || pos > 15)
   353  0011A4  0E03               	movlw	3
   354  0011A6  6010               	cpfslt	LCDPrint@line^0,c
   355  0011A8  EFD8  F008         	goto	u131
   356  0011AC  EFDA  F008         	goto	u130
   357  0011B0                     u131:
   358  0011B0  EFEF  F008         	goto	l70
   359  0011B4                     u130:
   360  0011B4  0E0F               	movlw	15
   361  0011B6  640D               	cpfsgt	LCDPrint@pos^0,c
   362  0011B8  EFE0  F008         	goto	u141
   363  0011BC  EFE2  F008         	goto	u140
   364  0011C0                     u141:
   365  0011C0  EFE4  F008         	goto	l1081
   366  0011C4                     u140:
   367  0011C4  EFEF  F008         	goto	l70
   368  0011C8                     l1081:
   369                           
   370                           ;SPI_LCD.c: 212:     LCDMoveCursor(line, pos);
   371  0011C8  C00D  F008         	movff	LCDPrint@pos,LCDMoveCursor@pos
   372  0011CC  5010               	movf	LCDPrint@line^0,w,c
   373  0011CE  ECF0  F008         	call	_LCDMoveCursor
   374  0011D2                     
   375                           ;SPI_LCD.c: 213:     LCDPutStr(ptr);
   376  0011D2  C00E  F008         	movff	LCDPrint@ptr,LCDPutStr@ptr
   377  0011D6  C00F  F009         	movff	LCDPrint@ptr+1,LCDPutStr@ptr+1
   378  0011DA  EC0D  F009         	call	_LCDPutStr	;wreg free
   379  0011DE                     l70:
   380  0011DE  0012               	return		;funcret
   381  0011E0                     __end_of_LCDPrint:
   382                           	opt callstack 0
   383                           
   384 ;; *************** function _LCDPutStr *****************
   385 ;; Defined at:
   386 ;;		line 199 in file "SPI_LCD.c"
   387 ;; Parameters:    Size  Location     Type
   388 ;;  ptr             2    7[COMRAM] PTR const unsigned char 
   389 ;;		 -> STR_1(4), 
   390 ;; Auto vars:     Size  Location     Type
   391 ;;		None
   392 ;; Return value:  Size  Location     Type
   393 ;;                  1    wreg      void 
   394 ;; Registers used:
   395 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   396 ;; Tracked objects:
   397 ;;		On entry : 0/0
   398 ;;		On exit  : 0/0
   399 ;;		Unchanged: 0/0
   400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   401 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   404 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   405 ;;Total ram usage:        2 bytes
   406 ;; Hardware stack levels used:    1
   407 ;; Hardware stack levels required when called:    3
   408 ;; This function calls:
   409 ;;		_LCDPutChar
   410 ;; This function is called by:
   411 ;;		_LCDPrint
   412 ;; This function uses a non-reentrant model
   413 ;;
   414                           
   415                           	psect	text3
   416  00121A                     __ptext3:
   417                           	opt callstack 0
   418  00121A                     _LCDPutStr:
   419                           	opt callstack 26
   420  00121A                     
   421                           ;SPI_LCD.c: 199: void LCDPutStr (const char *ptr);SPI_LCD.c: 200: {;SPI_LCD.c: 201:     
      +                          while(*ptr) LCDPutChar(*(ptr++));
   422  00121A  EF19  F009         	goto	l1037
   423  00121E                     l1033:
   424  00121E  C008  FFF6         	movff	LCDPutStr@ptr,tblptrl
   425  001222  C009  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
   426  001226                     	if	0	;tblptru may be non-zero
   427  001226                     	endif
   428  001226                     	if	0	;tblptru may be non-zero
   429  001226                     	endif
   430  001226  0008               	tblrd		*
   431  001228  50F5               	movf	tablat,w,c
   432  00122A  EC3B  F008         	call	_LCDPutChar
   433  00122E  4A08               	infsnz	LCDPutStr@ptr^0,f,c
   434  001230  2A09               	incf	(LCDPutStr@ptr+1)^0,f,c
   435  001232                     l1037:
   436  001232  C008  FFF6         	movff	LCDPutStr@ptr,tblptrl
   437  001236  C009  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
   438  00123A                     	if	0	;tblptru may be non-zero
   439  00123A                     	endif
   440  00123A                     	if	0	;tblptru may be non-zero
   441  00123A                     	endif
   442  00123A  0008               	tblrd		*
   443  00123C  50F5               	movf	tablat,w,c
   444  00123E  0900               	iorlw	0
   445  001240  A4D8               	btfss	status,2,c
   446  001242  EF25  F009         	goto	u111
   447  001246  EF27  F009         	goto	u110
   448  00124A                     u111:
   449  00124A  EF0F  F009         	goto	l1033
   450  00124E                     u110:
   451  00124E  0012               	return		;funcret
   452  001250                     __end_of_LCDPutStr:
   453                           	opt callstack 0
   454                           
   455 ;; *************** function _LCDPutChar *****************
   456 ;; Defined at:
   457 ;;		line 161 in file "SPI_LCD.c"
   458 ;; Parameters:    Size  Location     Type
   459 ;;  ch              1    wreg     unsigned char 
   460 ;; Auto vars:     Size  Location     Type
   461 ;;  ch              1    6[COMRAM] unsigned char 
   462 ;; Return value:  Size  Location     Type
   463 ;;                  1    wreg      void 
   464 ;; Registers used:
   465 ;;		wreg, status,2, status,0, cstack
   466 ;; Tracked objects:
   467 ;;		On entry : 0/0
   468 ;;		On exit  : 0/0
   469 ;;		Unchanged: 0/0
   470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   472 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   473 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   474 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   475 ;;Total ram usage:        2 bytes
   476 ;; Hardware stack levels used:    1
   477 ;; Hardware stack levels required when called:    2
   478 ;; This function calls:
   479 ;;		_WritePort_BBSPI
   480 ;; This function is called by:
   481 ;;		_LCDPutStr
   482 ;; This function uses a non-reentrant model
   483 ;;
   484                           
   485                           	psect	text4
   486  001076                     __ptext4:
   487                           	opt callstack 0
   488  001076                     _LCDPutChar:
   489                           	opt callstack 26
   490                           
   491                           ;incstack = 0
   492                           ;LCDPutChar@ch stored from wreg
   493  001076  6E07               	movwf	LCDPutChar@ch^0,c
   494  001078                     
   495                           ;SPI_LCD.c: 161: void LCDPutChar (unsigned char ch);SPI_LCD.c: 162: {;SPI_LCD.c: 163:   
      +                            _delay((unsigned long)((5)*(10000000/4000.0)));
   496  001078  0E11               	movlw	17
   497  00107A  6E06               	movwf	??_LCDPutChar^0,c
   498  00107C  0E3A               	movlw	58
   499  00107E                     u157:
   500  00107E  2EE8               	decfsz	wreg,f,c
   501  001080  D7FE               	bra	u157
   502  001082  2E06               	decfsz	??_LCDPutChar^0,f,c
   503  001084  D7FC               	bra	u157
   504  001086  D000               	nop2	
   505  001088                     
   506                           ;SPI_LCD.c: 164:     WritePort_BBSPI (0x12, 0x80);
   507  001088  0E80               	movlw	128
   508  00108A  6E04               	movwf	WritePort_BBSPI@a^0,c
   509  00108C  0E12               	movlw	18
   510  00108E  EC5C  F009         	call	_WritePort_BBSPI
   511  001092                     
   512                           ;SPI_LCD.c: 165:     _delay((unsigned long)((1)*(10000000/4000.0)));
   513  001092  0E04               	movlw	4
   514  001094  6E06               	movwf	??_LCDPutChar^0,c
   515  001096  0E3E               	movlw	62
   516  001098                     u167:
   517  001098  2EE8               	decfsz	wreg,f,c
   518  00109A  D7FE               	bra	u167
   519  00109C  2E06               	decfsz	??_LCDPutChar^0,f,c
   520  00109E  D7FC               	bra	u167
   521  0010A0                     
   522                           ;SPI_LCD.c: 166:     WritePort_BBSPI (0x13, ch);
   523  0010A0  C007  F004         	movff	LCDPutChar@ch,WritePort_BBSPI@a
   524  0010A4  0E13               	movlw	19
   525  0010A6  EC5C  F009         	call	_WritePort_BBSPI
   526  0010AA                     
   527                           ;SPI_LCD.c: 167:     _delay((unsigned long)((1)*(10000000/4000.0)));
   528  0010AA  0E04               	movlw	4
   529  0010AC  6E06               	movwf	??_LCDPutChar^0,c
   530  0010AE  0E3E               	movlw	62
   531  0010B0                     u177:
   532  0010B0  2EE8               	decfsz	wreg,f,c
   533  0010B2  D7FE               	bra	u177
   534  0010B4  2E06               	decfsz	??_LCDPutChar^0,f,c
   535  0010B6  D7FC               	bra	u177
   536  0010B8                     
   537                           ;SPI_LCD.c: 168:     WritePort_BBSPI (0x12, 0xC0);
   538  0010B8  0EC0               	movlw	192
   539  0010BA  6E04               	movwf	WritePort_BBSPI@a^0,c
   540  0010BC  0E12               	movlw	18
   541  0010BE  EC5C  F009         	call	_WritePort_BBSPI
   542  0010C2                     
   543                           ;SPI_LCD.c: 169:     _delay((unsigned long)((1)*(10000000/4000.0)));
   544  0010C2  0E04               	movlw	4
   545  0010C4  6E06               	movwf	??_LCDPutChar^0,c
   546  0010C6  0E3E               	movlw	62
   547  0010C8                     u187:
   548  0010C8  2EE8               	decfsz	wreg,f,c
   549  0010CA  D7FE               	bra	u187
   550  0010CC  2E06               	decfsz	??_LCDPutChar^0,f,c
   551  0010CE  D7FC               	bra	u187
   552  0010D0                     
   553                           ;SPI_LCD.c: 170:     WritePort_BBSPI (0x12, 0x00);
   554  0010D0  0E00               	movlw	0
   555  0010D2  6E04               	movwf	WritePort_BBSPI@a^0,c
   556  0010D4  0E12               	movlw	18
   557  0010D6  EC5C  F009         	call	_WritePort_BBSPI
   558  0010DA  0012               	return		;funcret
   559  0010DC                     __end_of_LCDPutChar:
   560                           	opt callstack 0
   561                           
   562 ;; *************** function _LCDMoveCursor *****************
   563 ;; Defined at:
   564 ;;		line 204 in file "SPI_LCD.c"
   565 ;; Parameters:    Size  Location     Type
   566 ;;  line            1    wreg     unsigned char 
   567 ;;  pos             1    7[COMRAM] unsigned char 
   568 ;; Auto vars:     Size  Location     Type
   569 ;;  line            1    8[COMRAM] unsigned char 
   570 ;;  position        1   11[COMRAM] unsigned char 
   571 ;; Return value:  Size  Location     Type
   572 ;;                  1    wreg      void 
   573 ;; Registers used:
   574 ;;		wreg, status,2, status,0, cstack
   575 ;; Tracked objects:
   576 ;;		On entry : 0/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   580 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   581 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   583 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   584 ;;Total ram usage:        5 bytes
   585 ;; Hardware stack levels used:    1
   586 ;; Hardware stack levels required when called:    3
   587 ;; This function calls:
   588 ;;		_LCDPutInst
   589 ;; This function is called by:
   590 ;;		_LCDPrint
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           
   594                           	psect	text5
   595  0011E0                     __ptext5:
   596                           	opt callstack 0
   597  0011E0                     _LCDMoveCursor:
   598                           	opt callstack 26
   599                           
   600                           ;incstack = 0
   601                           ;LCDMoveCursor@line stored from wreg
   602  0011E0  6E09               	movwf	LCDMoveCursor@line^0,c
   603  0011E2                     
   604                           ;SPI_LCD.c: 205:     unsigned char position = (line == 0) ? (128 + pos) : (192 + pos);
   605  0011E2  5009               	movf	LCDMoveCursor@line^0,w,c
   606  0011E4  B4D8               	btfsc	status,2,c
   607  0011E6  EFF7  F008         	goto	u121
   608  0011EA  EFF9  F008         	goto	u120
   609  0011EE                     u121:
   610  0011EE  EF01  F009         	goto	l1043
   611  0011F2                     u120:
   612  0011F2  0EC0               	movlw	192
   613  0011F4  2408               	addwf	LCDMoveCursor@pos^0,w,c
   614  0011F6  6E0A               	movwf	_LCDMoveCursor$365^0,c
   615  0011F8  6A0B               	clrf	(_LCDMoveCursor$365+1)^0,c
   616  0011FA  0E00               	movlw	0
   617  0011FC  220B               	addwfc	(_LCDMoveCursor$365+1)^0,f,c
   618  0011FE  EF07  F009         	goto	l1045
   619  001202                     l1043:
   620  001202  0E80               	movlw	128
   621  001204  2408               	addwf	LCDMoveCursor@pos^0,w,c
   622  001206  6E0A               	movwf	_LCDMoveCursor$365^0,c
   623  001208  6A0B               	clrf	(_LCDMoveCursor$365+1)^0,c
   624  00120A  0E00               	movlw	0
   625  00120C  220B               	addwfc	(_LCDMoveCursor$365+1)^0,f,c
   626  00120E                     l1045:
   627  00120E  C00A  F00C         	movff	_LCDMoveCursor$365,LCDMoveCursor@position
   628  001212                     
   629                           ;SPI_LCD.c: 206:     LCDPutInst(position);
   630  001212  500C               	movf	LCDMoveCursor@position^0,w,c
   631  001214  EC6E  F008         	call	_LCDPutInst
   632  001218  0012               	return		;funcret
   633  00121A                     __end_of_LCDMoveCursor:
   634                           	opt callstack 0
   635                           
   636 ;; *************** function _LCDInit *****************
   637 ;; Defined at:
   638 ;;		line 46 in file "SPI_LCD.c"
   639 ;; Parameters:    Size  Location     Type
   640 ;;		None
   641 ;; Auto vars:     Size  Location     Type
   642 ;;		None
   643 ;; Return value:  Size  Location     Type
   644 ;;                  1    wreg      void 
   645 ;; Registers used:
   646 ;;		wreg, status,2, status,0, cstack
   647 ;; Tracked objects:
   648 ;;		On entry : 0/0
   649 ;;		On exit  : 0/0
   650 ;;		Unchanged: 0/0
   651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   654 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   655 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   656 ;;Total ram usage:        1 bytes
   657 ;; Hardware stack levels used:    1
   658 ;; Hardware stack levels required when called:    3
   659 ;; This function calls:
   660 ;;		_InitBBSPI
   661 ;;		_LCDPutInst
   662 ;;		_Port_BBSPIInit
   663 ;;		_WritePort_BBSPI
   664 ;; This function is called by:
   665 ;;		_main
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           	psect	text6
   670  001142                     __ptext6:
   671                           	opt callstack 0
   672  001142                     _LCDInit:
   673                           	opt callstack 27
   674  001142                     
   675                           ;SPI_LCD.c: 48:     InitBBSPI();
   676  001142  EC69  F009         	call	_InitBBSPI	;wreg free
   677  001146                     
   678                           ;SPI_LCD.c: 49:     TRISFbits.TRISF6 = 0;
   679  001146  9C97               	bcf	151,6,c	;volatile
   680  001148                     
   681                           ;SPI_LCD.c: 50:     LATFbits.LATF6 = 0;
   682  001148  9C8E               	bcf	142,6,c	;volatile
   683  00114A                     
   684                           ;SPI_LCD.c: 51:     _delay((unsigned long)((5)*(10000000/4000.0)));
   685  00114A  0E11               	movlw	17
   686  00114C  6E08               	movwf	??_LCDInit^0,c
   687  00114E  0E3A               	movlw	58
   688  001150                     u197:
   689  001150  2EE8               	decfsz	wreg,f,c
   690  001152  D7FE               	bra	u197
   691  001154  2E08               	decfsz	??_LCDInit^0,f,c
   692  001156  D7FC               	bra	u197
   693  001158  D000               	nop2	
   694  00115A                     
   695                           ;SPI_LCD.c: 52:     LATFbits.LATF6 = 1;
   696  00115A  8C8E               	bsf	142,6,c	;volatile
   697  00115C                     
   698                           ;SPI_LCD.c: 53:     Port_BBSPIInit (0x00);
   699  00115C  0E00               	movlw	0
   700  00115E  EC4F  F009         	call	_Port_BBSPIInit
   701  001162                     
   702                           ;SPI_LCD.c: 54:     Port_BBSPIInit (0x01);
   703  001162  0E01               	movlw	1
   704  001164  EC4F  F009         	call	_Port_BBSPIInit
   705  001168                     
   706                           ;SPI_LCD.c: 55:     WritePort_BBSPI (0x12, 0);
   707  001168  0E00               	movlw	0
   708  00116A  6E04               	movwf	WritePort_BBSPI@a^0,c
   709  00116C  0E12               	movlw	18
   710  00116E  EC5C  F009         	call	_WritePort_BBSPI
   711  001172                     
   712                           ;SPI_LCD.c: 56:     _delay((unsigned long)((15)*(10000000/4000.0)));
   713  001172  0E31               	movlw	49
   714  001174  6E08               	movwf	??_LCDInit^0,c
   715  001176  0EB2               	movlw	178
   716  001178                     u207:
   717  001178  2EE8               	decfsz	wreg,f,c
   718  00117A  D7FE               	bra	u207
   719  00117C  2E08               	decfsz	??_LCDInit^0,f,c
   720  00117E  D7FC               	bra	u207
   721  001180  D000               	nop2	
   722  001182                     
   723                           ;SPI_LCD.c: 57:     LCDPutInst(0x32);
   724  001182  0E32               	movlw	50
   725  001184  EC6E  F008         	call	_LCDPutInst
   726  001188                     
   727                           ;SPI_LCD.c: 58:     LCDPutInst(0x3C);
   728  001188  0E3C               	movlw	60
   729  00118A  EC6E  F008         	call	_LCDPutInst
   730  00118E                     
   731                           ;SPI_LCD.c: 59:     LCDPutInst(0x0C);
   732  00118E  0E0C               	movlw	12
   733  001190  EC6E  F008         	call	_LCDPutInst
   734  001194                     
   735                           ;SPI_LCD.c: 60:     LCDPutInst(0x01);
   736  001194  0E01               	movlw	1
   737  001196  EC6E  F008         	call	_LCDPutInst
   738  00119A                     
   739                           ;SPI_LCD.c: 61:     LCDPutInst(0x06);
   740  00119A  0E06               	movlw	6
   741  00119C  EC6E  F008         	call	_LCDPutInst
   742  0011A0  0012               	return		;funcret
   743  0011A2                     __end_of_LCDInit:
   744                           	opt callstack 0
   745                           
   746 ;; *************** function _Port_BBSPIInit *****************
   747 ;; Defined at:
   748 ;;		line 124 in file "SPI_LCD.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;  port_dir        1    wreg     unsigned char 
   751 ;; Auto vars:     Size  Location     Type
   752 ;;  port_dir        1    3[COMRAM] unsigned char 
   753 ;; Return value:  Size  Location     Type
   754 ;;                  1    wreg      void 
   755 ;; Registers used:
   756 ;;		wreg, status,2, status,0, cstack
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   763 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   765 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   766 ;;Total ram usage:        1 bytes
   767 ;; Hardware stack levels used:    1
   768 ;; Hardware stack levels required when called:    1
   769 ;; This function calls:
   770 ;;		_SendByteBBSPI
   771 ;; This function is called by:
   772 ;;		_LCDInit
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776                           	psect	text7
   777  00129E                     __ptext7:
   778                           	opt callstack 0
   779  00129E                     _Port_BBSPIInit:
   780                           	opt callstack 28
   781                           
   782                           ;incstack = 0
   783                           ;Port_BBSPIInit@port_dir stored from wreg
   784  00129E  6E04               	movwf	Port_BBSPIInit@port_dir^0,c
   785  0012A0                     
   786                           ;SPI_LCD.c: 124: void Port_BBSPIInit (unsigned char port_dir);SPI_LCD.c: 125: {;SPI_LCD.
      +                          c: 129:     LATAbits.LATA2 = 0;
   787  0012A0  9489               	bcf	137,2,c	;volatile
   788  0012A2                     
   789                           ;SPI_LCD.c: 130:     SendByteBBSPI(0x40);
   790  0012A2  0E40               	movlw	64
   791  0012A4  EC03  F008         	call	_SendByteBBSPI
   792                           
   793                           ;SPI_LCD.c: 131:     SendByteBBSPI(port_dir);
   794  0012A8  5004               	movf	Port_BBSPIInit@port_dir^0,w,c
   795  0012AA  EC03  F008         	call	_SendByteBBSPI
   796                           
   797                           ;SPI_LCD.c: 132:     SendByteBBSPI(0x00);
   798  0012AE  0E00               	movlw	0
   799  0012B0  EC03  F008         	call	_SendByteBBSPI
   800  0012B4                     
   801                           ;SPI_LCD.c: 133:     LATAbits.LATA2 = 1;
   802  0012B4  8489               	bsf	137,2,c	;volatile
   803  0012B6  0012               	return		;funcret
   804  0012B8                     __end_of_Port_BBSPIInit:
   805                           	opt callstack 0
   806                           
   807 ;; *************** function _LCDPutInst *****************
   808 ;; Defined at:
   809 ;;		line 180 in file "SPI_LCD.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;  ch              1    wreg     unsigned char 
   812 ;; Auto vars:     Size  Location     Type
   813 ;;  ch              1    6[COMRAM] unsigned char 
   814 ;; Return value:  Size  Location     Type
   815 ;;                  1    wreg      void 
   816 ;; Registers used:
   817 ;;		wreg, status,2, status,0, cstack
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   824 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   825 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   826 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   827 ;;Total ram usage:        2 bytes
   828 ;; Hardware stack levels used:    1
   829 ;; Hardware stack levels required when called:    2
   830 ;; This function calls:
   831 ;;		_WritePort_BBSPI
   832 ;; This function is called by:
   833 ;;		_LCDInit
   834 ;;		_LCDMoveCursor
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838                           	psect	text8
   839  0010DC                     __ptext8:
   840                           	opt callstack 0
   841  0010DC                     _LCDPutInst:
   842                           	opt callstack 26
   843                           
   844                           ;incstack = 0
   845                           ;LCDPutInst@ch stored from wreg
   846  0010DC  6E07               	movwf	LCDPutInst@ch^0,c
   847  0010DE                     
   848                           ;SPI_LCD.c: 180: void LCDPutInst (unsigned char ch);SPI_LCD.c: 181: {;SPI_LCD.c: 182:   
      +                            _delay((unsigned long)((5)*(10000000/4000.0)));
   849  0010DE  0E11               	movlw	17
   850  0010E0  6E06               	movwf	??_LCDPutInst^0,c
   851  0010E2  0E3A               	movlw	58
   852  0010E4                     u217:
   853  0010E4  2EE8               	decfsz	wreg,f,c
   854  0010E6  D7FE               	bra	u217
   855  0010E8  2E06               	decfsz	??_LCDPutInst^0,f,c
   856  0010EA  D7FC               	bra	u217
   857  0010EC  D000               	nop2	
   858  0010EE                     
   859                           ;SPI_LCD.c: 183:     WritePort_BBSPI (0x12, 0x00);
   860  0010EE  0E00               	movlw	0
   861  0010F0  6E04               	movwf	WritePort_BBSPI@a^0,c
   862  0010F2  0E12               	movlw	18
   863  0010F4  EC5C  F009         	call	_WritePort_BBSPI
   864  0010F8                     
   865                           ;SPI_LCD.c: 184:     _delay((unsigned long)((1)*(10000000/4000.0)));
   866  0010F8  0E04               	movlw	4
   867  0010FA  6E06               	movwf	??_LCDPutInst^0,c
   868  0010FC  0E3E               	movlw	62
   869  0010FE                     u227:
   870  0010FE  2EE8               	decfsz	wreg,f,c
   871  001100  D7FE               	bra	u227
   872  001102  2E06               	decfsz	??_LCDPutInst^0,f,c
   873  001104  D7FC               	bra	u227
   874  001106                     
   875                           ;SPI_LCD.c: 185:     WritePort_BBSPI (0x13, ch);
   876  001106  C007  F004         	movff	LCDPutInst@ch,WritePort_BBSPI@a
   877  00110A  0E13               	movlw	19
   878  00110C  EC5C  F009         	call	_WritePort_BBSPI
   879  001110                     
   880                           ;SPI_LCD.c: 186:     _delay((unsigned long)((1)*(10000000/4000.0)));
   881  001110  0E04               	movlw	4
   882  001112  6E06               	movwf	??_LCDPutInst^0,c
   883  001114  0E3E               	movlw	62
   884  001116                     u237:
   885  001116  2EE8               	decfsz	wreg,f,c
   886  001118  D7FE               	bra	u237
   887  00111A  2E06               	decfsz	??_LCDPutInst^0,f,c
   888  00111C  D7FC               	bra	u237
   889  00111E                     
   890                           ;SPI_LCD.c: 187:     WritePort_BBSPI (0x12,0x40);
   891  00111E  0E40               	movlw	64
   892  001120  6E04               	movwf	WritePort_BBSPI@a^0,c
   893  001122  0E12               	movlw	18
   894  001124  EC5C  F009         	call	_WritePort_BBSPI
   895  001128                     
   896                           ;SPI_LCD.c: 188:     _delay((unsigned long)((1)*(10000000/4000.0)));
   897  001128  0E04               	movlw	4
   898  00112A  6E06               	movwf	??_LCDPutInst^0,c
   899  00112C  0E3E               	movlw	62
   900  00112E                     u247:
   901  00112E  2EE8               	decfsz	wreg,f,c
   902  001130  D7FE               	bra	u247
   903  001132  2E06               	decfsz	??_LCDPutInst^0,f,c
   904  001134  D7FC               	bra	u247
   905  001136                     
   906                           ;SPI_LCD.c: 189:     WritePort_BBSPI (0x12, 0x00);
   907  001136  0E00               	movlw	0
   908  001138  6E04               	movwf	WritePort_BBSPI@a^0,c
   909  00113A  0E12               	movlw	18
   910  00113C  EC5C  F009         	call	_WritePort_BBSPI
   911  001140  0012               	return		;funcret
   912  001142                     __end_of_LCDPutInst:
   913                           	opt callstack 0
   914                           
   915 ;; *************** function _WritePort_BBSPI *****************
   916 ;; Defined at:
   917 ;;		line 145 in file "SPI_LCD.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;  port_add        1    wreg     unsigned char 
   920 ;;  a               1    3[COMRAM] unsigned char 
   921 ;; Auto vars:     Size  Location     Type
   922 ;;  port_add        1    4[COMRAM] unsigned char 
   923 ;; Return value:  Size  Location     Type
   924 ;;                  1    wreg      void 
   925 ;; Registers used:
   926 ;;		wreg, status,2, status,0, cstack
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   932 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   933 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   935 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   936 ;;Total ram usage:        2 bytes
   937 ;; Hardware stack levels used:    1
   938 ;; Hardware stack levels required when called:    1
   939 ;; This function calls:
   940 ;;		_SendByteBBSPI
   941 ;; This function is called by:
   942 ;;		_LCDInit
   943 ;;		_LCDPutChar
   944 ;;		_LCDPutInst
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948                           	psect	text9
   949  0012B8                     __ptext9:
   950                           	opt callstack 0
   951  0012B8                     _WritePort_BBSPI:
   952                           	opt callstack 26
   953                           
   954                           ;incstack = 0
   955                           ;WritePort_BBSPI@port_add stored from wreg
   956  0012B8  6E05               	movwf	WritePort_BBSPI@port_add^0,c
   957  0012BA                     
   958                           ;SPI_LCD.c: 145: void WritePort_BBSPI (unsigned char port_add, unsigned char a);SPI_LCD.
      +                          c: 146: {;SPI_LCD.c: 147:     LATAbits.LATA2 = 0;
   959  0012BA  9489               	bcf	137,2,c	;volatile
   960  0012BC                     
   961                           ;SPI_LCD.c: 148:     SendByteBBSPI(0x40);
   962  0012BC  0E40               	movlw	64
   963  0012BE  EC03  F008         	call	_SendByteBBSPI
   964                           
   965                           ;SPI_LCD.c: 149:     SendByteBBSPI(port_add);
   966  0012C2  5005               	movf	WritePort_BBSPI@port_add^0,w,c
   967  0012C4  EC03  F008         	call	_SendByteBBSPI
   968                           
   969                           ;SPI_LCD.c: 150:     SendByteBBSPI(a);
   970  0012C8  5004               	movf	WritePort_BBSPI@a^0,w,c
   971  0012CA  EC03  F008         	call	_SendByteBBSPI
   972  0012CE                     
   973                           ;SPI_LCD.c: 151:     LATAbits.LATA2 = 1;
   974  0012CE  8489               	bsf	137,2,c	;volatile
   975  0012D0  0012               	return		;funcret
   976  0012D2                     __end_of_WritePort_BBSPI:
   977                           	opt callstack 0
   978                           
   979 ;; *************** function _SendByteBBSPI *****************
   980 ;; Defined at:
   981 ;;		line 92 in file "SPI_LCD.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;  output          1    wreg     unsigned char 
   984 ;; Auto vars:     Size  Location     Type
   985 ;;  output          1    0[COMRAM] unsigned char 
   986 ;;  input           1    2[COMRAM] unsigned char 
   987 ;;  bitcount        1    1[COMRAM] unsigned char 
   988 ;; Return value:  Size  Location     Type
   989 ;;                  1    wreg      void 
   990 ;; Registers used:
   991 ;;		wreg, status,2, status,0
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   998 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1000 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1001 ;;Total ram usage:        3 bytes
  1002 ;; Hardware stack levels used:    1
  1003 ;; This function calls:
  1004 ;;		Nothing
  1005 ;; This function is called by:
  1006 ;;		_Port_BBSPIInit
  1007 ;;		_WritePort_BBSPI
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           	psect	text10
  1012  001006                     __ptext10:
  1013                           	opt callstack 0
  1014  001006                     _SendByteBBSPI:
  1015                           	opt callstack 26
  1016                           
  1017                           ;incstack = 0
  1018                           ;SendByteBBSPI@output stored from wreg
  1019  001006  6E01               	movwf	SendByteBBSPI@output^0,c
  1020  001008                     
  1021                           ;SPI_LCD.c: 92: void SendByteBBSPI (unsigned char output);SPI_LCD.c: 93: {;SPI_LCD.c: 94
      +                          :     unsigned char bitcount;;SPI_LCD.c: 95:     unsigned char input = output;
  1022  001008  C001  F003         	movff	SendByteBBSPI@output,SendByteBBSPI@input
  1023  00100C                     
  1024                           ;SPI_LCD.c: 97:     for(bitcount=0;bitcount<8;bitcount++)
  1025  00100C  0E00               	movlw	0
  1026  00100E  6E02               	movwf	SendByteBBSPI@bitcount^0,c
  1027  001010                     l33:
  1028                           
  1029                           ;SPI_LCD.c: 98:     {;SPI_LCD.c: 100:         if(output & 0x80)
  1030  001010  AE01               	btfss	SendByteBBSPI@output^0,7,c
  1031  001012  EF0D  F008         	goto	u81
  1032  001016  EF0F  F008         	goto	u80
  1033  00101A                     u81:
  1034  00101A  EF12  F008         	goto	l35
  1035  00101E                     u80:
  1036  00101E                     
  1037                           ;SPI_LCD.c: 101:             LATCbits.LATC5 = 1;
  1038  00101E  8A8B               	bsf	139,5,c	;volatile
  1039  001020  EF13  F008         	goto	l36
  1040  001024                     l35:
  1041                           
  1042                           ;SPI_LCD.c: 103:             LATCbits.LATC5 = 0;
  1043  001024  9A8B               	bcf	139,5,c	;volatile
  1044  001026                     l36:
  1045                           
  1046                           ;SPI_LCD.c: 105:         if (LATCbits.LATC4)
  1047  001026  A88B               	btfss	139,4,c	;volatile
  1048  001028  EF18  F008         	goto	u91
  1049  00102C  EF1A  F008         	goto	u90
  1050  001030                     u91:
  1051  001030  EF1E  F008         	goto	l953
  1052  001034                     u90:
  1053  001034                     
  1054                           ;SPI_LCD.c: 106:             input = (input << 1) | 0x1;
  1055  001034  80D8               	bsf	status,0,c
  1056  001036  3603               	rlcf	SendByteBBSPI@input^0,f,c
  1057  001038  EF21  F008         	goto	l955
  1058  00103C                     l953:
  1059                           
  1060                           ;SPI_LCD.c: 108:             input = input << 1;
  1061  00103C  5003               	movf	SendByteBBSPI@input^0,w,c
  1062  00103E  2403               	addwf	SendByteBBSPI@input^0,w,c
  1063  001040  6E03               	movwf	SendByteBBSPI@input^0,c
  1064  001042                     l955:
  1065                           
  1066                           ;SPI_LCD.c: 109:         LATCbits.LATC3 = 1;
  1067  001042  868B               	bsf	139,3,c	;volatile
  1068  001044                     
  1069                           ;SPI_LCD.c: 110:         __nop();__nop();__nop();__nop();__nop();__nop();
  1070  001044  F000               	nop	
  1071  001046  F000               	nop	
  1072  001048  F000               	nop	
  1073  00104A  F000               	nop	
  1074  00104C  F000               	nop	
  1075  00104E  F000               	nop	
  1076  001050                     
  1077                           ;SPI_LCD.c: 111:         __nop();__nop();__nop();__nop();__nop();__nop();
  1078  001050  F000               	nop	
  1079  001052  F000               	nop	
  1080  001054  F000               	nop	
  1081  001056  F000               	nop	
  1082  001058  F000               	nop	
  1083  00105A  F000               	nop	
  1084  00105C                     
  1085                           ;SPI_LCD.c: 112:         LATCbits.LATC3 = 0;
  1086  00105C  968B               	bcf	139,3,c	;volatile
  1087                           
  1088                           ;SPI_LCD.c: 113:         output <<= 1;
  1089  00105E  90D8               	bcf	status,0,c
  1090  001060  3601               	rlcf	SendByteBBSPI@output^0,f,c
  1091  001062                     
  1092                           ;SPI_LCD.c: 114:     }
  1093  001062  2A02               	incf	SendByteBBSPI@bitcount^0,f,c
  1094  001064  0E07               	movlw	7
  1095  001066  6402               	cpfsgt	SendByteBBSPI@bitcount^0,c
  1096  001068  EF38  F008         	goto	u101
  1097  00106C  EF3A  F008         	goto	u100
  1098  001070                     u101:
  1099  001070  EF08  F008         	goto	l33
  1100  001074                     u100:
  1101  001074  0012               	return		;funcret
  1102  001076                     __end_of_SendByteBBSPI:
  1103                           	opt callstack 0
  1104                           
  1105 ;; *************** function _InitBBSPI *****************
  1106 ;; Defined at:
  1107 ;;		line 71 in file "SPI_LCD.c"
  1108 ;; Parameters:    Size  Location     Type
  1109 ;;		None
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;		None
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  1    wreg      void 
  1114 ;; Registers used:
  1115 ;;		None
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1125 ;;Total ram usage:        0 bytes
  1126 ;; Hardware stack levels used:    1
  1127 ;; This function calls:
  1128 ;;		Nothing
  1129 ;; This function is called by:
  1130 ;;		_LCDInit
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133                           
  1134                           	psect	text11
  1135  0012D2                     __ptext11:
  1136                           	opt callstack 0
  1137  0012D2                     _InitBBSPI:
  1138                           	opt callstack 29
  1139  0012D2                     
  1140                           ;SPI_LCD.c: 73:     TRISAbits.TRISA2 = 0;
  1141  0012D2  9492               	bcf	146,2,c	;volatile
  1142                           
  1143                           ;SPI_LCD.c: 74:     TRISCbits.TRISC4 = 1;
  1144  0012D4  8894               	bsf	148,4,c	;volatile
  1145                           
  1146                           ;SPI_LCD.c: 75:     TRISCbits.TRISC5 = 0;
  1147  0012D6  9A94               	bcf	148,5,c	;volatile
  1148                           
  1149                           ;SPI_LCD.c: 76:     TRISCbits.TRISC3 = 0;
  1150  0012D8  9694               	bcf	148,3,c	;volatile
  1151                           
  1152                           ;SPI_LCD.c: 78:     LATAbits.LATA2 = 1;
  1153  0012DA  8489               	bsf	137,2,c	;volatile
  1154                           
  1155                           ;SPI_LCD.c: 79:     LATCbits.LATC4 = 1;
  1156  0012DC  888B               	bsf	139,4,c	;volatile
  1157                           
  1158                           ;SPI_LCD.c: 80:     LATCbits.LATC5 = 0;
  1159  0012DE  9A8B               	bcf	139,5,c	;volatile
  1160                           
  1161                           ;SPI_LCD.c: 81:     LATCbits.LATC3 = 0;
  1162  0012E0  968B               	bcf	139,3,c	;volatile
  1163  0012E2  0012               	return		;funcret
  1164  0012E4                     __end_of_InitBBSPI:
  1165                           	opt callstack 0
  1166                           
  1167                           	psect	rparam
  1168  0000                     tosu	equ	0xFFF
  1169                           tosh	equ	0xFFE
  1170                           tosl	equ	0xFFD
  1171                           stkptr	equ	0xFFC
  1172                           pclatu	equ	0xFFB
  1173                           pclath	equ	0xFFA
  1174                           pcl	equ	0xFF9
  1175                           tblptru	equ	0xFF8
  1176                           tblptrh	equ	0xFF7
  1177                           tblptrl	equ	0xFF6
  1178                           tablat	equ	0xFF5
  1179                           prodh	equ	0xFF4
  1180                           prodl	equ	0xFF3
  1181                           indf0	equ	0xFEF
  1182                           postinc0	equ	0xFEE
  1183                           postdec0	equ	0xFED
  1184                           preinc0	equ	0xFEC
  1185                           plusw0	equ	0xFEB
  1186                           fsr0h	equ	0xFEA
  1187                           fsr0l	equ	0xFE9
  1188                           wreg	equ	0xFE8
  1189                           indf1	equ	0xFE7
  1190                           postinc1	equ	0xFE6
  1191                           postdec1	equ	0xFE5
  1192                           preinc1	equ	0xFE4
  1193                           plusw1	equ	0xFE3
  1194                           fsr1h	equ	0xFE2
  1195                           fsr1l	equ	0xFE1
  1196                           bsr	equ	0xFE0
  1197                           indf2	equ	0xFDF
  1198                           postinc2	equ	0xFDE
  1199                           postdec2	equ	0xFDD
  1200                           preinc2	equ	0xFDC
  1201                           plusw2	equ	0xFDB
  1202                           fsr2h	equ	0xFDA
  1203                           fsr2l	equ	0xFD9
  1204                           status	equ	0xFD8


Data Sizes:
    Strings     4
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     16      16
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    LCDPrint@ptr	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    LCDPutStr@ptr	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 


Critical Paths under _main in COMRAM

    _main->_LCDPrint
    _LCDPrint->_LCDMoveCursor
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_WritePort_BBSPI
    _LCDMoveCursor->_LCDPutInst
    _LCDInit->_LCDPutInst
    _Port_BBSPIInit->_SendByteBBSPI
    _LCDPutInst->_WritePort_BBSPI
    _WritePort_BBSPI->_SendByteBBSPI

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4262
                            _LCDInit
                           _LCDPrint
                           _pin_init
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDPrint                                             4     1      3    2348
                                             12 COMRAM     4     1      3
                      _LCDMoveCursor
                          _LCDPutStr
 ---------------------------------------------------------------------------------
 (2) _LCDPutStr                                            2     0      2    1009
                                              7 COMRAM     2     0      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (3) _LCDPutChar                                           2     2      0     888
                                              5 COMRAM     2     2      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (2) _LCDMoveCursor                                        5     4      1    1077
                                              7 COMRAM     5     4      1
                         _LCDPutInst
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              1     1      0    1914
                                              7 COMRAM     1     1      0
                          _InitBBSPI
                         _LCDPutInst
                     _Port_BBSPIInit
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (2) _Port_BBSPIInit                                       1     1      0     160
                                              3 COMRAM     1     1      0
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (3) _LCDPutInst                                           2     2      0     888
                                              5 COMRAM     2     2      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (4) _WritePort_BBSPI                                      2     1      1     866
                                              3 COMRAM     2     1      1
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (5) _SendByteBBSPI                                        3     3      0     138
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _InitBBSPI                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDInit
     _InitBBSPI
     _LCDPutInst
       _WritePort_BBSPI
         _SendByteBBSPI
     _Port_BBSPIInit
       _SendByteBBSPI
     _WritePort_BBSPI
       _SendByteBBSPI
   _LCDPrint
     _LCDMoveCursor
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
     _LCDPutStr
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
   _pin_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     10      10       1       16.8%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
ABS                  0      0       0      32        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM             F5F      0       0      37        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Sep 21 09:43:00 2019

           _LCDMoveCursor 11E0                        l30 12E2                        l33 1010  
                      l42 12B6                        l35 1024                        l51 1140  
                      l27 11A0               ?_LCDPutChar 0001                        l36 1026  
                      l45 12D0                        l70 11DE                        l39 1074  
                      l64 1218                        l48 10DA                        l57 124E  
                      l99 129C                        u80 101E                        u81 101A  
                      u90 1034                        u91 1030               ?_LCDPutInst 0001  
   SendByteBBSPI@bitcount 0002                       l104 1272                       l105 1272  
                     l931 128E                       l941 1008                       l951 1034  
                     l943 100C                       l961 1048                       l953 103C  
                     l929 127A                       l867 12D2                       l971 1052  
                     l963 104A                       l955 1042                       l981 105C  
                     l973 1054                       l965 104C                       l957 1044  
                     l949 101E                       l983 1062                       l975 1056  
                     l967 104E                       l959 1046                       l991 12CE  
                     l985 1064                       l977 1058                       l969 1050  
                     l993 10DE                       l979 105A                       l987 12BA  
                     l995 10EE                       l989 12BC                       l997 10F8  
                     l999 1106                       u100 1074                       u101 1070  
                     u110 124E                       u111 124A                       u120 11F2  
                     u121 11EE                       u130 11B4                       u131 11B0  
                     u140 11C4                       u141 11C0                       u207 1178  
                     u217 10E4                       u227 10FE                       u237 1116  
                     u157 107E                       u247 112E                       u167 1098  
                     u177 10B0                       u187 10C8                       u197 1150  
                     wreg 000FE8           __end_of_LCDInit 11A2              __CFG_LVP$OFF 000000  
            __CFG_WDT$OFF 000000                      l1001 1110                      l1003 111E  
                    l1011 1088                      l1005 1128                      l1021 10C2  
                    l1013 1092                      l1007 1136                      l1023 10D0  
                    l1015 10A0                      l1031 121A                      l1025 12A0  
                    l1041 11F2                      l1017 10AA                      l1009 1078  
                    l1033 121E                      l1027 12A2                      l1051 1146  
                    l1043 1202                      l1019 10B8                      l1035 122E  
                    l1029 12B4                      l1061 1162                      l1053 1148  
                    l1045 120E                      l1037 1232                      l1071 118E  
                    l1063 1168                      l1055 114A                      l1047 1212  
                    l1039 11E2                      l1073 1194                      l1065 1172  
                    l1057 115A                      l1049 1142                      l1081 11C8  
                    l1075 119A                      l1067 1182                      l1059 115C  
                    l1083 11D2                      l1091 1260                      l1069 1188  
                    l1077 11A4                      l1085 1250                      l1079 11B4  
                    l1087 1258                      l1089 125C                      STR_1 1001  
                    _LATA 000F89                      _LATB 000F8A                      _LATC 000F8B  
                    _LATD 000F8C                      _main 1250          ?_WritePort_BBSPI 0004  
       _LCDMoveCursor$365 000A                      start 0000        __size_of_LCDPutStr 0036  
           __CFG_IESO$OFF 000000             __CFG_MCLRE$ON 000000            ?_LCDMoveCursor 0008  
            ___param_bank 000000          __end_of_LCDPrint 11E0               LCDPrint@pos 000D  
             LCDPrint@ptr 000E                     ?_main 0001                     _TRISA 000F92  
                   _TRISB 000F93                     _TRISC 000F94                     _TRISD 000F95  
           __CFG_PWRT$OFF 000000            __CFG_FCMEN$OFF 000000   __size_of_Port_BBSPIInit 001A  
          __CFG_BOREN$OFF 000000                     tablat 000FF5       __size_of_LCDPutChar 0066  
     __size_of_LCDPutInst 0066                     status 000FD8           __initialization 12E4  
            __end_of_main 127A                    ??_main 0011             __activetblptr 000001  
               ??_LCDInit 0008              LCDPutChar@ch 0007         __end_of_LCDPutStr 1250  
            LCDPrint@line 0010                    _ADCON1 000FC1        __size_of_InitBBSPI 0012  
            LCDPutInst@ch 0007                    _OSCCON 000FD3              LCDPutStr@ptr 0008  
         ??_LCDMoveCursor 0009            __CFG_XINST$OFF 000000          __end_of_pin_init 129E  
  Port_BBSPIInit@port_dir 0004          LCDMoveCursor@pos 0008              __mediumconst 0000  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
              __accesstop 0060   __end_of__initialization 12E4                 ?_LCDPrint 000D  
           ___rparam_used 000001    __size_of_SendByteBBSPI 0070            __pcstackCOMRAM 0001  
       __end_of_InitBBSPI 12E4              ??_LCDPutChar 0006              ??_LCDPutInst 0006  
         __CFG_OSC$INTIO7 000000            _Port_BBSPIInit 129E        __end_of_LCDPutChar 10DC  
              ??_LCDPrint 0010        __end_of_LCDPutInst 1142    __end_of_Port_BBSPIInit 12B8  
                 _LCDInit 1142             _SendByteBBSPI 1006                   _OSCTUNE 000F9B  
        WritePort_BBSPI@a 0004     LCDMoveCursor@position 000C                 ?_pin_init 0001  
                 __Hparam 0000                   __Lparam 0000  __size_of_WritePort_BBSPI 001A  
            __psmallconst 1000                   __pcinit 12E4                   __ramtop 1000  
                 __ptext0 1250                   __ptext1 127A                   __ptext2 11A2  
                 __ptext3 121A                   __ptext4 1076                   __ptext5 11E0  
                 __ptext6 1142                   __ptext7 129E                   __ptext8 10DC  
                 __ptext9 12B8            ?_SendByteBBSPI 0001           ?_Port_BBSPIInit 0001  
               _LCDPutStr 121A      end_of_initialization 12E4         LCDMoveCursor@line 0009  
              ??_pin_init 0001                 _TRISAbits 000F92                 _TRISCbits 000F94  
               _TRISFbits 000F97                ?_LCDPutStr 0008       SendByteBBSPI@output 0001  
       __size_of_LCDPrint 003E     __end_of_LCDMoveCursor 121A           ??_SendByteBBSPI 0001  
               _InitBBSPI 12D2         ??_WritePort_BBSPI 0005       start_initialization 12E4  
              ?_InitBBSPI 0001                  ?_LCDInit 0001               ??_LCDPutStr 000A  
       __size_of_pin_init 0024          ??_Port_BBSPIInit 0004               __smallconst 1000  
                _LCDPrint 11A2                  _LATAbits 000F89                  _LATCbits 000F8B  
                _LATFbits 000F8E               ??_InitBBSPI 0001        SendByteBBSPI@input 0003  
        __size_of_LCDInit 0060                  __Hrparam 0000                  __Lrparam 0000  
            __Lsmallconst 1000           _WritePort_BBSPI 12B8                  __ptext10 1006  
                __ptext11 12D2             __size_of_main 002A                  _pin_init 127A  
              _LCDPutChar 1076                _LCDPutInst 10DC     __end_of_SendByteBBSPI 1076  
  __size_of_LCDMoveCursor 003A   __end_of_WritePort_BBSPI 12D2   WritePort_BBSPI@port_add 0005  
