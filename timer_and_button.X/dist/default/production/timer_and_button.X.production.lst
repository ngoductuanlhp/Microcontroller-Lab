

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Sep 13 14:20:56 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    30  0000                     
    31                           ; Version 2.10
    32                           ; Generated 31/07/2019 GMT
    33                           ; 
    34                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F8722 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     
    66                           	psect	idataCOMRAM
    67  00177E                     __pidataCOMRAM:
    68                           	opt callstack 0
    69                           
    70                           ;initializer for _secondReadRB0
    71  00177E  01                 	db	1
    72                           
    73                           ;initializer for _firstReadRB0
    74  00177F  01                 	db	1
    75                           
    76                           ;initializer for _secondReadRA5
    77  001780  01                 	db	1
    78                           
    79                           ;initializer for _firstReadRA5
    80  001781  01                 	db	1
    81  0000                     _OSCTUNE	set	3995
    82  0000                     _OSCCON	set	4051
    83  0000                     _PORTBbits	set	3969
    84  0000                     _PORTAbits	set	3968
    85  0000                     _ADCON1	set	4033
    86  0000                     _TRISBbits	set	3987
    87  0000                     _TRISAbits	set	3986
    88  0000                     _LATD	set	3980
    89  0000                     _TRISD	set	3989
    90  0000                     _TMR0L	set	4054
    91  0000                     _T0CON	set	4053
    92  0000                     _INTCONbits	set	4082
    93                           
    94                           	psect	smallconst
    95  001000                     __psmallconst:
    96                           	opt callstack 0
    97  001000  00                 	db	0
    98  001001                     STR_1:
    99  001001  68                 	db	104	;'h'
   100  001002  65                 	db	101	;'e'
   101  001003  6C                 	db	108	;'l'
   102  001004  6C                 	db	108	;'l'
   103  001005  6F                 	db	111	;'o'
   104  001006  00                 	db	0
   105                           
   106                           ; #config settings
   107  001007  00                 	db	0	; dummy byte at the end
   108  0000                     
   109                           	psect	cinit
   110  0016F4                     __pcinit:
   111                           	opt callstack 0
   112  0016F4                     start_initialization:
   113                           	opt callstack 0
   114  0016F4                     __initialization:
   115                           	opt callstack 0
   116                           
   117                           ; Initialize objects allocated to COMRAM (4 bytes)
   118                           ; load TBLPTR registers with __pidataCOMRAM
   119  0016F4  0E7E               	movlw	low __pidataCOMRAM
   120  0016F6  6EF6               	movwf	tblptrl,c
   121  0016F8  0E17               	movlw	high __pidataCOMRAM
   122  0016FA  6EF7               	movwf	tblptrh,c
   123  0016FC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   124  0016FE  6EF8               	movwf	tblptru,c
   125  001700  EE00  F041         	lfsr	0,__pdataCOMRAM
   126  001704  EE10 F004          	lfsr	1,4
   127  001708                     copy_data0:
   128  001708  0009               	tblrd		*+
   129  00170A  CFF5 FFEE          	movff	tablat,postinc0
   130  00170E  50E5               	movf	postdec1,w,c
   131  001710  50E1               	movf	fsr1l,w,c
   132  001712  E1FA               	bnz	copy_data0
   133                           
   134                           ; Clear objects allocated to BANK0 (32 bytes)
   135  001714  EE00  F060         	lfsr	0,__pbssBANK0
   136  001718  0E20               	movlw	32
   137  00171A                     clear_0:
   138  00171A  6AEE               	clrf	postinc0,c
   139  00171C  06E8               	decf	wreg,f,c
   140  00171E  E1FD               	bnz	clear_0
   141                           
   142                           ; Clear objects allocated to COMRAM (27 bytes)
   143  001720  EE00  F026         	lfsr	0,__pbssCOMRAM
   144  001724  0E1B               	movlw	27
   145  001726                     clear_1:
   146  001726  6AEE               	clrf	postinc0,c
   147  001728  06E8               	decf	wreg,f,c
   148  00172A  E1FD               	bnz	clear_1
   149  00172C                     end_of_initialization:
   150                           	opt callstack 0
   151  00172C                     __end_of__initialization:
   152                           	opt callstack 0
   153  00172C  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   154  00172E  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   155  001730  0100               	movlb	0
   156  001732  EF04  F008         	goto	_main	;jump to C main() function
   157                           
   158                           	psect	bssCOMRAM
   159  000026                     __pbssCOMRAM:
   160                           	opt callstack 0
   161  000026                     _nout:
   162                           	opt callstack 0
   163  000026                     	ds	2
   164  000028                     _width:
   165                           	opt callstack 0
   166  000028                     	ds	2
   167  00002A                     _prec:
   168                           	opt callstack 0
   169  00002A                     	ds	2
   170  00002C                     _flags:
   171                           	opt callstack 0
   172  00002C                     	ds	2
   173  00002E                     _countRB0_2:
   174                           	opt callstack 0
   175  00002E                     	ds	2
   176  000030                     _countRB0_1:
   177                           	opt callstack 0
   178  000030                     	ds	2
   179  000032                     _countRB0:
   180                           	opt callstack 0
   181  000032                     	ds	2
   182  000034                     _countRA5_2:
   183                           	opt callstack 0
   184  000034                     	ds	2
   185  000036                     _countRA5_1:
   186                           	opt callstack 0
   187  000036                     	ds	2
   188  000038                     _countRA5:
   189                           	opt callstack 0
   190  000038                     	ds	2
   191  00003A                     _buttonRB0_3s_pressed:
   192                           	opt callstack 0
   193  00003A                     	ds	1
   194  00003B                     _buttonRB0_1s_pressed:
   195                           	opt callstack 0
   196  00003B                     	ds	1
   197  00003C                     _buttonRB0:
   198                           	opt callstack 0
   199  00003C                     	ds	1
   200  00003D                     _buttonRA5_3s_pressed:
   201                           	opt callstack 0
   202  00003D                     	ds	1
   203  00003E                     _buttonRA5_1s_pressed:
   204                           	opt callstack 0
   205  00003E                     	ds	1
   206  00003F                     _buttonRA5:
   207                           	opt callstack 0
   208  00003F                     	ds	1
   209  000040                     _ledValue:
   210                           	opt callstack 0
   211  000040                     	ds	1
   212                           
   213                           	psect	dataCOMRAM
   214  000041                     __pdataCOMRAM:
   215                           	opt callstack 0
   216  000041                     _secondReadRB0:
   217                           	opt callstack 0
   218  000041                     	ds	1
   219  000042                     _firstReadRB0:
   220                           	opt callstack 0
   221  000042                     	ds	1
   222  000043                     _secondReadRA5:
   223                           	opt callstack 0
   224  000043                     	ds	1
   225  000044                     _firstReadRA5:
   226                           	opt callstack 0
   227  000044                     	ds	1
   228                           
   229                           	psect	bssBANK0
   230  000060                     __pbssBANK0:
   231                           	opt callstack 0
   232  000060                     	ds	32
   233                           
   234                           	psect	cstackBANK0
   235  000080                     __pcstackBANK0:
   236                           	opt callstack 0
   237  000080                     ??_main:
   238                           
   239                           ; 1 bytes @ 0x0
   240  000080                     	ds	2
   241  000082                     main@state:
   242                           	opt callstack 0
   243                           
   244                           ; 1 bytes @ 0x2
   245  000082                     	ds	1
   246                           
   247                           	psect	cstackCOMRAM
   248  000001                     __pcstackCOMRAM:
   249                           	opt callstack 0
   250  000001                     ?_readButtonRA5:
   251                           	opt callstack 0
   252  000001                     ?_readButtonRB0:
   253                           	opt callstack 0
   254  000001                     fputc@c:
   255                           	opt callstack 0
   256                           
   257                           ; 2 bytes @ 0x0
   258  000001                     	ds	2
   259  000003                     handleButton@checkRA5:
   260                           	opt callstack 0
   261  000003                     fputc@fp:
   262                           	opt callstack 0
   263                           
   264                           ; 2 bytes @ 0x2
   265  000003                     	ds	2
   266  000005                     ??_fputc:
   267  000005                     handleButton@checkRB0:
   268                           	opt callstack 0
   269                           
   270                           ; 2 bytes @ 0x4
   271  000005                     	ds	5
   272  00000A                     ?_vfpfcnvrt:
   273                           	opt callstack 0
   274  00000A                     vfpfcnvrt@fp:
   275                           	opt callstack 0
   276                           
   277                           ; 2 bytes @ 0x9
   278  00000A                     	ds	2
   279  00000C                     vfpfcnvrt@fmt:
   280                           	opt callstack 0
   281                           
   282                           ; 2 bytes @ 0xB
   283  00000C                     	ds	2
   284  00000E                     vfpfcnvrt@ap:
   285                           	opt callstack 0
   286                           
   287                           ; 2 bytes @ 0xD
   288  00000E                     	ds	2
   289  000010                     ?_vfprintf:
   290                           	opt callstack 0
   291  000010                     vfprintf@fp:
   292                           	opt callstack 0
   293                           
   294                           ; 2 bytes @ 0xF
   295  000010                     	ds	2
   296  000012                     vfprintf@fmt:
   297                           	opt callstack 0
   298                           
   299                           ; 2 bytes @ 0x11
   300  000012                     	ds	2
   301  000014                     vfprintf@ap:
   302                           	opt callstack 0
   303                           
   304                           ; 2 bytes @ 0x13
   305  000014                     	ds	2
   306  000016                     vfprintf@cfmt:
   307                           	opt callstack 0
   308                           
   309                           ; 2 bytes @ 0x15
   310  000016                     	ds	2
   311  000018                     ?_printf:
   312                           	opt callstack 0
   313  000018                     printf@fmt:
   314                           	opt callstack 0
   315                           
   316                           ; 2 bytes @ 0x17
   317  000018                     	ds	2
   318  00001A                     
   319                           ; 1 bytes @ 0x19
   320  00001A                     	ds	2
   321  00001C                     printf@ap:
   322                           	opt callstack 0
   323                           
   324                           ; 2 bytes @ 0x1B
   325  00001C                     	ds	2
   326  00001E                     ??_myISR:
   327                           
   328                           ; 1 bytes @ 0x1D
   329  00001E                     	ds	8
   330                           
   331 ;;
   332 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   333 ;;
   334 ;; *************** function _main *****************
   335 ;; Defined at:
   336 ;;		line 146 in file "main.c"
   337 ;; Parameters:    Size  Location     Type
   338 ;;		None
   339 ;; Auto vars:     Size  Location     Type
   340 ;;  state           1    2[BANK0 ] enum E4889
   341 ;; Return value:  Size  Location     Type
   342 ;;                  1    wreg      void 
   343 ;; Registers used:
   344 ;;		wreg, status,2, status,0, cstack
   345 ;; Tracked objects:
   346 ;;		On entry : 0/0
   347 ;;		On exit  : 0/0
   348 ;;		Unchanged: 0/0
   349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   351 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   352 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   353 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   354 ;;Total ram usage:        3 bytes
   355 ;; Hardware stack levels required when called:    7
   356 ;; This function calls:
   357 ;;		_interrupt_init
   358 ;;		_pin_init
   359 ;;		_timer0_init
   360 ;; This function is called by:
   361 ;;		Startup code after reset
   362 ;; This function uses a non-reentrant model
   363 ;;
   364                           
   365                           	psect	text0
   366  001008                     __ptext0:
   367                           	opt callstack 0
   368  001008                     _main:
   369                           	opt callstack 24
   370  001008                     
   371                           ;main.c: 148:     enum State state;;main.c: 149:     pin_init();
   372  001008  ECAE  F00B         	call	_pin_init	;wreg free
   373                           
   374                           ;main.c: 150:     timer0_init();
   375  00100C  ECB7  F00B         	call	_timer0_init	;wreg free
   376  001010                     
   377                           ;main.c: 151:     interrupt_init();
   378  001010  ECBC  F00B         	call	_interrupt_init	;wreg free
   379                           
   380                           ;main.c: 152:     OSCCON = 0b01110111;
   381  001014  0E77               	movlw	119
   382  001016  6ED3               	movwf	211,c	;volatile
   383                           
   384                           ;main.c: 153:     OSCTUNE = 0b00001111;
   385  001018  0E0F               	movlw	15
   386  00101A  6E9B               	movwf	155,c	;volatile
   387  00101C                     l1342:
   388                           
   389                           ;main.c: 157:         LATD = ledValue;
   390  00101C  C040  FF8C         	movff	_ledValue,3980	;volatile
   391                           
   392                           ;main.c: 158:         switch(state) {
   393  001020  EF26  F009         	goto	l1446
   394  001024                     l1344:
   395                           
   396                           ; BSR set to: 0
   397                           ;main.c: 160:                 if(countRA5 > 0) {
   398  001024  5038               	movf	_countRA5^0,w,c
   399  001026  1039               	iorwf	(_countRA5+1)^0,w,c
   400  001028  B4D8               	btfsc	status,2,c
   401  00102A  EF19  F008         	goto	u651
   402  00102E  EF1B  F008         	goto	u650
   403  001032                     u651:
   404  001032  EF20  F008         	goto	l1350
   405  001036                     u650:
   406  001036                     
   407                           ; BSR set to: 0
   408                           ;main.c: 161:                     ledValue++;
   409  001036  2A40               	incf	_ledValue^0,f,c
   410  001038                     l1348:
   411                           
   412                           ; BSR set to: 0
   413                           ;main.c: 162:                     state = INCREASE0;
   414  001038  0E01               	movlw	1
   415  00103A  6F82               	movwf	main@state& (0+255),b
   416                           
   417                           ;main.c: 163:                 }
   418  00103C  EF0E  F008         	goto	l1342
   419  001040                     l1350:
   420                           
   421                           ; BSR set to: 0
   422  001040  5032               	movf	_countRB0^0,w,c
   423  001042  1033               	iorwf	(_countRB0+1)^0,w,c
   424  001044  B4D8               	btfsc	status,2,c
   425  001046  EF27  F008         	goto	u661
   426  00104A  EF29  F008         	goto	u660
   427  00104E                     u661:
   428  00104E  EF50  F009         	goto	l118
   429  001052                     u660:
   430  001052                     
   431                           ; BSR set to: 0
   432                           ;main.c: 165:                     ledValue--;
   433  001052  0640               	decf	_ledValue^0,f,c
   434  001054                     l1354:
   435                           
   436                           ; BSR set to: 0
   437                           ;main.c: 166:                     state = DECREASE0;
   438  001054  0E04               	movlw	4
   439  001056  6F82               	movwf	main@state& (0+255),b
   440  001058  EF0E  F008         	goto	l1342
   441  00105C                     l1356:
   442                           
   443                           ; BSR set to: 0
   444                           ;main.c: 170:                 if(countRA5 > 100)
   445  00105C  5039               	movf	(_countRA5+1)^0,w,c
   446  00105E  E109               	bnz	u670
   447  001060  0E65               	movlw	101
   448  001062  5C38               	subwf	_countRA5^0,w,c
   449  001064  A0D8               	btfss	status,0,c
   450  001066  EF37  F008         	goto	u671
   451  00106A  EF39  F008         	goto	u670
   452  00106E                     u671:
   453  00106E  EF3D  F008         	goto	l1360
   454  001072                     u670:
   455  001072                     
   456                           ; BSR set to: 0
   457                           ;main.c: 171:                     state = INCREASE1;
   458  001072  0E02               	movlw	2
   459  001074  6F82               	movwf	main@state& (0+255),b
   460  001076  EF0E  F008         	goto	l1342
   461  00107A                     l1360:
   462                           
   463                           ; BSR set to: 0
   464  00107A  5038               	movf	_countRA5^0,w,c
   465  00107C  1039               	iorwf	(_countRA5+1)^0,w,c
   466  00107E  A4D8               	btfss	status,2,c
   467  001080  EF44  F008         	goto	u681
   468  001084  EF46  F008         	goto	u680
   469  001088                     u681:
   470  001088  EF0E  F008         	goto	l1342
   471  00108C                     u680:
   472  00108C                     
   473                           ; BSR set to: 0
   474                           ;main.c: 173:                     if(countRB0 > 0)
   475  00108C  5032               	movf	_countRB0^0,w,c
   476  00108E  1033               	iorwf	(_countRB0+1)^0,w,c
   477  001090  B4D8               	btfsc	status,2,c
   478  001092  EF4D  F008         	goto	u691
   479  001096  EF4F  F008         	goto	u690
   480  00109A                     u691:
   481  00109A  EF51  F008         	goto	l1366
   482  00109E                     u690:
   483  00109E  EF2A  F008         	goto	l1354
   484  0010A2                     l1366:
   485                           
   486                           ; BSR set to: 0
   487  0010A2  0E00               	movlw	0
   488  0010A4  6F82               	movwf	main@state& (0+255),b
   489  0010A6  EF0E  F008         	goto	l1342
   490  0010AA                     l1368:
   491                           
   492                           ; BSR set to: 0
   493                           ;main.c: 179:                 if(countRA5_1 > 50) {
   494  0010AA  5037               	movf	(_countRA5_1+1)^0,w,c
   495  0010AC  E109               	bnz	u700
   496  0010AE  0E33               	movlw	51
   497  0010B0  5C36               	subwf	_countRA5_1^0,w,c
   498  0010B2  A0D8               	btfss	status,0,c
   499  0010B4  EF5E  F008         	goto	u701
   500  0010B8  EF60  F008         	goto	u700
   501  0010BC                     u701:
   502  0010BC  EF65  F008         	goto	l1374
   503  0010C0                     u700:
   504  0010C0                     
   505                           ; BSR set to: 0
   506                           ;main.c: 180:                     ledValue++;
   507  0010C0  2A40               	incf	_ledValue^0,f,c
   508  0010C2                     
   509                           ; BSR set to: 0
   510                           ;main.c: 181:                     countRA5_1 = 0;
   511  0010C2  0E00               	movlw	0
   512  0010C4  6E37               	movwf	(_countRA5_1+1)^0,c
   513  0010C6  0E00               	movlw	0
   514  0010C8  6E36               	movwf	_countRA5_1^0,c
   515  0010CA                     l1374:
   516                           
   517                           ; BSR set to: 0
   518                           ;main.c: 183:                 if(countRA5 > 300)
   519  0010CA  0E2D               	movlw	45
   520  0010CC  5C38               	subwf	_countRA5^0,w,c
   521  0010CE  0E01               	movlw	1
   522  0010D0  5839               	subwfb	(_countRA5+1)^0,w,c
   523  0010D2  A0D8               	btfss	status,0,c
   524  0010D4  EF6E  F008         	goto	u711
   525  0010D8  EF70  F008         	goto	u710
   526  0010DC                     u711:
   527  0010DC  EF74  F008         	goto	l1378
   528  0010E0                     u710:
   529  0010E0                     
   530                           ; BSR set to: 0
   531                           ;main.c: 184:                     state = INCREASE2;
   532  0010E0  0E03               	movlw	3
   533  0010E2  6F82               	movwf	main@state& (0+255),b
   534  0010E4  EF0E  F008         	goto	l1342
   535  0010E8                     l1378:
   536                           
   537                           ; BSR set to: 0
   538  0010E8  5038               	movf	_countRA5^0,w,c
   539  0010EA  1039               	iorwf	(_countRA5+1)^0,w,c
   540  0010EC  A4D8               	btfss	status,2,c
   541  0010EE  EF7B  F008         	goto	u721
   542  0010F2  EF7D  F008         	goto	u720
   543  0010F6                     u721:
   544  0010F6  EF0E  F008         	goto	l1342
   545  0010FA                     u720:
   546  0010FA                     
   547                           ; BSR set to: 0
   548                           ;main.c: 186:                     if(countRB0 > 0)
   549  0010FA  5032               	movf	_countRB0^0,w,c
   550  0010FC  1033               	iorwf	(_countRB0+1)^0,w,c
   551  0010FE  B4D8               	btfsc	status,2,c
   552  001100  EF84  F008         	goto	u731
   553  001104  EF86  F008         	goto	u730
   554  001108                     u731:
   555  001108  EF51  F008         	goto	l1366
   556  00110C                     u730:
   557  00110C  EF2A  F008         	goto	l1354
   558  001110                     l1386:
   559                           
   560                           ; BSR set to: 0
   561                           ;main.c: 192:                 if(countRA5_2 > 10) {
   562  001110  5035               	movf	(_countRA5_2+1)^0,w,c
   563  001112  E109               	bnz	u740
   564  001114  0E0B               	movlw	11
   565  001116  5C34               	subwf	_countRA5_2^0,w,c
   566  001118  A0D8               	btfss	status,0,c
   567  00111A  EF91  F008         	goto	u741
   568  00111E  EF93  F008         	goto	u740
   569  001122                     u741:
   570  001122  EF98  F008         	goto	l1392
   571  001126                     u740:
   572  001126                     
   573                           ; BSR set to: 0
   574                           ;main.c: 193:                     ledValue++;
   575  001126  2A40               	incf	_ledValue^0,f,c
   576  001128                     
   577                           ; BSR set to: 0
   578                           ;main.c: 194:                     countRA5_2 = 0;
   579  001128  0E00               	movlw	0
   580  00112A  6E35               	movwf	(_countRA5_2+1)^0,c
   581  00112C  0E00               	movlw	0
   582  00112E  6E34               	movwf	_countRA5_2^0,c
   583  001130                     l1392:
   584                           
   585                           ; BSR set to: 0
   586                           ;main.c: 196:                 if(countRA5 == 0) {
   587  001130  5038               	movf	_countRA5^0,w,c
   588  001132  1039               	iorwf	(_countRA5+1)^0,w,c
   589  001134  A4D8               	btfss	status,2,c
   590  001136  EF9F  F008         	goto	u751
   591  00113A  EFA1  F008         	goto	u750
   592  00113E                     u751:
   593  00113E  EF0E  F008         	goto	l1342
   594  001142                     u750:
   595  001142                     
   596                           ; BSR set to: 0
   597                           ;main.c: 197:                     if(countRB0 > 0)
   598  001142  5032               	movf	_countRB0^0,w,c
   599  001144  1033               	iorwf	(_countRB0+1)^0,w,c
   600  001146  B4D8               	btfsc	status,2,c
   601  001148  EFA8  F008         	goto	u761
   602  00114C  EFAA  F008         	goto	u760
   603  001150                     u761:
   604  001150  EF51  F008         	goto	l1366
   605  001154                     u760:
   606  001154  EF2A  F008         	goto	l1354
   607  001158                     l1400:
   608                           
   609                           ; BSR set to: 0
   610                           ;main.c: 203:                 if(countRB0 > 100)
   611  001158  5033               	movf	(_countRB0+1)^0,w,c
   612  00115A  E109               	bnz	u770
   613  00115C  0E65               	movlw	101
   614  00115E  5C32               	subwf	_countRB0^0,w,c
   615  001160  A0D8               	btfss	status,0,c
   616  001162  EFB5  F008         	goto	u771
   617  001166  EFB7  F008         	goto	u770
   618  00116A                     u771:
   619  00116A  EFBB  F008         	goto	l1404
   620  00116E                     u770:
   621  00116E                     
   622                           ; BSR set to: 0
   623                           ;main.c: 204:                     state = DECREASE1;
   624  00116E  0E05               	movlw	5
   625  001170  6F82               	movwf	main@state& (0+255),b
   626  001172  EF0E  F008         	goto	l1342
   627  001176                     l1404:
   628                           
   629                           ; BSR set to: 0
   630  001176  5032               	movf	_countRB0^0,w,c
   631  001178  1033               	iorwf	(_countRB0+1)^0,w,c
   632  00117A  A4D8               	btfss	status,2,c
   633  00117C  EFC2  F008         	goto	u781
   634  001180  EFC4  F008         	goto	u780
   635  001184                     u781:
   636  001184  EF0E  F008         	goto	l1342
   637  001188                     u780:
   638  001188                     
   639                           ; BSR set to: 0
   640                           ;main.c: 206:                     if(countRA5 > 0)
   641  001188  5038               	movf	_countRA5^0,w,c
   642  00118A  1039               	iorwf	(_countRA5+1)^0,w,c
   643  00118C  B4D8               	btfsc	status,2,c
   644  00118E  EFCB  F008         	goto	u791
   645  001192  EFCD  F008         	goto	u790
   646  001196                     u791:
   647  001196  EF51  F008         	goto	l1366
   648  00119A                     u790:
   649  00119A  EF1C  F008         	goto	l1348
   650  00119E                     l1412:
   651                           
   652                           ; BSR set to: 0
   653                           ;main.c: 212:                 if(countRB0_1 > 50) {
   654  00119E  5031               	movf	(_countRB0_1+1)^0,w,c
   655  0011A0  E109               	bnz	u800
   656  0011A2  0E33               	movlw	51
   657  0011A4  5C30               	subwf	_countRB0_1^0,w,c
   658  0011A6  A0D8               	btfss	status,0,c
   659  0011A8  EFD8  F008         	goto	u801
   660  0011AC  EFDA  F008         	goto	u800
   661  0011B0                     u801:
   662  0011B0  EFDF  F008         	goto	l1418
   663  0011B4                     u800:
   664  0011B4                     
   665                           ; BSR set to: 0
   666                           ;main.c: 213:                     ledValue--;
   667  0011B4  0640               	decf	_ledValue^0,f,c
   668  0011B6                     
   669                           ; BSR set to: 0
   670                           ;main.c: 214:                     countRB0_1 = 0;
   671  0011B6  0E00               	movlw	0
   672  0011B8  6E31               	movwf	(_countRB0_1+1)^0,c
   673  0011BA  0E00               	movlw	0
   674  0011BC  6E30               	movwf	_countRB0_1^0,c
   675  0011BE                     l1418:
   676                           
   677                           ; BSR set to: 0
   678                           ;main.c: 216:                 if(countRB0 > 300)
   679  0011BE  0E2D               	movlw	45
   680  0011C0  5C32               	subwf	_countRB0^0,w,c
   681  0011C2  0E01               	movlw	1
   682  0011C4  5833               	subwfb	(_countRB0+1)^0,w,c
   683  0011C6  A0D8               	btfss	status,0,c
   684  0011C8  EFE8  F008         	goto	u811
   685  0011CC  EFEA  F008         	goto	u810
   686  0011D0                     u811:
   687  0011D0  EFEE  F008         	goto	l1422
   688  0011D4                     u810:
   689  0011D4                     
   690                           ; BSR set to: 0
   691                           ;main.c: 217:                     state = DECREASE2;
   692  0011D4  0E06               	movlw	6
   693  0011D6  6F82               	movwf	main@state& (0+255),b
   694  0011D8  EF0E  F008         	goto	l1342
   695  0011DC                     l1422:
   696                           
   697                           ; BSR set to: 0
   698  0011DC  5032               	movf	_countRB0^0,w,c
   699  0011DE  1033               	iorwf	(_countRB0+1)^0,w,c
   700  0011E0  A4D8               	btfss	status,2,c
   701  0011E2  EFF5  F008         	goto	u821
   702  0011E6  EFF7  F008         	goto	u820
   703  0011EA                     u821:
   704  0011EA  EF0E  F008         	goto	l1342
   705  0011EE                     u820:
   706  0011EE                     
   707                           ; BSR set to: 0
   708                           ;main.c: 219:                     if(countRA5 > 0)
   709  0011EE  5038               	movf	_countRA5^0,w,c
   710  0011F0  1039               	iorwf	(_countRA5+1)^0,w,c
   711  0011F2  B4D8               	btfsc	status,2,c
   712  0011F4  EFFE  F008         	goto	u831
   713  0011F8  EF00  F009         	goto	u830
   714  0011FC                     u831:
   715  0011FC  EF51  F008         	goto	l1366
   716  001200                     u830:
   717  001200  EF1C  F008         	goto	l1348
   718  001204                     l1430:
   719                           
   720                           ; BSR set to: 0
   721                           ;main.c: 225:                 if(countRB0_2 > 10) {
   722  001204  502F               	movf	(_countRB0_2+1)^0,w,c
   723  001206  E109               	bnz	u840
   724  001208  0E0B               	movlw	11
   725  00120A  5C2E               	subwf	_countRB0_2^0,w,c
   726  00120C  A0D8               	btfss	status,0,c
   727  00120E  EF0B  F009         	goto	u841
   728  001212  EF0D  F009         	goto	u840
   729  001216                     u841:
   730  001216  EF12  F009         	goto	l1436
   731  00121A                     u840:
   732  00121A                     
   733                           ; BSR set to: 0
   734                           ;main.c: 226:                     ledValue--;
   735  00121A  0640               	decf	_ledValue^0,f,c
   736  00121C                     
   737                           ; BSR set to: 0
   738                           ;main.c: 227:                     countRB0_2 = 0;
   739  00121C  0E00               	movlw	0
   740  00121E  6E2F               	movwf	(_countRB0_2+1)^0,c
   741  001220  0E00               	movlw	0
   742  001222  6E2E               	movwf	_countRB0_2^0,c
   743  001224                     l1436:
   744                           
   745                           ; BSR set to: 0
   746                           ;main.c: 229:                 if(countRB0 == 0) {
   747  001224  5032               	movf	_countRB0^0,w,c
   748  001226  1033               	iorwf	(_countRB0+1)^0,w,c
   749  001228  A4D8               	btfss	status,2,c
   750  00122A  EF19  F009         	goto	u851
   751  00122E  EF1B  F009         	goto	u850
   752  001232                     u851:
   753  001232  EF0E  F008         	goto	l1342
   754  001236                     u850:
   755  001236                     
   756                           ; BSR set to: 0
   757                           ;main.c: 230:                     if(countRA5 > 0)
   758  001236  5038               	movf	_countRA5^0,w,c
   759  001238  1039               	iorwf	(_countRA5+1)^0,w,c
   760  00123A  B4D8               	btfsc	status,2,c
   761  00123C  EF22  F009         	goto	u861
   762  001240  EF24  F009         	goto	u860
   763  001244                     u861:
   764  001244  EF51  F008         	goto	l1366
   765  001248                     u860:
   766  001248  EF1C  F008         	goto	l1348
   767  00124C                     l1446:
   768  00124C  0100               	movlb	0	; () banked
   769  00124E  5182               	movf	main@state& (0+255),w,b
   770  001250  6F80               	movwf	??_main& (0+255),b
   771  001252  6B81               	clrf	(??_main+1)& (0+255),b
   772                           
   773                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   774                           ; Switch size 1, requested type "simple"
   775                           ; Number of cases is 1, Range of values is 0 to 0
   776                           ; switch strategies available:
   777                           ; Name         Instructions Cycles
   778                           ; simple_byte            4     3 (average)
   779                           ;	Chosen strategy is simple_byte
   780  001254  5181               	movf	(??_main+1)& (0+255),w,b
   781  001256  0A00               	xorlw	0	; case 0
   782  001258  B4D8               	btfsc	status,2,c
   783  00125A  EF31  F009         	goto	l1484
   784  00125E  EF0E  F008         	goto	l1342
   785  001262                     l1484:
   786                           
   787                           ; BSR set to: 0
   788                           ; Switch size 1, requested type "simple"
   789                           ; Number of cases is 7, Range of values is 0 to 6
   790                           ; switch strategies available:
   791                           ; Name         Instructions Cycles
   792                           ; simple_byte           22    12 (average)
   793                           ;	Chosen strategy is simple_byte
   794  001262  5180               	movf	??_main& (0+255),w,b
   795  001264  0A00               	xorlw	0	; case 0
   796  001266  B4D8               	btfsc	status,2,c
   797  001268  EF12  F008         	goto	l1344
   798  00126C  0A01               	xorlw	1	; case 1
   799  00126E  B4D8               	btfsc	status,2,c
   800  001270  EF2E  F008         	goto	l1356
   801  001274  0A03               	xorlw	3	; case 2
   802  001276  B4D8               	btfsc	status,2,c
   803  001278  EF55  F008         	goto	l1368
   804  00127C  0A01               	xorlw	1	; case 3
   805  00127E  B4D8               	btfsc	status,2,c
   806  001280  EF88  F008         	goto	l1386
   807  001284  0A07               	xorlw	7	; case 4
   808  001286  B4D8               	btfsc	status,2,c
   809  001288  EFAC  F008         	goto	l1400
   810  00128C  0A01               	xorlw	1	; case 5
   811  00128E  B4D8               	btfsc	status,2,c
   812  001290  EFCF  F008         	goto	l1412
   813  001294  0A03               	xorlw	3	; case 6
   814  001296  B4D8               	btfsc	status,2,c
   815  001298  EF02  F009         	goto	l1430
   816  00129C  EF0E  F008         	goto	l1342
   817  0012A0                     l118:
   818                           
   819                           ; BSR set to: 0
   820  0012A0  EF0E  F008         	goto	l1342
   821  0012A4  EF07  F000         	goto	start
   822  0012A8                     __end_of_main:
   823                           	opt callstack 0
   824                           
   825 ;; *************** function _timer0_init *****************
   826 ;; Defined at:
   827 ;;		line 62 in file "main.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;		None
   830 ;; Auto vars:     Size  Location     Type
   831 ;;		None
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		wreg, status,2
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   845 ;;Total ram usage:        0 bytes
   846 ;; Hardware stack levels used:    1
   847 ;; Hardware stack levels required when called:    6
   848 ;; This function calls:
   849 ;;		Nothing
   850 ;; This function is called by:
   851 ;;		_main
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855                           	psect	text1
   856  00176E                     __ptext1:
   857                           	opt callstack 0
   858  00176E                     _timer0_init:
   859                           	opt callstack 24
   860  00176E                     
   861                           ;main.c: 63:     T0CON = 0b11000111;
   862  00176E  0EC7               	movlw	199
   863  001770  6ED5               	movwf	213,c	;volatile
   864                           
   865                           ;main.c: 64:     TMR0L = 177;
   866  001772  0EB1               	movlw	177
   867  001774  6ED6               	movwf	214,c	;volatile
   868  001776  0012               	return		;funcret
   869  001778                     __end_of_timer0_init:
   870                           	opt callstack 0
   871                           
   872 ;; *************** function _pin_init *****************
   873 ;; Defined at:
   874 ;;		line 67 in file "main.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;		None
   877 ;; Auto vars:     Size  Location     Type
   878 ;;		None
   879 ;; Return value:  Size  Location     Type
   880 ;;                  1    wreg      void 
   881 ;; Registers used:
   882 ;;		wreg, status,2
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   892 ;;Total ram usage:        0 bytes
   893 ;; Hardware stack levels used:    1
   894 ;; Hardware stack levels required when called:    6
   895 ;; This function calls:
   896 ;;		Nothing
   897 ;; This function is called by:
   898 ;;		_main
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           	psect	text2
   903  00175C                     __ptext2:
   904                           	opt callstack 0
   905  00175C                     _pin_init:
   906                           	opt callstack 24
   907  00175C                     
   908                           ;main.c: 68:     TRISD = 0x00;
   909  00175C  0E00               	movlw	0
   910  00175E  6E95               	movwf	149,c	;volatile
   911                           
   912                           ;main.c: 69:     LATD = 0x00;
   913  001760  0E00               	movlw	0
   914  001762  6E8C               	movwf	140,c	;volatile
   915  001764                     
   916                           ;main.c: 71:     TRISAbits.TRISA5 = 1;
   917  001764  8A92               	bsf	146,5,c	;volatile
   918  001766                     
   919                           ;main.c: 72:     TRISBbits.TRISB0 = 1;
   920  001766  8093               	bsf	147,0,c	;volatile
   921                           
   922                           ;main.c: 73:     ADCON1 = 0b00001111;
   923  001768  0E0F               	movlw	15
   924  00176A  6EC1               	movwf	193,c	;volatile
   925  00176C  0012               	return		;funcret
   926  00176E                     __end_of_pin_init:
   927                           	opt callstack 0
   928                           
   929 ;; *************** function _interrupt_init *****************
   930 ;; Defined at:
   931 ;;		line 57 in file "main.c"
   932 ;; Parameters:    Size  Location     Type
   933 ;;		None
   934 ;; Auto vars:     Size  Location     Type
   935 ;;		None
   936 ;; Return value:  Size  Location     Type
   937 ;;                  1    wreg      void 
   938 ;; Registers used:
   939 ;;		None
   940 ;; Tracked objects:
   941 ;;		On entry : 0/0
   942 ;;		On exit  : 0/0
   943 ;;		Unchanged: 0/0
   944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   949 ;;Total ram usage:        0 bytes
   950 ;; Hardware stack levels used:    1
   951 ;; Hardware stack levels required when called:    6
   952 ;; This function calls:
   953 ;;		Nothing
   954 ;; This function is called by:
   955 ;;		_main
   956 ;; This function uses a non-reentrant model
   957 ;;
   958                           
   959                           	psect	text3
   960  001778                     __ptext3:
   961                           	opt callstack 0
   962  001778                     _interrupt_init:
   963                           	opt callstack 24
   964  001778                     
   965                           ;main.c: 58:     INTCONbits.TMR0IE = 1;
   966  001778  8AF2               	bsf	242,5,c	;volatile
   967                           
   968                           ;main.c: 59:     INTCONbits.GIE = 1;
   969  00177A  8EF2               	bsf	242,7,c	;volatile
   970  00177C  0012               	return		;funcret
   971  00177E                     __end_of_interrupt_init:
   972                           	opt callstack 0
   973                           
   974 ;; *************** function _myISR *****************
   975 ;; Defined at:
   976 ;;		line 132 in file "main.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;		None
   979 ;; Auto vars:     Size  Location     Type
   980 ;;		None
   981 ;; Return value:  Size  Location     Type
   982 ;;                  1    wreg      void 
   983 ;; Registers used:
   984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   992 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   993 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   994 ;;Total ram usage:        8 bytes
   995 ;; Hardware stack levels used:    1
   996 ;; Hardware stack levels required when called:    5
   997 ;; This function calls:
   998 ;;		_handleButton
   999 ;;		_printf
  1000 ;; This function is called by:
  1001 ;;		Interrupt level 2
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005                           	psect	intcode
  1006  000008                     __pintcode:
  1007                           	opt callstack 0
  1008  000008                     _myISR:
  1009                           	opt callstack 24
  1010                           
  1011                           ;incstack = 0
  1012  000008  8245               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1013  00000A  EDBD  F00A         	call	int_func,f	;refresh shadow registers
  1014                           
  1015                           	psect	intcode_body
  1016  00157A                     __pintcode_body:
  1017                           	opt callstack 24
  1018  00157A                     int_func:
  1019                           	opt callstack 24
  1020  00157A  0006               	pop		; remove dummy address from shadow register refresh
  1021  00157C  CFE1 F01E          	movff	fsr1l,??_myISR
  1022  001580  CFE2 F01F          	movff	fsr1h,??_myISR+1
  1023  001584  CFD9 F020          	movff	fsr2l,??_myISR+2
  1024  001588  CFDA F021          	movff	fsr2h,??_myISR+3
  1025  00158C  CFF6 F022          	movff	tblptrl,??_myISR+4
  1026  001590  CFF7 F023          	movff	tblptrh,??_myISR+5
  1027  001594  CFF8 F024          	movff	tblptru,??_myISR+6
  1028  001598  CFF5 F025          	movff	tablat,??_myISR+7
  1029  00159C                     
  1030                           ;main.c: 133:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF) {
  1031  00159C  AAF2               	btfss	242,5,c	;volatile
  1032  00159E  EFD3  F00A         	goto	i2u63_41
  1033  0015A2  EFD5  F00A         	goto	i2u63_40
  1034  0015A6                     i2u63_41:
  1035  0015A6  EFE7  F00A         	goto	i2l107
  1036  0015AA                     i2u63_40:
  1037  0015AA  A4F2               	btfss	242,2,c	;volatile
  1038  0015AC  EFDA  F00A         	goto	i2u64_41
  1039  0015B0  EFDC  F00A         	goto	i2u64_40
  1040  0015B4                     i2u64_41:
  1041  0015B4  EFE7  F00A         	goto	i2l107
  1042  0015B8                     i2u64_40:
  1043  0015B8                     
  1044                           ;main.c: 134:         INTCONbits.TMR0IF = 0;
  1045  0015B8  94F2               	bcf	242,2,c	;volatile
  1046  0015BA                     
  1047                           ;main.c: 135:         TMR0L = 177;
  1048  0015BA  0EB1               	movlw	177
  1049  0015BC  6ED6               	movwf	214,c	;volatile
  1050  0015BE                     
  1051                           ;main.c: 141:         handleButton();
  1052  0015BE  EC54  F009         	call	_handleButton	;wreg free
  1053  0015C2                     
  1054                           ;main.c: 142:         printf("hello");
  1055  0015C2  0E01               	movlw	low STR_1
  1056  0015C4  6E18               	movwf	printf@fmt^0,c
  1057  0015C6  0E10               	movlw	high STR_1
  1058  0015C8  6E19               	movwf	(printf@fmt+1)^0,c
  1059  0015CA  EC9B  F00B         	call	_printf	;wreg free
  1060  0015CE                     i2l107:
  1061  0015CE  C025  FFF5         	movff	??_myISR+7,tablat
  1062  0015D2  C024  FFF8         	movff	??_myISR+6,tblptru
  1063  0015D6  C023  FFF7         	movff	??_myISR+5,tblptrh
  1064  0015DA  C022  FFF6         	movff	??_myISR+4,tblptrl
  1065  0015DE  C021  FFDA         	movff	??_myISR+3,fsr2h
  1066  0015E2  C020  FFD9         	movff	??_myISR+2,fsr2l
  1067  0015E6  C01F  FFE2         	movff	??_myISR+1,fsr1h
  1068  0015EA  C01E  FFE1         	movff	??_myISR,fsr1l
  1069  0015EE  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1070  0015F0  0011               	retfie		f
  1071  0015F2                     __end_of_myISR:
  1072                           	opt callstack 0
  1073                           
  1074 ;; *************** function _printf *****************
  1075 ;; Defined at:
  1076 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;  fmt             2   23[COMRAM] PTR const unsigned char 
  1079 ;;		 -> STR_1(6), 
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;  ap              2   27[COMRAM] PTR void [1]
  1082 ;;		 -> ?_printf(2), 
  1083 ;;  ret             2    0        int 
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  2   23[COMRAM] int 
  1086 ;; Registers used:
  1087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1093 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1094 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1096 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1097 ;;Total ram usage:        6 bytes
  1098 ;; Hardware stack levels used:    1
  1099 ;; Hardware stack levels required when called:    4
  1100 ;; This function calls:
  1101 ;;		_vfprintf
  1102 ;; This function is called by:
  1103 ;;		_myISR
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           	psect	text5
  1108  001736                     __ptext5:
  1109                           	opt callstack 0
  1110  001736                     _printf:
  1111                           	opt callstack 24
  1112  001736  0E1A               	movlw	low (?_printf+2)
  1113  001738  6E1C               	movwf	printf@ap^0,c
  1114  00173A  0E00               	movlw	high (?_printf+2)
  1115  00173C  6E1D               	movwf	(printf@ap+1)^0,c
  1116  00173E  0E00               	movlw	0
  1117  001740  6E10               	movwf	vfprintf@fp^0,c
  1118  001742  0E00               	movlw	0
  1119  001744  6E11               	movwf	(vfprintf@fp+1)^0,c
  1120  001746  C018  F012         	movff	printf@fmt,vfprintf@fmt
  1121  00174A  C019  F013         	movff	printf@fmt+1,vfprintf@fmt+1
  1122  00174E  0E1C               	movlw	low printf@ap
  1123  001750  6E14               	movwf	vfprintf@ap^0,c
  1124  001752  0E00               	movlw	high printf@ap
  1125  001754  6E15               	movwf	(vfprintf@ap+1)^0,c
  1126  001756  ECF9  F00A         	call	_vfprintf	;wreg free
  1127  00175A  0012               	return		;funcret
  1128  00175C                     __end_of_printf:
  1129                           	opt callstack 0
  1130                           
  1131 ;; *************** function _vfprintf *****************
  1132 ;; Defined at:
  1133 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  1136 ;;		 -> NULL(0), 
  1137 ;;  fmt             2   17[COMRAM] PTR const unsigned char 
  1138 ;;		 -> STR_1(6), 
  1139 ;;  ap              2   19[COMRAM] PTR PTR void 
  1140 ;;		 -> printf@ap(2), 
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;  cfmt            2   21[COMRAM] PTR unsigned char 
  1143 ;;		 -> STR_1(6), 
  1144 ;; Return value:  Size  Location     Type
  1145 ;;                  2   15[COMRAM] int 
  1146 ;; Registers used:
  1147 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1153 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1154 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1156 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1157 ;;Total ram usage:        8 bytes
  1158 ;; Hardware stack levels used:    1
  1159 ;; Hardware stack levels required when called:    3
  1160 ;; This function calls:
  1161 ;;		_vfpfcnvrt
  1162 ;; This function is called by:
  1163 ;;		_printf
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           	psect	text6
  1168  0015F2                     __ptext6:
  1169                           	opt callstack 0
  1170  0015F2                     _vfprintf:
  1171                           	opt callstack 24
  1172  0015F2                     
  1173                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1174  0015F2  C012  F016         	movff	vfprintf@fmt,vfprintf@cfmt
  1175  0015F6  C013  F017         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1176  0015FA                     
  1177                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1178  0015FA  0E00               	movlw	0
  1179  0015FC  6E27               	movwf	(_nout+1)^0,c
  1180  0015FE  0E00               	movlw	0
  1181  001600  6E26               	movwf	_nout^0,c
  1182                           
  1183                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1184  001602  EF15  F00B         	goto	i2l1268
  1185  001606                     i2l1266:
  1186                           
  1187                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1188  001606  C010  F00A         	movff	vfprintf@fp,vfpfcnvrt@fp
  1189  00160A  C011  F00B         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1190  00160E  0E16               	movlw	low vfprintf@cfmt
  1191  001610  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  1192  001612  0E00               	movlw	high vfprintf@cfmt
  1193  001614  6E0D               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1194  001616  C014  F00E         	movff	vfprintf@ap,vfpfcnvrt@ap
  1195  00161A  C015  F00F         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1196  00161E  ECF7  F009         	call	_vfpfcnvrt	;wreg free
  1197  001622  500A               	movf	?_vfpfcnvrt^0,w,c
  1198  001624  2626               	addwf	_nout^0,f,c
  1199  001626  500B               	movf	(?_vfpfcnvrt+1)^0,w,c
  1200  001628  2227               	addwfc	(_nout+1)^0,f,c
  1201  00162A                     i2l1268:
  1202                           
  1203                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1204  00162A  C016  FFF6         	movff	vfprintf@cfmt,tblptrl
  1205  00162E  C017  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1206  001632                     	if	0	;tblptru may be non-zero
  1207  001632                     	endif
  1208  001632                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1209  001632  0E00               	movlw	low (__mediumconst shr (0+16))
  1210  001634  6EF8               	movwf	tblptru,c
  1211  001636                     	endif
  1212  001636  0008               	tblrd		*
  1213  001638  50F5               	movf	tablat,w,c
  1214  00163A  0900               	iorlw	0
  1215  00163C  A4D8               	btfss	status,2,c
  1216  00163E  EF23  F00B         	goto	i2u54_41
  1217  001642  EF25  F00B         	goto	i2u54_40
  1218  001646                     i2u54_41:
  1219  001646  EF03  F00B         	goto	i2l1266
  1220  00164A                     i2u54_40:
  1221  00164A                     
  1222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1223  00164A  C026  F010         	movff	_nout,?_vfprintf
  1224  00164E  C027  F011         	movff	_nout+1,?_vfprintf+1
  1225  001652  0012               	return		;funcret
  1226  001654                     __end_of_vfprintf:
  1227                           	opt callstack 0
  1228                           
  1229 ;; *************** function _vfpfcnvrt *****************
  1230 ;; Defined at:
  1231 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  1234 ;;		 -> NULL(0), 
  1235 ;;  fmt             2   11[COMRAM] PTR PTR unsigned char 
  1236 ;;		 -> vfprintf@cfmt(2), 
  1237 ;;  ap              2   13[COMRAM] PTR PTR void 
  1238 ;;		 -> printf@ap(2), 
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;  llu             8    0        unsigned long long 
  1241 ;;  ll              8    0        long long 
  1242 ;;  f               4    0        long long 
  1243 ;;  vp              3    0        PTR void 
  1244 ;;  ct              3    0        unsigned char [3]
  1245 ;;  cp              3    0        PTR unsigned char 
  1246 ;;  i               2    0        int 
  1247 ;;  done            2    0        int 
  1248 ;;  c               1    0        unsigned char 
  1249 ;; Return value:  Size  Location     Type
  1250 ;;                  2    9[COMRAM] int 
  1251 ;; Registers used:
  1252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1253 ;; Tracked objects:
  1254 ;;		On entry : 0/0
  1255 ;;		On exit  : 0/0
  1256 ;;		Unchanged: 0/0
  1257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1258 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1261 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1262 ;;Total ram usage:        6 bytes
  1263 ;; Hardware stack levels used:    1
  1264 ;; Hardware stack levels required when called:    2
  1265 ;; This function calls:
  1266 ;;		_fputc
  1267 ;; This function is called by:
  1268 ;;		_vfprintf
  1269 ;; This function uses a non-reentrant model
  1270 ;;
  1271                           
  1272                           	psect	text7
  1273  0013EE                     __ptext7:
  1274                           	opt callstack 0
  1275  0013EE                     _vfpfcnvrt:
  1276                           	opt callstack 24
  1277  0013EE                     
  1278                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1279  0013EE  C00C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1280  0013F2  C00D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1281  0013F6  CFDE FFF6          	movff	postinc2,tblptrl
  1282  0013FA  CFDD FFF7          	movff	postdec2,tblptrh
  1283  0013FE                     	if	0	;tblptru may be non-zero
  1284  0013FE                     	endif
  1285  0013FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1286  0013FE  0E00               	movlw	low (__mediumconst shr (0+16))
  1287  001400  6EF8               	movwf	tblptru,c
  1288  001402                     	endif
  1289  001402  0008               	tblrd		*
  1290  001404  50F5               	movf	tablat,w,c
  1291  001406  0A25               	xorlw	37
  1292  001408  A4D8               	btfss	status,2,c
  1293  00140A  EF09  F00A         	goto	i2u48_41
  1294  00140E  EF0B  F00A         	goto	i2u48_40
  1295  001412                     i2u48_41:
  1296  001412  EF54  F00A         	goto	i2l1218
  1297  001416                     i2u48_40:
  1298  001416                     
  1299                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1300  001416  C00C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1301  00141A  C00D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1302  00141E  2ADE               	incf	postinc2,f,c
  1303  001420  0E00               	movlw	0
  1304  001422  22DD               	addwfc	postdec2,f,c
  1305  001424                     
  1306                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1307  001424  0E00               	movlw	0
  1308  001426  6E29               	movwf	(_width+1)^0,c
  1309  001428  0E00               	movlw	0
  1310  00142A  6E28               	movwf	_width^0,c
  1311  00142C  C028  F02C         	movff	_width,_flags
  1312  001430  C029  F02D         	movff	_width+1,_flags+1
  1313  001434                     
  1314                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1315  001434  682A               	setf	_prec^0,c
  1316  001436  682B               	setf	(_prec+1)^0,c
  1317  001438                     
  1318                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1319  001438  C00C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1320  00143C  C00D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1321  001440  CFDE FFF6          	movff	postinc2,tblptrl
  1322  001444  CFDD FFF7          	movff	postdec2,tblptrh
  1323  001448                     	if	0	;tblptru may be non-zero
  1324  001448                     	endif
  1325  001448                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1326  001448  0E00               	movlw	low (__mediumconst shr (0+16))
  1327  00144A  6EF8               	movwf	tblptru,c
  1328  00144C                     	endif
  1329  00144C  0008               	tblrd		*
  1330  00144E  50F5               	movf	tablat,w,c
  1331  001450  0A25               	xorlw	37
  1332  001452  A4D8               	btfss	status,2,c
  1333  001454  EF2E  F00A         	goto	i2u49_41
  1334  001458  EF30  F00A         	goto	i2u49_40
  1335  00145C                     i2u49_41:
  1336  00145C  EF47  F00A         	goto	i2l1212
  1337  001460                     i2u49_40:
  1338  001460                     
  1339                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1340  001460  C00C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1341  001464  C00D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1342  001468  2ADE               	incf	postinc2,f,c
  1343  00146A  0E00               	movlw	0
  1344  00146C  22DD               	addwfc	postdec2,f,c
  1345  00146E                     
  1346                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1347  00146E  0E00               	movlw	0
  1348  001470  6E02               	movwf	(fputc@c+1)^0,c
  1349  001472  0E25               	movlw	37
  1350  001474  6E01               	movwf	fputc@c^0,c
  1351  001476  C00A  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1352  00147A  C00B  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1353  00147E  EC72  F00A         	call	_fputc	;wreg free
  1354  001482                     i2l1208:
  1355                           
  1356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1357  001482  0E00               	movlw	0
  1358  001484  6E0B               	movwf	(?_vfpfcnvrt+1)^0,c
  1359  001486  0E01               	movlw	1
  1360  001488  6E0A               	movwf	?_vfpfcnvrt^0,c
  1361  00148A  EF71  F00A         	goto	i2l190
  1362  00148E                     i2l1212:
  1363                           
  1364                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1365  00148E  C00C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1366  001492  C00D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1367  001496  2ADE               	incf	postinc2,f,c
  1368  001498  0E00               	movlw	0
  1369  00149A  22DD               	addwfc	postdec2,f,c
  1370  00149C                     
  1371                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1372  00149C  0E00               	movlw	0
  1373  00149E  6E0B               	movwf	(?_vfpfcnvrt+1)^0,c
  1374  0014A0  0E00               	movlw	0
  1375  0014A2  6E0A               	movwf	?_vfpfcnvrt^0,c
  1376  0014A4  EF71  F00A         	goto	i2l190
  1377  0014A8                     i2l1218:
  1378                           
  1379                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1380  0014A8  C00C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1381  0014AC  C00D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1382  0014B0  CFDE FFF6          	movff	postinc2,tblptrl
  1383  0014B4  CFDD FFF7          	movff	postdec2,tblptrh
  1384  0014B8                     	if	0	;tblptru may be non-zero
  1385  0014B8                     	endif
  1386  0014B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1387  0014B8  0E00               	movlw	low (__mediumconst shr (0+16))
  1388  0014BA  6EF8               	movwf	tblptru,c
  1389  0014BC                     	endif
  1390  0014BC  0008               	tblrd		*
  1391  0014BE  50F5               	movf	tablat,w,c
  1392  0014C0  6E01               	movwf	fputc@c^0,c
  1393  0014C2  6A02               	clrf	(fputc@c+1)^0,c
  1394  0014C4  C00A  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1395  0014C8  C00B  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1396  0014CC  EC72  F00A         	call	_fputc	;wreg free
  1397  0014D0                     
  1398                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1399  0014D0  C00C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1400  0014D4  C00D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1401  0014D8  2ADE               	incf	postinc2,f,c
  1402  0014DA  0E00               	movlw	0
  1403  0014DC  22DD               	addwfc	postdec2,f,c
  1404  0014DE  EF41  F00A         	goto	i2l1208
  1405  0014E2                     i2l190:
  1406  0014E2  0012               	return		;funcret
  1407  0014E4                     __end_of_vfpfcnvrt:
  1408                           	opt callstack 0
  1409                           
  1410 ;; *************** function _fputc *****************
  1411 ;; Defined at:
  1412 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;  c               2    0[COMRAM] int 
  1415 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  1416 ;;		 -> NULL(0), 
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;		None
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  2    0[COMRAM] int 
  1421 ;; Registers used:
  1422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1428 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1430 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1431 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1432 ;;Total ram usage:        9 bytes
  1433 ;; Hardware stack levels used:    1
  1434 ;; Hardware stack levels required when called:    1
  1435 ;; This function calls:
  1436 ;;		_putch
  1437 ;; This function is called by:
  1438 ;;		_vfpfcnvrt
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442                           	psect	text8
  1443  0014E4                     __ptext8:
  1444                           	opt callstack 0
  1445  0014E4                     _fputc:
  1446                           	opt callstack 24
  1447  0014E4  5003               	movf	fputc@fp^0,w,c
  1448  0014E6  1004               	iorwf	(fputc@fp+1)^0,w,c
  1449  0014E8  B4D8               	btfsc	status,2,c
  1450  0014EA  EF79  F00A         	goto	i2u44_41
  1451  0014EE  EF7B  F00A         	goto	i2u44_40
  1452  0014F2                     i2u44_41:
  1453  0014F2  EF84  F00A         	goto	i2l1184
  1454  0014F6                     i2u44_40:
  1455  0014F6  5003               	movf	fputc@fp^0,w,c
  1456  0014F8  1004               	iorwf	(fputc@fp+1)^0,w,c
  1457  0014FA  A4D8               	btfss	status,2,c
  1458  0014FC  EF82  F00A         	goto	i2u45_41
  1459  001500  EF84  F00A         	goto	i2u45_40
  1460  001504                     i2u45_41:
  1461  001504  EF89  F00A         	goto	i2l1186
  1462  001508                     i2u45_40:
  1463  001508                     i2l1184:
  1464  001508  5001               	movf	fputc@c^0,w,c
  1465  00150A  ECC1  F00B         	call	_putch
  1466  00150E  EFBC  F00A         	goto	i2l882
  1467  001512                     i2l1186:
  1468  001512  EE20 F004          	lfsr	2,4
  1469  001516  5003               	movf	fputc@fp^0,w,c
  1470  001518  26D9               	addwf	fsr2l,f,c
  1471  00151A  5004               	movf	(fputc@fp+1)^0,w,c
  1472  00151C  22DA               	addwfc	fsr2h,f,c
  1473  00151E  50DE               	movf	postinc2,w,c
  1474  001520  10DE               	iorwf	postinc2,w,c
  1475  001522  B4D8               	btfsc	status,2,c
  1476  001524  EF96  F00A         	goto	i2u46_41
  1477  001528  EF98  F00A         	goto	i2u46_40
  1478  00152C                     i2u46_41:
  1479  00152C  EFB3  F00A         	goto	i2l1190
  1480  001530                     i2u46_40:
  1481  001530  EE20 F004          	lfsr	2,4
  1482  001534  5003               	movf	fputc@fp^0,w,c
  1483  001536  26D9               	addwf	fsr2l,f,c
  1484  001538  5004               	movf	(fputc@fp+1)^0,w,c
  1485  00153A  22DA               	addwfc	fsr2h,f,c
  1486  00153C  EE10 F002          	lfsr	1,2
  1487  001540  5003               	movf	fputc@fp^0,w,c
  1488  001542  26E1               	addwf	fsr1l,f,c
  1489  001544  5004               	movf	(fputc@fp+1)^0,w,c
  1490  001546  22E2               	addwfc	fsr1h,f,c
  1491  001548  50DE               	movf	postinc2,w,c
  1492  00154A  5CE6               	subwf	postinc1,w,c
  1493  00154C  50E6               	movf	postinc1,w,c
  1494  00154E  0A80               	xorlw	128
  1495  001550  6E09               	movwf	(??_fputc+4)^0,c
  1496  001552  50DE               	movf	postinc2,w,c
  1497  001554  0A80               	xorlw	128
  1498  001556  5809               	subwfb	(??_fputc+4)^0,w,c
  1499  001558  B0D8               	btfsc	status,0,c
  1500  00155A  EFB1  F00A         	goto	i2u47_41
  1501  00155E  EFB3  F00A         	goto	i2u47_40
  1502  001562                     i2u47_41:
  1503  001562  EFBC  F00A         	goto	i2l882
  1504  001566                     i2u47_40:
  1505  001566                     i2l1190:
  1506  001566  EE20 F002          	lfsr	2,2
  1507  00156A  5003               	movf	fputc@fp^0,w,c
  1508  00156C  26D9               	addwf	fsr2l,f,c
  1509  00156E  5004               	movf	(fputc@fp+1)^0,w,c
  1510  001570  22DA               	addwfc	fsr2h,f,c
  1511  001572  2ADE               	incf	postinc2,f,c
  1512  001574  0E00               	movlw	0
  1513  001576  22DD               	addwfc	postdec2,f,c
  1514  001578                     i2l882:
  1515  001578  0012               	return		;funcret
  1516  00157A                     __end_of_fputc:
  1517                           	opt callstack 0
  1518                           
  1519 ;; *************** function _putch *****************
  1520 ;; Defined at:
  1521 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;  c               1    wreg     unsigned char 
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;  c               1    0[COMRAM] unsigned char 
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  1    wreg      void 
  1528 ;; Registers used:
  1529 ;;		wreg
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1539 ;;Total ram usage:        0 bytes
  1540 ;; Hardware stack levels used:    1
  1541 ;; This function calls:
  1542 ;;		Nothing
  1543 ;; This function is called by:
  1544 ;;		_fputc
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           	psect	text9
  1549  001782                     __ptext9:
  1550                           	opt callstack 0
  1551  001782                     _putch:
  1552                           	opt callstack 24
  1553  001782  0012               	return		;funcret
  1554  001784                     __end_of_putch:
  1555                           	opt callstack 0
  1556                           
  1557 ;; *************** function _handleButton *****************
  1558 ;; Defined at:
  1559 ;;		line 94 in file "main.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;		None
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;  checkRB0        2    4[COMRAM] int 
  1564 ;;  checkRA5        2    2[COMRAM] int 
  1565 ;; Return value:  Size  Location     Type
  1566 ;;                  1    wreg      void 
  1567 ;; Registers used:
  1568 ;;		wreg, status,2, status,0, cstack
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1575 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1577 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1578 ;;Total ram usage:        4 bytes
  1579 ;; Hardware stack levels used:    1
  1580 ;; Hardware stack levels required when called:    1
  1581 ;; This function calls:
  1582 ;;		_readButtonRA5
  1583 ;;		_readButtonRB0
  1584 ;; This function is called by:
  1585 ;;		_myISR
  1586 ;; This function uses a non-reentrant model
  1587 ;;
  1588                           
  1589                           	psect	text10
  1590  0012A8                     __ptext10:
  1591                           	opt callstack 0
  1592  0012A8                     _handleButton:
  1593                           	opt callstack 27
  1594  0012A8                     
  1595                           ;main.c: 95:     int checkRA5 = readButtonRA5();
  1596  0012A8  EC52  F00B         	call	_readButtonRA5	;wreg free
  1597  0012AC  C001  F003         	movff	?_readButtonRA5,handleButton@checkRA5
  1598  0012B0  C002  F004         	movff	?_readButtonRA5+1,handleButton@checkRA5+1
  1599                           
  1600                           ;main.c: 96:     int checkRB0 = readButtonRB0();
  1601  0012B4  EC2A  F00B         	call	_readButtonRB0	;wreg free
  1602  0012B8  C001  F005         	movff	?_readButtonRB0,handleButton@checkRB0
  1603  0012BC  C002  F006         	movff	?_readButtonRB0+1,handleButton@checkRB0+1
  1604  0012C0                     
  1605                           ;main.c: 97:     if(checkRA5 == 2) {
  1606  0012C0  0E02               	movlw	2
  1607  0012C2  1803               	xorwf	handleButton@checkRA5^0,w,c
  1608  0012C4  1004               	iorwf	(handleButton@checkRA5+1)^0,w,c
  1609  0012C6  A4D8               	btfss	status,2,c
  1610  0012C8  EF68  F009         	goto	i2u55_41
  1611  0012CC  EF6A  F009         	goto	i2u55_40
  1612  0012D0                     i2u55_41:
  1613  0012D0  EF96  F009         	goto	i2l1286
  1614  0012D4                     i2u55_40:
  1615  0012D4                     
  1616                           ;main.c: 98:         countRB0 = 0;
  1617  0012D4  0E00               	movlw	0
  1618  0012D6  6E33               	movwf	(_countRB0+1)^0,c
  1619  0012D8  0E00               	movlw	0
  1620  0012DA  6E32               	movwf	_countRB0^0,c
  1621                           
  1622                           ;main.c: 99:         countRB0_1 = 0;
  1623  0012DC  0E00               	movlw	0
  1624  0012DE  6E31               	movwf	(_countRB0_1+1)^0,c
  1625  0012E0  0E00               	movlw	0
  1626  0012E2  6E30               	movwf	_countRB0_1^0,c
  1627                           
  1628                           ;main.c: 100:         countRB0_2 = 0;
  1629  0012E4  0E00               	movlw	0
  1630  0012E6  6E2F               	movwf	(_countRB0_2+1)^0,c
  1631  0012E8  0E00               	movlw	0
  1632  0012EA  6E2E               	movwf	_countRB0_2^0,c
  1633  0012EC                     
  1634                           ;main.c: 101:         countRA5++;
  1635  0012EC  4A38               	infsnz	_countRA5^0,f,c
  1636  0012EE  2A39               	incf	(_countRA5+1)^0,f,c
  1637  0012F0                     
  1638                           ;main.c: 102:         if(countRA5 > 300) {
  1639  0012F0  0E2D               	movlw	45
  1640  0012F2  5C38               	subwf	_countRA5^0,w,c
  1641  0012F4  0E01               	movlw	1
  1642  0012F6  5839               	subwfb	(_countRA5+1)^0,w,c
  1643  0012F8  A0D8               	btfss	status,0,c
  1644  0012FA  EF81  F009         	goto	i2u56_41
  1645  0012FE  EF83  F009         	goto	i2u56_40
  1646  001302                     i2u56_41:
  1647  001302  EF87  F009         	goto	i2l1282
  1648  001306                     i2u56_40:
  1649  001306                     
  1650                           ;main.c: 103:             countRA5_2++;
  1651  001306  4A34               	infsnz	_countRA5_2^0,f,c
  1652  001308  2A35               	incf	(_countRA5_2+1)^0,f,c
  1653                           
  1654                           ;main.c: 104:         }
  1655  00130A  EFF6  F009         	goto	i2l101
  1656  00130E                     i2l1282:
  1657  00130E  5039               	movf	(_countRA5+1)^0,w,c
  1658  001310  E109               	bnz	i2u57_40
  1659  001312  0E65               	movlw	101
  1660  001314  5C38               	subwf	_countRA5^0,w,c
  1661  001316  A0D8               	btfss	status,0,c
  1662  001318  EF90  F009         	goto	i2u57_41
  1663  00131C  EF92  F009         	goto	i2u57_40
  1664  001320                     i2u57_41:
  1665  001320  EFF6  F009         	goto	i2l101
  1666  001324                     i2u57_40:
  1667  001324                     
  1668                           ;main.c: 106:             countRA5_1++;
  1669  001324  4A36               	infsnz	_countRA5_1^0,f,c
  1670  001326  2A37               	incf	(_countRA5_1+1)^0,f,c
  1671  001328  EFF6  F009         	goto	i2l101
  1672  00132C                     i2l1286:
  1673  00132C  0E02               	movlw	2
  1674  00132E  1805               	xorwf	handleButton@checkRB0^0,w,c
  1675  001330  1006               	iorwf	(handleButton@checkRB0+1)^0,w,c
  1676  001332  A4D8               	btfss	status,2,c
  1677  001334  EF9E  F009         	goto	i2u58_41
  1678  001338  EFA0  F009         	goto	i2u58_40
  1679  00133C                     i2u58_41:
  1680  00133C  EFCC  F009         	goto	i2l1300
  1681  001340                     i2u58_40:
  1682  001340                     
  1683                           ;main.c: 110:         countRA5 = 0;
  1684  001340  0E00               	movlw	0
  1685  001342  6E39               	movwf	(_countRA5+1)^0,c
  1686  001344  0E00               	movlw	0
  1687  001346  6E38               	movwf	_countRA5^0,c
  1688                           
  1689                           ;main.c: 111:         countRA5_1 = 0;
  1690  001348  0E00               	movlw	0
  1691  00134A  6E37               	movwf	(_countRA5_1+1)^0,c
  1692  00134C  0E00               	movlw	0
  1693  00134E  6E36               	movwf	_countRA5_1^0,c
  1694                           
  1695                           ;main.c: 112:         countRA5_2 = 0;
  1696  001350  0E00               	movlw	0
  1697  001352  6E35               	movwf	(_countRA5_2+1)^0,c
  1698  001354  0E00               	movlw	0
  1699  001356  6E34               	movwf	_countRA5_2^0,c
  1700  001358                     
  1701                           ;main.c: 113:         countRB0++;
  1702  001358  4A32               	infsnz	_countRB0^0,f,c
  1703  00135A  2A33               	incf	(_countRB0+1)^0,f,c
  1704  00135C                     
  1705                           ;main.c: 114:         if(countRB0 > 300) {
  1706  00135C  0E2D               	movlw	45
  1707  00135E  5C32               	subwf	_countRB0^0,w,c
  1708  001360  0E01               	movlw	1
  1709  001362  5833               	subwfb	(_countRB0+1)^0,w,c
  1710  001364  A0D8               	btfss	status,0,c
  1711  001366  EFB7  F009         	goto	i2u59_41
  1712  00136A  EFB9  F009         	goto	i2u59_40
  1713  00136E                     i2u59_41:
  1714  00136E  EFBD  F009         	goto	i2l1296
  1715  001372                     i2u59_40:
  1716  001372                     
  1717                           ;main.c: 115:             countRB0_2++;
  1718  001372  4A2E               	infsnz	_countRB0_2^0,f,c
  1719  001374  2A2F               	incf	(_countRB0_2+1)^0,f,c
  1720                           
  1721                           ;main.c: 116:         }
  1722  001376  EFF6  F009         	goto	i2l101
  1723  00137A                     i2l1296:
  1724  00137A  5033               	movf	(_countRB0+1)^0,w,c
  1725  00137C  E109               	bnz	i2u60_40
  1726  00137E  0E65               	movlw	101
  1727  001380  5C32               	subwf	_countRB0^0,w,c
  1728  001382  A0D8               	btfss	status,0,c
  1729  001384  EFC6  F009         	goto	i2u60_41
  1730  001388  EFC8  F009         	goto	i2u60_40
  1731  00138C                     i2u60_41:
  1732  00138C  EFF6  F009         	goto	i2l101
  1733  001390                     i2u60_40:
  1734  001390                     
  1735                           ;main.c: 118:             countRB0_1++;
  1736  001390  4A30               	infsnz	_countRB0_1^0,f,c
  1737  001392  2A31               	incf	(_countRB0_1+1)^0,f,c
  1738  001394  EFF6  F009         	goto	i2l101
  1739  001398                     i2l1300:
  1740  001398  0405               	decf	handleButton@checkRB0^0,w,c
  1741  00139A  1006               	iorwf	(handleButton@checkRB0+1)^0,w,c
  1742  00139C  B4D8               	btfsc	status,2,c
  1743  00139E  EFD3  F009         	goto	i2u61_41
  1744  0013A2  EFD5  F009         	goto	i2u61_40
  1745  0013A6                     i2u61_41:
  1746  0013A6  EFDE  F009         	goto	i2l1304
  1747  0013AA                     i2u61_40:
  1748  0013AA  0403               	decf	handleButton@checkRA5^0,w,c
  1749  0013AC  1004               	iorwf	(handleButton@checkRA5+1)^0,w,c
  1750  0013AE  A4D8               	btfss	status,2,c
  1751  0013B0  EFDC  F009         	goto	i2u62_41
  1752  0013B4  EFDE  F009         	goto	i2u62_40
  1753  0013B8                     i2u62_41:
  1754  0013B8  EFF6  F009         	goto	i2l101
  1755  0013BC                     i2u62_40:
  1756  0013BC                     i2l1304:
  1757                           
  1758                           ;main.c: 122:         countRA5 = 0;
  1759  0013BC  0E00               	movlw	0
  1760  0013BE  6E39               	movwf	(_countRA5+1)^0,c
  1761  0013C0  0E00               	movlw	0
  1762  0013C2  6E38               	movwf	_countRA5^0,c
  1763                           
  1764                           ;main.c: 123:         countRA5_1 = 0;
  1765  0013C4  0E00               	movlw	0
  1766  0013C6  6E37               	movwf	(_countRA5_1+1)^0,c
  1767  0013C8  0E00               	movlw	0
  1768  0013CA  6E36               	movwf	_countRA5_1^0,c
  1769                           
  1770                           ;main.c: 124:         countRA5_2 = 0;
  1771  0013CC  0E00               	movlw	0
  1772  0013CE  6E35               	movwf	(_countRA5_2+1)^0,c
  1773  0013D0  0E00               	movlw	0
  1774  0013D2  6E34               	movwf	_countRA5_2^0,c
  1775                           
  1776                           ;main.c: 126:         countRB0 = 0;
  1777  0013D4  0E00               	movlw	0
  1778  0013D6  6E33               	movwf	(_countRB0+1)^0,c
  1779  0013D8  0E00               	movlw	0
  1780  0013DA  6E32               	movwf	_countRB0^0,c
  1781                           
  1782                           ;main.c: 127:         countRB0_1 = 0;
  1783  0013DC  0E00               	movlw	0
  1784  0013DE  6E31               	movwf	(_countRB0_1+1)^0,c
  1785  0013E0  0E00               	movlw	0
  1786  0013E2  6E30               	movwf	_countRB0_1^0,c
  1787                           
  1788                           ;main.c: 128:         countRB0_2 = 0;
  1789  0013E4  0E00               	movlw	0
  1790  0013E6  6E2F               	movwf	(_countRB0_2+1)^0,c
  1791  0013E8  0E00               	movlw	0
  1792  0013EA  6E2E               	movwf	_countRB0_2^0,c
  1793  0013EC                     i2l101:
  1794  0013EC  0012               	return		;funcret
  1795  0013EE                     __end_of_handleButton:
  1796                           	opt callstack 0
  1797                           
  1798 ;; *************** function _readButtonRB0 *****************
  1799 ;; Defined at:
  1800 ;;		line 85 in file "main.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;		None
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;		None
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  2    0[COMRAM] int 
  1807 ;; Registers used:
  1808 ;;		wreg, status,2, status,0
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1814 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1817 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1818 ;;Total ram usage:        2 bytes
  1819 ;; Hardware stack levels used:    1
  1820 ;; This function calls:
  1821 ;;		Nothing
  1822 ;; This function is called by:
  1823 ;;		_handleButton
  1824 ;; This function uses a non-reentrant model
  1825 ;;
  1826                           
  1827                           	psect	text11
  1828  001654                     __ptext11:
  1829                           	opt callstack 0
  1830  001654                     _readButtonRB0:
  1831                           	opt callstack 27
  1832  001654                     
  1833                           ;main.c: 86:     firstReadRB0 = secondReadRB0;
  1834  001654  C041  F042         	movff	_secondReadRB0,_firstReadRB0
  1835  001658                     
  1836                           ;main.c: 87:     secondReadRB0 = PORTBbits.RB0;
  1837  001658  0E00               	movlw	0
  1838  00165A  B081               	btfsc	129,0,c	;volatile
  1839  00165C  0E01               	movlw	1
  1840  00165E  6E41               	movwf	_secondReadRB0^0,c
  1841  001660                     
  1842                           ;main.c: 88:     if(secondReadRB0 == firstReadRB0) {
  1843  001660  5042               	movf	_firstReadRB0^0,w,c
  1844  001662  1841               	xorwf	_secondReadRB0^0,w,c
  1845  001664  A4D8               	btfss	status,2,c
  1846  001666  EF37  F00B         	goto	i2u52_41
  1847  00166A  EF39  F00B         	goto	i2u52_40
  1848  00166E                     i2u52_41:
  1849  00166E  EF4D  F00B         	goto	i2l1258
  1850  001672                     i2u52_40:
  1851  001672                     
  1852                           ;main.c: 89:         return (secondReadRB0 == 0) ? 2 : 1;
  1853  001672  5041               	movf	_secondReadRB0^0,w,c
  1854  001674  B4D8               	btfsc	status,2,c
  1855  001676  EF3F  F00B         	goto	i2u53_41
  1856  00167A  EF41  F00B         	goto	i2u53_40
  1857  00167E                     i2u53_41:
  1858  00167E  EF47  F00B         	goto	i2l1254
  1859  001682                     i2u53_40:
  1860  001682  0E00               	movlw	0
  1861  001684  6E02               	movwf	(?_readButtonRB0+1)^0,c
  1862  001686  0E01               	movlw	1
  1863  001688  6E01               	movwf	?_readButtonRB0^0,c
  1864  00168A  EF51  F00B         	goto	i2l85
  1865  00168E                     i2l1254:
  1866  00168E  0E00               	movlw	0
  1867  001690  6E02               	movwf	(?_readButtonRB0+1)^0,c
  1868  001692  0E02               	movlw	2
  1869  001694  6E01               	movwf	?_readButtonRB0^0,c
  1870  001696  EF51  F00B         	goto	i2l85
  1871  00169A                     i2l1258:
  1872                           
  1873                           ;main.c: 91:     return 0;
  1874  00169A  0E00               	movlw	0
  1875  00169C  6E02               	movwf	(?_readButtonRB0+1)^0,c
  1876  00169E  0E00               	movlw	0
  1877  0016A0  6E01               	movwf	?_readButtonRB0^0,c
  1878  0016A2                     i2l85:
  1879  0016A2  0012               	return		;funcret
  1880  0016A4                     __end_of_readButtonRB0:
  1881                           	opt callstack 0
  1882                           
  1883 ;; *************** function _readButtonRA5 *****************
  1884 ;; Defined at:
  1885 ;;		line 76 in file "main.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;		None
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;		None
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  2    0[COMRAM] int 
  1892 ;; Registers used:
  1893 ;;		wreg, status,2, status,0
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1899 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1902 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1903 ;;Total ram usage:        2 bytes
  1904 ;; Hardware stack levels used:    1
  1905 ;; This function calls:
  1906 ;;		Nothing
  1907 ;; This function is called by:
  1908 ;;		_handleButton
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           	psect	text12
  1913  0016A4                     __ptext12:
  1914                           	opt callstack 0
  1915  0016A4                     _readButtonRA5:
  1916                           	opt callstack 27
  1917  0016A4                     
  1918                           ;main.c: 77:     firstReadRA5 = secondReadRA5;
  1919  0016A4  C043  F044         	movff	_secondReadRA5,_firstReadRA5
  1920  0016A8                     
  1921                           ;main.c: 78:     secondReadRA5 = PORTAbits.RA5;
  1922  0016A8  0E00               	movlw	0
  1923  0016AA  BA80               	btfsc	128,5,c	;volatile
  1924  0016AC  0E01               	movlw	1
  1925  0016AE  6E43               	movwf	_secondReadRA5^0,c
  1926  0016B0                     
  1927                           ;main.c: 79:     if(secondReadRA5 == firstReadRA5) {
  1928  0016B0  5044               	movf	_firstReadRA5^0,w,c
  1929  0016B2  1843               	xorwf	_secondReadRA5^0,w,c
  1930  0016B4  A4D8               	btfss	status,2,c
  1931  0016B6  EF5F  F00B         	goto	i2u50_41
  1932  0016BA  EF61  F00B         	goto	i2u50_40
  1933  0016BE                     i2u50_41:
  1934  0016BE  EF75  F00B         	goto	i2l1240
  1935  0016C2                     i2u50_40:
  1936  0016C2                     
  1937                           ;main.c: 80:         return (secondReadRA5 == 0) ? 2 : 1;
  1938  0016C2  5043               	movf	_secondReadRA5^0,w,c
  1939  0016C4  B4D8               	btfsc	status,2,c
  1940  0016C6  EF67  F00B         	goto	i2u51_41
  1941  0016CA  EF69  F00B         	goto	i2u51_40
  1942  0016CE                     i2u51_41:
  1943  0016CE  EF6F  F00B         	goto	i2l1236
  1944  0016D2                     i2u51_40:
  1945  0016D2  0E00               	movlw	0
  1946  0016D4  6E02               	movwf	(?_readButtonRA5+1)^0,c
  1947  0016D6  0E01               	movlw	1
  1948  0016D8  6E01               	movwf	?_readButtonRA5^0,c
  1949  0016DA  EF79  F00B         	goto	i2l77
  1950  0016DE                     i2l1236:
  1951  0016DE  0E00               	movlw	0
  1952  0016E0  6E02               	movwf	(?_readButtonRA5+1)^0,c
  1953  0016E2  0E02               	movlw	2
  1954  0016E4  6E01               	movwf	?_readButtonRA5^0,c
  1955  0016E6  EF79  F00B         	goto	i2l77
  1956  0016EA                     i2l1240:
  1957                           
  1958                           ;main.c: 82:     return 0;
  1959  0016EA  0E00               	movlw	0
  1960  0016EC  6E02               	movwf	(?_readButtonRA5+1)^0,c
  1961  0016EE  0E00               	movlw	0
  1962  0016F0  6E01               	movwf	?_readButtonRA5^0,c
  1963  0016F2                     i2l77:
  1964  0016F2  0012               	return		;funcret
  1965  0016F4                     __end_of_readButtonRA5:
  1966                           	opt callstack 0
  1967                           
  1968                           	psect	rparam
  1969  0000                     
  1970                           	psect	temp
  1971  000045                     btemp:
  1972                           	opt callstack 0
  1973  000045                     	ds	1
  1974  0000                     int$flags	set	btemp
  1975  0000                     wtemp8	set	btemp+1
  1976  0000                     ttemp5	set	btemp+1
  1977  0000                     ttemp6	set	btemp+4
  1978  0000                     ttemp7	set	btemp+8
  1979                           tosu	equ	0xFFF
  1980                           tosh	equ	0xFFE
  1981                           tosl	equ	0xFFD
  1982                           stkptr	equ	0xFFC
  1983                           pclatu	equ	0xFFB
  1984                           pclath	equ	0xFFA
  1985                           pcl	equ	0xFF9
  1986                           tblptru	equ	0xFF8
  1987                           tblptrh	equ	0xFF7
  1988                           tblptrl	equ	0xFF6
  1989                           tablat	equ	0xFF5
  1990                           prodh	equ	0xFF4
  1991                           prodl	equ	0xFF3
  1992                           indf0	equ	0xFEF
  1993                           postinc0	equ	0xFEE
  1994                           postdec0	equ	0xFED
  1995                           preinc0	equ	0xFEC
  1996                           plusw0	equ	0xFEB
  1997                           fsr0h	equ	0xFEA
  1998                           fsr0l	equ	0xFE9
  1999                           wreg	equ	0xFE8
  2000                           indf1	equ	0xFE7
  2001                           postinc1	equ	0xFE6
  2002                           postdec1	equ	0xFE5
  2003                           preinc1	equ	0xFE4
  2004                           plusw1	equ	0xFE3
  2005                           fsr1h	equ	0xFE2
  2006                           fsr1l	equ	0xFE1
  2007                           bsr	equ	0xFE0
  2008                           indf2	equ	0xFDF
  2009                           postinc2	equ	0xFDE
  2010                           postdec2	equ	0xFDD
  2011                           preinc2	equ	0xFDC
  2012                           plusw2	equ	0xFDB
  2013                           fsr2h	equ	0xFDA
  2014                           fsr2l	equ	0xFD9
  2015                           status	equ	0xFD8


Data Sizes:
    Strings     6
    Constant    0
    Data        4
    BSS         59
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      68
    BANK0           160      3      35
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    S884_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _myISR in COMRAM

    _myISR->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _handleButton->_readButtonRA5
    _handleButton->_readButtonRB0

Critical Paths under _main in BANK0

    None.

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _myISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _myISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      40
                                              0 BANK0      3     3      0
                     _interrupt_init
                           _pin_init
                        _timer0_init
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _interrupt_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myISR                                                8     8      0    1710
                                             29 COMRAM     8     8      0
                       _handleButton
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                               6     4      2    1620
                                             23 COMRAM     6     4      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    1492
                                             15 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           40    34      6    1142
                                              9 COMRAM     6     0      6
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     716
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (3) _handleButton                                         4     4      0      90
                                              2 COMRAM     4     4      0
                      _readButtonRA5
                      _readButtonRB0
 ---------------------------------------------------------------------------------
 (4) _readButtonRB0                                        2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _readButtonRA5                                        2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _interrupt_init
   _pin_init
   _timer0_init

 _myISR (ROOT)
   _handleButton
     _readButtonRA5
     _readButtonRB0
   _printf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      3      23       5       21.9%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     25      44       1       72.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      67      32        0.0%
DATA                 0      0      67       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Sep 13 14:20:56 2019

                     l63 177C                       l66 1776                       l69 176C  
 __end_of_interrupt_init 177E                      l118 12A0                      u700 10C0  
                    u701 10BC                      u710 10E0                      u711 10DC  
                    u800 11B4                      u720 10FA                      u801 11B0  
                    u721 10F6                      u810 11D4                      u730 110C  
                    u650 1036                      u811 11D0                      u731 1108  
                    u651 1032                      u820 11EE                      u740 1126  
                    u660 1052                      u821 11EA                      u741 1122  
                    u661 104E                      u830 1200                      u750 1142  
                    u670 1072                      u831 11FC                      u751 113E  
                    u671 106E                      u840 121A                      u760 1154  
                    u680 108C                      u841 1216                      u761 1150  
                    u681 1088                      u850 1236                      u770 116E  
                    u690 109E                      u851 1232                      u771 116A  
                    u691 109A                      u860 1248                      u780 1188  
                    u861 1244                      u781 1184                      u790 119A  
                    u791 1196                      wreg 000FE8             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     l1400 1158                     l1330 176E  
                   l1402 116E                     l1332 175C                     l1420 11D4  
                   l1412 119E                     l1404 1176                     l1340 1010  
                   l1334 1764                     l1430 1204                     l1422 11DC  
                   l1414 11B4                     l1406 1188                     l1350 1040  
                   l1342 101C                     l1328 1778                     l1336 1766  
                   l1432 121A                     l1424 11EE                     l1416 11B6  
                   l1360 107A                     l1352 1052                     l1344 1024  
                   l1434 121C                     l1418 11BE                     l1370 10C0  
                   l1362 108C                     l1354 1054                     l1346 1036  
                   l1338 1008                     l1436 1224                     l1380 10FA  
                   l1372 10C2                     l1356 105C                     l1348 1038  
                   l1438 1236                     l1390 1128                     l1374 10CA  
                   l1366 10A2                     l1358 1072                     l1446 124C  
                   l1392 1130                     l1376 10E0                     l1368 10AA  
                   l1394 1142                     l1386 1110                     l1378 10E8  
                   l1484 1262                     l1388 1126                     STR_1 1001  
                   _LATD 000F8C                     i2l77 16F2                     i2l85 16A2  
                   _dbuf 0060                     _main 1008                     _prec 002A  
                   _nout 0026                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 0045  
                   start 000E            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000                    ?_main 0001          ?_interrupt_init 0001  
                  _T0CON 000FD5                    i2l101 13EC                    i2l107 15CE  
                  i2l190 14E2                    i2l195 164A                    i2l196 1652  
                  i2l900 1782                    i2l882 1578                    i2l897 175A  
           vfpfcnvrt@fmt 000C                    _TMR0L 000FD6                    _TRISD 000F95  
          __CFG_PWRT$OFF 000000           __CFG_FCMEN$OFF 000000                    _flags 002C  
                  _myISR 0008                    _fputc 14E4                    _width 0028  
                  _putch 1782           __CFG_BOREN$OFF 000000                    tablat 000FF5  
                  ttemp5 0046                    ttemp6 0049                    ttemp7 004D  
                  status 000FD8                    wtemp8 0046          __initialization 16F4  
           __end_of_main 12A8     __end_of_handleButton 13EE                   ??_main 0080  
          __activetblptr 000003   __size_of_readButtonRB0 0050   __size_of_readButtonRA5 0050  
   _buttonRB0_1s_pressed 003B                   _ADCON1 000FC1                   ?_myISR 0001  
                 ?_fputc 0001                   ?_putch 0001     _buttonRB0_3s_pressed 003A  
                 i2l1200 1434                   i2l1202 1438                   i2l1300 1398  
                 i2l1220 14D0                   i2l1204 1460                   i2l1212 148E  
                 i2l1230 16B0                   i2l1302 13AA                   i2l1214 149C  
                 i2l1206 146E                   i2l1232 16C2                   i2l1240 16EA  
                 i2l1304 13BC                   i2l1208 1482                   i2l1320 15BE  
                 i2l1312 159C                   i2l1234 16D2                   i2l1226 16A4  
                 i2l1250 1672                   i2l1218 14A8                   i2l1306 1736  
                 i2l1322 15C2                   i2l1314 15AA                   i2l1236 16DE  
                 i2l1228 16A8                   i2l1252 1682                   i2l1244 1654  
                 i2l1180 14E4                   i2l1308 173E                   i2l1316 15B8  
                 i2l1254 168E                   i2l1246 1658                   i2l1270 12A8  
                 i2l1190 1566                   i2l1182 14F6                   i2l1262 15F2  
                 i2l1318 15BA                   i2l1248 1660                   i2l1280 1306  
                 i2l1272 12C0                   i2l1184 1508                   i2l1264 15FA  
                 i2l1258 169A                   i2l1290 1358                   i2l1282 130E  
                 i2l1274 12D4                   i2l1186 1512                   i2l1194 13EE  
                 i2l1266 1606                   i2l1292 135C                   i2l1284 1324  
                 i2l1276 12EC                   i2l1188 1530                   i2l1196 1416  
                 i2l1268 162A                   i2l1294 1372                   i2l1278 12F0  
                 i2l1286 132C                   i2l1198 1424                   i2l1296 137A  
                 i2l1288 1340                   i2l1298 1390                   _OSCCON 000FD3  
         __CFG_XINST$OFF 000000             vfprintf@cfmt 0016             ?_timer0_init 0001  
                 clear_0 171A                   clear_1 1726                   _printf 1736  
       __end_of_pin_init 176E                   fputc@c 0001             __pdataCOMRAM 0041  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                   putch@c 0001         __end_of_vfprintf 1654  
             __accesstop 0060  __end_of__initialization 172C            _readButtonRB0 1654  
          _readButtonRA5 16A4            ___rparam_used 000001     _buttonRA5_1s_pressed 003E  
         __pcstackCOMRAM 0001            __end_of_myISR 15F2            __end_of_fputc 157A  
          __end_of_putch 1784     _buttonRA5_3s_pressed 003D          __CFG_OSC$INTIO7 000000  
                ??_myISR 001E                  ??_fputc 0005                  ??_putch 0001  
             __pbssBANK0 0060           ?_readButtonRB0 0001           ?_readButtonRA5 0001  
  __size_of_handleButton 0146         ??_interrupt_init 0080                  ?_printf 0018  
     __size_of_vfpfcnvrt 00F6                  i2u50_40 16C2                  i2u50_41 16BE  
                i2u51_40 16D2                  i2u51_41 16CE                  i2u52_40 1672  
                i2u60_40 1390                  i2u44_40 14F6                  i2u52_41 166E  
                i2u60_41 138C                  i2u44_41 14F2                  i2u53_40 1682  
                i2u61_40 13AA                  i2u45_40 1508                  i2u53_41 167E  
                i2u61_41 13A6                  i2u45_41 1504                  i2u62_40 13BC  
                i2u46_40 1530                  i2u54_40 164A                  i2u62_41 13B8  
                i2u46_41 152C                  i2u54_41 1646                  _OSCTUNE 000F9B  
                i2u55_40 12D4                  i2u47_40 1566                  i2u63_40 15AA  
                i2u55_41 12D0                  i2u47_41 1562                  i2u63_41 15A6  
                i2u56_40 1306                  i2u48_40 1416                  i2u64_40 15B8  
                i2u56_41 1302                  i2u48_41 1412                  i2u64_41 15B4  
                i2u57_40 1324                  i2u49_40 1460                  i2u57_41 1320  
                i2u49_41 145C                  i2u58_40 1340                  i2u58_41 133C  
                i2u59_40 1372                  i2u59_41 136E               _countRB0_1 0030  
             _countRB0_2 002E               _countRA5_1 0036               _countRA5_2 0034  
           _handleButton 12A8                ?_pin_init 0001                  __Hparam 0000  
                __Lparam 0000                ?_vfprintf 0010             __psmallconst 1000  
                __pcinit 16F4                  __ramtop 1000     __size_of_timer0_init 000A  
                __ptext0 1008                  __ptext1 176E                  __ptext2 175C  
                __ptext3 1778                  __ptext5 1736                  __ptext6 15F2  
                __ptext7 13EE                  __ptext8 14E4                  __ptext9 1782  
        __size_of_printf 0026           __pintcode_body 157A     end_of_initialization 172C  
        ??_readButtonRB0 0003          ??_readButtonRA5 0003                  fputc@fp 0003  
                int_func 157A               ??_pin_init 0080        __end_of_vfpfcnvrt 14E4  
                postdec1 000FE5                  postdec2 000FDD                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE               ??_vfprintf 0016  
   handleButton@checkRB0 0005     handleButton@checkRA5 0003                _PORTAbits 000F80  
              _PORTBbits 000F81                _TRISAbits 000F92                _TRISBbits 000F93  
            vfpfcnvrt@ap 000E              vfpfcnvrt@fp 000A            __pidataCOMRAM 177E  
           _firstReadRB0 0042             _firstReadRA5 0044            _secondReadRB0 0041  
          _secondReadRA5 0043           __end_of_printf 175C      start_initialization 16F4  
            vfprintf@fmt 0012                 ??_printf 001A              __pbssCOMRAM 0026  
          __pcstackBANK0 0080                __pintcode 0008        __size_of_pin_init 0012  
      __size_of_vfprintf 0062              __smallconst 1000                _buttonRB0 003C  
              _buttonRA5 003F           __size_of_myISR 15EA           __size_of_fputc 0096  
         __size_of_putch 0002            ??_timer0_init 0080                _vfpfcnvrt 13EE  
__size_of_interrupt_init 0006                main@state 0082                copy_data0 1708  
  __end_of_readButtonRB0 16A4    __end_of_readButtonRA5 16F4                 __Hrparam 0000  
             vfprintf@ap 0014                 __Lrparam 0000               vfprintf@fp 0010  
             ?_vfpfcnvrt 000A      __end_of_timer0_init 1778                 __ptext10 12A8  
               __ptext11 1654                 __ptext12 16A4                 _ledValue 0040  
               _countRB0 0032                 _countRA5 0038            __size_of_main 02A0  
               _pin_init 175C                 int$flags 0045                 _vfprintf 15F2  
              printf@fmt 0018               _INTCONbits 000FF2                 intlevel2 0000  
          ?_handleButton 0001                 printf@ap 001C              _timer0_init 176E  
            ??_vfpfcnvrt 0010           _interrupt_init 1778           ??_handleButton 0003  
