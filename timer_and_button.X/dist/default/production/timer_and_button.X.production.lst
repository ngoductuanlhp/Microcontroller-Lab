

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Sep 14 15:46:18 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32  0000                     
    33                           ; Version 2.10
    34                           ; Generated 31/07/2019 GMT
    35                           ; 
    36                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F8722 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     
    68                           	psect	idataCOMRAM
    69  00179C                     __pidataCOMRAM:
    70                           	opt callstack 0
    71                           
    72                           ;initializer for _secondReadRB0
    73  00179C  01                 	db	1
    74                           
    75                           ;initializer for _firstReadRB0
    76  00179D  01                 	db	1
    77                           
    78                           ;initializer for _secondReadRA5
    79  00179E  01                 	db	1
    80                           
    81                           ;initializer for _firstReadRA5
    82  00179F  01                 	db	1
    83  0000                     _PORTBbits	set	3969
    84  0000                     _PORTAbits	set	3968
    85  0000                     _OSCTUNE	set	3995
    86  0000                     _OSCCON	set	4051
    87  0000                     _ADCON1	set	4033
    88  0000                     _TRISBbits	set	3987
    89  0000                     _TRISAbits	set	3986
    90  0000                     _LATD	set	3980
    91  0000                     _TRISD	set	3989
    92  0000                     _TMR0L	set	4054
    93  0000                     _T0CON	set	4053
    94  0000                     _INTCONbits	set	4082
    95                           
    96                           	psect	smallconst
    97  001000                     __psmallconst:
    98                           	opt callstack 0
    99  001000  00                 	db	0
   100  001001                     STR_1:
   101  001001  68                 	db	104	;'h'
   102  001002  65                 	db	101	;'e'
   103  001003  6C                 	db	108	;'l'
   104  001004  6C                 	db	108	;'l'
   105  001005  6F                 	db	111	;'o'
   106  001006  00                 	db	0
   107                           
   108                           ; #config settings
   109  001007  00                 	db	0	; dummy byte at the end
   110  0000                     
   111                           	psect	cinit
   112  001708                     __pcinit:
   113                           	opt callstack 0
   114  001708                     start_initialization:
   115                           	opt callstack 0
   116  001708                     __initialization:
   117                           	opt callstack 0
   118                           
   119                           ; Initialize objects allocated to COMRAM (4 bytes)
   120                           ; load TBLPTR registers with __pidataCOMRAM
   121  001708  0E9C               	movlw	low __pidataCOMRAM
   122  00170A  6EF6               	movwf	tblptrl,c
   123  00170C  0E17               	movlw	high __pidataCOMRAM
   124  00170E  6EF7               	movwf	tblptrh,c
   125  001710  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   126  001712  6EF8               	movwf	tblptru,c
   127  001714  EE00  F03D         	lfsr	0,__pdataCOMRAM
   128  001718  EE10 F004          	lfsr	1,4
   129  00171C                     copy_data0:
   130  00171C  0009               	tblrd		*+
   131  00171E  CFF5 FFEE          	movff	tablat,postinc0
   132  001722  50E5               	movf	postdec1,w,c
   133  001724  50E1               	movf	fsr1l,w,c
   134  001726  E1FA               	bnz	copy_data0
   135                           
   136                           ; Clear objects allocated to BANK0 (32 bytes)
   137  001728  EE00  F060         	lfsr	0,__pbssBANK0
   138  00172C  0E20               	movlw	32
   139  00172E                     clear_0:
   140  00172E  6AEE               	clrf	postinc0,c
   141  001730  06E8               	decf	wreg,f,c
   142  001732  E1FD               	bnz	clear_0
   143                           
   144                           ; Clear objects allocated to COMRAM (23 bytes)
   145  001734  EE00  F026         	lfsr	0,__pbssCOMRAM
   146  001738  0E17               	movlw	23
   147  00173A                     clear_1:
   148  00173A  6AEE               	clrf	postinc0,c
   149  00173C  06E8               	decf	wreg,f,c
   150  00173E  E1FD               	bnz	clear_1
   151  001740                     end_of_initialization:
   152                           	opt callstack 0
   153  001740                     __end_of__initialization:
   154                           	opt callstack 0
   155  001740  9041               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   156  001742  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   157  001744  0100               	movlb	0
   158  001746  EF04  F008         	goto	_main	;jump to C main() function
   159                           
   160                           	psect	bssCOMRAM
   161  000026                     __pbssCOMRAM:
   162                           	opt callstack 0
   163  000026                     _nout:
   164                           	opt callstack 0
   165  000026                     	ds	2
   166  000028                     _width:
   167                           	opt callstack 0
   168  000028                     	ds	2
   169  00002A                     _prec:
   170                           	opt callstack 0
   171  00002A                     	ds	2
   172  00002C                     _flags:
   173                           	opt callstack 0
   174  00002C                     	ds	2
   175  00002E                     _countRB0:
   176                           	opt callstack 0
   177  00002E                     	ds	2
   178  000030                     _countRA5:
   179                           	opt callstack 0
   180  000030                     	ds	2
   181  000032                     _decrease2:
   182                           	opt callstack 0
   183  000032                     	ds	1
   184  000033                     _decrease1:
   185                           	opt callstack 0
   186  000033                     	ds	1
   187  000034                     _increase2:
   188                           	opt callstack 0
   189  000034                     	ds	1
   190  000035                     _increase1:
   191                           	opt callstack 0
   192  000035                     	ds	1
   193  000036                     _buttonRB0_3s_pressed:
   194                           	opt callstack 0
   195  000036                     	ds	1
   196  000037                     _buttonRB0_1s_pressed:
   197                           	opt callstack 0
   198  000037                     	ds	1
   199  000038                     _buttonRB0:
   200                           	opt callstack 0
   201  000038                     	ds	1
   202  000039                     _buttonRA5_3s_pressed:
   203                           	opt callstack 0
   204  000039                     	ds	1
   205  00003A                     _buttonRA5_1s_pressed:
   206                           	opt callstack 0
   207  00003A                     	ds	1
   208  00003B                     _buttonRA5:
   209                           	opt callstack 0
   210  00003B                     	ds	1
   211  00003C                     _ledValue:
   212                           	opt callstack 0
   213  00003C                     	ds	1
   214                           
   215                           	psect	dataCOMRAM
   216  00003D                     __pdataCOMRAM:
   217                           	opt callstack 0
   218  00003D                     _secondReadRB0:
   219                           	opt callstack 0
   220  00003D                     	ds	1
   221  00003E                     _firstReadRB0:
   222                           	opt callstack 0
   223  00003E                     	ds	1
   224  00003F                     _secondReadRA5:
   225                           	opt callstack 0
   226  00003F                     	ds	1
   227  000040                     _firstReadRA5:
   228                           	opt callstack 0
   229  000040                     	ds	1
   230                           
   231                           	psect	bssBANK0
   232  000060                     __pbssBANK0:
   233                           	opt callstack 0
   234  000060                     	ds	32
   235                           
   236                           	psect	cstackBANK0
   237  000080                     __pcstackBANK0:
   238                           	opt callstack 0
   239  000080                     ??_main:
   240                           
   241                           ; 1 bytes @ 0x0
   242  000080                     	ds	2
   243  000082                     main@state:
   244                           	opt callstack 0
   245                           
   246                           ; 1 bytes @ 0x2
   247  000082                     	ds	1
   248                           
   249                           	psect	cstackCOMRAM
   250  000001                     __pcstackCOMRAM:
   251                           	opt callstack 0
   252  000001                     ?_readButtonRA5:
   253                           	opt callstack 0
   254  000001                     ?_readButtonRB0:
   255                           	opt callstack 0
   256  000001                     ?___lwmod:
   257                           	opt callstack 0
   258  000001                     ___lwmod@dividend:
   259                           	opt callstack 0
   260  000001                     fputc@c:
   261                           	opt callstack 0
   262                           
   263                           ; 2 bytes @ 0x0
   264  000001                     	ds	2
   265  000003                     ___lwmod@divisor:
   266                           	opt callstack 0
   267  000003                     fputc@fp:
   268                           	opt callstack 0
   269                           
   270                           ; 2 bytes @ 0x2
   271  000003                     	ds	2
   272  000005                     ??_fputc:
   273  000005                     ___lwmod@counter:
   274                           	opt callstack 0
   275                           
   276                           ; 1 bytes @ 0x4
   277  000005                     	ds	1
   278  000006                     handleButton@checkRA5:
   279                           	opt callstack 0
   280                           
   281                           ; 2 bytes @ 0x5
   282  000006                     	ds	2
   283  000008                     handleButton@checkRB0:
   284                           	opt callstack 0
   285                           
   286                           ; 2 bytes @ 0x7
   287  000008                     	ds	2
   288  00000A                     ?_vfpfcnvrt:
   289                           	opt callstack 0
   290  00000A                     vfpfcnvrt@fp:
   291                           	opt callstack 0
   292                           
   293                           ; 2 bytes @ 0x9
   294  00000A                     	ds	2
   295  00000C                     vfpfcnvrt@fmt:
   296                           	opt callstack 0
   297                           
   298                           ; 2 bytes @ 0xB
   299  00000C                     	ds	2
   300  00000E                     vfpfcnvrt@ap:
   301                           	opt callstack 0
   302                           
   303                           ; 2 bytes @ 0xD
   304  00000E                     	ds	2
   305  000010                     ?_vfprintf:
   306                           	opt callstack 0
   307  000010                     vfprintf@fp:
   308                           	opt callstack 0
   309                           
   310                           ; 2 bytes @ 0xF
   311  000010                     	ds	2
   312  000012                     vfprintf@fmt:
   313                           	opt callstack 0
   314                           
   315                           ; 2 bytes @ 0x11
   316  000012                     	ds	2
   317  000014                     vfprintf@ap:
   318                           	opt callstack 0
   319                           
   320                           ; 2 bytes @ 0x13
   321  000014                     	ds	2
   322  000016                     vfprintf@cfmt:
   323                           	opt callstack 0
   324                           
   325                           ; 2 bytes @ 0x15
   326  000016                     	ds	2
   327  000018                     ?_printf:
   328                           	opt callstack 0
   329  000018                     printf@fmt:
   330                           	opt callstack 0
   331                           
   332                           ; 2 bytes @ 0x17
   333  000018                     	ds	2
   334  00001A                     
   335                           ; 1 bytes @ 0x19
   336  00001A                     	ds	2
   337  00001C                     printf@ap:
   338                           	opt callstack 0
   339                           
   340                           ; 2 bytes @ 0x1B
   341  00001C                     	ds	2
   342  00001E                     ??_myISR:
   343                           
   344                           ; 1 bytes @ 0x1D
   345  00001E                     	ds	8
   346                           
   347 ;;
   348 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   349 ;;
   350 ;; *************** function _main *****************
   351 ;; Defined at:
   352 ;;		line 134 in file "main.c"
   353 ;; Parameters:    Size  Location     Type
   354 ;;		None
   355 ;; Auto vars:     Size  Location     Type
   356 ;;  state           1    2[BANK0 ] enum E4890
   357 ;; Return value:  Size  Location     Type
   358 ;;                  1    wreg      void 
   359 ;; Registers used:
   360 ;;		wreg, status,2, status,0, cstack
   361 ;; Tracked objects:
   362 ;;		On entry : 0/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   367 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   368 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   369 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   370 ;;Total ram usage:        3 bytes
   371 ;; Hardware stack levels required when called:    7
   372 ;; This function calls:
   373 ;;		_interrupt_init
   374 ;;		_osc_init
   375 ;;		_pin_init
   376 ;;		_timer0_init
   377 ;; This function is called by:
   378 ;;		Startup code after reset
   379 ;; This function uses a non-reentrant model
   380 ;;
   381                           
   382                           	psect	text0
   383  001008                     __ptext0:
   384                           	opt callstack 0
   385  001008                     _main:
   386                           	opt callstack 24
   387  001008                     
   388                           ;main.c: 136:     enum State state = INIT;
   389  001008  0E00               	movlw	0
   390  00100A  0100               	movlb	0	; () banked
   391  00100C  6F82               	movwf	main@state& (0+255),b
   392  00100E                     
   393                           ; BSR set to: 0
   394                           ;main.c: 137:     pin_init();
   395  00100E  ECB8  F00B         	call	_pin_init	;wreg free
   396  001012                     
   397                           ;main.c: 138:     timer0_init();
   398  001012  ECC1  F00B         	call	_timer0_init	;wreg free
   399  001016                     
   400                           ;main.c: 139:     interrupt_init();
   401  001016  ECCB  F00B         	call	_interrupt_init	;wreg free
   402                           
   403                           ;main.c: 140:     osc_init();
   404  00101A  ECC6  F00B         	call	_osc_init	;wreg free
   405  00101E                     l1375:
   406                           
   407                           ;main.c: 142:         LATD = ledValue;
   408  00101E  C03C  FF8C         	movff	_ledValue,3980	;volatile
   409                           
   410                           ;main.c: 143:         switch(state) {
   411  001022  EF02  F009         	goto	l1467
   412  001026                     l1377:
   413                           
   414                           ; BSR set to: 0
   415                           ;main.c: 145:                 if(countRA5 > 0) {
   416  001026  5030               	movf	_countRA5^0,w,c
   417  001028  1031               	iorwf	(_countRA5+1)^0,w,c
   418  00102A  B4D8               	btfsc	status,2,c
   419  00102C  EF1A  F008         	goto	u701
   420  001030  EF1C  F008         	goto	u700
   421  001034                     u701:
   422  001034  EF21  F008         	goto	l1383
   423  001038                     u700:
   424  001038                     
   425                           ; BSR set to: 0
   426                           ;main.c: 146:                     ledValue++;
   427  001038  2A3C               	incf	_ledValue^0,f,c
   428  00103A                     
   429                           ; BSR set to: 0
   430                           ;main.c: 147:                     state = INCREASE0;
   431  00103A  0E01               	movlw	1
   432  00103C  6F82               	movwf	main@state& (0+255),b
   433                           
   434                           ;main.c: 148:                 }
   435  00103E  EF0F  F008         	goto	l1375
   436  001042                     l1383:
   437                           
   438                           ; BSR set to: 0
   439  001042  502E               	movf	_countRB0^0,w,c
   440  001044  102F               	iorwf	(_countRB0+1)^0,w,c
   441  001046  B4D8               	btfsc	status,2,c
   442  001048  EF28  F008         	goto	u711
   443  00104C  EF2A  F008         	goto	u710
   444  001050                     u711:
   445  001050  EF2C  F009         	goto	l119
   446  001054                     u710:
   447  001054                     
   448                           ; BSR set to: 0
   449                           ;main.c: 150:                     ledValue--;
   450  001054  063C               	decf	_ledValue^0,f,c
   451  001056                     l1387:
   452                           
   453                           ; BSR set to: 0
   454                           ;main.c: 151:                     state = DECREASE0;
   455  001056  0E04               	movlw	4
   456  001058  6F82               	movwf	main@state& (0+255),b
   457  00105A  EF0F  F008         	goto	l1375
   458  00105E                     l1389:
   459                           
   460                           ; BSR set to: 0
   461                           ;main.c: 155:                 if(countRA5 > 100)
   462  00105E  5031               	movf	(_countRA5+1)^0,w,c
   463  001060  E109               	bnz	u720
   464  001062  0E65               	movlw	101
   465  001064  5C30               	subwf	_countRA5^0,w,c
   466  001066  A0D8               	btfss	status,0,c
   467  001068  EF38  F008         	goto	u721
   468  00106C  EF3A  F008         	goto	u720
   469  001070                     u721:
   470  001070  EF3E  F008         	goto	l1393
   471  001074                     u720:
   472  001074                     
   473                           ; BSR set to: 0
   474                           ;main.c: 156:                     state = INCREASE1;
   475  001074  0E02               	movlw	2
   476  001076  6F82               	movwf	main@state& (0+255),b
   477  001078  EF0F  F008         	goto	l1375
   478  00107C                     l1393:
   479                           
   480                           ; BSR set to: 0
   481  00107C  5030               	movf	_countRA5^0,w,c
   482  00107E  1031               	iorwf	(_countRA5+1)^0,w,c
   483  001080  A4D8               	btfss	status,2,c
   484  001082  EF45  F008         	goto	u731
   485  001086  EF47  F008         	goto	u730
   486  00108A                     u731:
   487  00108A  EF0F  F008         	goto	l1375
   488  00108E                     u730:
   489  00108E                     
   490                           ; BSR set to: 0
   491                           ;main.c: 158:                     state = (countRB0 > 0) ? DECREASE0 : INIT;
   492  00108E  502E               	movf	_countRB0^0,w,c
   493  001090  102F               	iorwf	(_countRB0+1)^0,w,c
   494  001092  A4D8               	btfss	status,2,c
   495  001094  EF4E  F008         	goto	u741
   496  001098  EF50  F008         	goto	u740
   497  00109C                     u741:
   498  00109C  EF2B  F008         	goto	l1387
   499  0010A0                     u740:
   500  0010A0                     l1397:
   501                           
   502                           ; BSR set to: 0
   503  0010A0  0E00               	movlw	0
   504  0010A2  6F82               	movwf	main@state& (0+255),b
   505  0010A4  EF0F  F008         	goto	l1375
   506  0010A8                     l1401:
   507                           
   508                           ; BSR set to: 0
   509                           ;main.c: 161:                 if(increase1) {
   510  0010A8  5035               	movf	_increase1^0,w,c
   511  0010AA  B4D8               	btfsc	status,2,c
   512  0010AC  EF5A  F008         	goto	u751
   513  0010B0  EF5C  F008         	goto	u750
   514  0010B4                     u751:
   515  0010B4  EF5F  F008         	goto	l1407
   516  0010B8                     u750:
   517  0010B8                     
   518                           ; BSR set to: 0
   519                           ;main.c: 162:                     ledValue++;
   520  0010B8  2A3C               	incf	_ledValue^0,f,c
   521  0010BA                     
   522                           ; BSR set to: 0
   523                           ;main.c: 163:                     increase1 = 0;
   524  0010BA  0E00               	movlw	0
   525  0010BC  6E35               	movwf	_increase1^0,c
   526  0010BE                     l1407:
   527                           
   528                           ; BSR set to: 0
   529                           ;main.c: 165:                 if(countRA5 > 300)
   530  0010BE  0E2D               	movlw	45
   531  0010C0  5C30               	subwf	_countRA5^0,w,c
   532  0010C2  0E01               	movlw	1
   533  0010C4  5831               	subwfb	(_countRA5+1)^0,w,c
   534  0010C6  A0D8               	btfss	status,0,c
   535  0010C8  EF68  F008         	goto	u761
   536  0010CC  EF6A  F008         	goto	u760
   537  0010D0                     u761:
   538  0010D0  EF6E  F008         	goto	l1411
   539  0010D4                     u760:
   540  0010D4                     
   541                           ; BSR set to: 0
   542                           ;main.c: 166:                     state = INCREASE2;
   543  0010D4  0E03               	movlw	3
   544  0010D6  6F82               	movwf	main@state& (0+255),b
   545  0010D8  EF0F  F008         	goto	l1375
   546  0010DC                     l1411:
   547                           
   548                           ; BSR set to: 0
   549  0010DC  5030               	movf	_countRA5^0,w,c
   550  0010DE  1031               	iorwf	(_countRA5+1)^0,w,c
   551  0010E0  A4D8               	btfss	status,2,c
   552  0010E2  EF75  F008         	goto	u771
   553  0010E6  EF77  F008         	goto	u770
   554  0010EA                     u771:
   555  0010EA  EF0F  F008         	goto	l1375
   556  0010EE                     u770:
   557  0010EE                     
   558                           ; BSR set to: 0
   559                           ;main.c: 168:                     state = (countRB0 > 0) ? DECREASE0 : INIT;
   560  0010EE  502E               	movf	_countRB0^0,w,c
   561  0010F0  102F               	iorwf	(_countRB0+1)^0,w,c
   562  0010F2  A4D8               	btfss	status,2,c
   563  0010F4  EF7E  F008         	goto	u781
   564  0010F8  EF80  F008         	goto	u780
   565  0010FC                     u781:
   566  0010FC  EF2B  F008         	goto	l1387
   567  001100                     u780:
   568  001100  EF50  F008         	goto	l1397
   569  001104                     l1419:
   570                           
   571                           ; BSR set to: 0
   572                           ;main.c: 171:                 if(increase2) {
   573  001104  5034               	movf	_increase2^0,w,c
   574  001106  B4D8               	btfsc	status,2,c
   575  001108  EF88  F008         	goto	u791
   576  00110C  EF8A  F008         	goto	u790
   577  001110                     u791:
   578  001110  EF8D  F008         	goto	l1425
   579  001114                     u790:
   580  001114                     
   581                           ; BSR set to: 0
   582                           ;main.c: 172:                     ledValue++;
   583  001114  2A3C               	incf	_ledValue^0,f,c
   584  001116                     
   585                           ; BSR set to: 0
   586                           ;main.c: 173:                     increase2 = 0;
   587  001116  0E00               	movlw	0
   588  001118  6E34               	movwf	_increase2^0,c
   589  00111A                     l1425:
   590                           
   591                           ; BSR set to: 0
   592                           ;main.c: 175:                 if(countRA5 == 0)
   593  00111A  5030               	movf	_countRA5^0,w,c
   594  00111C  1031               	iorwf	(_countRA5+1)^0,w,c
   595  00111E  A4D8               	btfss	status,2,c
   596  001120  EF94  F008         	goto	u801
   597  001124  EF96  F008         	goto	u800
   598  001128                     u801:
   599  001128  EF0F  F008         	goto	l1375
   600  00112C                     u800:
   601  00112C                     
   602                           ; BSR set to: 0
   603                           ;main.c: 176:                     state = (countRB0 > 0) ? DECREASE0 : INIT;
   604  00112C  502E               	movf	_countRB0^0,w,c
   605  00112E  102F               	iorwf	(_countRB0+1)^0,w,c
   606  001130  A4D8               	btfss	status,2,c
   607  001132  EF9D  F008         	goto	u811
   608  001136  EF9F  F008         	goto	u810
   609  00113A                     u811:
   610  00113A  EF2B  F008         	goto	l1387
   611  00113E                     u810:
   612  00113E  EF50  F008         	goto	l1397
   613  001142                     l1433:
   614                           
   615                           ; BSR set to: 0
   616                           ;main.c: 179:                 if(countRB0 > 100)
   617  001142  502F               	movf	(_countRB0+1)^0,w,c
   618  001144  E109               	bnz	u820
   619  001146  0E65               	movlw	101
   620  001148  5C2E               	subwf	_countRB0^0,w,c
   621  00114A  A0D8               	btfss	status,0,c
   622  00114C  EFAA  F008         	goto	u821
   623  001150  EFAC  F008         	goto	u820
   624  001154                     u821:
   625  001154  EFB0  F008         	goto	l1437
   626  001158                     u820:
   627  001158                     
   628                           ; BSR set to: 0
   629                           ;main.c: 180:                     state = DECREASE1;
   630  001158  0E05               	movlw	5
   631  00115A  6F82               	movwf	main@state& (0+255),b
   632  00115C  EF0F  F008         	goto	l1375
   633  001160                     l1437:
   634                           
   635                           ; BSR set to: 0
   636  001160  502E               	movf	_countRB0^0,w,c
   637  001162  102F               	iorwf	(_countRB0+1)^0,w,c
   638  001164  A4D8               	btfss	status,2,c
   639  001166  EFB7  F008         	goto	u831
   640  00116A  EFB9  F008         	goto	u830
   641  00116E                     u831:
   642  00116E  EF2C  F009         	goto	l119
   643  001172                     u830:
   644  001172                     l1439:
   645                           
   646                           ; BSR set to: 0
   647                           ;main.c: 182:                     state = (countRA5 > 0) ? INCREASE0 : INIT;
   648  001172  5030               	movf	_countRA5^0,w,c
   649  001174  1031               	iorwf	(_countRA5+1)^0,w,c
   650  001176  A4D8               	btfss	status,2,c
   651  001178  EFC0  F008         	goto	u841
   652  00117C  EFC3  F008         	goto	u840
   653  001180                     u841:
   654  001180  0E01               	movlw	1
   655  001182  EFC4  F008         	goto	u850
   656  001186                     u840:
   657  001186  0E00               	movlw	0
   658  001188                     u850:
   659  001188  6F82               	movwf	main@state& (0+255),b
   660  00118A  EF0F  F008         	goto	l1375
   661  00118E                     l1441:
   662                           
   663                           ; BSR set to: 0
   664                           ;main.c: 185:                 if(decrease1) {
   665  00118E  5033               	movf	_decrease1^0,w,c
   666  001190  B4D8               	btfsc	status,2,c
   667  001192  EFCD  F008         	goto	u861
   668  001196  EFCF  F008         	goto	u860
   669  00119A                     u861:
   670  00119A  EFD2  F008         	goto	l1447
   671  00119E                     u860:
   672  00119E                     
   673                           ; BSR set to: 0
   674                           ;main.c: 186:                     ledValue--;
   675  00119E  063C               	decf	_ledValue^0,f,c
   676  0011A0                     
   677                           ; BSR set to: 0
   678                           ;main.c: 187:                     decrease1 = 0;
   679  0011A0  0E00               	movlw	0
   680  0011A2  6E33               	movwf	_decrease1^0,c
   681  0011A4                     l1447:
   682                           
   683                           ; BSR set to: 0
   684                           ;main.c: 189:                 if(countRB0 > 300)
   685  0011A4  0E2D               	movlw	45
   686  0011A6  5C2E               	subwf	_countRB0^0,w,c
   687  0011A8  0E01               	movlw	1
   688  0011AA  582F               	subwfb	(_countRB0+1)^0,w,c
   689  0011AC  A0D8               	btfss	status,0,c
   690  0011AE  EFDB  F008         	goto	u871
   691  0011B2  EFDD  F008         	goto	u870
   692  0011B6                     u871:
   693  0011B6  EFE1  F008         	goto	l1451
   694  0011BA                     u870:
   695  0011BA                     
   696                           ; BSR set to: 0
   697                           ;main.c: 190:                     state = DECREASE2;
   698  0011BA  0E06               	movlw	6
   699  0011BC  6F82               	movwf	main@state& (0+255),b
   700  0011BE  EF0F  F008         	goto	l1375
   701  0011C2                     l1451:
   702                           
   703                           ; BSR set to: 0
   704  0011C2  502E               	movf	_countRB0^0,w,c
   705  0011C4  102F               	iorwf	(_countRB0+1)^0,w,c
   706  0011C6  A4D8               	btfss	status,2,c
   707  0011C8  EFE8  F008         	goto	u881
   708  0011CC  EFEA  F008         	goto	u880
   709  0011D0                     u881:
   710  0011D0  EF2C  F009         	goto	l119
   711  0011D4                     u880:
   712  0011D4  EFB9  F008         	goto	l1439
   713  0011D8                     l1455:
   714                           
   715                           ; BSR set to: 0
   716                           ;main.c: 195:                 if(decrease2) {
   717  0011D8  5032               	movf	_decrease2^0,w,c
   718  0011DA  B4D8               	btfsc	status,2,c
   719  0011DC  EFF2  F008         	goto	u891
   720  0011E0  EFF4  F008         	goto	u890
   721  0011E4                     u891:
   722  0011E4  EFF7  F008         	goto	l1461
   723  0011E8                     u890:
   724  0011E8                     
   725                           ; BSR set to: 0
   726                           ;main.c: 196:                     ledValue--;
   727  0011E8  063C               	decf	_ledValue^0,f,c
   728  0011EA                     
   729                           ; BSR set to: 0
   730                           ;main.c: 197:                     decrease2 = 0;
   731  0011EA  0E00               	movlw	0
   732  0011EC  6E32               	movwf	_decrease2^0,c
   733  0011EE                     l1461:
   734                           
   735                           ; BSR set to: 0
   736                           ;main.c: 199:                 if(countRB0 == 0)
   737  0011EE  502E               	movf	_countRB0^0,w,c
   738  0011F0  102F               	iorwf	(_countRB0+1)^0,w,c
   739  0011F2  A4D8               	btfss	status,2,c
   740  0011F4  EFFE  F008         	goto	u901
   741  0011F8  EF00  F009         	goto	u900
   742  0011FC                     u901:
   743  0011FC  EF0F  F008         	goto	l1375
   744  001200                     u900:
   745  001200  EFB9  F008         	goto	l1439
   746  001204                     l1467:
   747  001204  0100               	movlb	0	; () banked
   748  001206  5182               	movf	main@state& (0+255),w,b
   749  001208  6F80               	movwf	??_main& (0+255),b
   750  00120A  6B81               	clrf	(??_main+1)& (0+255),b
   751                           
   752                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   753                           ; Switch size 1, requested type "simple"
   754                           ; Number of cases is 1, Range of values is 0 to 0
   755                           ; switch strategies available:
   756                           ; Name         Instructions Cycles
   757                           ; simple_byte            4     3 (average)
   758                           ;	Chosen strategy is simple_byte
   759  00120C  5181               	movf	(??_main+1)& (0+255),w,b
   760  00120E  0A00               	xorlw	0	; case 0
   761  001210  B4D8               	btfsc	status,2,c
   762  001212  EF0D  F009         	goto	l1505
   763  001216  EF0F  F008         	goto	l1375
   764  00121A                     l1505:
   765                           
   766                           ; BSR set to: 0
   767                           ; Switch size 1, requested type "simple"
   768                           ; Number of cases is 7, Range of values is 0 to 6
   769                           ; switch strategies available:
   770                           ; Name         Instructions Cycles
   771                           ; simple_byte           22    12 (average)
   772                           ;	Chosen strategy is simple_byte
   773  00121A  5180               	movf	??_main& (0+255),w,b
   774  00121C  0A00               	xorlw	0	; case 0
   775  00121E  B4D8               	btfsc	status,2,c
   776  001220  EF13  F008         	goto	l1377
   777  001224  0A01               	xorlw	1	; case 1
   778  001226  B4D8               	btfsc	status,2,c
   779  001228  EF2F  F008         	goto	l1389
   780  00122C  0A03               	xorlw	3	; case 2
   781  00122E  B4D8               	btfsc	status,2,c
   782  001230  EF54  F008         	goto	l1401
   783  001234  0A01               	xorlw	1	; case 3
   784  001236  B4D8               	btfsc	status,2,c
   785  001238  EF82  F008         	goto	l1419
   786  00123C  0A07               	xorlw	7	; case 4
   787  00123E  B4D8               	btfsc	status,2,c
   788  001240  EFA1  F008         	goto	l1433
   789  001244  0A01               	xorlw	1	; case 5
   790  001246  B4D8               	btfsc	status,2,c
   791  001248  EFC7  F008         	goto	l1441
   792  00124C  0A03               	xorlw	3	; case 6
   793  00124E  B4D8               	btfsc	status,2,c
   794  001250  EFEC  F008         	goto	l1455
   795  001254  EF0F  F008         	goto	l1375
   796  001258                     l119:
   797                           
   798                           ; BSR set to: 0
   799  001258  EF0F  F008         	goto	l1375
   800  00125C  EF07  F000         	goto	start
   801  001260                     __end_of_main:
   802                           	opt callstack 0
   803                           
   804 ;; *************** function _timer0_init *****************
   805 ;; Defined at:
   806 ;;		line 63 in file "main.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;		None
   809 ;; Auto vars:     Size  Location     Type
   810 ;;		None
   811 ;; Return value:  Size  Location     Type
   812 ;;                  1    wreg      void 
   813 ;; Registers used:
   814 ;;		wreg, status,2
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   824 ;;Total ram usage:        0 bytes
   825 ;; Hardware stack levels used:    1
   826 ;; Hardware stack levels required when called:    6
   827 ;; This function calls:
   828 ;;		Nothing
   829 ;; This function is called by:
   830 ;;		_main
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           
   834                           	psect	text1
   835  001782                     __ptext1:
   836                           	opt callstack 0
   837  001782                     _timer0_init:
   838                           	opt callstack 24
   839  001782                     
   840                           ;main.c: 64:     T0CON = 0b11000111;
   841  001782  0EC7               	movlw	199
   842  001784  6ED5               	movwf	213,c	;volatile
   843                           
   844                           ;main.c: 65:     TMR0L = 177;
   845  001786  0EB1               	movlw	177
   846  001788  6ED6               	movwf	214,c	;volatile
   847  00178A  0012               	return		;funcret
   848  00178C                     __end_of_timer0_init:
   849                           	opt callstack 0
   850                           
   851 ;; *************** function _pin_init *****************
   852 ;; Defined at:
   853 ;;		line 68 in file "main.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;		None
   856 ;; Auto vars:     Size  Location     Type
   857 ;;		None
   858 ;; Return value:  Size  Location     Type
   859 ;;                  1    wreg      void 
   860 ;; Registers used:
   861 ;;		wreg, status,2
   862 ;; Tracked objects:
   863 ;;		On entry : 0/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   871 ;;Total ram usage:        0 bytes
   872 ;; Hardware stack levels used:    1
   873 ;; Hardware stack levels required when called:    6
   874 ;; This function calls:
   875 ;;		Nothing
   876 ;; This function is called by:
   877 ;;		_main
   878 ;; This function uses a non-reentrant model
   879 ;;
   880                           
   881                           	psect	text2
   882  001770                     __ptext2:
   883                           	opt callstack 0
   884  001770                     _pin_init:
   885                           	opt callstack 24
   886  001770                     
   887                           ;main.c: 69:     TRISD = 0x00;
   888  001770  0E00               	movlw	0
   889  001772  6E95               	movwf	149,c	;volatile
   890                           
   891                           ;main.c: 70:     LATD = 0x00;
   892  001774  0E00               	movlw	0
   893  001776  6E8C               	movwf	140,c	;volatile
   894  001778                     
   895                           ;main.c: 72:     TRISAbits.TRISA5 = 1;
   896  001778  8A92               	bsf	146,5,c	;volatile
   897  00177A                     
   898                           ;main.c: 73:     TRISBbits.TRISB0 = 1;
   899  00177A  8093               	bsf	147,0,c	;volatile
   900                           
   901                           ;main.c: 74:     ADCON1 = 0b00001111;
   902  00177C  0E0F               	movlw	15
   903  00177E  6EC1               	movwf	193,c	;volatile
   904  001780  0012               	return		;funcret
   905  001782                     __end_of_pin_init:
   906                           	opt callstack 0
   907                           
   908 ;; *************** function _osc_init *****************
   909 ;; Defined at:
   910 ;;		line 77 in file "main.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;		None
   913 ;; Auto vars:     Size  Location     Type
   914 ;;		None
   915 ;; Return value:  Size  Location     Type
   916 ;;                  1    wreg      void 
   917 ;; Registers used:
   918 ;;		wreg, status,2
   919 ;; Tracked objects:
   920 ;;		On entry : 0/0
   921 ;;		On exit  : 0/0
   922 ;;		Unchanged: 0/0
   923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   928 ;;Total ram usage:        0 bytes
   929 ;; Hardware stack levels used:    1
   930 ;; Hardware stack levels required when called:    6
   931 ;; This function calls:
   932 ;;		Nothing
   933 ;; This function is called by:
   934 ;;		_main
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           	psect	text3
   939  00178C                     __ptext3:
   940                           	opt callstack 0
   941  00178C                     _osc_init:
   942                           	opt callstack 24
   943  00178C                     
   944                           ;main.c: 78:     OSCCON = 0b01110111;
   945  00178C  0E77               	movlw	119
   946  00178E  6ED3               	movwf	211,c	;volatile
   947                           
   948                           ;main.c: 79:     OSCTUNE = 0b00001111;
   949  001790  0E0F               	movlw	15
   950  001792  6E9B               	movwf	155,c	;volatile
   951  001794  0012               	return		;funcret
   952  001796                     __end_of_osc_init:
   953                           	opt callstack 0
   954                           
   955 ;; *************** function _interrupt_init *****************
   956 ;; Defined at:
   957 ;;		line 58 in file "main.c"
   958 ;; Parameters:    Size  Location     Type
   959 ;;		None
   960 ;; Auto vars:     Size  Location     Type
   961 ;;		None
   962 ;; Return value:  Size  Location     Type
   963 ;;                  1    wreg      void 
   964 ;; Registers used:
   965 ;;		None
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   975 ;;Total ram usage:        0 bytes
   976 ;; Hardware stack levels used:    1
   977 ;; Hardware stack levels required when called:    6
   978 ;; This function calls:
   979 ;;		Nothing
   980 ;; This function is called by:
   981 ;;		_main
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985                           	psect	text4
   986  001796                     __ptext4:
   987                           	opt callstack 0
   988  001796                     _interrupt_init:
   989                           	opt callstack 24
   990  001796                     
   991                           ;main.c: 59:     INTCONbits.TMR0IE = 1;
   992  001796  8AF2               	bsf	242,5,c	;volatile
   993                           
   994                           ;main.c: 60:     INTCONbits.GIE = 1;
   995  001798  8EF2               	bsf	242,7,c	;volatile
   996  00179A  0012               	return		;funcret
   997  00179C                     __end_of_interrupt_init:
   998                           	opt callstack 0
   999                           
  1000 ;; *************** function _myISR *****************
  1001 ;; Defined at:
  1002 ;;		line 125 in file "main.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;		None
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;		None
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  1    wreg      void 
  1009 ;; Registers used:
  1010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1018 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1019 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1020 ;;Total ram usage:        8 bytes
  1021 ;; Hardware stack levels used:    1
  1022 ;; Hardware stack levels required when called:    5
  1023 ;; This function calls:
  1024 ;;		_handleButton
  1025 ;;		_printf
  1026 ;; This function is called by:
  1027 ;;		Interrupt level 2
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           	psect	intcode
  1032  000008                     __pintcode:
  1033                           	opt callstack 0
  1034  000008                     _myISR:
  1035                           	opt callstack 24
  1036                           
  1037                           ;incstack = 0
  1038  000008  8241               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1039  00000A  ED95  F00A         	call	int_func,f	;refresh shadow registers
  1040                           
  1041                           	psect	intcode_body
  1042  00152A                     __pintcode_body:
  1043                           	opt callstack 24
  1044  00152A                     int_func:
  1045                           	opt callstack 24
  1046  00152A  0006               	pop		; remove dummy address from shadow register refresh
  1047  00152C  CFE1 F01E          	movff	fsr1l,??_myISR
  1048  001530  CFE2 F01F          	movff	fsr1h,??_myISR+1
  1049  001534  CFD9 F020          	movff	fsr2l,??_myISR+2
  1050  001538  CFDA F021          	movff	fsr2h,??_myISR+3
  1051  00153C  CFF6 F022          	movff	tblptrl,??_myISR+4
  1052  001540  CFF7 F023          	movff	tblptrh,??_myISR+5
  1053  001544  CFF8 F024          	movff	tblptru,??_myISR+6
  1054  001548  CFF5 F025          	movff	tablat,??_myISR+7
  1055  00154C                     
  1056                           ;main.c: 126:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF) {
  1057  00154C  AAF2               	btfss	242,5,c	;volatile
  1058  00154E  EFAB  F00A         	goto	i2u68_41
  1059  001552  EFAD  F00A         	goto	i2u68_40
  1060  001556                     i2u68_41:
  1061  001556  EFBF  F00A         	goto	i2l108
  1062  00155A                     i2u68_40:
  1063  00155A  A4F2               	btfss	242,2,c	;volatile
  1064  00155C  EFB2  F00A         	goto	i2u69_41
  1065  001560  EFB4  F00A         	goto	i2u69_40
  1066  001564                     i2u69_41:
  1067  001564  EFBF  F00A         	goto	i2l108
  1068  001568                     i2u69_40:
  1069  001568                     
  1070                           ;main.c: 127:         INTCONbits.TMR0IF = 0;
  1071  001568  94F2               	bcf	242,2,c	;volatile
  1072  00156A                     
  1073                           ;main.c: 128:         TMR0L = 177;
  1074  00156A  0EB1               	movlw	177
  1075  00156C  6ED6               	movwf	214,c	;volatile
  1076  00156E                     
  1077                           ;main.c: 129:         handleButton();
  1078  00156E  EC30  F009         	call	_handleButton	;wreg free
  1079  001572                     
  1080                           ;main.c: 130:         printf("hello");
  1081  001572  0E01               	movlw	low STR_1
  1082  001574  6E18               	movwf	printf@fmt^0,c
  1083  001576  0E10               	movlw	high STR_1
  1084  001578  6E19               	movwf	(printf@fmt+1)^0,c
  1085  00157A  ECA5  F00B         	call	_printf	;wreg free
  1086  00157E                     i2l108:
  1087  00157E  C025  FFF5         	movff	??_myISR+7,tablat
  1088  001582  C024  FFF8         	movff	??_myISR+6,tblptru
  1089  001586  C023  FFF7         	movff	??_myISR+5,tblptrh
  1090  00158A  C022  FFF6         	movff	??_myISR+4,tblptrl
  1091  00158E  C021  FFDA         	movff	??_myISR+3,fsr2h
  1092  001592  C020  FFD9         	movff	??_myISR+2,fsr2l
  1093  001596  C01F  FFE2         	movff	??_myISR+1,fsr1h
  1094  00159A  C01E  FFE1         	movff	??_myISR,fsr1l
  1095  00159E  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1096  0015A0  0011               	retfie		f
  1097  0015A2                     __end_of_myISR:
  1098                           	opt callstack 0
  1099                           
  1100 ;; *************** function _printf *****************
  1101 ;; Defined at:
  1102 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;  fmt             2   23[COMRAM] PTR const unsigned char 
  1105 ;;		 -> STR_1(6), 
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;  ap              2   27[COMRAM] PTR void [1]
  1108 ;;		 -> ?_printf(2), 
  1109 ;;  ret             2    0        int 
  1110 ;; Return value:  Size  Location     Type
  1111 ;;                  2   23[COMRAM] int 
  1112 ;; Registers used:
  1113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1114 ;; Tracked objects:
  1115 ;;		On entry : 0/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1119 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1120 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1122 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1123 ;;Total ram usage:        6 bytes
  1124 ;; Hardware stack levels used:    1
  1125 ;; Hardware stack levels required when called:    4
  1126 ;; This function calls:
  1127 ;;		_vfprintf
  1128 ;; This function is called by:
  1129 ;;		_myISR
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           	psect	text6
  1134  00174A                     __ptext6:
  1135                           	opt callstack 0
  1136  00174A                     _printf:
  1137                           	opt callstack 24
  1138  00174A  0E1A               	movlw	low (?_printf+2)
  1139  00174C  6E1C               	movwf	printf@ap^0,c
  1140  00174E  0E00               	movlw	high (?_printf+2)
  1141  001750  6E1D               	movwf	(printf@ap+1)^0,c
  1142  001752  0E00               	movlw	0
  1143  001754  6E10               	movwf	vfprintf@fp^0,c
  1144  001756  0E00               	movlw	0
  1145  001758  6E11               	movwf	(vfprintf@fp+1)^0,c
  1146  00175A  C018  F012         	movff	printf@fmt,vfprintf@fmt
  1147  00175E  C019  F013         	movff	printf@fmt+1,vfprintf@fmt+1
  1148  001762  0E1C               	movlw	low printf@ap
  1149  001764  6E14               	movwf	vfprintf@ap^0,c
  1150  001766  0E00               	movlw	high printf@ap
  1151  001768  6E15               	movwf	(vfprintf@ap+1)^0,c
  1152  00176A  EC03  F00B         	call	_vfprintf	;wreg free
  1153  00176E  0012               	return		;funcret
  1154  001770                     __end_of_printf:
  1155                           	opt callstack 0
  1156                           
  1157 ;; *************** function _vfprintf *****************
  1158 ;; Defined at:
  1159 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  1162 ;;		 -> NULL(0), 
  1163 ;;  fmt             2   17[COMRAM] PTR const unsigned char 
  1164 ;;		 -> STR_1(6), 
  1165 ;;  ap              2   19[COMRAM] PTR PTR void 
  1166 ;;		 -> printf@ap(2), 
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;  cfmt            2   21[COMRAM] PTR unsigned char 
  1169 ;;		 -> STR_1(6), 
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  2   15[COMRAM] int 
  1172 ;; Registers used:
  1173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1179 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1180 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1182 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1183 ;;Total ram usage:        8 bytes
  1184 ;; Hardware stack levels used:    1
  1185 ;; Hardware stack levels required when called:    3
  1186 ;; This function calls:
  1187 ;;		_vfpfcnvrt
  1188 ;; This function is called by:
  1189 ;;		_printf
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           	psect	text7
  1194  001606                     __ptext7:
  1195                           	opt callstack 0
  1196  001606                     _vfprintf:
  1197                           	opt callstack 24
  1198  001606                     
  1199                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1200  001606  C012  F016         	movff	vfprintf@fmt,vfprintf@cfmt
  1201  00160A  C013  F017         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1202  00160E                     
  1203                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1204  00160E  0E00               	movlw	0
  1205  001610  6E27               	movwf	(_nout+1)^0,c
  1206  001612  0E00               	movlw	0
  1207  001614  6E26               	movwf	_nout^0,c
  1208                           
  1209                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1210  001616  EF1F  F00B         	goto	i2l1279
  1211  00161A                     i2l1277:
  1212                           
  1213                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1214  00161A  C010  F00A         	movff	vfprintf@fp,vfpfcnvrt@fp
  1215  00161E  C011  F00B         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1216  001622  0E16               	movlw	low vfprintf@cfmt
  1217  001624  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  1218  001626  0E00               	movlw	high vfprintf@cfmt
  1219  001628  6E0D               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1220  00162A  C014  F00E         	movff	vfprintf@ap,vfpfcnvrt@ap
  1221  00162E  C015  F00F         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1222  001632  ECCF  F009         	call	_vfpfcnvrt	;wreg free
  1223  001636  500A               	movf	?_vfpfcnvrt^0,w,c
  1224  001638  2626               	addwf	_nout^0,f,c
  1225  00163A  500B               	movf	(?_vfpfcnvrt+1)^0,w,c
  1226  00163C  2227               	addwfc	(_nout+1)^0,f,c
  1227  00163E                     i2l1279:
  1228                           
  1229                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1230  00163E  C016  FFF6         	movff	vfprintf@cfmt,tblptrl
  1231  001642  C017  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1232  001646                     	if	0	;tblptru may be non-zero
  1233  001646                     	endif
  1234  001646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1235  001646  0E00               	movlw	low (__mediumconst shr (0+16))
  1236  001648  6EF8               	movwf	tblptru,c
  1237  00164A                     	endif
  1238  00164A  0008               	tblrd		*
  1239  00164C  50F5               	movf	tablat,w,c
  1240  00164E  0900               	iorlw	0
  1241  001650  A4D8               	btfss	status,2,c
  1242  001652  EF2D  F00B         	goto	i2u56_41
  1243  001656  EF2F  F00B         	goto	i2u56_40
  1244  00165A                     i2u56_41:
  1245  00165A  EF0D  F00B         	goto	i2l1277
  1246  00165E                     i2u56_40:
  1247  00165E                     
  1248                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1249  00165E  C026  F010         	movff	_nout,?_vfprintf
  1250  001662  C027  F011         	movff	_nout+1,?_vfprintf+1
  1251  001666  0012               	return		;funcret
  1252  001668                     __end_of_vfprintf:
  1253                           	opt callstack 0
  1254                           
  1255 ;; *************** function _vfpfcnvrt *****************
  1256 ;; Defined at:
  1257 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  1260 ;;		 -> NULL(0), 
  1261 ;;  fmt             2   11[COMRAM] PTR PTR unsigned char 
  1262 ;;		 -> vfprintf@cfmt(2), 
  1263 ;;  ap              2   13[COMRAM] PTR PTR void 
  1264 ;;		 -> printf@ap(2), 
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;  llu             8    0        unsigned long long 
  1267 ;;  ll              8    0        long long 
  1268 ;;  f               4    0        long long 
  1269 ;;  vp              3    0        PTR void 
  1270 ;;  ct              3    0        unsigned char [3]
  1271 ;;  cp              3    0        PTR unsigned char 
  1272 ;;  i               2    0        int 
  1273 ;;  done            2    0        int 
  1274 ;;  c               1    0        unsigned char 
  1275 ;; Return value:  Size  Location     Type
  1276 ;;                  2    9[COMRAM] int 
  1277 ;; Registers used:
  1278 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1284 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1287 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1288 ;;Total ram usage:        6 bytes
  1289 ;; Hardware stack levels used:    1
  1290 ;; Hardware stack levels required when called:    2
  1291 ;; This function calls:
  1292 ;;		_fputc
  1293 ;; This function is called by:
  1294 ;;		_vfprintf
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           
  1298                           	psect	text8
  1299  00139E                     __ptext8:
  1300                           	opt callstack 0
  1301  00139E                     _vfpfcnvrt:
  1302                           	opt callstack 24
  1303  00139E                     
  1304                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1305  00139E  C00C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1306  0013A2  C00D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1307  0013A6  CFDE FFF6          	movff	postinc2,tblptrl
  1308  0013AA  CFDD FFF7          	movff	postdec2,tblptrh
  1309  0013AE                     	if	0	;tblptru may be non-zero
  1310  0013AE                     	endif
  1311  0013AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1312  0013AE  0E00               	movlw	low (__mediumconst shr (0+16))
  1313  0013B0  6EF8               	movwf	tblptru,c
  1314  0013B2                     	endif
  1315  0013B2  0008               	tblrd		*
  1316  0013B4  50F5               	movf	tablat,w,c
  1317  0013B6  0A25               	xorlw	37
  1318  0013B8  A4D8               	btfss	status,2,c
  1319  0013BA  EFE1  F009         	goto	i2u50_41
  1320  0013BE  EFE3  F009         	goto	i2u50_40
  1321  0013C2                     i2u50_41:
  1322  0013C2  EF2C  F00A         	goto	i2l1229
  1323  0013C6                     i2u50_40:
  1324  0013C6                     
  1325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1326  0013C6  C00C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1327  0013CA  C00D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1328  0013CE  2ADE               	incf	postinc2,f,c
  1329  0013D0  0E00               	movlw	0
  1330  0013D2  22DD               	addwfc	postdec2,f,c
  1331  0013D4                     
  1332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1333  0013D4  0E00               	movlw	0
  1334  0013D6  6E29               	movwf	(_width+1)^0,c
  1335  0013D8  0E00               	movlw	0
  1336  0013DA  6E28               	movwf	_width^0,c
  1337  0013DC  C028  F02C         	movff	_width,_flags
  1338  0013E0  C029  F02D         	movff	_width+1,_flags+1
  1339  0013E4                     
  1340                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1341  0013E4  682A               	setf	_prec^0,c
  1342  0013E6  682B               	setf	(_prec+1)^0,c
  1343  0013E8                     
  1344                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1345  0013E8  C00C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1346  0013EC  C00D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1347  0013F0  CFDE FFF6          	movff	postinc2,tblptrl
  1348  0013F4  CFDD FFF7          	movff	postdec2,tblptrh
  1349  0013F8                     	if	0	;tblptru may be non-zero
  1350  0013F8                     	endif
  1351  0013F8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1352  0013F8  0E00               	movlw	low (__mediumconst shr (0+16))
  1353  0013FA  6EF8               	movwf	tblptru,c
  1354  0013FC                     	endif
  1355  0013FC  0008               	tblrd		*
  1356  0013FE  50F5               	movf	tablat,w,c
  1357  001400  0A25               	xorlw	37
  1358  001402  A4D8               	btfss	status,2,c
  1359  001404  EF06  F00A         	goto	i2u51_41
  1360  001408  EF08  F00A         	goto	i2u51_40
  1361  00140C                     i2u51_41:
  1362  00140C  EF1F  F00A         	goto	i2l1223
  1363  001410                     i2u51_40:
  1364  001410                     
  1365                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1366  001410  C00C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1367  001414  C00D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1368  001418  2ADE               	incf	postinc2,f,c
  1369  00141A  0E00               	movlw	0
  1370  00141C  22DD               	addwfc	postdec2,f,c
  1371  00141E                     
  1372                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1373  00141E  0E00               	movlw	0
  1374  001420  6E02               	movwf	(fputc@c+1)^0,c
  1375  001422  0E25               	movlw	37
  1376  001424  6E01               	movwf	fputc@c^0,c
  1377  001426  C00A  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1378  00142A  C00B  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1379  00142E  EC4A  F00A         	call	_fputc	;wreg free
  1380  001432                     i2l1219:
  1381                           
  1382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1383  001432  0E00               	movlw	0
  1384  001434  6E0B               	movwf	(?_vfpfcnvrt+1)^0,c
  1385  001436  0E01               	movlw	1
  1386  001438  6E0A               	movwf	?_vfpfcnvrt^0,c
  1387  00143A  EF49  F00A         	goto	i2l191
  1388  00143E                     i2l1223:
  1389                           
  1390                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1391  00143E  C00C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1392  001442  C00D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1393  001446  2ADE               	incf	postinc2,f,c
  1394  001448  0E00               	movlw	0
  1395  00144A  22DD               	addwfc	postdec2,f,c
  1396  00144C                     
  1397                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1398  00144C  0E00               	movlw	0
  1399  00144E  6E0B               	movwf	(?_vfpfcnvrt+1)^0,c
  1400  001450  0E00               	movlw	0
  1401  001452  6E0A               	movwf	?_vfpfcnvrt^0,c
  1402  001454  EF49  F00A         	goto	i2l191
  1403  001458                     i2l1229:
  1404                           
  1405                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1406  001458  C00C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1407  00145C  C00D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1408  001460  CFDE FFF6          	movff	postinc2,tblptrl
  1409  001464  CFDD FFF7          	movff	postdec2,tblptrh
  1410  001468                     	if	0	;tblptru may be non-zero
  1411  001468                     	endif
  1412  001468                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1413  001468  0E00               	movlw	low (__mediumconst shr (0+16))
  1414  00146A  6EF8               	movwf	tblptru,c
  1415  00146C                     	endif
  1416  00146C  0008               	tblrd		*
  1417  00146E  50F5               	movf	tablat,w,c
  1418  001470  6E01               	movwf	fputc@c^0,c
  1419  001472  6A02               	clrf	(fputc@c+1)^0,c
  1420  001474  C00A  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1421  001478  C00B  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1422  00147C  EC4A  F00A         	call	_fputc	;wreg free
  1423  001480                     
  1424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1425  001480  C00C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1426  001484  C00D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1427  001488  2ADE               	incf	postinc2,f,c
  1428  00148A  0E00               	movlw	0
  1429  00148C  22DD               	addwfc	postdec2,f,c
  1430  00148E  EF19  F00A         	goto	i2l1219
  1431  001492                     i2l191:
  1432  001492  0012               	return		;funcret
  1433  001494                     __end_of_vfpfcnvrt:
  1434                           	opt callstack 0
  1435                           
  1436 ;; *************** function _fputc *****************
  1437 ;; Defined at:
  1438 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;  c               2    0[COMRAM] int 
  1441 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  1442 ;;		 -> NULL(0), 
  1443 ;; Auto vars:     Size  Location     Type
  1444 ;;		None
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  2    0[COMRAM] int 
  1447 ;; Registers used:
  1448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1454 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1456 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1457 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1458 ;;Total ram usage:        9 bytes
  1459 ;; Hardware stack levels used:    1
  1460 ;; Hardware stack levels required when called:    1
  1461 ;; This function calls:
  1462 ;;		_putch
  1463 ;; This function is called by:
  1464 ;;		_vfpfcnvrt
  1465 ;; This function uses a non-reentrant model
  1466 ;;
  1467                           
  1468                           	psect	text9
  1469  001494                     __ptext9:
  1470                           	opt callstack 0
  1471  001494                     _fputc:
  1472                           	opt callstack 24
  1473  001494  5003               	movf	fputc@fp^0,w,c
  1474  001496  1004               	iorwf	(fputc@fp+1)^0,w,c
  1475  001498  B4D8               	btfsc	status,2,c
  1476  00149A  EF51  F00A         	goto	i2u46_41
  1477  00149E  EF53  F00A         	goto	i2u46_40
  1478  0014A2                     i2u46_41:
  1479  0014A2  EF5C  F00A         	goto	i2l1195
  1480  0014A6                     i2u46_40:
  1481  0014A6  5003               	movf	fputc@fp^0,w,c
  1482  0014A8  1004               	iorwf	(fputc@fp+1)^0,w,c
  1483  0014AA  A4D8               	btfss	status,2,c
  1484  0014AC  EF5A  F00A         	goto	i2u47_41
  1485  0014B0  EF5C  F00A         	goto	i2u47_40
  1486  0014B4                     i2u47_41:
  1487  0014B4  EF61  F00A         	goto	i2l1197
  1488  0014B8                     i2u47_40:
  1489  0014B8                     i2l1195:
  1490  0014B8  5001               	movf	fputc@c^0,w,c
  1491  0014BA  ECD0  F00B         	call	_putch
  1492  0014BE  EF94  F00A         	goto	i2l883
  1493  0014C2                     i2l1197:
  1494  0014C2  EE20 F004          	lfsr	2,4
  1495  0014C6  5003               	movf	fputc@fp^0,w,c
  1496  0014C8  26D9               	addwf	fsr2l,f,c
  1497  0014CA  5004               	movf	(fputc@fp+1)^0,w,c
  1498  0014CC  22DA               	addwfc	fsr2h,f,c
  1499  0014CE  50DE               	movf	postinc2,w,c
  1500  0014D0  10DE               	iorwf	postinc2,w,c
  1501  0014D2  B4D8               	btfsc	status,2,c
  1502  0014D4  EF6E  F00A         	goto	i2u48_41
  1503  0014D8  EF70  F00A         	goto	i2u48_40
  1504  0014DC                     i2u48_41:
  1505  0014DC  EF8B  F00A         	goto	i2l1201
  1506  0014E0                     i2u48_40:
  1507  0014E0  EE20 F004          	lfsr	2,4
  1508  0014E4  5003               	movf	fputc@fp^0,w,c
  1509  0014E6  26D9               	addwf	fsr2l,f,c
  1510  0014E8  5004               	movf	(fputc@fp+1)^0,w,c
  1511  0014EA  22DA               	addwfc	fsr2h,f,c
  1512  0014EC  EE10 F002          	lfsr	1,2
  1513  0014F0  5003               	movf	fputc@fp^0,w,c
  1514  0014F2  26E1               	addwf	fsr1l,f,c
  1515  0014F4  5004               	movf	(fputc@fp+1)^0,w,c
  1516  0014F6  22E2               	addwfc	fsr1h,f,c
  1517  0014F8  50DE               	movf	postinc2,w,c
  1518  0014FA  5CE6               	subwf	postinc1,w,c
  1519  0014FC  50E6               	movf	postinc1,w,c
  1520  0014FE  0A80               	xorlw	128
  1521  001500  6E09               	movwf	(??_fputc+4)^0,c
  1522  001502  50DE               	movf	postinc2,w,c
  1523  001504  0A80               	xorlw	128
  1524  001506  5809               	subwfb	(??_fputc+4)^0,w,c
  1525  001508  B0D8               	btfsc	status,0,c
  1526  00150A  EF89  F00A         	goto	i2u49_41
  1527  00150E  EF8B  F00A         	goto	i2u49_40
  1528  001512                     i2u49_41:
  1529  001512  EF94  F00A         	goto	i2l883
  1530  001516                     i2u49_40:
  1531  001516                     i2l1201:
  1532  001516  EE20 F002          	lfsr	2,2
  1533  00151A  5003               	movf	fputc@fp^0,w,c
  1534  00151C  26D9               	addwf	fsr2l,f,c
  1535  00151E  5004               	movf	(fputc@fp+1)^0,w,c
  1536  001520  22DA               	addwfc	fsr2h,f,c
  1537  001522  2ADE               	incf	postinc2,f,c
  1538  001524  0E00               	movlw	0
  1539  001526  22DD               	addwfc	postdec2,f,c
  1540  001528                     i2l883:
  1541  001528  0012               	return		;funcret
  1542  00152A                     __end_of_fputc:
  1543                           	opt callstack 0
  1544                           
  1545 ;; *************** function _putch *****************
  1546 ;; Defined at:
  1547 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;  c               1    wreg     unsigned char 
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;  c               1    0[COMRAM] unsigned char 
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  1    wreg      void 
  1554 ;; Registers used:
  1555 ;;		wreg
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1565 ;;Total ram usage:        0 bytes
  1566 ;; Hardware stack levels used:    1
  1567 ;; This function calls:
  1568 ;;		Nothing
  1569 ;; This function is called by:
  1570 ;;		_fputc
  1571 ;; This function uses a non-reentrant model
  1572 ;;
  1573                           
  1574                           	psect	text10
  1575  0017A0                     __ptext10:
  1576                           	opt callstack 0
  1577  0017A0                     _putch:
  1578                           	opt callstack 24
  1579  0017A0  0012               	return		;funcret
  1580  0017A2                     __end_of_putch:
  1581                           	opt callstack 0
  1582                           
  1583 ;; *************** function _handleButton *****************
  1584 ;; Defined at:
  1585 ;;		line 100 in file "main.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;		None
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;  checkRB0        2    7[COMRAM] int 
  1590 ;;  checkRA5        2    5[COMRAM] int 
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      void 
  1593 ;; Registers used:
  1594 ;;		wreg, status,2, status,0, cstack
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1601 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1603 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1604 ;;Total ram usage:        4 bytes
  1605 ;; Hardware stack levels used:    1
  1606 ;; Hardware stack levels required when called:    1
  1607 ;; This function calls:
  1608 ;;		___lwmod
  1609 ;;		_readButtonRA5
  1610 ;;		_readButtonRB0
  1611 ;; This function is called by:
  1612 ;;		_myISR
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616                           	psect	text11
  1617  001260                     __ptext11:
  1618                           	opt callstack 0
  1619  001260                     _handleButton:
  1620                           	opt callstack 27
  1621  001260                     
  1622                           ;main.c: 101:     int checkRA5 = readButtonRA5();
  1623  001260  EC5C  F00B         	call	_readButtonRA5	;wreg free
  1624  001264  C001  F006         	movff	?_readButtonRA5,handleButton@checkRA5
  1625  001268  C002  F007         	movff	?_readButtonRA5+1,handleButton@checkRA5+1
  1626                           
  1627                           ;main.c: 102:     int checkRB0 = readButtonRB0();
  1628  00126C  EC34  F00B         	call	_readButtonRB0	;wreg free
  1629  001270  C001  F008         	movff	?_readButtonRB0,handleButton@checkRB0
  1630  001274  C002  F009         	movff	?_readButtonRB0+1,handleButton@checkRB0+1
  1631  001278                     
  1632                           ;main.c: 103:     if(checkRA5 == 2) {
  1633  001278  0E02               	movlw	2
  1634  00127A  1806               	xorwf	handleButton@checkRA5^0,w,c
  1635  00127C  1007               	iorwf	(handleButton@checkRA5+1)^0,w,c
  1636  00127E  A4D8               	btfss	status,2,c
  1637  001280  EF44  F009         	goto	i2u60_41
  1638  001284  EF46  F009         	goto	i2u60_40
  1639  001288                     i2u60_41:
  1640  001288  EF78  F009         	goto	i2l1313
  1641  00128C                     i2u60_40:
  1642  00128C                     
  1643                           ;main.c: 104:         countRB0 = 0;
  1644  00128C  0E00               	movlw	0
  1645  00128E  6E2F               	movwf	(_countRB0+1)^0,c
  1646  001290  0E00               	movlw	0
  1647  001292  6E2E               	movwf	_countRB0^0,c
  1648  001294                     
  1649                           ;main.c: 105:         countRA5++;
  1650  001294  4A30               	infsnz	_countRA5^0,f,c
  1651  001296  2A31               	incf	(_countRA5+1)^0,f,c
  1652  001298                     
  1653                           ;main.c: 106:         if(countRA5 % 10 == 0)
  1654  001298  C030  F001         	movff	_countRA5,___lwmod@dividend
  1655  00129C  C031  F002         	movff	_countRA5+1,___lwmod@dividend+1
  1656  0012A0  0E00               	movlw	0
  1657  0012A2  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1658  0012A4  0E0A               	movlw	10
  1659  0012A6  6E03               	movwf	___lwmod@divisor^0,c
  1660  0012A8  ECD1  F00A         	call	___lwmod	;wreg free
  1661  0012AC  5001               	movf	?___lwmod^0,w,c
  1662  0012AE  1002               	iorwf	(?___lwmod+1)^0,w,c
  1663  0012B0  A4D8               	btfss	status,2,c
  1664  0012B2  EF5D  F009         	goto	i2u61_41
  1665  0012B6  EF5F  F009         	goto	i2u61_40
  1666  0012BA                     i2u61_41:
  1667  0012BA  EF61  F009         	goto	i2l1309
  1668  0012BE                     i2u61_40:
  1669  0012BE                     
  1670                           ;main.c: 107:             increase2 = 1;
  1671  0012BE  0E01               	movlw	1
  1672  0012C0  6E34               	movwf	_increase2^0,c
  1673  0012C2                     i2l1309:
  1674                           
  1675                           ;main.c: 108:         if(countRA5 % 50 == 0)
  1676  0012C2  C030  F001         	movff	_countRA5,___lwmod@dividend
  1677  0012C6  C031  F002         	movff	_countRA5+1,___lwmod@dividend+1
  1678  0012CA  0E00               	movlw	0
  1679  0012CC  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1680  0012CE  0E32               	movlw	50
  1681  0012D0  6E03               	movwf	___lwmod@divisor^0,c
  1682  0012D2  ECD1  F00A         	call	___lwmod	;wreg free
  1683  0012D6  5001               	movf	?___lwmod^0,w,c
  1684  0012D8  1002               	iorwf	(?___lwmod+1)^0,w,c
  1685  0012DA  A4D8               	btfss	status,2,c
  1686  0012DC  EF72  F009         	goto	i2u62_41
  1687  0012E0  EF74  F009         	goto	i2u62_40
  1688  0012E4                     i2u62_41:
  1689  0012E4  EFCE  F009         	goto	i2l102
  1690  0012E8                     i2u62_40:
  1691  0012E8                     
  1692                           ;main.c: 109:             increase1 = 1;
  1693  0012E8  0E01               	movlw	1
  1694  0012EA  6E35               	movwf	_increase1^0,c
  1695  0012EC  EFCE  F009         	goto	i2l102
  1696  0012F0                     i2l1313:
  1697  0012F0  0E02               	movlw	2
  1698  0012F2  1808               	xorwf	handleButton@checkRB0^0,w,c
  1699  0012F4  1009               	iorwf	(handleButton@checkRB0+1)^0,w,c
  1700  0012F6  A4D8               	btfss	status,2,c
  1701  0012F8  EF80  F009         	goto	i2u63_41
  1702  0012FC  EF82  F009         	goto	i2u63_40
  1703  001300                     i2u63_41:
  1704  001300  EFB4  F009         	goto	i2l1327
  1705  001304                     i2u63_40:
  1706  001304                     
  1707                           ;main.c: 112:         countRA5 = 0;
  1708  001304  0E00               	movlw	0
  1709  001306  6E31               	movwf	(_countRA5+1)^0,c
  1710  001308  0E00               	movlw	0
  1711  00130A  6E30               	movwf	_countRA5^0,c
  1712  00130C                     
  1713                           ;main.c: 113:         countRB0++;
  1714  00130C  4A2E               	infsnz	_countRB0^0,f,c
  1715  00130E  2A2F               	incf	(_countRB0+1)^0,f,c
  1716  001310                     
  1717                           ;main.c: 114:         if(countRB0 % 10 == 0)
  1718  001310  C02E  F001         	movff	_countRB0,___lwmod@dividend
  1719  001314  C02F  F002         	movff	_countRB0+1,___lwmod@dividend+1
  1720  001318  0E00               	movlw	0
  1721  00131A  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1722  00131C  0E0A               	movlw	10
  1723  00131E  6E03               	movwf	___lwmod@divisor^0,c
  1724  001320  ECD1  F00A         	call	___lwmod	;wreg free
  1725  001324  5001               	movf	?___lwmod^0,w,c
  1726  001326  1002               	iorwf	(?___lwmod+1)^0,w,c
  1727  001328  A4D8               	btfss	status,2,c
  1728  00132A  EF99  F009         	goto	i2u64_41
  1729  00132E  EF9B  F009         	goto	i2u64_40
  1730  001332                     i2u64_41:
  1731  001332  EF9D  F009         	goto	i2l1323
  1732  001336                     i2u64_40:
  1733  001336                     
  1734                           ;main.c: 115:             decrease2 = 1;
  1735  001336  0E01               	movlw	1
  1736  001338  6E32               	movwf	_decrease2^0,c
  1737  00133A                     i2l1323:
  1738                           
  1739                           ;main.c: 116:         if(countRB0 % 50 == 0)
  1740  00133A  C02E  F001         	movff	_countRB0,___lwmod@dividend
  1741  00133E  C02F  F002         	movff	_countRB0+1,___lwmod@dividend+1
  1742  001342  0E00               	movlw	0
  1743  001344  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1744  001346  0E32               	movlw	50
  1745  001348  6E03               	movwf	___lwmod@divisor^0,c
  1746  00134A  ECD1  F00A         	call	___lwmod	;wreg free
  1747  00134E  5001               	movf	?___lwmod^0,w,c
  1748  001350  1002               	iorwf	(?___lwmod+1)^0,w,c
  1749  001352  A4D8               	btfss	status,2,c
  1750  001354  EFAE  F009         	goto	i2u65_41
  1751  001358  EFB0  F009         	goto	i2u65_40
  1752  00135C                     i2u65_41:
  1753  00135C  EFCE  F009         	goto	i2l102
  1754  001360                     i2u65_40:
  1755  001360                     
  1756                           ;main.c: 117:             decrease1 = 1;
  1757  001360  0E01               	movlw	1
  1758  001362  6E33               	movwf	_decrease1^0,c
  1759  001364  EFCE  F009         	goto	i2l102
  1760  001368                     i2l1327:
  1761  001368  0408               	decf	handleButton@checkRB0^0,w,c
  1762  00136A  1009               	iorwf	(handleButton@checkRB0+1)^0,w,c
  1763  00136C  B4D8               	btfsc	status,2,c
  1764  00136E  EFBB  F009         	goto	i2u66_41
  1765  001372  EFBD  F009         	goto	i2u66_40
  1766  001376                     i2u66_41:
  1767  001376  EFC6  F009         	goto	i2l1331
  1768  00137A                     i2u66_40:
  1769  00137A  0406               	decf	handleButton@checkRA5^0,w,c
  1770  00137C  1007               	iorwf	(handleButton@checkRA5+1)^0,w,c
  1771  00137E  A4D8               	btfss	status,2,c
  1772  001380  EFC4  F009         	goto	i2u67_41
  1773  001384  EFC6  F009         	goto	i2u67_40
  1774  001388                     i2u67_41:
  1775  001388  EFCE  F009         	goto	i2l102
  1776  00138C                     i2u67_40:
  1777  00138C                     i2l1331:
  1778                           
  1779                           ;main.c: 120:         countRA5 = 0;
  1780  00138C  0E00               	movlw	0
  1781  00138E  6E31               	movwf	(_countRA5+1)^0,c
  1782  001390  0E00               	movlw	0
  1783  001392  6E30               	movwf	_countRA5^0,c
  1784                           
  1785                           ;main.c: 121:         countRB0 = 0;
  1786  001394  0E00               	movlw	0
  1787  001396  6E2F               	movwf	(_countRB0+1)^0,c
  1788  001398  0E00               	movlw	0
  1789  00139A  6E2E               	movwf	_countRB0^0,c
  1790  00139C                     i2l102:
  1791  00139C  0012               	return		;funcret
  1792  00139E                     __end_of_handleButton:
  1793                           	opt callstack 0
  1794                           
  1795 ;; *************** function _readButtonRB0 *****************
  1796 ;; Defined at:
  1797 ;;		line 91 in file "main.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;		None
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;		None
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  2    0[COMRAM] int 
  1804 ;; Registers used:
  1805 ;;		wreg, status,2, status,0
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1811 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1814 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1815 ;;Total ram usage:        2 bytes
  1816 ;; Hardware stack levels used:    1
  1817 ;; This function calls:
  1818 ;;		Nothing
  1819 ;; This function is called by:
  1820 ;;		_handleButton
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824                           	psect	text12
  1825  001668                     __ptext12:
  1826                           	opt callstack 0
  1827  001668                     _readButtonRB0:
  1828                           	opt callstack 27
  1829  001668                     
  1830                           ;main.c: 92:     firstReadRB0 = secondReadRB0;
  1831  001668  C03D  F03E         	movff	_secondReadRB0,_firstReadRB0
  1832  00166C                     
  1833                           ;main.c: 93:     secondReadRB0 = PORTBbits.RB0;
  1834  00166C  0E00               	movlw	0
  1835  00166E  B081               	btfsc	129,0,c	;volatile
  1836  001670  0E01               	movlw	1
  1837  001672  6E3D               	movwf	_secondReadRB0^0,c
  1838  001674                     
  1839                           ;main.c: 94:     if(secondReadRB0 == firstReadRB0) {
  1840  001674  503E               	movf	_firstReadRB0^0,w,c
  1841  001676  183D               	xorwf	_secondReadRB0^0,w,c
  1842  001678  A4D8               	btfss	status,2,c
  1843  00167A  EF41  F00B         	goto	i2u54_41
  1844  00167E  EF43  F00B         	goto	i2u54_40
  1845  001682                     i2u54_41:
  1846  001682  EF57  F00B         	goto	i2l1269
  1847  001686                     i2u54_40:
  1848  001686                     
  1849                           ;main.c: 95:         return (secondReadRB0 == 0) ? 2 : 1;
  1850  001686  503D               	movf	_secondReadRB0^0,w,c
  1851  001688  B4D8               	btfsc	status,2,c
  1852  00168A  EF49  F00B         	goto	i2u55_41
  1853  00168E  EF4B  F00B         	goto	i2u55_40
  1854  001692                     i2u55_41:
  1855  001692  EF51  F00B         	goto	i2l1265
  1856  001696                     i2u55_40:
  1857  001696  0E00               	movlw	0
  1858  001698  6E02               	movwf	(?_readButtonRB0+1)^0,c
  1859  00169A  0E01               	movlw	1
  1860  00169C  6E01               	movwf	?_readButtonRB0^0,c
  1861  00169E  EF5B  F00B         	goto	i2l88
  1862  0016A2                     i2l1265:
  1863  0016A2  0E00               	movlw	0
  1864  0016A4  6E02               	movwf	(?_readButtonRB0+1)^0,c
  1865  0016A6  0E02               	movlw	2
  1866  0016A8  6E01               	movwf	?_readButtonRB0^0,c
  1867  0016AA  EF5B  F00B         	goto	i2l88
  1868  0016AE                     i2l1269:
  1869                           
  1870                           ;main.c: 97:     return 0;
  1871  0016AE  0E00               	movlw	0
  1872  0016B0  6E02               	movwf	(?_readButtonRB0+1)^0,c
  1873  0016B2  0E00               	movlw	0
  1874  0016B4  6E01               	movwf	?_readButtonRB0^0,c
  1875  0016B6                     i2l88:
  1876  0016B6  0012               	return		;funcret
  1877  0016B8                     __end_of_readButtonRB0:
  1878                           	opt callstack 0
  1879                           
  1880 ;; *************** function _readButtonRA5 *****************
  1881 ;; Defined at:
  1882 ;;		line 82 in file "main.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;		None
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;		None
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  2    0[COMRAM] int 
  1889 ;; Registers used:
  1890 ;;		wreg, status,2, status,0
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1896 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1899 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1900 ;;Total ram usage:        2 bytes
  1901 ;; Hardware stack levels used:    1
  1902 ;; This function calls:
  1903 ;;		Nothing
  1904 ;; This function is called by:
  1905 ;;		_handleButton
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909                           	psect	text13
  1910  0016B8                     __ptext13:
  1911                           	opt callstack 0
  1912  0016B8                     _readButtonRA5:
  1913                           	opt callstack 27
  1914  0016B8                     
  1915                           ;main.c: 83:     firstReadRA5 = secondReadRA5;
  1916  0016B8  C03F  F040         	movff	_secondReadRA5,_firstReadRA5
  1917  0016BC                     
  1918                           ;main.c: 84:     secondReadRA5 = PORTAbits.RA5;
  1919  0016BC  0E00               	movlw	0
  1920  0016BE  BA80               	btfsc	128,5,c	;volatile
  1921  0016C0  0E01               	movlw	1
  1922  0016C2  6E3F               	movwf	_secondReadRA5^0,c
  1923  0016C4                     
  1924                           ;main.c: 85:     if(secondReadRA5 == firstReadRA5) {
  1925  0016C4  5040               	movf	_firstReadRA5^0,w,c
  1926  0016C6  183F               	xorwf	_secondReadRA5^0,w,c
  1927  0016C8  A4D8               	btfss	status,2,c
  1928  0016CA  EF69  F00B         	goto	i2u52_41
  1929  0016CE  EF6B  F00B         	goto	i2u52_40
  1930  0016D2                     i2u52_41:
  1931  0016D2  EF7F  F00B         	goto	i2l1251
  1932  0016D6                     i2u52_40:
  1933  0016D6                     
  1934                           ;main.c: 86:         return (secondReadRA5 == 0) ? 2 : 1;
  1935  0016D6  503F               	movf	_secondReadRA5^0,w,c
  1936  0016D8  B4D8               	btfsc	status,2,c
  1937  0016DA  EF71  F00B         	goto	i2u53_41
  1938  0016DE  EF73  F00B         	goto	i2u53_40
  1939  0016E2                     i2u53_41:
  1940  0016E2  EF79  F00B         	goto	i2l1247
  1941  0016E6                     i2u53_40:
  1942  0016E6  0E00               	movlw	0
  1943  0016E8  6E02               	movwf	(?_readButtonRA5+1)^0,c
  1944  0016EA  0E01               	movlw	1
  1945  0016EC  6E01               	movwf	?_readButtonRA5^0,c
  1946  0016EE  EF83  F00B         	goto	i2l80
  1947  0016F2                     i2l1247:
  1948  0016F2  0E00               	movlw	0
  1949  0016F4  6E02               	movwf	(?_readButtonRA5+1)^0,c
  1950  0016F6  0E02               	movlw	2
  1951  0016F8  6E01               	movwf	?_readButtonRA5^0,c
  1952  0016FA  EF83  F00B         	goto	i2l80
  1953  0016FE                     i2l1251:
  1954                           
  1955                           ;main.c: 88:     return 0;
  1956  0016FE  0E00               	movlw	0
  1957  001700  6E02               	movwf	(?_readButtonRA5+1)^0,c
  1958  001702  0E00               	movlw	0
  1959  001704  6E01               	movwf	?_readButtonRA5^0,c
  1960  001706                     i2l80:
  1961  001706  0012               	return		;funcret
  1962  001708                     __end_of_readButtonRA5:
  1963                           	opt callstack 0
  1964                           
  1965 ;; *************** function ___lwmod *****************
  1966 ;; Defined at:
  1967 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwmod.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;  dividend        2    0[COMRAM] unsigned int 
  1970 ;;  divisor         2    2[COMRAM] unsigned int 
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;  counter         1    4[COMRAM] unsigned char 
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  2    0[COMRAM] unsigned int 
  1975 ;; Registers used:
  1976 ;;		wreg, status,2, status,0
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1982 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1983 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1985 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1986 ;;Total ram usage:        5 bytes
  1987 ;; Hardware stack levels used:    1
  1988 ;; This function calls:
  1989 ;;		Nothing
  1990 ;; This function is called by:
  1991 ;;		_handleButton
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           	psect	text14
  1996  0015A2                     __ptext14:
  1997                           	opt callstack 0
  1998  0015A2                     ___lwmod:
  1999                           	opt callstack 27
  2000  0015A2  5003               	movf	___lwmod@divisor^0,w,c
  2001  0015A4  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  2002  0015A6  B4D8               	btfsc	status,2,c
  2003  0015A8  EFD8  F00A         	goto	i2u57_41
  2004  0015AC  EFDA  F00A         	goto	i2u57_40
  2005  0015B0                     i2u57_41:
  2006  0015B0  EFFE  F00A         	goto	i2l701
  2007  0015B4                     i2u57_40:
  2008  0015B4  0E01               	movlw	1
  2009  0015B6  6E05               	movwf	___lwmod@counter^0,c
  2010  0015B8  EFE2  F00A         	goto	i2l1287
  2011  0015BC                     i2l1285:
  2012  0015BC  90D8               	bcf	status,0,c
  2013  0015BE  3603               	rlcf	___lwmod@divisor^0,f,c
  2014  0015C0  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  2015  0015C2  2A05               	incf	___lwmod@counter^0,f,c
  2016  0015C4                     i2l1287:
  2017  0015C4  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  2018  0015C6  EFE7  F00A         	goto	i2u58_41
  2019  0015CA  EFE9  F00A         	goto	i2u58_40
  2020  0015CE                     i2u58_41:
  2021  0015CE  EFDE  F00A         	goto	i2l1285
  2022  0015D2                     i2u58_40:
  2023  0015D2                     i2l1289:
  2024  0015D2  5003               	movf	___lwmod@divisor^0,w,c
  2025  0015D4  5C01               	subwf	___lwmod@dividend^0,w,c
  2026  0015D6  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2027  0015D8  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  2028  0015DA  A0D8               	btfss	status,0,c
  2029  0015DC  EFF2  F00A         	goto	i2u59_41
  2030  0015E0  EFF4  F00A         	goto	i2u59_40
  2031  0015E4                     i2u59_41:
  2032  0015E4  EFF8  F00A         	goto	i2l1293
  2033  0015E8                     i2u59_40:
  2034  0015E8  5003               	movf	___lwmod@divisor^0,w,c
  2035  0015EA  5E01               	subwf	___lwmod@dividend^0,f,c
  2036  0015EC  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2037  0015EE  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  2038  0015F0                     i2l1293:
  2039  0015F0  90D8               	bcf	status,0,c
  2040  0015F2  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  2041  0015F4  3203               	rrcf	___lwmod@divisor^0,f,c
  2042  0015F6  2E05               	decfsz	___lwmod@counter^0,f,c
  2043  0015F8  EFE9  F00A         	goto	i2l1289
  2044  0015FC                     i2l701:
  2045  0015FC  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2046  001600  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2047  001604  0012               	return		;funcret
  2048  001606                     __end_of___lwmod:
  2049                           	opt callstack 0
  2050                           
  2051                           	psect	rparam
  2052  0000                     
  2053                           	psect	temp
  2054  000041                     btemp:
  2055                           	opt callstack 0
  2056  000041                     	ds	1
  2057  0000                     int$flags	set	btemp
  2058  0000                     wtemp8	set	btemp+1
  2059  0000                     ttemp5	set	btemp+1
  2060  0000                     ttemp6	set	btemp+4
  2061  0000                     ttemp7	set	btemp+8
  2062                           tosu	equ	0xFFF
  2063                           tosh	equ	0xFFE
  2064                           tosl	equ	0xFFD
  2065                           stkptr	equ	0xFFC
  2066                           pclatu	equ	0xFFB
  2067                           pclath	equ	0xFFA
  2068                           pcl	equ	0xFF9
  2069                           tblptru	equ	0xFF8
  2070                           tblptrh	equ	0xFF7
  2071                           tblptrl	equ	0xFF6
  2072                           tablat	equ	0xFF5
  2073                           prodh	equ	0xFF4
  2074                           prodl	equ	0xFF3
  2075                           indf0	equ	0xFEF
  2076                           postinc0	equ	0xFEE
  2077                           postdec0	equ	0xFED
  2078                           preinc0	equ	0xFEC
  2079                           plusw0	equ	0xFEB
  2080                           fsr0h	equ	0xFEA
  2081                           fsr0l	equ	0xFE9
  2082                           wreg	equ	0xFE8
  2083                           indf1	equ	0xFE7
  2084                           postinc1	equ	0xFE6
  2085                           postdec1	equ	0xFE5
  2086                           preinc1	equ	0xFE4
  2087                           plusw1	equ	0xFE3
  2088                           fsr1h	equ	0xFE2
  2089                           fsr1l	equ	0xFE1
  2090                           bsr	equ	0xFE0
  2091                           indf2	equ	0xFDF
  2092                           postinc2	equ	0xFDE
  2093                           postdec2	equ	0xFDD
  2094                           preinc2	equ	0xFDC
  2095                           plusw2	equ	0xFDB
  2096                           fsr2h	equ	0xFDA
  2097                           fsr2l	equ	0xFD9
  2098                           status	equ	0xFD8


Data Sizes:
    Strings     6
    Constant    0
    Data        4
    BSS         55
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      64
    BANK0           160      3      35
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    S886_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _myISR in COMRAM

    _myISR->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _handleButton->___lwmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _myISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _myISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      38
                                              0 BANK0      3     3      0
                     _interrupt_init
                           _osc_init
                           _pin_init
                        _timer0_init
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _osc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _interrupt_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myISR                                                8     8      0    2477
                                             29 COMRAM     8     8      0
                       _handleButton
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                               6     4      2    1620
                                             23 COMRAM     6     4      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    1492
                                             15 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           40    34      6    1142
                                              9 COMRAM     6     0      6
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     716
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (3) _handleButton                                         4     4      0     857
                                              5 COMRAM     4     4      0
                            ___lwmod
                      _readButtonRA5
                      _readButtonRB0
 ---------------------------------------------------------------------------------
 (4) _readButtonRB0                                        2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _readButtonRA5                                        2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     767
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _interrupt_init
   _osc_init
   _pin_init
   _timer0_init

 _myISR (ROOT)
   _handleButton
     ___lwmod
     _readButtonRA5
     _readButtonRB0
   _printf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      3      23       5       21.9%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     25      40       1       68.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      63      32        0.0%
DATA                 0      0      63       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Sep 14 15:46:18 2019

                     l63 179A                       l72 1794                       l66 178A  
                     l69 1780   __end_of_interrupt_init 179C                      l119 1258  
                    u700 1038                      u701 1034                      u710 1054  
                    u711 1050                      u800 112C                      u720 1074  
                    u801 1128                      u721 1070                      u810 113E  
                    u730 108E                      u811 113A                      u731 108A  
                    u900 1200                      u820 1158                      u740 10A0  
                    u901 11FC                      u821 1154                      u741 109C  
                    u830 1172                      u750 10B8                      u831 116E  
                    u751 10B4                      u840 1186                      u760 10D4  
                    u841 1180                      u761 10D0                      u850 1188  
                    u770 10EE                      u771 10EA                      u860 119E  
                    u780 1100                      u861 119A                      u781 10FC  
                    u870 11BA                      u790 1114                      u871 11B6  
                    u791 1110                      u880 11D4                      u881 11D0  
                    u890 11E8                      u891 11E4                      wreg 000FE8  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     l1401 10A8  
                   l1411 10DC                     l1403 10B8                     l1421 1114  
                   l1413 10EE                     l1405 10BA                     l1423 1116  
                   l1407 10BE                     l1361 1778                     l1505 121A  
                   l1441 118E                     l1433 1142                     l1425 111A  
                   l1409 10D4                     l1355 1796                     l1363 177A  
                   l1451 11C2                     l1443 119E                     l1435 1158  
                   l1427 112C                     l1419 1104                     l1371 1012  
                   l1365 178C                     l1357 1782                     l1461 11EE  
                   l1445 11A0                     l1437 1160                     l1381 103A  
                   l1373 1016                     l1359 1770                     l1455 11D8  
                   l1447 11A4                     l1439 1172                     l1391 1074  
                   l1383 1042                     l1375 101E                     l1367 1008  
                   l1457 11E8                     l1449 11BA                     l1393 107C  
                   l1385 1054                     l1377 1026                     l1369 100E  
                   l1459 11EA                     l1395 108E                     l1387 1056  
                   l1379 1038                     l1467 1204                     l1397 10A0  
                   l1389 105E                     STR_1 1001                     _LATD 000F8C  
                   i2l80 1706                     i2l88 16B6                     _dbuf 0060  
                   _main 1008                     _prec 002A                     _nout 0026  
                   fsr1h 000FE2                     fsr2h 000FDA                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 0041                     start 000E  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ?_main 0001          ?_interrupt_init 0001                    _T0CON 000FD5  
                  i2l102 139C          __end_of___lwmod 1606                    i2l108 157E  
                  i2l191 1492                    i2l196 165E                    i2l701 15FC  
                  i2l197 1666                    i2l708 1604                    i2l901 17A0  
                  i2l883 1528                    i2l898 176E             vfpfcnvrt@fmt 000C  
                  _TMR0L 000FD6                    _TRISD 000F95            __CFG_PWRT$OFF 000000  
         __CFG_FCMEN$OFF 000000                    _flags 002C                    _myISR 0008  
                  _fputc 1494                    _width 0028                    _putch 17A0  
         __CFG_BOREN$OFF 000000                    tablat 000FF5                    ttemp5 0042  
                  ttemp6 0045                    ttemp7 0049                    status 000FD8  
                  wtemp8 0042          __initialization 1708             __end_of_main 1260  
   __end_of_handleButton 139E                   ??_main 0080            __activetblptr 000003  
 __size_of_readButtonRB0 0050   __size_of_readButtonRA5 0050     _buttonRB0_1s_pressed 0037  
                 _ADCON1 000FC1                   ?_myISR 0001                   ?_fputc 0001  
                 ?_putch 0001     _buttonRB0_3s_pressed 0036                   i2l1201 1516  
                 i2l1211 13E4                   i2l1301 128C                   i2l1213 13E8  
                 i2l1205 139E                   i2l1311 12E8                   i2l1303 1294  
                 i2l1231 1480                   i2l1215 1410                   i2l1223 143E  
                 i2l1207 13C6                   i2l1241 16C4                   i2l1321 1336  
                 i2l1305 1298                   i2l1313 12F0                   i2l1225 144C  
                 i2l1217 141E                   i2l1209 13D4                   i2l1243 16D6  
                 i2l1251 16FE                   i2l1331 138C                   i2l1323 133A  
                 i2l1315 1304                   i2l1307 12BE                   i2l1219 1432  
                 i2l1245 16E6                   i2l1237 16B8                   i2l1261 1686  
                 i2l1325 1360                   i2l1317 130C                   i2l1309 12C2  
                 i2l1229 1458                   i2l1333 174A                   i2l1341 155A  
                 i2l1247 16F2                   i2l1239 16BC                   i2l1263 1696  
                 i2l1255 1668                   i2l1319 1310                   i2l1327 1368  
                 i2l1191 1494                   i2l1335 1752                   i2l1343 1568  
                 i2l1281 15A2                   i2l1265 16A2                   i2l1257 166C  
                 i2l1329 137A                   i2l1193 14A6                   i2l1273 1606  
                 i2l1345 156A                   i2l1291 15E8                   i2l1283 15B4  
                 i2l1259 1674                   i2l1195 14B8                   i2l1275 160E  
                 i2l1347 156E                   i2l1339 154C                   i2l1293 15F0  
                 i2l1285 15BC                   i2l1269 16AE                   i2l1197 14C2  
                 i2l1277 161A                   i2l1349 1572                   i2l1295 15F6  
                 i2l1287 15C4                   i2l1199 14E0                   i2l1279 163E  
                 i2l1289 15D2                   i2l1297 1260                   i2l1299 1278  
                 _OSCCON 000FD3           __CFG_XINST$OFF 000000             vfprintf@cfmt 0016  
           ?_timer0_init 0001                ??___lwmod 0005                   clear_0 172E  
                 clear_1 173A                   _printf 174A         __end_of_pin_init 1782  
       __end_of_osc_init 1796                   fputc@c 0001             __pdataCOMRAM 003D  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                   putch@c 0001         __end_of_vfprintf 1668  
             __accesstop 0060  __end_of__initialization 1740            _readButtonRB0 1668  
          _readButtonRA5 16B8            ___rparam_used 000001     _buttonRA5_1s_pressed 003A  
         __pcstackCOMRAM 0001            __end_of_myISR 15A2            __end_of_fputc 152A  
          __end_of_putch 17A2     _buttonRA5_3s_pressed 0039          __CFG_OSC$INTIO7 000000  
                ??_myISR 001E                  ??_fputc 0005                  ??_putch 0001  
             __pbssBANK0 0060           ?_readButtonRB0 0001           ?_readButtonRA5 0001  
  __size_of_handleButton 013E         ??_interrupt_init 0080                  ?_printf 0018  
     __size_of_vfpfcnvrt 00F6                  i2u50_40 13C6                  i2u50_41 13C2  
                i2u51_40 1410                  i2u51_41 140C                  i2u52_40 16D6  
                i2u60_40 128C                  i2u52_41 16D2                  i2u60_41 1288  
                i2u53_40 16E6                  i2u61_40 12BE                  i2u53_41 16E2  
                i2u61_41 12BA                  i2u54_40 1686                  i2u62_40 12E8  
                i2u46_40 14A6                  i2u54_41 1682                  i2u62_41 12E4  
                i2u46_41 14A2                  _OSCTUNE 000F9B                  i2u55_40 1696  
                i2u63_40 1304                  i2u47_40 14B8                  i2u55_41 1692  
                i2u63_41 1300                  i2u47_41 14B4                  i2u64_40 1336  
                i2u48_40 14E0                  i2u56_40 165E                  i2u64_41 1332  
                i2u48_41 14DC                  i2u56_41 165A                  i2u57_40 15B4  
                i2u65_40 1360                  i2u49_40 1516                  i2u57_41 15B0  
                i2u65_41 135C                  i2u49_41 1512                  i2u58_40 15D2  
                i2u66_40 137A                  i2u58_41 15CE                  i2u66_41 1376  
                i2u59_40 15E8                  i2u67_40 138C                  i2u59_41 15E4  
                i2u67_41 1388                  i2u68_40 155A                  i2u68_41 1556  
                i2u69_40 1568                  i2u69_41 1564             _handleButton 1260  
              ?_pin_init 0001                  __Hparam 0000                ?_osc_init 0001  
                __Lparam 0000                  ___lwmod 15A2                ?_vfprintf 0010  
           __psmallconst 1000                  __pcinit 1708                  __ramtop 1000  
   __size_of_timer0_init 000A                  __ptext0 1008                  __ptext1 1782  
                __ptext2 1770                  __ptext3 178C                  __ptext4 1796  
                __ptext6 174A                  __ptext7 1606                  __ptext8 139E  
                __ptext9 1494          __size_of_printf 0026           __pintcode_body 152A  
   end_of_initialization 1740          ??_readButtonRB0 0003          ??_readButtonRA5 0003  
                fputc@fp 0003                  int_func 152A               ??_pin_init 0080  
             ??_osc_init 0080        __end_of_vfpfcnvrt 1494                  postdec1 000FE5  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE               ??_vfprintf 0016     handleButton@checkRB0 0008  
   handleButton@checkRA5 0006                _PORTAbits 000F80                _PORTBbits 000F81  
              _TRISAbits 000F92                _TRISBbits 000F93              vfpfcnvrt@ap 000E  
            vfpfcnvrt@fp 000A            __pidataCOMRAM 179C             _firstReadRB0 003E  
           _firstReadRA5 0040            _secondReadRB0 003D            _secondReadRA5 003F  
         __end_of_printf 1770      start_initialization 1708              vfprintf@fmt 0012  
               ??_printf 001A              __pbssCOMRAM 0026            __pcstackBANK0 0080  
              _decrease1 0033                _decrease2 0032                __pintcode 0008  
      __size_of_pin_init 0012        __size_of_osc_init 000A                 ?___lwmod 0001  
      __size_of_vfprintf 0062              __smallconst 1000                _increase1 0035  
              _increase2 0034                _buttonRB0 0038                _buttonRA5 003B  
         __size_of_myISR 159A           __size_of_fputc 0096           __size_of_putch 0002  
          ??_timer0_init 0080                _vfpfcnvrt 139E  __size_of_interrupt_init 0006  
              main@state 0082                copy_data0 171C    __end_of_readButtonRB0 16B8  
  __end_of_readButtonRA5 1708                 __Hrparam 0000               vfprintf@ap 0014  
               __Lrparam 0000               vfprintf@fp 0010               ?_vfpfcnvrt 000A  
       __size_of___lwmod 0064      __end_of_timer0_init 178C                 __ptext10 17A0  
               __ptext11 1260                 __ptext12 1668                 __ptext13 16B8  
               __ptext14 15A2                 _ledValue 003C                 _countRB0 002E  
               _countRA5 0030            __size_of_main 0258                 _pin_init 1770  
               _osc_init 178C                 int$flags 0041                 _vfprintf 1606  
              printf@fmt 0018               _INTCONbits 000FF2                 intlevel2 0000  
          ?_handleButton 0001         ___lwmod@dividend 0001                 printf@ap 001C  
            _timer0_init 1782              ??_vfpfcnvrt 0010          ___lwmod@divisor 0003  
         _interrupt_init 1796          ___lwmod@counter 0005           ??_handleButton 0006  
