

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Nov 17 15:33:36 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    75                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    76  0000                     
    77                           ; Version 2.10
    78                           ; Generated 31/07/2019 GMT
    79                           ; 
    80                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC18F8722 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     
   112                           	psect	idataBANK0
   113  003BBC                     __pidataBANK0:
   114                           	opt callstack 0
   115                           
   116                           ;initializer for _rear
   117  003BBC  FFFF               	dw	65535
   118                           
   119                           ;initializer for _front
   120  003BBE  FFFF               	dw	65535
   121                           
   122                           ;initializer for _secondReadRB0
   123  003BC0  01                 	db	1
   124                           
   125                           ;initializer for _firstReadRB0
   126  003BC1  01                 	db	1
   127                           
   128                           ;initializer for _secondReadRA5
   129  003BC2  01                 	db	1
   130                           
   131                           ;initializer for _firstReadRA5
   132  003BC3  01                 	db	1
   133  0000                     _PORTCbits	set	3970
   134  0000                     _LATCbits	set	3979
   135  0000                     _LATAbits	set	3977
   136  0000                     _TRISCbits	set	3988
   137  0000                     _TRISAbits	set	3986
   138  0000                     _LATFbits	set	3982
   139  0000                     _TRISFbits	set	3991
   140  0000                     _PORTBbits	set	3969
   141  0000                     _PORTAbits	set	3968
   142  0000                     _TMR1L	set	4046
   143  0000                     _TMR1H	set	4047
   144  0000                     _T1CON	set	4045
   145  0000                     _PIR1bits	set	3998
   146  0000                     _PIE1bits	set	3997
   147  0000                     _TMR0L	set	4054
   148  0000                     _T0CON	set	4053
   149  0000                     _INTCONbits	set	4082
   150  0000                     _TRISB	set	3987
   151  0000                     _LATB	set	3978
   152  0000                     _TRISA	set	3986
   153  0000                     _LATA	set	3977
   154  0000                     _TRISD	set	3989
   155  0000                     _LATD	set	3980
   156  0000                     _ADCON1	set	4033
   157  0000                     _TRISC	set	3988
   158  0000                     _LATC	set	3979
   159  0000                     _OSCCON	set	4051
   160                           
   161                           	psect	smallconst
   162  001000                     __psmallconst:
   163                           	opt callstack 0
   164  001000  00                 	db	0
   165  001001                     STR_3:
   166  001001  54                 	db	84	;'T'
   167  001002  69                 	db	105	;'i'
   168  001003  6D                 	db	109	;'m'
   169  001004  65                 	db	101	;'e'
   170  001005  00                 	db	0
   171  001006                     STR_2:
   172  001006  48                 	db	72	;'H'
   173  001007  3A                 	db	58	;':'
   174  001008  00                 	db	0
   175  001009                     STR_1:
   176  001009  54                 	db	84	;'T'
   177  00100A  3A                 	db	58	;':'
   178  00100B  00                 	db	0
   179  00100C                     STR_4:
   180  00100C  6D                 	db	109	;'m'
   181  00100D  73                 	db	115	;'s'
   182  00100E  00                 	db	0
   183                           
   184                           ; #config settings
   185  00100F  00                 	db	0	; dummy byte at the end
   186  0000                     
   187                           	psect	cinit
   188  0036E6                     __pcinit:
   189                           	opt callstack 0
   190  0036E6                     start_initialization:
   191                           	opt callstack 0
   192  0036E6                     __initialization:
   193                           	opt callstack 0
   194                           
   195                           ; Initialize objects allocated to BANK0 (8 bytes)
   196                           ; load TBLPTR registers with __pidataBANK0
   197  0036E6  0EBC               	movlw	low __pidataBANK0
   198  0036E8  6EF6               	movwf	tblptrl,c
   199  0036EA  0E3B               	movlw	high __pidataBANK0
   200  0036EC  6EF7               	movwf	tblptrh,c
   201  0036EE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   202  0036F0  6EF8               	movwf	tblptru,c
   203  0036F2  EE00  F0CF         	lfsr	0,__pdataBANK0
   204  0036F6  EE10 F008          	lfsr	1,8
   205  0036FA                     copy_data0:
   206  0036FA  0009               	tblrd		*+
   207  0036FC  CFF5 FFEE          	movff	tablat,postinc0
   208  003700  50E5               	movf	postdec1,w,c
   209  003702  50E1               	movf	fsr1l,w,c
   210  003704  E1FA               	bnz	copy_data0
   211                           
   212                           ; Clear objects allocated to BIGRAM (300 bytes)
   213  003706  EE01  F064         	lfsr	0,__pbssBIGRAM
   214  00370A  EE11 F02C          	lfsr	1,300
   215  00370E                     clear_0:
   216  00370E  6AEE               	clrf	postinc0,c
   217  003710  50E5               	movf	postdec1,w,c
   218  003712  50E1               	movf	fsr1l,w,c
   219  003714  E1FC               	bnz	clear_0
   220  003716  50E2               	movf	fsr1h,w,c
   221  003718  E1FA               	bnz	clear_0
   222                           
   223                           ; Clear objects allocated to BANK1 (100 bytes)
   224  00371A  EE01  F000         	lfsr	0,__pbssBANK1
   225  00371E  0E64               	movlw	100
   226  003720                     clear_1:
   227  003720  6AEE               	clrf	postinc0,c
   228  003722  06E8               	decf	wreg,f,c
   229  003724  E1FD               	bnz	clear_1
   230                           
   231                           ; Clear objects allocated to BANK0 (42 bytes)
   232  003726  EE00  F0A5         	lfsr	0,__pbssBANK0
   233  00372A  0E2A               	movlw	42
   234  00372C                     clear_2:
   235  00372C  6AEE               	clrf	postinc0,c
   236  00372E  06E8               	decf	wreg,f,c
   237  003730  E1FD               	bnz	clear_2
   238                           
   239                           ; Clear objects allocated to COMRAM (25 bytes)
   240  003732  EE00  F034         	lfsr	0,__pbssCOMRAM
   241  003736  0E19               	movlw	25
   242  003738                     clear_3:
   243  003738  6AEE               	clrf	postinc0,c
   244  00373A  06E8               	decf	wreg,f,c
   245  00373C  E1FD               	bnz	clear_3
   246  00373E                     end_of_initialization:
   247                           	opt callstack 0
   248  00373E                     __end_of__initialization:
   249                           	opt callstack 0
   250  00373E  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   251  003740  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   252  003742  0100               	movlb	0
   253  003744  EF2C  F014         	goto	_main	;jump to C main() function
   254                           
   255                           	psect	bssCOMRAM
   256  000034                     __pbssCOMRAM:
   257                           	opt callstack 0
   258  000034                     _countRB0_1:
   259                           	opt callstack 0
   260  000034                     	ds	4
   261  000038                     _countRB0:
   262                           	opt callstack 0
   263  000038                     	ds	4
   264  00003C                     _countRA5_1:
   265                           	opt callstack 0
   266  00003C                     	ds	4
   267  000040                     _countRA5:
   268                           	opt callstack 0
   269  000040                     	ds	4
   270  000044                     _prev_time_ms:
   271                           	opt callstack 0
   272  000044                     	ds	4
   273  000048                     _count:
   274                           	opt callstack 0
   275  000048                     	ds	2
   276  00004A                     _remove_task_counter:
   277                           	opt callstack 0
   278  00004A                     	ds	2
   279  00004C                     _value:
   280                           	opt callstack 0
   281  00004C                     	ds	1
   282                           
   283                           	psect	bssBANK0
   284  0000A5                     __pbssBANK0:
   285                           	opt callstack 0
   286  0000A5                     _task_id:
   287                           	opt callstack 0
   288  0000A5                     	ds	20
   289  0000B9                     _time_ms:
   290                           	opt callstack 0
   291  0000B9                     	ds	4
   292  0000BD                     _humidity_dht11:
   293                           	opt callstack 0
   294  0000BD                     	ds	2
   295  0000BF                     _temperature_dht11:
   296                           	opt callstack 0
   297  0000BF                     	ds	2
   298  0000C1                     _stateRB0:
   299                           	opt callstack 0
   300  0000C1                     	ds	1
   301  0000C2                     _stateRA5:
   302                           	opt callstack 0
   303  0000C2                     	ds	1
   304  0000C3                     _head:
   305                           	opt callstack 0
   306  0000C3                     	ds	1
   307  0000C4                     _num_task:
   308                           	opt callstack 0
   309  0000C4                     	ds	1
   310  0000C5                     _RB0_pressed:
   311                           	opt callstack 0
   312  0000C5                     	ds	1
   313  0000C6                     _RA5_pressed:
   314                           	opt callstack 0
   315  0000C6                     	ds	1
   316  0000C7                     _humidity_value:
   317                           	opt callstack 0
   318  0000C7                     	ds	4
   319  0000CB                     _temperature_value:
   320                           	opt callstack 0
   321  0000CB                     	ds	4
   322                           
   323                           	psect	dataBANK0
   324  0000CF                     __pdataBANK0:
   325                           	opt callstack 0
   326  0000CF                     _rear:
   327                           	opt callstack 0
   328  0000CF                     	ds	2
   329  0000D1                     _front:
   330                           	opt callstack 0
   331  0000D1                     	ds	2
   332  0000D3                     _secondReadRB0:
   333                           	opt callstack 0
   334  0000D3                     	ds	1
   335  0000D4                     _firstReadRB0:
   336                           	opt callstack 0
   337  0000D4                     	ds	1
   338  0000D5                     _secondReadRA5:
   339                           	opt callstack 0
   340  0000D5                     	ds	1
   341  0000D6                     _firstReadRA5:
   342                           	opt callstack 0
   343  0000D6                     	ds	1
   344                           
   345                           	psect	bssBANK1
   346  000100                     __pbssBANK1:
   347                           	opt callstack 0
   348  000100                     _ready_queue:
   349                           	opt callstack 0
   350  000100                     	ds	100
   351                           
   352                           	psect	bssBIGRAM
   353  000164                     __pbssBIGRAM:
   354                           	opt callstack 0
   355  000164                     _task_list:
   356                           	opt callstack 0
   357  000164                     	ds	300
   358                           
   359                           	psect	cstackBANK0
   360  000060                     __pcstackBANK0:
   361                           	opt callstack 0
   362  000060                     ?_readButtonRA5:
   363                           	opt callstack 0
   364  000060                     ?_readButtonRB0:
   365                           	opt callstack 0
   366  000060                     ?___wmul:
   367                           	opt callstack 0
   368  000060                     ?___awdiv:
   369                           	opt callstack 0
   370  000060                     ?___awmod:
   371                           	opt callstack 0
   372  000060                     ?_get_time:
   373                           	opt callstack 0
   374  000060                     ?___lldiv:
   375                           	opt callstack 0
   376  000060                     ?___fltol:
   377                           	opt callstack 0
   378  000060                     ?___llmod:
   379                           	opt callstack 0
   380  000060                     ?___xxtofl:
   381                           	opt callstack 0
   382  000060                     SendByteBBSPI@output:
   383                           	opt callstack 0
   384  000060                     getByte@byteReceived:
   385                           	opt callstack 0
   386  000060                     ___wmul@multiplier:
   387                           	opt callstack 0
   388  000060                     ___awdiv@dividend:
   389                           	opt callstack 0
   390  000060                     ___awmod@dividend:
   391                           	opt callstack 0
   392  000060                     ___lldiv@dividend:
   393                           	opt callstack 0
   394  000060                     ___fleq@ff1:
   395                           	opt callstack 0
   396  000060                     ___fltol@f1:
   397                           	opt callstack 0
   398  000060                     ___llmod@dividend:
   399                           	opt callstack 0
   400  000060                     ___xxtofl@val:
   401                           	opt callstack 0
   402                           
   403                           ; 4 bytes @ 0x0
   404  000060                     	ds	1
   405  000061                     SendByteBBSPI@bitcount:
   406                           	opt callstack 0
   407  000061                     getByte@timeOut:
   408                           	opt callstack 0
   409                           
   410                           ; 2 bytes @ 0x1
   411  000061                     	ds	1
   412  000062                     SendByteBBSPI@input:
   413                           	opt callstack 0
   414  000062                     ___wmul@multiplicand:
   415                           	opt callstack 0
   416  000062                     ___awdiv@divisor:
   417                           	opt callstack 0
   418  000062                     ___awmod@divisor:
   419                           	opt callstack 0
   420                           
   421                           ; 2 bytes @ 0x2
   422  000062                     	ds	1
   423  000063                     Port_BBSPIInit@port_dir:
   424                           	opt callstack 0
   425  000063                     WritePort_BBSPI@a:
   426                           	opt callstack 0
   427  000063                     getByte@i:
   428                           	opt callstack 0
   429                           
   430                           ; 1 bytes @ 0x3
   431  000063                     	ds	1
   432  000064                     ??_readDHT:
   433  000064                     ??___fltol:
   434  000064                     ??___xxtofl:
   435  000064                     WritePort_BBSPI@port_add:
   436                           	opt callstack 0
   437  000064                     ___awdiv@counter:
   438                           	opt callstack 0
   439  000064                     ___awmod@counter:
   440                           	opt callstack 0
   441  000064                     ___wmul@product:
   442                           	opt callstack 0
   443  000064                     ___lldiv@divisor:
   444                           	opt callstack 0
   445  000064                     ___fleq@ff2:
   446                           	opt callstack 0
   447  000064                     ___llmod@divisor:
   448                           	opt callstack 0
   449                           
   450                           ; 4 bytes @ 0x4
   451  000064                     	ds	1
   452  000065                     LCDPutChar@ch:
   453                           	opt callstack 0
   454  000065                     LCDPutInst@ch:
   455                           	opt callstack 0
   456  000065                     readDHT@checkSum:
   457                           	opt callstack 0
   458  000065                     ___awdiv@sign:
   459                           	opt callstack 0
   460  000065                     ___awmod@sign:
   461                           	opt callstack 0
   462                           
   463                           ; 1 bytes @ 0x5
   464  000065                     	ds	1
   465  000066                     ??_LCDInit:
   466  000066                     ??_getSizeQueue:
   467  000066                     LCDMoveCursor@pos:
   468                           	opt callstack 0
   469  000066                     queueInitialize@i:
   470                           	opt callstack 0
   471  000066                     LCDPutStr@ptr:
   472                           	opt callstack 0
   473  000066                     readDHT@timeOut:
   474                           	opt callstack 0
   475  000066                     ___awdiv@quotient:
   476                           	opt callstack 0
   477  000066                     addTask@period:
   478                           	opt callstack 0
   479                           
   480                           ; 4 bytes @ 0x6
   481  000066                     	ds	1
   482  000067                     LCDMoveCursor@line:
   483                           	opt callstack 0
   484                           
   485                           ; 1 bytes @ 0x7
   486  000067                     	ds	1
   487  000068                     ??___fleq:
   488  000068                     ?_dequeue:
   489                           	opt callstack 0
   490  000068                     ___fltol@sign1:
   491                           	opt callstack 0
   492  000068                     ___llmod@counter:
   493                           	opt callstack 0
   494  000068                     ___xxtofl@sign:
   495                           	opt callstack 0
   496  000068                     initializeTaskList@i:
   497                           	opt callstack 0
   498  000068                     _LCDMoveCursor$1079:
   499                           	opt callstack 0
   500  000068                     ___lldiv@quotient:
   501                           	opt callstack 0
   502                           
   503                           ; 4 bytes @ 0x8
   504  000068                     	ds	1
   505  000069                     ___fltol@exp1:
   506                           	opt callstack 0
   507  000069                     ___xxtofl@exp:
   508                           	opt callstack 0
   509                           
   510                           ; 1 bytes @ 0x9
   511  000069                     	ds	1
   512  00006A                     ??_start_timer:
   513  00006A                     LCDMoveCursor@position:
   514                           	opt callstack 0
   515  00006A                     addTask@delay:
   516                           	opt callstack 0
   517  00006A                     ___xxtofl@arg:
   518                           	opt callstack 0
   519                           
   520                           ; 4 bytes @ 0xA
   521  00006A                     	ds	1
   522  00006B                     LCDPrint@pos:
   523                           	opt callstack 0
   524  00006B                     LCDPrintChar@pos:
   525                           	opt callstack 0
   526                           
   527                           ; 1 bytes @ 0xB
   528  00006B                     	ds	1
   529  00006C                     start_timer@timer_vaddr:
   530                           	opt callstack 0
   531  00006C                     LCDPrintChar@ch:
   532                           	opt callstack 0
   533  00006C                     ___lldiv@counter:
   534                           	opt callstack 0
   535  00006C                     LCDPrint@ptr:
   536                           	opt callstack 0
   537                           
   538                           ; 2 bytes @ 0xC
   539  00006C                     	ds	1
   540  00006D                     LCDPrintChar@line:
   541                           	opt callstack 0
   542  00006D                     dequeue@idx:
   543                           	opt callstack 0
   544                           
   545                           ; 2 bytes @ 0xD
   546  00006D                     	ds	1
   547  00006E                     ?___flmul:
   548                           	opt callstack 0
   549  00006E                     LCDPrint@line:
   550                           	opt callstack 0
   551  00006E                     handleButton@data_ptr:
   552                           	opt callstack 0
   553  00006E                     addTask@ptr:
   554                           	opt callstack 0
   555  00006E                     ___flmul@b:
   556                           	opt callstack 0
   557                           
   558                           ; 4 bytes @ 0xE
   559  00006E                     	ds	1
   560  00006F                     dequeue@temp:
   561                           	opt callstack 0
   562                           
   563                           ; 5 bytes @ 0xF
   564  00006F                     	ds	1
   565  000070                     ??_handleButton:
   566  000070                     printTime_ms@temp:
   567                           	opt callstack 0
   568                           
   569                           ; 1 bytes @ 0x10
   570  000070                     	ds	1
   571  000071                     printTime_ms@i:
   572                           	opt callstack 0
   573  000071                     addTask@data:
   574                           	opt callstack 0
   575                           
   576                           ; 2 bytes @ 0x11
   577  000071                     	ds	1
   578  000072                     handleButton@checkRA5:
   579                           	opt callstack 0
   580  000072                     printTime_ms@current_time:
   581                           	opt callstack 0
   582  000072                     ___flmul@a:
   583                           	opt callstack 0
   584                           
   585                           ; 4 bytes @ 0x12
   586  000072                     	ds	1
   587  000073                     ??_addTask:
   588                           
   589                           ; 1 bytes @ 0x13
   590  000073                     	ds	1
   591  000074                     handleButton@checkRB0:
   592                           	opt callstack 0
   593                           
   594                           ; 2 bytes @ 0x14
   595  000074                     	ds	2
   596  000076                     ??___flmul:
   597                           
   598                           ; 1 bytes @ 0x16
   599  000076                     	ds	4
   600  00007A                     ___flmul@sign:
   601                           	opt callstack 0
   602                           
   603                           ; 1 bytes @ 0x1A
   604  00007A                     	ds	1
   605  00007B                     ___flmul@grs:
   606                           	opt callstack 0
   607                           
   608                           ; 4 bytes @ 0x1B
   609  00007B                     	ds	4
   610  00007F                     ___flmul@aexp:
   611                           	opt callstack 0
   612  00007F                     addTask@prev:
   613                           	opt callstack 0
   614                           
   615                           ; 2 bytes @ 0x1F
   616  00007F                     	ds	1
   617  000080                     ___flmul@bexp:
   618                           	opt callstack 0
   619                           
   620                           ; 1 bytes @ 0x20
   621  000080                     	ds	1
   622  000081                     addTask@sum:
   623                           	opt callstack 0
   624  000081                     ___flmul@prod:
   625                           	opt callstack 0
   626                           
   627                           ; 4 bytes @ 0x21
   628  000081                     	ds	2
   629  000083                     addTask@cur:
   630                           	opt callstack 0
   631                           
   632                           ; 2 bytes @ 0x23
   633  000083                     	ds	2
   634  000085                     addTask@idx:
   635                           	opt callstack 0
   636  000085                     ___flmul@temp:
   637                           	opt callstack 0
   638                           
   639                           ; 2 bytes @ 0x25
   640  000085                     	ds	1
   641  000086                     register_timer@period:
   642                           	opt callstack 0
   643                           
   644                           ; 4 bytes @ 0x26
   645  000086                     	ds	1
   646  000087                     ?___fladd:
   647                           	opt callstack 0
   648  000087                     _printTempAndHumid$115:
   649                           	opt callstack 0
   650  000087                     ___fladd@b:
   651                           	opt callstack 0
   652                           
   653                           ; 4 bytes @ 0x27
   654  000087                     	ds	3
   655  00008A                     register_timer@delay:
   656                           	opt callstack 0
   657                           
   658                           ; 4 bytes @ 0x2A
   659  00008A                     	ds	1
   660  00008B                     _printTempAndHumid$117:
   661                           	opt callstack 0
   662  00008B                     ___fladd@a:
   663                           	opt callstack 0
   664                           
   665                           ; 4 bytes @ 0x2B
   666  00008B                     	ds	3
   667  00008E                     register_timer@callback:
   668                           	opt callstack 0
   669                           
   670                           ; 3 bytes @ 0x2E
   671  00008E                     	ds	1
   672  00008F                     ??___fladd:
   673  00008F                     printTempAndHumid@temp:
   674                           	opt callstack 0
   675                           
   676                           ; 2 bytes @ 0x2F
   677  00008F                     	ds	2
   678  000091                     printTempAndHumid@humid:
   679                           	opt callstack 0
   680  000091                     register_timer@data:
   681                           	opt callstack 0
   682                           
   683                           ; 2 bytes @ 0x31
   684  000091                     	ds	2
   685  000093                     ___fladd@signs:
   686                           	opt callstack 0
   687                           
   688                           ; 1 bytes @ 0x33
   689  000093                     	ds	1
   690  000094                     ___fladd@aexp:
   691                           	opt callstack 0
   692                           
   693                           ; 1 bytes @ 0x34
   694  000094                     	ds	1
   695  000095                     ___fladd@bexp:
   696                           	opt callstack 0
   697                           
   698                           ; 1 bytes @ 0x35
   699  000095                     	ds	1
   700  000096                     ___fladd@grs:
   701                           	opt callstack 0
   702                           
   703                           ; 1 bytes @ 0x36
   704  000096                     	ds	1
   705  000097                     ?___flsub:
   706                           	opt callstack 0
   707  000097                     ___flsub@b:
   708                           	opt callstack 0
   709                           
   710                           ; 4 bytes @ 0x37
   711  000097                     	ds	4
   712  00009B                     ___flsub@a:
   713                           	opt callstack 0
   714                           
   715                           ; 4 bytes @ 0x3B
   716  00009B                     	ds	4
   717  00009F                     ??_readTempAndHumid:
   718  00009F                     
   719                           ; 1 bytes @ 0x3F
   720  00009F                     	ds	1
   721  0000A0                     selectReadyTask@node:
   722                           	opt callstack 0
   723                           
   724                           ; 5 bytes @ 0x40
   725  0000A0                     	ds	5
   726  0000A5                     
   727                           ; 1 bytes @ 0x45
   728                           
   729                           	psect	cstackCOMRAM
   730  000001                     __pcstackCOMRAM:
   731                           	opt callstack 0
   732  000001                     ??_removeTask:
   733  000001                     ?i2___wmul:
   734                           	opt callstack 0
   735  000001                     ?i2___awmod:
   736                           	opt callstack 0
   737  000001                     i2___wmul@multiplier:
   738                           	opt callstack 0
   739  000001                     i2___awmod@dividend:
   740                           	opt callstack 0
   741                           
   742                           ; 2 bytes @ 0x0
   743  000001                     	ds	2
   744  000003                     i2___wmul@multiplicand:
   745                           	opt callstack 0
   746  000003                     i2___awmod@divisor:
   747                           	opt callstack 0
   748                           
   749                           ; 2 bytes @ 0x2
   750  000003                     	ds	2
   751  000005                     removeTask@pos:
   752                           	opt callstack 0
   753  000005                     i2___awmod@counter:
   754                           	opt callstack 0
   755  000005                     i2___wmul@product:
   756                           	opt callstack 0
   757                           
   758                           ; 2 bytes @ 0x4
   759  000005                     	ds	1
   760  000006                     removeTask@idx:
   761                           	opt callstack 0
   762  000006                     i2___awmod@sign:
   763                           	opt callstack 0
   764                           
   765                           ; 1 bytes @ 0x5
   766  000006                     	ds	1
   767  000007                     ??i2_getSizeQueue:
   768                           
   769                           ; 1 bytes @ 0x6
   770  000007                     	ds	2
   771  000009                     ??_isFullQueue:
   772                           
   773                           ; 1 bytes @ 0x8
   774  000009                     	ds	1
   775  00000A                     enqueue@ptr:
   776                           	opt callstack 0
   777                           
   778                           ; 3 bytes @ 0x9
   779  00000A                     	ds	3
   780  00000D                     enqueue@data:
   781                           	opt callstack 0
   782                           
   783                           ; 2 bytes @ 0xC
   784  00000D                     	ds	2
   785  00000F                     ??_handleListHead:
   786                           
   787                           ; 1 bytes @ 0xE
   788  00000F                     	ds	16
   789  00001F                     _handleListHead$1979:
   790                           	opt callstack 0
   791                           
   792                           ; 3 bytes @ 0x1E
   793  00001F                     	ds	3
   794  000022                     _handleListHead$1984:
   795                           	opt callstack 0
   796                           
   797                           ; 2 bytes @ 0x21
   798  000022                     	ds	2
   799  000024                     _handleListHead$1985:
   800                           	opt callstack 0
   801                           
   802                           ; 2 bytes @ 0x23
   803  000024                     	ds	2
   804  000026                     handleListHead@prev:
   805                           	opt callstack 0
   806                           
   807                           ; 2 bytes @ 0x25
   808  000026                     	ds	2
   809  000028                     handleListHead@sum:
   810                           	opt callstack 0
   811                           
   812                           ; 2 bytes @ 0x27
   813  000028                     	ds	2
   814  00002A                     handleListHead@cur:
   815                           	opt callstack 0
   816                           
   817                           ; 2 bytes @ 0x29
   818  00002A                     	ds	2
   819  00002C                     handleListHead@pos:
   820                           	opt callstack 0
   821                           
   822                           ; 2 bytes @ 0x2B
   823  00002C                     	ds	2
   824  00002E                     ??_timer_interrupt:
   825                           
   826                           ; 1 bytes @ 0x2D
   827  00002E                     	ds	6
   828                           
   829 ;;
   830 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   831 ;;
   832 ;; *************** function _main *****************
   833 ;; Defined at:
   834 ;;		line 76 in file "main.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;		None
   837 ;; Auto vars:     Size  Location     Type
   838 ;;		None
   839 ;; Return value:  Size  Location     Type
   840 ;;                  1    wreg      void 
   841 ;; Registers used:
   842 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
   843 ;; Tracked objects:
   844 ;;		On entry : 0/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   852 ;;Total ram usage:        0 bytes
   853 ;; Hardware stack levels required when called:   14
   854 ;; This function calls:
   855 ;;		_LCDPrint
   856 ;;		_dispatch
   857 ;;		_register_timer
   858 ;;		_system_initialize
   859 ;; This function is called by:
   860 ;;		Startup code after reset
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           
   864                           	psect	text0
   865  002858                     __ptext0:
   866                           	opt callstack 0
   867  002858                     _main:
   868                           	opt callstack 17
   869  002858                     
   870                           ;main.c: 77:     system_initialize();
   871  002858  EC87  F01D         	call	_system_initialize	;wreg free
   872                           
   873                           ;main.c: 88:     task_id[0] = register_timer(50, 0, printTime_ms, ((void*)0));
   874  00285C  0E32               	movlw	50
   875  00285E  0100               	movlb	0	; () banked
   876  002860  6F86               	movwf	register_timer@period& (0+255),b
   877  002862  0E00               	movlw	0
   878  002864  6F87               	movwf	(register_timer@period+1)& (0+255),b
   879  002866  0E00               	movlw	0
   880  002868  6F88               	movwf	(register_timer@period+2)& (0+255),b
   881  00286A  0E00               	movlw	0
   882  00286C  6F89               	movwf	(register_timer@period+3)& (0+255),b
   883  00286E  0E00               	movlw	0
   884  002870  6F8A               	movwf	register_timer@delay& (0+255),b
   885  002872  0E00               	movlw	0
   886  002874  6F8B               	movwf	(register_timer@delay+1)& (0+255),b
   887  002876  0E00               	movlw	0
   888  002878  6F8C               	movwf	(register_timer@delay+2)& (0+255),b
   889  00287A  0E00               	movlw	0
   890  00287C  6F8D               	movwf	(register_timer@delay+3)& (0+255),b
   891  00287E  0E18               	movlw	low _printTime_ms
   892  002880  6F8E               	movwf	register_timer@callback& (0+255),b
   893  002882  0E2E               	movlw	high _printTime_ms
   894  002884  6F8F               	movwf	(register_timer@callback+1)& (0+255),b
   895  002886  0E00               	movlw	low (_printTime_ms shr (0+16))
   896  002888  6F90               	movwf	(register_timer@callback+2)& (0+255),b
   897  00288A  0E00               	movlw	0
   898  00288C  6F91               	movwf	register_timer@data& (0+255),b
   899  00288E  0E00               	movlw	0
   900  002890  6F92               	movwf	(register_timer@data+1)& (0+255),b
   901  002892  ECDB  F01C         	call	_register_timer	;wreg free
   902  002896  0100               	movlb	0	; () banked
   903  002898  6FA5               	movwf	_task_id& (0+255),b
   904                           
   905                           ;main.c: 89:     task_id[1] = register_timer(20, 70, handleButton, ((void*)0));
   906  00289A  0E14               	movlw	20
   907  00289C  6F86               	movwf	register_timer@period& (0+255),b
   908  00289E  0E00               	movlw	0
   909  0028A0  6F87               	movwf	(register_timer@period+1)& (0+255),b
   910  0028A2  0E00               	movlw	0
   911  0028A4  6F88               	movwf	(register_timer@period+2)& (0+255),b
   912  0028A6  0E00               	movlw	0
   913  0028A8  6F89               	movwf	(register_timer@period+3)& (0+255),b
   914  0028AA  0E46               	movlw	70
   915  0028AC  6F8A               	movwf	register_timer@delay& (0+255),b
   916  0028AE  0E00               	movlw	0
   917  0028B0  6F8B               	movwf	(register_timer@delay+1)& (0+255),b
   918  0028B2  0E00               	movlw	0
   919  0028B4  6F8C               	movwf	(register_timer@delay+2)& (0+255),b
   920  0028B6  0E00               	movlw	0
   921  0028B8  6F8D               	movwf	(register_timer@delay+3)& (0+255),b
   922  0028BA  0E96               	movlw	low _handleButton
   923  0028BC  6F8E               	movwf	register_timer@callback& (0+255),b
   924  0028BE  0E2B               	movlw	high _handleButton
   925  0028C0  6F8F               	movwf	(register_timer@callback+1)& (0+255),b
   926  0028C2  0E00               	movlw	low (_handleButton shr (0+16))
   927  0028C4  6F90               	movwf	(register_timer@callback+2)& (0+255),b
   928  0028C6  0E00               	movlw	0
   929  0028C8  6F91               	movwf	register_timer@data& (0+255),b
   930  0028CA  0E00               	movlw	0
   931  0028CC  6F92               	movwf	(register_timer@data+1)& (0+255),b
   932  0028CE  ECDB  F01C         	call	_register_timer	;wreg free
   933  0028D2  0100               	movlb	0	; () banked
   934  0028D4  6FA6               	movwf	(_task_id+1)& (0+255),b
   935                           
   936                           ;main.c: 90:     task_id[2] = register_timer(2000, 35, readTempAndHumid, ((void*)0));
   937  0028D6  0ED0               	movlw	208
   938  0028D8  6F86               	movwf	register_timer@period& (0+255),b
   939  0028DA  0E07               	movlw	7
   940  0028DC  6F87               	movwf	(register_timer@period+1)& (0+255),b
   941  0028DE  0E00               	movlw	0
   942  0028E0  6F88               	movwf	(register_timer@period+2)& (0+255),b
   943  0028E2  0E00               	movlw	0
   944  0028E4  6F89               	movwf	(register_timer@period+3)& (0+255),b
   945  0028E6  0E23               	movlw	35
   946  0028E8  6F8A               	movwf	register_timer@delay& (0+255),b
   947  0028EA  0E00               	movlw	0
   948  0028EC  6F8B               	movwf	(register_timer@delay+1)& (0+255),b
   949  0028EE  0E00               	movlw	0
   950  0028F0  6F8C               	movwf	(register_timer@delay+2)& (0+255),b
   951  0028F2  0E00               	movlw	0
   952  0028F4  6F8D               	movwf	(register_timer@delay+3)& (0+255),b
   953  0028F6  0E22               	movlw	low _readTempAndHumid
   954  0028F8  6F8E               	movwf	register_timer@callback& (0+255),b
   955  0028FA  0E27               	movlw	high _readTempAndHumid
   956  0028FC  6F8F               	movwf	(register_timer@callback+1)& (0+255),b
   957  0028FE  0E00               	movlw	low (_readTempAndHumid shr (0+16))
   958  002900  6F90               	movwf	(register_timer@callback+2)& (0+255),b
   959  002902  0E00               	movlw	0
   960  002904  6F91               	movwf	register_timer@data& (0+255),b
   961  002906  0E00               	movlw	0
   962  002908  6F92               	movwf	(register_timer@data+1)& (0+255),b
   963  00290A  ECDB  F01C         	call	_register_timer	;wreg free
   964  00290E  0100               	movlb	0	; () banked
   965  002910  6FA7               	movwf	(_task_id+2)& (0+255),b
   966                           
   967                           ;main.c: 91:     task_id[3] = register_timer(2000, 23, printTempAndHumid, ((void*)0));
   968  002912  0ED0               	movlw	208
   969  002914  6F86               	movwf	register_timer@period& (0+255),b
   970  002916  0E07               	movlw	7
   971  002918  6F87               	movwf	(register_timer@period+1)& (0+255),b
   972  00291A  0E00               	movlw	0
   973  00291C  6F88               	movwf	(register_timer@period+2)& (0+255),b
   974  00291E  0E00               	movlw	0
   975  002920  6F89               	movwf	(register_timer@period+3)& (0+255),b
   976  002922  0E17               	movlw	23
   977  002924  6F8A               	movwf	register_timer@delay& (0+255),b
   978  002926  0E00               	movlw	0
   979  002928  6F8B               	movwf	(register_timer@delay+1)& (0+255),b
   980  00292A  0E00               	movlw	0
   981  00292C  6F8C               	movwf	(register_timer@delay+2)& (0+255),b
   982  00292E  0E00               	movlw	0
   983  002930  6F8D               	movwf	(register_timer@delay+3)& (0+255),b
   984  002932  0E50               	movlw	low _printTempAndHumid
   985  002934  6F8E               	movwf	register_timer@callback& (0+255),b
   986  002936  0E21               	movlw	high _printTempAndHumid
   987  002938  6F8F               	movwf	(register_timer@callback+1)& (0+255),b
   988  00293A  0E00               	movlw	low (_printTempAndHumid shr (0+16))
   989  00293C  6F90               	movwf	(register_timer@callback+2)& (0+255),b
   990  00293E  0E00               	movlw	0
   991  002940  6F91               	movwf	register_timer@data& (0+255),b
   992  002942  0E00               	movlw	0
   993  002944  6F92               	movwf	(register_timer@data+1)& (0+255),b
   994  002946  ECDB  F01C         	call	_register_timer	;wreg free
   995  00294A  0100               	movlb	0	; () banked
   996  00294C  6FA8               	movwf	(_task_id+3)& (0+255),b
   997  00294E                     
   998                           ; BSR set to: 0
   999                           ;main.c: 94:     LCDPrint(0, 0, "Time");
  1000  00294E  0E00               	movlw	0
  1001  002950  6F6B               	movwf	LCDPrint@pos& (0+255),b
  1002  002952  0E01               	movlw	low STR_3
  1003  002954  6F6C               	movwf	LCDPrint@ptr& (0+255),b
  1004  002956  0E10               	movlw	high STR_3
  1005  002958  6F6D               	movwf	(LCDPrint@ptr+1)& (0+255),b
  1006  00295A  0E00               	movlw	0
  1007  00295C  EC1A  F01C         	call	_LCDPrint
  1008  002960                     
  1009                           ;main.c: 95:     LCDPrint(0, 14, "ms");
  1010  002960  0E0E               	movlw	14
  1011  002962  0100               	movlb	0	; () banked
  1012  002964  6F6B               	movwf	LCDPrint@pos& (0+255),b
  1013  002966  0E0C               	movlw	low STR_4
  1014  002968  6F6C               	movwf	LCDPrint@ptr& (0+255),b
  1015  00296A  0E10               	movlw	high STR_4
  1016  00296C  6F6D               	movwf	(LCDPrint@ptr+1)& (0+255),b
  1017  00296E  0E00               	movlw	0
  1018  002970  EC1A  F01C         	call	_LCDPrint
  1019  002974                     l3810:
  1020                           
  1021                           ;main.c: 97:         dispatch();
  1022  002974  ECE8  F01D         	call	_dispatch	;wreg free
  1023  002978  EFBA  F014         	goto	l3810
  1024  00297C  EF07  F000         	goto	start
  1025  002980                     __end_of_main:
  1026                           	opt callstack 0
  1027                           
  1028 ;; *************** function _system_initialize *****************
  1029 ;; Defined at:
  1030 ;;		line 30 in file "mcc.c"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;		None
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;		None
  1035 ;; Return value:  Size  Location     Type
  1036 ;;                  1    wreg      void 
  1037 ;; Registers used:
  1038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1039 ;; Tracked objects:
  1040 ;;		On entry : 0/0
  1041 ;;		On exit  : 0/0
  1042 ;;		Unchanged: 0/0
  1043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1048 ;;Total ram usage:        0 bytes
  1049 ;; Hardware stack levels used:    1
  1050 ;; Hardware stack levels required when called:   10
  1051 ;; This function calls:
  1052 ;;		_LCDInit
  1053 ;;		_interrupt_initialize
  1054 ;;		_osc_initialize
  1055 ;;		_pin_initialize
  1056 ;;		_start_timer
  1057 ;; This function is called by:
  1058 ;;		_main
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061                           
  1062                           	psect	text1
  1063  003B0E                     __ptext1:
  1064                           	opt callstack 0
  1065  003B0E                     _system_initialize:
  1066                           	opt callstack 20
  1067  003B0E                     
  1068                           ;mcc.c: 31:     osc_initialize();
  1069  003B0E  ECE2  F01D         	call	_osc_initialize	;wreg free
  1070                           
  1071                           ;mcc.c: 32:     pin_initialize();
  1072  003B12  EC65  F01D         	call	_pin_initialize	;wreg free
  1073  003B16                     
  1074                           ;mcc.c: 33:     interrupt_initialize();
  1075  003B16  ECE5  F01D         	call	_interrupt_initialize	;wreg free
  1076  003B1A                     
  1077                           ;mcc.c: 34:     LCDInit();
  1078  003B1A  EC0F  F01B         	call	_LCDInit	;wreg free
  1079  003B1E                     
  1080                           ;mcc.c: 35:     start_timer(0);
  1081  003B1E  0E00               	movlw	0
  1082  003B20  ECC0  F019         	call	_start_timer
  1083  003B24                     
  1084                           ;mcc.c: 36:     start_timer(1);
  1085  003B24  0E01               	movlw	1
  1086  003B26  ECC0  F019         	call	_start_timer
  1087  003B2A  0012               	return		;funcret
  1088  003B2C                     __end_of_system_initialize:
  1089                           	opt callstack 0
  1090                           
  1091 ;; *************** function _start_timer *****************
  1092 ;; Defined at:
  1093 ;;		line 5 in file "clock.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;  timer_vaddr     1    wreg     unsigned char 
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;  timer_vaddr     1   12[BANK0 ] unsigned char 
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  2  103[None  ] int 
  1100 ;; Registers used:
  1101 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1108 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1109 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1110 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1111 ;;Total ram usage:        3 bytes
  1112 ;; Hardware stack levels used:    1
  1113 ;; Hardware stack levels required when called:    9
  1114 ;; This function calls:
  1115 ;;		_initializeTaskList
  1116 ;; This function is called by:
  1117 ;;		_system_initialize
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           	psect	text2
  1122  003380                     __ptext2:
  1123                           	opt callstack 0
  1124  003380                     _start_timer:
  1125                           	opt callstack 20
  1126                           
  1127                           ;incstack = 0
  1128                           ;start_timer@timer_vaddr stored from wreg
  1129  003380  0100               	movlb	0	; () banked
  1130  003382  6F6C               	movwf	start_timer@timer_vaddr& (0+255),b
  1131  003384                     
  1132                           ;clock.c: 6:     if(timer_vaddr > 4)
  1133  003384  0E04               	movlw	4
  1134  003386  0100               	movlb	0	; () banked
  1135  003388  656C               	cpfsgt	start_timer@timer_vaddr& (0+255),b
  1136  00338A  EFC9  F019         	goto	u3361
  1137  00338E  EFCB  F019         	goto	u3360
  1138  003392                     u3361:
  1139  003392  EFE9  F019         	goto	l3616
  1140  003396                     u3360:
  1141  003396  EF0A  F01A         	goto	l349
  1142  00339A                     l351:
  1143                           
  1144                           ; BSR set to: 0
  1145                           ;clock.c: 10:             INTCONbits.TMR0IE = 1;
  1146  00339A  8AF2               	bsf	242,5,c	;volatile
  1147                           
  1148                           ;clock.c: 11:             INTCONbits.TMR0IF = 0;
  1149  00339C  94F2               	bcf	242,2,c	;volatile
  1150  00339E                     
  1151                           ; BSR set to: 0
  1152                           ;clock.c: 12:             T0CON = 0xC3;
  1153  00339E  0EC3               	movlw	195
  1154  0033A0  6ED5               	movwf	213,c	;volatile
  1155                           
  1156                           ;clock.c: 13:             TMR0L = 131;
  1157  0033A2  0E83               	movlw	131
  1158  0033A4  6ED6               	movwf	214,c	;volatile
  1159                           
  1160                           ;clock.c: 14:             time_ms = 0;
  1161  0033A6  0E00               	movlw	0
  1162  0033A8  6FB9               	movwf	_time_ms& (0+255),b
  1163  0033AA  0E00               	movlw	0
  1164  0033AC  6FBA               	movwf	(_time_ms+1)& (0+255),b
  1165  0033AE  0E00               	movlw	0
  1166  0033B0  6FBB               	movwf	(_time_ms+2)& (0+255),b
  1167  0033B2  0E00               	movlw	0
  1168  0033B4  6FBC               	movwf	(_time_ms+3)& (0+255),b
  1169                           
  1170                           ;clock.c: 15:             break;
  1171  0033B6  EF0A  F01A         	goto	l349
  1172  0033BA                     l3602:
  1173                           
  1174                           ; BSR set to: 0
  1175                           ;clock.c: 17:             initializeTaskList();
  1176  0033BA  ECC0  F014         	call	_initializeTaskList	;wreg free
  1177  0033BE                     
  1178                           ;clock.c: 18:             PIE1bits.TMR1IE = 1;
  1179  0033BE  809D               	bsf	157,0,c	;volatile
  1180  0033C0                     
  1181                           ;clock.c: 19:             PIR1bits.TMR1IF = 0;
  1182  0033C0  909E               	bcf	158,0,c	;volatile
  1183  0033C2                     
  1184                           ;clock.c: 20:             T1CON = 0b10000001;
  1185  0033C2  0E81               	movlw	129
  1186  0033C4  6ECD               	movwf	205,c	;volatile
  1187  0033C6                     
  1188                           ;clock.c: 21:             TMR1H = 0xB1;
  1189  0033C6  0EB1               	movlw	177
  1190  0033C8  6ECF               	movwf	207,c	;volatile
  1191  0033CA                     
  1192                           ;clock.c: 22:             TMR1L = 0xE0;
  1193  0033CA  0EE0               	movlw	224
  1194  0033CC  6ECE               	movwf	206,c	;volatile
  1195                           
  1196                           ;clock.c: 23:             break;
  1197  0033CE  EF0A  F01A         	goto	l349
  1198  0033D2                     l3616:
  1199                           
  1200                           ; BSR set to: 0
  1201  0033D2  516C               	movf	start_timer@timer_vaddr& (0+255),w,b
  1202  0033D4  6F6A               	movwf	??_start_timer& (0+255),b
  1203  0033D6  6B6B               	clrf	(??_start_timer+1)& (0+255),b
  1204                           
  1205                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1206                           ; Switch size 1, requested type "simple"
  1207                           ; Number of cases is 1, Range of values is 0 to 0
  1208                           ; switch strategies available:
  1209                           ; Name         Instructions Cycles
  1210                           ; simple_byte            4     3 (average)
  1211                           ;	Chosen strategy is simple_byte
  1212  0033D8  516B               	movf	(??_start_timer+1)& (0+255),w,b
  1213  0033DA  0A00               	xorlw	0	; case 0
  1214  0033DC  B4D8               	btfsc	status,2,c
  1215  0033DE  EFF3  F019         	goto	l3912
  1216  0033E2  EF0A  F01A         	goto	l349
  1217  0033E6                     l3912:
  1218                           
  1219                           ; BSR set to: 0
  1220                           ; Switch size 1, requested type "simple"
  1221                           ; Number of cases is 5, Range of values is 0 to 4
  1222                           ; switch strategies available:
  1223                           ; Name         Instructions Cycles
  1224                           ; simple_byte           16     9 (average)
  1225                           ;	Chosen strategy is simple_byte
  1226  0033E6  516A               	movf	??_start_timer& (0+255),w,b
  1227  0033E8  0A00               	xorlw	0	; case 0
  1228  0033EA  B4D8               	btfsc	status,2,c
  1229  0033EC  EFCD  F019         	goto	l351
  1230  0033F0  0A01               	xorlw	1	; case 1
  1231  0033F2  B4D8               	btfsc	status,2,c
  1232  0033F4  EFDD  F019         	goto	l3602
  1233  0033F8  0A03               	xorlw	3	; case 2
  1234  0033FA  B4D8               	btfsc	status,2,c
  1235  0033FC  EF0A  F01A         	goto	l349
  1236  003400  0A01               	xorlw	1	; case 3
  1237  003402  B4D8               	btfsc	status,2,c
  1238  003404  EF0A  F01A         	goto	l349
  1239  003408  0A07               	xorlw	7	; case 4
  1240  00340A  B4D8               	btfsc	status,2,c
  1241  00340C  EF0A  F01A         	goto	l349
  1242  003410  EF0A  F01A         	goto	l349
  1243  003414                     l349:
  1244  003414  0012               	return		;funcret
  1245  003416                     __end_of_start_timer:
  1246                           	opt callstack 0
  1247                           
  1248 ;; *************** function _initializeTaskList *****************
  1249 ;; Defined at:
  1250 ;;		line 11 in file "task.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;		None
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;  i               2    8[BANK0 ] int 
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  1    wreg      void 
  1257 ;; Registers used:
  1258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1265 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1267 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1268 ;;Total ram usage:        2 bytes
  1269 ;; Hardware stack levels used:    1
  1270 ;; Hardware stack levels required when called:    8
  1271 ;; This function calls:
  1272 ;;		___wmul
  1273 ;;		_queueInitialize
  1274 ;; This function is called by:
  1275 ;;		_start_timer
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           
  1279                           	psect	text3
  1280  002980                     __ptext3:
  1281                           	opt callstack 0
  1282  002980                     _initializeTaskList:
  1283                           	opt callstack 20
  1284  002980                     
  1285                           ;task.c: 12:     queueInitialize();
  1286  002980  EC98  F01A         	call	_queueInitialize	;wreg free
  1287  002984                     
  1288                           ;task.c: 13:     for(int i = 0; i < 20; i++) {
  1289  002984  0E00               	movlw	0
  1290  002986  0100               	movlb	0	; () banked
  1291  002988  6F69               	movwf	(initializeTaskList@i+1)& (0+255),b
  1292  00298A  0E00               	movlw	0
  1293  00298C  6F68               	movwf	initializeTaskList@i& (0+255),b
  1294  00298E                     l3488:
  1295                           
  1296                           ; BSR set to: 0
  1297                           ;task.c: 14:         task_list[i].delay_t = 0;
  1298  00298E  C068  F060         	movff	initializeTaskList@i,___wmul@multiplier
  1299  002992  C069  F061         	movff	initializeTaskList@i+1,___wmul@multiplier+1
  1300  002996  0E00               	movlw	0
  1301  002998  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1302  00299A  0E0F               	movlw	15
  1303  00299C  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1304  00299E  EC3E  F01D         	call	___wmul	;wreg free
  1305  0029A2  0E64               	movlw	low _task_list
  1306  0029A4  0100               	movlb	0	; () banked
  1307  0029A6  2560               	addwf	?___wmul& (0+255),w,b
  1308  0029A8  6ED9               	movwf	fsr2l,c
  1309  0029AA  0E01               	movlw	high _task_list
  1310  0029AC  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1311  0029AE  6EDA               	movwf	fsr2h,c
  1312  0029B0  6ADE               	clrf	postinc2,c
  1313  0029B2  6ADE               	clrf	postinc2,c
  1314  0029B4  6ADE               	clrf	postinc2,c
  1315  0029B6  6ADD               	clrf	postdec2,c
  1316                           
  1317                           ;task.c: 15:         task_list[i].period_t = 0;
  1318  0029B8  C068  F060         	movff	initializeTaskList@i,___wmul@multiplier
  1319  0029BC  C069  F061         	movff	initializeTaskList@i+1,___wmul@multiplier+1
  1320  0029C0  0E00               	movlw	0
  1321  0029C2  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1322  0029C4  0E0F               	movlw	15
  1323  0029C6  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1324  0029C8  EC3E  F01D         	call	___wmul	;wreg free
  1325  0029CC  0E68               	movlw	low (_task_list+4)
  1326  0029CE  0100               	movlb	0	; () banked
  1327  0029D0  2560               	addwf	?___wmul& (0+255),w,b
  1328  0029D2  6ED9               	movwf	fsr2l,c
  1329  0029D4  0E01               	movlw	high (_task_list+4)
  1330  0029D6  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1331  0029D8  6EDA               	movwf	fsr2h,c
  1332  0029DA  6ADE               	clrf	postinc2,c
  1333  0029DC  6ADE               	clrf	postinc2,c
  1334  0029DE  6ADE               	clrf	postinc2,c
  1335  0029E0  6ADD               	clrf	postdec2,c
  1336                           
  1337                           ;task.c: 16:         task_list[i].func_ptr = ((void*)0);
  1338  0029E2  C068  F060         	movff	initializeTaskList@i,___wmul@multiplier
  1339  0029E6  C069  F061         	movff	initializeTaskList@i+1,___wmul@multiplier+1
  1340  0029EA  0E00               	movlw	0
  1341  0029EC  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1342  0029EE  0E0F               	movlw	15
  1343  0029F0  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1344  0029F2  EC3E  F01D         	call	___wmul	;wreg free
  1345  0029F6  0E6C               	movlw	low (_task_list+8)
  1346  0029F8  0100               	movlb	0	; () banked
  1347  0029FA  2560               	addwf	?___wmul& (0+255),w,b
  1348  0029FC  6ED9               	movwf	fsr2l,c
  1349  0029FE  0E01               	movlw	high (_task_list+8)
  1350  002A00  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1351  002A02  6EDA               	movwf	fsr2h,c
  1352  002A04  0E00               	movlw	0
  1353  002A06  6EDE               	movwf	postinc2,c
  1354  002A08  0E00               	movlw	0
  1355  002A0A  6EDE               	movwf	postinc2,c
  1356  002A0C  0E00               	movlw	0
  1357  002A0E  6EDE               	movwf	postinc2,c
  1358                           
  1359                           ;task.c: 17:         task_list[i].data_p = ((void*)0);
  1360  002A10  C068  F060         	movff	initializeTaskList@i,___wmul@multiplier
  1361  002A14  C069  F061         	movff	initializeTaskList@i+1,___wmul@multiplier+1
  1362  002A18  0E00               	movlw	0
  1363  002A1A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1364  002A1C  0E0F               	movlw	15
  1365  002A1E  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1366  002A20  EC3E  F01D         	call	___wmul	;wreg free
  1367  002A24  0E71               	movlw	low (_task_list+13)
  1368  002A26  0100               	movlb	0	; () banked
  1369  002A28  2560               	addwf	?___wmul& (0+255),w,b
  1370  002A2A  6ED9               	movwf	fsr2l,c
  1371  002A2C  0E01               	movlw	high (_task_list+13)
  1372  002A2E  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1373  002A30  6EDA               	movwf	fsr2h,c
  1374  002A32  0E00               	movlw	0
  1375  002A34  6EDE               	movwf	postinc2,c
  1376  002A36  0E00               	movlw	0
  1377  002A38  6EDD               	movwf	postdec2,c
  1378                           
  1379                           ;task.c: 18:         task_list[i].next = 105;
  1380  002A3A  C068  F060         	movff	initializeTaskList@i,___wmul@multiplier
  1381  002A3E  C069  F061         	movff	initializeTaskList@i+1,___wmul@multiplier+1
  1382  002A42  0E00               	movlw	0
  1383  002A44  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1384  002A46  0E0F               	movlw	15
  1385  002A48  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1386  002A4A  EC3E  F01D         	call	___wmul	;wreg free
  1387  002A4E  0E6F               	movlw	low (_task_list+11)
  1388  002A50  0100               	movlb	0	; () banked
  1389  002A52  2560               	addwf	?___wmul& (0+255),w,b
  1390  002A54  6ED9               	movwf	fsr2l,c
  1391  002A56  0E01               	movlw	high (_task_list+11)
  1392  002A58  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1393  002A5A  6EDA               	movwf	fsr2h,c
  1394  002A5C  0E69               	movlw	105
  1395  002A5E  6EDE               	movwf	postinc2,c
  1396  002A60  0E00               	movlw	0
  1397  002A62  6EDD               	movwf	postdec2,c
  1398  002A64                     
  1399                           ; BSR set to: 0
  1400                           ;task.c: 19:     }
  1401  002A64  4B68               	infsnz	initializeTaskList@i& (0+255),f,b
  1402  002A66  2B69               	incf	(initializeTaskList@i+1)& (0+255),f,b
  1403  002A68                     
  1404                           ; BSR set to: 0
  1405  002A68  BF69               	btfsc	(initializeTaskList@i+1)& (0+255),7,b
  1406  002A6A  EF40  F015         	goto	u3291
  1407  002A6E  5169               	movf	(initializeTaskList@i+1)& (0+255),w,b
  1408  002A70  E109               	bnz	u3290
  1409  002A72  0E14               	movlw	20
  1410  002A74  5D68               	subwf	initializeTaskList@i& (0+255),w,b
  1411  002A76  A0D8               	btfss	status,0,c
  1412  002A78  EF40  F015         	goto	u3291
  1413  002A7C  EF42  F015         	goto	u3290
  1414  002A80                     u3291:
  1415  002A80  EFC7  F014         	goto	l3488
  1416  002A84                     u3290:
  1417  002A84                     
  1418                           ; BSR set to: 0
  1419                           ;task.c: 20:     num_task = 0;
  1420  002A84  0E00               	movlw	0
  1421  002A86  6FC4               	movwf	_num_task& (0+255),b
  1422                           
  1423                           ;task.c: 21:     head = 105;
  1424  002A88  0E69               	movlw	105
  1425  002A8A  6FC3               	movwf	_head& (0+255),b
  1426  002A8C                     
  1427                           ; BSR set to: 0
  1428  002A8C  0012               	return		;funcret
  1429  002A8E                     __end_of_initializeTaskList:
  1430                           	opt callstack 0
  1431                           
  1432 ;; *************** function _queueInitialize *****************
  1433 ;; Defined at:
  1434 ;;		line 3 in file "ready_queue.c"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;		None
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;  i               2    6[BANK0 ] int 
  1439 ;; Return value:  Size  Location     Type
  1440 ;;                  1    wreg      void 
  1441 ;; Registers used:
  1442 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1449 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1451 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1452 ;;Total ram usage:        2 bytes
  1453 ;; Hardware stack levels used:    1
  1454 ;; Hardware stack levels required when called:    7
  1455 ;; This function calls:
  1456 ;;		___wmul
  1457 ;; This function is called by:
  1458 ;;		_initializeTaskList
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           	psect	text4
  1463  003530                     __ptext4:
  1464                           	opt callstack 0
  1465  003530                     _queueInitialize:
  1466                           	opt callstack 20
  1467  003530                     
  1468                           ;ready_queue.c: 4:     for(int i = 0; i< 20; i++) {
  1469  003530  0E00               	movlw	0
  1470  003532  0100               	movlb	0	; () banked
  1471  003534  6F67               	movwf	(queueInitialize@i+1)& (0+255),b
  1472  003536  0E00               	movlw	0
  1473  003538  6F66               	movwf	queueInitialize@i& (0+255),b
  1474  00353A                     l2990:
  1475                           
  1476                           ; BSR set to: 0
  1477                           ;ready_queue.c: 5:         ready_queue[i].data_p = ((void*)0);
  1478  00353A  C066  F060         	movff	queueInitialize@i,___wmul@multiplier
  1479  00353E  C067  F061         	movff	queueInitialize@i+1,___wmul@multiplier+1
  1480  003542  0E00               	movlw	0
  1481  003544  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1482  003546  0E05               	movlw	5
  1483  003548  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1484  00354A  EC3E  F01D         	call	___wmul	;wreg free
  1485  00354E  0E03               	movlw	low (_ready_queue+3)
  1486  003550  0100               	movlb	0	; () banked
  1487  003552  2560               	addwf	?___wmul& (0+255),w,b
  1488  003554  6ED9               	movwf	fsr2l,c
  1489  003556  0E01               	movlw	high (_ready_queue+3)
  1490  003558  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1491  00355A  6EDA               	movwf	fsr2h,c
  1492  00355C  0E00               	movlw	0
  1493  00355E  6EDE               	movwf	postinc2,c
  1494  003560  0E00               	movlw	0
  1495  003562  6EDD               	movwf	postdec2,c
  1496                           
  1497                           ;ready_queue.c: 6:         ready_queue[i].func_ptr = ((void*)0);
  1498  003564  C066  F060         	movff	queueInitialize@i,___wmul@multiplier
  1499  003568  C067  F061         	movff	queueInitialize@i+1,___wmul@multiplier+1
  1500  00356C  0E00               	movlw	0
  1501  00356E  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1502  003570  0E05               	movlw	5
  1503  003572  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1504  003574  EC3E  F01D         	call	___wmul	;wreg free
  1505  003578  0E00               	movlw	low _ready_queue
  1506  00357A  0100               	movlb	0	; () banked
  1507  00357C  2560               	addwf	?___wmul& (0+255),w,b
  1508  00357E  6ED9               	movwf	fsr2l,c
  1509  003580  0E01               	movlw	high _ready_queue
  1510  003582  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1511  003584  6EDA               	movwf	fsr2h,c
  1512  003586  0E00               	movlw	0
  1513  003588  6EDE               	movwf	postinc2,c
  1514  00358A  0E00               	movlw	0
  1515  00358C  6EDE               	movwf	postinc2,c
  1516  00358E  0E00               	movlw	0
  1517  003590  6EDE               	movwf	postinc2,c
  1518  003592                     
  1519                           ; BSR set to: 0
  1520                           ;ready_queue.c: 7:     }
  1521  003592  4B66               	infsnz	queueInitialize@i& (0+255),f,b
  1522  003594  2B67               	incf	(queueInitialize@i+1)& (0+255),f,b
  1523  003596                     
  1524                           ; BSR set to: 0
  1525  003596  BF67               	btfsc	(queueInitialize@i+1)& (0+255),7,b
  1526  003598  EFD7  F01A         	goto	u2521
  1527  00359C  5167               	movf	(queueInitialize@i+1)& (0+255),w,b
  1528  00359E  E109               	bnz	u2520
  1529  0035A0  0E14               	movlw	20
  1530  0035A2  5D66               	subwf	queueInitialize@i& (0+255),w,b
  1531  0035A4  A0D8               	btfss	status,0,c
  1532  0035A6  EFD7  F01A         	goto	u2521
  1533  0035AA  EFD9  F01A         	goto	u2520
  1534  0035AE                     u2521:
  1535  0035AE  EF9D  F01A         	goto	l2990
  1536  0035B2                     u2520:
  1537  0035B2                     
  1538                           ; BSR set to: 0
  1539  0035B2  0012               	return		;funcret
  1540  0035B4                     __end_of_queueInitialize:
  1541                           	opt callstack 0
  1542                           
  1543 ;; *************** function _pin_initialize *****************
  1544 ;; Defined at:
  1545 ;;		line 7 in file "mcc.c"
  1546 ;; Parameters:    Size  Location     Type
  1547 ;;		None
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;		None
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  1    wreg      void 
  1552 ;; Registers used:
  1553 ;;		wreg, status,2
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1563 ;;Total ram usage:        0 bytes
  1564 ;; Hardware stack levels used:    1
  1565 ;; Hardware stack levels required when called:    6
  1566 ;; This function calls:
  1567 ;;		Nothing
  1568 ;; This function is called by:
  1569 ;;		_system_initialize
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           	psect	text5
  1574  003ACA                     __ptext5:
  1575                           	opt callstack 0
  1576  003ACA                     _pin_initialize:
  1577                           	opt callstack 23
  1578  003ACA                     
  1579                           ;mcc.c: 8:     LATC = 0x00;
  1580  003ACA  0E00               	movlw	0
  1581  003ACC  6E8B               	movwf	139,c	;volatile
  1582                           
  1583                           ;mcc.c: 9:     TRISC = 0xD7;
  1584  003ACE  0ED7               	movlw	215
  1585  003AD0  6E94               	movwf	148,c	;volatile
  1586                           
  1587                           ;mcc.c: 10:     ADCON1 = 0b00001111;
  1588  003AD2  0E0F               	movlw	15
  1589  003AD4  6EC1               	movwf	193,c	;volatile
  1590                           
  1591                           ;mcc.c: 13:     LATD = 0x00;
  1592  003AD6  0E00               	movlw	0
  1593  003AD8  6E8C               	movwf	140,c	;volatile
  1594                           
  1595                           ;mcc.c: 14:     TRISD = 0x00;
  1596  003ADA  0E00               	movlw	0
  1597  003ADC  6E95               	movwf	149,c	;volatile
  1598                           
  1599                           ;mcc.c: 16:     LATA = 0x00;
  1600  003ADE  0E00               	movlw	0
  1601  003AE0  6E89               	movwf	137,c	;volatile
  1602                           
  1603                           ;mcc.c: 17:     TRISA = 0xF3;
  1604  003AE2  0EF3               	movlw	243
  1605  003AE4  6E92               	movwf	146,c	;volatile
  1606                           
  1607                           ;mcc.c: 20:     LATB = 0x00;
  1608  003AE6  0E00               	movlw	0
  1609  003AE8  6E8A               	movwf	138,c	;volatile
  1610  003AEA                     
  1611                           ;mcc.c: 21:     TRISB = 0xFF;
  1612  003AEA  6893               	setf	147,c	;volatile
  1613  003AEC  0012               	return		;funcret
  1614  003AEE                     __end_of_pin_initialize:
  1615                           	opt callstack 0
  1616                           
  1617 ;; *************** function _osc_initialize *****************
  1618 ;; Defined at:
  1619 ;;		line 3 in file "mcc.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;		None
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;		None
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  1    wreg      void 
  1626 ;; Registers used:
  1627 ;;		wreg, status,2
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1637 ;;Total ram usage:        0 bytes
  1638 ;; Hardware stack levels used:    1
  1639 ;; Hardware stack levels required when called:    6
  1640 ;; This function calls:
  1641 ;;		Nothing
  1642 ;; This function is called by:
  1643 ;;		_system_initialize
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           	psect	text6
  1648  003BC4                     __ptext6:
  1649                           	opt callstack 0
  1650  003BC4                     _osc_initialize:
  1651                           	opt callstack 23
  1652  003BC4                     
  1653                           ;mcc.c: 4:     OSCCON = 0x70;
  1654  003BC4  0E70               	movlw	112
  1655  003BC6  6ED3               	movwf	211,c	;volatile
  1656  003BC8  0012               	return		;funcret
  1657  003BCA                     __end_of_osc_initialize:
  1658                           	opt callstack 0
  1659                           
  1660 ;; *************** function _interrupt_initialize *****************
  1661 ;; Defined at:
  1662 ;;		line 25 in file "mcc.c"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;		None
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;		None
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  1    wreg      void 
  1669 ;; Registers used:
  1670 ;;		None
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1680 ;;Total ram usage:        0 bytes
  1681 ;; Hardware stack levels used:    1
  1682 ;; Hardware stack levels required when called:    6
  1683 ;; This function calls:
  1684 ;;		Nothing
  1685 ;; This function is called by:
  1686 ;;		_system_initialize
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690                           	psect	text7
  1691  003BCA                     __ptext7:
  1692                           	opt callstack 0
  1693  003BCA                     _interrupt_initialize:
  1694                           	opt callstack 23
  1695  003BCA                     
  1696                           ;mcc.c: 26:     INTCONbits.GIE = 1;
  1697  003BCA  8EF2               	bsf	242,7,c	;volatile
  1698                           
  1699                           ;mcc.c: 27:     INTCONbits.PEIE = 1;
  1700  003BCC  8CF2               	bsf	242,6,c	;volatile
  1701  003BCE  0012               	return		;funcret
  1702  003BD0                     __end_of_interrupt_initialize:
  1703                           	opt callstack 0
  1704                           
  1705 ;; *************** function _LCDInit *****************
  1706 ;; Defined at:
  1707 ;;		line 45 in file "lcd.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;		None
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;		None
  1712 ;; Return value:  Size  Location     Type
  1713 ;;                  1    wreg      void 
  1714 ;; Registers used:
  1715 ;;		wreg, status,2, status,0, cstack
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1723 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1724 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1725 ;;Total ram usage:        1 bytes
  1726 ;; Hardware stack levels used:    1
  1727 ;; Hardware stack levels required when called:    9
  1728 ;; This function calls:
  1729 ;;		_InitBBSPI
  1730 ;;		_LCDPutInst
  1731 ;;		_Port_BBSPIInit
  1732 ;;		_WritePort_BBSPI
  1733 ;; This function is called by:
  1734 ;;		_system_initialize
  1735 ;; This function uses a non-reentrant model
  1736 ;;
  1737                           
  1738                           	psect	text8
  1739  00361E                     __ptext8:
  1740                           	opt callstack 0
  1741  00361E                     _LCDInit:
  1742                           	opt callstack 20
  1743  00361E                     
  1744                           ;lcd.c: 47:     InitBBSPI();
  1745  00361E  ECCC  F01D         	call	_InitBBSPI	;wreg free
  1746  003622                     
  1747                           ;lcd.c: 48:     TRISFbits.TRISF6 = 0;
  1748  003622  9C97               	bcf	151,6,c	;volatile
  1749  003624                     
  1750                           ;lcd.c: 49:     LATFbits.LATF6 = 0;
  1751  003624  9C8E               	bcf	142,6,c	;volatile
  1752  003626                     
  1753                           ;lcd.c: 50:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1754  003626  0E0D               	movlw	13
  1755  003628  0100               	movlb	0	; () banked
  1756  00362A  6F66               	movwf	??_LCDInit& (0+255),b
  1757  00362C  0EFB               	movlw	251
  1758  00362E                     u3717:
  1759  00362E  2EE8               	decfsz	wreg,f,c
  1760  003630  D7FE               	bra	u3717
  1761  003632  2F66               	decfsz	??_LCDInit& (0+255),f,b
  1762  003634  D7FC               	bra	u3717
  1763  003636  D000               	nop2	
  1764  003638                     
  1765                           ;lcd.c: 51:     LATFbits.LATF6 = 1;
  1766  003638  8C8E               	bsf	142,6,c	;volatile
  1767  00363A                     
  1768                           ;lcd.c: 52:     Port_BBSPIInit (0x00);
  1769  00363A  0E00               	movlw	0
  1770  00363C  EC96  F01D         	call	_Port_BBSPIInit
  1771  003640                     
  1772                           ;lcd.c: 53:     Port_BBSPIInit (0x01);
  1773  003640  0E01               	movlw	1
  1774  003642  EC96  F01D         	call	_Port_BBSPIInit
  1775  003646                     
  1776                           ;lcd.c: 54:     WritePort_BBSPI (0x12, 0);
  1777  003646  0E00               	movlw	0
  1778  003648  0100               	movlb	0	; () banked
  1779  00364A  6F63               	movwf	WritePort_BBSPI@a& (0+255),b
  1780  00364C  0E12               	movlw	18
  1781  00364E  EC77  F01D         	call	_WritePort_BBSPI
  1782  003652                     
  1783                           ;lcd.c: 55:     _delay((unsigned long)((15)*(8000000/4000.0)));
  1784  003652  0E27               	movlw	39
  1785  003654  0100               	movlb	0	; () banked
  1786  003656  6F66               	movwf	??_LCDInit& (0+255),b
  1787  003658  0EF5               	movlw	245
  1788  00365A                     u3727:
  1789  00365A  2EE8               	decfsz	wreg,f,c
  1790  00365C  D7FE               	bra	u3727
  1791  00365E  2F66               	decfsz	??_LCDInit& (0+255),f,b
  1792  003660  D7FC               	bra	u3727
  1793  003662                     
  1794                           ;lcd.c: 56:     LCDPutInst(0x32);
  1795  003662  0E32               	movlw	50
  1796  003664  EC5C  F01C         	call	_LCDPutInst
  1797  003668                     
  1798                           ;lcd.c: 57:     LCDPutInst(0x3C);
  1799  003668  0E3C               	movlw	60
  1800  00366A  EC5C  F01C         	call	_LCDPutInst
  1801  00366E                     
  1802                           ;lcd.c: 58:     LCDPutInst(0x0C);
  1803  00366E  0E0C               	movlw	12
  1804  003670  EC5C  F01C         	call	_LCDPutInst
  1805  003674                     
  1806                           ;lcd.c: 59:     LCDPutInst(0x01);
  1807  003674  0E01               	movlw	1
  1808  003676  EC5C  F01C         	call	_LCDPutInst
  1809  00367A                     
  1810                           ;lcd.c: 60:     LCDPutInst(0x06);
  1811  00367A  0E06               	movlw	6
  1812  00367C  EC5C  F01C         	call	_LCDPutInst
  1813  003680  0012               	return		;funcret
  1814  003682                     __end_of_LCDInit:
  1815                           	opt callstack 0
  1816                           
  1817 ;; *************** function _Port_BBSPIInit *****************
  1818 ;; Defined at:
  1819 ;;		line 123 in file "lcd.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;  port_dir        1    wreg     unsigned char 
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;  port_dir        1    3[BANK0 ] unsigned char 
  1824 ;; Return value:  Size  Location     Type
  1825 ;;                  1    wreg      void 
  1826 ;; Registers used:
  1827 ;;		wreg, status,2, status,0, cstack
  1828 ;; Tracked objects:
  1829 ;;		On entry : 0/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1834 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1836 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1837 ;;Total ram usage:        1 bytes
  1838 ;; Hardware stack levels used:    1
  1839 ;; Hardware stack levels required when called:    7
  1840 ;; This function calls:
  1841 ;;		_SendByteBBSPI
  1842 ;; This function is called by:
  1843 ;;		_LCDInit
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           	psect	text9
  1848  003B2C                     __ptext9:
  1849                           	opt callstack 0
  1850  003B2C                     _Port_BBSPIInit:
  1851                           	opt callstack 21
  1852                           
  1853                           ;incstack = 0
  1854                           ;Port_BBSPIInit@port_dir stored from wreg
  1855  003B2C  0100               	movlb	0	; () banked
  1856  003B2E  6F63               	movwf	Port_BBSPIInit@port_dir& (0+255),b
  1857  003B30                     
  1858                           ;lcd.c: 123: void Port_BBSPIInit (unsigned char port_dir);lcd.c: 124: {;lcd.c: 128:     
      +                          LATAbits.LATA2 = 0;
  1859  003B30  9489               	bcf	137,2,c	;volatile
  1860  003B32                     
  1861                           ;lcd.c: 129:     SendByteBBSPI(0x40);
  1862  003B32  0E40               	movlw	64
  1863  003B34  ECDA  F01A         	call	_SendByteBBSPI
  1864                           
  1865                           ;lcd.c: 130:     SendByteBBSPI(port_dir);
  1866  003B38  0100               	movlb	0	; () banked
  1867  003B3A  5163               	movf	Port_BBSPIInit@port_dir& (0+255),w,b
  1868  003B3C  ECDA  F01A         	call	_SendByteBBSPI
  1869                           
  1870                           ;lcd.c: 131:     SendByteBBSPI(0x00);
  1871  003B40  0E00               	movlw	0
  1872  003B42  ECDA  F01A         	call	_SendByteBBSPI
  1873  003B46                     
  1874                           ;lcd.c: 132:     LATAbits.LATA2 = 1;
  1875  003B46  8489               	bsf	137,2,c	;volatile
  1876  003B48  0012               	return		;funcret
  1877  003B4A                     __end_of_Port_BBSPIInit:
  1878                           	opt callstack 0
  1879                           
  1880 ;; *************** function _InitBBSPI *****************
  1881 ;; Defined at:
  1882 ;;		line 70 in file "lcd.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;		None
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;		None
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  1    wreg      void 
  1889 ;; Registers used:
  1890 ;;		None
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1900 ;;Total ram usage:        0 bytes
  1901 ;; Hardware stack levels used:    1
  1902 ;; Hardware stack levels required when called:    6
  1903 ;; This function calls:
  1904 ;;		Nothing
  1905 ;; This function is called by:
  1906 ;;		_LCDInit
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           	psect	text10
  1911  003B98                     __ptext10:
  1912                           	opt callstack 0
  1913  003B98                     _InitBBSPI:
  1914                           	opt callstack 22
  1915  003B98                     
  1916                           ;lcd.c: 72:     TRISAbits.TRISA2 = 0;
  1917  003B98  9492               	bcf	146,2,c	;volatile
  1918                           
  1919                           ;lcd.c: 73:     TRISCbits.TRISC4 = 1;
  1920  003B9A  8894               	bsf	148,4,c	;volatile
  1921                           
  1922                           ;lcd.c: 74:     TRISCbits.TRISC5 = 0;
  1923  003B9C  9A94               	bcf	148,5,c	;volatile
  1924                           
  1925                           ;lcd.c: 75:     TRISCbits.TRISC3 = 0;
  1926  003B9E  9694               	bcf	148,3,c	;volatile
  1927                           
  1928                           ;lcd.c: 77:     LATAbits.LATA2 = 1;
  1929  003BA0  8489               	bsf	137,2,c	;volatile
  1930                           
  1931                           ;lcd.c: 78:     LATCbits.LATC4 = 1;
  1932  003BA2  888B               	bsf	139,4,c	;volatile
  1933                           
  1934                           ;lcd.c: 79:     LATCbits.LATC5 = 0;
  1935  003BA4  9A8B               	bcf	139,5,c	;volatile
  1936                           
  1937                           ;lcd.c: 80:     LATCbits.LATC3 = 0;
  1938  003BA6  968B               	bcf	139,3,c	;volatile
  1939  003BA8  0012               	return		;funcret
  1940  003BAA                     __end_of_InitBBSPI:
  1941                           	opt callstack 0
  1942                           
  1943 ;; *************** function _register_timer *****************
  1944 ;; Defined at:
  1945 ;;		line 38 in file "clock.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;  period          4   38[BANK0 ] unsigned long 
  1948 ;;  delay           4   42[BANK0 ] unsigned long 
  1949 ;;  callback        3   46[BANK0 ] PTR FTN(PTR void ,)void 
  1950 ;;		 -> readTempAndHumid(1), handleButton(1), printTempAndHumid(1), printTime_ms(1), 
  1951 ;;  data            2   49[BANK0 ] PTR void 
  1952 ;;		 -> NULL(0), 
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;		None
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  1    wreg      unsigned char 
  1957 ;; Registers used:
  1958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1964 ;;      Params:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1967 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1968 ;;Total ram usage:       13 bytes
  1969 ;; Hardware stack levels used:    1
  1970 ;; Hardware stack levels required when called:    8
  1971 ;; This function calls:
  1972 ;;		_addTask
  1973 ;; This function is called by:
  1974 ;;		_main
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           	psect	text11
  1979  0039B6                     __ptext11:
  1980                           	opt callstack 0
  1981  0039B6                     _register_timer:
  1982                           	opt callstack 22
  1983  0039B6                     
  1984                           ;clock.c: 39:     return addTask(period, delay, callback, data);
  1985  0039B6  C086  F066         	movff	register_timer@period,addTask@period
  1986  0039BA  C087  F067         	movff	register_timer@period+1,addTask@period+1
  1987  0039BE  C088  F068         	movff	register_timer@period+2,addTask@period+2
  1988  0039C2  C089  F069         	movff	register_timer@period+3,addTask@period+3
  1989  0039C6  C08A  F06A         	movff	register_timer@delay,addTask@delay
  1990  0039CA  C08B  F06B         	movff	register_timer@delay+1,addTask@delay+1
  1991  0039CE  C08C  F06C         	movff	register_timer@delay+2,addTask@delay+2
  1992  0039D2  C08D  F06D         	movff	register_timer@delay+3,addTask@delay+3
  1993  0039D6  C08E  F06E         	movff	register_timer@callback,addTask@ptr
  1994  0039DA  C08F  F06F         	movff	register_timer@callback+1,addTask@ptr+1
  1995  0039DE  C090  F070         	movff	register_timer@callback+2,addTask@ptr+2
  1996  0039E2  C091  F071         	movff	register_timer@data,addTask@data
  1997  0039E6  C092  F072         	movff	register_timer@data+1,addTask@data+1
  1998  0039EA  ECD8  F00E         	call	_addTask	;wreg free
  1999  0039EE  0012               	return		;funcret
  2000  0039F0                     __end_of_register_timer:
  2001                           	opt callstack 0
  2002                           
  2003 ;; *************** function _addTask *****************
  2004 ;; Defined at:
  2005 ;;		line 24 in file "task.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;  period          4    6[BANK0 ] unsigned long 
  2008 ;;  delay           4   10[BANK0 ] unsigned long 
  2009 ;;  ptr             3   14[BANK0 ] PTR FTN(PTR void ,)void 
  2010 ;;		 -> readTempAndHumid(1), handleButton(1), printTempAndHumid(1), printTime_ms(1), 
  2011 ;;  data            2   17[BANK0 ] PTR void 
  2012 ;;		 -> NULL(0), 
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;  cur             2   35[BANK0 ] int 
  2015 ;;  prev            2   31[BANK0 ] int 
  2016 ;;  sum             2   33[BANK0 ] int 
  2017 ;;  idx             1   37[BANK0 ] unsigned char 
  2018 ;; Return value:  Size  Location     Type
  2019 ;;                  1    wreg      unsigned char 
  2020 ;; Registers used:
  2021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2022 ;; Tracked objects:
  2023 ;;		On entry : 0/0
  2024 ;;		On exit  : 0/0
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2027 ;;      Params:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2028 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2029 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2030 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2031 ;;Total ram usage:       32 bytes
  2032 ;; Hardware stack levels used:    1
  2033 ;; Hardware stack levels required when called:    7
  2034 ;; This function calls:
  2035 ;;		___wmul
  2036 ;;		_isFullList
  2037 ;; This function is called by:
  2038 ;;		_register_timer
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042                           	psect	text12
  2043  001DB0                     __ptext12:
  2044                           	opt callstack 0
  2045  001DB0                     _addTask:
  2046                           	opt callstack 22
  2047  001DB0                     
  2048                           ;task.c: 25:     if(isFullList())
  2049  001DB0  ECB3  F01D         	call	_isFullList	;wreg free
  2050  001DB4  0900               	iorlw	0
  2051  001DB6  B4D8               	btfsc	status,2,c
  2052  001DB8  EFE0  F00E         	goto	u3391
  2053  001DBC  EFE2  F00E         	goto	u3390
  2054  001DC0                     u3391:
  2055  001DC0  EFE5  F00E         	goto	l3646
  2056  001DC4                     u3390:
  2057  001DC4                     l3642:
  2058                           
  2059                           ;task.c: 26:         return 109;
  2060  001DC4  0E6D               	movlw	109
  2061  001DC6  EFA7  F010         	goto	l236
  2062  001DCA                     l3646:
  2063                           
  2064                           ;task.c: 27:     char idx;;task.c: 28:     for(idx = 0; idx < 20; idx++) {
  2065  001DCA  0E00               	movlw	0
  2066  001DCC  0100               	movlb	0	; () banked
  2067  001DCE  6F85               	movwf	addTask@idx& (0+255),b
  2068  001DD0                     l3652:
  2069                           
  2070                           ; BSR set to: 0
  2071                           ;task.c: 29:         if(task_list[idx].func_ptr == ((void*)0))
  2072  001DD0  5185               	movf	addTask@idx& (0+255),w,b
  2073  001DD2  0D0F               	mullw	15
  2074  001DD4  0E6C               	movlw	low (_task_list+8)
  2075  001DD6  24F3               	addwf	243,w,c
  2076  001DD8  6ED9               	movwf	fsr2l,c
  2077  001DDA  0E01               	movlw	high (_task_list+8)
  2078  001DDC  20F4               	addwfc	prodh,w,c
  2079  001DDE  6EDA               	movwf	fsr2h,c
  2080  001DE0  50DE               	movf	postinc2,w,c
  2081  001DE2  10DE               	iorwf	postinc2,w,c
  2082  001DE4  10DE               	iorwf	postinc2,w,c
  2083  001DE6  A4D8               	btfss	status,2,c
  2084  001DE8  EFF8  F00E         	goto	u3401
  2085  001DEC  EFFA  F00E         	goto	u3400
  2086  001DF0                     u3401:
  2087  001DF0  EFFC  F00E         	goto	l3656
  2088  001DF4                     u3400:
  2089  001DF4  EF05  F00F         	goto	l3660
  2090  001DF8                     l3656:
  2091                           
  2092                           ; BSR set to: 0
  2093                           ;task.c: 31:     }
  2094  001DF8  2B85               	incf	addTask@idx& (0+255),f,b
  2095  001DFA                     
  2096                           ; BSR set to: 0
  2097  001DFA  0E13               	movlw	19
  2098  001DFC  6585               	cpfsgt	addTask@idx& (0+255),b
  2099  001DFE  EF03  F00F         	goto	u3411
  2100  001E02  EF05  F00F         	goto	u3410
  2101  001E06                     u3411:
  2102  001E06  EFE8  F00E         	goto	l3652
  2103  001E0A                     u3410:
  2104  001E0A                     l3660:
  2105                           
  2106                           ; BSR set to: 0
  2107                           ;task.c: 32:     if(idx == 20)
  2108  001E0A  0E14               	movlw	20
  2109  001E0C  1985               	xorwf	addTask@idx& (0+255),w,b
  2110  001E0E  A4D8               	btfss	status,2,c
  2111  001E10  EF0C  F00F         	goto	u3421
  2112  001E14  EF0E  F00F         	goto	u3420
  2113  001E18                     u3421:
  2114  001E18  EF10  F00F         	goto	l3666
  2115  001E1C                     u3420:
  2116  001E1C  EFE2  F00E         	goto	l3642
  2117  001E20                     l3666:
  2118                           
  2119                           ; BSR set to: 0
  2120                           ;task.c: 34:     task_list[idx].delay_t = delay;
  2121  001E20  5185               	movf	addTask@idx& (0+255),w,b
  2122  001E22  0D0F               	mullw	15
  2123  001E24  0E64               	movlw	low _task_list
  2124  001E26  24F3               	addwf	243,w,c
  2125  001E28  6ED9               	movwf	fsr2l,c
  2126  001E2A  0E01               	movlw	high _task_list
  2127  001E2C  20F4               	addwfc	prodh,w,c
  2128  001E2E  6EDA               	movwf	fsr2h,c
  2129  001E30  C06A  FFDE         	movff	addTask@delay,postinc2
  2130  001E34  C06B  FFDE         	movff	addTask@delay+1,postinc2
  2131  001E38  C06C  FFDE         	movff	addTask@delay+2,postinc2
  2132  001E3C  C06D  FFDE         	movff	addTask@delay+3,postinc2
  2133                           
  2134                           ;task.c: 35:     task_list[idx].period_t = period;
  2135  001E40  5185               	movf	addTask@idx& (0+255),w,b
  2136  001E42  0D0F               	mullw	15
  2137  001E44  0E68               	movlw	low (_task_list+4)
  2138  001E46  24F3               	addwf	243,w,c
  2139  001E48  6ED9               	movwf	fsr2l,c
  2140  001E4A  0E01               	movlw	high (_task_list+4)
  2141  001E4C  20F4               	addwfc	prodh,w,c
  2142  001E4E  6EDA               	movwf	fsr2h,c
  2143  001E50  C066  FFDE         	movff	addTask@period,postinc2
  2144  001E54  C067  FFDE         	movff	addTask@period+1,postinc2
  2145  001E58  C068  FFDE         	movff	addTask@period+2,postinc2
  2146  001E5C  C069  FFDE         	movff	addTask@period+3,postinc2
  2147                           
  2148                           ;task.c: 36:     task_list[idx].func_ptr = ptr;
  2149  001E60  5185               	movf	addTask@idx& (0+255),w,b
  2150  001E62  0D0F               	mullw	15
  2151  001E64  0E6C               	movlw	low (_task_list+8)
  2152  001E66  24F3               	addwf	243,w,c
  2153  001E68  6ED9               	movwf	fsr2l,c
  2154  001E6A  0E01               	movlw	high (_task_list+8)
  2155  001E6C  20F4               	addwfc	prodh,w,c
  2156  001E6E  6EDA               	movwf	fsr2h,c
  2157  001E70  C06E  FFDE         	movff	addTask@ptr,postinc2
  2158  001E74  C06F  FFDE         	movff	addTask@ptr+1,postinc2
  2159  001E78  C070  FFDE         	movff	addTask@ptr+2,postinc2
  2160                           
  2161                           ;task.c: 37:     task_list[idx].data_p = data;
  2162  001E7C  5185               	movf	addTask@idx& (0+255),w,b
  2163  001E7E  0D0F               	mullw	15
  2164  001E80  0E71               	movlw	low (_task_list+13)
  2165  001E82  24F3               	addwf	243,w,c
  2166  001E84  6ED9               	movwf	fsr2l,c
  2167  001E86  0E01               	movlw	high (_task_list+13)
  2168  001E88  20F4               	addwfc	prodh,w,c
  2169  001E8A  6EDA               	movwf	fsr2h,c
  2170  001E8C  C071  FFDE         	movff	addTask@data,postinc2
  2171  001E90  C072  FFDD         	movff	addTask@data+1,postdec2
  2172  001E94                     
  2173                           ; BSR set to: 0
  2174                           ;task.c: 38:     num_task++;
  2175  001E94  2BC4               	incf	_num_task& (0+255),f,b
  2176  001E96                     
  2177                           ; BSR set to: 0
  2178                           ;task.c: 39:     int sum = task_list[head].delay_t;
  2179  001E96  51C3               	movf	_head& (0+255),w,b
  2180  001E98  0D0F               	mullw	15
  2181  001E9A  0E64               	movlw	low _task_list
  2182  001E9C  24F3               	addwf	243,w,c
  2183  001E9E  6ED9               	movwf	fsr2l,c
  2184  001EA0  0E01               	movlw	high _task_list
  2185  001EA2  20F4               	addwfc	prodh,w,c
  2186  001EA4  6EDA               	movwf	fsr2h,c
  2187  001EA6  CFDE F081          	movff	postinc2,addTask@sum
  2188  001EAA  CFDD F082          	movff	postdec2,addTask@sum+1
  2189  001EAE                     
  2190                           ; BSR set to: 0
  2191                           ;task.c: 40:     if(head == 105 || (head != 105 && sum > delay)) {
  2192  001EAE  0E69               	movlw	105
  2193  001EB0  19C3               	xorwf	_head& (0+255),w,b
  2194  001EB2  B4D8               	btfsc	status,2,c
  2195  001EB4  EF5E  F00F         	goto	u3431
  2196  001EB8  EF60  F00F         	goto	u3430
  2197  001EBC                     u3431:
  2198  001EBC  EF81  F00F         	goto	l3678
  2199  001EC0                     u3430:
  2200  001EC0                     
  2201                           ; BSR set to: 0
  2202  001EC0  0E69               	movlw	105
  2203  001EC2  19C3               	xorwf	_head& (0+255),w,b
  2204  001EC4  B4D8               	btfsc	status,2,c
  2205  001EC6  EF67  F00F         	goto	u3441
  2206  001ECA  EF69  F00F         	goto	u3440
  2207  001ECE                     u3441:
  2208  001ECE  EF94  F00F         	goto	l3682
  2209  001ED2                     u3440:
  2210  001ED2                     
  2211                           ; BSR set to: 0
  2212  001ED2  C081  F073         	movff	addTask@sum,??_addTask
  2213  001ED6  C082  F074         	movff	addTask@sum+1,??_addTask+1
  2214  001EDA  0E00               	movlw	0
  2215  001EDC  BF74               	btfsc	(??_addTask+1)& (0+255),7,b
  2216  001EDE  0EFF               	movlw	255
  2217  001EE0  6F75               	movwf	(??_addTask+2)& (0+255),b
  2218  001EE2  6F76               	movwf	(??_addTask+3)& (0+255),b
  2219  001EE4  5173               	movf	??_addTask& (0+255),w,b
  2220  001EE6  5D6A               	subwf	addTask@delay& (0+255),w,b
  2221  001EE8  5174               	movf	(??_addTask+1)& (0+255),w,b
  2222  001EEA  596B               	subwfb	(addTask@delay+1)& (0+255),w,b
  2223  001EEC  5175               	movf	(??_addTask+2)& (0+255),w,b
  2224  001EEE  596C               	subwfb	(addTask@delay+2)& (0+255),w,b
  2225  001EF0  5176               	movf	(??_addTask+3)& (0+255),w,b
  2226  001EF2  596D               	subwfb	(addTask@delay+3)& (0+255),w,b
  2227  001EF4  B0D8               	btfsc	status,0,c
  2228  001EF6  EF7F  F00F         	goto	u3451
  2229  001EFA  EF81  F00F         	goto	u3450
  2230  001EFE                     u3451:
  2231  001EFE  EF94  F00F         	goto	l3682
  2232  001F02                     u3450:
  2233  001F02                     l3678:
  2234                           
  2235                           ; BSR set to: 0
  2236                           ;task.c: 41:         task_list[idx].next = head;
  2237  001F02  51C3               	movf	_head& (0+255),w,b
  2238  001F04  6F73               	movwf	??_addTask& (0+255),b
  2239  001F06  6B74               	clrf	(??_addTask+1)& (0+255),b
  2240  001F08  5185               	movf	addTask@idx& (0+255),w,b
  2241  001F0A  0D0F               	mullw	15
  2242  001F0C  0E6F               	movlw	low (_task_list+11)
  2243  001F0E  24F3               	addwf	243,w,c
  2244  001F10  6ED9               	movwf	fsr2l,c
  2245  001F12  0E01               	movlw	high (_task_list+11)
  2246  001F14  20F4               	addwfc	prodh,w,c
  2247  001F16  6EDA               	movwf	fsr2h,c
  2248  001F18  C073  FFDE         	movff	??_addTask,postinc2
  2249  001F1C  C074  FFDD         	movff	??_addTask+1,postdec2
  2250  001F20                     
  2251                           ; BSR set to: 0
  2252                           ;task.c: 42:         head = idx;
  2253  001F20  C085  F0C3         	movff	addTask@idx,_head
  2254                           
  2255                           ;task.c: 43:     }
  2256  001F24  EF63  F010         	goto	l3700
  2257  001F28                     l3682:
  2258                           
  2259                           ; BSR set to: 0
  2260                           ;task.c: 46:         int cur = task_list[head].next;
  2261  001F28  51C3               	movf	_head& (0+255),w,b
  2262  001F2A  0D0F               	mullw	15
  2263  001F2C  0E6F               	movlw	low (_task_list+11)
  2264  001F2E  24F3               	addwf	243,w,c
  2265  001F30  6ED9               	movwf	fsr2l,c
  2266  001F32  0E01               	movlw	high (_task_list+11)
  2267  001F34  20F4               	addwfc	prodh,w,c
  2268  001F36  6EDA               	movwf	fsr2h,c
  2269  001F38  CFDE F083          	movff	postinc2,addTask@cur
  2270  001F3C  CFDD F084          	movff	postdec2,addTask@cur+1
  2271  001F40                     
  2272                           ; BSR set to: 0
  2273                           ;task.c: 47:         int prev = head;
  2274  001F40  C0C3  F07F         	movff	_head,addTask@prev
  2275  001F44  6B80               	clrf	(addTask@prev+1)& (0+255),b
  2276                           
  2277                           ;task.c: 48:         while(cur != 105 && sum + task_list[cur].delay_t <= delay) {
  2278  001F46  EFD3  F00F         	goto	l3690
  2279  001F4A                     l3686:
  2280                           
  2281                           ; BSR set to: 0
  2282                           ;task.c: 50:             sum+= task_list[cur].delay_t;
  2283  001F4A  C083  F060         	movff	addTask@cur,___wmul@multiplier
  2284  001F4E  C084  F061         	movff	addTask@cur+1,___wmul@multiplier+1
  2285  001F52  0E00               	movlw	0
  2286  001F54  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2287  001F56  0E0F               	movlw	15
  2288  001F58  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2289  001F5A  EC3E  F01D         	call	___wmul	;wreg free
  2290  001F5E  0E64               	movlw	low _task_list
  2291  001F60  0100               	movlb	0	; () banked
  2292  001F62  2560               	addwf	?___wmul& (0+255),w,b
  2293  001F64  6ED9               	movwf	fsr2l,c
  2294  001F66  0E01               	movlw	high _task_list
  2295  001F68  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2296  001F6A  6EDA               	movwf	fsr2h,c
  2297  001F6C  50DE               	movf	postinc2,w,c
  2298  001F6E  2781               	addwf	addTask@sum& (0+255),f,b
  2299  001F70  50DD               	movf	postdec2,w,c
  2300  001F72  2382               	addwfc	(addTask@sum+1)& (0+255),f,b
  2301  001F74                     
  2302                           ; BSR set to: 0
  2303                           ;task.c: 51:             prev = cur;
  2304  001F74  C083  F07F         	movff	addTask@cur,addTask@prev
  2305  001F78  C084  F080         	movff	addTask@cur+1,addTask@prev+1
  2306                           
  2307                           ;task.c: 52:             cur = task_list[cur].next;
  2308  001F7C  C083  F060         	movff	addTask@cur,___wmul@multiplier
  2309  001F80  C084  F061         	movff	addTask@cur+1,___wmul@multiplier+1
  2310  001F84  0E00               	movlw	0
  2311  001F86  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2312  001F88  0E0F               	movlw	15
  2313  001F8A  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2314  001F8C  EC3E  F01D         	call	___wmul	;wreg free
  2315  001F90  0E6F               	movlw	low (_task_list+11)
  2316  001F92  0100               	movlb	0	; () banked
  2317  001F94  2560               	addwf	?___wmul& (0+255),w,b
  2318  001F96  6ED9               	movwf	fsr2l,c
  2319  001F98  0E01               	movlw	high (_task_list+11)
  2320  001F9A  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2321  001F9C  6EDA               	movwf	fsr2h,c
  2322  001F9E  CFDE F083          	movff	postinc2,addTask@cur
  2323  001FA2  CFDD F084          	movff	postdec2,addTask@cur+1
  2324  001FA6                     l3690:
  2325                           
  2326                           ; BSR set to: 0
  2327                           ;task.c: 48:         while(cur != 105 && sum + task_list[cur].delay_t <= delay) {
  2328  001FA6  0E69               	movlw	105
  2329  001FA8  1983               	xorwf	addTask@cur& (0+255),w,b
  2330  001FAA  1184               	iorwf	(addTask@cur+1)& (0+255),w,b
  2331  001FAC  B4D8               	btfsc	status,2,c
  2332  001FAE  EFDB  F00F         	goto	u3461
  2333  001FB2  EFDD  F00F         	goto	u3460
  2334  001FB6                     u3461:
  2335  001FB6  EF1A  F010         	goto	l3694
  2336  001FBA                     u3460:
  2337  001FBA                     
  2338                           ; BSR set to: 0
  2339  001FBA  C083  F060         	movff	addTask@cur,___wmul@multiplier
  2340  001FBE  C084  F061         	movff	addTask@cur+1,___wmul@multiplier+1
  2341  001FC2  0E00               	movlw	0
  2342  001FC4  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2343  001FC6  0E0F               	movlw	15
  2344  001FC8  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2345  001FCA  EC3E  F01D         	call	___wmul	;wreg free
  2346  001FCE  0E64               	movlw	low _task_list
  2347  001FD0  0100               	movlb	0	; () banked
  2348  001FD2  2560               	addwf	?___wmul& (0+255),w,b
  2349  001FD4  6ED9               	movwf	fsr2l,c
  2350  001FD6  0E01               	movlw	high _task_list
  2351  001FD8  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2352  001FDA  6EDA               	movwf	fsr2h,c
  2353  001FDC  CFDE F073          	movff	postinc2,??_addTask
  2354  001FE0  CFDE F074          	movff	postinc2,??_addTask+1
  2355  001FE4  CFDE F075          	movff	postinc2,??_addTask+2
  2356  001FE8  CFDE F076          	movff	postinc2,??_addTask+3
  2357  001FEC  C081  F077         	movff	addTask@sum,??_addTask+4
  2358  001FF0  C082  F078         	movff	addTask@sum+1,??_addTask+5
  2359  001FF4  0E00               	movlw	0
  2360  001FF6  BF78               	btfsc	(??_addTask+5)& (0+255),7,b
  2361  001FF8  0EFF               	movlw	255
  2362  001FFA  6F79               	movwf	(??_addTask+6)& (0+255),b
  2363  001FFC  6F7A               	movwf	(??_addTask+7)& (0+255),b
  2364  001FFE  5173               	movf	??_addTask& (0+255),w,b
  2365  002000  2577               	addwf	(??_addTask+4)& (0+255),w,b
  2366  002002  6F7B               	movwf	(??_addTask+8)& (0+255),b
  2367  002004  5174               	movf	(??_addTask+1)& (0+255),w,b
  2368  002006  2178               	addwfc	(??_addTask+5)& (0+255),w,b
  2369  002008  6F7C               	movwf	(??_addTask+9)& (0+255),b
  2370  00200A  5175               	movf	(??_addTask+2)& (0+255),w,b
  2371  00200C  2179               	addwfc	(??_addTask+6)& (0+255),w,b
  2372  00200E  6F7D               	movwf	(??_addTask+10)& (0+255),b
  2373  002010  5176               	movf	(??_addTask+3)& (0+255),w,b
  2374  002012  217A               	addwfc	(??_addTask+7)& (0+255),w,b
  2375  002014  6F7E               	movwf	(??_addTask+11)& (0+255),b
  2376  002016  517B               	movf	(??_addTask+8)& (0+255),w,b
  2377  002018  5D6A               	subwf	addTask@delay& (0+255),w,b
  2378  00201A  517C               	movf	(??_addTask+9)& (0+255),w,b
  2379  00201C  596B               	subwfb	(addTask@delay+1)& (0+255),w,b
  2380  00201E  517D               	movf	(??_addTask+10)& (0+255),w,b
  2381  002020  596C               	subwfb	(addTask@delay+2)& (0+255),w,b
  2382  002022  517E               	movf	(??_addTask+11)& (0+255),w,b
  2383  002024  596D               	subwfb	(addTask@delay+3)& (0+255),w,b
  2384  002026  B0D8               	btfsc	status,0,c
  2385  002028  EF18  F010         	goto	u3471
  2386  00202C  EF1A  F010         	goto	u3470
  2387  002030                     u3471:
  2388  002030  EFA5  F00F         	goto	l3686
  2389  002034                     u3470:
  2390  002034                     l3694:
  2391                           
  2392                           ; BSR set to: 0
  2393                           ;task.c: 54:         task_list[prev].next = idx;
  2394  002034  5185               	movf	addTask@idx& (0+255),w,b
  2395  002036  6F73               	movwf	??_addTask& (0+255),b
  2396  002038  6B74               	clrf	(??_addTask+1)& (0+255),b
  2397  00203A  C07F  F060         	movff	addTask@prev,___wmul@multiplier
  2398  00203E  C080  F061         	movff	addTask@prev+1,___wmul@multiplier+1
  2399  002042  0E00               	movlw	0
  2400  002044  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2401  002046  0E0F               	movlw	15
  2402  002048  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2403  00204A  EC3E  F01D         	call	___wmul	;wreg free
  2404  00204E  0E6F               	movlw	low (_task_list+11)
  2405  002050  0100               	movlb	0	; () banked
  2406  002052  2560               	addwf	?___wmul& (0+255),w,b
  2407  002054  6ED9               	movwf	fsr2l,c
  2408  002056  0E01               	movlw	high (_task_list+11)
  2409  002058  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2410  00205A  6EDA               	movwf	fsr2h,c
  2411  00205C  C073  FFDE         	movff	??_addTask,postinc2
  2412  002060  C074  FFDD         	movff	??_addTask+1,postdec2
  2413  002064                     
  2414                           ; BSR set to: 0
  2415                           ;task.c: 55:         task_list[idx].next = cur;
  2416  002064  5185               	movf	addTask@idx& (0+255),w,b
  2417  002066  0D0F               	mullw	15
  2418  002068  0E6F               	movlw	low (_task_list+11)
  2419  00206A  24F3               	addwf	243,w,c
  2420  00206C  6ED9               	movwf	fsr2l,c
  2421  00206E  0E01               	movlw	high (_task_list+11)
  2422  002070  20F4               	addwfc	prodh,w,c
  2423  002072  6EDA               	movwf	fsr2h,c
  2424  002074  C083  FFDE         	movff	addTask@cur,postinc2
  2425  002078  C084  FFDD         	movff	addTask@cur+1,postdec2
  2426  00207C                     
  2427                           ; BSR set to: 0
  2428                           ;task.c: 56:         task_list[idx].delay_t = delay - sum;
  2429  00207C  C081  F073         	movff	addTask@sum,??_addTask
  2430  002080  C082  F074         	movff	addTask@sum+1,??_addTask+1
  2431  002084  0E00               	movlw	0
  2432  002086  BF74               	btfsc	(??_addTask+1)& (0+255),7,b
  2433  002088  0EFF               	movlw	255
  2434  00208A  6F75               	movwf	(??_addTask+2)& (0+255),b
  2435  00208C  6F76               	movwf	(??_addTask+3)& (0+255),b
  2436  00208E  5173               	movf	??_addTask& (0+255),w,b
  2437  002090  5D6A               	subwf	addTask@delay& (0+255),w,b
  2438  002092  6F77               	movwf	(??_addTask+4)& (0+255),b
  2439  002094  5174               	movf	(??_addTask+1)& (0+255),w,b
  2440  002096  596B               	subwfb	(addTask@delay+1)& (0+255),w,b
  2441  002098  6F78               	movwf	(??_addTask+5)& (0+255),b
  2442  00209A  5175               	movf	(??_addTask+2)& (0+255),w,b
  2443  00209C  596C               	subwfb	(addTask@delay+2)& (0+255),w,b
  2444  00209E  6F79               	movwf	(??_addTask+6)& (0+255),b
  2445  0020A0  5176               	movf	(??_addTask+3)& (0+255),w,b
  2446  0020A2  596D               	subwfb	(addTask@delay+3)& (0+255),w,b
  2447  0020A4  6F7A               	movwf	(??_addTask+7)& (0+255),b
  2448  0020A6  5185               	movf	addTask@idx& (0+255),w,b
  2449  0020A8  0D0F               	mullw	15
  2450  0020AA  0E64               	movlw	low _task_list
  2451  0020AC  24F3               	addwf	243,w,c
  2452  0020AE  6ED9               	movwf	fsr2l,c
  2453  0020B0  0E01               	movlw	high _task_list
  2454  0020B2  20F4               	addwfc	prodh,w,c
  2455  0020B4  6EDA               	movwf	fsr2h,c
  2456  0020B6  C077  FFDE         	movff	??_addTask+4,postinc2
  2457  0020BA  C078  FFDE         	movff	??_addTask+5,postinc2
  2458  0020BE  C079  FFDE         	movff	??_addTask+6,postinc2
  2459  0020C2  C07A  FFDE         	movff	??_addTask+7,postinc2
  2460  0020C6                     l3700:
  2461                           
  2462                           ; BSR set to: 0
  2463                           ;task.c: 58:     if(task_list[idx].next != 105)
  2464  0020C6  5185               	movf	addTask@idx& (0+255),w,b
  2465  0020C8  0D0F               	mullw	15
  2466  0020CA  0E6F               	movlw	low (_task_list+11)
  2467  0020CC  24F3               	addwf	243,w,c
  2468  0020CE  6ED9               	movwf	fsr2l,c
  2469  0020D0  0E01               	movlw	high (_task_list+11)
  2470  0020D2  20F4               	addwfc	prodh,w,c
  2471  0020D4  6EDA               	movwf	fsr2h,c
  2472  0020D6  0E69               	movlw	105
  2473  0020D8  18DE               	xorwf	postinc2,w,c
  2474  0020DA  10DE               	iorwf	postinc2,w,c
  2475  0020DC  B4D8               	btfsc	status,2,c
  2476  0020DE  EF73  F010         	goto	u3481
  2477  0020E2  EF75  F010         	goto	u3480
  2478  0020E6                     u3481:
  2479  0020E6  EFA6  F010         	goto	l3704
  2480  0020EA                     u3480:
  2481  0020EA                     
  2482                           ; BSR set to: 0
  2483                           ;task.c: 59:         task_list[task_list[idx].next].delay_t-= task_list[idx].delay_t;
  2484  0020EA  5185               	movf	addTask@idx& (0+255),w,b
  2485  0020EC  0D0F               	mullw	15
  2486  0020EE  0E64               	movlw	low _task_list
  2487  0020F0  24F3               	addwf	243,w,c
  2488  0020F2  6ED9               	movwf	fsr2l,c
  2489  0020F4  0E01               	movlw	high _task_list
  2490  0020F6  20F4               	addwfc	prodh,w,c
  2491  0020F8  6EDA               	movwf	fsr2h,c
  2492  0020FA  CFDE F073          	movff	postinc2,??_addTask
  2493  0020FE  CFDE F074          	movff	postinc2,??_addTask+1
  2494  002102  CFDE F075          	movff	postinc2,??_addTask+2
  2495  002106  CFDE F076          	movff	postinc2,??_addTask+3
  2496  00210A  5185               	movf	addTask@idx& (0+255),w,b
  2497  00210C  0D0F               	mullw	15
  2498  00210E  0E6F               	movlw	low (_task_list+11)
  2499  002110  24F3               	addwf	243,w,c
  2500  002112  6ED9               	movwf	fsr2l,c
  2501  002114  0E01               	movlw	high (_task_list+11)
  2502  002116  20F4               	addwfc	prodh,w,c
  2503  002118  6EDA               	movwf	fsr2h,c
  2504  00211A  CFDE F060          	movff	postinc2,___wmul@multiplier
  2505  00211E  CFDD F061          	movff	postdec2,___wmul@multiplier+1
  2506  002122  0E00               	movlw	0
  2507  002124  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2508  002126  0E0F               	movlw	15
  2509  002128  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2510  00212A  EC3E  F01D         	call	___wmul	;wreg free
  2511  00212E  0E64               	movlw	low _task_list
  2512  002130  0100               	movlb	0	; () banked
  2513  002132  2560               	addwf	?___wmul& (0+255),w,b
  2514  002134  6ED9               	movwf	fsr2l,c
  2515  002136  0E01               	movlw	high _task_list
  2516  002138  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2517  00213A  6EDA               	movwf	fsr2h,c
  2518  00213C  5173               	movf	??_addTask& (0+255),w,b
  2519  00213E  5EDE               	subwf	postinc2,f,c
  2520  002140  5174               	movf	(??_addTask+1)& (0+255),w,b
  2521  002142  5ADE               	subwfb	postinc2,f,c
  2522  002144  5175               	movf	(??_addTask+2)& (0+255),w,b
  2523  002146  5ADE               	subwfb	postinc2,f,c
  2524  002148  5176               	movf	(??_addTask+3)& (0+255),w,b
  2525  00214A  5ADE               	subwfb	postinc2,f,c
  2526  00214C                     l3704:
  2527                           
  2528                           ; BSR set to: 0
  2529                           ;task.c: 60:     return idx;
  2530  00214C  5185               	movf	addTask@idx& (0+255),w,b
  2531  00214E                     l236:
  2532  00214E  0012               	return		;funcret
  2533  002150                     __end_of_addTask:
  2534                           	opt callstack 0
  2535                           
  2536 ;; *************** function _isFullList *****************
  2537 ;; Defined at:
  2538 ;;		line 7 in file "task.c"
  2539 ;; Parameters:    Size  Location     Type
  2540 ;;		None
  2541 ;; Auto vars:     Size  Location     Type
  2542 ;;		None
  2543 ;; Return value:  Size  Location     Type
  2544 ;;                  1    wreg      unsigned char 
  2545 ;; Registers used:
  2546 ;;		wreg, status,2, status,0
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2556 ;;Total ram usage:        0 bytes
  2557 ;; Hardware stack levels used:    1
  2558 ;; Hardware stack levels required when called:    6
  2559 ;; This function calls:
  2560 ;;		Nothing
  2561 ;; This function is called by:
  2562 ;;		_addTask
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           	psect	text13
  2567  003B66                     __ptext13:
  2568                           	opt callstack 0
  2569  003B66                     _isFullList:
  2570                           	opt callstack 22
  2571  003B66                     
  2572                           ;task.c: 8:     return num_task == 20 ? 1 : 0;
  2573  003B66  0E14               	movlw	20
  2574  003B68  0100               	movlb	0	; () banked
  2575  003B6A  19C4               	xorwf	_num_task& (0+255),w,b
  2576  003B6C  B4D8               	btfsc	status,2,c
  2577  003B6E  EFBB  F01D         	goto	u3271
  2578  003B72  EFBE  F01D         	goto	u3270
  2579  003B76                     u3271:
  2580  003B76  0E01               	movlw	1
  2581  003B78  EFBF  F01D         	goto	u3280
  2582  003B7C                     u3270:
  2583  003B7C  0E00               	movlw	0
  2584  003B7E                     u3280:
  2585  003B7E                     
  2586                           ; BSR set to: 0
  2587  003B7E  0012               	return		;funcret
  2588  003B80                     __end_of_isFullList:
  2589                           	opt callstack 0
  2590                           
  2591 ;; *************** function _dispatch *****************
  2592 ;; Defined at:
  2593 ;;		line 69 in file "clock.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;		None
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;		None
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  1    wreg      void 
  2600 ;; Registers used:
  2601 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2611 ;;Total ram usage:        0 bytes
  2612 ;; Hardware stack levels used:    1
  2613 ;; Hardware stack levels required when called:   13
  2614 ;; This function calls:
  2615 ;;		_selectReadyTask
  2616 ;; This function is called by:
  2617 ;;		_main
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621                           	psect	text14
  2622  003BD0                     __ptext14:
  2623                           	opt callstack 0
  2624  003BD0                     _dispatch:
  2625                           	opt callstack 17
  2626  003BD0                     
  2627                           ;clock.c: 70:     selectReadyTask();
  2628  003BD0  EC41  F01B         	call	_selectReadyTask	;wreg free
  2629  003BD4  0012               	return		;funcret
  2630  003BD6                     __end_of_dispatch:
  2631                           	opt callstack 0
  2632                           
  2633 ;; *************** function _selectReadyTask *****************
  2634 ;; Defined at:
  2635 ;;		line 123 in file "task.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;		None
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;  node            5   64[BANK0 ] struct .
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  1    wreg      void 
  2642 ;; Registers used:
  2643 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2650 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2652 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2653 ;;Total ram usage:        5 bytes
  2654 ;; Hardware stack levels used:    1
  2655 ;; Hardware stack levels required when called:   12
  2656 ;; This function calls:
  2657 ;;		_dequeue
  2658 ;;		_handleButton
  2659 ;;		_isEmptyQueue
  2660 ;;		_printTempAndHumid
  2661 ;;		_printTime_ms
  2662 ;;		_readTempAndHumid
  2663 ;; This function is called by:
  2664 ;;		_dispatch
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           	psect	text15
  2669  003682                     __ptext15:
  2670                           	opt callstack 0
  2671  003682                     _selectReadyTask:
  2672                           	opt callstack 17
  2673  003682                     
  2674                           ;task.c: 124:     while(!isEmptyQueue()) {
  2675  003682  EF68  F01B         	goto	l3744
  2676  003686                     l3738:
  2677                           
  2678                           ;task.c: 125:         queue_node node = dequeue();
  2679  003686  EC6F  F019         	call	_dequeue	;wreg free
  2680  00368A  EE20  F0A0         	lfsr	2,selectReadyTask@node
  2681  00368E  0E04               	movlw	4
  2682  003690                     u3541:
  2683  003690  CFEB FFDB          	movff	plusw0,plusw2
  2684  003694  06E8               	decf	wreg,f,c
  2685  003696  E2FC               	bc	u3541
  2686  003698                     
  2687                           ;task.c: 126:         if(node.func_ptr != ((void*)0))
  2688  003698  0100               	movlb	0	; () banked
  2689  00369A  51A0               	movf	selectReadyTask@node& (0+255),w,b
  2690  00369C  11A1               	iorwf	(selectReadyTask@node+1)& (0+255),w,b
  2691  00369E  11A2               	iorwf	(selectReadyTask@node+2)& (0+255),w,b
  2692  0036A0  B4D8               	btfsc	status,2,c
  2693  0036A2  EF55  F01B         	goto	u3551
  2694  0036A6  EF57  F01B         	goto	u3550
  2695  0036AA                     u3551:
  2696  0036AA  EF68  F01B         	goto	l3744
  2697  0036AE                     u3550:
  2698  0036AE                     
  2699                           ; BSR set to: 0
  2700                           ;task.c: 127:             (node.func_ptr)(node.data_p);
  2701  0036AE  C0A3  F06E         	movff	selectReadyTask@node+3,handleButton@data_ptr
  2702  0036B2  C0A4  F06F         	movff	selectReadyTask@node+4,handleButton@data_ptr+1
  2703  0036B6  D802               	call	u3568
  2704  0036B8  EF68  F01B         	goto	u3569
  2705  0036BC                     u3568:
  2706  0036BC  0005               	push	
  2707  0036BE  6EFA               	movwf	pclath,c
  2708  0036C0  51A0               	movf	selectReadyTask@node& (0+255),w,b
  2709  0036C2  6EFD               	movwf	tosl,c
  2710  0036C4  51A1               	movf	(selectReadyTask@node+1)& (0+255),w,b
  2711  0036C6  6EFE               	movwf	tosh,c
  2712  0036C8  51A2               	movf	(selectReadyTask@node+2)& (0+255),w,b
  2713  0036CA  6EFF               	movwf	tosu,c
  2714  0036CC  50FA               	movf	pclath,w,c
  2715  0036CE  0012               	return		;indir
  2716  0036D0                     u3569:
  2717  0036D0                     l3744:
  2718                           
  2719                           ;task.c: 124:     while(!isEmptyQueue()) {
  2720  0036D0  ECF8  F01C         	call	_isEmptyQueue	;wreg free
  2721  0036D4  0900               	iorlw	0
  2722  0036D6  B4D8               	btfsc	status,2,c
  2723  0036D8  EF70  F01B         	goto	u3571
  2724  0036DC  EF72  F01B         	goto	u3570
  2725  0036E0                     u3571:
  2726  0036E0  EF43  F01B         	goto	l3738
  2727  0036E4                     u3570:
  2728  0036E4  0012               	return		;funcret
  2729  0036E6                     __end_of_selectReadyTask:
  2730                           	opt callstack 0
  2731                           
  2732 ;; *************** function _readTempAndHumid *****************
  2733 ;; Defined at:
  2734 ;;		line 67 in file "dht11.c"
  2735 ;; Parameters:    Size  Location     Type
  2736 ;;		None
  2737 ;; Auto vars:     Size  Location     Type
  2738 ;;		None
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  1    wreg      void 
  2741 ;; Registers used:
  2742 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2750 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2751 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2752 ;;Total ram usage:        1 bytes
  2753 ;; Hardware stack levels used:    1
  2754 ;; Hardware stack levels required when called:    8
  2755 ;; This function calls:
  2756 ;;		___fladd
  2757 ;;		___flmul
  2758 ;;		___flsub
  2759 ;;		___xxtofl
  2760 ;;		_readDHT
  2761 ;; This function is called by:
  2762 ;;		_main
  2763 ;;		_selectReadyTask
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           	psect	text16
  2768  002722                     __ptext16:
  2769                           	opt callstack 0
  2770  002722                     _readTempAndHumid:
  2771                           	opt callstack 20
  2772  002722                     
  2773                           ;dht11.c: 68:     if(!readDHT()) {
  2774  002722  EC3F  F016         	call	_readDHT	;wreg free
  2775  002726  0900               	iorlw	0
  2776  002728  A4D8               	btfss	status,2,c
  2777  00272A  EF99  F013         	goto	u3341
  2778  00272E  EF9B  F013         	goto	u3340
  2779  002732                     u3341:
  2780  002732  EFAE  F013         	goto	l3544
  2781  002736                     u3340:
  2782  002736                     
  2783                           ;dht11.c: 69:         temperature_value = 209;
  2784  002736  0E00               	movlw	0
  2785  002738  0100               	movlb	0	; () banked
  2786  00273A  6FCB               	movwf	_temperature_value& (0+255),b
  2787  00273C  0E00               	movlw	0
  2788  00273E  6FCC               	movwf	(_temperature_value+1)& (0+255),b
  2789  002740  0E51               	movlw	81
  2790  002742  6FCD               	movwf	(_temperature_value+2)& (0+255),b
  2791  002744  0E43               	movlw	67
  2792  002746  6FCE               	movwf	(_temperature_value+3)& (0+255),b
  2793                           
  2794                           ;dht11.c: 70:         humidity_value = 209;
  2795  002748  0E00               	movlw	0
  2796  00274A  6FC7               	movwf	_humidity_value& (0+255),b
  2797  00274C  0E00               	movlw	0
  2798  00274E  6FC8               	movwf	(_humidity_value+1)& (0+255),b
  2799  002750  0E51               	movlw	81
  2800  002752  6FC9               	movwf	(_humidity_value+2)& (0+255),b
  2801  002754  0E43               	movlw	67
  2802  002756  6FCA               	movwf	(_humidity_value+3)& (0+255),b
  2803  002758  EF2B  F014         	goto	l587
  2804  00275C                     l3544:
  2805                           
  2806                           ;dht11.c: 74:     temperature_value = temperature_dht11[0];
  2807  00275C  0100               	movlb	0	; () banked
  2808  00275E  51BF               	movf	_temperature_dht11& (0+255),w,b
  2809  002760  6F60               	movwf	___xxtofl@val& (0+255),b
  2810  002762  6B61               	clrf	(___xxtofl@val+1)& (0+255),b
  2811  002764  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  2812  002766  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  2813  002768  0E00               	movlw	0
  2814  00276A  ECE7  F011         	call	___xxtofl
  2815  00276E  C060  F0CB         	movff	?___xxtofl,_temperature_value
  2816  002772  C061  F0CC         	movff	?___xxtofl+1,_temperature_value+1
  2817  002776  C062  F0CD         	movff	?___xxtofl+2,_temperature_value+2
  2818  00277A  C063  F0CE         	movff	?___xxtofl+3,_temperature_value+3
  2819  00277E                     
  2820                           ;dht11.c: 75:     if (temperature_dht11[0] & 0x80) {
  2821  00277E  0100               	movlb	0	; () banked
  2822  002780  AFBF               	btfss	_temperature_dht11& (0+255),7,b
  2823  002782  EFC5  F013         	goto	u3351
  2824  002786  EFC7  F013         	goto	u3350
  2825  00278A                     u3351:
  2826  00278A  EFE1  F013         	goto	l3550
  2827  00278E                     u3350:
  2828  00278E                     
  2829                           ; BSR set to: 0
  2830                           ;dht11.c: 76:         temperature_value = -1 - temperature_value;
  2831  00278E  0E00               	movlw	0
  2832  002790  6F97               	movwf	___flsub@b& (0+255),b
  2833  002792  0E00               	movlw	0
  2834  002794  6F98               	movwf	(___flsub@b+1)& (0+255),b
  2835  002796  0E80               	movlw	128
  2836  002798  6F99               	movwf	(___flsub@b+2)& (0+255),b
  2837  00279A  0EBF               	movlw	191
  2838  00279C  6F9A               	movwf	(___flsub@b+3)& (0+255),b
  2839  00279E  C0CB  F09B         	movff	_temperature_value,___flsub@a
  2840  0027A2  C0CC  F09C         	movff	_temperature_value+1,___flsub@a+1
  2841  0027A6  C0CD  F09D         	movff	_temperature_value+2,___flsub@a+2
  2842  0027AA  C0CE  F09E         	movff	_temperature_value+3,___flsub@a+3
  2843  0027AE  ECF6  F01B         	call	___flsub	;wreg free
  2844  0027B2  C097  F0CB         	movff	?___flsub,_temperature_value
  2845  0027B6  C098  F0CC         	movff	?___flsub+1,_temperature_value+1
  2846  0027BA  C099  F0CD         	movff	?___flsub+2,_temperature_value+2
  2847  0027BE  C09A  F0CE         	movff	?___flsub+3,_temperature_value+3
  2848  0027C2                     l3550:
  2849                           
  2850                           ;dht11.c: 78:     temperature_value += (temperature_dht11[1] & 0x0f) * 0.1;
  2851  0027C2  C0CB  F087         	movff	_temperature_value,___fladd@b
  2852  0027C6  C0CC  F088         	movff	_temperature_value+1,___fladd@b+1
  2853  0027CA  C0CD  F089         	movff	_temperature_value+2,___fladd@b+2
  2854  0027CE  C0CE  F08A         	movff	_temperature_value+3,___fladd@b+3
  2855  0027D2  0ECD               	movlw	205
  2856  0027D4  0100               	movlb	0	; () banked
  2857  0027D6  6F72               	movwf	___flmul@a& (0+255),b
  2858  0027D8  0ECC               	movlw	204
  2859  0027DA  6F73               	movwf	(___flmul@a+1)& (0+255),b
  2860  0027DC  0ECC               	movlw	204
  2861  0027DE  6F74               	movwf	(___flmul@a+2)& (0+255),b
  2862  0027E0  0E3D               	movlw	61
  2863  0027E2  6F75               	movwf	(___flmul@a+3)& (0+255),b
  2864  0027E4  C0C0  F09F         	movff	_temperature_dht11+1,??_readTempAndHumid
  2865  0027E8  0E0F               	movlw	15
  2866  0027EA  179F               	andwf	??_readTempAndHumid& (0+255),f,b
  2867  0027EC  519F               	movf	??_readTempAndHumid& (0+255),w,b
  2868  0027EE  6F60               	movwf	___xxtofl@val& (0+255),b
  2869  0027F0  6B61               	clrf	(___xxtofl@val+1)& (0+255),b
  2870  0027F2  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  2871  0027F4  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  2872  0027F6  0E01               	movlw	1
  2873  0027F8  ECE7  F011         	call	___xxtofl
  2874  0027FC  C060  F06E         	movff	?___xxtofl,___flmul@b
  2875  002800  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
  2876  002804  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
  2877  002808  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
  2878  00280C  ECC2  F00C         	call	___flmul	;wreg free
  2879  002810  C06E  F08B         	movff	?___flmul,___fladd@a
  2880  002814  C06F  F08C         	movff	?___flmul+1,___fladd@a+1
  2881  002818  C070  F08D         	movff	?___flmul+2,___fladd@a+2
  2882  00281C  C071  F08E         	movff	?___flmul+3,___fladd@a+3
  2883  002820  EC08  F008         	call	___fladd	;wreg free
  2884  002824  C087  F0CB         	movff	?___fladd,_temperature_value
  2885  002828  C088  F0CC         	movff	?___fladd+1,_temperature_value+1
  2886  00282C  C089  F0CD         	movff	?___fladd+2,_temperature_value+2
  2887  002830  C08A  F0CE         	movff	?___fladd+3,_temperature_value+3
  2888  002834                     
  2889                           ;dht11.c: 80:     humidity_value = humidity_dht11[0];
  2890  002834  0100               	movlb	0	; () banked
  2891  002836  51BD               	movf	_humidity_dht11& (0+255),w,b
  2892  002838  6F60               	movwf	___xxtofl@val& (0+255),b
  2893  00283A  6B61               	clrf	(___xxtofl@val+1)& (0+255),b
  2894  00283C  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  2895  00283E  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  2896  002840  0E00               	movlw	0
  2897  002842  ECE7  F011         	call	___xxtofl
  2898  002846  C060  F0C7         	movff	?___xxtofl,_humidity_value
  2899  00284A  C061  F0C8         	movff	?___xxtofl+1,_humidity_value+1
  2900  00284E  C062  F0C9         	movff	?___xxtofl+2,_humidity_value+2
  2901  002852  C063  F0CA         	movff	?___xxtofl+3,_humidity_value+3
  2902  002856                     l587:
  2903  002856  0012               	return		;funcret
  2904  002858                     __end_of_readTempAndHumid:
  2905                           	opt callstack 0
  2906                           
  2907 ;; *************** function _readDHT *****************
  2908 ;; Defined at:
  2909 ;;		line 28 in file "dht11.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;		None
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;  timeOut         2    6[BANK0 ] unsigned int 
  2914 ;;  checkSum        1    5[BANK0 ] unsigned char 
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  1    wreg      unsigned char 
  2917 ;; Registers used:
  2918 ;;		wreg, status,2, status,0, cstack
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2925 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2926 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2927 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2928 ;;Total ram usage:        4 bytes
  2929 ;; Hardware stack levels used:    1
  2930 ;; Hardware stack levels required when called:    7
  2931 ;; This function calls:
  2932 ;;		_getByte
  2933 ;; This function is called by:
  2934 ;;		_readTempAndHumid
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           	psect	text17
  2939  002C7E                     __ptext17:
  2940                           	opt callstack 0
  2941  002C7E                     _readDHT:
  2942                           	opt callstack 20
  2943  002C7E                     
  2944                           ;dht11.c: 29:     char checkSum;;dht11.c: 30:     unsigned int timeOut = 0xFFFF;
  2945  002C7E  0100               	movlb	0	; () banked
  2946  002C80  6966               	setf	readDHT@timeOut& (0+255),b
  2947  002C82  6967               	setf	(readDHT@timeOut+1)& (0+255),b
  2948                           
  2949                           ;dht11.c: 31:     TRISCbits.RC3 = 0;
  2950  002C84  9694               	bcf	148,3,c	;volatile
  2951                           
  2952                           ;dht11.c: 32:     LATCbits.LC3 = 1;
  2953  002C86  868B               	bsf	139,3,c	;volatile
  2954  002C88                     
  2955                           ; BSR set to: 0
  2956                           ;dht11.c: 33:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2957  002C88  0E34               	movlw	52
  2958  002C8A  0100               	movlb	0	; () banked
  2959  002C8C  6F64               	movwf	??_readDHT& (0+255),b
  2960  002C8E  0EF1               	movlw	241
  2961  002C90                     u3737:
  2962  002C90  2EE8               	decfsz	wreg,f,c
  2963  002C92  D7FE               	bra	u3737
  2964  002C94  2F64               	decfsz	??_readDHT& (0+255),f,b
  2965  002C96  D7FC               	bra	u3737
  2966  002C98  D000               	nop2	
  2967  002C9A                     
  2968                           ;dht11.c: 35:     LATCbits.LC3 = 0;
  2969  002C9A  968B               	bcf	139,3,c	;volatile
  2970                           
  2971                           ;dht11.c: 36:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  2972  002C9C  0E28               	movlw	40
  2973  002C9E                     u3747:
  2974  002C9E  2EE8               	decfsz	wreg,f,c
  2975  002CA0  D7FE               	bra	u3747
  2976  002CA2                     
  2977                           ;dht11.c: 37:     TRISCbits.RC3 = 1;
  2978  002CA2  8694               	bsf	148,3,c	;volatile
  2979                           
  2980                           ;dht11.c: 40:     while(!PORTCbits.RC3) {
  2981  002CA4  EF64  F016         	goto	l574
  2982  002CA8                     l3050:
  2983                           
  2984                           ;dht11.c: 41:         timeOut--;
  2985  002CA8  0100               	movlb	0	; () banked
  2986  002CAA  0766               	decf	readDHT@timeOut& (0+255),f,b
  2987  002CAC  A0D8               	btfss	status,0,c
  2988  002CAE  0767               	decf	(readDHT@timeOut+1)& (0+255),f,b
  2989  002CB0                     
  2990                           ; BSR set to: 0
  2991                           ;dht11.c: 42:         if(!timeOut)
  2992  002CB0  5166               	movf	readDHT@timeOut& (0+255),w,b
  2993  002CB2  1167               	iorwf	(readDHT@timeOut+1)& (0+255),w,b
  2994  002CB4  A4D8               	btfss	status,2,c
  2995  002CB6  EF5F  F016         	goto	u2601
  2996  002CBA  EF61  F016         	goto	u2600
  2997  002CBE                     u2601:
  2998  002CBE  EF64  F016         	goto	l574
  2999  002CC2                     u2600:
  3000  002CC2                     l3054:
  3001                           
  3002                           ; BSR set to: 0
  3003                           ;dht11.c: 43:             return 0;
  3004  002CC2  0E00               	movlw	0
  3005  002CC4  EFA8  F016         	goto	l577
  3006  002CC8                     l574:
  3007                           
  3008                           ;dht11.c: 40:     while(!PORTCbits.RC3) {
  3009  002CC8  A682               	btfss	130,3,c	;volatile
  3010  002CCA  EF69  F016         	goto	u2611
  3011  002CCE  EF6B  F016         	goto	u2610
  3012  002CD2                     u2611:
  3013  002CD2  EF54  F016         	goto	l3050
  3014  002CD6                     u2610:
  3015  002CD6                     
  3016                           ;dht11.c: 46:     timeOut = 0xFFFF;
  3017  002CD6  0100               	movlb	0	; () banked
  3018  002CD8  6966               	setf	readDHT@timeOut& (0+255),b
  3019  002CDA  6967               	setf	(readDHT@timeOut+1)& (0+255),b
  3020                           
  3021                           ;dht11.c: 49:     while(PORTCbits.RC3) {
  3022  002CDC  EF7E  F016         	goto	l579
  3023  002CE0                     l3058:
  3024                           
  3025                           ; BSR set to: 0
  3026                           ;dht11.c: 50:         timeOut--;
  3027  002CE0  0766               	decf	readDHT@timeOut& (0+255),f,b
  3028  002CE2  A0D8               	btfss	status,0,c
  3029  002CE4  0767               	decf	(readDHT@timeOut+1)& (0+255),f,b
  3030  002CE6                     
  3031                           ; BSR set to: 0
  3032                           ;dht11.c: 51:         if(!timeOut)
  3033  002CE6  5166               	movf	readDHT@timeOut& (0+255),w,b
  3034  002CE8  1167               	iorwf	(readDHT@timeOut+1)& (0+255),w,b
  3035  002CEA  A4D8               	btfss	status,2,c
  3036  002CEC  EF7A  F016         	goto	u2621
  3037  002CF0  EF7C  F016         	goto	u2620
  3038  002CF4                     u2621:
  3039  002CF4  EF7E  F016         	goto	l579
  3040  002CF8                     u2620:
  3041  002CF8  EF61  F016         	goto	l3054
  3042  002CFC                     l579:
  3043                           
  3044                           ; BSR set to: 0
  3045                           ;dht11.c: 49:     while(PORTCbits.RC3) {
  3046  002CFC  B682               	btfsc	130,3,c	;volatile
  3047  002CFE  EF83  F016         	goto	u2631
  3048  002D02  EF85  F016         	goto	u2630
  3049  002D06                     u2631:
  3050  002D06  EF70  F016         	goto	l3058
  3051  002D0A                     u2630:
  3052  002D0A                     
  3053                           ; BSR set to: 0
  3054                           ;dht11.c: 55:     humidity_dht11[0] = getByte();
  3055  002D0A  ECC7  F018         	call	_getByte	;wreg free
  3056  002D0E  0100               	movlb	0	; () banked
  3057  002D10  6FBD               	movwf	_humidity_dht11& (0+255),b
  3058                           
  3059                           ;dht11.c: 56:     humidity_dht11[1] = getByte();
  3060  002D12  ECC7  F018         	call	_getByte	;wreg free
  3061  002D16  0100               	movlb	0	; () banked
  3062  002D18  6FBE               	movwf	(_humidity_dht11+1)& (0+255),b
  3063                           
  3064                           ;dht11.c: 57:     temperature_dht11[0] = getByte();
  3065  002D1A  ECC7  F018         	call	_getByte	;wreg free
  3066  002D1E  0100               	movlb	0	; () banked
  3067  002D20  6FBF               	movwf	_temperature_dht11& (0+255),b
  3068                           
  3069                           ;dht11.c: 58:     temperature_dht11[1] = getByte();
  3070  002D22  ECC7  F018         	call	_getByte	;wreg free
  3071  002D26  0100               	movlb	0	; () banked
  3072  002D28  6FC0               	movwf	(_temperature_dht11+1)& (0+255),b
  3073                           
  3074                           ;dht11.c: 59:     checkSum = getByte();
  3075  002D2A  ECC7  F018         	call	_getByte	;wreg free
  3076  002D2E  0100               	movlb	0	; () banked
  3077  002D30  6F65               	movwf	readDHT@checkSum& (0+255),b
  3078  002D32                     
  3079                           ; BSR set to: 0
  3080                           ;dht11.c: 61:     if( (char)( humidity_dht11[0] + humidity_dht11[1] + temperature_dht11[
      +                          0] + temperature_dht11[1] ) != checkSum )
  3081  002D32  51BE               	movf	(_humidity_dht11+1)& (0+255),w,b
  3082  002D34  25C0               	addwf	(_temperature_dht11+1)& (0+255),w,b
  3083  002D36  25BD               	addwf	_humidity_dht11& (0+255),w,b
  3084  002D38  25BF               	addwf	_temperature_dht11& (0+255),w,b
  3085  002D3A  1965               	xorwf	readDHT@checkSum& (0+255),w,b
  3086  002D3C  B4D8               	btfsc	status,2,c
  3087  002D3E  EFA3  F016         	goto	u2641
  3088  002D42  EFA5  F016         	goto	u2640
  3089  002D46                     u2641:
  3090  002D46  EFA7  F016         	goto	l3074
  3091  002D4A                     u2640:
  3092  002D4A  EF61  F016         	goto	l3054
  3093  002D4E                     l3074:
  3094                           
  3095                           ; BSR set to: 0
  3096                           ;dht11.c: 64:     return 1;
  3097  002D4E  0E01               	movlw	1
  3098  002D50                     l577:
  3099                           
  3100                           ; BSR set to: 0
  3101  002D50  0012               	return		;funcret
  3102  002D52                     __end_of_readDHT:
  3103                           	opt callstack 0
  3104                           
  3105 ;; *************** function _getByte *****************
  3106 ;; Defined at:
  3107 ;;		line 3 in file "dht11.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;		None
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;  timeOut         2    1[BANK0 ] unsigned int 
  3112 ;;  i               1    3[BANK0 ] unsigned char 
  3113 ;;  byteReceived    1    0[BANK0 ] unsigned char 
  3114 ;; Return value:  Size  Location     Type
  3115 ;;                  1    wreg      unsigned char 
  3116 ;; Registers used:
  3117 ;;		wreg, status,2, status,0
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3124 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3126 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3127 ;;Total ram usage:        4 bytes
  3128 ;; Hardware stack levels used:    1
  3129 ;; Hardware stack levels required when called:    6
  3130 ;; This function calls:
  3131 ;;		Nothing
  3132 ;; This function is called by:
  3133 ;;		_readDHT
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           	psect	text18
  3138  00318E                     __ptext18:
  3139                           	opt callstack 0
  3140  00318E                     _getByte:
  3141                           	opt callstack 20
  3142  00318E                     
  3143                           ;dht11.c: 4:     char i;;dht11.c: 5:     char byteReceived = 0;
  3144  00318E  0E00               	movlw	0
  3145  003190  0100               	movlb	0	; () banked
  3146  003192  6F60               	movwf	getByte@byteReceived& (0+255),b
  3147                           
  3148                           ;dht11.c: 6:     unsigned int timeOut;;dht11.c: 8:     for(i = 0b1000000; i != 0x00; i =
      +                           i >> 1) {
  3149  003194  0E40               	movlw	64
  3150  003196  6F63               	movwf	getByte@i& (0+255),b
  3151  003198                     l560:
  3152                           
  3153                           ; BSR set to: 0
  3154                           ;dht11.c: 9:         timeOut = 0xFFFF;
  3155  003198  6961               	setf	getByte@timeOut& (0+255),b
  3156  00319A  6962               	setf	(getByte@timeOut+1)& (0+255),b
  3157                           
  3158                           ;dht11.c: 10:         while(!PORTCbits.RC3) {
  3159  00319C  EFDF  F018         	goto	l562
  3160  0031A0                     l2692:
  3161                           
  3162                           ; BSR set to: 0
  3163                           ;dht11.c: 11:             timeOut--;
  3164  0031A0  0761               	decf	getByte@timeOut& (0+255),f,b
  3165  0031A2  A0D8               	btfss	status,0,c
  3166  0031A4  0762               	decf	(getByte@timeOut+1)& (0+255),f,b
  3167  0031A6                     
  3168                           ; BSR set to: 0
  3169                           ;dht11.c: 12:             if(!timeOut) return 0;
  3170  0031A6  5161               	movf	getByte@timeOut& (0+255),w,b
  3171  0031A8  1162               	iorwf	(getByte@timeOut+1)& (0+255),w,b
  3172  0031AA  A4D8               	btfss	status,2,c
  3173  0031AC  EFDA  F018         	goto	u1971
  3174  0031B0  EFDC  F018         	goto	u1970
  3175  0031B4                     u1971:
  3176  0031B4  EFDF  F018         	goto	l562
  3177  0031B8                     u1970:
  3178  0031B8                     l2696:
  3179                           
  3180                           ; BSR set to: 0
  3181  0031B8  0E00               	movlw	0
  3182  0031BA  EF1B  F019         	goto	l565
  3183  0031BE                     l562:
  3184                           
  3185                           ; BSR set to: 0
  3186                           ;dht11.c: 10:         while(!PORTCbits.RC3) {
  3187  0031BE  A682               	btfss	130,3,c	;volatile
  3188  0031C0  EFE4  F018         	goto	u1981
  3189  0031C4  EFE6  F018         	goto	u1980
  3190  0031C8                     u1981:
  3191  0031C8  EFD0  F018         	goto	l2692
  3192  0031CC                     u1980:
  3193  0031CC                     
  3194                           ; BSR set to: 0
  3195                           ;dht11.c: 14:         _delay((unsigned long)((40)*(8000000/4000000.0)));
  3196  0031CC  0E1A               	movlw	26
  3197  0031CE                     u3757:
  3198  0031CE  2EE8               	decfsz	wreg,f,c
  3199  0031D0  D7FE               	bra	u3757
  3200  0031D2  D000               	nop2	
  3201  0031D4                     
  3202                           ;dht11.c: 15:         if(PORTCbits.RC3) {
  3203  0031D4  A682               	btfss	130,3,c	;volatile
  3204  0031D6  EFEF  F018         	goto	u1991
  3205  0031DA  EFF1  F018         	goto	u1990
  3206  0031DE                     u1991:
  3207  0031DE  EF0E  F019         	goto	l2716
  3208  0031E2                     u1990:
  3209  0031E2                     
  3210                           ;dht11.c: 16:             byteReceived = byteReceived | i;
  3211  0031E2  0100               	movlb	0	; () banked
  3212  0031E4  5160               	movf	getByte@byteReceived& (0+255),w,b
  3213  0031E6  1163               	iorwf	getByte@i& (0+255),w,b
  3214  0031E8  6F60               	movwf	getByte@byteReceived& (0+255),b
  3215  0031EA                     
  3216                           ; BSR set to: 0
  3217                           ;dht11.c: 17:             timeOut = 0xFFFF;
  3218  0031EA  6961               	setf	getByte@timeOut& (0+255),b
  3219  0031EC  6962               	setf	(getByte@timeOut+1)& (0+255),b
  3220                           
  3221                           ;dht11.c: 18:             while(PORTCbits.RC3) {
  3222  0031EE  EF07  F019         	goto	l568
  3223  0031F2                     l2708:
  3224                           
  3225                           ; BSR set to: 0
  3226                           ;dht11.c: 19:                 timeOut--;
  3227  0031F2  0761               	decf	getByte@timeOut& (0+255),f,b
  3228  0031F4  A0D8               	btfss	status,0,c
  3229  0031F6  0762               	decf	(getByte@timeOut+1)& (0+255),f,b
  3230  0031F8                     
  3231                           ; BSR set to: 0
  3232                           ;dht11.c: 20:                 if(!timeOut) return 0;
  3233  0031F8  5161               	movf	getByte@timeOut& (0+255),w,b
  3234  0031FA  1162               	iorwf	(getByte@timeOut+1)& (0+255),w,b
  3235  0031FC  A4D8               	btfss	status,2,c
  3236  0031FE  EF03  F019         	goto	u2001
  3237  003202  EF05  F019         	goto	u2000
  3238  003206                     u2001:
  3239  003206  EF07  F019         	goto	l568
  3240  00320A                     u2000:
  3241  00320A  EFDC  F018         	goto	l2696
  3242  00320E                     l568:
  3243                           
  3244                           ; BSR set to: 0
  3245                           ;dht11.c: 18:             while(PORTCbits.RC3) {
  3246  00320E  B682               	btfsc	130,3,c	;volatile
  3247  003210  EF0C  F019         	goto	u2011
  3248  003214  EF0E  F019         	goto	u2010
  3249  003218                     u2011:
  3250  003218  EFF9  F018         	goto	l2708
  3251  00321C                     u2010:
  3252  00321C                     l2716:
  3253                           
  3254                           ;dht11.c: 23:     }
  3255  00321C  0100               	movlb	0	; () banked
  3256  00321E  90D8               	bcf	status,0,c
  3257  003220  3163               	rrcf	getByte@i& (0+255),w,b
  3258  003222  6F63               	movwf	getByte@i& (0+255),b
  3259  003224                     
  3260                           ; BSR set to: 0
  3261  003224  5163               	movf	getByte@i& (0+255),w,b
  3262  003226  A4D8               	btfss	status,2,c
  3263  003228  EF18  F019         	goto	u2021
  3264  00322C  EF1A  F019         	goto	u2020
  3265  003230                     u2021:
  3266  003230  EFCC  F018         	goto	l560
  3267  003234                     u2020:
  3268  003234                     
  3269                           ; BSR set to: 0
  3270                           ;dht11.c: 25:     return byteReceived;
  3271  003234  5160               	movf	getByte@byteReceived& (0+255),w,b
  3272  003236                     l565:
  3273                           
  3274                           ; BSR set to: 0
  3275  003236  0012               	return		;funcret
  3276  003238                     __end_of_getByte:
  3277                           	opt callstack 0
  3278                           
  3279 ;; *************** function ___xxtofl *****************
  3280 ;; Defined at:
  3281 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;  sign            1    wreg     unsigned char 
  3284 ;;  val             4    0[BANK0 ] long 
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;  sign            1    8[BANK0 ] unsigned char 
  3287 ;;  arg             4   10[BANK0 ] unsigned long 
  3288 ;;  exp             1    9[BANK0 ] unsigned char 
  3289 ;; Return value:  Size  Location     Type
  3290 ;;                  4    0[BANK0 ] unsigned char 
  3291 ;; Registers used:
  3292 ;;		wreg, status,2, status,0
  3293 ;; Tracked objects:
  3294 ;;		On entry : 0/0
  3295 ;;		On exit  : 0/0
  3296 ;;		Unchanged: 0/0
  3297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3298 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3299 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3300 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3301 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3302 ;;Total ram usage:       14 bytes
  3303 ;; Hardware stack levels used:    1
  3304 ;; Hardware stack levels required when called:    6
  3305 ;; This function calls:
  3306 ;;		Nothing
  3307 ;; This function is called by:
  3308 ;;		_readTempAndHumid
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           	psect	text19
  3313  0023CE                     __ptext19:
  3314                           	opt callstack 0
  3315  0023CE                     ___xxtofl:
  3316                           	opt callstack 21
  3317                           
  3318                           ; BSR set to: 0
  3319                           ;incstack = 0
  3320                           ;___xxtofl@sign stored from wreg
  3321  0023CE  0100               	movlb	0	; () banked
  3322  0023D0  6F68               	movwf	___xxtofl@sign& (0+255),b
  3323  0023D2  0100               	movlb	0	; () banked
  3324  0023D4  5168               	movf	___xxtofl@sign& (0+255),w,b
  3325  0023D6  B4D8               	btfsc	status,2,c
  3326  0023D8  EFF0  F011         	goto	u3061
  3327  0023DC  EFF2  F011         	goto	u3060
  3328  0023E0                     u3061:
  3329  0023E0  EF14  F012         	goto	l1246
  3330  0023E4                     u3060:
  3331  0023E4                     
  3332                           ; BSR set to: 0
  3333  0023E4  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  3334  0023E6  EFF9  F011         	goto	u3070
  3335  0023EA  EFF7  F011         	goto	u3071
  3336  0023EE                     u3071:
  3337  0023EE  EF14  F012         	goto	l1246
  3338  0023F2                     u3070:
  3339  0023F2                     
  3340                           ; BSR set to: 0
  3341  0023F2  C060  F064         	movff	___xxtofl@val,??___xxtofl
  3342  0023F6  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
  3343  0023FA  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
  3344  0023FE  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
  3345  002402  1F64               	comf	??___xxtofl& (0+255),f,b
  3346  002404  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
  3347  002406  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
  3348  002408  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
  3349  00240A  2B64               	incf	??___xxtofl& (0+255),f,b
  3350  00240C  0E00               	movlw	0
  3351  00240E  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
  3352  002410  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
  3353  002412  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
  3354  002414  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
  3355  002418  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
  3356  00241C  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
  3357  002420  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
  3358  002424  EF1C  F012         	goto	l3362
  3359  002428                     l1246:
  3360                           
  3361                           ; BSR set to: 0
  3362  002428  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
  3363  00242C  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3364  002430  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3365  002434  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3366  002438                     l3362:
  3367                           
  3368                           ; BSR set to: 0
  3369  002438  5160               	movf	___xxtofl@val& (0+255),w,b
  3370  00243A  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  3371  00243C  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  3372  00243E  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  3373  002440  A4D8               	btfss	status,2,c
  3374  002442  EF25  F012         	goto	u3081
  3375  002446  EF27  F012         	goto	u3080
  3376  00244A                     u3081:
  3377  00244A  EF31  F012         	goto	l3368
  3378  00244E                     u3080:
  3379  00244E                     
  3380                           ; BSR set to: 0
  3381  00244E  0E00               	movlw	0
  3382  002450  6F60               	movwf	?___xxtofl& (0+255),b
  3383  002452  0E00               	movlw	0
  3384  002454  6F61               	movwf	(?___xxtofl+1)& (0+255),b
  3385  002456  0E00               	movlw	0
  3386  002458  6F62               	movwf	(?___xxtofl+2)& (0+255),b
  3387  00245A  0E00               	movlw	0
  3388  00245C  6F63               	movwf	(?___xxtofl+3)& (0+255),b
  3389  00245E  EFC2  F012         	goto	l1249
  3390  002462                     l3368:
  3391                           
  3392                           ; BSR set to: 0
  3393  002462  0E96               	movlw	150
  3394  002464  6F69               	movwf	___xxtofl@exp& (0+255),b
  3395  002466  EF3B  F012         	goto	l3372
  3396  00246A                     l3370:
  3397                           
  3398                           ; BSR set to: 0
  3399  00246A  2B69               	incf	___xxtofl@exp& (0+255),f,b
  3400  00246C  90D8               	bcf	status,0,c
  3401  00246E  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  3402  002470  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  3403  002472  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  3404  002474  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  3405  002476                     l3372:
  3406                           
  3407                           ; BSR set to: 0
  3408  002476  0E00               	movlw	0
  3409  002478  156A               	andwf	___xxtofl@arg& (0+255),w,b
  3410  00247A  6F64               	movwf	??___xxtofl& (0+255),b
  3411  00247C  0E00               	movlw	0
  3412  00247E  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  3413  002480  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  3414  002482  0E00               	movlw	0
  3415  002484  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  3416  002486  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  3417  002488  0EFE               	movlw	254
  3418  00248A  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  3419  00248C  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  3420  00248E  5164               	movf	??___xxtofl& (0+255),w,b
  3421  002490  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  3422  002492  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  3423  002494  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  3424  002496  A4D8               	btfss	status,2,c
  3425  002498  EF50  F012         	goto	u3091
  3426  00249C  EF52  F012         	goto	u3090
  3427  0024A0                     u3091:
  3428  0024A0  EF35  F012         	goto	l3370
  3429  0024A4                     u3090:
  3430  0024A4  EF60  F012         	goto	l1253
  3431  0024A8                     l3374:
  3432                           
  3433                           ; BSR set to: 0
  3434  0024A8  2B69               	incf	___xxtofl@exp& (0+255),f,b
  3435  0024AA                     
  3436                           ; BSR set to: 0
  3437  0024AA  0E01               	movlw	1
  3438  0024AC  276A               	addwf	___xxtofl@arg& (0+255),f,b
  3439  0024AE  0E00               	movlw	0
  3440  0024B0  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  3441  0024B2  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  3442  0024B4  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  3443  0024B6                     
  3444                           ; BSR set to: 0
  3445  0024B6  90D8               	bcf	status,0,c
  3446  0024B8  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  3447  0024BA  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  3448  0024BC  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  3449  0024BE  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  3450  0024C0                     l1253:
  3451                           
  3452                           ; BSR set to: 0
  3453  0024C0  0E00               	movlw	0
  3454  0024C2  156A               	andwf	___xxtofl@arg& (0+255),w,b
  3455  0024C4  6F64               	movwf	??___xxtofl& (0+255),b
  3456  0024C6  0E00               	movlw	0
  3457  0024C8  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  3458  0024CA  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  3459  0024CC  0E00               	movlw	0
  3460  0024CE  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  3461  0024D0  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  3462  0024D2  0EFF               	movlw	255
  3463  0024D4  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  3464  0024D6  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  3465  0024D8  5164               	movf	??___xxtofl& (0+255),w,b
  3466  0024DA  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  3467  0024DC  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  3468  0024DE  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  3469  0024E0  A4D8               	btfss	status,2,c
  3470  0024E2  EF75  F012         	goto	u3101
  3471  0024E6  EF77  F012         	goto	u3100
  3472  0024EA                     u3101:
  3473  0024EA  EF54  F012         	goto	l3374
  3474  0024EE                     u3100:
  3475  0024EE  EF7F  F012         	goto	l3382
  3476  0024F2                     l3380:
  3477                           
  3478                           ; BSR set to: 0
  3479  0024F2  0769               	decf	___xxtofl@exp& (0+255),f,b
  3480  0024F4  90D8               	bcf	status,0,c
  3481  0024F6  376A               	rlcf	___xxtofl@arg& (0+255),f,b
  3482  0024F8  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  3483  0024FA  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  3484  0024FC  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  3485  0024FE                     l3382:
  3486                           
  3487                           ; BSR set to: 0
  3488  0024FE  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  3489  002500  EF84  F012         	goto	u3111
  3490  002504  EF86  F012         	goto	u3110
  3491  002508                     u3111:
  3492  002508  EF8E  F012         	goto	l1260
  3493  00250C                     u3110:
  3494  00250C                     
  3495                           ; BSR set to: 0
  3496  00250C  0E02               	movlw	2
  3497  00250E  6169               	cpfslt	___xxtofl@exp& (0+255),b
  3498  002510  EF8C  F012         	goto	u3121
  3499  002514  EF8E  F012         	goto	u3120
  3500  002518                     u3121:
  3501  002518  EF79  F012         	goto	l3380
  3502  00251C                     u3120:
  3503  00251C                     l1260:
  3504                           
  3505                           ; BSR set to: 0
  3506  00251C  B169               	btfsc	___xxtofl@exp& (0+255),0,b
  3507  00251E  EF93  F012         	goto	u3131
  3508  002522  EF95  F012         	goto	u3130
  3509  002526                     u3131:
  3510  002526  EF96  F012         	goto	l3388
  3511  00252A                     u3130:
  3512  00252A                     
  3513                           ; BSR set to: 0
  3514  00252A  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  3515  00252C                     l3388:
  3516                           
  3517                           ; BSR set to: 0
  3518  00252C  90D8               	bcf	status,0,c
  3519  00252E  3369               	rrcf	___xxtofl@exp& (0+255),f,b
  3520  002530                     
  3521                           ; BSR set to: 0
  3522  002530  C069  F064         	movff	___xxtofl@exp,??___xxtofl
  3523  002534  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  3524  002536  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  3525  002538  6B67               	clrf	(??___xxtofl+3)& (0+255),b
  3526  00253A  C064  F067         	movff	??___xxtofl,??___xxtofl+3
  3527  00253E  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  3528  002540  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  3529  002542  6B64               	clrf	??___xxtofl& (0+255),b
  3530  002544  5164               	movf	??___xxtofl& (0+255),w,b
  3531  002546  136A               	iorwf	___xxtofl@arg& (0+255),f,b
  3532  002548  5165               	movf	(??___xxtofl+1)& (0+255),w,b
  3533  00254A  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  3534  00254C  5166               	movf	(??___xxtofl+2)& (0+255),w,b
  3535  00254E  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  3536  002550  5167               	movf	(??___xxtofl+3)& (0+255),w,b
  3537  002552  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  3538  002554                     
  3539                           ; BSR set to: 0
  3540  002554  5168               	movf	___xxtofl@sign& (0+255),w,b
  3541  002556  B4D8               	btfsc	status,2,c
  3542  002558  EFB0  F012         	goto	u3141
  3543  00255C  EFB2  F012         	goto	u3140
  3544  002560                     u3141:
  3545  002560  EFBA  F012         	goto	l3398
  3546  002564                     u3140:
  3547  002564                     
  3548                           ; BSR set to: 0
  3549  002564  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  3550  002566  EFB9  F012         	goto	u3150
  3551  00256A  EFB7  F012         	goto	u3151
  3552  00256E                     u3151:
  3553  00256E  EFBA  F012         	goto	l3398
  3554  002572                     u3150:
  3555  002572                     
  3556                           ; BSR set to: 0
  3557  002572  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  3558  002574                     l3398:
  3559                           
  3560                           ; BSR set to: 0
  3561  002574  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
  3562  002578  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
  3563  00257C  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
  3564  002580  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
  3565  002584                     l1249:
  3566                           
  3567                           ; BSR set to: 0
  3568  002584  0012               	return		;funcret
  3569  002586                     __end_of___xxtofl:
  3570                           	opt callstack 0
  3571                           
  3572 ;; *************** function ___flsub *****************
  3573 ;; Defined at:
  3574 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;  b               4   55[BANK0 ] unsigned char 
  3577 ;;  a               4   59[BANK0 ] unsigned char 
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;		None
  3580 ;; Return value:  Size  Location     Type
  3581 ;;                  4   55[BANK0 ] unsigned char 
  3582 ;; Registers used:
  3583 ;;		wreg, status,2, status,0, cstack
  3584 ;; Tracked objects:
  3585 ;;		On entry : 0/0
  3586 ;;		On exit  : 0/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3589 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3592 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3593 ;;Total ram usage:        8 bytes
  3594 ;; Hardware stack levels used:    1
  3595 ;; Hardware stack levels required when called:    7
  3596 ;; This function calls:
  3597 ;;		___fladd
  3598 ;; This function is called by:
  3599 ;;		_readTempAndHumid
  3600 ;; This function uses a non-reentrant model
  3601 ;;
  3602                           
  3603                           	psect	text20
  3604  0037EC                     __ptext20:
  3605                           	opt callstack 0
  3606  0037EC                     ___flsub:
  3607                           	opt callstack 20
  3608  0037EC  0E00               	movlw	0
  3609  0037EE  0100               	movlb	0	; () banked
  3610  0037F0  1B9B               	xorwf	___flsub@a& (0+255),f,b
  3611  0037F2  0E00               	movlw	0
  3612  0037F4  1B9C               	xorwf	(___flsub@a+1)& (0+255),f,b
  3613  0037F6  0E00               	movlw	0
  3614  0037F8  1B9D               	xorwf	(___flsub@a+2)& (0+255),f,b
  3615  0037FA  0E80               	movlw	128
  3616  0037FC  1B9E               	xorwf	(___flsub@a+3)& (0+255),f,b
  3617  0037FE                     
  3618                           ; BSR set to: 0
  3619  0037FE  C097  F087         	movff	___flsub@b,___fladd@b
  3620  003802  C098  F088         	movff	___flsub@b+1,___fladd@b+1
  3621  003806  C099  F089         	movff	___flsub@b+2,___fladd@b+2
  3622  00380A  C09A  F08A         	movff	___flsub@b+3,___fladd@b+3
  3623  00380E  C09B  F08B         	movff	___flsub@a,___fladd@a
  3624  003812  C09C  F08C         	movff	___flsub@a+1,___fladd@a+1
  3625  003816  C09D  F08D         	movff	___flsub@a+2,___fladd@a+2
  3626  00381A  C09E  F08E         	movff	___flsub@a+3,___fladd@a+3
  3627  00381E  EC08  F008         	call	___fladd	;wreg free
  3628  003822  C087  F097         	movff	?___fladd,?___flsub
  3629  003826  C088  F098         	movff	?___fladd+1,?___flsub+1
  3630  00382A  C089  F099         	movff	?___fladd+2,?___flsub+2
  3631  00382E  C08A  F09A         	movff	?___fladd+3,?___flsub+3
  3632  003832  0012               	return		;funcret
  3633  003834                     __end_of___flsub:
  3634                           	opt callstack 0
  3635                           
  3636 ;; *************** function ___fladd *****************
  3637 ;; Defined at:
  3638 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;  b               4   39[BANK0 ] unsigned char 
  3641 ;;  a               4   43[BANK0 ] unsigned char 
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;  grs             1   54[BANK0 ] unsigned char 
  3644 ;;  bexp            1   53[BANK0 ] unsigned char 
  3645 ;;  aexp            1   52[BANK0 ] unsigned char 
  3646 ;;  signs           1   51[BANK0 ] unsigned char 
  3647 ;; Return value:  Size  Location     Type
  3648 ;;                  4   39[BANK0 ] unsigned char 
  3649 ;; Registers used:
  3650 ;;		wreg, status,2, status,0
  3651 ;; Tracked objects:
  3652 ;;		On entry : 0/0
  3653 ;;		On exit  : 0/0
  3654 ;;		Unchanged: 0/0
  3655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3656 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3657 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3658 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3659 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3660 ;;Total ram usage:       16 bytes
  3661 ;; Hardware stack levels used:    1
  3662 ;; Hardware stack levels required when called:    6
  3663 ;; This function calls:
  3664 ;;		Nothing
  3665 ;; This function is called by:
  3666 ;;		_readTempAndHumid
  3667 ;;		___flsub
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           
  3671                           	psect	text21
  3672  001010                     __ptext21:
  3673                           	opt callstack 0
  3674  001010                     ___fladd:
  3675                           	opt callstack 20
  3676  001010  0100               	movlb	0	; () banked
  3677  001012  518A               	movf	(___fladd@b+3)& (0+255),w,b
  3678  001014  0B80               	andlw	128
  3679  001016  6F93               	movwf	___fladd@signs& (0+255),b
  3680  001018  518A               	movf	(___fladd@b+3)& (0+255),w,b
  3681  00101A  258A               	addwf	(___fladd@b+3)& (0+255),w,b
  3682  00101C  6F95               	movwf	___fladd@bexp& (0+255),b
  3683  00101E                     
  3684                           ; BSR set to: 0
  3685  00101E  AF89               	btfss	(___fladd@b+2)& (0+255),7,b
  3686  001020  EF14  F008         	goto	u2031
  3687  001024  EF16  F008         	goto	u2030
  3688  001028                     u2031:
  3689  001028  EF17  F008         	goto	l2736
  3690  00102C                     u2030:
  3691  00102C                     
  3692                           ; BSR set to: 0
  3693  00102C  8195               	bsf	___fladd@bexp& (0+255),0,b
  3694  00102E                     l2736:
  3695                           
  3696                           ; BSR set to: 0
  3697  00102E  5195               	movf	___fladd@bexp& (0+255),w,b
  3698  001030  B4D8               	btfsc	status,2,c
  3699  001032  EF1D  F008         	goto	u2041
  3700  001036  EF1F  F008         	goto	u2040
  3701  00103A                     u2041:
  3702  00103A  EF34  F008         	goto	l2746
  3703  00103E                     u2040:
  3704  00103E                     
  3705                           ; BSR set to: 0
  3706  00103E  2995               	incf	___fladd@bexp& (0+255),w,b
  3707  001040  A4D8               	btfss	status,2,c
  3708  001042  EF25  F008         	goto	u2051
  3709  001046  EF27  F008         	goto	u2050
  3710  00104A                     u2051:
  3711  00104A  EF2F  F008         	goto	l2742
  3712  00104E                     u2050:
  3713  00104E                     
  3714                           ; BSR set to: 0
  3715  00104E  0E00               	movlw	0
  3716  001050  6F87               	movwf	___fladd@b& (0+255),b
  3717  001052  0E00               	movlw	0
  3718  001054  6F88               	movwf	(___fladd@b+1)& (0+255),b
  3719  001056  0E00               	movlw	0
  3720  001058  6F89               	movwf	(___fladd@b+2)& (0+255),b
  3721  00105A  0E00               	movlw	0
  3722  00105C  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  3723  00105E                     l2742:
  3724                           
  3725                           ; BSR set to: 0
  3726  00105E  8F89               	bsf	(___fladd@b+2)& (0+255),7,b
  3727  001060                     
  3728                           ; BSR set to: 0
  3729  001060  0E00               	movlw	0
  3730  001062  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  3731  001064  EF3C  F008         	goto	l2748
  3732  001068                     l2746:
  3733                           
  3734                           ; BSR set to: 0
  3735  001068  0E00               	movlw	0
  3736  00106A  6F87               	movwf	___fladd@b& (0+255),b
  3737  00106C  0E00               	movlw	0
  3738  00106E  6F88               	movwf	(___fladd@b+1)& (0+255),b
  3739  001070  0E00               	movlw	0
  3740  001072  6F89               	movwf	(___fladd@b+2)& (0+255),b
  3741  001074  0E00               	movlw	0
  3742  001076  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  3743  001078                     l2748:
  3744                           
  3745                           ; BSR set to: 0
  3746  001078  518E               	movf	(___fladd@a+3)& (0+255),w,b
  3747  00107A  0B80               	andlw	128
  3748  00107C  6F94               	movwf	___fladd@aexp& (0+255),b
  3749  00107E                     
  3750                           ; BSR set to: 0
  3751  00107E  5193               	movf	___fladd@signs& (0+255),w,b
  3752  001080  1994               	xorwf	___fladd@aexp& (0+255),w,b
  3753  001082  B4D8               	btfsc	status,2,c
  3754  001084  EF46  F008         	goto	u2061
  3755  001088  EF48  F008         	goto	u2060
  3756  00108C                     u2061:
  3757  00108C  EF49  F008         	goto	l2754
  3758  001090                     u2060:
  3759  001090                     
  3760                           ; BSR set to: 0
  3761  001090  8D93               	bsf	___fladd@signs& (0+255),6,b
  3762  001092                     l2754:
  3763                           
  3764                           ; BSR set to: 0
  3765  001092  518E               	movf	(___fladd@a+3)& (0+255),w,b
  3766  001094  258E               	addwf	(___fladd@a+3)& (0+255),w,b
  3767  001096  6F94               	movwf	___fladd@aexp& (0+255),b
  3768  001098                     
  3769                           ; BSR set to: 0
  3770  001098  AF8D               	btfss	(___fladd@a+2)& (0+255),7,b
  3771  00109A  EF51  F008         	goto	u2071
  3772  00109E  EF53  F008         	goto	u2070
  3773  0010A2                     u2071:
  3774  0010A2  EF54  F008         	goto	l2760
  3775  0010A6                     u2070:
  3776  0010A6                     
  3777                           ; BSR set to: 0
  3778  0010A6  8194               	bsf	___fladd@aexp& (0+255),0,b
  3779  0010A8                     l2760:
  3780                           
  3781                           ; BSR set to: 0
  3782  0010A8  5194               	movf	___fladd@aexp& (0+255),w,b
  3783  0010AA  B4D8               	btfsc	status,2,c
  3784  0010AC  EF5A  F008         	goto	u2081
  3785  0010B0  EF5C  F008         	goto	u2080
  3786  0010B4                     u2081:
  3787  0010B4  EF71  F008         	goto	l2770
  3788  0010B8                     u2080:
  3789  0010B8                     
  3790                           ; BSR set to: 0
  3791  0010B8  2994               	incf	___fladd@aexp& (0+255),w,b
  3792  0010BA  A4D8               	btfss	status,2,c
  3793  0010BC  EF62  F008         	goto	u2091
  3794  0010C0  EF64  F008         	goto	u2090
  3795  0010C4                     u2091:
  3796  0010C4  EF6C  F008         	goto	l2766
  3797  0010C8                     u2090:
  3798  0010C8                     
  3799                           ; BSR set to: 0
  3800  0010C8  0E00               	movlw	0
  3801  0010CA  6F8B               	movwf	___fladd@a& (0+255),b
  3802  0010CC  0E00               	movlw	0
  3803  0010CE  6F8C               	movwf	(___fladd@a+1)& (0+255),b
  3804  0010D0  0E00               	movlw	0
  3805  0010D2  6F8D               	movwf	(___fladd@a+2)& (0+255),b
  3806  0010D4  0E00               	movlw	0
  3807  0010D6  6F8E               	movwf	(___fladd@a+3)& (0+255),b
  3808  0010D8                     l2766:
  3809                           
  3810                           ; BSR set to: 0
  3811  0010D8  8F8D               	bsf	(___fladd@a+2)& (0+255),7,b
  3812  0010DA                     
  3813                           ; BSR set to: 0
  3814  0010DA  0E00               	movlw	0
  3815  0010DC  6F8E               	movwf	(___fladd@a+3)& (0+255),b
  3816  0010DE  EF79  F008         	goto	l2772
  3817  0010E2                     l2770:
  3818                           
  3819                           ; BSR set to: 0
  3820  0010E2  0E00               	movlw	0
  3821  0010E4  6F8B               	movwf	___fladd@a& (0+255),b
  3822  0010E6  0E00               	movlw	0
  3823  0010E8  6F8C               	movwf	(___fladd@a+1)& (0+255),b
  3824  0010EA  0E00               	movlw	0
  3825  0010EC  6F8D               	movwf	(___fladd@a+2)& (0+255),b
  3826  0010EE  0E00               	movlw	0
  3827  0010F0  6F8E               	movwf	(___fladd@a+3)& (0+255),b
  3828  0010F2                     l2772:
  3829                           
  3830                           ; BSR set to: 0
  3831  0010F2  5195               	movf	___fladd@bexp& (0+255),w,b
  3832  0010F4  5D94               	subwf	___fladd@aexp& (0+255),w,b
  3833  0010F6  B0D8               	btfsc	status,0,c
  3834  0010F8  EF80  F008         	goto	u2101
  3835  0010FC  EF82  F008         	goto	u2100
  3836  001100                     u2101:
  3837  001100  EFA9  F008         	goto	l2808
  3838  001104                     u2100:
  3839  001104                     
  3840                           ; BSR set to: 0
  3841  001104  AD93               	btfss	___fladd@signs& (0+255),6,b
  3842  001106  EF87  F008         	goto	u2111
  3843  00110A  EF89  F008         	goto	u2110
  3844  00110E                     u2111:
  3845  00110E  EF8B  F008         	goto	l2778
  3846  001112                     u2110:
  3847  001112                     
  3848                           ; BSR set to: 0
  3849  001112  0E80               	movlw	128
  3850  001114  1B93               	xorwf	___fladd@signs& (0+255),f,b
  3851  001116                     l2778:
  3852                           
  3853                           ; BSR set to: 0
  3854  001116  C095  F096         	movff	___fladd@bexp,___fladd@grs
  3855  00111A                     
  3856                           ; BSR set to: 0
  3857  00111A  C094  F095         	movff	___fladd@aexp,___fladd@bexp
  3858  00111E                     
  3859                           ; BSR set to: 0
  3860  00111E  C096  F094         	movff	___fladd@grs,___fladd@aexp
  3861  001122                     
  3862                           ; BSR set to: 0
  3863  001122  C087  F096         	movff	___fladd@b,___fladd@grs
  3864  001126                     
  3865                           ; BSR set to: 0
  3866  001126  C08B  F087         	movff	___fladd@a,___fladd@b
  3867  00112A                     
  3868                           ; BSR set to: 0
  3869  00112A  C096  F08B         	movff	___fladd@grs,___fladd@a
  3870  00112E                     
  3871                           ; BSR set to: 0
  3872  00112E  C088  F096         	movff	___fladd@b+1,___fladd@grs
  3873  001132                     
  3874                           ; BSR set to: 0
  3875  001132  C08C  F088         	movff	___fladd@a+1,___fladd@b+1
  3876  001136                     
  3877                           ; BSR set to: 0
  3878  001136  C096  F08C         	movff	___fladd@grs,___fladd@a+1
  3879  00113A                     
  3880                           ; BSR set to: 0
  3881  00113A  C089  F096         	movff	___fladd@b+2,___fladd@grs
  3882  00113E                     
  3883                           ; BSR set to: 0
  3884  00113E  C08D  F089         	movff	___fladd@a+2,___fladd@b+2
  3885  001142                     
  3886                           ; BSR set to: 0
  3887  001142  C096  F08D         	movff	___fladd@grs,___fladd@a+2
  3888  001146                     
  3889                           ; BSR set to: 0
  3890  001146  C08A  F096         	movff	___fladd@b+3,___fladd@grs
  3891  00114A                     
  3892                           ; BSR set to: 0
  3893  00114A  C08E  F08A         	movff	___fladd@a+3,___fladd@b+3
  3894  00114E                     
  3895                           ; BSR set to: 0
  3896  00114E  C096  F08E         	movff	___fladd@grs,___fladd@a+3
  3897  001152                     l2808:
  3898                           
  3899                           ; BSR set to: 0
  3900  001152  0E00               	movlw	0
  3901  001154  6F96               	movwf	___fladd@grs& (0+255),b
  3902  001156                     
  3903                           ; BSR set to: 0
  3904  001156  5195               	movf	___fladd@bexp& (0+255),w,b
  3905  001158  C094  F08F         	movff	___fladd@aexp,??___fladd
  3906  00115C  6B90               	clrf	(??___fladd+1)& (0+255),b
  3907  00115E  5F8F               	subwf	??___fladd& (0+255),f,b
  3908  001160  0E00               	movlw	0
  3909  001162  5B90               	subwfb	(??___fladd+1)& (0+255),f,b
  3910  001164  BF90               	btfsc	(??___fladd+1)& (0+255),7,b
  3911  001166  EFBE  F008         	goto	u2121
  3912  00116A  5190               	movf	(??___fladd+1)& (0+255),w,b
  3913  00116C  E109               	bnz	u2120
  3914  00116E  0E1A               	movlw	26
  3915  001170  5D8F               	subwf	??___fladd& (0+255),w,b
  3916  001172  A0D8               	btfss	status,0,c
  3917  001174  EFBE  F008         	goto	u2121
  3918  001178  EFC0  F008         	goto	u2120
  3919  00117C                     u2121:
  3920  00117C  EFF7  F008         	goto	l1120
  3921  001180                     u2120:
  3922  001180                     
  3923                           ; BSR set to: 0
  3924  001180  5187               	movf	___fladd@b& (0+255),w,b
  3925  001182  1188               	iorwf	(___fladd@b+1)& (0+255),w,b
  3926  001184  1189               	iorwf	(___fladd@b+2)& (0+255),w,b
  3927  001186  118A               	iorwf	(___fladd@b+3)& (0+255),w,b
  3928  001188  A4D8               	btfss	status,2,c
  3929  00118A  EFC9  F008         	goto	u2131
  3930  00118E  EFCC  F008         	goto	u2130
  3931  001192                     u2131:
  3932  001192  0E01               	movlw	1
  3933  001194  EFCD  F008         	goto	u2140
  3934  001198                     u2130:
  3935  001198  0E00               	movlw	0
  3936  00119A                     u2140:
  3937  00119A  6F96               	movwf	___fladd@grs& (0+255),b
  3938  00119C                     
  3939                           ; BSR set to: 0
  3940  00119C  0E00               	movlw	0
  3941  00119E  6F87               	movwf	___fladd@b& (0+255),b
  3942  0011A0  0E00               	movlw	0
  3943  0011A2  6F88               	movwf	(___fladd@b+1)& (0+255),b
  3944  0011A4  0E00               	movlw	0
  3945  0011A6  6F89               	movwf	(___fladd@b+2)& (0+255),b
  3946  0011A8  0E00               	movlw	0
  3947  0011AA  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  3948  0011AC                     
  3949                           ; BSR set to: 0
  3950  0011AC  C094  F095         	movff	___fladd@aexp,___fladd@bexp
  3951  0011B0  EF00  F009         	goto	l1119
  3952  0011B4                     l1121:
  3953                           
  3954                           ; BSR set to: 0
  3955  0011B4  A196               	btfss	___fladd@grs& (0+255),0,b
  3956  0011B6  EFDF  F008         	goto	u2151
  3957  0011BA  EFE1  F008         	goto	u2150
  3958  0011BE                     u2151:
  3959  0011BE  EFE7  F008         	goto	l2820
  3960  0011C2                     u2150:
  3961  0011C2                     
  3962                           ; BSR set to: 0
  3963  0011C2  90D8               	bcf	status,0,c
  3964  0011C4  3196               	rrcf	___fladd@grs& (0+255),w,b
  3965  0011C6  0901               	iorlw	1
  3966  0011C8  6F96               	movwf	___fladd@grs& (0+255),b
  3967  0011CA  EFE9  F008         	goto	l2822
  3968  0011CE                     l2820:
  3969                           
  3970                           ; BSR set to: 0
  3971  0011CE  90D8               	bcf	status,0,c
  3972  0011D0  3396               	rrcf	___fladd@grs& (0+255),f,b
  3973  0011D2                     l2822:
  3974                           
  3975                           ; BSR set to: 0
  3976  0011D2  A187               	btfss	___fladd@b& (0+255),0,b
  3977  0011D4  EFEE  F008         	goto	u2161
  3978  0011D8  EFF0  F008         	goto	u2160
  3979  0011DC                     u2161:
  3980  0011DC  EFF1  F008         	goto	l2826
  3981  0011E0                     u2160:
  3982  0011E0                     
  3983                           ; BSR set to: 0
  3984  0011E0  8F96               	bsf	___fladd@grs& (0+255),7,b
  3985  0011E2                     l2826:
  3986                           
  3987                           ; BSR set to: 0
  3988  0011E2  358A               	rlcf	(___fladd@b+3)& (0+255),w,b
  3989  0011E4  338A               	rrcf	(___fladd@b+3)& (0+255),f,b
  3990  0011E6  3389               	rrcf	(___fladd@b+2)& (0+255),f,b
  3991  0011E8  3388               	rrcf	(___fladd@b+1)& (0+255),f,b
  3992  0011EA  3387               	rrcf	___fladd@b& (0+255),f,b
  3993  0011EC                     
  3994                           ; BSR set to: 0
  3995  0011EC  2B95               	incf	___fladd@bexp& (0+255),f,b
  3996  0011EE                     l1120:
  3997                           
  3998                           ; BSR set to: 0
  3999  0011EE  5194               	movf	___fladd@aexp& (0+255),w,b
  4000  0011F0  5D95               	subwf	___fladd@bexp& (0+255),w,b
  4001  0011F2  A0D8               	btfss	status,0,c
  4002  0011F4  EFFE  F008         	goto	u2171
  4003  0011F8  EF00  F009         	goto	u2170
  4004  0011FC                     u2171:
  4005  0011FC  EFDA  F008         	goto	l1121
  4006  001200                     u2170:
  4007  001200                     l1119:
  4008                           
  4009                           ; BSR set to: 0
  4010  001200  BD93               	btfsc	___fladd@signs& (0+255),6,b
  4011  001202  EF05  F009         	goto	u2181
  4012  001206  EF07  F009         	goto	u2180
  4013  00120A                     u2181:
  4014  00120A  EF47  F009         	goto	l2854
  4015  00120E                     u2180:
  4016  00120E                     
  4017                           ; BSR set to: 0
  4018  00120E  5195               	movf	___fladd@bexp& (0+255),w,b
  4019  001210  A4D8               	btfss	status,2,c
  4020  001212  EF0D  F009         	goto	u2191
  4021  001216  EF0F  F009         	goto	u2190
  4022  00121A                     u2191:
  4023  00121A  EF19  F009         	goto	l2836
  4024  00121E                     u2190:
  4025  00121E                     
  4026                           ; BSR set to: 0
  4027  00121E  0E00               	movlw	0
  4028  001220  6F87               	movwf	?___fladd& (0+255),b
  4029  001222  0E00               	movlw	0
  4030  001224  6F88               	movwf	(?___fladd+1)& (0+255),b
  4031  001226  0E00               	movlw	0
  4032  001228  6F89               	movwf	(?___fladd+2)& (0+255),b
  4033  00122A  0E00               	movlw	0
  4034  00122C  6F8A               	movwf	(?___fladd+3)& (0+255),b
  4035  00122E  EF68  F00A         	goto	l1128
  4036  001232                     l2836:
  4037                           
  4038                           ; BSR set to: 0
  4039  001232  518B               	movf	___fladd@a& (0+255),w,b
  4040  001234  2787               	addwf	___fladd@b& (0+255),f,b
  4041  001236  518C               	movf	(___fladd@a+1)& (0+255),w,b
  4042  001238  2388               	addwfc	(___fladd@b+1)& (0+255),f,b
  4043  00123A  518D               	movf	(___fladd@a+2)& (0+255),w,b
  4044  00123C  2389               	addwfc	(___fladd@b+2)& (0+255),f,b
  4045  00123E  518E               	movf	(___fladd@a+3)& (0+255),w,b
  4046  001240  238A               	addwfc	(___fladd@b+3)& (0+255),f,b
  4047  001242                     
  4048                           ; BSR set to: 0
  4049  001242  A18A               	btfss	(___fladd@b+3)& (0+255),0,b
  4050  001244  EF26  F009         	goto	u2201
  4051  001248  EF28  F009         	goto	u2200
  4052  00124C                     u2201:
  4053  00124C  EFD4  F009         	goto	l2890
  4054  001250                     u2200:
  4055  001250                     
  4056                           ; BSR set to: 0
  4057  001250  A196               	btfss	___fladd@grs& (0+255),0,b
  4058  001252  EF2D  F009         	goto	u2211
  4059  001256  EF2F  F009         	goto	u2210
  4060  00125A                     u2211:
  4061  00125A  EF35  F009         	goto	l2844
  4062  00125E                     u2210:
  4063  00125E                     
  4064                           ; BSR set to: 0
  4065  00125E  90D8               	bcf	status,0,c
  4066  001260  3196               	rrcf	___fladd@grs& (0+255),w,b
  4067  001262  0901               	iorlw	1
  4068  001264  6F96               	movwf	___fladd@grs& (0+255),b
  4069  001266  EF37  F009         	goto	l2846
  4070  00126A                     l2844:
  4071                           
  4072                           ; BSR set to: 0
  4073  00126A  90D8               	bcf	status,0,c
  4074  00126C  3396               	rrcf	___fladd@grs& (0+255),f,b
  4075  00126E                     l2846:
  4076                           
  4077                           ; BSR set to: 0
  4078  00126E  A187               	btfss	___fladd@b& (0+255),0,b
  4079  001270  EF3C  F009         	goto	u2221
  4080  001274  EF3E  F009         	goto	u2220
  4081  001278                     u2221:
  4082  001278  EF3F  F009         	goto	l2850
  4083  00127C                     u2220:
  4084  00127C                     
  4085                           ; BSR set to: 0
  4086  00127C  8F96               	bsf	___fladd@grs& (0+255),7,b
  4087  00127E                     l2850:
  4088                           
  4089                           ; BSR set to: 0
  4090  00127E  358A               	rlcf	(___fladd@b+3)& (0+255),w,b
  4091  001280  338A               	rrcf	(___fladd@b+3)& (0+255),f,b
  4092  001282  3389               	rrcf	(___fladd@b+2)& (0+255),f,b
  4093  001284  3388               	rrcf	(___fladd@b+1)& (0+255),f,b
  4094  001286  3387               	rrcf	___fladd@b& (0+255),f,b
  4095  001288                     
  4096                           ; BSR set to: 0
  4097  001288  2B95               	incf	___fladd@bexp& (0+255),f,b
  4098  00128A  EFD4  F009         	goto	l2890
  4099  00128E                     l2854:
  4100                           
  4101                           ; BSR set to: 0
  4102  00128E  518B               	movf	___fladd@a& (0+255),w,b
  4103  001290  5D87               	subwf	___fladd@b& (0+255),w,b
  4104  001292  518C               	movf	(___fladd@a+1)& (0+255),w,b
  4105  001294  5988               	subwfb	(___fladd@b+1)& (0+255),w,b
  4106  001296  518D               	movf	(___fladd@a+2)& (0+255),w,b
  4107  001298  5989               	subwfb	(___fladd@b+2)& (0+255),w,b
  4108  00129A  518A               	movf	(___fladd@b+3)& (0+255),w,b
  4109  00129C  0A80               	xorlw	128
  4110  00129E  6F8F               	movwf	??___fladd& (0+255),b
  4111  0012A0  518E               	movf	(___fladd@a+3)& (0+255),w,b
  4112  0012A2  0A80               	xorlw	128
  4113  0012A4  598F               	subwfb	??___fladd& (0+255),w,b
  4114  0012A6  B0D8               	btfsc	status,0,c
  4115  0012A8  EF58  F009         	goto	u2231
  4116  0012AC  EF5A  F009         	goto	u2230
  4117  0012B0                     u2231:
  4118  0012B0  EF85  F009         	goto	l2864
  4119  0012B4                     u2230:
  4120  0012B4                     
  4121                           ; BSR set to: 0
  4122  0012B4  5187               	movf	___fladd@b& (0+255),w,b
  4123  0012B6  5D8B               	subwf	___fladd@a& (0+255),w,b
  4124  0012B8  6F8F               	movwf	??___fladd& (0+255),b
  4125  0012BA  5188               	movf	(___fladd@b+1)& (0+255),w,b
  4126  0012BC  598C               	subwfb	(___fladd@a+1)& (0+255),w,b
  4127  0012BE  6F90               	movwf	(??___fladd+1)& (0+255),b
  4128  0012C0  5189               	movf	(___fladd@b+2)& (0+255),w,b
  4129  0012C2  598D               	subwfb	(___fladd@a+2)& (0+255),w,b
  4130  0012C4  6F91               	movwf	(??___fladd+2)& (0+255),b
  4131  0012C6  518A               	movf	(___fladd@b+3)& (0+255),w,b
  4132  0012C8  598E               	subwfb	(___fladd@a+3)& (0+255),w,b
  4133  0012CA  6F92               	movwf	(??___fladd+3)& (0+255),b
  4134  0012CC  0EFF               	movlw	255
  4135  0012CE  258F               	addwf	??___fladd& (0+255),w,b
  4136  0012D0  6F87               	movwf	___fladd@b& (0+255),b
  4137  0012D2  0EFF               	movlw	255
  4138  0012D4  2190               	addwfc	(??___fladd+1)& (0+255),w,b
  4139  0012D6  6F88               	movwf	(___fladd@b+1)& (0+255),b
  4140  0012D8  0EFF               	movlw	255
  4141  0012DA  2191               	addwfc	(??___fladd+2)& (0+255),w,b
  4142  0012DC  6F89               	movwf	(___fladd@b+2)& (0+255),b
  4143  0012DE  0EFF               	movlw	255
  4144  0012E0  2192               	addwfc	(??___fladd+3)& (0+255),w,b
  4145  0012E2  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  4146  0012E4  0E80               	movlw	128
  4147  0012E6  1B93               	xorwf	___fladd@signs& (0+255),f,b
  4148  0012E8                     
  4149                           ; BSR set to: 0
  4150  0012E8  6D96               	negf	___fladd@grs& (0+255),b
  4151  0012EA                     
  4152                           ; BSR set to: 0
  4153  0012EA  5196               	movf	___fladd@grs& (0+255),w,b
  4154  0012EC  A4D8               	btfss	status,2,c
  4155  0012EE  EF7B  F009         	goto	u2241
  4156  0012F2  EF7D  F009         	goto	u2240
  4157  0012F6                     u2241:
  4158  0012F6  EF8D  F009         	goto	l1136
  4159  0012FA                     u2240:
  4160  0012FA                     
  4161                           ; BSR set to: 0
  4162  0012FA  0E01               	movlw	1
  4163  0012FC  2787               	addwf	___fladd@b& (0+255),f,b
  4164  0012FE  0E00               	movlw	0
  4165  001300  2388               	addwfc	(___fladd@b+1)& (0+255),f,b
  4166  001302  2389               	addwfc	(___fladd@b+2)& (0+255),f,b
  4167  001304  238A               	addwfc	(___fladd@b+3)& (0+255),f,b
  4168  001306  EF8D  F009         	goto	l1136
  4169  00130A                     l2864:
  4170                           
  4171                           ; BSR set to: 0
  4172  00130A  518B               	movf	___fladd@a& (0+255),w,b
  4173  00130C  5F87               	subwf	___fladd@b& (0+255),f,b
  4174  00130E  518C               	movf	(___fladd@a+1)& (0+255),w,b
  4175  001310  5B88               	subwfb	(___fladd@b+1)& (0+255),f,b
  4176  001312  518D               	movf	(___fladd@a+2)& (0+255),w,b
  4177  001314  5B89               	subwfb	(___fladd@b+2)& (0+255),f,b
  4178  001316  518E               	movf	(___fladd@a+3)& (0+255),w,b
  4179  001318  5B8A               	subwfb	(___fladd@b+3)& (0+255),f,b
  4180  00131A                     l1136:
  4181                           
  4182                           ; BSR set to: 0
  4183  00131A  5187               	movf	___fladd@b& (0+255),w,b
  4184  00131C  1188               	iorwf	(___fladd@b+1)& (0+255),w,b
  4185  00131E  1189               	iorwf	(___fladd@b+2)& (0+255),w,b
  4186  001320  118A               	iorwf	(___fladd@b+3)& (0+255),w,b
  4187  001322  A4D8               	btfss	status,2,c
  4188  001324  EF96  F009         	goto	u2251
  4189  001328  EF98  F009         	goto	u2250
  4190  00132C                     u2251:
  4191  00132C  EFCD  F009         	goto	l2888
  4192  001330                     u2250:
  4193  001330                     
  4194                           ; BSR set to: 0
  4195  001330  5196               	movf	___fladd@grs& (0+255),w,b
  4196  001332  A4D8               	btfss	status,2,c
  4197  001334  EF9E  F009         	goto	u2261
  4198  001338  EFA0  F009         	goto	u2260
  4199  00133C                     u2261:
  4200  00133C  EFCD  F009         	goto	l2888
  4201  001340                     u2260:
  4202  001340                     
  4203                           ; BSR set to: 0
  4204  001340  0E00               	movlw	0
  4205  001342  6F87               	movwf	?___fladd& (0+255),b
  4206  001344  0E00               	movlw	0
  4207  001346  6F88               	movwf	(?___fladd+1)& (0+255),b
  4208  001348  0E00               	movlw	0
  4209  00134A  6F89               	movwf	(?___fladd+2)& (0+255),b
  4210  00134C  0E00               	movlw	0
  4211  00134E  6F8A               	movwf	(?___fladd+3)& (0+255),b
  4212  001350  EF68  F00A         	goto	l1128
  4213  001354                     l2872:
  4214                           
  4215                           ; BSR set to: 0
  4216  001354  90D8               	bcf	status,0,c
  4217  001356  3787               	rlcf	___fladd@b& (0+255),f,b
  4218  001358  3788               	rlcf	(___fladd@b+1)& (0+255),f,b
  4219  00135A  3789               	rlcf	(___fladd@b+2)& (0+255),f,b
  4220  00135C  378A               	rlcf	(___fladd@b+3)& (0+255),f,b
  4221  00135E                     
  4222                           ; BSR set to: 0
  4223  00135E  AF96               	btfss	___fladd@grs& (0+255),7,b
  4224  001360  EFB4  F009         	goto	u2271
  4225  001364  EFB6  F009         	goto	u2270
  4226  001368                     u2271:
  4227  001368  EFB7  F009         	goto	l2878
  4228  00136C                     u2270:
  4229  00136C                     
  4230                           ; BSR set to: 0
  4231  00136C  8187               	bsf	___fladd@b& (0+255),0,b
  4232  00136E                     l2878:
  4233                           
  4234                           ; BSR set to: 0
  4235  00136E  A196               	btfss	___fladd@grs& (0+255),0,b
  4236  001370  EFBC  F009         	goto	u2281
  4237  001374  EFBE  F009         	goto	u2280
  4238  001378                     u2281:
  4239  001378  EFC2  F009         	goto	l2882
  4240  00137C                     u2280:
  4241  00137C                     
  4242                           ; BSR set to: 0
  4243  00137C  80D8               	bsf	status,0,c
  4244  00137E  3796               	rlcf	___fladd@grs& (0+255),f,b
  4245  001380  EFC4  F009         	goto	l2884
  4246  001384                     l2882:
  4247                           
  4248                           ; BSR set to: 0
  4249  001384  90D8               	bcf	status,0,c
  4250  001386  3796               	rlcf	___fladd@grs& (0+255),f,b
  4251  001388                     l2884:
  4252                           
  4253                           ; BSR set to: 0
  4254  001388  5195               	movf	___fladd@bexp& (0+255),w,b
  4255  00138A  B4D8               	btfsc	status,2,c
  4256  00138C  EFCA  F009         	goto	u2291
  4257  001390  EFCC  F009         	goto	u2290
  4258  001394                     u2291:
  4259  001394  EFCD  F009         	goto	l2888
  4260  001398                     u2290:
  4261  001398                     
  4262                           ; BSR set to: 0
  4263  001398  0795               	decf	___fladd@bexp& (0+255),f,b
  4264  00139A                     l2888:
  4265                           
  4266                           ; BSR set to: 0
  4267  00139A  AF89               	btfss	(___fladd@b+2)& (0+255),7,b
  4268  00139C  EFD2  F009         	goto	u2301
  4269  0013A0  EFD4  F009         	goto	u2300
  4270  0013A4                     u2301:
  4271  0013A4  EFAA  F009         	goto	l2872
  4272  0013A8                     u2300:
  4273  0013A8                     l2890:
  4274                           
  4275                           ; BSR set to: 0
  4276  0013A8  0E00               	movlw	0
  4277  0013AA  6F94               	movwf	___fladd@aexp& (0+255),b
  4278  0013AC                     
  4279                           ; BSR set to: 0
  4280  0013AC  AF96               	btfss	___fladd@grs& (0+255),7,b
  4281  0013AE  EFDB  F009         	goto	u2311
  4282  0013B2  EFDD  F009         	goto	u2310
  4283  0013B6                     u2311:
  4284  0013B6  EFF5  F009         	goto	l1145
  4285  0013BA                     u2310:
  4286  0013BA                     
  4287                           ; BSR set to: 0
  4288  0013BA  C096  F08F         	movff	___fladd@grs,??___fladd
  4289  0013BE  0E7F               	movlw	127
  4290  0013C0  178F               	andwf	??___fladd& (0+255),f,b
  4291  0013C2  B4D8               	btfsc	status,2,c
  4292  0013C4  EFE6  F009         	goto	u2321
  4293  0013C8  EFE8  F009         	goto	u2320
  4294  0013CC                     u2321:
  4295  0013CC  EFEC  F009         	goto	l1146
  4296  0013D0                     u2320:
  4297  0013D0                     l2896:
  4298                           
  4299                           ; BSR set to: 0
  4300  0013D0  0E01               	movlw	1
  4301  0013D2  6F94               	movwf	___fladd@aexp& (0+255),b
  4302  0013D4  EFF5  F009         	goto	l1145
  4303  0013D8                     l1146:
  4304                           
  4305                           ; BSR set to: 0
  4306  0013D8  A187               	btfss	___fladd@b& (0+255),0,b
  4307  0013DA  EFF1  F009         	goto	u2331
  4308  0013DE  EFF3  F009         	goto	u2330
  4309  0013E2                     u2331:
  4310  0013E2  EFF5  F009         	goto	l1145
  4311  0013E6                     u2330:
  4312  0013E6  EFE8  F009         	goto	l2896
  4313  0013EA                     l1145:
  4314                           
  4315                           ; BSR set to: 0
  4316  0013EA  5194               	movf	___fladd@aexp& (0+255),w,b
  4317  0013EC  B4D8               	btfsc	status,2,c
  4318  0013EE  EFFB  F009         	goto	u2341
  4319  0013F2  EFFD  F009         	goto	u2340
  4320  0013F6                     u2341:
  4321  0013F6  EF28  F00A         	goto	l2908
  4322  0013FA                     u2340:
  4323  0013FA                     
  4324                           ; BSR set to: 0
  4325  0013FA  0E01               	movlw	1
  4326  0013FC  2787               	addwf	___fladd@b& (0+255),f,b
  4327  0013FE  0E00               	movlw	0
  4328  001400  2388               	addwfc	(___fladd@b+1)& (0+255),f,b
  4329  001402  2389               	addwfc	(___fladd@b+2)& (0+255),f,b
  4330  001404  238A               	addwfc	(___fladd@b+3)& (0+255),f,b
  4331  001406                     
  4332                           ; BSR set to: 0
  4333  001406  A18A               	btfss	(___fladd@b+3)& (0+255),0,b
  4334  001408  EF08  F00A         	goto	u2351
  4335  00140C  EF0A  F00A         	goto	u2350
  4336  001410                     u2351:
  4337  001410  EF28  F00A         	goto	l2908
  4338  001414                     u2350:
  4339  001414                     
  4340                           ; BSR set to: 0
  4341  001414  C087  F08F         	movff	___fladd@b,??___fladd
  4342  001418  C088  F090         	movff	___fladd@b+1,??___fladd+1
  4343  00141C  C089  F091         	movff	___fladd@b+2,??___fladd+2
  4344  001420  C08A  F092         	movff	___fladd@b+3,??___fladd+3
  4345  001424  3592               	rlcf	(??___fladd+3)& (0+255),w,b
  4346  001426  3392               	rrcf	(??___fladd+3)& (0+255),f,b
  4347  001428  3391               	rrcf	(??___fladd+2)& (0+255),f,b
  4348  00142A  3390               	rrcf	(??___fladd+1)& (0+255),f,b
  4349  00142C  338F               	rrcf	??___fladd& (0+255),f,b
  4350  00142E  C08F  F087         	movff	??___fladd,___fladd@b
  4351  001432  C090  F088         	movff	??___fladd+1,___fladd@b+1
  4352  001436  C091  F089         	movff	??___fladd+2,___fladd@b+2
  4353  00143A  C092  F08A         	movff	??___fladd+3,___fladd@b+3
  4354  00143E  2995               	incf	___fladd@bexp& (0+255),w,b
  4355  001440  B4D8               	btfsc	status,2,c
  4356  001442  EF25  F00A         	goto	u2361
  4357  001446  EF27  F00A         	goto	u2360
  4358  00144A                     u2361:
  4359  00144A  EF28  F00A         	goto	l2908
  4360  00144E                     u2360:
  4361  00144E                     
  4362                           ; BSR set to: 0
  4363  00144E  2B95               	incf	___fladd@bexp& (0+255),f,b
  4364  001450                     l2908:
  4365                           
  4366                           ; BSR set to: 0
  4367  001450  2995               	incf	___fladd@bexp& (0+255),w,b
  4368  001452  B4D8               	btfsc	status,2,c
  4369  001454  EF2E  F00A         	goto	u2371
  4370  001458  EF30  F00A         	goto	u2370
  4371  00145C                     u2371:
  4372  00145C  EF38  F00A         	goto	l2912
  4373  001460                     u2370:
  4374  001460                     
  4375                           ; BSR set to: 0
  4376  001460  5195               	movf	___fladd@bexp& (0+255),w,b
  4377  001462  A4D8               	btfss	status,2,c
  4378  001464  EF36  F00A         	goto	u2381
  4379  001468  EF38  F00A         	goto	u2380
  4380  00146C                     u2381:
  4381  00146C  EF4A  F00A         	goto	l2916
  4382  001470                     u2380:
  4383  001470                     l2912:
  4384                           
  4385                           ; BSR set to: 0
  4386  001470  0E00               	movlw	0
  4387  001472  6F87               	movwf	___fladd@b& (0+255),b
  4388  001474  0E00               	movlw	0
  4389  001476  6F88               	movwf	(___fladd@b+1)& (0+255),b
  4390  001478  0E00               	movlw	0
  4391  00147A  6F89               	movwf	(___fladd@b+2)& (0+255),b
  4392  00147C  0E00               	movlw	0
  4393  00147E  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  4394  001480  5195               	movf	___fladd@bexp& (0+255),w,b
  4395  001482  A4D8               	btfss	status,2,c
  4396  001484  EF46  F00A         	goto	u2391
  4397  001488  EF48  F00A         	goto	u2390
  4398  00148C                     u2391:
  4399  00148C  EF4A  F00A         	goto	l2916
  4400  001490                     u2390:
  4401  001490                     
  4402                           ; BSR set to: 0
  4403  001490  0E00               	movlw	0
  4404  001492  6F93               	movwf	___fladd@signs& (0+255),b
  4405  001494                     l2916:
  4406                           
  4407                           ; BSR set to: 0
  4408  001494  A195               	btfss	___fladd@bexp& (0+255),0,b
  4409  001496  EF4F  F00A         	goto	u2401
  4410  00149A  EF51  F00A         	goto	u2400
  4411  00149E                     u2401:
  4412  00149E  EF54  F00A         	goto	l2920
  4413  0014A2                     u2400:
  4414  0014A2                     
  4415                           ; BSR set to: 0
  4416  0014A2  8F89               	bsf	(___fladd@b+2)& (0+255),7,b
  4417  0014A4  EF55  F00A         	goto	l2922
  4418  0014A8                     l2920:
  4419                           
  4420                           ; BSR set to: 0
  4421  0014A8  9F89               	bcf	(___fladd@b+2)& (0+255),7,b
  4422  0014AA                     l2922:
  4423                           
  4424                           ; BSR set to: 0
  4425  0014AA  90D8               	bcf	status,0,c
  4426  0014AC  3195               	rrcf	___fladd@bexp& (0+255),w,b
  4427  0014AE  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  4428  0014B0                     
  4429                           ; BSR set to: 0
  4430  0014B0  AF93               	btfss	___fladd@signs& (0+255),7,b
  4431  0014B2  EF5D  F00A         	goto	u2411
  4432  0014B6  EF5F  F00A         	goto	u2410
  4433  0014BA                     u2411:
  4434  0014BA  EF60  F00A         	goto	l2928
  4435  0014BE                     u2410:
  4436  0014BE                     
  4437                           ; BSR set to: 0
  4438  0014BE  8F8A               	bsf	(___fladd@b+3)& (0+255),7,b
  4439  0014C0                     l2928:
  4440                           
  4441                           ; BSR set to: 0
  4442  0014C0  C087  F087         	movff	___fladd@b,?___fladd
  4443  0014C4  C088  F088         	movff	___fladd@b+1,?___fladd+1
  4444  0014C8  C089  F089         	movff	___fladd@b+2,?___fladd+2
  4445  0014CC  C08A  F08A         	movff	___fladd@b+3,?___fladd+3
  4446  0014D0                     l1128:
  4447                           
  4448                           ; BSR set to: 0
  4449  0014D0  0012               	return		;funcret
  4450  0014D2                     __end_of___fladd:
  4451                           	opt callstack 0
  4452                           
  4453 ;; *************** function _handleButton *****************
  4454 ;; Defined at:
  4455 ;;		line 38 in file "buttons.c"
  4456 ;; Parameters:    Size  Location     Type
  4457 ;;  data_ptr        2   14[BANK0 ] PTR void 
  4458 ;;		 -> NULL(0), 
  4459 ;; Auto vars:     Size  Location     Type
  4460 ;;  checkRB0        2   20[BANK0 ] int 
  4461 ;;  checkRA5        2   18[BANK0 ] int 
  4462 ;; Return value:  Size  Location     Type
  4463 ;;                  1    wreg      void 
  4464 ;; Registers used:
  4465 ;;		wreg, status,2, status,0, cstack
  4466 ;; Tracked objects:
  4467 ;;		On entry : 0/0
  4468 ;;		On exit  : 0/0
  4469 ;;		Unchanged: 0/0
  4470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4471 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4472 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4473 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4474 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4475 ;;Total ram usage:        8 bytes
  4476 ;; Hardware stack levels used:    1
  4477 ;; Hardware stack levels required when called:    7
  4478 ;; This function calls:
  4479 ;;		_readButtonRA5
  4480 ;;		_readButtonRB0
  4481 ;; This function is called by:
  4482 ;;		_main
  4483 ;;		_selectReadyTask
  4484 ;; This function uses a non-reentrant model
  4485 ;;
  4486                           
  4487                           	psect	text22
  4488  002B96                     __ptext22:
  4489                           	opt callstack 0
  4490  002B96                     _handleButton:
  4491                           	opt callstack 21
  4492  002B96                     
  4493                           ;buttons.c: 39:     int checkRA5 = readButtonRA5();
  4494  002B96  ECCD  F01B         	call	_readButtonRA5	;wreg free
  4495  002B9A  C060  F072         	movff	?_readButtonRA5,handleButton@checkRA5
  4496  002B9E  C061  F073         	movff	?_readButtonRA5+1,handleButton@checkRA5+1
  4497                           
  4498                           ;buttons.c: 40:     int checkRB0 = readButtonRB0();
  4499  002BA2  ECA4  F01B         	call	_readButtonRB0	;wreg free
  4500  002BA6  C060  F074         	movff	?_readButtonRB0,handleButton@checkRB0
  4501  002BAA  C061  F075         	movff	?_readButtonRB0+1,handleButton@checkRB0+1
  4502                           
  4503                           ;buttons.c: 41:     switch(stateRA5) {
  4504  002BAE  EFF6  F015         	goto	l3508
  4505  002BB2                     l3498:
  4506                           
  4507                           ; BSR set to: 0
  4508                           ;buttons.c: 43:             if(checkRA5 == 2) {
  4509  002BB2  0E02               	movlw	2
  4510  002BB4  1972               	xorwf	handleButton@checkRA5& (0+255),w,b
  4511  002BB6  1173               	iorwf	(handleButton@checkRA5+1)& (0+255),w,b
  4512  002BB8  A4D8               	btfss	status,2,c
  4513  002BBA  EFE1  F015         	goto	u3301
  4514  002BBE  EFE3  F015         	goto	u3300
  4515  002BC2                     u3301:
  4516  002BC2  EF29  F016         	goto	l3520
  4517  002BC6                     u3300:
  4518  002BC6                     
  4519                           ; BSR set to: 0
  4520                           ;buttons.c: 44:                 stateRA5 = 1;
  4521  002BC6  0E01               	movlw	1
  4522  002BC8  6FC2               	movwf	_stateRA5& (0+255),b
  4523                           
  4524                           ;buttons.c: 45:                 RA5_pressed = 1;
  4525  002BCA  0E01               	movlw	1
  4526  002BCC  6FC6               	movwf	_RA5_pressed& (0+255),b
  4527  002BCE  EF29  F016         	goto	l3520
  4528  002BD2                     l3502:
  4529                           
  4530                           ; BSR set to: 0
  4531                           ;buttons.c: 49:             if(checkRA5 == 1)
  4532  002BD2  0572               	decf	handleButton@checkRA5& (0+255),w,b
  4533  002BD4  1173               	iorwf	(handleButton@checkRA5+1)& (0+255),w,b
  4534  002BD6  A4D8               	btfss	status,2,c
  4535  002BD8  EFF0  F015         	goto	u3311
  4536  002BDC  EFF2  F015         	goto	u3310
  4537  002BE0                     u3311:
  4538  002BE0  EF29  F016         	goto	l3520
  4539  002BE4                     u3310:
  4540  002BE4                     
  4541                           ; BSR set to: 0
  4542                           ;buttons.c: 50:                 stateRA5 = 0;
  4543  002BE4  0E00               	movlw	0
  4544  002BE6  6FC2               	movwf	_stateRA5& (0+255),b
  4545  002BE8  EF29  F016         	goto	l3520
  4546  002BEC                     l3508:
  4547  002BEC  0100               	movlb	0	; () banked
  4548  002BEE  51C2               	movf	_stateRA5& (0+255),w,b
  4549  002BF0  6F70               	movwf	??_handleButton& (0+255),b
  4550  002BF2  6B71               	clrf	(??_handleButton+1)& (0+255),b
  4551                           
  4552                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4553                           ; Switch size 1, requested type "simple"
  4554                           ; Number of cases is 1, Range of values is 0 to 0
  4555                           ; switch strategies available:
  4556                           ; Name         Instructions Cycles
  4557                           ; simple_byte            4     3 (average)
  4558                           ;	Chosen strategy is simple_byte
  4559  002BF4  5171               	movf	(??_handleButton+1)& (0+255),w,b
  4560  002BF6  0A00               	xorlw	0	; case 0
  4561  002BF8  B4D8               	btfsc	status,2,c
  4562  002BFA  EF01  F016         	goto	l3914
  4563  002BFE  EF29  F016         	goto	l3520
  4564  002C02                     l3914:
  4565                           
  4566                           ; BSR set to: 0
  4567                           ; Switch size 1, requested type "simple"
  4568                           ; Number of cases is 2, Range of values is 0 to 1
  4569                           ; switch strategies available:
  4570                           ; Name         Instructions Cycles
  4571                           ; simple_byte            7     4 (average)
  4572                           ;	Chosen strategy is simple_byte
  4573  002C02  5170               	movf	??_handleButton& (0+255),w,b
  4574  002C04  0A00               	xorlw	0	; case 0
  4575  002C06  B4D8               	btfsc	status,2,c
  4576  002C08  EFD9  F015         	goto	l3498
  4577  002C0C  0A01               	xorlw	1	; case 1
  4578  002C0E  B4D8               	btfsc	status,2,c
  4579  002C10  EFE9  F015         	goto	l3502
  4580  002C14  EF29  F016         	goto	l3520
  4581  002C18                     l3510:
  4582                           
  4583                           ; BSR set to: 0
  4584                           ;buttons.c: 55:             if(checkRB0 == 2) {
  4585  002C18  0E02               	movlw	2
  4586  002C1A  1974               	xorwf	handleButton@checkRB0& (0+255),w,b
  4587  002C1C  1175               	iorwf	(handleButton@checkRB0+1)& (0+255),w,b
  4588  002C1E  A4D8               	btfss	status,2,c
  4589  002C20  EF14  F016         	goto	u3321
  4590  002C24  EF16  F016         	goto	u3320
  4591  002C28                     u3321:
  4592  002C28  EF3E  F016         	goto	l445
  4593  002C2C                     u3320:
  4594  002C2C                     
  4595                           ; BSR set to: 0
  4596                           ;buttons.c: 56:                 stateRB0 = 1;
  4597  002C2C  0E01               	movlw	1
  4598  002C2E  6FC1               	movwf	_stateRB0& (0+255),b
  4599                           
  4600                           ;buttons.c: 57:                 RB0_pressed = 1;
  4601  002C30  0E01               	movlw	1
  4602  002C32  6FC5               	movwf	_RB0_pressed& (0+255),b
  4603  002C34  EF3E  F016         	goto	l445
  4604  002C38                     l3514:
  4605                           
  4606                           ; BSR set to: 0
  4607                           ;buttons.c: 61:             if(checkRB0 == 1)
  4608  002C38  0574               	decf	handleButton@checkRB0& (0+255),w,b
  4609  002C3A  1175               	iorwf	(handleButton@checkRB0+1)& (0+255),w,b
  4610  002C3C  A4D8               	btfss	status,2,c
  4611  002C3E  EF23  F016         	goto	u3331
  4612  002C42  EF25  F016         	goto	u3330
  4613  002C46                     u3331:
  4614  002C46  EF3E  F016         	goto	l445
  4615  002C4A                     u3330:
  4616  002C4A                     
  4617                           ; BSR set to: 0
  4618                           ;buttons.c: 62:                 stateRB0 = 0;
  4619  002C4A  0E00               	movlw	0
  4620  002C4C  6FC1               	movwf	_stateRB0& (0+255),b
  4621  002C4E  EF3E  F016         	goto	l445
  4622  002C52                     l3520:
  4623                           
  4624                           ; BSR set to: 0
  4625  002C52  51C1               	movf	_stateRB0& (0+255),w,b
  4626  002C54  6F70               	movwf	??_handleButton& (0+255),b
  4627  002C56  6B71               	clrf	(??_handleButton+1)& (0+255),b
  4628                           
  4629                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4630                           ; Switch size 1, requested type "simple"
  4631                           ; Number of cases is 1, Range of values is 0 to 0
  4632                           ; switch strategies available:
  4633                           ; Name         Instructions Cycles
  4634                           ; simple_byte            4     3 (average)
  4635                           ;	Chosen strategy is simple_byte
  4636  002C58  5171               	movf	(??_handleButton+1)& (0+255),w,b
  4637  002C5A  0A00               	xorlw	0	; case 0
  4638  002C5C  B4D8               	btfsc	status,2,c
  4639  002C5E  EF33  F016         	goto	l3916
  4640  002C62  EF3E  F016         	goto	l445
  4641  002C66                     l3916:
  4642                           
  4643                           ; BSR set to: 0
  4644                           ; Switch size 1, requested type "simple"
  4645                           ; Number of cases is 2, Range of values is 0 to 1
  4646                           ; switch strategies available:
  4647                           ; Name         Instructions Cycles
  4648                           ; simple_byte            7     4 (average)
  4649                           ;	Chosen strategy is simple_byte
  4650  002C66  5170               	movf	??_handleButton& (0+255),w,b
  4651  002C68  0A00               	xorlw	0	; case 0
  4652  002C6A  B4D8               	btfsc	status,2,c
  4653  002C6C  EF0C  F016         	goto	l3510
  4654  002C70  0A01               	xorlw	1	; case 1
  4655  002C72  B4D8               	btfsc	status,2,c
  4656  002C74  EF1C  F016         	goto	l3514
  4657  002C78  EF3E  F016         	goto	l445
  4658  002C7C                     l445:
  4659                           
  4660                           ; BSR set to: 0
  4661  002C7C  0012               	return		;funcret
  4662  002C7E                     __end_of_handleButton:
  4663                           	opt callstack 0
  4664                           
  4665 ;; *************** function _printTime_ms *****************
  4666 ;; Defined at:
  4667 ;;		line 49 in file "main.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;  data_ptr        2   14[BANK0 ] PTR void 
  4670 ;;		 -> NULL(0), 
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;  temp            1   16[BANK0 ] unsigned char 
  4673 ;;  current_time    4   18[BANK0 ] unsigned long 
  4674 ;;  i               1   17[BANK0 ] unsigned char 
  4675 ;; Return value:  Size  Location     Type
  4676 ;;                  1    wreg      void 
  4677 ;; Registers used:
  4678 ;;		wreg, status,2, status,0, cstack
  4679 ;; Tracked objects:
  4680 ;;		On entry : 0/0
  4681 ;;		On exit  : 0/0
  4682 ;;		Unchanged: 0/0
  4683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4684 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4685 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4687 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4688 ;;Total ram usage:        8 bytes
  4689 ;; Hardware stack levels used:    1
  4690 ;; Hardware stack levels required when called:   11
  4691 ;; This function calls:
  4692 ;;		_LCDPrintChar
  4693 ;;		___lldiv
  4694 ;;		___llmod
  4695 ;;		_get_time
  4696 ;; This function is called by:
  4697 ;;		_main
  4698 ;;		_selectReadyTask
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701                           
  4702                           	psect	text23
  4703  002E18                     __ptext23:
  4704                           	opt callstack 0
  4705  002E18                     _printTime_ms:
  4706                           	opt callstack 17
  4707  002E18                     
  4708                           ;main.c: 50:     tWORD current_time = get_time();
  4709  002E18  ECD5  F01D         	call	_get_time	;wreg free
  4710  002E1C  C060  F072         	movff	?_get_time,printTime_ms@current_time
  4711  002E20  C061  F073         	movff	?_get_time+1,printTime_ms@current_time+1
  4712  002E24  C062  F074         	movff	?_get_time+2,printTime_ms@current_time+2
  4713  002E28  C063  F075         	movff	?_get_time+3,printTime_ms@current_time+3
  4714  002E2C                     
  4715                           ;main.c: 51:     char i = 2;
  4716  002E2C  0E02               	movlw	2
  4717  002E2E  0100               	movlb	0	; () banked
  4718  002E30  6F71               	movwf	printTime_ms@i& (0+255),b
  4719                           
  4720                           ;main.c: 52:     while(current_time > 0 && i < 10) {
  4721  002E32  EF56  F017         	goto	l3414
  4722  002E36                     l3410:
  4723                           
  4724                           ; BSR set to: 0
  4725                           ;main.c: 53:         char temp = current_time % 10 + '0';
  4726  002E36  C072  F060         	movff	printTime_ms@current_time,___llmod@dividend
  4727  002E3A  C073  F061         	movff	printTime_ms@current_time+1,___llmod@dividend+1
  4728  002E3E  C074  F062         	movff	printTime_ms@current_time+2,___llmod@dividend+2
  4729  002E42  C075  F063         	movff	printTime_ms@current_time+3,___llmod@dividend+3
  4730  002E46  0E0A               	movlw	10
  4731  002E48  6F64               	movwf	___llmod@divisor& (0+255),b
  4732  002E4A  0E00               	movlw	0
  4733  002E4C  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  4734  002E4E  0E00               	movlw	0
  4735  002E50  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  4736  002E52  0E00               	movlw	0
  4737  002E54  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  4738  002E56  EC53  F01A         	call	___llmod	;wreg free
  4739  002E5A  0100               	movlb	0	; () banked
  4740  002E5C  5160               	movf	?___llmod& (0+255),w,b
  4741  002E5E  0F30               	addlw	48
  4742  002E60  6F70               	movwf	printTime_ms@temp& (0+255),b
  4743                           
  4744                           ;main.c: 54:         LCDPrintChar(0, 15 - i, temp);
  4745  002E62  5171               	movf	printTime_ms@i& (0+255),w,b
  4746  002E64  080F               	sublw	15
  4747  002E66  6F6B               	movwf	LCDPrintChar@pos& (0+255),b
  4748  002E68  C070  F06C         	movff	printTime_ms@temp,LCDPrintChar@ch
  4749  002E6C  0E00               	movlw	0
  4750  002E6E  EC9D  F01C         	call	_LCDPrintChar
  4751                           
  4752                           ;main.c: 55:         current_time/= 10;
  4753  002E72  C072  F060         	movff	printTime_ms@current_time,___lldiv@dividend
  4754  002E76  C073  F061         	movff	printTime_ms@current_time+1,___lldiv@dividend+1
  4755  002E7A  C074  F062         	movff	printTime_ms@current_time+2,___lldiv@dividend+2
  4756  002E7E  C075  F063         	movff	printTime_ms@current_time+3,___lldiv@dividend+3
  4757  002E82  0E0A               	movlw	10
  4758  002E84  0100               	movlb	0	; () banked
  4759  002E86  6F64               	movwf	___lldiv@divisor& (0+255),b
  4760  002E88  0E00               	movlw	0
  4761  002E8A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  4762  002E8C  0E00               	movlw	0
  4763  002E8E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  4764  002E90  0E00               	movlw	0
  4765  002E92  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  4766  002E94  EC1C  F019         	call	___lldiv	;wreg free
  4767  002E98  C060  F072         	movff	?___lldiv,printTime_ms@current_time
  4768  002E9C  C061  F073         	movff	?___lldiv+1,printTime_ms@current_time+1
  4769  002EA0  C062  F074         	movff	?___lldiv+2,printTime_ms@current_time+2
  4770  002EA4  C063  F075         	movff	?___lldiv+3,printTime_ms@current_time+3
  4771  002EA8                     
  4772                           ;main.c: 56:         i++;
  4773  002EA8  0100               	movlb	0	; () banked
  4774  002EAA  2B71               	incf	printTime_ms@i& (0+255),f,b
  4775  002EAC                     l3414:
  4776                           
  4777                           ; BSR set to: 0
  4778                           ;main.c: 52:     while(current_time > 0 && i < 10) {
  4779  002EAC  5172               	movf	printTime_ms@current_time& (0+255),w,b
  4780  002EAE  1173               	iorwf	(printTime_ms@current_time+1)& (0+255),w,b
  4781  002EB0  1174               	iorwf	(printTime_ms@current_time+2)& (0+255),w,b
  4782  002EB2  1175               	iorwf	(printTime_ms@current_time+3)& (0+255),w,b
  4783  002EB4  B4D8               	btfsc	status,2,c
  4784  002EB6  EF5F  F017         	goto	u3161
  4785  002EBA  EF61  F017         	goto	u3160
  4786  002EBE                     u3161:
  4787  002EBE  EF69  F017         	goto	l58
  4788  002EC2                     u3160:
  4789  002EC2                     
  4790                           ; BSR set to: 0
  4791  002EC2  0E09               	movlw	9
  4792  002EC4  6571               	cpfsgt	printTime_ms@i& (0+255),b
  4793  002EC6  EF67  F017         	goto	u3171
  4794  002ECA  EF69  F017         	goto	u3170
  4795  002ECE                     u3171:
  4796  002ECE  EF1B  F017         	goto	l3410
  4797  002ED2                     u3170:
  4798  002ED2                     l58:
  4799                           
  4800                           ; BSR set to: 0
  4801  002ED2  0012               	return		;funcret
  4802  002ED4                     __end_of_printTime_ms:
  4803                           	opt callstack 0
  4804                           
  4805 ;; *************** function _get_time *****************
  4806 ;; Defined at:
  4807 ;;		line 34 in file "clock.c"
  4808 ;; Parameters:    Size  Location     Type
  4809 ;;		None
  4810 ;; Auto vars:     Size  Location     Type
  4811 ;;		None
  4812 ;; Return value:  Size  Location     Type
  4813 ;;                  4    0[BANK0 ] unsigned long 
  4814 ;; Registers used:
  4815 ;;		None
  4816 ;; Tracked objects:
  4817 ;;		On entry : 0/0
  4818 ;;		On exit  : 0/0
  4819 ;;		Unchanged: 0/0
  4820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4821 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4824 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4825 ;;Total ram usage:        4 bytes
  4826 ;; Hardware stack levels used:    1
  4827 ;; Hardware stack levels required when called:    6
  4828 ;; This function calls:
  4829 ;;		Nothing
  4830 ;; This function is called by:
  4831 ;;		_printTime_ms
  4832 ;; This function uses a non-reentrant model
  4833 ;;
  4834                           
  4835                           	psect	text24
  4836  003BAA                     __ptext24:
  4837                           	opt callstack 0
  4838  003BAA                     _get_time:
  4839                           	opt callstack 21
  4840  003BAA                     
  4841                           ;clock.c: 35:     return time_ms;
  4842  003BAA  C0B9  F060         	movff	_time_ms,?_get_time
  4843  003BAE  C0BA  F061         	movff	_time_ms+1,?_get_time+1
  4844  003BB2  C0BB  F062         	movff	_time_ms+2,?_get_time+2
  4845  003BB6  C0BC  F063         	movff	_time_ms+3,?_get_time+3
  4846  003BBA  0012               	return		;funcret
  4847  003BBC                     __end_of_get_time:
  4848                           	opt callstack 0
  4849                           
  4850 ;; *************** function ___llmod *****************
  4851 ;; Defined at:
  4852 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\llmod.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;  dividend        4    0[BANK0 ] unsigned long 
  4855 ;;  divisor         4    4[BANK0 ] unsigned long 
  4856 ;; Auto vars:     Size  Location     Type
  4857 ;;  counter         1    8[BANK0 ] unsigned char 
  4858 ;; Return value:  Size  Location     Type
  4859 ;;                  4    0[BANK0 ] unsigned long 
  4860 ;; Registers used:
  4861 ;;		wreg, status,2, status,0
  4862 ;; Tracked objects:
  4863 ;;		On entry : 0/0
  4864 ;;		On exit  : 0/0
  4865 ;;		Unchanged: 0/0
  4866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4867 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4868 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4870 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4871 ;;Total ram usage:        9 bytes
  4872 ;; Hardware stack levels used:    1
  4873 ;; Hardware stack levels required when called:    6
  4874 ;; This function calls:
  4875 ;;		Nothing
  4876 ;; This function is called by:
  4877 ;;		_printTime_ms
  4878 ;; This function uses a non-reentrant model
  4879 ;;
  4880                           
  4881                           	psect	text25
  4882  0034A6                     __ptext25:
  4883                           	opt callstack 0
  4884  0034A6                     ___llmod:
  4885                           	opt callstack 21
  4886  0034A6  0100               	movlb	0	; () banked
  4887  0034A8  5164               	movf	___llmod@divisor& (0+255),w,b
  4888  0034AA  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  4889  0034AC  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  4890  0034AE  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  4891  0034B0  B4D8               	btfsc	status,2,c
  4892  0034B2  EF5D  F01A         	goto	u3031
  4893  0034B6  EF5F  F01A         	goto	u3030
  4894  0034BA                     u3031:
  4895  0034BA  EF8F  F01A         	goto	l1011
  4896  0034BE                     u3030:
  4897  0034BE                     
  4898                           ; BSR set to: 0
  4899  0034BE  0E01               	movlw	1
  4900  0034C0  6F68               	movwf	___llmod@counter& (0+255),b
  4901  0034C2  EF69  F01A         	goto	l3346
  4902  0034C6                     l3344:
  4903                           
  4904                           ; BSR set to: 0
  4905  0034C6  90D8               	bcf	status,0,c
  4906  0034C8  3764               	rlcf	___llmod@divisor& (0+255),f,b
  4907  0034CA  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  4908  0034CC  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  4909  0034CE  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  4910  0034D0  2B68               	incf	___llmod@counter& (0+255),f,b
  4911  0034D2                     l3346:
  4912                           
  4913                           ; BSR set to: 0
  4914  0034D2  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
  4915  0034D4  EF6E  F01A         	goto	u3041
  4916  0034D8  EF70  F01A         	goto	u3040
  4917  0034DC                     u3041:
  4918  0034DC  EF63  F01A         	goto	l3344
  4919  0034E0                     u3040:
  4920  0034E0                     l3348:
  4921                           
  4922                           ; BSR set to: 0
  4923  0034E0  5164               	movf	___llmod@divisor& (0+255),w,b
  4924  0034E2  5D60               	subwf	___llmod@dividend& (0+255),w,b
  4925  0034E4  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  4926  0034E6  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  4927  0034E8  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  4928  0034EA  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  4929  0034EC  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  4930  0034EE  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  4931  0034F0  A0D8               	btfss	status,0,c
  4932  0034F2  EF7D  F01A         	goto	u3051
  4933  0034F6  EF7F  F01A         	goto	u3050
  4934  0034FA                     u3051:
  4935  0034FA  EF87  F01A         	goto	l3352
  4936  0034FE                     u3050:
  4937  0034FE                     
  4938                           ; BSR set to: 0
  4939  0034FE  5164               	movf	___llmod@divisor& (0+255),w,b
  4940  003500  5F60               	subwf	___llmod@dividend& (0+255),f,b
  4941  003502  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  4942  003504  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  4943  003506  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  4944  003508  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  4945  00350A  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  4946  00350C  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  4947  00350E                     l3352:
  4948                           
  4949                           ; BSR set to: 0
  4950  00350E  90D8               	bcf	status,0,c
  4951  003510  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  4952  003512  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  4953  003514  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  4954  003516  3364               	rrcf	___llmod@divisor& (0+255),f,b
  4955  003518                     
  4956                           ; BSR set to: 0
  4957  003518  2F68               	decfsz	___llmod@counter& (0+255),f,b
  4958  00351A  EF70  F01A         	goto	l3348
  4959  00351E                     l1011:
  4960                           
  4961                           ; BSR set to: 0
  4962  00351E  C060  F060         	movff	___llmod@dividend,?___llmod
  4963  003522  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
  4964  003526  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
  4965  00352A  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
  4966  00352E                     
  4967                           ; BSR set to: 0
  4968  00352E  0012               	return		;funcret
  4969  003530                     __end_of___llmod:
  4970                           	opt callstack 0
  4971                           
  4972 ;; *************** function ___lldiv *****************
  4973 ;; Defined at:
  4974 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
  4975 ;; Parameters:    Size  Location     Type
  4976 ;;  dividend        4    0[BANK0 ] unsigned long 
  4977 ;;  divisor         4    4[BANK0 ] unsigned long 
  4978 ;; Auto vars:     Size  Location     Type
  4979 ;;  quotient        4    8[BANK0 ] unsigned long 
  4980 ;;  counter         1   12[BANK0 ] unsigned char 
  4981 ;; Return value:  Size  Location     Type
  4982 ;;                  4    0[BANK0 ] unsigned long 
  4983 ;; Registers used:
  4984 ;;		wreg, status,2, status,0
  4985 ;; Tracked objects:
  4986 ;;		On entry : 0/0
  4987 ;;		On exit  : 0/0
  4988 ;;		Unchanged: 0/0
  4989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4990 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4991 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4993 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4994 ;;Total ram usage:       13 bytes
  4995 ;; Hardware stack levels used:    1
  4996 ;; Hardware stack levels required when called:    6
  4997 ;; This function calls:
  4998 ;;		Nothing
  4999 ;; This function is called by:
  5000 ;;		_printTime_ms
  5001 ;; This function uses a non-reentrant model
  5002 ;;
  5003                           
  5004                           	psect	text26
  5005  003238                     __ptext26:
  5006                           	opt callstack 0
  5007  003238                     ___lldiv:
  5008                           	opt callstack 21
  5009  003238  0E00               	movlw	0
  5010  00323A  0100               	movlb	0	; () banked
  5011  00323C  6F68               	movwf	___lldiv@quotient& (0+255),b
  5012  00323E  0E00               	movlw	0
  5013  003240  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
  5014  003242  0E00               	movlw	0
  5015  003244  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
  5016  003246  0E00               	movlw	0
  5017  003248  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
  5018  00324A                     
  5019                           ; BSR set to: 0
  5020  00324A  5164               	movf	___lldiv@divisor& (0+255),w,b
  5021  00324C  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  5022  00324E  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  5023  003250  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  5024  003252  B4D8               	btfsc	status,2,c
  5025  003254  EF2E  F019         	goto	u2651
  5026  003258  EF30  F019         	goto	u2650
  5027  00325C                     u2651:
  5028  00325C  EF66  F019         	goto	l618
  5029  003260                     u2650:
  5030  003260                     
  5031                           ; BSR set to: 0
  5032  003260  0E01               	movlw	1
  5033  003262  6F6C               	movwf	___lldiv@counter& (0+255),b
  5034  003264  EF3A  F019         	goto	l3086
  5035  003268                     l3084:
  5036                           
  5037                           ; BSR set to: 0
  5038  003268  90D8               	bcf	status,0,c
  5039  00326A  3764               	rlcf	___lldiv@divisor& (0+255),f,b
  5040  00326C  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  5041  00326E  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  5042  003270  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  5043  003272  2B6C               	incf	___lldiv@counter& (0+255),f,b
  5044  003274                     l3086:
  5045                           
  5046                           ; BSR set to: 0
  5047  003274  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  5048  003276  EF3F  F019         	goto	u2661
  5049  00327A  EF41  F019         	goto	u2660
  5050  00327E                     u2661:
  5051  00327E  EF34  F019         	goto	l3084
  5052  003282                     u2660:
  5053  003282                     l3088:
  5054                           
  5055                           ; BSR set to: 0
  5056  003282  90D8               	bcf	status,0,c
  5057  003284  3768               	rlcf	___lldiv@quotient& (0+255),f,b
  5058  003286  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  5059  003288  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  5060  00328A  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  5061  00328C                     
  5062                           ; BSR set to: 0
  5063  00328C  5164               	movf	___lldiv@divisor& (0+255),w,b
  5064  00328E  5D60               	subwf	___lldiv@dividend& (0+255),w,b
  5065  003290  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  5066  003292  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  5067  003294  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  5068  003296  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  5069  003298  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  5070  00329A  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  5071  00329C  A0D8               	btfss	status,0,c
  5072  00329E  EF53  F019         	goto	u2671
  5073  0032A2  EF55  F019         	goto	u2670
  5074  0032A6                     u2671:
  5075  0032A6  EF5E  F019         	goto	l3096
  5076  0032AA                     u2670:
  5077  0032AA                     
  5078                           ; BSR set to: 0
  5079  0032AA  5164               	movf	___lldiv@divisor& (0+255),w,b
  5080  0032AC  5F60               	subwf	___lldiv@dividend& (0+255),f,b
  5081  0032AE  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  5082  0032B0  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  5083  0032B2  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  5084  0032B4  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  5085  0032B6  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  5086  0032B8  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  5087  0032BA                     
  5088                           ; BSR set to: 0
  5089  0032BA  8168               	bsf	___lldiv@quotient& (0+255),0,b
  5090  0032BC                     l3096:
  5091                           
  5092                           ; BSR set to: 0
  5093  0032BC  90D8               	bcf	status,0,c
  5094  0032BE  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  5095  0032C0  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  5096  0032C2  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  5097  0032C4  3364               	rrcf	___lldiv@divisor& (0+255),f,b
  5098  0032C6                     
  5099                           ; BSR set to: 0
  5100  0032C6  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
  5101  0032C8  EF41  F019         	goto	l3088
  5102  0032CC                     l618:
  5103                           
  5104                           ; BSR set to: 0
  5105  0032CC  C068  F060         	movff	___lldiv@quotient,?___lldiv
  5106  0032D0  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
  5107  0032D4  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
  5108  0032D8  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
  5109  0032DC                     
  5110                           ; BSR set to: 0
  5111  0032DC  0012               	return		;funcret
  5112  0032DE                     __end_of___lldiv:
  5113                           	opt callstack 0
  5114                           
  5115 ;; *************** function _printTempAndHumid *****************
  5116 ;; Defined at:
  5117 ;;		line 60 in file "main.c"
  5118 ;; Parameters:    Size  Location     Type
  5119 ;;		None
  5120 ;; Auto vars:     Size  Location     Type
  5121 ;;  humid           2   49[BANK0 ] int 
  5122 ;;  temp            2   47[BANK0 ] int 
  5123 ;; Return value:  Size  Location     Type
  5124 ;;                  1    wreg      void 
  5125 ;; Registers used:
  5126 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5127 ;; Tracked objects:
  5128 ;;		On entry : 0/0
  5129 ;;		On exit  : 0/0
  5130 ;;		Unchanged: 0/0
  5131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5133 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5135 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5136 ;;Total ram usage:       12 bytes
  5137 ;; Hardware stack levels used:    1
  5138 ;; Hardware stack levels required when called:   11
  5139 ;; This function calls:
  5140 ;;		_LCDPrint
  5141 ;;		_LCDPrintChar
  5142 ;;		___awdiv
  5143 ;;		___awmod
  5144 ;;		___fleq
  5145 ;;		___flmul
  5146 ;;		___fltol
  5147 ;; This function is called by:
  5148 ;;		_main
  5149 ;;		_selectReadyTask
  5150 ;; This function uses a non-reentrant model
  5151 ;;
  5152                           
  5153                           	psect	text27
  5154  002150                     __ptext27:
  5155                           	opt callstack 0
  5156  002150                     _printTempAndHumid:
  5157                           	opt callstack 17
  5158  002150                     
  5159                           ;main.c: 61:     LCDPrint(1, 0, "T:");
  5160  002150  0E00               	movlw	0
  5161  002152  0100               	movlb	0	; () banked
  5162  002154  6F6B               	movwf	LCDPrint@pos& (0+255),b
  5163  002156  0E09               	movlw	low STR_1
  5164  002158  6F6C               	movwf	LCDPrint@ptr& (0+255),b
  5165  00215A  0E10               	movlw	high STR_1
  5166  00215C  6F6D               	movwf	(LCDPrint@ptr+1)& (0+255),b
  5167  00215E  0E01               	movlw	1
  5168  002160  EC1A  F01C         	call	_LCDPrint
  5169                           
  5170                           ;main.c: 62:     LCDPrint(1, 8, "H:");
  5171  002164  0E08               	movlw	8
  5172  002166  0100               	movlb	0	; () banked
  5173  002168  6F6B               	movwf	LCDPrint@pos& (0+255),b
  5174  00216A  0E06               	movlw	low STR_2
  5175  00216C  6F6C               	movwf	LCDPrint@ptr& (0+255),b
  5176  00216E  0E10               	movlw	high STR_2
  5177  002170  6F6D               	movwf	(LCDPrint@ptr+1)& (0+255),b
  5178  002172  0E01               	movlw	1
  5179  002174  EC1A  F01C         	call	_LCDPrint
  5180  002178                     
  5181                           ;main.c: 63:     int temp = (temperature_value == 209) ? 0 : 110 * temperature_value;
  5182  002178  C0CB  F060         	movff	_temperature_value,___fleq@ff1
  5183  00217C  C0CC  F061         	movff	_temperature_value+1,___fleq@ff1+1
  5184  002180  C0CD  F062         	movff	_temperature_value+2,___fleq@ff1+2
  5185  002184  C0CE  F063         	movff	_temperature_value+3,___fleq@ff1+3
  5186  002188  0E00               	movlw	0
  5187  00218A  0100               	movlb	0	; () banked
  5188  00218C  6F64               	movwf	___fleq@ff2& (0+255),b
  5189  00218E  0E00               	movlw	0
  5190  002190  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  5191  002192  0E51               	movlw	81
  5192  002194  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  5193  002196  0E43               	movlw	67
  5194  002198  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  5195  00219A  EC1B  F018         	call	___fleq	;wreg free
  5196  00219E  0100               	movlb	0	; () banked
  5197  0021A0  B0D8               	btfsc	status,0,c
  5198  0021A2  EFD5  F010         	goto	u3181
  5199  0021A6  EFD7  F010         	goto	u3180
  5200  0021AA                     u3181:
  5201  0021AA  EFF3  F010         	goto	l3424
  5202  0021AE                     u3180:
  5203  0021AE                     
  5204                           ; BSR set to: 0
  5205  0021AE  C0CB  F06E         	movff	_temperature_value,___flmul@b
  5206  0021B2  C0CC  F06F         	movff	_temperature_value+1,___flmul@b+1
  5207  0021B6  C0CD  F070         	movff	_temperature_value+2,___flmul@b+2
  5208  0021BA  C0CE  F071         	movff	_temperature_value+3,___flmul@b+3
  5209  0021BE  0E00               	movlw	0
  5210  0021C0  6F72               	movwf	___flmul@a& (0+255),b
  5211  0021C2  0E00               	movlw	0
  5212  0021C4  6F73               	movwf	(___flmul@a+1)& (0+255),b
  5213  0021C6  0EDC               	movlw	220
  5214  0021C8  6F74               	movwf	(___flmul@a+2)& (0+255),b
  5215  0021CA  0E42               	movlw	66
  5216  0021CC  6F75               	movwf	(___flmul@a+3)& (0+255),b
  5217  0021CE  ECC2  F00C         	call	___flmul	;wreg free
  5218  0021D2  C06E  F087         	movff	?___flmul,_printTempAndHumid$115
  5219  0021D6  C06F  F088         	movff	?___flmul+1,_printTempAndHumid$115+1
  5220  0021DA  C070  F089         	movff	?___flmul+2,_printTempAndHumid$115+2
  5221  0021DE  C071  F08A         	movff	?___flmul+3,_printTempAndHumid$115+3
  5222  0021E2  EFFB  F010         	goto	l3426
  5223  0021E6                     l3424:
  5224                           
  5225                           ; BSR set to: 0
  5226  0021E6  0E00               	movlw	0
  5227  0021E8  6F87               	movwf	_printTempAndHumid$115& (0+255),b
  5228  0021EA  0E00               	movlw	0
  5229  0021EC  6F88               	movwf	(_printTempAndHumid$115+1)& (0+255),b
  5230  0021EE  0E00               	movlw	0
  5231  0021F0  6F89               	movwf	(_printTempAndHumid$115+2)& (0+255),b
  5232  0021F2  0E00               	movlw	0
  5233  0021F4  6F8A               	movwf	(_printTempAndHumid$115+3)& (0+255),b
  5234  0021F6                     l3426:
  5235  0021F6  C087  F060         	movff	_printTempAndHumid$115,___fltol@f1
  5236  0021FA  C088  F061         	movff	_printTempAndHumid$115+1,___fltol@f1+1
  5237  0021FE  C089  F062         	movff	_printTempAndHumid$115+2,___fltol@f1+2
  5238  002202  C08A  F063         	movff	_printTempAndHumid$115+3,___fltol@f1+3
  5239  002206  EC47  F015         	call	___fltol	;wreg free
  5240  00220A  C060  F08F         	movff	?___fltol,printTempAndHumid@temp
  5241  00220E  C061  F090         	movff	?___fltol+1,printTempAndHumid@temp+1
  5242  002212                     
  5243                           ;main.c: 64:     int humid = (humidity_value == 209) ? 0 : 10 * humidity_value;
  5244  002212  C0C7  F060         	movff	_humidity_value,___fleq@ff1
  5245  002216  C0C8  F061         	movff	_humidity_value+1,___fleq@ff1+1
  5246  00221A  C0C9  F062         	movff	_humidity_value+2,___fleq@ff1+2
  5247  00221E  C0CA  F063         	movff	_humidity_value+3,___fleq@ff1+3
  5248  002222  0E00               	movlw	0
  5249  002224  0100               	movlb	0	; () banked
  5250  002226  6F64               	movwf	___fleq@ff2& (0+255),b
  5251  002228  0E00               	movlw	0
  5252  00222A  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  5253  00222C  0E51               	movlw	81
  5254  00222E  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  5255  002230  0E43               	movlw	67
  5256  002232  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  5257  002234  EC1B  F018         	call	___fleq	;wreg free
  5258  002238  0100               	movlb	0	; () banked
  5259  00223A  B0D8               	btfsc	status,0,c
  5260  00223C  EF22  F011         	goto	u3191
  5261  002240  EF24  F011         	goto	u3190
  5262  002244                     u3191:
  5263  002244  EF40  F011         	goto	l3432
  5264  002248                     u3190:
  5265  002248                     
  5266                           ; BSR set to: 0
  5267  002248  C0C7  F06E         	movff	_humidity_value,___flmul@b
  5268  00224C  C0C8  F06F         	movff	_humidity_value+1,___flmul@b+1
  5269  002250  C0C9  F070         	movff	_humidity_value+2,___flmul@b+2
  5270  002254  C0CA  F071         	movff	_humidity_value+3,___flmul@b+3
  5271  002258  0E00               	movlw	0
  5272  00225A  6F72               	movwf	___flmul@a& (0+255),b
  5273  00225C  0E00               	movlw	0
  5274  00225E  6F73               	movwf	(___flmul@a+1)& (0+255),b
  5275  002260  0E20               	movlw	32
  5276  002262  6F74               	movwf	(___flmul@a+2)& (0+255),b
  5277  002264  0E41               	movlw	65
  5278  002266  6F75               	movwf	(___flmul@a+3)& (0+255),b
  5279  002268  ECC2  F00C         	call	___flmul	;wreg free
  5280  00226C  C06E  F08B         	movff	?___flmul,_printTempAndHumid$117
  5281  002270  C06F  F08C         	movff	?___flmul+1,_printTempAndHumid$117+1
  5282  002274  C070  F08D         	movff	?___flmul+2,_printTempAndHumid$117+2
  5283  002278  C071  F08E         	movff	?___flmul+3,_printTempAndHumid$117+3
  5284  00227C  EF48  F011         	goto	l3434
  5285  002280                     l3432:
  5286                           
  5287                           ; BSR set to: 0
  5288  002280  0E00               	movlw	0
  5289  002282  6F8B               	movwf	_printTempAndHumid$117& (0+255),b
  5290  002284  0E00               	movlw	0
  5291  002286  6F8C               	movwf	(_printTempAndHumid$117+1)& (0+255),b
  5292  002288  0E00               	movlw	0
  5293  00228A  6F8D               	movwf	(_printTempAndHumid$117+2)& (0+255),b
  5294  00228C  0E00               	movlw	0
  5295  00228E  6F8E               	movwf	(_printTempAndHumid$117+3)& (0+255),b
  5296  002290                     l3434:
  5297  002290  C08B  F060         	movff	_printTempAndHumid$117,___fltol@f1
  5298  002294  C08C  F061         	movff	_printTempAndHumid$117+1,___fltol@f1+1
  5299  002298  C08D  F062         	movff	_printTempAndHumid$117+2,___fltol@f1+2
  5300  00229C  C08E  F063         	movff	_printTempAndHumid$117+3,___fltol@f1+3
  5301  0022A0  EC47  F015         	call	___fltol	;wreg free
  5302  0022A4  C060  F091         	movff	?___fltol,printTempAndHumid@humid
  5303  0022A8  C061  F092         	movff	?___fltol+1,printTempAndHumid@humid+1
  5304  0022AC                     
  5305                           ;main.c: 65:     LCDPrintChar(1, 2, temp / 100);
  5306  0022AC  0E02               	movlw	2
  5307  0022AE  0100               	movlb	0	; () banked
  5308  0022B0  6F6B               	movwf	LCDPrintChar@pos& (0+255),b
  5309  0022B2  C08F  F060         	movff	printTempAndHumid@temp,___awdiv@dividend
  5310  0022B6  C090  F061         	movff	printTempAndHumid@temp+1,___awdiv@dividend+1
  5311  0022BA  0E00               	movlw	0
  5312  0022BC  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  5313  0022BE  0E64               	movlw	100
  5314  0022C0  6F62               	movwf	___awdiv@divisor& (0+255),b
  5315  0022C2  ECA9  F016         	call	___awdiv	;wreg free
  5316  0022C6  0100               	movlb	0	; () banked
  5317  0022C8  5160               	movf	?___awdiv& (0+255),w,b
  5318  0022CA  6F6C               	movwf	LCDPrintChar@ch& (0+255),b
  5319  0022CC  0E01               	movlw	1
  5320  0022CE  EC9D  F01C         	call	_LCDPrintChar
  5321  0022D2                     
  5322                           ;main.c: 66:     temp /= 10;
  5323  0022D2  C08F  F060         	movff	printTempAndHumid@temp,___awdiv@dividend
  5324  0022D6  C090  F061         	movff	printTempAndHumid@temp+1,___awdiv@dividend+1
  5325  0022DA  0E00               	movlw	0
  5326  0022DC  0100               	movlb	0	; () banked
  5327  0022DE  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  5328  0022E0  0E0A               	movlw	10
  5329  0022E2  6F62               	movwf	___awdiv@divisor& (0+255),b
  5330  0022E4  ECA9  F016         	call	___awdiv	;wreg free
  5331  0022E8  C060  F08F         	movff	?___awdiv,printTempAndHumid@temp
  5332  0022EC  C061  F090         	movff	?___awdiv+1,printTempAndHumid@temp+1
  5333  0022F0                     
  5334                           ;main.c: 67:     LCDPrintChar(1, 3, temp / 10);
  5335  0022F0  0E03               	movlw	3
  5336  0022F2  0100               	movlb	0	; () banked
  5337  0022F4  6F6B               	movwf	LCDPrintChar@pos& (0+255),b
  5338  0022F6  C08F  F060         	movff	printTempAndHumid@temp,___awdiv@dividend
  5339  0022FA  C090  F061         	movff	printTempAndHumid@temp+1,___awdiv@dividend+1
  5340  0022FE  0E00               	movlw	0
  5341  002300  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  5342  002302  0E0A               	movlw	10
  5343  002304  6F62               	movwf	___awdiv@divisor& (0+255),b
  5344  002306  ECA9  F016         	call	___awdiv	;wreg free
  5345  00230A  0100               	movlb	0	; () banked
  5346  00230C  5160               	movf	?___awdiv& (0+255),w,b
  5347  00230E  6F6C               	movwf	LCDPrintChar@ch& (0+255),b
  5348  002310  0E01               	movlw	1
  5349  002312  EC9D  F01C         	call	_LCDPrintChar
  5350  002316                     
  5351                           ;main.c: 68:     LCDPrintChar(1, 4, temp % 10);
  5352  002316  0E04               	movlw	4
  5353  002318  0100               	movlb	0	; () banked
  5354  00231A  6F6B               	movwf	LCDPrintChar@pos& (0+255),b
  5355  00231C  C08F  F060         	movff	printTempAndHumid@temp,___awmod@dividend
  5356  002320  C090  F061         	movff	printTempAndHumid@temp+1,___awmod@dividend+1
  5357  002324  0E00               	movlw	0
  5358  002326  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  5359  002328  0E0A               	movlw	10
  5360  00232A  6F62               	movwf	___awmod@divisor& (0+255),b
  5361  00232C  EC6A  F017         	call	___awmod	;wreg free
  5362  002330  0100               	movlb	0	; () banked
  5363  002332  5160               	movf	?___awmod& (0+255),w,b
  5364  002334  6F6C               	movwf	LCDPrintChar@ch& (0+255),b
  5365  002336  0E01               	movlw	1
  5366  002338  EC9D  F01C         	call	_LCDPrintChar
  5367  00233C                     
  5368                           ;main.c: 70:     LCDPrintChar(1, 2, humid / 100);
  5369  00233C  0E02               	movlw	2
  5370  00233E  0100               	movlb	0	; () banked
  5371  002340  6F6B               	movwf	LCDPrintChar@pos& (0+255),b
  5372  002342  C091  F060         	movff	printTempAndHumid@humid,___awdiv@dividend
  5373  002346  C092  F061         	movff	printTempAndHumid@humid+1,___awdiv@dividend+1
  5374  00234A  0E00               	movlw	0
  5375  00234C  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  5376  00234E  0E64               	movlw	100
  5377  002350  6F62               	movwf	___awdiv@divisor& (0+255),b
  5378  002352  ECA9  F016         	call	___awdiv	;wreg free
  5379  002356  0100               	movlb	0	; () banked
  5380  002358  5160               	movf	?___awdiv& (0+255),w,b
  5381  00235A  6F6C               	movwf	LCDPrintChar@ch& (0+255),b
  5382  00235C  0E01               	movlw	1
  5383  00235E  EC9D  F01C         	call	_LCDPrintChar
  5384  002362                     
  5385                           ;main.c: 71:     humid /= 10;
  5386  002362  C091  F060         	movff	printTempAndHumid@humid,___awdiv@dividend
  5387  002366  C092  F061         	movff	printTempAndHumid@humid+1,___awdiv@dividend+1
  5388  00236A  0E00               	movlw	0
  5389  00236C  0100               	movlb	0	; () banked
  5390  00236E  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  5391  002370  0E0A               	movlw	10
  5392  002372  6F62               	movwf	___awdiv@divisor& (0+255),b
  5393  002374  ECA9  F016         	call	___awdiv	;wreg free
  5394  002378  C060  F091         	movff	?___awdiv,printTempAndHumid@humid
  5395  00237C  C061  F092         	movff	?___awdiv+1,printTempAndHumid@humid+1
  5396  002380                     
  5397                           ;main.c: 72:     LCDPrintChar(1, 3, humid / 10);
  5398  002380  0E03               	movlw	3
  5399  002382  0100               	movlb	0	; () banked
  5400  002384  6F6B               	movwf	LCDPrintChar@pos& (0+255),b
  5401  002386  C091  F060         	movff	printTempAndHumid@humid,___awdiv@dividend
  5402  00238A  C092  F061         	movff	printTempAndHumid@humid+1,___awdiv@dividend+1
  5403  00238E  0E00               	movlw	0
  5404  002390  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  5405  002392  0E0A               	movlw	10
  5406  002394  6F62               	movwf	___awdiv@divisor& (0+255),b
  5407  002396  ECA9  F016         	call	___awdiv	;wreg free
  5408  00239A  0100               	movlb	0	; () banked
  5409  00239C  5160               	movf	?___awdiv& (0+255),w,b
  5410  00239E  6F6C               	movwf	LCDPrintChar@ch& (0+255),b
  5411  0023A0  0E01               	movlw	1
  5412  0023A2  EC9D  F01C         	call	_LCDPrintChar
  5413  0023A6                     
  5414                           ;main.c: 73:     LCDPrintChar(1, 4, humid % 10);
  5415  0023A6  0E04               	movlw	4
  5416  0023A8  0100               	movlb	0	; () banked
  5417  0023AA  6F6B               	movwf	LCDPrintChar@pos& (0+255),b
  5418  0023AC  C091  F060         	movff	printTempAndHumid@humid,___awmod@dividend
  5419  0023B0  C092  F061         	movff	printTempAndHumid@humid+1,___awmod@dividend+1
  5420  0023B4  0E00               	movlw	0
  5421  0023B6  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  5422  0023B8  0E0A               	movlw	10
  5423  0023BA  6F62               	movwf	___awmod@divisor& (0+255),b
  5424  0023BC  EC6A  F017         	call	___awmod	;wreg free
  5425  0023C0  0100               	movlb	0	; () banked
  5426  0023C2  5160               	movf	?___awmod& (0+255),w,b
  5427  0023C4  6F6C               	movwf	LCDPrintChar@ch& (0+255),b
  5428  0023C6  0E01               	movlw	1
  5429  0023C8  EC9D  F01C         	call	_LCDPrintChar
  5430  0023CC  0012               	return		;funcret
  5431  0023CE                     __end_of_printTempAndHumid:
  5432                           	opt callstack 0
  5433                           
  5434 ;; *************** function ___fltol *****************
  5435 ;; Defined at:
  5436 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  5437 ;; Parameters:    Size  Location     Type
  5438 ;;  f1              4    0[BANK0 ] void 
  5439 ;; Auto vars:     Size  Location     Type
  5440 ;;  exp1            1    9[BANK0 ] unsigned char 
  5441 ;;  sign1           1    8[BANK0 ] unsigned char 
  5442 ;; Return value:  Size  Location     Type
  5443 ;;                  4    0[BANK0 ] long 
  5444 ;; Registers used:
  5445 ;;		wreg, status,2, status,0
  5446 ;; Tracked objects:
  5447 ;;		On entry : 0/0
  5448 ;;		On exit  : 0/0
  5449 ;;		Unchanged: 0/0
  5450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5451 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5452 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5453 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5454 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5455 ;;Total ram usage:       10 bytes
  5456 ;; Hardware stack levels used:    1
  5457 ;; Hardware stack levels required when called:    6
  5458 ;; This function calls:
  5459 ;;		Nothing
  5460 ;; This function is called by:
  5461 ;;		_printTempAndHumid
  5462 ;; This function uses a non-reentrant model
  5463 ;;
  5464                           
  5465                           	psect	text28
  5466  002A8E                     __ptext28:
  5467                           	opt callstack 0
  5468  002A8E                     ___fltol:
  5469                           	opt callstack 21
  5470  002A8E  0100               	movlb	0	; () banked
  5471  002A90  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
  5472  002A92  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
  5473  002A94  6F69               	movwf	___fltol@exp1& (0+255),b
  5474  002A96  5169               	movf	___fltol@exp1& (0+255),w,b
  5475  002A98  A4D8               	btfss	status,2,c
  5476  002A9A  EF51  F015         	goto	u2961
  5477  002A9E  EF53  F015         	goto	u2960
  5478  002AA2                     u2961:
  5479  002AA2  EF5D  F015         	goto	l3302
  5480  002AA6                     u2960:
  5481  002AA6                     l3298:
  5482                           
  5483                           ; BSR set to: 0
  5484  002AA6  0E00               	movlw	0
  5485  002AA8  6F60               	movwf	?___fltol& (0+255),b
  5486  002AAA  0E00               	movlw	0
  5487  002AAC  6F61               	movwf	(?___fltol+1)& (0+255),b
  5488  002AAE  0E00               	movlw	0
  5489  002AB0  6F62               	movwf	(?___fltol+2)& (0+255),b
  5490  002AB2  0E00               	movlw	0
  5491  002AB4  6F63               	movwf	(?___fltol+3)& (0+255),b
  5492  002AB6  EFCA  F015         	goto	l888
  5493  002ABA                     l3302:
  5494                           
  5495                           ; BSR set to: 0
  5496  002ABA  C060  F064         	movff	___fltol@f1,??___fltol
  5497  002ABE  C061  F065         	movff	___fltol@f1+1,??___fltol+1
  5498  002AC2  C062  F066         	movff	___fltol@f1+2,??___fltol+2
  5499  002AC6  C063  F067         	movff	___fltol@f1+3,??___fltol+3
  5500  002ACA  0E20               	movlw	32
  5501  002ACC  EF6D  F015         	goto	u2970
  5502  002AD0                     u2975:
  5503  002AD0  90D8               	bcf	status,0,c
  5504  002AD2  3367               	rrcf	(??___fltol+3)& (0+255),f,b
  5505  002AD4  3366               	rrcf	(??___fltol+2)& (0+255),f,b
  5506  002AD6  3365               	rrcf	(??___fltol+1)& (0+255),f,b
  5507  002AD8  3364               	rrcf	??___fltol& (0+255),f,b
  5508  002ADA                     u2970:
  5509  002ADA  2EE8               	decfsz	wreg,f,c
  5510  002ADC  EF68  F015         	goto	u2975
  5511  002AE0  5164               	movf	??___fltol& (0+255),w,b
  5512  002AE2  6F68               	movwf	___fltol@sign1& (0+255),b
  5513  002AE4                     
  5514                           ; BSR set to: 0
  5515  002AE4  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
  5516  002AE6                     
  5517                           ; BSR set to: 0
  5518  002AE6  0EFF               	movlw	255
  5519  002AE8  1760               	andwf	___fltol@f1& (0+255),f,b
  5520  002AEA  0EFF               	movlw	255
  5521  002AEC  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
  5522  002AEE  0EFF               	movlw	255
  5523  002AF0  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
  5524  002AF2  0E00               	movlw	0
  5525  002AF4  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
  5526  002AF6                     
  5527                           ; BSR set to: 0
  5528  002AF6  0E96               	movlw	150
  5529  002AF8  5F69               	subwf	___fltol@exp1& (0+255),f,b
  5530  002AFA                     
  5531                           ; BSR set to: 0
  5532  002AFA  BF69               	btfsc	___fltol@exp1& (0+255),7,b
  5533  002AFC  EF84  F015         	goto	u2980
  5534  002B00  EF82  F015         	goto	u2981
  5535  002B04                     u2981:
  5536  002B04  EF9A  F015         	goto	l3322
  5537  002B08                     u2980:
  5538  002B08                     
  5539                           ; BSR set to: 0
  5540  002B08  5169               	movf	___fltol@exp1& (0+255),w,b
  5541  002B0A  0A80               	xorlw	128
  5542  002B0C  0F97               	addlw	151
  5543  002B0E  B0D8               	btfsc	status,0,c
  5544  002B10  EF8C  F015         	goto	u2991
  5545  002B14  EF8E  F015         	goto	u2990
  5546  002B18                     u2991:
  5547  002B18  EF90  F015         	goto	l3318
  5548  002B1C                     u2990:
  5549  002B1C  EF53  F015         	goto	l3298
  5550  002B20                     l3318:
  5551                           
  5552                           ; BSR set to: 0
  5553  002B20  90D8               	bcf	status,0,c
  5554  002B22  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
  5555  002B24  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
  5556  002B26  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
  5557  002B28  3360               	rrcf	___fltol@f1& (0+255),f,b
  5558  002B2A                     
  5559                           ; BSR set to: 0
  5560  002B2A  3F69               	incfsz	___fltol@exp1& (0+255),f,b
  5561  002B2C  EF90  F015         	goto	l3318
  5562  002B30  EFB2  F015         	goto	l3332
  5563  002B34                     l3322:
  5564                           
  5565                           ; BSR set to: 0
  5566  002B34  0E1F               	movlw	31
  5567  002B36  6569               	cpfsgt	___fltol@exp1& (0+255),b
  5568  002B38  EFA0  F015         	goto	u3001
  5569  002B3C  EFA2  F015         	goto	u3000
  5570  002B40                     u3001:
  5571  002B40  EFAA  F015         	goto	l3330
  5572  002B44                     u3000:
  5573  002B44  EF53  F015         	goto	l3298
  5574  002B48                     l3328:
  5575                           
  5576                           ; BSR set to: 0
  5577  002B48  90D8               	bcf	status,0,c
  5578  002B4A  3760               	rlcf	___fltol@f1& (0+255),f,b
  5579  002B4C  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
  5580  002B4E  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
  5581  002B50  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
  5582  002B52  0769               	decf	___fltol@exp1& (0+255),f,b
  5583  002B54                     l3330:
  5584                           
  5585                           ; BSR set to: 0
  5586  002B54  5169               	movf	___fltol@exp1& (0+255),w,b
  5587  002B56  A4D8               	btfss	status,2,c
  5588  002B58  EFB0  F015         	goto	u3011
  5589  002B5C  EFB2  F015         	goto	u3010
  5590  002B60                     u3011:
  5591  002B60  EFA4  F015         	goto	l3328
  5592  002B64                     u3010:
  5593  002B64                     l3332:
  5594                           
  5595                           ; BSR set to: 0
  5596  002B64  5168               	movf	___fltol@sign1& (0+255),w,b
  5597  002B66  B4D8               	btfsc	status,2,c
  5598  002B68  EFB8  F015         	goto	u3021
  5599  002B6C  EFBA  F015         	goto	u3020
  5600  002B70                     u3021:
  5601  002B70  EFC2  F015         	goto	l3336
  5602  002B74                     u3020:
  5603  002B74                     
  5604                           ; BSR set to: 0
  5605  002B74  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
  5606  002B76  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
  5607  002B78  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
  5608  002B7A  6D60               	negf	___fltol@f1& (0+255),b
  5609  002B7C  0E00               	movlw	0
  5610  002B7E  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
  5611  002B80  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
  5612  002B82  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
  5613  002B84                     l3336:
  5614                           
  5615                           ; BSR set to: 0
  5616  002B84  C060  F060         	movff	___fltol@f1,?___fltol
  5617  002B88  C061  F061         	movff	___fltol@f1+1,?___fltol+1
  5618  002B8C  C062  F062         	movff	___fltol@f1+2,?___fltol+2
  5619  002B90  C063  F063         	movff	___fltol@f1+3,?___fltol+3
  5620  002B94                     l888:
  5621                           
  5622                           ; BSR set to: 0
  5623  002B94  0012               	return		;funcret
  5624  002B96                     __end_of___fltol:
  5625                           	opt callstack 0
  5626                           
  5627 ;; *************** function ___flmul *****************
  5628 ;; Defined at:
  5629 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  5630 ;; Parameters:    Size  Location     Type
  5631 ;;  b               4   14[BANK0 ] long 
  5632 ;;  a               4   18[BANK0 ] long 
  5633 ;; Auto vars:     Size  Location     Type
  5634 ;;  prod            4   33[BANK0 ] struct .
  5635 ;;  grs             4   27[BANK0 ] unsigned long 
  5636 ;;  temp            2   37[BANK0 ] struct .
  5637 ;;  bexp            1   32[BANK0 ] unsigned char 
  5638 ;;  aexp            1   31[BANK0 ] unsigned char 
  5639 ;;  sign            1   26[BANK0 ] unsigned char 
  5640 ;; Return value:  Size  Location     Type
  5641 ;;                  4   14[BANK0 ] unsigned char 
  5642 ;; Registers used:
  5643 ;;		wreg, status,2, status,0, prodl, prodh
  5644 ;; Tracked objects:
  5645 ;;		On entry : 0/0
  5646 ;;		On exit  : 0/0
  5647 ;;		Unchanged: 0/0
  5648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5649 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5650 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5651 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5652 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5653 ;;Total ram usage:       25 bytes
  5654 ;; Hardware stack levels used:    1
  5655 ;; Hardware stack levels required when called:    6
  5656 ;; This function calls:
  5657 ;;		Nothing
  5658 ;; This function is called by:
  5659 ;;		_printTempAndHumid
  5660 ;;		_readTempAndHumid
  5661 ;; This function uses a non-reentrant model
  5662 ;;
  5663                           
  5664                           	psect	text29
  5665  001984                     __ptext29:
  5666                           	opt callstack 0
  5667  001984                     ___flmul:
  5668                           	opt callstack 21
  5669  001984  0100               	movlb	0	; () banked
  5670  001986  5171               	movf	(___flmul@b+3)& (0+255),w,b
  5671  001988  0B80               	andlw	128
  5672  00198A  6F7A               	movwf	___flmul@sign& (0+255),b
  5673  00198C  5171               	movf	(___flmul@b+3)& (0+255),w,b
  5674  00198E  2571               	addwf	(___flmul@b+3)& (0+255),w,b
  5675  001990  6F80               	movwf	___flmul@bexp& (0+255),b
  5676  001992                     
  5677                           ; BSR set to: 0
  5678  001992  AF70               	btfss	(___flmul@b+2)& (0+255),7,b
  5679  001994  EFCE  F00C         	goto	u2681
  5680  001998  EFD0  F00C         	goto	u2680
  5681  00199C                     u2681:
  5682  00199C  EFD1  F00C         	goto	l3106
  5683  0019A0                     u2680:
  5684  0019A0                     
  5685                           ; BSR set to: 0
  5686  0019A0  8180               	bsf	___flmul@bexp& (0+255),0,b
  5687  0019A2                     l3106:
  5688                           
  5689                           ; BSR set to: 0
  5690  0019A2  5180               	movf	___flmul@bexp& (0+255),w,b
  5691  0019A4  B4D8               	btfsc	status,2,c
  5692  0019A6  EFD7  F00C         	goto	u2691
  5693  0019AA  EFD9  F00C         	goto	u2690
  5694  0019AE                     u2691:
  5695  0019AE  EFEC  F00C         	goto	l3114
  5696  0019B2                     u2690:
  5697  0019B2                     
  5698                           ; BSR set to: 0
  5699  0019B2  2980               	incf	___flmul@bexp& (0+255),w,b
  5700  0019B4  A4D8               	btfss	status,2,c
  5701  0019B6  EFDF  F00C         	goto	u2701
  5702  0019BA  EFE1  F00C         	goto	u2700
  5703  0019BE                     u2701:
  5704  0019BE  EFE9  F00C         	goto	l3112
  5705  0019C2                     u2700:
  5706  0019C2                     
  5707                           ; BSR set to: 0
  5708  0019C2  0E00               	movlw	0
  5709  0019C4  6F6E               	movwf	___flmul@b& (0+255),b
  5710  0019C6  0E00               	movlw	0
  5711  0019C8  6F6F               	movwf	(___flmul@b+1)& (0+255),b
  5712  0019CA  0E00               	movlw	0
  5713  0019CC  6F70               	movwf	(___flmul@b+2)& (0+255),b
  5714  0019CE  0E00               	movlw	0
  5715  0019D0  6F71               	movwf	(___flmul@b+3)& (0+255),b
  5716  0019D2                     l3112:
  5717                           
  5718                           ; BSR set to: 0
  5719  0019D2  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
  5720  0019D4  EFF4  F00C         	goto	l3116
  5721  0019D8                     l3114:
  5722                           
  5723                           ; BSR set to: 0
  5724  0019D8  0E00               	movlw	0
  5725  0019DA  6F6E               	movwf	___flmul@b& (0+255),b
  5726  0019DC  0E00               	movlw	0
  5727  0019DE  6F6F               	movwf	(___flmul@b+1)& (0+255),b
  5728  0019E0  0E00               	movlw	0
  5729  0019E2  6F70               	movwf	(___flmul@b+2)& (0+255),b
  5730  0019E4  0E00               	movlw	0
  5731  0019E6  6F71               	movwf	(___flmul@b+3)& (0+255),b
  5732  0019E8                     l3116:
  5733                           
  5734                           ; BSR set to: 0
  5735  0019E8  5175               	movf	(___flmul@a+3)& (0+255),w,b
  5736  0019EA  0B80               	andlw	128
  5737  0019EC  1B7A               	xorwf	___flmul@sign& (0+255),f,b
  5738  0019EE                     
  5739                           ; BSR set to: 0
  5740  0019EE  5175               	movf	(___flmul@a+3)& (0+255),w,b
  5741  0019F0  2575               	addwf	(___flmul@a+3)& (0+255),w,b
  5742  0019F2  6F7F               	movwf	___flmul@aexp& (0+255),b
  5743  0019F4                     
  5744                           ; BSR set to: 0
  5745  0019F4  AF74               	btfss	(___flmul@a+2)& (0+255),7,b
  5746  0019F6  EFFF  F00C         	goto	u2711
  5747  0019FA  EF01  F00D         	goto	u2710
  5748  0019FE                     u2711:
  5749  0019FE  EF02  F00D         	goto	l3124
  5750  001A02                     u2710:
  5751  001A02                     
  5752                           ; BSR set to: 0
  5753  001A02  817F               	bsf	___flmul@aexp& (0+255),0,b
  5754  001A04                     l3124:
  5755                           
  5756                           ; BSR set to: 0
  5757  001A04  517F               	movf	___flmul@aexp& (0+255),w,b
  5758  001A06  B4D8               	btfsc	status,2,c
  5759  001A08  EF08  F00D         	goto	u2721
  5760  001A0C  EF0A  F00D         	goto	u2720
  5761  001A10                     u2721:
  5762  001A10  EF1D  F00D         	goto	l3132
  5763  001A14                     u2720:
  5764  001A14                     
  5765                           ; BSR set to: 0
  5766  001A14  297F               	incf	___flmul@aexp& (0+255),w,b
  5767  001A16  A4D8               	btfss	status,2,c
  5768  001A18  EF10  F00D         	goto	u2731
  5769  001A1C  EF12  F00D         	goto	u2730
  5770  001A20                     u2731:
  5771  001A20  EF1A  F00D         	goto	l3130
  5772  001A24                     u2730:
  5773  001A24                     
  5774                           ; BSR set to: 0
  5775  001A24  0E00               	movlw	0
  5776  001A26  6F72               	movwf	___flmul@a& (0+255),b
  5777  001A28  0E00               	movlw	0
  5778  001A2A  6F73               	movwf	(___flmul@a+1)& (0+255),b
  5779  001A2C  0E00               	movlw	0
  5780  001A2E  6F74               	movwf	(___flmul@a+2)& (0+255),b
  5781  001A30  0E00               	movlw	0
  5782  001A32  6F75               	movwf	(___flmul@a+3)& (0+255),b
  5783  001A34                     l3130:
  5784                           
  5785                           ; BSR set to: 0
  5786  001A34  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
  5787  001A36  EF25  F00D         	goto	l1205
  5788  001A3A                     l3132:
  5789                           
  5790                           ; BSR set to: 0
  5791  001A3A  0E00               	movlw	0
  5792  001A3C  6F72               	movwf	___flmul@a& (0+255),b
  5793  001A3E  0E00               	movlw	0
  5794  001A40  6F73               	movwf	(___flmul@a+1)& (0+255),b
  5795  001A42  0E00               	movlw	0
  5796  001A44  6F74               	movwf	(___flmul@a+2)& (0+255),b
  5797  001A46  0E00               	movlw	0
  5798  001A48  6F75               	movwf	(___flmul@a+3)& (0+255),b
  5799  001A4A                     l1205:
  5800                           
  5801                           ; BSR set to: 0
  5802  001A4A  517F               	movf	___flmul@aexp& (0+255),w,b
  5803  001A4C  B4D8               	btfsc	status,2,c
  5804  001A4E  EF2B  F00D         	goto	u2741
  5805  001A52  EF2D  F00D         	goto	u2740
  5806  001A56                     u2741:
  5807  001A56  EF35  F00D         	goto	l3136
  5808  001A5A                     u2740:
  5809  001A5A                     
  5810                           ; BSR set to: 0
  5811  001A5A  5180               	movf	___flmul@bexp& (0+255),w,b
  5812  001A5C  A4D8               	btfss	status,2,c
  5813  001A5E  EF33  F00D         	goto	u2751
  5814  001A62  EF35  F00D         	goto	u2750
  5815  001A66                     u2751:
  5816  001A66  EF3F  F00D         	goto	l3140
  5817  001A6A                     u2750:
  5818  001A6A                     l3136:
  5819                           
  5820                           ; BSR set to: 0
  5821  001A6A  0E00               	movlw	0
  5822  001A6C  6F6E               	movwf	?___flmul& (0+255),b
  5823  001A6E  0E00               	movlw	0
  5824  001A70  6F6F               	movwf	(?___flmul+1)& (0+255),b
  5825  001A72  0E00               	movlw	0
  5826  001A74  6F70               	movwf	(?___flmul+2)& (0+255),b
  5827  001A76  0E00               	movlw	0
  5828  001A78  6F71               	movwf	(?___flmul+3)& (0+255),b
  5829  001A7A  EFD7  F00E         	goto	l1209
  5830  001A7E                     l3140:
  5831                           
  5832                           ; BSR set to: 0
  5833  001A7E  5174               	movf	(___flmul@a+2)& (0+255),w,b
  5834  001A80  036E               	mulwf	___flmul@b& (0+255),b
  5835  001A82  CFF3 F085          	movff	prodl,___flmul@temp
  5836  001A86  CFF4 F086          	movff	prodh,___flmul@temp+1
  5837  001A8A                     
  5838                           ; BSR set to: 0
  5839  001A8A  5185               	movf	___flmul@temp& (0+255),w,b
  5840  001A8C  6F7B               	movwf	___flmul@grs& (0+255),b
  5841  001A8E  6B7C               	clrf	(___flmul@grs+1)& (0+255),b
  5842  001A90  6B7D               	clrf	(___flmul@grs+2)& (0+255),b
  5843  001A92  6B7E               	clrf	(___flmul@grs+3)& (0+255),b
  5844  001A94                     
  5845                           ; BSR set to: 0
  5846  001A94  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5847  001A96  6F81               	movwf	___flmul@prod& (0+255),b
  5848  001A98  6B82               	clrf	(___flmul@prod+1)& (0+255),b
  5849  001A9A  6B83               	clrf	(___flmul@prod+2)& (0+255),b
  5850  001A9C  6B84               	clrf	(___flmul@prod+3)& (0+255),b
  5851  001A9E  5173               	movf	(___flmul@a+1)& (0+255),w,b
  5852  001AA0  036F               	mulwf	(___flmul@b+1)& (0+255),b
  5853  001AA2  CFF3 F085          	movff	prodl,___flmul@temp
  5854  001AA6  CFF4 F086          	movff	prodh,___flmul@temp+1
  5855  001AAA                     
  5856                           ; BSR set to: 0
  5857  001AAA  5185               	movf	___flmul@temp& (0+255),w,b
  5858  001AAC  277B               	addwf	___flmul@grs& (0+255),f,b
  5859  001AAE  0E00               	movlw	0
  5860  001AB0  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5861  001AB2  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5862  001AB4  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5863  001AB6                     
  5864                           ; BSR set to: 0
  5865  001AB6  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5866  001AB8  2781               	addwf	___flmul@prod& (0+255),f,b
  5867  001ABA  0E00               	movlw	0
  5868  001ABC  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5869  001ABE  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5870  001AC0  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5871  001AC2  5172               	movf	___flmul@a& (0+255),w,b
  5872  001AC4  0370               	mulwf	(___flmul@b+2)& (0+255),b
  5873  001AC6  CFF3 F085          	movff	prodl,___flmul@temp
  5874  001ACA  CFF4 F086          	movff	prodh,___flmul@temp+1
  5875  001ACE                     
  5876                           ; BSR set to: 0
  5877  001ACE  5185               	movf	___flmul@temp& (0+255),w,b
  5878  001AD0  277B               	addwf	___flmul@grs& (0+255),f,b
  5879  001AD2  0E00               	movlw	0
  5880  001AD4  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5881  001AD6  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5882  001AD8  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5883  001ADA                     
  5884                           ; BSR set to: 0
  5885  001ADA  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5886  001ADC  2781               	addwf	___flmul@prod& (0+255),f,b
  5887  001ADE  0E00               	movlw	0
  5888  001AE0  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5889  001AE2  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5890  001AE4  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5891  001AE6                     
  5892                           ; BSR set to: 0
  5893  001AE6  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
  5894  001AEA  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
  5895  001AEE  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
  5896  001AF2  6B7B               	clrf	___flmul@grs& (0+255),b
  5897  001AF4                     
  5898                           ; BSR set to: 0
  5899  001AF4  5172               	movf	___flmul@a& (0+255),w,b
  5900  001AF6  036F               	mulwf	(___flmul@b+1)& (0+255),b
  5901  001AF8  CFF3 F085          	movff	prodl,___flmul@temp
  5902  001AFC  CFF4 F086          	movff	prodh,___flmul@temp+1
  5903  001B00                     
  5904                           ; BSR set to: 0
  5905  001B00  5185               	movf	___flmul@temp& (0+255),w,b
  5906  001B02  277B               	addwf	___flmul@grs& (0+255),f,b
  5907  001B04  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5908  001B06  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5909  001B08  0E00               	movlw	0
  5910  001B0A  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5911  001B0C  0E00               	movlw	0
  5912  001B0E  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5913  001B10                     
  5914                           ; BSR set to: 0
  5915  001B10  5173               	movf	(___flmul@a+1)& (0+255),w,b
  5916  001B12  036E               	mulwf	___flmul@b& (0+255),b
  5917  001B14  CFF3 F085          	movff	prodl,___flmul@temp
  5918  001B18  CFF4 F086          	movff	prodh,___flmul@temp+1
  5919  001B1C                     
  5920                           ; BSR set to: 0
  5921  001B1C  5185               	movf	___flmul@temp& (0+255),w,b
  5922  001B1E  277B               	addwf	___flmul@grs& (0+255),f,b
  5923  001B20  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5924  001B22  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5925  001B24  0E00               	movlw	0
  5926  001B26  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5927  001B28  0E00               	movlw	0
  5928  001B2A  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5929  001B2C                     
  5930                           ; BSR set to: 0
  5931  001B2C  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
  5932  001B30  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
  5933  001B34  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
  5934  001B38  6B7B               	clrf	___flmul@grs& (0+255),b
  5935  001B3A  5172               	movf	___flmul@a& (0+255),w,b
  5936  001B3C  036E               	mulwf	___flmul@b& (0+255),b
  5937  001B3E  CFF3 F085          	movff	prodl,___flmul@temp
  5938  001B42  CFF4 F086          	movff	prodh,___flmul@temp+1
  5939  001B46                     
  5940                           ; BSR set to: 0
  5941  001B46  5185               	movf	___flmul@temp& (0+255),w,b
  5942  001B48  277B               	addwf	___flmul@grs& (0+255),f,b
  5943  001B4A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5944  001B4C  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5945  001B4E  0E00               	movlw	0
  5946  001B50  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5947  001B52  0E00               	movlw	0
  5948  001B54  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5949  001B56                     
  5950                           ; BSR set to: 0
  5951  001B56  5174               	movf	(___flmul@a+2)& (0+255),w,b
  5952  001B58  036F               	mulwf	(___flmul@b+1)& (0+255),b
  5953  001B5A  CFF3 F085          	movff	prodl,___flmul@temp
  5954  001B5E  CFF4 F086          	movff	prodh,___flmul@temp+1
  5955  001B62  5185               	movf	___flmul@temp& (0+255),w,b
  5956  001B64  2781               	addwf	___flmul@prod& (0+255),f,b
  5957  001B66  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5958  001B68  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5959  001B6A  0E00               	movlw	0
  5960  001B6C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5961  001B6E  0E00               	movlw	0
  5962  001B70  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5963  001B72                     
  5964                           ; BSR set to: 0
  5965  001B72  5173               	movf	(___flmul@a+1)& (0+255),w,b
  5966  001B74  0370               	mulwf	(___flmul@b+2)& (0+255),b
  5967  001B76  CFF3 F085          	movff	prodl,___flmul@temp
  5968  001B7A  CFF4 F086          	movff	prodh,___flmul@temp+1
  5969  001B7E                     
  5970                           ; BSR set to: 0
  5971  001B7E  5185               	movf	___flmul@temp& (0+255),w,b
  5972  001B80  2781               	addwf	___flmul@prod& (0+255),f,b
  5973  001B82  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5974  001B84  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5975  001B86  0E00               	movlw	0
  5976  001B88  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5977  001B8A  0E00               	movlw	0
  5978  001B8C  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5979  001B8E  5174               	movf	(___flmul@a+2)& (0+255),w,b
  5980  001B90  0370               	mulwf	(___flmul@b+2)& (0+255),b
  5981  001B92  CFF3 F085          	movff	prodl,___flmul@temp
  5982  001B96  CFF4 F086          	movff	prodh,___flmul@temp+1
  5983  001B9A                     
  5984                           ; BSR set to: 0
  5985  001B9A  5185               	movf	___flmul@temp& (0+255),w,b
  5986  001B9C  6F76               	movwf	??___flmul& (0+255),b
  5987  001B9E  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5988  001BA0  6F77               	movwf	(??___flmul+1)& (0+255),b
  5989  001BA2  6B78               	clrf	(??___flmul+2)& (0+255),b
  5990  001BA4  6B79               	clrf	(??___flmul+3)& (0+255),b
  5991  001BA6  C078  F079         	movff	??___flmul+2,??___flmul+3
  5992  001BAA  C077  F078         	movff	??___flmul+1,??___flmul+2
  5993  001BAE  C076  F077         	movff	??___flmul,??___flmul+1
  5994  001BB2  6B76               	clrf	??___flmul& (0+255),b
  5995  001BB4  5176               	movf	??___flmul& (0+255),w,b
  5996  001BB6  2781               	addwf	___flmul@prod& (0+255),f,b
  5997  001BB8  5177               	movf	(??___flmul+1)& (0+255),w,b
  5998  001BBA  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5999  001BBC  5178               	movf	(??___flmul+2)& (0+255),w,b
  6000  001BBE  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6001  001BC0  5179               	movf	(??___flmul+3)& (0+255),w,b
  6002  001BC2  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6003  001BC4                     
  6004                           ; BSR set to: 0
  6005  001BC4  C07B  F076         	movff	___flmul@grs,??___flmul
  6006  001BC8  C07C  F077         	movff	___flmul@grs+1,??___flmul+1
  6007  001BCC  C07D  F078         	movff	___flmul@grs+2,??___flmul+2
  6008  001BD0  C07E  F079         	movff	___flmul@grs+3,??___flmul+3
  6009  001BD4  0E19               	movlw	25
  6010  001BD6  EFF2  F00D         	goto	u2760
  6011  001BDA                     u2765:
  6012  001BDA  90D8               	bcf	status,0,c
  6013  001BDC  3379               	rrcf	(??___flmul+3)& (0+255),f,b
  6014  001BDE  3378               	rrcf	(??___flmul+2)& (0+255),f,b
  6015  001BE0  3377               	rrcf	(??___flmul+1)& (0+255),f,b
  6016  001BE2  3376               	rrcf	??___flmul& (0+255),f,b
  6017  001BE4                     u2760:
  6018  001BE4  2EE8               	decfsz	wreg,f,c
  6019  001BE6  EFED  F00D         	goto	u2765
  6020  001BEA  5176               	movf	??___flmul& (0+255),w,b
  6021  001BEC  2781               	addwf	___flmul@prod& (0+255),f,b
  6022  001BEE  5177               	movf	(??___flmul+1)& (0+255),w,b
  6023  001BF0  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6024  001BF2  5178               	movf	(??___flmul+2)& (0+255),w,b
  6025  001BF4  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6026  001BF6  5179               	movf	(??___flmul+3)& (0+255),w,b
  6027  001BF8  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6028  001BFA                     
  6029                           ; BSR set to: 0
  6030  001BFA  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
  6031  001BFE  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
  6032  001C02  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
  6033  001C06  6B7B               	clrf	___flmul@grs& (0+255),b
  6034  001C08                     
  6035                           ; BSR set to: 0
  6036  001C08  517F               	movf	___flmul@aexp& (0+255),w,b
  6037  001C0A  C080  F076         	movff	___flmul@bexp,??___flmul
  6038  001C0E  6B77               	clrf	(??___flmul+1)& (0+255),b
  6039  001C10  2776               	addwf	??___flmul& (0+255),f,b
  6040  001C12  0E00               	movlw	0
  6041  001C14  2377               	addwfc	(??___flmul+1)& (0+255),f,b
  6042  001C16  0E82               	movlw	130
  6043  001C18  2576               	addwf	??___flmul& (0+255),w,b
  6044  001C1A  6F85               	movwf	___flmul@temp& (0+255),b
  6045  001C1C  0EFF               	movlw	255
  6046  001C1E  2177               	addwfc	(??___flmul+1)& (0+255),w,b
  6047  001C20  6F86               	movwf	(___flmul@temp+1)& (0+255),b
  6048  001C22  EF28  F00E         	goto	l3188
  6049  001C26                     l3182:
  6050                           
  6051                           ; BSR set to: 0
  6052  001C26  90D8               	bcf	status,0,c
  6053  001C28  3781               	rlcf	___flmul@prod& (0+255),f,b
  6054  001C2A  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
  6055  001C2C  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
  6056  001C2E  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
  6057  001C30                     
  6058                           ; BSR set to: 0
  6059  001C30  AF7E               	btfss	(___flmul@grs+3)& (0+255),7,b
  6060  001C32  EF1D  F00E         	goto	u2771
  6061  001C36  EF1F  F00E         	goto	u2770
  6062  001C3A                     u2771:
  6063  001C3A  EF20  F00E         	goto	l1212
  6064  001C3E                     u2770:
  6065  001C3E                     
  6066                           ; BSR set to: 0
  6067  001C3E  8181               	bsf	___flmul@prod& (0+255),0,b
  6068  001C40                     l1212:
  6069                           
  6070                           ; BSR set to: 0
  6071  001C40  90D8               	bcf	status,0,c
  6072  001C42  377B               	rlcf	___flmul@grs& (0+255),f,b
  6073  001C44  377C               	rlcf	(___flmul@grs+1)& (0+255),f,b
  6074  001C46  377D               	rlcf	(___flmul@grs+2)& (0+255),f,b
  6075  001C48  377E               	rlcf	(___flmul@grs+3)& (0+255),f,b
  6076  001C4A  0785               	decf	___flmul@temp& (0+255),f,b
  6077  001C4C  A0D8               	btfss	status,0,c
  6078  001C4E  0786               	decf	(___flmul@temp+1)& (0+255),f,b
  6079  001C50                     l3188:
  6080                           
  6081                           ; BSR set to: 0
  6082  001C50  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
  6083  001C52  EF2D  F00E         	goto	u2781
  6084  001C56  EF2F  F00E         	goto	u2780
  6085  001C5A                     u2781:
  6086  001C5A  EF13  F00E         	goto	l3182
  6087  001C5E                     u2780:
  6088  001C5E                     
  6089                           ; BSR set to: 0
  6090  001C5E  0E00               	movlw	0
  6091  001C60  6F7F               	movwf	___flmul@aexp& (0+255),b
  6092  001C62                     
  6093                           ; BSR set to: 0
  6094  001C62  AF7E               	btfss	(___flmul@grs+3)& (0+255),7,b
  6095  001C64  EF36  F00E         	goto	u2791
  6096  001C68  EF38  F00E         	goto	u2790
  6097  001C6C                     u2791:
  6098  001C6C  EF5C  F00E         	goto	l1214
  6099  001C70                     u2790:
  6100  001C70                     
  6101                           ; BSR set to: 0
  6102  001C70  0EFF               	movlw	255
  6103  001C72  157B               	andwf	___flmul@grs& (0+255),w,b
  6104  001C74  6F76               	movwf	??___flmul& (0+255),b
  6105  001C76  0EFF               	movlw	255
  6106  001C78  157C               	andwf	(___flmul@grs+1)& (0+255),w,b
  6107  001C7A  6F77               	movwf	(??___flmul+1)& (0+255),b
  6108  001C7C  0EFF               	movlw	255
  6109  001C7E  157D               	andwf	(___flmul@grs+2)& (0+255),w,b
  6110  001C80  6F78               	movwf	(??___flmul+2)& (0+255),b
  6111  001C82  0E7F               	movlw	127
  6112  001C84  157E               	andwf	(___flmul@grs+3)& (0+255),w,b
  6113  001C86  6F79               	movwf	(??___flmul+3)& (0+255),b
  6114  001C88  5176               	movf	??___flmul& (0+255),w,b
  6115  001C8A  1177               	iorwf	(??___flmul+1)& (0+255),w,b
  6116  001C8C  1178               	iorwf	(??___flmul+2)& (0+255),w,b
  6117  001C8E  1179               	iorwf	(??___flmul+3)& (0+255),w,b
  6118  001C90  B4D8               	btfsc	status,2,c
  6119  001C92  EF4D  F00E         	goto	u2801
  6120  001C96  EF4F  F00E         	goto	u2800
  6121  001C9A                     u2801:
  6122  001C9A  EF53  F00E         	goto	l1215
  6123  001C9E                     u2800:
  6124  001C9E                     l3196:
  6125                           
  6126                           ; BSR set to: 0
  6127  001C9E  0E01               	movlw	1
  6128  001CA0  6F7F               	movwf	___flmul@aexp& (0+255),b
  6129  001CA2  EF5C  F00E         	goto	l1214
  6130  001CA6                     l1215:
  6131                           
  6132                           ; BSR set to: 0
  6133  001CA6  A181               	btfss	___flmul@prod& (0+255),0,b
  6134  001CA8  EF58  F00E         	goto	u2811
  6135  001CAC  EF5A  F00E         	goto	u2810
  6136  001CB0                     u2811:
  6137  001CB0  EF5C  F00E         	goto	l1214
  6138  001CB4                     u2810:
  6139  001CB4  EF4F  F00E         	goto	l3196
  6140  001CB8                     l1214:
  6141                           
  6142                           ; BSR set to: 0
  6143  001CB8  517F               	movf	___flmul@aexp& (0+255),w,b
  6144  001CBA  B4D8               	btfsc	status,2,c
  6145  001CBC  EF62  F00E         	goto	u2821
  6146  001CC0  EF64  F00E         	goto	u2820
  6147  001CC4                     u2821:
  6148  001CC4  EF88  F00E         	goto	l3208
  6149  001CC8                     u2820:
  6150  001CC8                     
  6151                           ; BSR set to: 0
  6152  001CC8  0E01               	movlw	1
  6153  001CCA  2781               	addwf	___flmul@prod& (0+255),f,b
  6154  001CCC  0E00               	movlw	0
  6155  001CCE  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6156  001CD0  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6157  001CD2  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6158  001CD4                     
  6159                           ; BSR set to: 0
  6160  001CD4  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
  6161  001CD6  EF6F  F00E         	goto	u2831
  6162  001CDA  EF71  F00E         	goto	u2830
  6163  001CDE                     u2831:
  6164  001CDE  EF88  F00E         	goto	l3208
  6165  001CE2                     u2830:
  6166  001CE2                     
  6167                           ; BSR set to: 0
  6168  001CE2  C081  F076         	movff	___flmul@prod,??___flmul
  6169  001CE6  C082  F077         	movff	___flmul@prod+1,??___flmul+1
  6170  001CEA  C083  F078         	movff	___flmul@prod+2,??___flmul+2
  6171  001CEE  C084  F079         	movff	___flmul@prod+3,??___flmul+3
  6172  001CF2  3579               	rlcf	(??___flmul+3)& (0+255),w,b
  6173  001CF4  3379               	rrcf	(??___flmul+3)& (0+255),f,b
  6174  001CF6  3378               	rrcf	(??___flmul+2)& (0+255),f,b
  6175  001CF8  3377               	rrcf	(??___flmul+1)& (0+255),f,b
  6176  001CFA  3376               	rrcf	??___flmul& (0+255),f,b
  6177  001CFC  C076  F081         	movff	??___flmul,___flmul@prod
  6178  001D00  C077  F082         	movff	??___flmul+1,___flmul@prod+1
  6179  001D04  C078  F083         	movff	??___flmul+2,___flmul@prod+2
  6180  001D08  C079  F084         	movff	??___flmul+3,___flmul@prod+3
  6181  001D0C                     
  6182                           ; BSR set to: 0
  6183  001D0C  4B85               	infsnz	___flmul@temp& (0+255),f,b
  6184  001D0E  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
  6185  001D10                     l3208:
  6186                           
  6187                           ; BSR set to: 0
  6188  001D10  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6189  001D12  EF93  F00E         	goto	u2841
  6190  001D16  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  6191  001D18  E108               	bnz	u2840
  6192  001D1A  2985               	incf	___flmul@temp& (0+255),w,b
  6193  001D1C  A0D8               	btfss	status,0,c
  6194  001D1E  EF93  F00E         	goto	u2841
  6195  001D22  EF95  F00E         	goto	u2840
  6196  001D26                     u2841:
  6197  001D26  EF9F  F00E         	goto	l3212
  6198  001D2A                     u2840:
  6199  001D2A                     
  6200                           ; BSR set to: 0
  6201  001D2A  0E00               	movlw	0
  6202  001D2C  6F81               	movwf	___flmul@prod& (0+255),b
  6203  001D2E  0E00               	movlw	0
  6204  001D30  6F82               	movwf	(___flmul@prod+1)& (0+255),b
  6205  001D32  0E80               	movlw	128
  6206  001D34  6F83               	movwf	(___flmul@prod+2)& (0+255),b
  6207  001D36  0E7F               	movlw	127
  6208  001D38  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  6209  001D3A  EFCD  F00E         	goto	l3224
  6210  001D3E                     l3212:
  6211                           
  6212                           ; BSR set to: 0
  6213  001D3E  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6214  001D40  EFAC  F00E         	goto	u2850
  6215  001D44  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  6216  001D46  E106               	bnz	u2851
  6217  001D48  0585               	decf	___flmul@temp& (0+255),w,b
  6218  001D4A  B0D8               	btfsc	status,0,c
  6219  001D4C  EFAA  F00E         	goto	u2851
  6220  001D50  EFAC  F00E         	goto	u2850
  6221  001D54                     u2851:
  6222  001D54  EFB8  F00E         	goto	l1222
  6223  001D58                     u2850:
  6224  001D58                     
  6225                           ; BSR set to: 0
  6226  001D58  0E00               	movlw	0
  6227  001D5A  6F81               	movwf	___flmul@prod& (0+255),b
  6228  001D5C  0E00               	movlw	0
  6229  001D5E  6F82               	movwf	(___flmul@prod+1)& (0+255),b
  6230  001D60  0E00               	movlw	0
  6231  001D62  6F83               	movwf	(___flmul@prod+2)& (0+255),b
  6232  001D64  0E00               	movlw	0
  6233  001D66  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  6234  001D68  0E00               	movlw	0
  6235  001D6A  6F7A               	movwf	___flmul@sign& (0+255),b
  6236  001D6C  EFCD  F00E         	goto	l3224
  6237  001D70                     l1222:
  6238                           
  6239                           ; BSR set to: 0
  6240  001D70  C085  F080         	movff	___flmul@temp,___flmul@bexp
  6241  001D74                     
  6242                           ; BSR set to: 0
  6243  001D74  0EFF               	movlw	255
  6244  001D76  1781               	andwf	___flmul@prod& (0+255),f,b
  6245  001D78  0EFF               	movlw	255
  6246  001D7A  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
  6247  001D7C  0E7F               	movlw	127
  6248  001D7E  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
  6249  001D80  0E00               	movlw	0
  6250  001D82  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
  6251  001D84                     
  6252                           ; BSR set to: 0
  6253  001D84  A180               	btfss	___flmul@bexp& (0+255),0,b
  6254  001D86  EFC7  F00E         	goto	u2861
  6255  001D8A  EFC9  F00E         	goto	u2860
  6256  001D8E                     u2861:
  6257  001D8E  EFCA  F00E         	goto	l3222
  6258  001D92                     u2860:
  6259  001D92                     
  6260                           ; BSR set to: 0
  6261  001D92  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
  6262  001D94                     l3222:
  6263                           
  6264                           ; BSR set to: 0
  6265  001D94  90D8               	bcf	status,0,c
  6266  001D96  3180               	rrcf	___flmul@bexp& (0+255),w,b
  6267  001D98  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  6268  001D9A                     l3224:
  6269                           
  6270                           ; BSR set to: 0
  6271  001D9A  517A               	movf	___flmul@sign& (0+255),w,b
  6272  001D9C  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6273  001D9E                     
  6274                           ; BSR set to: 0
  6275  001D9E  C081  F06E         	movff	___flmul@prod,?___flmul
  6276  001DA2  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
  6277  001DA6  C083  F070         	movff	___flmul@prod+2,?___flmul+2
  6278  001DAA  C084  F071         	movff	___flmul@prod+3,?___flmul+3
  6279  001DAE                     l1209:
  6280                           
  6281                           ; BSR set to: 0
  6282  001DAE  0012               	return		;funcret
  6283  001DB0                     __end_of___flmul:
  6284                           	opt callstack 0
  6285                           
  6286 ;; *************** function ___fleq *****************
  6287 ;; Defined at:
  6288 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  6289 ;; Parameters:    Size  Location     Type
  6290 ;;  ff1             4    0[BANK0 ] unsigned char 
  6291 ;;  ff2             4    4[BANK0 ] unsigned char 
  6292 ;; Auto vars:     Size  Location     Type
  6293 ;;		None
  6294 ;; Return value:  Size  Location     Type
  6295 ;;		None               void
  6296 ;; Registers used:
  6297 ;;		wreg, status,2, status,0
  6298 ;; Tracked objects:
  6299 ;;		On entry : 0/0
  6300 ;;		On exit  : 0/0
  6301 ;;		Unchanged: 0/0
  6302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6303 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6305 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6306 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6307 ;;Total ram usage:       12 bytes
  6308 ;; Hardware stack levels used:    1
  6309 ;; Hardware stack levels required when called:    6
  6310 ;; This function calls:
  6311 ;;		Nothing
  6312 ;; This function is called by:
  6313 ;;		_printTempAndHumid
  6314 ;; This function uses a non-reentrant model
  6315 ;;
  6316                           
  6317                           	psect	text30
  6318  003036                     __ptext30:
  6319                           	opt callstack 0
  6320  003036                     ___fleq:
  6321                           	opt callstack 21
  6322  003036  0E00               	movlw	0
  6323  003038  0100               	movlb	0	; () banked
  6324  00303A  1560               	andwf	___fleq@ff1& (0+255),w,b
  6325  00303C  6F68               	movwf	??___fleq& (0+255),b
  6326  00303E  0E00               	movlw	0
  6327  003040  1561               	andwf	(___fleq@ff1+1)& (0+255),w,b
  6328  003042  6F69               	movwf	(??___fleq+1)& (0+255),b
  6329  003044  0E80               	movlw	128
  6330  003046  1562               	andwf	(___fleq@ff1+2)& (0+255),w,b
  6331  003048  6F6A               	movwf	(??___fleq+2)& (0+255),b
  6332  00304A  0E7F               	movlw	127
  6333  00304C  1563               	andwf	(___fleq@ff1+3)& (0+255),w,b
  6334  00304E  6F6B               	movwf	(??___fleq+3)& (0+255),b
  6335  003050  5168               	movf	??___fleq& (0+255),w,b
  6336  003052  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  6337  003054  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  6338  003056  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  6339  003058  A4D8               	btfss	status,2,c
  6340  00305A  EF31  F018         	goto	u2931
  6341  00305E  EF33  F018         	goto	u2930
  6342  003062                     u2931:
  6343  003062  EF3B  F018         	goto	l3284
  6344  003066                     u2930:
  6345  003066                     
  6346                           ; BSR set to: 0
  6347  003066  0E00               	movlw	0
  6348  003068  6F60               	movwf	___fleq@ff1& (0+255),b
  6349  00306A  0E00               	movlw	0
  6350  00306C  6F61               	movwf	(___fleq@ff1+1)& (0+255),b
  6351  00306E  0E00               	movlw	0
  6352  003070  6F62               	movwf	(___fleq@ff1+2)& (0+255),b
  6353  003072  0E00               	movlw	0
  6354  003074  6F63               	movwf	(___fleq@ff1+3)& (0+255),b
  6355  003076                     l3284:
  6356                           
  6357                           ; BSR set to: 0
  6358  003076  0E00               	movlw	0
  6359  003078  1564               	andwf	___fleq@ff2& (0+255),w,b
  6360  00307A  6F68               	movwf	??___fleq& (0+255),b
  6361  00307C  0E00               	movlw	0
  6362  00307E  1565               	andwf	(___fleq@ff2+1)& (0+255),w,b
  6363  003080  6F69               	movwf	(??___fleq+1)& (0+255),b
  6364  003082  0E80               	movlw	128
  6365  003084  1566               	andwf	(___fleq@ff2+2)& (0+255),w,b
  6366  003086  6F6A               	movwf	(??___fleq+2)& (0+255),b
  6367  003088  0E7F               	movlw	127
  6368  00308A  1567               	andwf	(___fleq@ff2+3)& (0+255),w,b
  6369  00308C  6F6B               	movwf	(??___fleq+3)& (0+255),b
  6370  00308E  5168               	movf	??___fleq& (0+255),w,b
  6371  003090  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  6372  003092  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  6373  003094  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  6374  003096  A4D8               	btfss	status,2,c
  6375  003098  EF50  F018         	goto	u2941
  6376  00309C  EF52  F018         	goto	u2940
  6377  0030A0                     u2941:
  6378  0030A0  EF5A  F018         	goto	l3288
  6379  0030A4                     u2940:
  6380  0030A4                     
  6381                           ; BSR set to: 0
  6382  0030A4  0E00               	movlw	0
  6383  0030A6  6F64               	movwf	___fleq@ff2& (0+255),b
  6384  0030A8  0E00               	movlw	0
  6385  0030AA  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  6386  0030AC  0E00               	movlw	0
  6387  0030AE  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  6388  0030B0  0E00               	movlw	0
  6389  0030B2  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  6390  0030B4                     l3288:
  6391                           
  6392                           ; BSR set to: 0
  6393  0030B4  5164               	movf	___fleq@ff2& (0+255),w,b
  6394  0030B6  1960               	xorwf	___fleq@ff1& (0+255),w,b
  6395  0030B8  E10F               	bnz	u2950
  6396  0030BA  5165               	movf	(___fleq@ff2+1)& (0+255),w,b
  6397  0030BC  1961               	xorwf	(___fleq@ff1+1)& (0+255),w,b
  6398  0030BE  E10C               	bnz	u2950
  6399  0030C0  5166               	movf	(___fleq@ff2+2)& (0+255),w,b
  6400  0030C2  1962               	xorwf	(___fleq@ff1+2)& (0+255),w,b
  6401  0030C4  E109               	bnz	u2950
  6402  0030C6  5167               	movf	(___fleq@ff2+3)& (0+255),w,b
  6403  0030C8  1963               	xorwf	(___fleq@ff1+3)& (0+255),w,b
  6404  0030CA  B4D8               	btfsc	status,2,c
  6405  0030CC  EF6A  F018         	goto	u2951
  6406  0030D0  EF6C  F018         	goto	u2950
  6407  0030D4                     u2951:
  6408  0030D4  EF6F  F018         	goto	l3292
  6409  0030D8                     u2950:
  6410  0030D8                     
  6411                           ; BSR set to: 0
  6412  0030D8  90D8               	bcf	status,0,c
  6413  0030DA  EF70  F018         	goto	l850
  6414  0030DE                     l3292:
  6415                           
  6416                           ; BSR set to: 0
  6417  0030DE  80D8               	bsf	status,0,c
  6418  0030E0                     l850:
  6419                           
  6420                           ; BSR set to: 0
  6421  0030E0  0012               	return		;funcret
  6422  0030E2                     __end_of___fleq:
  6423                           	opt callstack 0
  6424                           
  6425 ;; *************** function ___awdiv *****************
  6426 ;; Defined at:
  6427 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  6428 ;; Parameters:    Size  Location     Type
  6429 ;;  dividend        2    0[BANK0 ] int 
  6430 ;;  divisor         2    2[BANK0 ] int 
  6431 ;; Auto vars:     Size  Location     Type
  6432 ;;  quotient        2    6[BANK0 ] int 
  6433 ;;  sign            1    5[BANK0 ] unsigned char 
  6434 ;;  counter         1    4[BANK0 ] unsigned char 
  6435 ;; Return value:  Size  Location     Type
  6436 ;;                  2    0[BANK0 ] int 
  6437 ;; Registers used:
  6438 ;;		wreg, status,2, status,0
  6439 ;; Tracked objects:
  6440 ;;		On entry : 0/0
  6441 ;;		On exit  : 0/0
  6442 ;;		Unchanged: 0/0
  6443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6444 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6445 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6447 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6448 ;;Total ram usage:        8 bytes
  6449 ;; Hardware stack levels used:    1
  6450 ;; Hardware stack levels required when called:    6
  6451 ;; This function calls:
  6452 ;;		Nothing
  6453 ;; This function is called by:
  6454 ;;		_printTempAndHumid
  6455 ;; This function uses a non-reentrant model
  6456 ;;
  6457                           
  6458                           	psect	text31
  6459  002D52                     __ptext31:
  6460                           	opt callstack 0
  6461  002D52                     ___awdiv:
  6462                           	opt callstack 21
  6463  002D52  0E00               	movlw	0
  6464  002D54  0100               	movlb	0	; () banked
  6465  002D56  6F65               	movwf	___awdiv@sign& (0+255),b
  6466  002D58                     
  6467                           ; BSR set to: 0
  6468  002D58  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  6469  002D5A  EFB3  F016         	goto	u2870
  6470  002D5E  EFB1  F016         	goto	u2871
  6471  002D62                     u2871:
  6472  002D62  EFB9  F016         	goto	l3244
  6473  002D66                     u2870:
  6474  002D66                     
  6475                           ; BSR set to: 0
  6476  002D66  6D62               	negf	___awdiv@divisor& (0+255),b
  6477  002D68  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6478  002D6A  B0D8               	btfsc	status,0,c
  6479  002D6C  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6480  002D6E                     
  6481                           ; BSR set to: 0
  6482  002D6E  0E01               	movlw	1
  6483  002D70  6F65               	movwf	___awdiv@sign& (0+255),b
  6484  002D72                     l3244:
  6485                           
  6486                           ; BSR set to: 0
  6487  002D72  BF61               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  6488  002D74  EFC0  F016         	goto	u2880
  6489  002D78  EFBE  F016         	goto	u2881
  6490  002D7C                     u2881:
  6491  002D7C  EFC6  F016         	goto	l3250
  6492  002D80                     u2880:
  6493  002D80                     
  6494                           ; BSR set to: 0
  6495  002D80  6D60               	negf	___awdiv@dividend& (0+255),b
  6496  002D82  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6497  002D84  B0D8               	btfsc	status,0,c
  6498  002D86  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6499  002D88                     
  6500                           ; BSR set to: 0
  6501  002D88  0E01               	movlw	1
  6502  002D8A  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  6503  002D8C                     l3250:
  6504                           
  6505                           ; BSR set to: 0
  6506  002D8C  0E00               	movlw	0
  6507  002D8E  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  6508  002D90  0E00               	movlw	0
  6509  002D92  6F66               	movwf	___awdiv@quotient& (0+255),b
  6510  002D94                     
  6511                           ; BSR set to: 0
  6512  002D94  5162               	movf	___awdiv@divisor& (0+255),w,b
  6513  002D96  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6514  002D98  B4D8               	btfsc	status,2,c
  6515  002D9A  EFD1  F016         	goto	u2891
  6516  002D9E  EFD3  F016         	goto	u2890
  6517  002DA2                     u2891:
  6518  002DA2  EFFB  F016         	goto	l3272
  6519  002DA6                     u2890:
  6520  002DA6                     
  6521                           ; BSR set to: 0
  6522  002DA6  0E01               	movlw	1
  6523  002DA8  6F64               	movwf	___awdiv@counter& (0+255),b
  6524  002DAA  EFDB  F016         	goto	l3258
  6525  002DAE                     l3256:
  6526                           
  6527                           ; BSR set to: 0
  6528  002DAE  90D8               	bcf	status,0,c
  6529  002DB0  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  6530  002DB2  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6531  002DB4  2B64               	incf	___awdiv@counter& (0+255),f,b
  6532  002DB6                     l3258:
  6533                           
  6534                           ; BSR set to: 0
  6535  002DB6  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6536  002DB8  EFE0  F016         	goto	u2901
  6537  002DBC  EFE2  F016         	goto	u2900
  6538  002DC0                     u2901:
  6539  002DC0  EFD7  F016         	goto	l3256
  6540  002DC4                     u2900:
  6541  002DC4                     l3260:
  6542                           
  6543                           ; BSR set to: 0
  6544  002DC4  90D8               	bcf	status,0,c
  6545  002DC6  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  6546  002DC8  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6547  002DCA                     
  6548                           ; BSR set to: 0
  6549  002DCA  5162               	movf	___awdiv@divisor& (0+255),w,b
  6550  002DCC  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  6551  002DCE  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6552  002DD0  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6553  002DD2  A0D8               	btfss	status,0,c
  6554  002DD4  EFEE  F016         	goto	u2911
  6555  002DD8  EFF0  F016         	goto	u2910
  6556  002DDC                     u2911:
  6557  002DDC  EFF5  F016         	goto	l3268
  6558  002DE0                     u2910:
  6559  002DE0                     
  6560                           ; BSR set to: 0
  6561  002DE0  5162               	movf	___awdiv@divisor& (0+255),w,b
  6562  002DE2  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  6563  002DE4  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6564  002DE6  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6565  002DE8                     
  6566                           ; BSR set to: 0
  6567  002DE8  8166               	bsf	___awdiv@quotient& (0+255),0,b
  6568  002DEA                     l3268:
  6569                           
  6570                           ; BSR set to: 0
  6571  002DEA  90D8               	bcf	status,0,c
  6572  002DEC  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6573  002DEE  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  6574  002DF0                     
  6575                           ; BSR set to: 0
  6576  002DF0  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  6577  002DF2  EFE2  F016         	goto	l3260
  6578  002DF6                     l3272:
  6579                           
  6580                           ; BSR set to: 0
  6581  002DF6  5165               	movf	___awdiv@sign& (0+255),w,b
  6582  002DF8  B4D8               	btfsc	status,2,c
  6583  002DFA  EF01  F017         	goto	u2921
  6584  002DFE  EF03  F017         	goto	u2920
  6585  002E02                     u2921:
  6586  002E02  EF07  F017         	goto	l3276
  6587  002E06                     u2920:
  6588  002E06                     
  6589                           ; BSR set to: 0
  6590  002E06  6D66               	negf	___awdiv@quotient& (0+255),b
  6591  002E08  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6592  002E0A  B0D8               	btfsc	status,0,c
  6593  002E0C  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6594  002E0E                     l3276:
  6595                           
  6596                           ; BSR set to: 0
  6597  002E0E  C066  F060         	movff	___awdiv@quotient,?___awdiv
  6598  002E12  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  6599  002E16                     
  6600                           ; BSR set to: 0
  6601  002E16  0012               	return		;funcret
  6602  002E18                     __end_of___awdiv:
  6603                           	opt callstack 0
  6604                           
  6605 ;; *************** function _LCDPrintChar *****************
  6606 ;; Defined at:
  6607 ;;		line 239 in file "lcd.c"
  6608 ;; Parameters:    Size  Location     Type
  6609 ;;  line            1    wreg     unsigned char 
  6610 ;;  pos             1   11[BANK0 ] unsigned char 
  6611 ;;  ch              1   12[BANK0 ] unsigned char 
  6612 ;; Auto vars:     Size  Location     Type
  6613 ;;  line            1   13[BANK0 ] unsigned char 
  6614 ;; Return value:  Size  Location     Type
  6615 ;;                  1    wreg      void 
  6616 ;; Registers used:
  6617 ;;		wreg, status,2, status,0, cstack
  6618 ;; Tracked objects:
  6619 ;;		On entry : 0/0
  6620 ;;		On exit  : 0/0
  6621 ;;		Unchanged: 0/0
  6622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6623 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6624 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6626 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6627 ;;Total ram usage:        3 bytes
  6628 ;; Hardware stack levels used:    1
  6629 ;; Hardware stack levels required when called:   10
  6630 ;; This function calls:
  6631 ;;		_LCDMoveCursor
  6632 ;;		_LCDPutChar
  6633 ;; This function is called by:
  6634 ;;		_printTime_ms
  6635 ;;		_printTempAndHumid
  6636 ;; This function uses a non-reentrant model
  6637 ;;
  6638                           
  6639                           	psect	text32
  6640  00393A                     __ptext32:
  6641                           	opt callstack 0
  6642  00393A                     _LCDPrintChar:
  6643                           	opt callstack 17
  6644                           
  6645                           ; BSR set to: 0
  6646                           ;incstack = 0
  6647                           ;LCDPrintChar@line stored from wreg
  6648  00393A  0100               	movlb	0	; () banked
  6649  00393C  6F6D               	movwf	LCDPrintChar@line& (0+255),b
  6650  00393E                     
  6651                           ;lcd.c: 240:     if(line <0 || line > 2 || pos < 0 || pos > 15)
  6652  00393E  0E03               	movlw	3
  6653  003940  0100               	movlb	0	; () banked
  6654  003942  616D               	cpfslt	LCDPrintChar@line& (0+255),b
  6655  003944  EFA6  F01C         	goto	u2481
  6656  003948  EFA8  F01C         	goto	u2480
  6657  00394C                     u2481:
  6658  00394C  EFBB  F01C         	goto	l533
  6659  003950                     u2480:
  6660  003950                     
  6661                           ; BSR set to: 0
  6662  003950  0E0F               	movlw	15
  6663  003952  656B               	cpfsgt	LCDPrintChar@pos& (0+255),b
  6664  003954  EFAE  F01C         	goto	u2491
  6665  003958  EFB0  F01C         	goto	u2490
  6666  00395C                     u2491:
  6667  00395C  EFB2  F01C         	goto	l2974
  6668  003960                     u2490:
  6669  003960  EFBB  F01C         	goto	l533
  6670  003964                     l2974:
  6671                           
  6672                           ; BSR set to: 0
  6673                           ;lcd.c: 242:     LCDMoveCursor(line, pos);
  6674  003964  C06B  F066         	movff	LCDPrintChar@pos,LCDMoveCursor@pos
  6675  003968  516D               	movf	LCDPrintChar@line& (0+255),w,b
  6676  00396A  ECBC  F01C         	call	_LCDMoveCursor
  6677                           
  6678                           ;lcd.c: 243:     LCDPutChar(ch);
  6679  00396E  0100               	movlb	0	; () banked
  6680  003970  516C               	movf	LCDPrintChar@ch& (0+255),w,b
  6681  003972  EC3B  F01C         	call	_LCDPutChar
  6682  003976                     l533:
  6683  003976  0012               	return		;funcret
  6684  003978                     __end_of_LCDPrintChar:
  6685                           	opt callstack 0
  6686                           
  6687 ;; *************** function _LCDPrint *****************
  6688 ;; Defined at:
  6689 ;;		line 232 in file "lcd.c"
  6690 ;; Parameters:    Size  Location     Type
  6691 ;;  line            1    wreg     unsigned char 
  6692 ;;  pos             1   11[BANK0 ] unsigned char 
  6693 ;;  ptr             2   12[BANK0 ] PTR const unsigned char 
  6694 ;;		 -> STR_4(3), STR_3(5), STR_2(3), STR_1(3), 
  6695 ;; Auto vars:     Size  Location     Type
  6696 ;;  line            1   14[BANK0 ] unsigned char 
  6697 ;; Return value:  Size  Location     Type
  6698 ;;                  1    wreg      void 
  6699 ;; Registers used:
  6700 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6701 ;; Tracked objects:
  6702 ;;		On entry : 0/0
  6703 ;;		On exit  : 0/0
  6704 ;;		Unchanged: 0/0
  6705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6706 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6707 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6709 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6710 ;;Total ram usage:        4 bytes
  6711 ;; Hardware stack levels used:    1
  6712 ;; Hardware stack levels required when called:   10
  6713 ;; This function calls:
  6714 ;;		_LCDMoveCursor
  6715 ;;		_LCDPutStr
  6716 ;; This function is called by:
  6717 ;;		_printTempAndHumid
  6718 ;;		_main
  6719 ;; This function uses a non-reentrant model
  6720 ;;
  6721                           
  6722                           	psect	text33
  6723  003834                     __ptext33:
  6724                           	opt callstack 0
  6725  003834                     _LCDPrint:
  6726                           	opt callstack 17
  6727                           
  6728                           ;incstack = 0
  6729                           ;LCDPrint@line stored from wreg
  6730  003834  0100               	movlb	0	; () banked
  6731  003836  6F6E               	movwf	LCDPrint@line& (0+255),b
  6732  003838                     
  6733                           ;lcd.c: 233:     if(line <0 || line > 2 || pos < 0 || pos > 15)
  6734  003838  0E03               	movlw	3
  6735  00383A  0100               	movlb	0	; () banked
  6736  00383C  616E               	cpfslt	LCDPrint@line& (0+255),b
  6737  00383E  EF23  F01C         	goto	u2501
  6738  003842  EF25  F01C         	goto	u2500
  6739  003846                     u2501:
  6740  003846  EF3A  F01C         	goto	l527
  6741  00384A                     u2500:
  6742  00384A                     
  6743                           ; BSR set to: 0
  6744  00384A  0E0F               	movlw	15
  6745  00384C  656B               	cpfsgt	LCDPrint@pos& (0+255),b
  6746  00384E  EF2B  F01C         	goto	u2511
  6747  003852  EF2D  F01C         	goto	u2510
  6748  003856                     u2511:
  6749  003856  EF2F  F01C         	goto	l2980
  6750  00385A                     u2510:
  6751  00385A  EF3A  F01C         	goto	l527
  6752  00385E                     l2980:
  6753                           
  6754                           ; BSR set to: 0
  6755                           ;lcd.c: 235:     LCDMoveCursor(line, pos);
  6756  00385E  C06B  F066         	movff	LCDPrint@pos,LCDMoveCursor@pos
  6757  003862  516E               	movf	LCDPrint@line& (0+255),w,b
  6758  003864  ECBC  F01C         	call	_LCDMoveCursor
  6759  003868                     
  6760                           ;lcd.c: 236:     LCDPutStr(ptr);
  6761  003868  C06C  F066         	movff	LCDPrint@ptr,LCDPutStr@ptr
  6762  00386C  C06D  F067         	movff	LCDPrint@ptr+1,LCDPutStr@ptr+1
  6763  003870  EC7D  F01C         	call	_LCDPutStr	;wreg free
  6764  003874                     l527:
  6765  003874  0012               	return		;funcret
  6766  003876                     __end_of_LCDPrint:
  6767                           	opt callstack 0
  6768                           
  6769 ;; *************** function _LCDPutStr *****************
  6770 ;; Defined at:
  6771 ;;		line 222 in file "lcd.c"
  6772 ;; Parameters:    Size  Location     Type
  6773 ;;  ptr             2    6[BANK0 ] PTR const unsigned char 
  6774 ;;		 -> STR_4(3), STR_3(5), STR_2(3), STR_1(3), 
  6775 ;; Auto vars:     Size  Location     Type
  6776 ;;		None
  6777 ;; Return value:  Size  Location     Type
  6778 ;;                  1    wreg      void 
  6779 ;; Registers used:
  6780 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6781 ;; Tracked objects:
  6782 ;;		On entry : 0/0
  6783 ;;		On exit  : 0/0
  6784 ;;		Unchanged: 0/0
  6785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6786 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6789 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6790 ;;Total ram usage:        2 bytes
  6791 ;; Hardware stack levels used:    1
  6792 ;; Hardware stack levels required when called:    9
  6793 ;; This function calls:
  6794 ;;		_LCDPutChar
  6795 ;; This function is called by:
  6796 ;;		_LCDPrint
  6797 ;; This function uses a non-reentrant model
  6798 ;;
  6799                           
  6800                           	psect	text34
  6801  0038FA                     __ptext34:
  6802                           	opt callstack 0
  6803  0038FA                     _LCDPutStr:
  6804                           	opt callstack 17
  6805  0038FA                     
  6806                           ;lcd.c: 222: void LCDPutStr (const char *ptr);lcd.c: 223: {;lcd.c: 224:     while(*ptr) 
      +                          LCDPutChar(*(ptr++));
  6807  0038FA  EF8C  F01C         	goto	l2676
  6808  0038FE                     l2672:
  6809  0038FE  C066  FFF6         	movff	LCDPutStr@ptr,tblptrl
  6810  003902  C067  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
  6811  003906                     	if	0	;tblptru may be non-zero
  6812  003906                     	endif
  6813  003906                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6814  003906  0E00               	movlw	low (__mediumconst shr (0+16))
  6815  003908  6EF8               	movwf	tblptru,c
  6816  00390A                     	endif
  6817  00390A  0008               	tblrd		*
  6818  00390C  50F5               	movf	tablat,w,c
  6819  00390E  EC3B  F01C         	call	_LCDPutChar
  6820  003912  0100               	movlb	0	; () banked
  6821  003914  4B66               	infsnz	LCDPutStr@ptr& (0+255),f,b
  6822  003916  2B67               	incf	(LCDPutStr@ptr+1)& (0+255),f,b
  6823  003918                     l2676:
  6824  003918  C066  FFF6         	movff	LCDPutStr@ptr,tblptrl
  6825  00391C  C067  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
  6826  003920                     	if	0	;tblptru may be non-zero
  6827  003920                     	endif
  6828  003920                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6829  003920  0E00               	movlw	low (__mediumconst shr (0+16))
  6830  003922  6EF8               	movwf	tblptru,c
  6831  003924                     	endif
  6832  003924  0008               	tblrd		*
  6833  003926  50F5               	movf	tablat,w,c
  6834  003928  0900               	iorlw	0
  6835  00392A  A4D8               	btfss	status,2,c
  6836  00392C  EF9A  F01C         	goto	u1951
  6837  003930  EF9C  F01C         	goto	u1950
  6838  003934                     u1951:
  6839  003934  EF7F  F01C         	goto	l2672
  6840  003938                     u1950:
  6841  003938  0012               	return		;funcret
  6842  00393A                     __end_of_LCDPutStr:
  6843                           	opt callstack 0
  6844                           
  6845 ;; *************** function _LCDPutChar *****************
  6846 ;; Defined at:
  6847 ;;		line 172 in file "lcd.c"
  6848 ;; Parameters:    Size  Location     Type
  6849 ;;  ch              1    wreg     unsigned char 
  6850 ;; Auto vars:     Size  Location     Type
  6851 ;;  ch              1    5[BANK0 ] unsigned char 
  6852 ;; Return value:  Size  Location     Type
  6853 ;;                  1    wreg      void 
  6854 ;; Registers used:
  6855 ;;		wreg, status,2, status,0, cstack
  6856 ;; Tracked objects:
  6857 ;;		On entry : 0/0
  6858 ;;		On exit  : 0/0
  6859 ;;		Unchanged: 0/0
  6860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6862 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6864 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6865 ;;Total ram usage:        1 bytes
  6866 ;; Hardware stack levels used:    1
  6867 ;; Hardware stack levels required when called:    8
  6868 ;; This function calls:
  6869 ;;		_WritePort_BBSPI
  6870 ;; This function is called by:
  6871 ;;		_LCDPutStr
  6872 ;;		_LCDPrintChar
  6873 ;; This function uses a non-reentrant model
  6874 ;;
  6875                           
  6876                           	psect	text35
  6877  003876                     __ptext35:
  6878                           	opt callstack 0
  6879  003876                     _LCDPutChar:
  6880                           	opt callstack 18
  6881                           
  6882                           ;incstack = 0
  6883                           ;LCDPutChar@ch stored from wreg
  6884  003876  0100               	movlb	0	; () banked
  6885  003878  6F65               	movwf	LCDPutChar@ch& (0+255),b
  6886  00387A                     
  6887                           ;lcd.c: 172: void LCDPutChar (unsigned char ch);lcd.c: 173: {;lcd.c: 174:     _delay((un
      +                          signed long)((10)*(8000000/4000000.0)));
  6888  00387A  0E06               	movlw	6
  6889  00387C                     u3767:
  6890  00387C  2EE8               	decfsz	wreg,f,c
  6891  00387E  D7FE               	bra	u3767
  6892  003880  D000               	nop2	
  6893  003882                     
  6894                           ;lcd.c: 175:     WritePort_BBSPI (0x12, 0x80);
  6895  003882  0E80               	movlw	128
  6896  003884  0100               	movlb	0	; () banked
  6897  003886  6F63               	movwf	WritePort_BBSPI@a& (0+255),b
  6898  003888  0E12               	movlw	18
  6899  00388A  EC77  F01D         	call	_WritePort_BBSPI
  6900  00388E                     
  6901                           ;lcd.c: 176:     _delay((unsigned long)((1)*(8000000/4000000.0)));
  6902  00388E  D000               	nop2		;2 cycle nop
  6903  003890                     
  6904                           ;lcd.c: 177:     WritePort_BBSPI (0x13, ch);
  6905  003890  C065  F063         	movff	LCDPutChar@ch,WritePort_BBSPI@a
  6906  003894  0E13               	movlw	19
  6907  003896  EC77  F01D         	call	_WritePort_BBSPI
  6908  00389A                     
  6909                           ;lcd.c: 178:     _delay((unsigned long)((1)*(8000000/4000000.0)));
  6910  00389A  D000               	nop2		;2 cycle nop
  6911  00389C                     
  6912                           ;lcd.c: 179:     WritePort_BBSPI (0x12, 0xC0);
  6913  00389C  0EC0               	movlw	192
  6914  00389E  0100               	movlb	0	; () banked
  6915  0038A0  6F63               	movwf	WritePort_BBSPI@a& (0+255),b
  6916  0038A2  0E12               	movlw	18
  6917  0038A4  EC77  F01D         	call	_WritePort_BBSPI
  6918  0038A8                     
  6919                           ;lcd.c: 180:     _delay((unsigned long)((1)*(8000000/4000000.0)));
  6920  0038A8  D000               	nop2		;2 cycle nop
  6921  0038AA                     
  6922                           ;lcd.c: 181:     WritePort_BBSPI (0x12, 0x00);
  6923  0038AA  0E00               	movlw	0
  6924  0038AC  0100               	movlb	0	; () banked
  6925  0038AE  6F63               	movwf	WritePort_BBSPI@a& (0+255),b
  6926  0038B0  0E12               	movlw	18
  6927  0038B2  EC77  F01D         	call	_WritePort_BBSPI
  6928  0038B6  0012               	return		;funcret
  6929  0038B8                     __end_of_LCDPutChar:
  6930                           	opt callstack 0
  6931                           
  6932 ;; *************** function _LCDMoveCursor *****************
  6933 ;; Defined at:
  6934 ;;		line 227 in file "lcd.c"
  6935 ;; Parameters:    Size  Location     Type
  6936 ;;  line            1    wreg     unsigned char 
  6937 ;;  pos             1    6[BANK0 ] unsigned char 
  6938 ;; Auto vars:     Size  Location     Type
  6939 ;;  line            1    7[BANK0 ] unsigned char 
  6940 ;;  position        1   10[BANK0 ] unsigned char 
  6941 ;; Return value:  Size  Location     Type
  6942 ;;                  1    wreg      void 
  6943 ;; Registers used:
  6944 ;;		wreg, status,2, status,0, cstack
  6945 ;; Tracked objects:
  6946 ;;		On entry : 0/0
  6947 ;;		On exit  : 0/0
  6948 ;;		Unchanged: 0/0
  6949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6950 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6951 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6953 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6954 ;;Total ram usage:        5 bytes
  6955 ;; Hardware stack levels used:    1
  6956 ;; Hardware stack levels required when called:    9
  6957 ;; This function calls:
  6958 ;;		_LCDPutInst
  6959 ;; This function is called by:
  6960 ;;		_LCDPrint
  6961 ;;		_LCDPrintChar
  6962 ;; This function uses a non-reentrant model
  6963 ;;
  6964                           
  6965                           	psect	text36
  6966  003978                     __ptext36:
  6967                           	opt callstack 0
  6968  003978                     _LCDMoveCursor:
  6969                           	opt callstack 17
  6970                           
  6971                           ;incstack = 0
  6972                           ;LCDMoveCursor@line stored from wreg
  6973  003978  0100               	movlb	0	; () banked
  6974  00397A  6F67               	movwf	LCDMoveCursor@line& (0+255),b
  6975  00397C                     
  6976                           ;lcd.c: 228:     unsigned char position = (line == 0) ? (128 + pos) : (192 + pos);
  6977  00397C  0100               	movlb	0	; () banked
  6978  00397E  5167               	movf	LCDMoveCursor@line& (0+255),w,b
  6979  003980  B4D8               	btfsc	status,2,c
  6980  003982  EFC5  F01C         	goto	u1961
  6981  003986  EFC7  F01C         	goto	u1960
  6982  00398A                     u1961:
  6983  00398A  EFCF  F01C         	goto	l2682
  6984  00398E                     u1960:
  6985  00398E                     
  6986                           ; BSR set to: 0
  6987  00398E  0EC0               	movlw	192
  6988  003990  2566               	addwf	LCDMoveCursor@pos& (0+255),w,b
  6989  003992  6F68               	movwf	_LCDMoveCursor$1079& (0+255),b
  6990  003994  6B69               	clrf	(_LCDMoveCursor$1079+1)& (0+255),b
  6991  003996  0E00               	movlw	0
  6992  003998  2369               	addwfc	(_LCDMoveCursor$1079+1)& (0+255),f,b
  6993  00399A  EFD5  F01C         	goto	l2684
  6994  00399E                     l2682:
  6995                           
  6996                           ; BSR set to: 0
  6997  00399E  0E80               	movlw	128
  6998  0039A0  2566               	addwf	LCDMoveCursor@pos& (0+255),w,b
  6999  0039A2  6F68               	movwf	_LCDMoveCursor$1079& (0+255),b
  7000  0039A4  6B69               	clrf	(_LCDMoveCursor$1079+1)& (0+255),b
  7001  0039A6  0E00               	movlw	0
  7002  0039A8  2369               	addwfc	(_LCDMoveCursor$1079+1)& (0+255),f,b
  7003  0039AA                     l2684:
  7004                           
  7005                           ; BSR set to: 0
  7006  0039AA  C068  F06A         	movff	_LCDMoveCursor$1079,LCDMoveCursor@position
  7007  0039AE                     
  7008                           ; BSR set to: 0
  7009                           ;lcd.c: 229:     LCDPutInst(position);
  7010  0039AE  516A               	movf	LCDMoveCursor@position& (0+255),w,b
  7011  0039B0  EC5C  F01C         	call	_LCDPutInst
  7012  0039B4  0012               	return		;funcret
  7013  0039B6                     __end_of_LCDMoveCursor:
  7014                           	opt callstack 0
  7015                           
  7016 ;; *************** function _LCDPutInst *****************
  7017 ;; Defined at:
  7018 ;;		line 203 in file "lcd.c"
  7019 ;; Parameters:    Size  Location     Type
  7020 ;;  ch              1    wreg     unsigned char 
  7021 ;; Auto vars:     Size  Location     Type
  7022 ;;  ch              1    5[BANK0 ] unsigned char 
  7023 ;; Return value:  Size  Location     Type
  7024 ;;                  1    wreg      void 
  7025 ;; Registers used:
  7026 ;;		wreg, status,2, status,0, cstack
  7027 ;; Tracked objects:
  7028 ;;		On entry : 0/0
  7029 ;;		On exit  : 0/0
  7030 ;;		Unchanged: 0/0
  7031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7033 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7035 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7036 ;;Total ram usage:        1 bytes
  7037 ;; Hardware stack levels used:    1
  7038 ;; Hardware stack levels required when called:    8
  7039 ;; This function calls:
  7040 ;;		_WritePort_BBSPI
  7041 ;; This function is called by:
  7042 ;;		_LCDInit
  7043 ;;		_LCDMoveCursor
  7044 ;; This function uses a non-reentrant model
  7045 ;;
  7046                           
  7047                           	psect	text37
  7048  0038B8                     __ptext37:
  7049                           	opt callstack 0
  7050  0038B8                     _LCDPutInst:
  7051                           	opt callstack 20
  7052                           
  7053                           ;incstack = 0
  7054                           ;LCDPutInst@ch stored from wreg
  7055  0038B8  0100               	movlb	0	; () banked
  7056  0038BA  6F65               	movwf	LCDPutInst@ch& (0+255),b
  7057  0038BC                     
  7058                           ;lcd.c: 203: void LCDPutInst (unsigned char ch);lcd.c: 204: {;lcd.c: 205:     _delay((un
      +                          signed long)((10)*(8000000/4000000.0)));
  7059  0038BC  0E06               	movlw	6
  7060  0038BE                     u3777:
  7061  0038BE  2EE8               	decfsz	wreg,f,c
  7062  0038C0  D7FE               	bra	u3777
  7063  0038C2  D000               	nop2	
  7064  0038C4                     
  7065                           ;lcd.c: 206:     WritePort_BBSPI (0x12, 0x00);
  7066  0038C4  0E00               	movlw	0
  7067  0038C6  0100               	movlb	0	; () banked
  7068  0038C8  6F63               	movwf	WritePort_BBSPI@a& (0+255),b
  7069  0038CA  0E12               	movlw	18
  7070  0038CC  EC77  F01D         	call	_WritePort_BBSPI
  7071  0038D0                     
  7072                           ;lcd.c: 207:     _delay((unsigned long)((1)*(8000000/4000000.0)));
  7073  0038D0  D000               	nop2		;2 cycle nop
  7074  0038D2                     
  7075                           ;lcd.c: 208:     WritePort_BBSPI (0x13, ch);
  7076  0038D2  C065  F063         	movff	LCDPutInst@ch,WritePort_BBSPI@a
  7077  0038D6  0E13               	movlw	19
  7078  0038D8  EC77  F01D         	call	_WritePort_BBSPI
  7079  0038DC                     
  7080                           ;lcd.c: 209:     _delay((unsigned long)((1)*(8000000/4000000.0)));
  7081  0038DC  D000               	nop2		;2 cycle nop
  7082  0038DE                     
  7083                           ;lcd.c: 210:     WritePort_BBSPI (0x12,0x40);
  7084  0038DE  0E40               	movlw	64
  7085  0038E0  0100               	movlb	0	; () banked
  7086  0038E2  6F63               	movwf	WritePort_BBSPI@a& (0+255),b
  7087  0038E4  0E12               	movlw	18
  7088  0038E6  EC77  F01D         	call	_WritePort_BBSPI
  7089  0038EA                     
  7090                           ;lcd.c: 211:     _delay((unsigned long)((1)*(8000000/4000000.0)));
  7091  0038EA  D000               	nop2		;2 cycle nop
  7092  0038EC                     
  7093                           ;lcd.c: 212:     WritePort_BBSPI (0x12, 0x00);
  7094  0038EC  0E00               	movlw	0
  7095  0038EE  0100               	movlb	0	; () banked
  7096  0038F0  6F63               	movwf	WritePort_BBSPI@a& (0+255),b
  7097  0038F2  0E12               	movlw	18
  7098  0038F4  EC77  F01D         	call	_WritePort_BBSPI
  7099  0038F8  0012               	return		;funcret
  7100  0038FA                     __end_of_LCDPutInst:
  7101                           	opt callstack 0
  7102                           
  7103 ;; *************** function _WritePort_BBSPI *****************
  7104 ;; Defined at:
  7105 ;;		line 144 in file "lcd.c"
  7106 ;; Parameters:    Size  Location     Type
  7107 ;;  port_add        1    wreg     unsigned char 
  7108 ;;  a               1    3[BANK0 ] unsigned char 
  7109 ;; Auto vars:     Size  Location     Type
  7110 ;;  port_add        1    4[BANK0 ] unsigned char 
  7111 ;; Return value:  Size  Location     Type
  7112 ;;                  1    wreg      void 
  7113 ;; Registers used:
  7114 ;;		wreg, status,2, status,0, cstack
  7115 ;; Tracked objects:
  7116 ;;		On entry : 0/0
  7117 ;;		On exit  : 0/0
  7118 ;;		Unchanged: 0/0
  7119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7120 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7121 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7123 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7124 ;;Total ram usage:        2 bytes
  7125 ;; Hardware stack levels used:    1
  7126 ;; Hardware stack levels required when called:    7
  7127 ;; This function calls:
  7128 ;;		_SendByteBBSPI
  7129 ;; This function is called by:
  7130 ;;		_LCDInit
  7131 ;;		_LCDPutChar
  7132 ;;		_LCDPutInst
  7133 ;; This function uses a non-reentrant model
  7134 ;;
  7135                           
  7136                           	psect	text38
  7137  003AEE                     __ptext38:
  7138                           	opt callstack 0
  7139  003AEE                     _WritePort_BBSPI:
  7140                           	opt callstack 21
  7141                           
  7142                           ;incstack = 0
  7143                           ;WritePort_BBSPI@port_add stored from wreg
  7144  003AEE  0100               	movlb	0	; () banked
  7145  003AF0  6F64               	movwf	WritePort_BBSPI@port_add& (0+255),b
  7146  003AF2                     
  7147                           ;lcd.c: 144: void WritePort_BBSPI (unsigned char port_add, unsigned char a);lcd.c: 145: 
      +                          {;lcd.c: 146:     LATAbits.LATA2 = 0;
  7148  003AF2  9489               	bcf	137,2,c	;volatile
  7149  003AF4                     
  7150                           ;lcd.c: 147:     SendByteBBSPI(0x40);
  7151  003AF4  0E40               	movlw	64
  7152  003AF6  ECDA  F01A         	call	_SendByteBBSPI
  7153                           
  7154                           ;lcd.c: 148:     SendByteBBSPI(port_add);
  7155  003AFA  0100               	movlb	0	; () banked
  7156  003AFC  5164               	movf	WritePort_BBSPI@port_add& (0+255),w,b
  7157  003AFE  ECDA  F01A         	call	_SendByteBBSPI
  7158                           
  7159                           ;lcd.c: 149:     SendByteBBSPI(a);
  7160  003B02  0100               	movlb	0	; () banked
  7161  003B04  5163               	movf	WritePort_BBSPI@a& (0+255),w,b
  7162  003B06  ECDA  F01A         	call	_SendByteBBSPI
  7163  003B0A                     
  7164                           ;lcd.c: 150:     LATAbits.LATA2 = 1;
  7165  003B0A  8489               	bsf	137,2,c	;volatile
  7166  003B0C  0012               	return		;funcret
  7167  003B0E                     __end_of_WritePort_BBSPI:
  7168                           	opt callstack 0
  7169                           
  7170 ;; *************** function _SendByteBBSPI *****************
  7171 ;; Defined at:
  7172 ;;		line 91 in file "lcd.c"
  7173 ;; Parameters:    Size  Location     Type
  7174 ;;  output          1    wreg     unsigned char 
  7175 ;; Auto vars:     Size  Location     Type
  7176 ;;  output          1    0[BANK0 ] unsigned char 
  7177 ;;  input           1    2[BANK0 ] unsigned char 
  7178 ;;  bitcount        1    1[BANK0 ] unsigned char 
  7179 ;; Return value:  Size  Location     Type
  7180 ;;                  1    wreg      void 
  7181 ;; Registers used:
  7182 ;;		wreg, status,2, status,0
  7183 ;; Tracked objects:
  7184 ;;		On entry : 0/0
  7185 ;;		On exit  : 0/0
  7186 ;;		Unchanged: 0/0
  7187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7189 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7191 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7192 ;;Total ram usage:        3 bytes
  7193 ;; Hardware stack levels used:    1
  7194 ;; Hardware stack levels required when called:    6
  7195 ;; This function calls:
  7196 ;;		Nothing
  7197 ;; This function is called by:
  7198 ;;		_Port_BBSPIInit
  7199 ;;		_WritePort_BBSPI
  7200 ;; This function uses a non-reentrant model
  7201 ;;
  7202                           
  7203                           	psect	text39
  7204  0035B4                     __ptext39:
  7205                           	opt callstack 0
  7206  0035B4                     _SendByteBBSPI:
  7207                           	opt callstack 21
  7208                           
  7209                           ;incstack = 0
  7210                           ;SendByteBBSPI@output stored from wreg
  7211  0035B4  0100               	movlb	0	; () banked
  7212  0035B6  6F60               	movwf	SendByteBBSPI@output& (0+255),b
  7213  0035B8                     
  7214                           ;lcd.c: 91: void SendByteBBSPI (unsigned char output);lcd.c: 92: {;lcd.c: 93:     unsign
      +                          ed char bitcount;;lcd.c: 94:     unsigned char input = output;
  7215  0035B8  C060  F062         	movff	SendByteBBSPI@output,SendByteBBSPI@input
  7216  0035BC                     
  7217                           ;lcd.c: 96:     for(bitcount=0;bitcount<8;bitcount++)
  7218  0035BC  0E00               	movlw	0
  7219  0035BE  0100               	movlb	0	; () banked
  7220  0035C0  6F61               	movwf	SendByteBBSPI@bitcount& (0+255),b
  7221  0035C2                     l490:
  7222                           
  7223                           ; BSR set to: 0
  7224                           ;lcd.c: 97:     {;lcd.c: 99:         if(output & 0x80)
  7225  0035C2  AF60               	btfss	SendByteBBSPI@output& (0+255),7,b
  7226  0035C4  EFE6  F01A         	goto	u1861
  7227  0035C8  EFE8  F01A         	goto	u1860
  7228  0035CC                     u1861:
  7229  0035CC  EFEB  F01A         	goto	l492
  7230  0035D0                     u1860:
  7231  0035D0                     
  7232                           ; BSR set to: 0
  7233                           ;lcd.c: 100:             LATCbits.LATC5 = 1;
  7234  0035D0  8A8B               	bsf	139,5,c	;volatile
  7235  0035D2  EFEC  F01A         	goto	l493
  7236  0035D6                     l492:
  7237                           
  7238                           ; BSR set to: 0
  7239                           ;lcd.c: 102:             LATCbits.LATC5 = 0;
  7240  0035D6  9A8B               	bcf	139,5,c	;volatile
  7241  0035D8                     l493:
  7242                           
  7243                           ; BSR set to: 0
  7244                           ;lcd.c: 104:         if (LATCbits.LATC4)
  7245  0035D8  A88B               	btfss	139,4,c	;volatile
  7246  0035DA  EFF1  F01A         	goto	u1871
  7247  0035DE  EFF3  F01A         	goto	u1870
  7248  0035E2                     u1871:
  7249  0035E2  EFF7  F01A         	goto	l2570
  7250  0035E6                     u1870:
  7251  0035E6                     
  7252                           ; BSR set to: 0
  7253                           ;lcd.c: 105:             input = (input << 1) | 0x1;
  7254  0035E6  80D8               	bsf	status,0,c
  7255  0035E8  3762               	rlcf	SendByteBBSPI@input& (0+255),f,b
  7256  0035EA  EFFA  F01A         	goto	l2572
  7257  0035EE                     l2570:
  7258                           
  7259                           ; BSR set to: 0
  7260                           ;lcd.c: 107:             input = input << 1;
  7261  0035EE  5162               	movf	SendByteBBSPI@input& (0+255),w,b
  7262  0035F0  2562               	addwf	SendByteBBSPI@input& (0+255),w,b
  7263  0035F2  6F62               	movwf	SendByteBBSPI@input& (0+255),b
  7264  0035F4                     l2572:
  7265                           
  7266                           ; BSR set to: 0
  7267                           ;lcd.c: 108:         LATCbits.LATC3 = 1;
  7268  0035F4  868B               	bsf	139,3,c	;volatile
  7269  0035F6                     
  7270                           ; BSR set to: 0
  7271                           ;lcd.c: 109:         __nop();__nop();__nop();__nop();__nop();__nop();
  7272  0035F6  F000               	nop	
  7273  0035F8  F000               	nop	
  7274  0035FA  F000               	nop	
  7275  0035FC  F000               	nop	
  7276  0035FE  F000               	nop	
  7277  003600  F000               	nop	
  7278  003602                     
  7279                           ;lcd.c: 111:         LATCbits.LATC3 = 0;
  7280  003602  968B               	bcf	139,3,c	;volatile
  7281                           
  7282                           ;lcd.c: 112:         output <<= 1;
  7283  003604  0100               	movlb	0	; () banked
  7284  003606  90D8               	bcf	status,0,c
  7285  003608  3760               	rlcf	SendByteBBSPI@output& (0+255),f,b
  7286  00360A                     
  7287                           ; BSR set to: 0
  7288                           ;lcd.c: 113:     }
  7289  00360A  2B61               	incf	SendByteBBSPI@bitcount& (0+255),f,b
  7290  00360C                     
  7291                           ; BSR set to: 0
  7292  00360C  0E07               	movlw	7
  7293  00360E  6561               	cpfsgt	SendByteBBSPI@bitcount& (0+255),b
  7294  003610  EF0C  F01B         	goto	u1881
  7295  003614  EF0E  F01B         	goto	u1880
  7296  003618                     u1881:
  7297  003618  EFE1  F01A         	goto	l490
  7298  00361C                     u1880:
  7299  00361C                     
  7300                           ; BSR set to: 0
  7301  00361C  0012               	return		;funcret
  7302  00361E                     __end_of_SendByteBBSPI:
  7303                           	opt callstack 0
  7304                           
  7305 ;; *************** function _readButtonRB0 *****************
  7306 ;; Defined at:
  7307 ;;		line 29 in file "buttons.c"
  7308 ;; Parameters:    Size  Location     Type
  7309 ;;		None
  7310 ;; Auto vars:     Size  Location     Type
  7311 ;;		None
  7312 ;; Return value:  Size  Location     Type
  7313 ;;                  2    0[BANK0 ] int 
  7314 ;; Registers used:
  7315 ;;		wreg, status,2, status,0
  7316 ;; Tracked objects:
  7317 ;;		On entry : 0/0
  7318 ;;		On exit  : 0/0
  7319 ;;		Unchanged: 0/0
  7320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7321 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7324 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7325 ;;Total ram usage:        2 bytes
  7326 ;; Hardware stack levels used:    1
  7327 ;; Hardware stack levels required when called:    6
  7328 ;; This function calls:
  7329 ;;		Nothing
  7330 ;; This function is called by:
  7331 ;;		_handleButton
  7332 ;; This function uses a non-reentrant model
  7333 ;;
  7334                           
  7335                           	psect	text40
  7336  003748                     __ptext40:
  7337                           	opt callstack 0
  7338  003748                     _readButtonRB0:
  7339                           	opt callstack 21
  7340  003748                     
  7341                           ;buttons.c: 30:     firstReadRB0 = secondReadRB0;
  7342  003748  C0D3  F0D4         	movff	_secondReadRB0,_firstReadRB0
  7343  00374C                     
  7344                           ;buttons.c: 31:     secondReadRB0 = PORTBbits.RB0;
  7345  00374C  0E00               	movlw	0
  7346  00374E  B081               	btfsc	129,0,c	;volatile
  7347  003750  0E01               	movlw	1
  7348  003752  0100               	movlb	0	; () banked
  7349  003754  6FD3               	movwf	_secondReadRB0& (0+255),b
  7350  003756                     
  7351                           ; BSR set to: 0
  7352                           ;buttons.c: 32:     if(secondReadRB0 == firstReadRB0) {
  7353  003756  51D4               	movf	_firstReadRB0& (0+255),w,b
  7354  003758  19D3               	xorwf	_secondReadRB0& (0+255),w,b
  7355  00375A  A4D8               	btfss	status,2,c
  7356  00375C  EFB2  F01B         	goto	u2581
  7357  003760  EFB4  F01B         	goto	u2580
  7358  003764                     u2581:
  7359  003764  EFC8  F01B         	goto	l3038
  7360  003768                     u2580:
  7361  003768                     
  7362                           ; BSR set to: 0
  7363                           ;buttons.c: 33:         return (secondReadRB0 == 0) ? 2 : 1;
  7364  003768  51D3               	movf	_secondReadRB0& (0+255),w,b
  7365  00376A  B4D8               	btfsc	status,2,c
  7366  00376C  EFBA  F01B         	goto	u2591
  7367  003770  EFBC  F01B         	goto	u2590
  7368  003774                     u2591:
  7369  003774  EFC2  F01B         	goto	l3034
  7370  003778                     u2590:
  7371  003778                     
  7372                           ; BSR set to: 0
  7373  003778  0E00               	movlw	0
  7374  00377A  6F61               	movwf	(?_readButtonRB0+1)& (0+255),b
  7375  00377C  0E01               	movlw	1
  7376  00377E  6F60               	movwf	?_readButtonRB0& (0+255),b
  7377  003780  EFCC  F01B         	goto	l430
  7378  003784                     l3034:
  7379                           
  7380                           ; BSR set to: 0
  7381  003784  0E00               	movlw	0
  7382  003786  6F61               	movwf	(?_readButtonRB0+1)& (0+255),b
  7383  003788  0E02               	movlw	2
  7384  00378A  6F60               	movwf	?_readButtonRB0& (0+255),b
  7385  00378C  EFCC  F01B         	goto	l430
  7386  003790                     l3038:
  7387                           
  7388                           ; BSR set to: 0
  7389                           ;buttons.c: 35:     return 0;
  7390  003790  0E00               	movlw	0
  7391  003792  6F61               	movwf	(?_readButtonRB0+1)& (0+255),b
  7392  003794  0E00               	movlw	0
  7393  003796  6F60               	movwf	?_readButtonRB0& (0+255),b
  7394  003798                     l430:
  7395                           
  7396                           ; BSR set to: 0
  7397  003798  0012               	return		;funcret
  7398  00379A                     __end_of_readButtonRB0:
  7399                           	opt callstack 0
  7400                           
  7401 ;; *************** function _readButtonRA5 *****************
  7402 ;; Defined at:
  7403 ;;		line 20 in file "buttons.c"
  7404 ;; Parameters:    Size  Location     Type
  7405 ;;		None
  7406 ;; Auto vars:     Size  Location     Type
  7407 ;;		None
  7408 ;; Return value:  Size  Location     Type
  7409 ;;                  2    0[BANK0 ] int 
  7410 ;; Registers used:
  7411 ;;		wreg, status,2, status,0
  7412 ;; Tracked objects:
  7413 ;;		On entry : 0/0
  7414 ;;		On exit  : 0/0
  7415 ;;		Unchanged: 0/0
  7416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7417 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7420 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7421 ;;Total ram usage:        2 bytes
  7422 ;; Hardware stack levels used:    1
  7423 ;; Hardware stack levels required when called:    6
  7424 ;; This function calls:
  7425 ;;		Nothing
  7426 ;; This function is called by:
  7427 ;;		_handleButton
  7428 ;; This function uses a non-reentrant model
  7429 ;;
  7430                           
  7431                           	psect	text41
  7432  00379A                     __ptext41:
  7433                           	opt callstack 0
  7434  00379A                     _readButtonRA5:
  7435                           	opt callstack 21
  7436  00379A                     
  7437                           ;buttons.c: 21:     firstReadRA5 = secondReadRA5;
  7438  00379A  C0D5  F0D6         	movff	_secondReadRA5,_firstReadRA5
  7439  00379E                     
  7440                           ;buttons.c: 22:     secondReadRA5 = PORTAbits.RA5;
  7441  00379E  0E00               	movlw	0
  7442  0037A0  BA80               	btfsc	128,5,c	;volatile
  7443  0037A2  0E01               	movlw	1
  7444  0037A4  0100               	movlb	0	; () banked
  7445  0037A6  6FD5               	movwf	_secondReadRA5& (0+255),b
  7446  0037A8                     
  7447                           ; BSR set to: 0
  7448                           ;buttons.c: 23:     if(secondReadRA5 == firstReadRA5) {
  7449  0037A8  51D6               	movf	_firstReadRA5& (0+255),w,b
  7450  0037AA  19D5               	xorwf	_secondReadRA5& (0+255),w,b
  7451  0037AC  A4D8               	btfss	status,2,c
  7452  0037AE  EFDB  F01B         	goto	u2561
  7453  0037B2  EFDD  F01B         	goto	u2560
  7454  0037B6                     u2561:
  7455  0037B6  EFF1  F01B         	goto	l3020
  7456  0037BA                     u2560:
  7457  0037BA                     
  7458                           ; BSR set to: 0
  7459                           ;buttons.c: 24:         return (secondReadRA5 == 0) ? 2 : 1;
  7460  0037BA  51D5               	movf	_secondReadRA5& (0+255),w,b
  7461  0037BC  B4D8               	btfsc	status,2,c
  7462  0037BE  EFE3  F01B         	goto	u2571
  7463  0037C2  EFE5  F01B         	goto	u2570
  7464  0037C6                     u2571:
  7465  0037C6  EFEB  F01B         	goto	l3016
  7466  0037CA                     u2570:
  7467  0037CA                     
  7468                           ; BSR set to: 0
  7469  0037CA  0E00               	movlw	0
  7470  0037CC  6F61               	movwf	(?_readButtonRA5+1)& (0+255),b
  7471  0037CE  0E01               	movlw	1
  7472  0037D0  6F60               	movwf	?_readButtonRA5& (0+255),b
  7473  0037D2  EFF5  F01B         	goto	l422
  7474  0037D6                     l3016:
  7475                           
  7476                           ; BSR set to: 0
  7477  0037D6  0E00               	movlw	0
  7478  0037D8  6F61               	movwf	(?_readButtonRA5+1)& (0+255),b
  7479  0037DA  0E02               	movlw	2
  7480  0037DC  6F60               	movwf	?_readButtonRA5& (0+255),b
  7481  0037DE  EFF5  F01B         	goto	l422
  7482  0037E2                     l3020:
  7483                           
  7484                           ; BSR set to: 0
  7485                           ;buttons.c: 26:     return 0;
  7486  0037E2  0E00               	movlw	0
  7487  0037E4  6F61               	movwf	(?_readButtonRA5+1)& (0+255),b
  7488  0037E6  0E00               	movlw	0
  7489  0037E8  6F60               	movwf	?_readButtonRA5& (0+255),b
  7490  0037EA                     l422:
  7491                           
  7492                           ; BSR set to: 0
  7493  0037EA  0012               	return		;funcret
  7494  0037EC                     __end_of_readButtonRA5:
  7495                           	opt callstack 0
  7496                           
  7497 ;; *************** function _dequeue *****************
  7498 ;; Defined at:
  7499 ;;		line 35 in file "ready_queue.c"
  7500 ;; Parameters:    Size  Location     Type
  7501 ;;		None
  7502 ;; Auto vars:     Size  Location     Type
  7503 ;;  temp            5   15[BANK0 ] struct .
  7504 ;;  idx             2   13[BANK0 ] int 
  7505 ;; Return value:  Size  Location     Type
  7506 ;;                  5    8[BANK0 ] struct .
  7507 ;; Registers used:
  7508 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7509 ;; Tracked objects:
  7510 ;;		On entry : 0/0
  7511 ;;		On exit  : 0/0
  7512 ;;		Unchanged: 0/0
  7513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7514 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7515 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7517 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7518 ;;Total ram usage:       12 bytes
  7519 ;; Hardware stack levels used:    1
  7520 ;; Hardware stack levels required when called:    9
  7521 ;; This function calls:
  7522 ;;		___awmod
  7523 ;;		___wmul
  7524 ;;		_isEmptyQueue
  7525 ;; This function is called by:
  7526 ;;		_selectReadyTask
  7527 ;; This function uses a non-reentrant model
  7528 ;;
  7529                           
  7530                           	psect	text42
  7531  0032DE                     __ptext42:
  7532                           	opt callstack 0
  7533  0032DE                     _dequeue:
  7534                           	opt callstack 19
  7535  0032DE                     
  7536                           ;ready_queue.c: 36:     queue_node temp;;ready_queue.c: 37:     temp.func_ptr = ((void*)
      +                          0);
  7537  0032DE  0E00               	movlw	0
  7538  0032E0  0100               	movlb	0	; () banked
  7539  0032E2  6F6F               	movwf	dequeue@temp& (0+255),b
  7540  0032E4  0E00               	movlw	0
  7541  0032E6  6F70               	movwf	(dequeue@temp+1)& (0+255),b
  7542  0032E8  0E00               	movlw	0
  7543  0032EA  6F71               	movwf	(dequeue@temp+2)& (0+255),b
  7544                           
  7545                           ;ready_queue.c: 38:     temp.data_p = ((void*)0);
  7546  0032EC  0E00               	movlw	0
  7547  0032EE  6F72               	movwf	(dequeue@temp+3)& (0+255),b
  7548  0032F0  0E00               	movlw	0
  7549  0032F2  6F73               	movwf	(dequeue@temp+4)& (0+255),b
  7550  0032F4                     
  7551                           ; BSR set to: 0
  7552                           ;ready_queue.c: 39:     if(isEmptyQueue())
  7553  0032F4  ECF8  F01C         	call	_isEmptyQueue	;wreg free
  7554  0032F8  0900               	iorlw	0
  7555  0032FA  B4D8               	btfsc	status,2,c
  7556  0032FC  EF82  F019         	goto	u3221
  7557  003300  EF84  F019         	goto	u3220
  7558  003304                     u3221:
  7559  003304  EF8F  F019         	goto	l188
  7560  003308                     u3220:
  7561  003308                     l3460:
  7562                           
  7563                           ;ready_queue.c: 40:         return temp;
  7564  003308  EE20  F06F         	lfsr	2,dequeue@temp
  7565  00330C  EE00  F068         	lfsr	0,?_dequeue
  7566  003310  0E04               	movlw	4
  7567  003312                     u3231:
  7568  003312  CFDB FFEB          	movff	plusw2,plusw0
  7569  003316  06E8               	decf	wreg,f,c
  7570  003318  E2FC               	bc	u3231
  7571  00331A  EFBF  F019         	goto	l189
  7572  00331E                     l188:
  7573                           
  7574                           ;ready_queue.c: 41:     int idx = front;
  7575  00331E  C0D1  F06D         	movff	_front,dequeue@idx
  7576  003322  C0D2  F06E         	movff	_front+1,dequeue@idx+1
  7577  003326                     
  7578                           ;ready_queue.c: 42:     front = (front + 1) % 20;
  7579  003326  0E01               	movlw	1
  7580  003328  0100               	movlb	0	; () banked
  7581  00332A  25D1               	addwf	_front& (0+255),w,b
  7582  00332C  6F60               	movwf	___awmod@dividend& (0+255),b
  7583  00332E  0E00               	movlw	0
  7584  003330  21D2               	addwfc	(_front+1)& (0+255),w,b
  7585  003332  6F61               	movwf	(___awmod@dividend+1)& (0+255),b
  7586  003334  0E00               	movlw	0
  7587  003336  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  7588  003338  0E14               	movlw	20
  7589  00333A  6F62               	movwf	___awmod@divisor& (0+255),b
  7590  00333C  EC6A  F017         	call	___awmod	;wreg free
  7591  003340  C060  F0D1         	movff	?___awmod,_front
  7592  003344  C061  F0D2         	movff	?___awmod+1,_front+1
  7593  003348                     
  7594                           ;ready_queue.c: 43:     temp = ready_queue[idx];
  7595  003348  C06D  F060         	movff	dequeue@idx,___wmul@multiplier
  7596  00334C  C06E  F061         	movff	dequeue@idx+1,___wmul@multiplier+1
  7597  003350  0E00               	movlw	0
  7598  003352  0100               	movlb	0	; () banked
  7599  003354  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7600  003356  0E05               	movlw	5
  7601  003358  6F62               	movwf	___wmul@multiplicand& (0+255),b
  7602  00335A  EC3E  F01D         	call	___wmul	;wreg free
  7603  00335E  0E00               	movlw	low _ready_queue
  7604  003360  0100               	movlb	0	; () banked
  7605  003362  2560               	addwf	?___wmul& (0+255),w,b
  7606  003364  6ED9               	movwf	fsr2l,c
  7607  003366  0E01               	movlw	high _ready_queue
  7608  003368  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  7609  00336A  6EDA               	movwf	fsr2h,c
  7610  00336C  EE10  F06F         	lfsr	1,dequeue@temp
  7611  003370  0E04               	movlw	4
  7612  003372                     u3241:
  7613  003372  CFDB FFE3          	movff	plusw2,plusw1
  7614  003376  06E8               	decf	wreg,f,c
  7615  003378  E2FC               	bc	u3241
  7616  00337A  EF84  F019         	goto	l3460
  7617  00337E                     l189:
  7618  00337E  0012               	return		;funcret
  7619  003380                     __end_of_dequeue:
  7620                           	opt callstack 0
  7621                           
  7622 ;; *************** function _isEmptyQueue *****************
  7623 ;; Defined at:
  7624 ;;		line 18 in file "ready_queue.c"
  7625 ;; Parameters:    Size  Location     Type
  7626 ;;		None
  7627 ;; Auto vars:     Size  Location     Type
  7628 ;;		None
  7629 ;; Return value:  Size  Location     Type
  7630 ;;                  1    wreg      unsigned char 
  7631 ;; Registers used:
  7632 ;;		wreg, status,2, status,0, cstack
  7633 ;; Tracked objects:
  7634 ;;		On entry : 0/0
  7635 ;;		On exit  : 0/0
  7636 ;;		Unchanged: 0/0
  7637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7642 ;;Total ram usage:        0 bytes
  7643 ;; Hardware stack levels used:    1
  7644 ;; Hardware stack levels required when called:    8
  7645 ;; This function calls:
  7646 ;;		_getSizeQueue
  7647 ;; This function is called by:
  7648 ;;		_dequeue
  7649 ;;		_selectReadyTask
  7650 ;; This function uses a non-reentrant model
  7651 ;;
  7652                           
  7653                           	psect	text43
  7654  0039F0                     __ptext43:
  7655                           	opt callstack 0
  7656  0039F0                     _isEmptyQueue:
  7657                           	opt callstack 20
  7658  0039F0                     
  7659                           ;ready_queue.c: 19:     if(front == -1)
  7660  0039F0  0100               	movlb	0	; () banked
  7661  0039F2  29D1               	incf	_front& (0+255),w,b
  7662  0039F4  E106               	bnz	u2531
  7663  0039F6  29D2               	incf	(_front+1)& (0+255),w,b
  7664  0039F8  A4D8               	btfss	status,2,c
  7665  0039FA  EF01  F01D         	goto	u2531
  7666  0039FE  EF03  F01D         	goto	u2530
  7667  003A02                     u2531:
  7668  003A02  EF06  F01D         	goto	l3002
  7669  003A06                     u2530:
  7670  003A06                     
  7671                           ; BSR set to: 0
  7672                           ;ready_queue.c: 20:         return 0;
  7673  003A06  0E00               	movlw	0
  7674  003A08  EF12  F01D         	goto	l180
  7675  003A0C                     l3002:
  7676                           
  7677                           ; BSR set to: 0
  7678                           ;ready_queue.c: 21:     return getSizeQueue() == 0 ? 1 : 0;
  7679  003A0C  EC13  F01D         	call	_getSizeQueue	;wreg free
  7680  003A10  0900               	iorlw	0
  7681  003A12  B4D8               	btfsc	status,2,c
  7682  003A14  EF0E  F01D         	goto	u2541
  7683  003A18  EF11  F01D         	goto	u2540
  7684  003A1C                     u2541:
  7685  003A1C  0E01               	movlw	1
  7686  003A1E  EF12  F01D         	goto	u2550
  7687  003A22                     u2540:
  7688  003A22  0E00               	movlw	0
  7689  003A24                     u2550:
  7690  003A24                     l180:
  7691  003A24  0012               	return		;funcret
  7692  003A26                     __end_of_isEmptyQueue:
  7693                           	opt callstack 0
  7694                           
  7695 ;; *************** function _getSizeQueue *****************
  7696 ;; Defined at:
  7697 ;;		line 10 in file "ready_queue.c"
  7698 ;; Parameters:    Size  Location     Type
  7699 ;;		None
  7700 ;; Auto vars:     Size  Location     Type
  7701 ;;		None
  7702 ;; Return value:  Size  Location     Type
  7703 ;;                  1    wreg      unsigned char 
  7704 ;; Registers used:
  7705 ;;		wreg, status,2, status,0, cstack
  7706 ;; Tracked objects:
  7707 ;;		On entry : 0/0
  7708 ;;		On exit  : 0/0
  7709 ;;		Unchanged: 0/0
  7710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7713 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7714 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7715 ;;Total ram usage:        2 bytes
  7716 ;; Hardware stack levels used:    1
  7717 ;; Hardware stack levels required when called:    7
  7718 ;; This function calls:
  7719 ;;		___awmod
  7720 ;; This function is called by:
  7721 ;;		_isEmptyQueue
  7722 ;; This function uses a non-reentrant model
  7723 ;;
  7724                           
  7725                           	psect	text44
  7726  003A26                     __ptext44:
  7727                           	opt callstack 0
  7728  003A26                     _getSizeQueue:
  7729                           	opt callstack 20
  7730  003A26                     
  7731                           ;ready_queue.c: 11:     return (rear - front + 1 + 20) % 20;
  7732  003A26  0100               	movlb	0	; () banked
  7733  003A28  51D1               	movf	_front& (0+255),w,b
  7734  003A2A  5DCF               	subwf	_rear& (0+255),w,b
  7735  003A2C  6F66               	movwf	??_getSizeQueue& (0+255),b
  7736  003A2E  51D2               	movf	(_front+1)& (0+255),w,b
  7737  003A30  59D0               	subwfb	(_rear+1)& (0+255),w,b
  7738  003A32  6F67               	movwf	(??_getSizeQueue+1)& (0+255),b
  7739  003A34  0E15               	movlw	21
  7740  003A36  2566               	addwf	??_getSizeQueue& (0+255),w,b
  7741  003A38  6F60               	movwf	___awmod@dividend& (0+255),b
  7742  003A3A  0E00               	movlw	0
  7743  003A3C  2167               	addwfc	(??_getSizeQueue+1)& (0+255),w,b
  7744  003A3E  6F61               	movwf	(___awmod@dividend+1)& (0+255),b
  7745  003A40  0E00               	movlw	0
  7746  003A42  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  7747  003A44  0E14               	movlw	20
  7748  003A46  6F62               	movwf	___awmod@divisor& (0+255),b
  7749  003A48  EC6A  F017         	call	___awmod	;wreg free
  7750  003A4C  0100               	movlb	0	; () banked
  7751  003A4E  5160               	movf	?___awmod& (0+255),w,b
  7752  003A50                     
  7753                           ; BSR set to: 0
  7754  003A50  0012               	return		;funcret
  7755  003A52                     __end_of_getSizeQueue:
  7756                           	opt callstack 0
  7757                           
  7758 ;; *************** function ___awmod *****************
  7759 ;; Defined at:
  7760 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  7761 ;; Parameters:    Size  Location     Type
  7762 ;;  dividend        2    0[BANK0 ] int 
  7763 ;;  divisor         2    2[BANK0 ] int 
  7764 ;; Auto vars:     Size  Location     Type
  7765 ;;  sign            1    5[BANK0 ] unsigned char 
  7766 ;;  counter         1    4[BANK0 ] unsigned char 
  7767 ;; Return value:  Size  Location     Type
  7768 ;;                  2    0[BANK0 ] int 
  7769 ;; Registers used:
  7770 ;;		wreg, status,2, status,0
  7771 ;; Tracked objects:
  7772 ;;		On entry : 0/0
  7773 ;;		On exit  : 0/0
  7774 ;;		Unchanged: 0/0
  7775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7776 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7777 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7779 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7780 ;;Total ram usage:        6 bytes
  7781 ;; Hardware stack levels used:    1
  7782 ;; Hardware stack levels required when called:    6
  7783 ;; This function calls:
  7784 ;;		Nothing
  7785 ;; This function is called by:
  7786 ;;		_printTempAndHumid
  7787 ;;		_getSizeQueue
  7788 ;;		_dequeue
  7789 ;; This function uses a non-reentrant model
  7790 ;;
  7791                           
  7792                           	psect	text45
  7793  002ED4                     __ptext45:
  7794                           	opt callstack 0
  7795  002ED4                     ___awmod:
  7796                           	opt callstack 21
  7797  002ED4  0E00               	movlw	0
  7798  002ED6  0100               	movlb	0	; () banked
  7799  002ED8  6F65               	movwf	___awmod@sign& (0+255),b
  7800  002EDA                     
  7801                           ; BSR set to: 0
  7802  002EDA  BF61               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  7803  002EDC  EF74  F017         	goto	u1890
  7804  002EE0  EF72  F017         	goto	u1891
  7805  002EE4                     u1891:
  7806  002EE4  EF7A  F017         	goto	l2638
  7807  002EE8                     u1890:
  7808  002EE8                     
  7809                           ; BSR set to: 0
  7810  002EE8  6D60               	negf	___awmod@dividend& (0+255),b
  7811  002EEA  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  7812  002EEC  B0D8               	btfsc	status,0,c
  7813  002EEE  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  7814  002EF0                     
  7815                           ; BSR set to: 0
  7816  002EF0  0E01               	movlw	1
  7817  002EF2  6F65               	movwf	___awmod@sign& (0+255),b
  7818  002EF4                     l2638:
  7819                           
  7820                           ; BSR set to: 0
  7821  002EF4  BF63               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  7822  002EF6  EF81  F017         	goto	u1900
  7823  002EFA  EF7F  F017         	goto	u1901
  7824  002EFE                     u1901:
  7825  002EFE  EF85  F017         	goto	l2642
  7826  002F02                     u1900:
  7827  002F02                     
  7828                           ; BSR set to: 0
  7829  002F02  6D62               	negf	___awmod@divisor& (0+255),b
  7830  002F04  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  7831  002F06  B0D8               	btfsc	status,0,c
  7832  002F08  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  7833  002F0A                     l2642:
  7834                           
  7835                           ; BSR set to: 0
  7836  002F0A  5162               	movf	___awmod@divisor& (0+255),w,b
  7837  002F0C  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  7838  002F0E  B4D8               	btfsc	status,2,c
  7839  002F10  EF8C  F017         	goto	u1911
  7840  002F14  EF8E  F017         	goto	u1910
  7841  002F18                     u1911:
  7842  002F18  EFB2  F017         	goto	l2658
  7843  002F1C                     u1910:
  7844  002F1C                     
  7845                           ; BSR set to: 0
  7846  002F1C  0E01               	movlw	1
  7847  002F1E  6F64               	movwf	___awmod@counter& (0+255),b
  7848  002F20  EF96  F017         	goto	l2648
  7849  002F24                     l2646:
  7850                           
  7851                           ; BSR set to: 0
  7852  002F24  90D8               	bcf	status,0,c
  7853  002F26  3762               	rlcf	___awmod@divisor& (0+255),f,b
  7854  002F28  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  7855  002F2A  2B64               	incf	___awmod@counter& (0+255),f,b
  7856  002F2C                     l2648:
  7857                           
  7858                           ; BSR set to: 0
  7859  002F2C  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7860  002F2E  EF9B  F017         	goto	u1921
  7861  002F32  EF9D  F017         	goto	u1920
  7862  002F36                     u1921:
  7863  002F36  EF92  F017         	goto	l2646
  7864  002F3A                     u1920:
  7865  002F3A                     l2650:
  7866                           
  7867                           ; BSR set to: 0
  7868  002F3A  5162               	movf	___awmod@divisor& (0+255),w,b
  7869  002F3C  5D60               	subwf	___awmod@dividend& (0+255),w,b
  7870  002F3E  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  7871  002F40  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  7872  002F42  A0D8               	btfss	status,0,c
  7873  002F44  EFA6  F017         	goto	u1931
  7874  002F48  EFA8  F017         	goto	u1930
  7875  002F4C                     u1931:
  7876  002F4C  EFAC  F017         	goto	l2654
  7877  002F50                     u1930:
  7878  002F50                     
  7879                           ; BSR set to: 0
  7880  002F50  5162               	movf	___awmod@divisor& (0+255),w,b
  7881  002F52  5F60               	subwf	___awmod@dividend& (0+255),f,b
  7882  002F54  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  7883  002F56  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  7884  002F58                     l2654:
  7885                           
  7886                           ; BSR set to: 0
  7887  002F58  90D8               	bcf	status,0,c
  7888  002F5A  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  7889  002F5C  3362               	rrcf	___awmod@divisor& (0+255),f,b
  7890  002F5E                     
  7891                           ; BSR set to: 0
  7892  002F5E  2F64               	decfsz	___awmod@counter& (0+255),f,b
  7893  002F60  EF9D  F017         	goto	l2650
  7894  002F64                     l2658:
  7895                           
  7896                           ; BSR set to: 0
  7897  002F64  5165               	movf	___awmod@sign& (0+255),w,b
  7898  002F66  B4D8               	btfsc	status,2,c
  7899  002F68  EFB8  F017         	goto	u1941
  7900  002F6C  EFBA  F017         	goto	u1940
  7901  002F70                     u1941:
  7902  002F70  EFBE  F017         	goto	l2662
  7903  002F74                     u1940:
  7904  002F74                     
  7905                           ; BSR set to: 0
  7906  002F74  6D60               	negf	___awmod@dividend& (0+255),b
  7907  002F76  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  7908  002F78  B0D8               	btfsc	status,0,c
  7909  002F7A  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  7910  002F7C                     l2662:
  7911                           
  7912                           ; BSR set to: 0
  7913  002F7C  C060  F060         	movff	___awmod@dividend,?___awmod
  7914  002F80  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  7915  002F84                     
  7916                           ; BSR set to: 0
  7917  002F84  0012               	return		;funcret
  7918  002F86                     __end_of___awmod:
  7919                           	opt callstack 0
  7920                           
  7921 ;; *************** function ___wmul *****************
  7922 ;; Defined at:
  7923 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  7924 ;; Parameters:    Size  Location     Type
  7925 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7926 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7927 ;; Auto vars:     Size  Location     Type
  7928 ;;  product         2    4[BANK0 ] unsigned int 
  7929 ;; Return value:  Size  Location     Type
  7930 ;;                  2    0[BANK0 ] unsigned int 
  7931 ;; Registers used:
  7932 ;;		wreg, status,2, status,0, prodl, prodh
  7933 ;; Tracked objects:
  7934 ;;		On entry : 0/0
  7935 ;;		On exit  : 0/0
  7936 ;;		Unchanged: 0/0
  7937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7938 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7939 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7941 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7942 ;;Total ram usage:        6 bytes
  7943 ;; Hardware stack levels used:    1
  7944 ;; Hardware stack levels required when called:    6
  7945 ;; This function calls:
  7946 ;;		Nothing
  7947 ;; This function is called by:
  7948 ;;		_queueInitialize
  7949 ;;		_dequeue
  7950 ;;		_initializeTaskList
  7951 ;;		_addTask
  7952 ;; This function uses a non-reentrant model
  7953 ;;
  7954                           
  7955                           	psect	text46
  7956  003A7C                     __ptext46:
  7957                           	opt callstack 0
  7958  003A7C                     ___wmul:
  7959                           	opt callstack 20
  7960  003A7C  0100               	movlb	0	; () banked
  7961  003A7E  5160               	movf	___wmul@multiplier& (0+255),w,b
  7962  003A80  0362               	mulwf	___wmul@multiplicand& (0+255),b
  7963  003A82  CFF3 F064          	movff	prodl,___wmul@product
  7964  003A86  CFF4 F065          	movff	prodh,___wmul@product+1
  7965  003A8A  5160               	movf	___wmul@multiplier& (0+255),w,b
  7966  003A8C  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  7967  003A8E  50F3               	movf	243,w,c
  7968  003A90  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  7969  003A92  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  7970  003A94  0362               	mulwf	___wmul@multiplicand& (0+255),b
  7971  003A96  50F3               	movf	243,w,c
  7972  003A98  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  7973  003A9A                     
  7974                           ; BSR set to: 0
  7975  003A9A  C064  F060         	movff	___wmul@product,?___wmul
  7976  003A9E  C065  F061         	movff	___wmul@product+1,?___wmul+1
  7977  003AA2                     
  7978                           ; BSR set to: 0
  7979  003AA2  0012               	return		;funcret
  7980  003AA4                     __end_of___wmul:
  7981                           	opt callstack 0
  7982                           
  7983 ;; *************** function _timer_interrupt *****************
  7984 ;; Defined at:
  7985 ;;		line 55 in file "clock.c"
  7986 ;; Parameters:    Size  Location     Type
  7987 ;;		None
  7988 ;; Auto vars:     Size  Location     Type
  7989 ;;		None
  7990 ;; Return value:  Size  Location     Type
  7991 ;;                  1    wreg      void 
  7992 ;; Registers used:
  7993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7994 ;; Tracked objects:
  7995 ;;		On entry : 0/0
  7996 ;;		On exit  : 0/0
  7997 ;;		Unchanged: 0/0
  7998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8001 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8002 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8003 ;;Total ram usage:        6 bytes
  8004 ;; Hardware stack levels used:    1
  8005 ;; Hardware stack levels required when called:    5
  8006 ;; This function calls:
  8007 ;;		_handleListHead
  8008 ;; This function is called by:
  8009 ;;		Interrupt level 2
  8010 ;; This function uses a non-reentrant model
  8011 ;;
  8012                           
  8013                           	psect	intcode
  8014  000008                     __pintcode:
  8015                           	opt callstack 0
  8016  000008                     _timer_interrupt:
  8017                           	opt callstack 17
  8018                           
  8019                           ; BSR set to: 0
  8020                           ;incstack = 0
  8021  000008  824D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8022  00000A  ED0B  F01A         	call	int_func,f	;refresh shadow registers
  8023                           
  8024                           	psect	intcode_body
  8025  003416                     __pintcode_body:
  8026                           	opt callstack 17
  8027  003416                     int_func:
  8028                           	opt callstack 17
  8029  003416  0006               	pop		; remove dummy address from shadow register refresh
  8030  003418  CFE1 F02E          	movff	fsr1l,??_timer_interrupt
  8031  00341C  CFE2 F02F          	movff	fsr1h,??_timer_interrupt+1
  8032  003420  CFD9 F030          	movff	fsr2l,??_timer_interrupt+2
  8033  003424  CFDA F031          	movff	fsr2h,??_timer_interrupt+3
  8034  003428  CFF3 F032          	movff	prodl,??_timer_interrupt+4
  8035  00342C  CFF4 F033          	movff	prodh,??_timer_interrupt+5
  8036  003430                     
  8037                           ;clock.c: 56:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF) {
  8038  003430  AAF2               	btfss	242,5,c	;volatile
  8039  003432  EF1D  F01A         	goto	i2u367_41
  8040  003436  EF1F  F01A         	goto	i2u367_40
  8041  00343A                     i2u367_41:
  8042  00343A  EF30  F01A         	goto	i2l3832
  8043  00343E                     i2u367_40:
  8044  00343E  A4F2               	btfss	242,2,c	;volatile
  8045  003440  EF24  F01A         	goto	i2u368_41
  8046  003444  EF26  F01A         	goto	i2u368_40
  8047  003448                     i2u368_41:
  8048  003448  EF30  F01A         	goto	i2l3832
  8049  00344C                     i2u368_40:
  8050  00344C                     
  8051                           ;clock.c: 57:         INTCONbits.TMR0IF = 0;
  8052  00344C  94F2               	bcf	242,2,c	;volatile
  8053  00344E                     
  8054                           ;clock.c: 58:         TMR0L = 131;
  8055  00344E  0E83               	movlw	131
  8056  003450  6ED6               	movwf	214,c	;volatile
  8057  003452                     
  8058                           ;clock.c: 59:         time_ms++;
  8059  003452  0E01               	movlw	1
  8060  003454  0100               	movlb	0	; () banked
  8061  003456  27B9               	addwf	_time_ms& (0+255),f,b
  8062  003458  0E00               	movlw	0
  8063  00345A  23BA               	addwfc	(_time_ms+1)& (0+255),f,b
  8064  00345C  23BB               	addwfc	(_time_ms+2)& (0+255),f,b
  8065  00345E  23BC               	addwfc	(_time_ms+3)& (0+255),f,b
  8066  003460                     i2l3832:
  8067                           
  8068                           ;clock.c: 61:     if(PIE1bits.TMR1IE && PIR1bits.TMR1IF) {
  8069  003460  A09D               	btfss	157,0,c	;volatile
  8070  003462  EF35  F01A         	goto	i2u369_41
  8071  003466  EF37  F01A         	goto	i2u369_40
  8072  00346A                     i2u369_41:
  8073  00346A  EF45  F01A         	goto	i2l375
  8074  00346E                     i2u369_40:
  8075  00346E  A09E               	btfss	158,0,c	;volatile
  8076  003470  EF3C  F01A         	goto	i2u370_41
  8077  003474  EF3E  F01A         	goto	i2u370_40
  8078  003478                     i2u370_41:
  8079  003478  EF45  F01A         	goto	i2l375
  8080  00347C                     i2u370_40:
  8081  00347C                     
  8082                           ;clock.c: 62:         PIR1bits.TMR1IF = 0;
  8083  00347C  909E               	bcf	158,0,c	;volatile
  8084  00347E                     
  8085                           ;clock.c: 63:         TMR1H = 0xB1;
  8086  00347E  0EB1               	movlw	177
  8087  003480  6ECF               	movwf	207,c	;volatile
  8088                           
  8089                           ;clock.c: 64:         TMR1L = 0xE0;
  8090  003482  0EE0               	movlw	224
  8091  003484  6ECE               	movwf	206,c	;volatile
  8092  003486                     
  8093                           ;clock.c: 65:         handleListHead();
  8094  003486  EC69  F00A         	call	_handleListHead	;wreg free
  8095  00348A                     i2l375:
  8096  00348A  C033  FFF4         	movff	??_timer_interrupt+5,prodh
  8097  00348E  C032  FFF3         	movff	??_timer_interrupt+4,prodl
  8098  003492  C031  FFDA         	movff	??_timer_interrupt+3,fsr2h
  8099  003496  C030  FFD9         	movff	??_timer_interrupt+2,fsr2l
  8100  00349A  C02F  FFE2         	movff	??_timer_interrupt+1,fsr1h
  8101  00349E  C02E  FFE1         	movff	??_timer_interrupt,fsr1l
  8102  0034A2  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8103  0034A4  0011               	retfie		f
  8104  0034A6                     __end_of_timer_interrupt:
  8105                           	opt callstack 0
  8106                           
  8107 ;; *************** function _handleListHead *****************
  8108 ;; Defined at:
  8109 ;;		line 86 in file "task.c"
  8110 ;; Parameters:    Size  Location     Type
  8111 ;;		None
  8112 ;; Auto vars:     Size  Location     Type
  8113 ;;  cur             2   41[COMRAM] int 
  8114 ;;  prev            2   37[COMRAM] int 
  8115 ;;  sum             2   39[COMRAM] int 
  8116 ;;  pos             2   43[COMRAM] int 
  8117 ;; Return value:  Size  Location     Type
  8118 ;;                  1    wreg      void 
  8119 ;; Registers used:
  8120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8121 ;; Tracked objects:
  8122 ;;		On entry : 0/0
  8123 ;;		On exit  : 0/0
  8124 ;;		Unchanged: 0/0
  8125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8127 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8128 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8129 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8130 ;;Total ram usage:       31 bytes
  8131 ;; Hardware stack levels used:    1
  8132 ;; Hardware stack levels required when called:    4
  8133 ;; This function calls:
  8134 ;;		_enqueue
  8135 ;;		_removeTask
  8136 ;;		i2___wmul
  8137 ;; This function is called by:
  8138 ;;		_timer_interrupt
  8139 ;; This function uses a non-reentrant model
  8140 ;;
  8141                           
  8142                           	psect	text48
  8143  0014D2                     __ptext48:
  8144                           	opt callstack 0
  8145  0014D2                     _handleListHead:
  8146                           	opt callstack 17
  8147  0014D2                     
  8148                           ;task.c: 87:     if(head == 105)
  8149  0014D2  0E69               	movlw	105
  8150  0014D4  0100               	movlb	0	; () banked
  8151  0014D6  19C3               	xorwf	_head& (0+255),w,b
  8152  0014D8  A4D8               	btfss	status,2,c
  8153  0014DA  EF71  F00A         	goto	i2u358_41
  8154  0014DE  EF73  F00A         	goto	i2u358_40
  8155  0014E2                     i2u358_41:
  8156  0014E2  EF9F  F00C         	goto	i2l3800
  8157  0014E6                     i2u358_40:
  8158  0014E6  EFC1  F00C         	goto	i2l267
  8159  0014EA                     i2l269:
  8160                           
  8161                           ; BSR set to: 0
  8162                           ;task.c: 90:         int pos = head;
  8163  0014EA  C0C3  F02C         	movff	_head,handleListHead@pos
  8164  0014EE  6A2D               	clrf	(handleListHead@pos+1)^0,c
  8165  0014F0                     
  8166                           ; BSR set to: 0
  8167                           ;task.c: 91:         enqueue(task_list[pos].func_ptr, task_list[pos].data_p);
  8168  0014F0  C02C  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  8169  0014F4  C02D  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  8170  0014F8  0E00               	movlw	0
  8171  0014FA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8172  0014FC  0E0F               	movlw	15
  8173  0014FE  6E03               	movwf	i2___wmul@multiplicand^0,c
  8174  001500  EC52  F01D         	call	i2___wmul	;wreg free
  8175  001504  0E6C               	movlw	low (_task_list+8)
  8176  001506  2401               	addwf	?i2___wmul^0,w,c
  8177  001508  6ED9               	movwf	fsr2l,c
  8178  00150A  0E01               	movlw	high (_task_list+8)
  8179  00150C  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8180  00150E  6EDA               	movwf	fsr2h,c
  8181  001510  CFDE F01F          	movff	postinc2,_handleListHead$1979
  8182  001514  CFDE F020          	movff	postinc2,_handleListHead$1979+1
  8183  001518  CFDD F021          	movff	postdec2,_handleListHead$1979+2
  8184                           
  8185                           ;task.c: 91:         enqueue(task_list[pos].func_ptr, task_list[pos].data_p);
  8186  00151C  C02C  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  8187  001520  C02D  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  8188  001524  0E00               	movlw	0
  8189  001526  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8190  001528  0E0F               	movlw	15
  8191  00152A  6E03               	movwf	i2___wmul@multiplicand^0,c
  8192  00152C  EC52  F01D         	call	i2___wmul	;wreg free
  8193  001530  0E71               	movlw	low (_task_list+13)
  8194  001532  2401               	addwf	?i2___wmul^0,w,c
  8195  001534  6ED9               	movwf	fsr2l,c
  8196  001536  0E01               	movlw	high (_task_list+13)
  8197  001538  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8198  00153A  6EDA               	movwf	fsr2h,c
  8199  00153C  CFDE F022          	movff	postinc2,_handleListHead$1984
  8200  001540  CFDD F023          	movff	postdec2,_handleListHead$1984+1
  8201                           
  8202                           ;task.c: 91:         enqueue(task_list[pos].func_ptr, task_list[pos].data_p);
  8203  001544  C01F  F00A         	movff	_handleListHead$1979,enqueue@ptr
  8204  001548  C020  F00B         	movff	_handleListHead$1979+1,enqueue@ptr+1
  8205  00154C  C021  F00C         	movff	_handleListHead$1979+2,enqueue@ptr+2
  8206  001550  C022  F00D         	movff	_handleListHead$1984,enqueue@data
  8207  001554  C023  F00E         	movff	_handleListHead$1984+1,enqueue@data+1
  8208  001558  EC71  F018         	call	_enqueue	;wreg free
  8209                           
  8210                           ;task.c: 92:         head = task_list[pos].next;
  8211  00155C  C02C  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  8212  001560  C02D  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  8213  001564  0E00               	movlw	0
  8214  001566  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8215  001568  0E0F               	movlw	15
  8216  00156A  6E03               	movwf	i2___wmul@multiplicand^0,c
  8217  00156C  EC52  F01D         	call	i2___wmul	;wreg free
  8218  001570  0E6F               	movlw	low (_task_list+11)
  8219  001572  2401               	addwf	?i2___wmul^0,w,c
  8220  001574  6ED9               	movwf	fsr2l,c
  8221  001576  0E01               	movlw	high (_task_list+11)
  8222  001578  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8223  00157A  6EDA               	movwf	fsr2h,c
  8224  00157C  50DF               	movf	indf2,w,c
  8225  00157E  0100               	movlb	0	; () banked
  8226  001580  6FC3               	movwf	_head& (0+255),b
  8227                           
  8228                           ;task.c: 93:         if(task_list[pos].period_t == 0) {
  8229  001582  C02C  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  8230  001586  C02D  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  8231  00158A  0E00               	movlw	0
  8232  00158C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8233  00158E  0E0F               	movlw	15
  8234  001590  6E03               	movwf	i2___wmul@multiplicand^0,c
  8235  001592  EC52  F01D         	call	i2___wmul	;wreg free
  8236  001596  0E68               	movlw	low (_task_list+4)
  8237  001598  2401               	addwf	?i2___wmul^0,w,c
  8238  00159A  6ED9               	movwf	fsr2l,c
  8239  00159C  0E01               	movlw	high (_task_list+4)
  8240  00159E  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8241  0015A0  6EDA               	movwf	fsr2h,c
  8242  0015A2  50DE               	movf	postinc2,w,c
  8243  0015A4  10DE               	iorwf	postinc2,w,c
  8244  0015A6  10DE               	iorwf	postinc2,w,c
  8245  0015A8  10DE               	iorwf	postinc2,w,c
  8246  0015AA  A4D8               	btfss	status,2,c
  8247  0015AC  EFDA  F00A         	goto	i2u359_41
  8248  0015B0  EFDC  F00A         	goto	i2u359_40
  8249  0015B4                     i2u359_41:
  8250  0015B4  EFE1  F00A         	goto	i2l3770
  8251  0015B8                     i2u359_40:
  8252  0015B8                     
  8253                           ;task.c: 94:             removeTask(pos);
  8254  0015B8  502C               	movf	handleListHead@pos^0,w,c
  8255  0015BA  ECC3  F012         	call	_removeTask
  8256                           
  8257                           ;task.c: 95:         }
  8258  0015BE  EF9F  F00C         	goto	i2l3800
  8259  0015C2                     i2l3770:
  8260                           
  8261                           ;task.c: 97:             task_list[pos].delay_t = task_list[pos].period_t;
  8262  0015C2  C02C  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  8263  0015C6  C02D  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  8264  0015CA  0E00               	movlw	0
  8265  0015CC  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8266  0015CE  0E0F               	movlw	15
  8267  0015D0  6E03               	movwf	i2___wmul@multiplicand^0,c
  8268  0015D2  EC52  F01D         	call	i2___wmul	;wreg free
  8269  0015D6  0E68               	movlw	low (_task_list+4)
  8270  0015D8  2401               	addwf	?i2___wmul^0,w,c
  8271  0015DA  6ED9               	movwf	fsr2l,c
  8272  0015DC  0E01               	movlw	high (_task_list+4)
  8273  0015DE  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8274  0015E0  6EDA               	movwf	fsr2h,c
  8275  0015E2  C02C  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  8276  0015E6  C02D  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  8277  0015EA  0E00               	movlw	0
  8278  0015EC  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8279  0015EE  0E0F               	movlw	15
  8280  0015F0  6E03               	movwf	i2___wmul@multiplicand^0,c
  8281  0015F2  EC52  F01D         	call	i2___wmul	;wreg free
  8282  0015F6  0E64               	movlw	low _task_list
  8283  0015F8  2401               	addwf	?i2___wmul^0,w,c
  8284  0015FA  6EE1               	movwf	fsr1l,c
  8285  0015FC  0E01               	movlw	high _task_list
  8286  0015FE  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8287  001600  6EE2               	movwf	fsr1h,c
  8288  001602  CFDE FFE6          	movff	postinc2,postinc1
  8289  001606  CFDE FFE6          	movff	postinc2,postinc1
  8290  00160A  CFDE FFE6          	movff	postinc2,postinc1
  8291  00160E  CFDE FFE6          	movff	postinc2,postinc1
  8292  001612                     
  8293                           ;task.c: 98:             int sum = task_list[head].delay_t;
  8294  001612  0100               	movlb	0	; () banked
  8295  001614  51C3               	movf	_head& (0+255),w,b
  8296  001616  0D0F               	mullw	15
  8297  001618  0E64               	movlw	low _task_list
  8298  00161A  24F3               	addwf	243,w,c
  8299  00161C  6ED9               	movwf	fsr2l,c
  8300  00161E  0E01               	movlw	high _task_list
  8301  001620  20F4               	addwfc	prodh,w,c
  8302  001622  6EDA               	movwf	fsr2h,c
  8303  001624  CFDE F028          	movff	postinc2,handleListHead@sum
  8304  001628  CFDD F029          	movff	postdec2,handleListHead@sum+1
  8305  00162C                     
  8306                           ; BSR set to: 0
  8307                           ;task.c: 99:             if(head == 105 || (head != 105 && sum > task_list[pos].delay_t)
      +                          ) {
  8308  00162C  0E69               	movlw	105
  8309  00162E  19C3               	xorwf	_head& (0+255),w,b
  8310  001630  B4D8               	btfsc	status,2,c
  8311  001632  EF1D  F00B         	goto	i2u360_41
  8312  001636  EF1F  F00B         	goto	i2u360_40
  8313  00163A                     i2u360_41:
  8314  00163A  EF50  F00B         	goto	i2l3780
  8315  00163E                     i2u360_40:
  8316  00163E                     
  8317                           ; BSR set to: 0
  8318  00163E  0E69               	movlw	105
  8319  001640  19C3               	xorwf	_head& (0+255),w,b
  8320  001642  B4D8               	btfsc	status,2,c
  8321  001644  EF26  F00B         	goto	i2u361_41
  8322  001648  EF28  F00B         	goto	i2u361_40
  8323  00164C                     i2u361_41:
  8324  00164C  EF6C  F00B         	goto	i2l3784
  8325  001650                     i2u361_40:
  8326  001650                     
  8327                           ; BSR set to: 0
  8328  001650  C028  F00F         	movff	handleListHead@sum,??_handleListHead
  8329  001654  C029  F010         	movff	handleListHead@sum+1,??_handleListHead+1
  8330  001658  0E00               	movlw	0
  8331  00165A  BE10               	btfsc	(??_handleListHead+1)^0,7,c
  8332  00165C  0EFF               	movlw	255
  8333  00165E  6E11               	movwf	(??_handleListHead+2)^0,c
  8334  001660  6E12               	movwf	(??_handleListHead+3)^0,c
  8335  001662  C02C  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  8336  001666  C02D  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  8337  00166A  0E00               	movlw	0
  8338  00166C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8339  00166E  0E0F               	movlw	15
  8340  001670  6E03               	movwf	i2___wmul@multiplicand^0,c
  8341  001672  EC52  F01D         	call	i2___wmul	;wreg free
  8342  001676  0E64               	movlw	low _task_list
  8343  001678  2401               	addwf	?i2___wmul^0,w,c
  8344  00167A  6ED9               	movwf	fsr2l,c
  8345  00167C  0E01               	movlw	high _task_list
  8346  00167E  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8347  001680  6EDA               	movwf	fsr2h,c
  8348  001682  500F               	movf	??_handleListHead^0,w,c
  8349  001684  5CDE               	subwf	postinc2,w,c
  8350  001686  5010               	movf	(??_handleListHead+1)^0,w,c
  8351  001688  58DE               	subwfb	postinc2,w,c
  8352  00168A  5011               	movf	(??_handleListHead+2)^0,w,c
  8353  00168C  58DE               	subwfb	postinc2,w,c
  8354  00168E  5012               	movf	(??_handleListHead+3)^0,w,c
  8355  001690  58DE               	subwfb	postinc2,w,c
  8356  001692  B0D8               	btfsc	status,0,c
  8357  001694  EF4E  F00B         	goto	i2u362_41
  8358  001698  EF50  F00B         	goto	i2u362_40
  8359  00169C                     i2u362_41:
  8360  00169C  EF6C  F00B         	goto	i2l3784
  8361  0016A0                     i2u362_40:
  8362  0016A0                     i2l3780:
  8363                           
  8364                           ;task.c: 100:                 task_list[pos].next = head;
  8365  0016A0  0100               	movlb	0	; () banked
  8366  0016A2  51C3               	movf	_head& (0+255),w,b
  8367  0016A4  6E0F               	movwf	??_handleListHead^0,c
  8368  0016A6  6A10               	clrf	(??_handleListHead+1)^0,c
  8369  0016A8  C02C  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  8370  0016AC  C02D  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  8371  0016B0  0E00               	movlw	0
  8372  0016B2  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8373  0016B4  0E0F               	movlw	15
  8374  0016B6  6E03               	movwf	i2___wmul@multiplicand^0,c
  8375  0016B8  EC52  F01D         	call	i2___wmul	;wreg free
  8376  0016BC  0E6F               	movlw	low (_task_list+11)
  8377  0016BE  2401               	addwf	?i2___wmul^0,w,c
  8378  0016C0  6ED9               	movwf	fsr2l,c
  8379  0016C2  0E01               	movlw	high (_task_list+11)
  8380  0016C4  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8381  0016C6  6EDA               	movwf	fsr2h,c
  8382  0016C8  C00F  FFDE         	movff	??_handleListHead,postinc2
  8383  0016CC  C010  FFDD         	movff	??_handleListHead+1,postdec2
  8384  0016D0                     
  8385                           ;task.c: 101:                 head = pos;
  8386  0016D0  C02C  F0C3         	movff	handleListHead@pos,_head
  8387                           
  8388                           ;task.c: 102:             } else {
  8389  0016D4  EF41  F00C         	goto	i2l275
  8390  0016D8                     i2l3784:
  8391                           
  8392                           ;task.c: 104:                 int cur = task_list[head].next;
  8393  0016D8  0100               	movlb	0	; () banked
  8394  0016DA  51C3               	movf	_head& (0+255),w,b
  8395  0016DC  0D0F               	mullw	15
  8396  0016DE  0E6F               	movlw	low (_task_list+11)
  8397  0016E0  24F3               	addwf	243,w,c
  8398  0016E2  6ED9               	movwf	fsr2l,c
  8399  0016E4  0E01               	movlw	high (_task_list+11)
  8400  0016E6  20F4               	addwfc	prodh,w,c
  8401  0016E8  6EDA               	movwf	fsr2h,c
  8402  0016EA  CFDE F02A          	movff	postinc2,handleListHead@cur
  8403  0016EE  CFDD F02B          	movff	postdec2,handleListHead@cur+1
  8404  0016F2                     
  8405                           ; BSR set to: 0
  8406                           ;task.c: 105:                 int prev = head;
  8407  0016F2  C0C3  F026         	movff	_head,handleListHead@prev
  8408  0016F6  6A27               	clrf	(handleListHead@prev+1)^0,c
  8409                           
  8410                           ;task.c: 106:                 while(cur != 105 && sum + task_list[cur].delay_t <= task_l
      +                          ist[pos].delay_t) {
  8411  0016F8  EFAA  F00B         	goto	i2l3792
  8412  0016FC                     i2l3788:
  8413                           
  8414                           ;task.c: 108:                     sum+= task_list[cur].delay_t;
  8415  0016FC  C02A  F001         	movff	handleListHead@cur,i2___wmul@multiplier
  8416  001700  C02B  F002         	movff	handleListHead@cur+1,i2___wmul@multiplier+1
  8417  001704  0E00               	movlw	0
  8418  001706  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8419  001708  0E0F               	movlw	15
  8420  00170A  6E03               	movwf	i2___wmul@multiplicand^0,c
  8421  00170C  EC52  F01D         	call	i2___wmul	;wreg free
  8422  001710  0E64               	movlw	low _task_list
  8423  001712  2401               	addwf	?i2___wmul^0,w,c
  8424  001714  6ED9               	movwf	fsr2l,c
  8425  001716  0E01               	movlw	high _task_list
  8426  001718  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8427  00171A  6EDA               	movwf	fsr2h,c
  8428  00171C  50DE               	movf	postinc2,w,c
  8429  00171E  2628               	addwf	handleListHead@sum^0,f,c
  8430  001720  50DD               	movf	postdec2,w,c
  8431  001722  2229               	addwfc	(handleListHead@sum+1)^0,f,c
  8432  001724                     
  8433                           ;task.c: 109:                     prev = cur;
  8434  001724  C02A  F026         	movff	handleListHead@cur,handleListHead@prev
  8435  001728  C02B  F027         	movff	handleListHead@cur+1,handleListHead@prev+1
  8436                           
  8437                           ;task.c: 110:                     cur = task_list[cur].next;
  8438  00172C  C02A  F001         	movff	handleListHead@cur,i2___wmul@multiplier
  8439  001730  C02B  F002         	movff	handleListHead@cur+1,i2___wmul@multiplier+1
  8440  001734  0E00               	movlw	0
  8441  001736  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8442  001738  0E0F               	movlw	15
  8443  00173A  6E03               	movwf	i2___wmul@multiplicand^0,c
  8444  00173C  EC52  F01D         	call	i2___wmul	;wreg free
  8445  001740  0E6F               	movlw	low (_task_list+11)
  8446  001742  2401               	addwf	?i2___wmul^0,w,c
  8447  001744  6ED9               	movwf	fsr2l,c
  8448  001746  0E01               	movlw	high (_task_list+11)
  8449  001748  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8450  00174A  6EDA               	movwf	fsr2h,c
  8451  00174C  CFDE F02A          	movff	postinc2,handleListHead@cur
  8452  001750  CFDD F02B          	movff	postdec2,handleListHead@cur+1
  8453  001754                     i2l3792:
  8454                           
  8455                           ;task.c: 106:                 while(cur != 105 && sum + task_list[cur].delay_t <= task_l
      +                          ist[pos].delay_t) {
  8456  001754  0E69               	movlw	105
  8457  001756  182A               	xorwf	handleListHead@cur^0,w,c
  8458  001758  102B               	iorwf	(handleListHead@cur+1)^0,w,c
  8459  00175A  B4D8               	btfsc	status,2,c
  8460  00175C  EFB2  F00B         	goto	i2u363_41
  8461  001760  EFB4  F00B         	goto	i2u363_40
  8462  001764                     i2u363_41:
  8463  001764  EF00  F00C         	goto	i2l3796
  8464  001768                     i2u363_40:
  8465  001768  C02A  F001         	movff	handleListHead@cur,i2___wmul@multiplier
  8466  00176C  C02B  F002         	movff	handleListHead@cur+1,i2___wmul@multiplier+1
  8467  001770  0E00               	movlw	0
  8468  001772  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8469  001774  0E0F               	movlw	15
  8470  001776  6E03               	movwf	i2___wmul@multiplicand^0,c
  8471  001778  EC52  F01D         	call	i2___wmul	;wreg free
  8472  00177C  0E64               	movlw	low _task_list
  8473  00177E  2401               	addwf	?i2___wmul^0,w,c
  8474  001780  6ED9               	movwf	fsr2l,c
  8475  001782  0E01               	movlw	high _task_list
  8476  001784  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8477  001786  6EDA               	movwf	fsr2h,c
  8478  001788  CFDE F00F          	movff	postinc2,??_handleListHead
  8479  00178C  CFDE F010          	movff	postinc2,??_handleListHead+1
  8480  001790  CFDE F011          	movff	postinc2,??_handleListHead+2
  8481  001794  CFDE F012          	movff	postinc2,??_handleListHead+3
  8482  001798  C028  F013         	movff	handleListHead@sum,??_handleListHead+4
  8483  00179C  C029  F014         	movff	handleListHead@sum+1,??_handleListHead+5
  8484  0017A0  0E00               	movlw	0
  8485  0017A2  BE14               	btfsc	(??_handleListHead+5)^0,7,c
  8486  0017A4  0EFF               	movlw	255
  8487  0017A6  6E15               	movwf	(??_handleListHead+6)^0,c
  8488  0017A8  6E16               	movwf	(??_handleListHead+7)^0,c
  8489  0017AA  500F               	movf	??_handleListHead^0,w,c
  8490  0017AC  2413               	addwf	(??_handleListHead+4)^0,w,c
  8491  0017AE  6E17               	movwf	(??_handleListHead+8)^0,c
  8492  0017B0  5010               	movf	(??_handleListHead+1)^0,w,c
  8493  0017B2  2014               	addwfc	(??_handleListHead+5)^0,w,c
  8494  0017B4  6E18               	movwf	(??_handleListHead+9)^0,c
  8495  0017B6  5011               	movf	(??_handleListHead+2)^0,w,c
  8496  0017B8  2015               	addwfc	(??_handleListHead+6)^0,w,c
  8497  0017BA  6E19               	movwf	(??_handleListHead+10)^0,c
  8498  0017BC  5012               	movf	(??_handleListHead+3)^0,w,c
  8499  0017BE  2016               	addwfc	(??_handleListHead+7)^0,w,c
  8500  0017C0  6E1A               	movwf	(??_handleListHead+11)^0,c
  8501  0017C2  C02C  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  8502  0017C6  C02D  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  8503  0017CA  0E00               	movlw	0
  8504  0017CC  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8505  0017CE  0E0F               	movlw	15
  8506  0017D0  6E03               	movwf	i2___wmul@multiplicand^0,c
  8507  0017D2  EC52  F01D         	call	i2___wmul	;wreg free
  8508  0017D6  0E64               	movlw	low _task_list
  8509  0017D8  2401               	addwf	?i2___wmul^0,w,c
  8510  0017DA  6ED9               	movwf	fsr2l,c
  8511  0017DC  0E01               	movlw	high _task_list
  8512  0017DE  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8513  0017E0  6EDA               	movwf	fsr2h,c
  8514  0017E2  5017               	movf	(??_handleListHead+8)^0,w,c
  8515  0017E4  5CDE               	subwf	postinc2,w,c
  8516  0017E6  5018               	movf	(??_handleListHead+9)^0,w,c
  8517  0017E8  58DE               	subwfb	postinc2,w,c
  8518  0017EA  5019               	movf	(??_handleListHead+10)^0,w,c
  8519  0017EC  58DE               	subwfb	postinc2,w,c
  8520  0017EE  501A               	movf	(??_handleListHead+11)^0,w,c
  8521  0017F0  58DE               	subwfb	postinc2,w,c
  8522  0017F2  B0D8               	btfsc	status,0,c
  8523  0017F4  EFFE  F00B         	goto	i2u364_41
  8524  0017F8  EF00  F00C         	goto	i2u364_40
  8525  0017FC                     i2u364_41:
  8526  0017FC  EF7E  F00B         	goto	i2l3788
  8527  001800                     i2u364_40:
  8528  001800                     i2l3796:
  8529                           
  8530                           ;task.c: 112:                 task_list[prev].next = pos;
  8531  001800  C026  F001         	movff	handleListHead@prev,i2___wmul@multiplier
  8532  001804  C027  F002         	movff	handleListHead@prev+1,i2___wmul@multiplier+1
  8533  001808  0E00               	movlw	0
  8534  00180A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8535  00180C  0E0F               	movlw	15
  8536  00180E  6E03               	movwf	i2___wmul@multiplicand^0,c
  8537  001810  EC52  F01D         	call	i2___wmul	;wreg free
  8538  001814  0E6F               	movlw	low (_task_list+11)
  8539  001816  2401               	addwf	?i2___wmul^0,w,c
  8540  001818  6ED9               	movwf	fsr2l,c
  8541  00181A  0E01               	movlw	high (_task_list+11)
  8542  00181C  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8543  00181E  6EDA               	movwf	fsr2h,c
  8544  001820  C02C  FFDE         	movff	handleListHead@pos,postinc2
  8545  001824  C02D  FFDD         	movff	handleListHead@pos+1,postdec2
  8546                           
  8547                           ;task.c: 113:                 task_list[pos].next = cur;
  8548  001828  C02C  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  8549  00182C  C02D  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  8550  001830  0E00               	movlw	0
  8551  001832  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8552  001834  0E0F               	movlw	15
  8553  001836  6E03               	movwf	i2___wmul@multiplicand^0,c
  8554  001838  EC52  F01D         	call	i2___wmul	;wreg free
  8555  00183C  0E6F               	movlw	low (_task_list+11)
  8556  00183E  2401               	addwf	?i2___wmul^0,w,c
  8557  001840  6ED9               	movwf	fsr2l,c
  8558  001842  0E01               	movlw	high (_task_list+11)
  8559  001844  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8560  001846  6EDA               	movwf	fsr2h,c
  8561  001848  C02A  FFDE         	movff	handleListHead@cur,postinc2
  8562  00184C  C02B  FFDD         	movff	handleListHead@cur+1,postdec2
  8563                           
  8564                           ;task.c: 114:                 task_list[pos].delay_t-= sum;
  8565  001850  C02C  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  8566  001854  C02D  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  8567  001858  0E00               	movlw	0
  8568  00185A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8569  00185C  0E0F               	movlw	15
  8570  00185E  6E03               	movwf	i2___wmul@multiplicand^0,c
  8571  001860  EC52  F01D         	call	i2___wmul	;wreg free
  8572  001864  0E64               	movlw	low _task_list
  8573  001866  2401               	addwf	?i2___wmul^0,w,c
  8574  001868  6ED9               	movwf	fsr2l,c
  8575  00186A  0E01               	movlw	high _task_list
  8576  00186C  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8577  00186E  6EDA               	movwf	fsr2h,c
  8578  001870  5028               	movf	handleListHead@sum^0,w,c
  8579  001872  5EDE               	subwf	postinc2,f,c
  8580  001874  5029               	movf	(handleListHead@sum+1)^0,w,c
  8581  001876  5ADE               	subwfb	postinc2,f,c
  8582  001878  0E00               	movlw	0
  8583  00187A  BE29               	btfsc	(handleListHead@sum+1)^0,7,c
  8584  00187C  0EFF               	movlw	255
  8585  00187E  5ADE               	subwfb	postinc2,f,c
  8586  001880  5ADE               	subwfb	postinc2,f,c
  8587  001882                     i2l275:
  8588                           
  8589                           ;task.c: 116:             if(task_list[pos].next != 105)
  8590  001882  C02C  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  8591  001886  C02D  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  8592  00188A  0E00               	movlw	0
  8593  00188C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8594  00188E  0E0F               	movlw	15
  8595  001890  6E03               	movwf	i2___wmul@multiplicand^0,c
  8596  001892  EC52  F01D         	call	i2___wmul	;wreg free
  8597  001896  0E6F               	movlw	low (_task_list+11)
  8598  001898  2401               	addwf	?i2___wmul^0,w,c
  8599  00189A  6ED9               	movwf	fsr2l,c
  8600  00189C  0E01               	movlw	high (_task_list+11)
  8601  00189E  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8602  0018A0  6EDA               	movwf	fsr2h,c
  8603  0018A2  0E69               	movlw	105
  8604  0018A4  18DE               	xorwf	postinc2,w,c
  8605  0018A6  10DE               	iorwf	postinc2,w,c
  8606  0018A8  B4D8               	btfsc	status,2,c
  8607  0018AA  EF59  F00C         	goto	i2u365_41
  8608  0018AE  EF5B  F00C         	goto	i2u365_40
  8609  0018B2                     i2u365_41:
  8610  0018B2  EF9F  F00C         	goto	i2l3800
  8611  0018B6                     i2u365_40:
  8612  0018B6                     
  8613                           ;task.c: 117:                 task_list[task_list[pos].next].delay_t -= task_list[pos].d
      +                          elay_t;
  8614  0018B6  C02C  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  8615  0018BA  C02D  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  8616  0018BE  0E00               	movlw	0
  8617  0018C0  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8618  0018C2  0E0F               	movlw	15
  8619  0018C4  6E03               	movwf	i2___wmul@multiplicand^0,c
  8620  0018C6  EC52  F01D         	call	i2___wmul	;wreg free
  8621  0018CA  0E6F               	movlw	low (_task_list+11)
  8622  0018CC  2401               	addwf	?i2___wmul^0,w,c
  8623  0018CE  6ED9               	movwf	fsr2l,c
  8624  0018D0  0E01               	movlw	high (_task_list+11)
  8625  0018D2  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8626  0018D4  6EDA               	movwf	fsr2h,c
  8627  0018D6  CFDE F024          	movff	postinc2,_handleListHead$1985
  8628  0018DA  CFDD F025          	movff	postdec2,_handleListHead$1985+1
  8629                           
  8630                           ;task.c: 117:                 task_list[task_list[pos].next].delay_t -= task_list[pos].d
      +                          elay_t;
  8631  0018DE  C02C  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  8632  0018E2  C02D  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  8633  0018E6  0E00               	movlw	0
  8634  0018E8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8635  0018EA  0E0F               	movlw	15
  8636  0018EC  6E03               	movwf	i2___wmul@multiplicand^0,c
  8637  0018EE  EC52  F01D         	call	i2___wmul	;wreg free
  8638  0018F2  0E64               	movlw	low _task_list
  8639  0018F4  2401               	addwf	?i2___wmul^0,w,c
  8640  0018F6  6ED9               	movwf	fsr2l,c
  8641  0018F8  0E01               	movlw	high _task_list
  8642  0018FA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8643  0018FC  6EDA               	movwf	fsr2h,c
  8644  0018FE  CFDE F00F          	movff	postinc2,??_handleListHead
  8645  001902  CFDE F010          	movff	postinc2,??_handleListHead+1
  8646  001906  CFDE F011          	movff	postinc2,??_handleListHead+2
  8647  00190A  CFDE F012          	movff	postinc2,??_handleListHead+3
  8648  00190E  C024  F001         	movff	_handleListHead$1985,i2___wmul@multiplier
  8649  001912  C025  F002         	movff	_handleListHead$1985+1,i2___wmul@multiplier+1
  8650  001916  0E00               	movlw	0
  8651  001918  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8652  00191A  0E0F               	movlw	15
  8653  00191C  6E03               	movwf	i2___wmul@multiplicand^0,c
  8654  00191E  EC52  F01D         	call	i2___wmul	;wreg free
  8655  001922  0E64               	movlw	low _task_list
  8656  001924  2401               	addwf	?i2___wmul^0,w,c
  8657  001926  6ED9               	movwf	fsr2l,c
  8658  001928  0E01               	movlw	high _task_list
  8659  00192A  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8660  00192C  6EDA               	movwf	fsr2h,c
  8661  00192E  500F               	movf	??_handleListHead^0,w,c
  8662  001930  5EDE               	subwf	postinc2,f,c
  8663  001932  5010               	movf	(??_handleListHead+1)^0,w,c
  8664  001934  5ADE               	subwfb	postinc2,f,c
  8665  001936  5011               	movf	(??_handleListHead+2)^0,w,c
  8666  001938  5ADE               	subwfb	postinc2,f,c
  8667  00193A  5012               	movf	(??_handleListHead+3)^0,w,c
  8668  00193C  5ADE               	subwfb	postinc2,f,c
  8669  00193E                     i2l3800:
  8670                           
  8671                           ;task.c: 89:     while(task_list[head].delay_t == 0) {
  8672  00193E  0100               	movlb	0	; () banked
  8673  001940  51C3               	movf	_head& (0+255),w,b
  8674  001942  0D0F               	mullw	15
  8675  001944  0E64               	movlw	low _task_list
  8676  001946  24F3               	addwf	243,w,c
  8677  001948  6ED9               	movwf	fsr2l,c
  8678  00194A  0E01               	movlw	high _task_list
  8679  00194C  20F4               	addwfc	prodh,w,c
  8680  00194E  6EDA               	movwf	fsr2h,c
  8681  001950  50DE               	movf	postinc2,w,c
  8682  001952  10DE               	iorwf	postinc2,w,c
  8683  001954  10DE               	iorwf	postinc2,w,c
  8684  001956  10DE               	iorwf	postinc2,w,c
  8685  001958  B4D8               	btfsc	status,2,c
  8686  00195A  EFB1  F00C         	goto	i2u366_41
  8687  00195E  EFB3  F00C         	goto	i2u366_40
  8688  001962                     i2u366_41:
  8689  001962  EF75  F00A         	goto	i2l269
  8690  001966                     i2u366_40:
  8691  001966                     
  8692                           ; BSR set to: 0
  8693                           ;task.c: 120:     task_list[head].delay_t-= 10;
  8694  001966  51C3               	movf	_head& (0+255),w,b
  8695  001968  0D0F               	mullw	15
  8696  00196A  0E64               	movlw	low _task_list
  8697  00196C  24F3               	addwf	243,w,c
  8698  00196E  6ED9               	movwf	fsr2l,c
  8699  001970  0E01               	movlw	high _task_list
  8700  001972  20F4               	addwfc	prodh,w,c
  8701  001974  6EDA               	movwf	fsr2h,c
  8702  001976  0E0A               	movlw	10
  8703  001978  5EDE               	subwf	postinc2,f,c
  8704  00197A  0E00               	movlw	0
  8705  00197C  5ADE               	subwfb	postinc2,f,c
  8706  00197E  5ADE               	subwfb	postinc2,f,c
  8707  001980  5ADE               	subwfb	postinc2,f,c
  8708  001982                     i2l267:
  8709                           
  8710                           ; BSR set to: 0
  8711  001982  0012               	return		;funcret
  8712  001984                     __end_of_handleListHead:
  8713                           	opt callstack 0
  8714                           
  8715 ;; *************** function _removeTask *****************
  8716 ;; Defined at:
  8717 ;;		line 63 in file "task.c"
  8718 ;; Parameters:    Size  Location     Type
  8719 ;;  idx             1    wreg     unsigned char 
  8720 ;; Auto vars:     Size  Location     Type
  8721 ;;  idx             1    5[COMRAM] unsigned char 
  8722 ;;  pos             1    4[COMRAM] unsigned char 
  8723 ;; Return value:  Size  Location     Type
  8724 ;;                  1    wreg      unsigned char 
  8725 ;; Registers used:
  8726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8727 ;; Tracked objects:
  8728 ;;		On entry : 0/0
  8729 ;;		On exit  : 0/0
  8730 ;;		Unchanged: 0/0
  8731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8733 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8734 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8735 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8736 ;;Total ram usage:        6 bytes
  8737 ;; Hardware stack levels used:    1
  8738 ;; Hardware stack levels required when called:    1
  8739 ;; This function calls:
  8740 ;;		_isEmptyList
  8741 ;; This function is called by:
  8742 ;;		_handleListHead
  8743 ;;		_remove_timer
  8744 ;; This function uses a non-reentrant model
  8745 ;;
  8746                           
  8747                           	psect	text49
  8748  002586                     __ptext49:
  8749                           	opt callstack 0
  8750  002586                     _removeTask:
  8751                           	opt callstack 19
  8752                           
  8753                           ; BSR set to: 0
  8754                           ;incstack = 0
  8755                           ;removeTask@idx stored from wreg
  8756  002586  6E06               	movwf	removeTask@idx^0,c
  8757  002588                     
  8758                           ;task.c: 64:     if(isEmptyList() || task_list[idx].func_ptr == ((void*)0))
  8759  002588  ECC0  F01D         	call	_isEmptyList	;wreg free
  8760  00258C  0900               	iorlw	0
  8761  00258E  A4D8               	btfss	status,2,c
  8762  002590  EFCC  F012         	goto	i2u349_41
  8763  002594  EFCE  F012         	goto	i2u349_40
  8764  002598                     i2u349_41:
  8765  002598  EFE0  F012         	goto	i2l3712
  8766  00259C                     i2u349_40:
  8767  00259C  5006               	movf	removeTask@idx^0,w,c
  8768  00259E  0D0F               	mullw	15
  8769  0025A0  0E6C               	movlw	low (_task_list+8)
  8770  0025A2  24F3               	addwf	243,w,c
  8771  0025A4  6ED9               	movwf	fsr2l,c
  8772  0025A6  0E01               	movlw	high (_task_list+8)
  8773  0025A8  20F4               	addwfc	prodh,w,c
  8774  0025AA  6EDA               	movwf	fsr2h,c
  8775  0025AC  50DE               	movf	postinc2,w,c
  8776  0025AE  10DE               	iorwf	postinc2,w,c
  8777  0025B0  10DE               	iorwf	postinc2,w,c
  8778  0025B2  A4D8               	btfss	status,2,c
  8779  0025B4  EFDE  F012         	goto	i2u350_41
  8780  0025B8  EFE0  F012         	goto	i2u350_40
  8781  0025BC                     i2u350_41:
  8782  0025BC  EFE3  F012         	goto	i2l3716
  8783  0025C0                     i2u350_40:
  8784  0025C0                     i2l3712:
  8785                           
  8786                           ;task.c: 65:         return 0;
  8787  0025C0  0E00               	movlw	0
  8788  0025C2  EF90  F013         	goto	i2l256
  8789  0025C6                     i2l3716:
  8790                           
  8791                           ;task.c: 66:     task_list[idx].delay_t = 0;
  8792  0025C6  5006               	movf	removeTask@idx^0,w,c
  8793  0025C8  0D0F               	mullw	15
  8794  0025CA  0E64               	movlw	low _task_list
  8795  0025CC  24F3               	addwf	243,w,c
  8796  0025CE  6ED9               	movwf	fsr2l,c
  8797  0025D0  0E01               	movlw	high _task_list
  8798  0025D2  20F4               	addwfc	prodh,w,c
  8799  0025D4  6EDA               	movwf	fsr2h,c
  8800  0025D6  6ADE               	clrf	postinc2,c
  8801  0025D8  6ADE               	clrf	postinc2,c
  8802  0025DA  6ADE               	clrf	postinc2,c
  8803  0025DC  6ADD               	clrf	postdec2,c
  8804                           
  8805                           ;task.c: 67:     task_list[idx].period_t = 0;
  8806  0025DE  5006               	movf	removeTask@idx^0,w,c
  8807  0025E0  0D0F               	mullw	15
  8808  0025E2  0E68               	movlw	low (_task_list+4)
  8809  0025E4  24F3               	addwf	243,w,c
  8810  0025E6  6ED9               	movwf	fsr2l,c
  8811  0025E8  0E01               	movlw	high (_task_list+4)
  8812  0025EA  20F4               	addwfc	prodh,w,c
  8813  0025EC  6EDA               	movwf	fsr2h,c
  8814  0025EE  6ADE               	clrf	postinc2,c
  8815  0025F0  6ADE               	clrf	postinc2,c
  8816  0025F2  6ADE               	clrf	postinc2,c
  8817  0025F4  6ADD               	clrf	postdec2,c
  8818                           
  8819                           ;task.c: 68:     task_list[idx].func_ptr = ((void*)0);
  8820  0025F6  5006               	movf	removeTask@idx^0,w,c
  8821  0025F8  0D0F               	mullw	15
  8822  0025FA  0E6C               	movlw	low (_task_list+8)
  8823  0025FC  24F3               	addwf	243,w,c
  8824  0025FE  6ED9               	movwf	fsr2l,c
  8825  002600  0E01               	movlw	high (_task_list+8)
  8826  002602  20F4               	addwfc	prodh,w,c
  8827  002604  6EDA               	movwf	fsr2h,c
  8828  002606  0E00               	movlw	0
  8829  002608  6EDE               	movwf	postinc2,c
  8830  00260A  0E00               	movlw	0
  8831  00260C  6EDE               	movwf	postinc2,c
  8832  00260E  0E00               	movlw	0
  8833  002610  6EDE               	movwf	postinc2,c
  8834                           
  8835                           ;task.c: 69:     task_list[idx].data_p = ((void*)0);
  8836  002612  5006               	movf	removeTask@idx^0,w,c
  8837  002614  0D0F               	mullw	15
  8838  002616  0E71               	movlw	low (_task_list+13)
  8839  002618  24F3               	addwf	243,w,c
  8840  00261A  6ED9               	movwf	fsr2l,c
  8841  00261C  0E01               	movlw	high (_task_list+13)
  8842  00261E  20F4               	addwfc	prodh,w,c
  8843  002620  6EDA               	movwf	fsr2h,c
  8844  002622  0E00               	movlw	0
  8845  002624  6EDE               	movwf	postinc2,c
  8846  002626  0E00               	movlw	0
  8847  002628  6EDD               	movwf	postdec2,c
  8848  00262A                     
  8849                           ;task.c: 70:     num_task--;
  8850  00262A  0100               	movlb	0	; () banked
  8851  00262C  07C4               	decf	_num_task& (0+255),f,b
  8852  00262E                     
  8853                           ; BSR set to: 0
  8854                           ;task.c: 71:     if(idx == head) {
  8855  00262E  51C3               	movf	_head& (0+255),w,b
  8856  002630  1806               	xorwf	removeTask@idx^0,w,c
  8857  002632  A4D8               	btfss	status,2,c
  8858  002634  EF1E  F013         	goto	i2u351_41
  8859  002638  EF20  F013         	goto	i2u351_40
  8860  00263C                     i2u351_41:
  8861  00263C  EF38  F013         	goto	i2l257
  8862  002640                     i2u351_40:
  8863  002640                     
  8864                           ; BSR set to: 0
  8865                           ;task.c: 72:         head = task_list[idx].next;
  8866  002640  5006               	movf	removeTask@idx^0,w,c
  8867  002642  0D0F               	mullw	15
  8868  002644  0E6F               	movlw	low (_task_list+11)
  8869  002646  24F3               	addwf	243,w,c
  8870  002648  6ED9               	movwf	fsr2l,c
  8871  00264A  0E01               	movlw	high (_task_list+11)
  8872  00264C  20F4               	addwfc	prodh,w,c
  8873  00264E  6EDA               	movwf	fsr2h,c
  8874  002650  50DF               	movf	indf2,w,c
  8875  002652  6FC3               	movwf	_head& (0+255),b
  8876                           
  8877                           ;task.c: 73:         task_list[idx].next = 105;
  8878  002654  5006               	movf	removeTask@idx^0,w,c
  8879  002656  0D0F               	mullw	15
  8880  002658  0E6F               	movlw	low (_task_list+11)
  8881  00265A  24F3               	addwf	243,w,c
  8882  00265C  6ED9               	movwf	fsr2l,c
  8883  00265E  0E01               	movlw	high (_task_list+11)
  8884  002660  20F4               	addwfc	prodh,w,c
  8885  002662  6EDA               	movwf	fsr2h,c
  8886  002664  0E69               	movlw	105
  8887  002666  6EDE               	movwf	postinc2,c
  8888  002668  0E00               	movlw	0
  8889  00266A  6EDD               	movwf	postdec2,c
  8890                           
  8891                           ;task.c: 74:     }
  8892  00266C  EF8F  F013         	goto	i2l3732
  8893  002670                     i2l257:
  8894                           
  8895                           ; BSR set to: 0
  8896                           ;task.c: 76:         char pos = head;
  8897  002670  C0C3  F005         	movff	_head,removeTask@pos
  8898                           
  8899                           ;task.c: 77:         while(task_list[pos].next != 105 && task_list[pos].next != idx) {
  8900  002674  EF46  F013         	goto	i2l259
  8901  002678                     i2l3724:
  8902                           
  8903                           ;task.c: 78:             pos = task_list[pos].next;
  8904  002678  5005               	movf	removeTask@pos^0,w,c
  8905  00267A  0D0F               	mullw	15
  8906  00267C  0E6F               	movlw	low (_task_list+11)
  8907  00267E  24F3               	addwf	243,w,c
  8908  002680  6ED9               	movwf	fsr2l,c
  8909  002682  0E01               	movlw	high (_task_list+11)
  8910  002684  20F4               	addwfc	prodh,w,c
  8911  002686  6EDA               	movwf	fsr2h,c
  8912  002688  50DF               	movf	indf2,w,c
  8913  00268A  6E05               	movwf	removeTask@pos^0,c
  8914  00268C                     i2l259:
  8915                           
  8916                           ;task.c: 77:         while(task_list[pos].next != 105 && task_list[pos].next != idx) {
  8917  00268C  5005               	movf	removeTask@pos^0,w,c
  8918  00268E  0D0F               	mullw	15
  8919  002690  0E6F               	movlw	low (_task_list+11)
  8920  002692  24F3               	addwf	243,w,c
  8921  002694  6ED9               	movwf	fsr2l,c
  8922  002696  0E01               	movlw	high (_task_list+11)
  8923  002698  20F4               	addwfc	prodh,w,c
  8924  00269A  6EDA               	movwf	fsr2h,c
  8925  00269C  0E69               	movlw	105
  8926  00269E  18DE               	xorwf	postinc2,w,c
  8927  0026A0  10DE               	iorwf	postinc2,w,c
  8928  0026A2  B4D8               	btfsc	status,2,c
  8929  0026A4  EF56  F013         	goto	i2u352_41
  8930  0026A8  EF58  F013         	goto	i2u352_40
  8931  0026AC                     i2u352_41:
  8932  0026AC  EF6F  F013         	goto	i2l3728
  8933  0026B0                     i2u352_40:
  8934  0026B0  5005               	movf	removeTask@pos^0,w,c
  8935  0026B2  0D0F               	mullw	15
  8936  0026B4  0E6F               	movlw	low (_task_list+11)
  8937  0026B6  24F3               	addwf	243,w,c
  8938  0026B8  6ED9               	movwf	fsr2l,c
  8939  0026BA  0E01               	movlw	high (_task_list+11)
  8940  0026BC  20F4               	addwfc	prodh,w,c
  8941  0026BE  6EDA               	movwf	fsr2h,c
  8942  0026C0  5006               	movf	removeTask@idx^0,w,c
  8943  0026C2  6E03               	movwf	(??_removeTask+2)^0,c
  8944  0026C4  6A04               	clrf	(??_removeTask+3)^0,c
  8945  0026C6  50DE               	movf	postinc2,w,c
  8946  0026C8  1803               	xorwf	(??_removeTask+2)^0,w,c
  8947  0026CA  E107               	bnz	i2u353_41
  8948  0026CC  50DE               	movf	postinc2,w,c
  8949  0026CE  1804               	xorwf	(??_removeTask+3)^0,w,c
  8950  0026D0  A4D8               	btfss	status,2,c
  8951  0026D2  EF6D  F013         	goto	i2u353_41
  8952  0026D6  EF6F  F013         	goto	i2u353_40
  8953  0026DA                     i2u353_41:
  8954  0026DA  EF3C  F013         	goto	i2l3724
  8955  0026DE                     i2u353_40:
  8956  0026DE                     i2l3728:
  8957                           
  8958                           ;task.c: 80:         task_list[pos].next = task_list[idx].next;
  8959  0026DE  5006               	movf	removeTask@idx^0,w,c
  8960  0026E0  0D0F               	mullw	15
  8961  0026E2  0E6F               	movlw	low (_task_list+11)
  8962  0026E4  24F3               	addwf	243,w,c
  8963  0026E6  6ED9               	movwf	fsr2l,c
  8964  0026E8  0E01               	movlw	high (_task_list+11)
  8965  0026EA  20F4               	addwfc	prodh,w,c
  8966  0026EC  6EDA               	movwf	fsr2h,c
  8967  0026EE  5005               	movf	removeTask@pos^0,w,c
  8968  0026F0  0D0F               	mullw	15
  8969  0026F2  0E6F               	movlw	low (_task_list+11)
  8970  0026F4  24F3               	addwf	243,w,c
  8971  0026F6  6EE1               	movwf	fsr1l,c
  8972  0026F8  0E01               	movlw	high (_task_list+11)
  8973  0026FA  20F4               	addwfc	prodh,w,c
  8974  0026FC  6EE2               	movwf	fsr1h,c
  8975  0026FE  CFDE FFE6          	movff	postinc2,postinc1
  8976  002702  CFDD FFE5          	movff	postdec2,postdec1
  8977  002706                     
  8978                           ;task.c: 81:         task_list[idx].next = 105;
  8979  002706  5006               	movf	removeTask@idx^0,w,c
  8980  002708  0D0F               	mullw	15
  8981  00270A  0E6F               	movlw	low (_task_list+11)
  8982  00270C  24F3               	addwf	243,w,c
  8983  00270E  6ED9               	movwf	fsr2l,c
  8984  002710  0E01               	movlw	high (_task_list+11)
  8985  002712  20F4               	addwfc	prodh,w,c
  8986  002714  6EDA               	movwf	fsr2h,c
  8987  002716  0E69               	movlw	105
  8988  002718  6EDE               	movwf	postinc2,c
  8989  00271A  0E00               	movlw	0
  8990  00271C  6EDD               	movwf	postdec2,c
  8991  00271E                     i2l3732:
  8992                           
  8993                           ;task.c: 83:     return 1;
  8994  00271E  0E01               	movlw	1
  8995  002720                     i2l256:
  8996  002720  0012               	return		;funcret
  8997  002722                     __end_of_removeTask:
  8998                           	opt callstack 0
  8999                           
  9000 ;; *************** function _isEmptyList *****************
  9001 ;; Defined at:
  9002 ;;		line 3 in file "task.c"
  9003 ;; Parameters:    Size  Location     Type
  9004 ;;		None
  9005 ;; Auto vars:     Size  Location     Type
  9006 ;;		None
  9007 ;; Return value:  Size  Location     Type
  9008 ;;                  1    wreg      unsigned char 
  9009 ;; Registers used:
  9010 ;;		wreg, status,2
  9011 ;; Tracked objects:
  9012 ;;		On entry : 0/0
  9013 ;;		On exit  : 0/0
  9014 ;;		Unchanged: 0/0
  9015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9020 ;;Total ram usage:        0 bytes
  9021 ;; Hardware stack levels used:    1
  9022 ;; This function calls:
  9023 ;;		Nothing
  9024 ;; This function is called by:
  9025 ;;		_removeTask
  9026 ;; This function uses a non-reentrant model
  9027 ;;
  9028                           
  9029                           	psect	text50
  9030  003B80                     __ptext50:
  9031                           	opt callstack 0
  9032  003B80                     _isEmptyList:
  9033                           	opt callstack 19
  9034  003B80                     
  9035                           ;task.c: 4:     return num_task == 0 ? 1 : 0;
  9036  003B80  0100               	movlb	0	; () banked
  9037  003B82  51C4               	movf	_num_task& (0+255),w,b
  9038  003B84  B4D8               	btfsc	status,2,c
  9039  003B86  EFC7  F01D         	goto	i2u325_41
  9040  003B8A  EFCA  F01D         	goto	i2u325_40
  9041  003B8E                     i2u325_41:
  9042  003B8E  0E01               	movlw	1
  9043  003B90  EFCB  F01D         	goto	i2u326_40
  9044  003B94                     i2u325_40:
  9045  003B94  0E00               	movlw	0
  9046  003B96                     i2u326_40:
  9047  003B96                     
  9048                           ; BSR set to: 0
  9049  003B96  0012               	return		;funcret
  9050  003B98                     __end_of_isEmptyList:
  9051                           	opt callstack 0
  9052                           
  9053 ;; *************** function _enqueue *****************
  9054 ;; Defined at:
  9055 ;;		line 24 in file "ready_queue.c"
  9056 ;; Parameters:    Size  Location     Type
  9057 ;;  ptr             3    9[COMRAM] PTR FTN(PTR void ,)void 
  9058 ;;		 -> readTempAndHumid(1), handleButton(1), NULL(0), printTempAndHumid(1), 
  9059 ;;		 -> printTime_ms(1), 
  9060 ;;  data            2   12[COMRAM] PTR void 
  9061 ;;		 -> NULL(0), 
  9062 ;; Auto vars:     Size  Location     Type
  9063 ;;		None
  9064 ;; Return value:  Size  Location     Type
  9065 ;;                  1    wreg      unsigned char 
  9066 ;; Registers used:
  9067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9068 ;; Tracked objects:
  9069 ;;		On entry : 0/0
  9070 ;;		On exit  : 0/0
  9071 ;;		Unchanged: 0/0
  9072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9073 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9076 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9077 ;;Total ram usage:        5 bytes
  9078 ;; Hardware stack levels used:    1
  9079 ;; Hardware stack levels required when called:    3
  9080 ;; This function calls:
  9081 ;;		_isFullQueue
  9082 ;;		i2___awmod
  9083 ;;		i2___wmul
  9084 ;; This function is called by:
  9085 ;;		_handleListHead
  9086 ;; This function uses a non-reentrant model
  9087 ;;
  9088                           
  9089                           	psect	text51
  9090  0030E2                     __ptext51:
  9091                           	opt callstack 0
  9092  0030E2                     _enqueue:
  9093                           	opt callstack 17
  9094  0030E2                     
  9095                           ;ready_queue.c: 25:     if(isFullQueue())
  9096  0030E2  ECA5  F01D         	call	_isFullQueue	;wreg free
  9097  0030E6  0900               	iorlw	0
  9098  0030E8  B4D8               	btfsc	status,2,c
  9099  0030EA  EF79  F018         	goto	i2u337_41
  9100  0030EE  EF7B  F018         	goto	i2u337_40
  9101  0030F2                     i2u337_41:
  9102  0030F2  EF7D  F018         	goto	i2l3628
  9103  0030F6                     i2u337_40:
  9104  0030F6  EFC6  F018         	goto	i2l184
  9105  0030FA                     i2l3628:
  9106                           
  9107                           ;ready_queue.c: 27:     if(front == -1)
  9108  0030FA  0100               	movlb	0	; () banked
  9109  0030FC  29D1               	incf	_front& (0+255),w,b
  9110  0030FE  E106               	bnz	i2u338_41
  9111  003100  29D2               	incf	(_front+1)& (0+255),w,b
  9112  003102  A4D8               	btfss	status,2,c
  9113  003104  EF86  F018         	goto	i2u338_41
  9114  003108  EF88  F018         	goto	i2u338_40
  9115  00310C                     i2u338_41:
  9116  00310C  EF8C  F018         	goto	i2l3632
  9117  003110                     i2u338_40:
  9118  003110                     
  9119                           ; BSR set to: 0
  9120                           ;ready_queue.c: 28:         front = 0;
  9121  003110  0E00               	movlw	0
  9122  003112  6FD2               	movwf	(_front+1)& (0+255),b
  9123  003114  0E00               	movlw	0
  9124  003116  6FD1               	movwf	_front& (0+255),b
  9125  003118                     i2l3632:
  9126                           
  9127                           ; BSR set to: 0
  9128                           ;ready_queue.c: 29:     rear = (rear + 1) % 20;
  9129  003118  0E01               	movlw	1
  9130  00311A  25CF               	addwf	_rear& (0+255),w,b
  9131  00311C  6E01               	movwf	i2___awmod@dividend^0,c
  9132  00311E  0E00               	movlw	0
  9133  003120  21D0               	addwfc	(_rear+1)& (0+255),w,b
  9134  003122  6E02               	movwf	(i2___awmod@dividend+1)^0,c
  9135  003124  0E00               	movlw	0
  9136  003126  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  9137  003128  0E14               	movlw	20
  9138  00312A  6E03               	movwf	i2___awmod@divisor^0,c
  9139  00312C  ECC3  F017         	call	i2___awmod	;wreg free
  9140  003130  C001  F0CF         	movff	?i2___awmod,_rear
  9141  003134  C002  F0D0         	movff	?i2___awmod+1,_rear+1
  9142  003138                     
  9143                           ;ready_queue.c: 30:     ready_queue[rear].func_ptr = ptr;
  9144  003138  C0CF  F001         	movff	_rear,i2___wmul@multiplier
  9145  00313C  C0D0  F002         	movff	_rear+1,i2___wmul@multiplier+1
  9146  003140  0E00               	movlw	0
  9147  003142  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9148  003144  0E05               	movlw	5
  9149  003146  6E03               	movwf	i2___wmul@multiplicand^0,c
  9150  003148  EC52  F01D         	call	i2___wmul	;wreg free
  9151  00314C  0E00               	movlw	low _ready_queue
  9152  00314E  2401               	addwf	?i2___wmul^0,w,c
  9153  003150  6ED9               	movwf	fsr2l,c
  9154  003152  0E01               	movlw	high _ready_queue
  9155  003154  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9156  003156  6EDA               	movwf	fsr2h,c
  9157  003158  C00A  FFDE         	movff	enqueue@ptr,postinc2
  9158  00315C  C00B  FFDE         	movff	enqueue@ptr+1,postinc2
  9159  003160  C00C  FFDE         	movff	enqueue@ptr+2,postinc2
  9160  003164                     
  9161                           ;ready_queue.c: 31:     ready_queue[rear].data_p = data;
  9162  003164  C0CF  F001         	movff	_rear,i2___wmul@multiplier
  9163  003168  C0D0  F002         	movff	_rear+1,i2___wmul@multiplier+1
  9164  00316C  0E00               	movlw	0
  9165  00316E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9166  003170  0E05               	movlw	5
  9167  003172  6E03               	movwf	i2___wmul@multiplicand^0,c
  9168  003174  EC52  F01D         	call	i2___wmul	;wreg free
  9169  003178  0E03               	movlw	low (_ready_queue+3)
  9170  00317A  2401               	addwf	?i2___wmul^0,w,c
  9171  00317C  6ED9               	movwf	fsr2l,c
  9172  00317E  0E01               	movlw	high (_ready_queue+3)
  9173  003180  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9174  003182  6EDA               	movwf	fsr2h,c
  9175  003184  C00D  FFDE         	movff	enqueue@data,postinc2
  9176  003188  C00E  FFDD         	movff	enqueue@data+1,postdec2
  9177  00318C                     i2l184:
  9178  00318C  0012               	return		;funcret
  9179  00318E                     __end_of_enqueue:
  9180                           	opt callstack 0
  9181                           
  9182 ;; *************** function i2___wmul *****************
  9183 ;; Defined at:
  9184 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  9185 ;; Parameters:    Size  Location     Type
  9186 ;;  multiplier      2    0[COMRAM] unsigned int 
  9187 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9188 ;; Auto vars:     Size  Location     Type
  9189 ;;  __wmul          2    4[COMRAM] unsigned int 
  9190 ;; Return value:  Size  Location     Type
  9191 ;;                  2    0[COMRAM] unsigned int 
  9192 ;; Registers used:
  9193 ;;		wreg, status,2, status,0, prodl, prodh
  9194 ;; Tracked objects:
  9195 ;;		On entry : 0/0
  9196 ;;		On exit  : 0/0
  9197 ;;		Unchanged: 0/0
  9198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9199 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9200 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9202 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9203 ;;Total ram usage:        6 bytes
  9204 ;; Hardware stack levels used:    1
  9205 ;; This function calls:
  9206 ;;		Nothing
  9207 ;; This function is called by:
  9208 ;;		_enqueue
  9209 ;;		_handleListHead
  9210 ;; This function uses a non-reentrant model
  9211 ;;
  9212                           
  9213                           	psect	text52
  9214  003AA4                     __ptext52:
  9215                           	opt callstack 0
  9216  003AA4                     i2___wmul:
  9217                           	opt callstack 20
  9218  003AA4  5001               	movf	i2___wmul@multiplier^0,w,c
  9219  003AA6  0203               	mulwf	i2___wmul@multiplicand^0,c
  9220  003AA8  CFF3 F005          	movff	prodl,i2___wmul@product
  9221  003AAC  CFF4 F006          	movff	prodh,i2___wmul@product+1
  9222  003AB0  5001               	movf	i2___wmul@multiplier^0,w,c
  9223  003AB2  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
  9224  003AB4  50F3               	movf	243,w,c
  9225  003AB6  2606               	addwf	(i2___wmul@product+1)^0,f,c
  9226  003AB8  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
  9227  003ABA  0203               	mulwf	i2___wmul@multiplicand^0,c
  9228  003ABC  50F3               	movf	243,w,c
  9229  003ABE  2606               	addwf	(i2___wmul@product+1)^0,f,c
  9230  003AC0  C005  F001         	movff	i2___wmul@product,?i2___wmul
  9231  003AC4  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  9232  003AC8  0012               	return		;funcret
  9233  003ACA                     __end_ofi2___wmul:
  9234                           	opt callstack 0
  9235                           
  9236 ;; *************** function _isFullQueue *****************
  9237 ;; Defined at:
  9238 ;;		line 14 in file "ready_queue.c"
  9239 ;; Parameters:    Size  Location     Type
  9240 ;;		None
  9241 ;; Auto vars:     Size  Location     Type
  9242 ;;		None
  9243 ;; Return value:  Size  Location     Type
  9244 ;;                  1    wreg      unsigned char 
  9245 ;; Registers used:
  9246 ;;		wreg, status,2, status,0, cstack
  9247 ;; Tracked objects:
  9248 ;;		On entry : 0/0
  9249 ;;		On exit  : 0/0
  9250 ;;		Unchanged: 0/0
  9251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9254 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9255 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9256 ;;Total ram usage:        1 bytes
  9257 ;; Hardware stack levels used:    1
  9258 ;; Hardware stack levels required when called:    2
  9259 ;; This function calls:
  9260 ;;		i2_getSizeQueue
  9261 ;; This function is called by:
  9262 ;;		_enqueue
  9263 ;; This function uses a non-reentrant model
  9264 ;;
  9265                           
  9266                           	psect	text53
  9267  003B4A                     __ptext53:
  9268                           	opt callstack 0
  9269  003B4A                     _isFullQueue:
  9270                           	opt callstack 17
  9271  003B4A                     
  9272                           ;ready_queue.c: 15:     return getSizeQueue() >= 20 ? 1 : 0;
  9273  003B4A  EC29  F01D         	call	i2_getSizeQueue	;wreg free
  9274  003B4E  6E09               	movwf	??_isFullQueue^0,c
  9275  003B50  0E14               	movlw	20
  9276  003B52  6009               	cpfslt	??_isFullQueue^0,c
  9277  003B54  EFAE  F01D         	goto	i2u320_41
  9278  003B58  EFB1  F01D         	goto	i2u320_40
  9279  003B5C                     i2u320_41:
  9280  003B5C  0E01               	movlw	1
  9281  003B5E  EFB2  F01D         	goto	i2u321_40
  9282  003B62                     i2u320_40:
  9283  003B62  0E00               	movlw	0
  9284  003B64                     i2u321_40:
  9285  003B64  0012               	return		;funcret
  9286  003B66                     __end_of_isFullQueue:
  9287                           	opt callstack 0
  9288                           
  9289 ;; *************** function i2_getSizeQueue *****************
  9290 ;; Defined at:
  9291 ;;		line 10 in file "ready_queue.c"
  9292 ;; Parameters:    Size  Location     Type
  9293 ;;		None
  9294 ;; Auto vars:     Size  Location     Type
  9295 ;;		None
  9296 ;; Return value:  Size  Location     Type
  9297 ;;                  1    wreg      unsigned char 
  9298 ;; Registers used:
  9299 ;;		wreg, status,2, status,0, cstack
  9300 ;; Tracked objects:
  9301 ;;		On entry : 0/0
  9302 ;;		On exit  : 0/0
  9303 ;;		Unchanged: 0/0
  9304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9307 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9308 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9309 ;;Total ram usage:        2 bytes
  9310 ;; Hardware stack levels used:    1
  9311 ;; Hardware stack levels required when called:    1
  9312 ;; This function calls:
  9313 ;;		i2___awmod
  9314 ;; This function is called by:
  9315 ;;		_isFullQueue
  9316 ;; This function uses a non-reentrant model
  9317 ;;
  9318                           
  9319                           	psect	text54
  9320  003A52                     __ptext54:
  9321                           	opt callstack 0
  9322  003A52                     i2_getSizeQueue:
  9323                           	opt callstack 17
  9324  003A52                     
  9325                           ;ready_queue.c: 11:     return (rear - front + 1 + 20) % 20;
  9326  003A52  0100               	movlb	0	; () banked
  9327  003A54  51D1               	movf	_front& (0+255),w,b
  9328  003A56  5DCF               	subwf	_rear& (0+255),w,b
  9329  003A58  6E07               	movwf	??i2_getSizeQueue^0,c
  9330  003A5A  51D2               	movf	(_front+1)& (0+255),w,b
  9331  003A5C  59D0               	subwfb	(_rear+1)& (0+255),w,b
  9332  003A5E  6E08               	movwf	(??i2_getSizeQueue+1)^0,c
  9333  003A60  0E15               	movlw	21
  9334  003A62  2407               	addwf	??i2_getSizeQueue^0,w,c
  9335  003A64  6E01               	movwf	i2___awmod@dividend^0,c
  9336  003A66  0E00               	movlw	0
  9337  003A68  2008               	addwfc	(??i2_getSizeQueue+1)^0,w,c
  9338  003A6A  6E02               	movwf	(i2___awmod@dividend+1)^0,c
  9339  003A6C  0E00               	movlw	0
  9340  003A6E  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  9341  003A70  0E14               	movlw	20
  9342  003A72  6E03               	movwf	i2___awmod@divisor^0,c
  9343  003A74  ECC3  F017         	call	i2___awmod	;wreg free
  9344  003A78  5001               	movf	?i2___awmod^0,w,c
  9345  003A7A  0012               	return		;funcret
  9346  003A7C                     __end_ofi2_getSizeQueue:
  9347                           	opt callstack 0
  9348                           
  9349 ;; *************** function i2___awmod *****************
  9350 ;; Defined at:
  9351 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  9352 ;; Parameters:    Size  Location     Type
  9353 ;;  dividend        2    0[COMRAM] int 
  9354 ;;  divisor         2    2[COMRAM] int 
  9355 ;; Auto vars:     Size  Location     Type
  9356 ;;  __awmod         1    5[COMRAM] unsigned char 
  9357 ;;  __awmod         1    4[COMRAM] unsigned char 
  9358 ;; Return value:  Size  Location     Type
  9359 ;;                  2    0[COMRAM] int 
  9360 ;; Registers used:
  9361 ;;		wreg, status,2, status,0
  9362 ;; Tracked objects:
  9363 ;;		On entry : 0/0
  9364 ;;		On exit  : 0/0
  9365 ;;		Unchanged: 0/0
  9366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9367 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9368 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9370 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9371 ;;Total ram usage:        6 bytes
  9372 ;; Hardware stack levels used:    1
  9373 ;; This function calls:
  9374 ;;		Nothing
  9375 ;; This function is called by:
  9376 ;;		_enqueue
  9377 ;;		i2_getSizeQueue
  9378 ;; This function uses a non-reentrant model
  9379 ;;
  9380                           
  9381                           	psect	text55
  9382  002F86                     __ptext55:
  9383                           	opt callstack 0
  9384  002F86                     i2___awmod:
  9385                           	opt callstack 19
  9386  002F86  0E00               	movlw	0
  9387  002F88  6E06               	movwf	i2___awmod@sign^0,c
  9388  002F8A  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
  9389  002F8C  EFCC  F017         	goto	i2u242_40
  9390  002F90  EFCA  F017         	goto	i2u242_41
  9391  002F94                     i2u242_41:
  9392  002F94  EFD2  F017         	goto	i2l2940
  9393  002F98                     i2u242_40:
  9394  002F98  6C01               	negf	i2___awmod@dividend^0,c
  9395  002F9A  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  9396  002F9C  B0D8               	btfsc	status,0,c
  9397  002F9E  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  9398  002FA0  0E01               	movlw	1
  9399  002FA2  6E06               	movwf	i2___awmod@sign^0,c
  9400  002FA4                     i2l2940:
  9401  002FA4  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
  9402  002FA6  EFD9  F017         	goto	i2u243_40
  9403  002FAA  EFD7  F017         	goto	i2u243_41
  9404  002FAE                     i2u243_41:
  9405  002FAE  EFDD  F017         	goto	i2l2944
  9406  002FB2                     i2u243_40:
  9407  002FB2  6C03               	negf	i2___awmod@divisor^0,c
  9408  002FB4  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  9409  002FB6  B0D8               	btfsc	status,0,c
  9410  002FB8  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  9411  002FBA                     i2l2944:
  9412  002FBA  5003               	movf	i2___awmod@divisor^0,w,c
  9413  002FBC  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  9414  002FBE  B4D8               	btfsc	status,2,c
  9415  002FC0  EFE4  F017         	goto	i2u244_41
  9416  002FC4  EFE6  F017         	goto	i2u244_40
  9417  002FC8                     i2u244_41:
  9418  002FC8  EF0A  F018         	goto	i2l2960
  9419  002FCC                     i2u244_40:
  9420  002FCC  0E01               	movlw	1
  9421  002FCE  6E05               	movwf	i2___awmod@counter^0,c
  9422  002FD0  EFEE  F017         	goto	i2l2950
  9423  002FD4                     i2l2948:
  9424  002FD4  90D8               	bcf	status,0,c
  9425  002FD6  3603               	rlcf	i2___awmod@divisor^0,f,c
  9426  002FD8  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  9427  002FDA  2A05               	incf	i2___awmod@counter^0,f,c
  9428  002FDC                     i2l2950:
  9429  002FDC  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  9430  002FDE  EFF3  F017         	goto	i2u245_41
  9431  002FE2  EFF5  F017         	goto	i2u245_40
  9432  002FE6                     i2u245_41:
  9433  002FE6  EFEA  F017         	goto	i2l2948
  9434  002FEA                     i2u245_40:
  9435  002FEA                     i2l2952:
  9436  002FEA  5003               	movf	i2___awmod@divisor^0,w,c
  9437  002FEC  5C01               	subwf	i2___awmod@dividend^0,w,c
  9438  002FEE  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  9439  002FF0  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  9440  002FF2  A0D8               	btfss	status,0,c
  9441  002FF4  EFFE  F017         	goto	i2u246_41
  9442  002FF8  EF00  F018         	goto	i2u246_40
  9443  002FFC                     i2u246_41:
  9444  002FFC  EF04  F018         	goto	i2l2956
  9445  003000                     i2u246_40:
  9446  003000  5003               	movf	i2___awmod@divisor^0,w,c
  9447  003002  5E01               	subwf	i2___awmod@dividend^0,f,c
  9448  003004  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  9449  003006  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  9450  003008                     i2l2956:
  9451  003008  90D8               	bcf	status,0,c
  9452  00300A  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  9453  00300C  3203               	rrcf	i2___awmod@divisor^0,f,c
  9454  00300E  2E05               	decfsz	i2___awmod@counter^0,f,c
  9455  003010  EFF5  F017         	goto	i2l2952
  9456  003014                     i2l2960:
  9457  003014  5006               	movf	i2___awmod@sign^0,w,c
  9458  003016  B4D8               	btfsc	status,2,c
  9459  003018  EF10  F018         	goto	i2u247_41
  9460  00301C  EF12  F018         	goto	i2u247_40
  9461  003020                     i2u247_41:
  9462  003020  EF16  F018         	goto	i2l2964
  9463  003024                     i2u247_40:
  9464  003024  6C01               	negf	i2___awmod@dividend^0,c
  9465  003026  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  9466  003028  B0D8               	btfsc	status,0,c
  9467  00302A  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  9468  00302C                     i2l2964:
  9469  00302C  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  9470  003030  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  9471  003034  0012               	return		;funcret
  9472  003036                     __end_ofi2___awmod:
  9473                           	opt callstack 0
  9474                           
  9475                           	psect	text56
  9476  000000                     __ptext56:
  9477                           	opt callstack 0
  9478  000000                     
  9479                           	psect	rparam
  9480  0000                     
  9481                           	psect	temp
  9482  00004D                     btemp:
  9483                           	opt callstack 0
  9484  00004D                     	ds	1
  9485  0000                     int$flags	set	btemp
  9486  0000                     wtemp8	set	btemp+1
  9487  0000                     ttemp5	set	btemp+1
  9488  0000                     ttemp6	set	btemp+4
  9489  0000                     ttemp7	set	btemp+8
  9490                           tosu	equ	0xFFF
  9491                           tosh	equ	0xFFE
  9492                           tosl	equ	0xFFD
  9493                           stkptr	equ	0xFFC
  9494                           pclatu	equ	0xFFB
  9495                           pclath	equ	0xFFA
  9496                           pcl	equ	0xFF9
  9497                           tblptru	equ	0xFF8
  9498                           tblptrh	equ	0xFF7
  9499                           tblptrl	equ	0xFF6
  9500                           tablat	equ	0xFF5
  9501                           prodh	equ	0xFF4
  9502                           prodl	equ	0xFF3
  9503                           indf0	equ	0xFEF
  9504                           postinc0	equ	0xFEE
  9505                           postdec0	equ	0xFED
  9506                           preinc0	equ	0xFEC
  9507                           plusw0	equ	0xFEB
  9508                           fsr0h	equ	0xFEA
  9509                           fsr0l	equ	0xFE9
  9510                           wreg	equ	0xFE8
  9511                           indf1	equ	0xFE7
  9512                           postinc1	equ	0xFE6
  9513                           postdec1	equ	0xFE5
  9514                           preinc1	equ	0xFE4
  9515                           plusw1	equ	0xFE3
  9516                           fsr1h	equ	0xFE2
  9517                           fsr1l	equ	0xFE1
  9518                           bsr	equ	0xFE0
  9519                           indf2	equ	0xFDF
  9520                           postinc2	equ	0xFDE
  9521                           postdec2	equ	0xFDD
  9522                           preinc2	equ	0xFDC
  9523                           plusw2	equ	0xFDB
  9524                           fsr2h	equ	0xFDA
  9525                           fsr2l	equ	0xFD9
  9526                           status	equ	0xFD8


Data Sizes:
    Strings     14
    Constant    0
    Data        8
    BSS         467
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     51      76
    BANK0           160     69     119
    BANK1           256      0     100
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    handleListHead$1984	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    handleListHead$1979	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> readTempAndHumid(), handleButton(), NULL(NULL[0]), printTempAndHumid(), 
		 -> printTime_ms(), 

    ptr$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S33$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ptr$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    callback$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printTime_ms@data_ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    handleButton@data_ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S25$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ?_dequeue.data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ?_dequeue.func_ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> readTempAndHumid(), handleButton(), NULL(NULL[0]), printTempAndHumid(), 
		 -> printTime_ms(), 

    LCDPrint@ptr	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[3]), STR_3(CODE[5]), STR_2(CODE[3]), STR_1(CODE[3]), 

    LCDPutStr@ptr	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[3]), STR_3(CODE[5]), STR_2(CODE[3]), STR_1(CODE[3]), 

    register_timer@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    register_timer@callback	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> readTempAndHumid(), handleButton(), printTempAndHumid(), printTime_ms(), 

    node.data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    node.func_ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> readTempAndHumid(), handleButton(), NULL(NULL[0]), printTempAndHumid(), 
		 -> printTime_ms(), 

    addTask@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    addTask@ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> readTempAndHumid(), handleButton(), printTempAndHumid(), printTime_ms(), 

    S33$data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    task_list.data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S33$func_ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> readTempAndHumid(), handleButton(), NULL(NULL[0]), printTempAndHumid(), 
		 -> printTime_ms(), 

    task_list.func_ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> readTempAndHumid(), handleButton(), NULL(NULL[0]), printTempAndHumid(), 
		 -> printTime_ms(), 

    temp.data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    temp.func_ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> readTempAndHumid(), handleButton(), NULL(NULL[0]), printTempAndHumid(), 
		 -> printTime_ms(), 

    enqueue@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    enqueue@ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> readTempAndHumid(), handleButton(), NULL(NULL[0]), printTempAndHumid(), 
		 -> printTime_ms(), 

    S25$data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ready_queue.data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S25$func_ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> readTempAndHumid(), handleButton(), NULL(NULL[0]), printTempAndHumid(), 
		 -> printTime_ms(), 

    ready_queue.func_ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> readTempAndHumid(), handleButton(), NULL(NULL[0]), printTempAndHumid(), 
		 -> printTime_ms(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _timer_interrupt in COMRAM

    _timer_interrupt->_handleListHead
    _handleListHead->_enqueue
    _enqueue->_isFullQueue
    _isFullQueue->i2_getSizeQueue
    i2_getSizeQueue->i2___awmod

Critical Paths under _main in BANK0

    _system_initialize->_start_timer
    _start_timer->_initializeTaskList
    _initializeTaskList->_queueInitialize
    _queueInitialize->___wmul
    _LCDInit->_LCDPutInst
    _Port_BBSPIInit->_SendByteBBSPI
    _register_timer->_addTask
    _addTask->___wmul
    _dispatch->_selectReadyTask
    _selectReadyTask->_readTempAndHumid
    _readTempAndHumid->___flsub
    _readDHT->_getByte
    ___flsub->___fladd
    ___fladd->___flmul
    _printTime_ms->_LCDPrintChar
    _printTempAndHumid->___flmul
    ___flmul->___xxtofl
    _LCDPrintChar->_LCDMoveCursor
    _LCDPrint->_LCDMoveCursor
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_WritePort_BBSPI
    _LCDMoveCursor->_LCDPutInst
    _LCDPutInst->_WritePort_BBSPI
    _WritePort_BBSPI->_SendByteBBSPI
    _isEmptyQueue->_getSizeQueue
    _getSizeQueue->___awmod

Critical Paths under _timer_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer_interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer_interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer_interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timer_interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timer_interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _timer_interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _timer_interrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _timer_interrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _timer_interrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _timer_interrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _timer_interrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _timer_interrupt in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _timer_interrupt in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _timer_interrupt in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _timer_interrupt in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   37939
                           _LCDPrint
                           _dispatch
                     _register_timer
                  _system_initialize
 ---------------------------------------------------------------------------------
 (1) _system_initialize                                    0     0      0    3994
                            _LCDInit
               _interrupt_initialize
                     _osc_initialize
                     _pin_initialize
                        _start_timer
 ---------------------------------------------------------------------------------
 (2) _start_timer                                          3     3      0    2080
                                             10 BANK0      3     3      0
                 _initializeTaskList
 ---------------------------------------------------------------------------------
 (3) _initializeTaskList                                   2     2      0    2036
                                              8 BANK0      2     2      0
                             ___wmul
                    _queueInitialize
 ---------------------------------------------------------------------------------
 (4) _queueInitialize                                      2     2      0     985
                                              6 BANK0      2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _pin_initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _osc_initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _interrupt_initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0    1914
                                              6 BANK0      1     1      0
                          _InitBBSPI
                         _LCDPutInst
                     _Port_BBSPIInit
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (3) _Port_BBSPIInit                                       1     1      0     160
                                              3 BANK0      1     1      0
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (3) _InitBBSPI                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _register_timer                                      13     0     13    3259
                                             38 BANK0     13     0     13
                            _addTask
 ---------------------------------------------------------------------------------
 (2) _addTask                                             32    19     13    1955
                                              6 BANK0     32    19     13
                             ___wmul
                         _isFullList
 ---------------------------------------------------------------------------------
 (3) _isFullList                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dispatch                                             0     0      0   27806
                    _selectReadyTask
 ---------------------------------------------------------------------------------
 (2) _selectReadyTask                                      5     5      0   27806
                                             64 BANK0      5     5      0
                            _dequeue
                       _handleButton *
                       _isEmptyQueue
                  _printTempAndHumid *
                       _printTime_ms *
                   _readTempAndHumid *
 ---------------------------------------------------------------------------------
 (3) _readTempAndHumid                                     1     1      0    8004
                                             63 BANK0      1     1      0
                            ___fladd
                            ___flmul
                            ___flsub
                           ___xxtofl
                            _readDHT
 ---------------------------------------------------------------------------------
 (4) _readDHT                                              4     4      0     255
                                              4 BANK0      4     4      0
                            _getByte
 ---------------------------------------------------------------------------------
 (5) _getByte                                              4     4      0     184
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     550
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    2737
                                             55 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    2414
                                             39 BANK0     16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _printTime_ms                                         8     6      2    3977
                                             14 BANK0      8     6      2
                       _LCDPrintChar
                            ___lldiv
                            ___llmod
                           _get_time
 ---------------------------------------------------------------------------------
 (4) _get_time                                             4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     311
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     314
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) _printTempAndHumid                                   12    12      0   11614
                                             39 BANK0     12    12      0
                           _LCDPrint
                       _LCDPrintChar
                            ___awdiv
                            ___awmod
                             ___fleq
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     381
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    2048
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fleq                                              12     4      8     646
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1212
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _LCDPrintChar                                         3     1      2    3215
                                             11 BANK0      3     1      2
                      _LCDMoveCursor
                         _LCDPutChar
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _LCDPrint                                             4     1      3    2880
                                             11 BANK0      4     1      3
                      _LCDMoveCursor
                          _LCDPutStr
 ---------------------------------------------------------------------------------
 (5) _LCDPutStr                                            2     0      2    1009
                                              6 BANK0      2     0      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (5) _LCDPutChar                                           1     1      0     888
                                              5 BANK0      1     1      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (5) _LCDMoveCursor                                        5     4      1    1153
                                              6 BANK0      5     4      1
                         _LCDPutInst
 ---------------------------------------------------------------------------------
 (3) _LCDPutInst                                           1     1      0     888
                                              5 BANK0      1     1      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (3) _WritePort_BBSPI                                      2     1      1     866
                                              3 BANK0      2     1      1
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (4) _SendByteBBSPI                                        3     3      0     138
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _handleButton                                         8     6      2     143
                                             14 BANK0      8     6      2
                      _readButtonRA5
                      _readButtonRB0
 ---------------------------------------------------------------------------------
 (4) _readButtonRB0                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _readButtonRA5                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _dequeue                                             12     7      5    2996
                                              8 BANK0     12     7      5
                            ___awmod
                             ___wmul
                       _isEmptyQueue
 ---------------------------------------------------------------------------------
 (3) _isEmptyQueue                                         0     0      0    1004
                       _getSizeQueue
 ---------------------------------------------------------------------------------
 (4) _getSizeQueue                                         2     2      0    1004
                                              6 BANK0      2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1004
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     895
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _timer_interrupt                                      6     6      0    2774
                                             45 COMRAM     6     6      0
                     _handleListHead
 ---------------------------------------------------------------------------------
 (10) _handleListHead                                     31    31      0    2774
                                             14 COMRAM    31    31      0
                            _enqueue
                         _removeTask
                           i2___wmul
 ---------------------------------------------------------------------------------
 (11) _removeTask                                          6     6      0     332
                                              0 COMRAM     6     6      0
                        _isEmptyList
 ---------------------------------------------------------------------------------
 (12) _isEmptyList                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _enqueue                                             5     0      5    1411
                                              9 COMRAM     5     0      5
                        _isFullQueue
                          i2___awmod
                           i2___wmul
 ---------------------------------------------------------------------------------
 (11) i2___wmul                                            6     2      4     415
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (12) _isFullQueue                                         1     1      0     400
                                              8 COMRAM     1     1      0
                     i2_getSizeQueue
 ---------------------------------------------------------------------------------
 (13) i2_getSizeQueue                                      2     2      0     400
                                              6 COMRAM     2     2      0
                          i2___awmod
 ---------------------------------------------------------------------------------
 (12) i2___awmod                                           6     2      4     400
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDPrint
     _LCDMoveCursor
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
     _LCDPutStr
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
   _dispatch
     _selectReadyTask
       _dequeue
         ___awmod
         ___wmul
         _isEmptyQueue
           _getSizeQueue
             ___awmod
       _handleButton *
         _readButtonRA5
         _readButtonRB0
       _isEmptyQueue *
         _getSizeQueue
           ___awmod
       _printTempAndHumid *
         _LCDPrint
           _LCDMoveCursor
             _LCDPutInst
               _WritePort_BBSPI
                 _SendByteBBSPI
           _LCDPutStr
             _LCDPutChar
               _WritePort_BBSPI
                 _SendByteBBSPI
         _LCDPrintChar
           _LCDMoveCursor
             _LCDPutInst
               _WritePort_BBSPI
                 _SendByteBBSPI
           _LCDPutChar
             _WritePort_BBSPI
               _SendByteBBSPI
           ___awdiv (ARG)
           ___awmod (ARG)
         ___awdiv
         ___awmod
         ___fleq
         ___flmul
           ___xxtofl (ARG)
         ___fltol
       _printTime_ms *
         _LCDPrintChar
           _LCDMoveCursor
             _LCDPutInst
               _WritePort_BBSPI
                 _SendByteBBSPI
           _LCDPutChar
             _WritePort_BBSPI
               _SendByteBBSPI
           ___awdiv (ARG)
           ___awmod (ARG)
         ___lldiv
         ___llmod
         _get_time
       _readTempAndHumid *
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___xxtofl
         _readDHT
           _getByte
   _register_timer
     _addTask
       ___wmul
       _isFullList
   _system_initialize
     _LCDInit
       _InitBBSPI
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
       _Port_BBSPIInit
         _SendByteBBSPI
       _WritePort_BBSPI
         _SendByteBBSPI
     _interrupt_initialize
     _osc_initialize
     _pin_initialize
     _start_timer
       _initializeTaskList
         ___wmul
         _queueInitialize
           ___wmul

 _timer_interrupt (ROOT)
   _handleListHead
     _enqueue
       _isFullQueue
         i2_getSizeQueue
           i2___awmod
       i2___awmod
       i2___wmul
     _removeTask
       _isEmptyList
     i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0     12C      37        7.6%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      64       7       39.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     45      77       5       74.4%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     33      4C       1       80.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     127      32        0.0%
DATA                 0      0     253       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Nov 17 15:33:36 2019

                _LCDMoveCursor 3978               ??i2_getSizeQueue 0007                    ?_LCDPutChar 0001  
                           l58 2ED2                             l69 23CC                 ??_getSizeQueue 0066  
                 ___awdiv@sign 0065                    ?_LCDPutInst 0001            ___wmul@multiplicand 0062  
        SendByteBBSPI@bitcount 0061                            l141 3AEC                            l144 3BCE  
                          l232 2A8C                            l138 3BC8                            l170 35B2  
                          l227 3B7E                            l147 3B2A                            l180 3A24  
                          l236 214E                            l173 3A50                            l422 37EA  
                          l430 3798                            l502 3B0C                            l351 339A  
                          l521 39B4                            l505 38B6                            l514 3938  
                          l362 39EE                            l188 331E                            l508 38F8  
                          l189 337E                            l533 3976                            l445 2C7C  
                          l349 3414                            l527 3874                            l359 3BBA  
                          l560 3198                            l625 32DC                            l289 36E4  
                          l490 35C2                            l618 32CC                            l562 31BE  
                          l378 3BD4                            l492 35D6                            l484 3680  
                          l493 35D8                            l565 3236                            l822 2E16  
                          l574 2CC8                            l591 3AA2                            l487 3BA8  
                          l496 361C                            l568 320E                            l577 2D50  
                          l850 30E0                            l578 2CD6                            l835 2F84  
                          l579 2CFC                            l587 2856                            l499 3B48  
                          l888 2B94                    _start_timer 3380                   ___awmod@sign 0065  
                          prod 000FF3                            tosl 000FFD                            wreg 000FE8  
                 ___flmul@aexp 007F                   ___flmul@bexp 0080                   ___flmul@sign 007A  
                 ___flmul@temp 0085                   ___flmul@prod 0081                __end_of_LCDInit 3682  
                 __CFG_LVP$OFF 000000      __size_of_readTempAndHumid 0136                   ___fltol@exp1 0069  
                 __CFG_WDT$OFF 000000                           l1011 351E                           l1120 11EE  
                         l1121 11B4                           l1018 352E                           l1212 1C40  
                         l1205 1A4A                           l1222 1D70                           l1214 1CB8  
                         l1215 1CA6                           l1119 1200                           l1136 131A  
                         l1128 14D0                           l1209 1DAE                           l1145 13EA  
                         l1161 3832                           l3002 3A0C                           l3010 37A8  
                         l1146 13D8                           l3012 37BA                           l3020 37E2  
                         l3100 1984                           l1260 251C                           l1253 24C0  
                         l3014 37CA                           l3006 379A                           l3030 3768  
                         l3110 19C2                           l3102 1992                           l1246 2428  
                         l3016 37D6                           l3008 379E                           l3032 3778  
                         l3024 3748                           l3200 1CC8                           l3120 19F4  
                         l3112 19D2                           l3104 19A0                           l1249 2584  
                         l3034 3784                           l3026 374C                           l3210 1D2A  
                         l3202 1CD4                           l3130 1A34                           l3122 1A02  
                         l3114 19D8                           l3106 19A2                           l3050 2CA8  
                         l3042 2C7E                           l3028 3756                           l3220 1D92  
                         l3212 1D3E                           l3204 1CE2                           l3140 1A7E  
                         l3132 1A3A                           l3124 1A04                           l3116 19E8  
                         l3108 19B2                           l3060 2CE6                           l3052 2CB0  
                         l3044 2C88                           l3038 3790                           l3222 1D94  
                         l3214 1D58                           l3206 1D0C                           l3150 1ACE  
                         l3142 1A8A                           l3134 1A5A                           l3126 1A14  
                         l3118 19EE                           l3310 2AFA                           l3302 2ABA  
                         l3230 37EC                           l3054 2CC2                           l3046 2C9A  
                         l2600 38C4                           l3240 2D66                           l3216 1D74  
                         l3224 1D9A                           l3208 1D10                           l3160 1B10  
                         l3152 1ADA                           l3144 1A94                           l3136 1A6A  
                         l3128 1A24                           l3320 2B2A                           l3312 2B08  
                         l3304 2AE4                           l3080 324A                           l3232 37FE  
                         l3048 2CA2                           l2610 38EA                           l2602 38D0  
                         l3250 2D8C                           l3242 2D6E                           l3226 1D9E  
                         l3218 1D84                           l3170 1B72                           l3162 1B1C  
                         l3154 1AE6                           l3146 1AAA                           l3330 2B54  
                         l3322 2B34                           l3306 2AE6                           l3090 328C  
                         l3082 3260                           l3410 2E36                           l3074 2D4E  
                         l3066 2D0A                           l3058 2CE0                           l2612 38EC  
                         l2604 38D2                           l2620 3890                           l3260 2DC4  
                         l3252 2D94                           l3244 2D72                           l3236 2D52  
                         l3180 1C08                           l3172 1B7E                           l3164 1B2C  
                         l3156 1AF4                           l3148 1AB6                           l3332 2B64  
                         l3308 2AF6                           l3420 2178                           l3092 32AA  
                         l3084 3268                           l3340 34A6                           l3412 2EA8  
                         l3500 2BC6                           l2700 31CC                           l3068 2D32  
                         l2630 2ED4                           l2606 38DC                           l2622 389A  
                         l2614 387A                           l3270 2DF0                           l3262 2DCA  
                         l3254 2DA6                           l3246 2D80                           l3238 2D58  
                         l3190 1C5E                           l3182 1C26                           l3174 1B9A  
                         l3166 1B46                           l3158 1B00                           l3334 2B74  
                         l3318 2B20                           l3430 2248                           l3422 21AE  
                         l3094 32BA                           l3086 3274                           l3078 3238  
                         l3350 34FE                           l3342 34BE                           l3414 2EAC  
                         l3406 2E18                           l3510 2C18                           l3502 2BD2  
                         l2710 31F8                           l2702 31D4                           l2640 2F02  
                         l2632 2EDA                           l2560 35BC                           l2608 38DE  
                         l2624 389C                           l2616 3882                           l3264 2DE0  
                         l3256 2DAE                           l3272 2DF6                           l3248 2D88  
                         l3280 3036                           l3192 1C62                           l3184 1C30  
                         l3176 1BC4                           l3168 1B56                           l3336 2B84  
                         l3328 2B48                           l3440 22F0                           l3432 2280  
                         l3424 21E6                           l3096 32BC                           l3088 3282  
                         l3352 350E                           l3344 34C6                           l3416 2EC2  
                         l3408 2E2C                           l3512 2C2C                           l3504 2BE4  
                         l3520 2C52                           l2800 1142                           l3360 23F2  
                         l2720 3234                           l2704 31E2                           l3600 339E  
                         l2650 2F3A                           l2642 2F0A                           l2634 2EE8  
                         l2570 35EE                           l2626 38A8                           l2618 388E  
                         l3274 2E06                           l3266 2DE8                           l3258 2DB6  
                         l3290 30D8                           l3282 3066                           l3194 1C70  
                         l3186 1C3E                           l3178 1BFA                           l3450 23A6  
                         l3442 2316                           l3434 2290                           l3426 21F6  
                         l3418 2150                           l3098 32C6                           l3354 3518  
                         l3346 34D2                           l3514 2C38                           l2810 1156  
                         l2802 1146                           l2730 1010                           l3370 246A  
                         l3362 2438                           l2706 31EA                           l3530 3B98  
                         l3610 33C6                           l3602 33BA                           l2724 3A7C  
                         l2660 2F74                           l2652 2F50                           l2644 2F1C  
                         l2636 2EF0                           l3460 3308                           l2580 35FC  
                         l2572 35F4                           l2628 38AA                           l3276 2E0E  
                         l3268 2DEA                           l3292 30DE                           l3284 3076  
                         l3196 1C9E                           l3188 1C50                           l3444 233C  
                         l3436 22AC                           l3428 2212                           l3348 34E0  
                         l3516 2C4A                           l3508 2BEC                           l2900 13FA  
                         l2820 11CE                           l2812 1180                           l2804 114A  
                         l2740 104E                           l2732 101E                           l3380 24F2  
                         l3372 2476                           l3364 244E                           l3356 23D2  
                         l2708 31F2                           l2716 321C                           l3540 2736  
                         l3700 20C6                           l3532 3B30                           l3612 33CA  
                         l3604 33BE                           l2726 3A9A                           l2662 2F7C  
                         l2654 2F58                           l2646 2F24                           l2638 2EF4  
                         l2590 360C                           l2582 35FE                           l2574 35F6  
                         l2566 35D0                           l2558 35B8                           l2670 38FA  
                         l3286 30A4                           l3446 2362                           l3438 22D2  
                         l2910 1460                           l2902 1406                           l2830 120E  
                         l2822 11D2                           l2814 119C                           l2806 114E  
                         l2750 107E                           l2742 105E                           l2734 102C  
                         l3390 2530                           l3382 24FE                           l3374 24A8  
                         l3358 23E4                           l2718 3224                           l3550 27C2  
                         l3702 20EA                           l3534 3B32                           l3606 33C0  
                         l2656 2F5E                           l2648 2F2C                           l3464 3326  
                         l3456 32DE                           l2584 3600                           l2576 35F8  
                         l2568 35E6                           l2592 3AF2                           l2680 398E  
                         l2672 38FE                           l3288 30B4                           l3296 2A8E  
                         l3448 2380                           l2920 14A8                           l2912 1470  
                         l2904 1414                           l2840 1250                           l2832 121E  
                         l2824 11E0                           l2816 11AC                           l2808 1152  
                         l2760 10A8                           l2752 1090                           l2744 1060  
                         l2736 102E                           l3392 2554                           l3384 250C  
                         l3376 24AA                           l3368 2462                           l3552 2834  
                         l3544 275C                           l3704 214C                           l3640 1DB0  
                         l3536 3B46                           l3560 3BC4                           l3480 2980  
                         l3608 33C2                           l3616 33D2                           l2658 2F64  
                         l2666 3A26                           l3466 3348                           l3458 32F4  
                         l2586 3602                           l2578 35FA                           l2594 3AF4  
                         l2682 399E                           l2674 3912                           l3298 2AA6  
                         l2922 14AA                           l2914 1490                           l2906 144E  
                         l2850 127E                           l2842 125E                           l2826 11E2  
                         l2818 11C2                           l2762 10B8                           l2770 10E2  
                         l2754 1092                           l2738 103E                           l2746 1068  
                         l3394 2564                           l3386 252A                           l3378 24B6  
                         l3546 277E                           l3538 2722                           l3642 1DC4  
                         l3570 3622                           l3562 3ACA                           l3490 2A64  
                         l3482 2984                           l3810 2974                           l2588 360A  
                         l2596 3B0A                           l2684 39AA                           l2676 3918  
                         l2924 14B0                           l2916 1494                           l2908 1450  
                         l2860 12EA                           l2852 1288                           l2844 126A  
                         l2836 1232                           l2828 11EC                           l2780 111A  
                         l2772 10F2                           l2764 10C8                           l2756 1098  
                         l2748 1078                           l3396 2572                           l3388 252C  
                         l2692 31A0                           l3548 278E                           l3740 3698  
                         l3476 3B66                           l3660 1E0A                           l3652 1DD0  
                         l3580 3640                           l3572 3624                           l3564 3AEA  
                         l3492 2A68                           l3804 2858                           l2598 38BC  
                         l2686 39AE                           l2678 397C                           l2926 14BE  
                         l2918 14A2                           l2862 12FA                           l2846 126E  
                         l2838 1242                           l2854 128E                           l2790 112E  
                         l2782 111E                           l2774 1104                           l2766 10D8  
                         l2758 10A6                           l3398 2574                           l2694 31A6  
                         l3742 36AE                           l3670 1E96                           l3646 1DCA  
                         l3590 366E                           l3582 3646                           l3574 3626  
                         l3566 3BCA                           l3494 2A84                           l3750 3B1A  
                         l3806 294E                           l3496 2B96                           l2928 14C0  
                         l2880 137C                           l2872 1354                           l2856 12B4  
                         l2864 130A                           l2848 127C                           l2792 1132  
                         l2784 1122                           l2776 1112                           l2768 10DA  
                         l2696 31B8                           l2688 318E                           l3744 36D0  
                         l3736 3682                           l3760 3BD0                           l3680 1F20  
                         l3672 1EAE                           l3656 1DF8                           l3592 3674  
                         l3584 3652                           l3576 3638                           l3568 361E  
                         l3488 298E                           l3912 33E6                           l3752 3B1E  
                         l3808 2960                           l2970 393E                           l3914 2C02  
                         l3498 2BB2                           l2882 1384                           l2874 135E  
                         l2866 1330                           l2858 12E8                           l2890 13A8  
                         l2794 1136                           l2786 1126                           l2778 1116  
                         l3738 3686                           l3690 1FA6                           l3682 1F28  
                         l3674 1EC0                           l3666 1E20                           l3658 1DFA  
                         l3594 367A                           l3586 3662                           l3578 363A  
                         l3754 3B24                           l3746 3B0E                           l2980 385E  
                         l2972 3950                           l3916 2C66                           l2892 13AC  
                         l2884 1388                           l2876 136C                           l2868 1340  
                         l2796 113A                           l2788 112A                           l3692 1FBA  
                         l3684 1F40                           l3676 1ED2                           l3668 1E94  
                         l3756 39B6                           l3588 3668                           l3596 3384  
                         l3748 3B16                           l2982 3868                           l2974 3964  
                         l2894 13BA                           l2886 1398                           l2878 136E  
                         l2798 113E                           l3694 2034                           l3686 1F4A  
                         l3678 1F02                           l2990 353A                           l2976 3838  
                         l2968 3BAA                           l2896 13D0                           l2888 139A  
                         l3696 2064                           l3688 1F74                           l2992 3592  
                         l2984 3530                           l2978 384A                           l3698 207C  
                         l2994 3596                           l2996 39F0                           l2998 3A06  
                         STR_1 1009                           STR_2 1006                           STR_3 1001  
                         STR_4 100C                           u2000 320A                           u2001 3206  
                         u2010 321C                           u2011 3218                           u2100 1104  
                         u2020 3234                           u2101 1100                           u2021 3230  
                         u2110 1112                           u2030 102C                           u2111 110E  
                         u2031 1028                           u3000 2B44                           u2200 1250  
                         u2120 1180                           u2040 103E                           u3001 2B40  
                         u2201 124C                           u2121 117C                           u2041 103A  
                         u3010 2B64                           u2210 125E                           u2130 1198  
                         u2050 104E                           u3011 2B60                           u2211 125A  
                         u2131 1192                           u2051 104A                           u3020 2B74  
                         u2300 13A8                           u2220 127C                           u2140 119A  
                         u2060 1090                           u3100 24EE                           u3021 2B70  
                         u2301 13A4                           u2221 1278                           u2061 108C  
                         u3101 24EA                           _LATA 000F89                           u3030 34BE  
                         u2310 13BA                           u2230 12B4                           u2150 11C2  
                         u2070 10A6                           u3110 250C                           _LATB 000F8A  
                         u3031 34BA                           u2311 13B6                           u2231 12B0  
                         u2151 11BE                           u2071 10A2                           u3111 2508  
                         _LATC 000F8B                           u3040 34E0                           u2400 14A2  
                         u2320 13D0                           u2240 12FA                           u2160 11E0  
                         u2080 10B8                           u3120 251C                           _LATD 000F8C  
                         u3041 34DC                           u2401 149E                           u2321 13CC  
                         u2241 12F6                           u2161 11DC                           u2081 10B4  
                         u3121 2518                           u3050 34FE                           u2410 14BE  
                         u2330 13E6                           u2250 1330                           u2170 1200  
                         u2090 10C8                           u3130 252A                           u3051 34FA  
                         u2411 14BA                           u2331 13E2                           u2251 132C  
                         u2171 11FC                           u2091 10C4                           u3131 2526  
                         u3220 3308                           u2500 384A                           u3300 2BC6  
                         u2340 13FA                           u2260 1340                           u2180 120E  
                         u3140 2564                           u3060 23E4                           u3221 3304  
                         u2501 3846                           u3301 2BC2                           u2341 13F6  
                         u2261 133C                           u2181 120A                           u3141 2560  
                         u3061 23E0                           u2510 385A                           u3310 2BE4  
                         u2350 1414                           u2270 136C                           u2190 121E  
                         u3150 2572                           u3070 23F2                           u3231 3312  
                         u2511 3856                           u3311 2BE0                           u2351 1410  
                         u2271 1368                           u2191 121A                           u3151 256E  
                         u3071 23EE                           u3160 2EC2                           u3320 2C2C  
                         u2360 144E                           u2280 137C                           u3080 244E  
                         u2600 2CC2                           u3400 1DF4                           u2520 35B2  
                         u3241 3372                           u3161 2EBE                           u3321 2C28  
                         u2361 144A                           u2281 1378                           u3081 244A  
                         u2601 2CBE                           u3401 1DF0                           u2521 35AE  
                         u2530 3A06                           u3170 2ED2                           u3330 2C4A  
                         u2370 1460                           u2290 1398                           u3090 24A4  
                         u2610 2CD6                           u3410 1E0A                           u2531 3A02  
                         u3171 2ECE                           u3331 2C46                           u2371 145C  
                         u2291 1394                           u3091 24A0                           u2611 2CD2  
                         u3411 1E06                           u1900 2F02                           u2540 3A22  
                         u2700 19C2                           u3180 21AE                           u2380 1470  
                         u2620 2CF8                           u3340 2736                           u3420 1E1C  
                         u1901 2EFE                           u2541 3A1C                           u2701 19BE  
                         u3181 21AA                           u2381 146C                           u2621 2CF4  
                         u3341 2732                           u3421 1E18                           u1910 2F1C  
                         u2550 3A24                           u2710 1A02                           u3190 2248  
                         u2390 1490                           u2630 2D0A                           u3350 278E  
                         u3270 3B7C                           u3430 1EC0                           u1911 2F18  
                         u2711 19FE                           u3191 2244                           u2391 148C  
                         u2631 2D06                           u3351 278A                           u3271 3B76  
                         u3431 1EBC                           u1920 2F3A                           u2560 37BA  
                         u2480 3950                           u2800 1C9E                           u2720 1A14  
                         u2640 2D4A                           u3280 3B7E                           u3440 1ED2  
                         u3360 3396                           u1921 2F36                           u2561 37B6  
                         u2481 394C                           u2801 1C9A                           u2721 1A10  
                         u2641 2D46                           u3441 1ECE                           u3361 3392  
                         u1930 2F50                           u2570 37CA                           u2490 3960  
                         u2810 1CB4                           u2730 1A24                           u2650 3260  
                         u3450 1F02                           u3290 2A84                           u1931 2F4C  
                         u2571 37C6                           u2491 395C                           u2811 1CB0  
                         u2731 1A20                           u2651 325C                           u3451 1EFE  
                         u3291 2A80                           u1940 2F74                           u2580 3768  
                         u1860 35D0                           u2900 2DC4                           u2820 1CC8  
                         u2740 1A5A                           u2660 3282                           u3460 1FBA  
                         u1941 2F70                           u2581 3764                           u1861 35CC  
                         u2901 2DC0                           u2821 1CC4                           u2741 1A56  
                         u2661 327E                           u3541 3690                           u3461 1FB6  
                         u2590 3778                           u1870 35E6                           u1950 3938  
                         u2910 2DE0                           u2830 1CE2                           u2750 1A6A  
                         u2670 32AA                           u3550 36AE                           u3470 2034  
                         u3390 1DC4                           u2591 3774                           u1871 35E2  
                         u1951 3934                           u2911 2DDC                           u2831 1CDE  
                         u2751 1A66                           u2671 32A6                           u3551 36AA  
                         u3471 2030                           u3391 1DC0                           u1880 361C  
                         u1960 398E                           u2920 2E06                           u2840 1D2A  
                         u2760 1BE4                           u2680 19A0                           u3480 20EA  
                         u1881 3618                           u1961 398A                           u2921 2E02  
                         u2841 1D26                           u2681 199C                           u3481 20E6  
                         u1890 2EE8                           u2930 3066                           u2850 1D58  
                         u2770 1C3E                           u2690 19B2                           u1970 31B8  
                         u3570 36E4                           u1891 2EE4                           u2931 3062  
                         u2851 1D54                           u2771 1C3A                           u2691 19AE  
                         u1971 31B4                           u3571 36E0                           u2940 30A4  
                         u2860 1D92                           u2780 1C5E                           u1980 31CC  
                         u2941 30A0                           u2861 1D8E                           u2781 1C5A  
                         u2765 1BDA                           u1981 31C8                           u3717 362E  
                         u2870 2D66                           u2950 30D8                           u2790 1C70  
                         u1990 31E2                           u2871 2D62                           u2951 30D4  
                         u2791 1C6C                           u1991 31DE                           u3727 365A  
                         u2880 2D80                           u2960 2AA6                           u3568 36BC  
                         u2881 2D7C                           u2961 2AA2                           u3737 2C90  
                         u3569 36D0                           u2890 2DA6                           u2970 2ADA  
                         u2891 2DA2                           u3747 2C9E                           u2980 2B08  
                         u2981 2B04                           u3757 31CE                           u2990 2B1C  
                         u3767 387C                           u2991 2B18                           u2975 2AD0  
                         u3777 38BE                 ??_isEmptyQueue 0068                  ?_LCDPrintChar 006B  
     __size_of_selectReadyTask 0064                           _head 00C3                           _main 2858  
                         _rear 00CF                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf2 000FDF                           fsr1l 000FE1                           fsr2l 000FD9  
                         btemp 004D               ?_WritePort_BBSPI 0063                           prodh 000FF4  
                         prodl 000FF3                           start 000E             __size_of_LCDPutStr 0040  
                __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000                 ?_LCDMoveCursor 0066  
                 ___param_bank 000000        __end_of_queueInitialize 35B4               __end_of_LCDPrint 3876  
                printTime_ms@i 0071                  ___fltol@sign1 0068                    LCDPrint@pos 006B  
                  LCDPrint@ptr 006C                __end_of___fladd 14D2                          ?_main 0001  
              __end_of___awdiv 2E18                __end_of___awmod 2F86                __end_of___flmul 1DB0  
              __end_of_addTask 2150                __end_of___flsub 3834                __end_of___fltol 2B96  
              __end_of___lldiv 32DE                          _T0CON 000FD5                ___awdiv@divisor 0062  
                        _T1CON 000FCD                __end_of___llmod 3530                          i2l224 3B96  
                        i2l173 3A7A                          i2l176 3B64                          i2l184 318C  
                        i2l256 2720                          i2l257 2670                          i2l259 268C  
                        i2l275 1882                          i2l267 1982                          i2l269 14EA  
                        i2l375 348A                          i2l591 3AC8                          i2l835 3034  
              ___awdiv@counter 0064                          _TMR1H 000FCF                          _TMR0L 000FD6  
                        _TMR1L 000FCE                          _TRISA 000F92                          _TRISB 000F93  
                        _TRISC 000F94                          _TRISD 000F95                  __CFG_PWRT$OFF 000000  
              __end_of_getByte 3238                 __CFG_FCMEN$OFF 000000                __end_of_dequeue 3380  
      __size_of_Port_BBSPIInit 001E                __end_of_readDHT 2D52                __end_of_enqueue 318E  
                        _count 0048                          _front 00D1    __size_of_initializeTaskList 010E  
                        _value 004C                 ??_LCDPrintChar 006D                 __CFG_BOREN$OFF 000000  
                        pclath 000FFA                          tablat 000FF5  __size_of_interrupt_initialize 0006  
          __size_of_LCDPutChar 0042               __end_ofi2___wmul 3ACA             _LCDMoveCursor$1079 0068  
                        plusw0 000FEB                          plusw1 000FE3                          plusw2 000FDB  
          __size_of_LCDPutInst 0042                          ttemp5 004E                          ttemp6 0051  
                        ttemp7 0055                          status 000FD8        __size_of_osc_initialize 0006  
                        wtemp8 004E             __size_ofi2___awmod 00B0                __initialization 36E6  
                 __end_of_main 2980           __end_of_handleButton 2C7E                 _pin_initialize 3ACA  
     __size_of_timer_interrupt 349E                         ??_main 00A5                  __activetblptr 000003  
       __size_of_readButtonRB0 0052         __size_of_readButtonRA5 0052                      ??_LCDInit 0066  
                 LCDPutChar@ch 0065              __end_of_LCDPutStr 393A                    enqueue@data 000D  
                 LCDPrint@line 006E                         _ADCON1 000FC1               ___llmod@dividend 0060  
           __size_of_InitBBSPI 0012               ___awdiv@dividend 0060                   LCDPutInst@ch 0065  
            _temperature_dht11 00BF                 _register_timer 39B6                         i2l3402 3A52  
                       i2l3452 3B4A                         i2l3630 3110                         i2l3710 259C  
                       i2l3632 3118                         i2l3624 30E2                         i2l3472 3B80  
                       i2l3720 262E                         i2l3712 25C0                         i2l3800 193E  
                       i2l3554 3AA4                         i2l3634 3138                         i2l3730 2706  
                       i2l3722 2640                         i2l3802 1966                         i2l2940 2FA4  
                       i2l2932 2F86                         i2l3556 3AC0                         i2l3636 3164  
                       i2l3628 30FA                         i2l3724 2678                         i2l3732 271E  
                       i2l3716 25C6                         i2l3708 2588                         i2l2950 2FDC  
                       i2l2942 2FB2                         i2l2934 2F8A                         i2l3726 26B0  
                       i2l3718 262A                         i2l3830 3452                         i2l3822 3430  
                       i2l2952 2FEA                         i2l2960 3014                         i2l2944 2FBA  
                       i2l2936 2F98                         i2l3728 26DE                         i2l3840 3486  
                       i2l3824 343E                         i2l3832 3460                         i2l2962 3024  
                       i2l2954 3000                         i2l2946 2FCC                         i2l2938 2FA0  
                       i2l3770 15C2                         i2l3762 14D2                         i2l3834 346E  
                       i2l3826 344C                         i2l2964 302C                         i2l2956 3008  
                       i2l2948 2FD4                         i2l3780 16A0                         i2l3772 1612  
                       i2l3836 347C                         i2l3828 344E                         i2l2958 300E  
                       i2l3790 1724                         i2l3782 16D0                         i2l3774 162C  
                       i2l3766 14F0                         i2l3838 347E                         i2l3792 1754  
                       i2l3784 16D8                         i2l3776 163E                         i2l3768 15B8  
                       i2l3794 1768                         i2l3786 16F2                         i2l3778 1650  
                       i2l3796 1800                         i2l3788 16FC                         i2l3798 18B6  
          initializeTaskList@i 0068              _temperature_value 00CB           __end_of_getSizeQueue 3A52  
                       _OSCCON 000FD3                   LCDPutStr@ptr 0066               __end_of___xxtofl 2586  
              ??_LCDMoveCursor 0067                 __CFG_XINST$OFF 000000           __size_of_isEmptyList 0018  
             __end_of_dispatch 3BD6              ??_selectReadyTask 00A0               __end_of_get_time 3BBC  
                       ___fleq 3036                      ??___fladd 008F                         ___wmul 3A7C  
       __end_of_pin_initialize 3AEE                      ??___awdiv 0064                      ??___awmod 0064  
                    ??___flmul 0076                      ??_addTask 0073                      ??___flsub 009F  
                    ??___fltol 0064                      ??___lldiv 0068           __size_of_isFullQueue 001C  
             ?_queueInitialize 0001                      ??___llmod 0068                   addTask@delay 006A  
                       clear_0 370E                         clear_1 3720                         clear_2 372C  
                       clear_3 3738               ___awdiv@quotient 0066                ___awmod@divisor 0062  
                    ??_getByte 0060                ___awmod@counter 0064           __end_of_isEmptyQueue 3A26  
                    ??_dequeue 006D                      ??_readDHT 0064                      ??_enqueue 000F  
       Port_BBSPIInit@port_dir 0063              __end_ofi2___awmod 3036               LCDMoveCursor@pos 0066  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8         __end_of_register_timer 39F0                 i2___awmod@sign 0006  
             _readTempAndHumid 2722                   ___xxtofl@arg 006A                   ___xxtofl@exp 0069  
                 ___xxtofl@val 0060                     ___fleq@ff1 0060                     ___fleq@ff2 0064  
                   __accesstop 0060        __end_of__initialization 373E                      ?_LCDPrint 006B  
                _readButtonRB0 3748                  _readButtonRA5 379A                  ___rparam_used 000001  
                   ___fltol@f1 0060         __size_of_SendByteBBSPI 006A                 __pcstackCOMRAM 0001  
                 __pidataBANK0 3BBC                ?_pin_initialize 0001              __end_of_InitBBSPI 3BAA  
                 ??_LCDPutChar 0065                   ??_LCDPutInst 0065           __end_of_LCDPrintChar 3978  
                    ?i2___wmul 0001                   ?_start_timer 0001                __CFG_OSC$INTIO7 000000  
               _Port_BBSPIInit 3B2C              ??_timer_interrupt 002E         printTempAndHumid@humid 0091  
                   addTask@idx 0085                     addTask@cur 0083                     addTask@ptr 006E  
                   addTask@sum 0081                ?_register_timer 0086                     __pbssBANK0 00A5  
                   __pbssBANK1 0100                 _osc_initialize 3BC4                 ?_readButtonRB0 0060  
               ?_readButtonRA5 0060             __end_of_LCDPutChar 38B8                     ??_LCDPrint 006E  
           __end_of_LCDPutInst 38FA        __size_of_handleListHead 04B2          __size_of_handleButton 00E8  
                      ?___fleq 0060         start_timer@timer_vaddr 006C                        ?___wmul 0060  
           register_timer@data 0091            getByte@byteReceived 0060                LCDPrintChar@pos 006B  
                   ??i2___wmul 0005         __end_of_Port_BBSPIInit 3B4A                        _LCDInit 361E  
                _SendByteBBSPI 35B4                      ?___xxtofl 0060                     _isFullList 3B66  
        __size_of_getSizeQueue 002C         __end_of_osc_initialize 3BCA                      ?_dispatch 0001  
                    ?_get_time 0060                     _countRB0_1 0034                     _countRA5_1 003C  
                 _handleButton 2B96               WritePort_BBSPI@a 0063          LCDMoveCursor@position 006A  
         register_timer@period 0086                        __Hparam 0000                        __Lparam 0000  
        __size_of_isEmptyQueue 0036                fp__printTime_ms 0000                __size_of___fleq 00AC  
                      ___fladd 1010                        ___awdiv 2D52                        ___awmod 2ED4  
                      ___flmul 1984                        _addTask 1DB0                        ___flsub 37EC  
                      ___fltol 2A8E                        ___lldiv 3238                __size_of___wmul 0028  
                      ___llmod 34A6       __size_of_WritePort_BBSPI 0020   __end_of_interrupt_initialize 3BD0  
                 __psmallconst 1000                        __pcinit 36E6                        __ramtop 1000  
                 _getSizeQueue 3A26                        _getByte 318E                        __ptext0 2858  
                      __ptext1 3B0E                        __ptext2 3380                        __ptext3 2980  
                      __ptext4 3530                        __ptext5 3ACA                        __ptext6 3BC4  
                      __ptext7 3BCA                        __ptext8 361E                        __ptext9 3B2C  
                      _dequeue 32DE              _printTempAndHumid 2150                        _readDHT 2C7E  
               ?_SendByteBBSPI 0001                ?_Port_BBSPIInit 0001                        _enqueue 30E2  
                   ??___xxtofl 0064               ___awmod@dividend 0060        __size_ofi2_getSizeQueue 002A  
           ?_printTempAndHumid 0001                  addTask@period 0066     __end_of_initializeTaskList 2A8E  
                      _task_id 00A5                        _time_ms 00B9                      _LCDPutStr 38FA  
                   ??_dispatch 00A5                     ??_get_time 0064                 __pintcode_body 3416  
              ?_osc_initialize 0001           end_of_initialization 373E                ??_readButtonRB0 0062  
              ??_readButtonRA5 0062            ??_printTempAndHumid 0087                _selectReadyTask 3682  
          fp__readTempAndHumid 0000                        int_func 3416            i2___wmul@multiplier 0001  
                 _isEmptyQueue 39F0              LCDMoveCursor@line 0067                ___lldiv@divisor 0064  
                   _removeTask 2586                ___lldiv@counter 006C          __size_of_LCDPrintChar 003E  
           handleListHead@prev 0026                        postdec1 000FE5                        postdec2 000FDD  
     __end_of_readTempAndHumid 2858                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE      __end_of_printTempAndHumid 23CE           handleButton@checkRB0 0074  
         handleButton@checkRA5 0072                  ?_printTime_ms 006E                      _PORTAbits 000F80  
                    _PORTBbits 000F81                      _PORTCbits 000F82           handleButton@data_ptr 006E  
               getByte@timeOut 0061                     dequeue@idx 006D                    ___fladd@grs 0096  
                ___xxtofl@sign 0068                    ?_isFullList 0001                      _TRISAbits 000F92  
                    _TRISCbits 000F94                      _TRISFbits 000F97           __size_of_start_timer 0096  
                   ?_LCDPutStr 0066                      i2___awmod 2F86            SendByteBBSPI@output 0060  
                  ___flmul@grs 007B                   _LCDPrintChar 393A                  ??_isEmptyList 0001  
             ??_pin_initialize 0060                 _handleListHead 14D2              __size_of_LCDPrint 0042  
                ??_isFullQueue 0009          __end_of_LCDMoveCursor 39B6                 __end_of___fleq 30E2  
              _timer_interrupt 0008                 __end_of___wmul 3AA4         register_timer@callback 008E  
               ??_printTime_ms 0070                   _firstReadRB0 00D4                   _firstReadRA5 00D6  
              ??_SendByteBBSPI 0060                  _secondReadRB0 00D3                  _secondReadRA5 00D5  
                    _InitBBSPI 3B98               ??_register_timer 0093               i2___wmul@product 0005  
            ??_WritePort_BBSPI 0064       __size_of_queueInitialize 0084            start_initialization 36E6  
      __end_of_selectReadyTask 36E6              __size_ofi2___wmul 0026                     ?i2___awmod 0001  
          selectReadyTask@node 00A0           _interrupt_initialize 3BCA         __end_of_handleListHead 1984  
                   enqueue@ptr 000A                ___llmod@divisor 0064                ___llmod@counter 0068  
                  ?_removeTask 0001            __size_of_isFullList 001A                       ??___fleq 0068  
                  addTask@data 0071                       ??___wmul 0064            __end_of_isEmptyList 3B98  
                  addTask@prev 007F                    __pdataBANK0 00CF     __size_of_printTempAndHumid 027E  
          __end_of_isFullQueue 3B66                     ?_InitBBSPI 0001                      ___fladd@a 008B  
                    ___fladd@b 0087                       ?_LCDInit 0001                    __pbssBIGRAM 0164  
               i2_getSizeQueue 3A52                      ___flmul@a 0072                      ___flmul@b 006E  
                  __pbssCOMRAM 0034                      ___flsub@a 009B                      ___flsub@b 0097  
                __pcstackBANK0 0060              __size_of___xxtofl 01B8                    ??_LCDPutStr 0068  
        ?_interrupt_initialize 0001          printTempAndHumid@temp 008F              __size_of_dispatch 0006  
            __size_of_get_time 0012                ?_handleListHead 0001        __end_of_timer_interrupt 34A6  
                removeTask@idx 0006                  removeTask@pos 0005                      __pintcode 0008  
             printTime_ms@temp 0070                       ?___fladd 0087                       ?___awdiv 0060  
                     ?___awmod 0060                       ?___flmul 006E                       ?_addTask 0066  
                     ?___flsub 0097                       ?___fltol 0060                       ?___lldiv 0060  
                     ?___llmod 0060                 LCDPrintChar@ch 006C               ??_Port_BBSPIInit 0063  
                     ?_getByte 0001         __end_ofi2_getSizeQueue 3A7C                       ?_dequeue 0068  
                     ?_readDHT 0001                    __smallconst 1000                       ?_enqueue 000A  
          register_timer@delay 008A               ??_osc_initialize 0060               ?_selectReadyTask 0001  
          __size_of_removeTask 019C                    ??i2___awmod 0005               LCDPrintChar@line 006D  
            ??_queueInitialize 0066           printTime_ms@data_ptr 006E           __end_of_printTime_ms 2ED4  
               ___wmul@product 0064                       _LCDPrint 3834                       _LATAbits 000F89  
                     _LATCbits 000F8B                       _LATFbits 000F8E             _initializeTaskList 2980  
                     _PIE1bits 000F9D                    _isEmptyList 3B80                       i2u320_40 3B62  
                     i2u320_41 3B5C                       i2u321_40 3B64                       i2u242_40 2F98  
                     i2u242_41 2F94                       i2u243_40 2FB2                       i2u243_41 2FAE  
                     i2u244_40 2FCC                       i2u244_41 2FC8                       i2u245_40 2FEA  
                     i2u325_40 3B94                       i2u245_41 2FE6                       i2u325_41 3B8E  
                     i2u246_40 3000                       i2u326_40 3B96                       i2u350_40 25C0  
                     i2u246_41 2FFC                       i2u350_41 25BC                       i2u247_40 3024  
                     i2u351_40 2640                       i2u247_41 3020                       i2u351_41 263C  
                     i2u352_40 26B0                       i2u360_40 163E                       i2u352_41 26AC  
                     i2u360_41 163A                       i2u337_40 30F6                       i2u353_40 26DE  
                     i2u361_40 1650                       i2u337_41 30F2                       i2u353_41 26DA  
                     i2u361_41 164C                       _PIR1bits 000F9E                      _task_list 0164  
                     i2u338_40 3110                       i2u362_40 16A0                       i2u370_40 347C  
                     i2u338_41 310C                       i2u362_41 169C                       i2u370_41 3478  
                     i2u363_40 1768                       i2u363_41 1764                       i2u364_40 1800  
                     i2u364_41 17FC                       i2u349_40 259C                       i2u365_40 18B6  
                     i2u349_41 2598                       i2u365_41 18B2                       i2u366_40 1966  
                     i2u358_40 14E6                       i2u366_41 1962                       i2u358_41 14E2  
                     i2u359_40 15B8                       i2u367_40 343E                       i2u359_41 15B4  
                     i2u367_41 343A                    _isFullQueue 3B4A                       i2u368_40 344C  
                     i2u368_41 3448                       i2u369_40 346E                       i2u369_41 346A  
            handleListHead@cur 002A              handleListHead@pos 002C              handleListHead@sum 0028  
          ?_initializeTaskList 0001              ?_readTempAndHumid 0001          _printTempAndHumid$115 0087  
        _printTempAndHumid$117 008B             ??_readTempAndHumid 009F                ?i2_getSizeQueue 0001  
            ___wmul@multiplier 0060                    ??_InitBBSPI 0060             SendByteBBSPI@input 0062  
                     i2___wmul 3AA4               __size_of_LCDInit 0064                   ??_isFullList 0060  
            _system_initialize 3B0E           ??_initializeTaskList 0068         ??_interrupt_initialize 0060  
                    copy_data0 36FA             i2___awmod@dividend 0001             ?_system_initialize 0001  
        __end_of_readButtonRB0 379A          __end_of_readButtonRA5 37EC            ??_system_initialize 006D  
             ?_timer_interrupt 0001                       __Hrparam 0000                       __Lrparam 0000  
                  _RB0_pressed 00C5            _handleListHead$1984 0022            _handleListHead$1985 0024  
          _handleListHead$1979 001F                _WritePort_BBSPI 3AEE             __end_of_isFullList 3B80  
             __size_of___fladd 04C2               __size_of___awdiv 00C6               __size_of___awmod 00B2  
             __size_of___flmul 042C               __size_of_addTask 03A0               __size_of___flsub 0048  
             __size_of___fltol 0108          i2___wmul@multiplicand 0003               __size_of___lldiv 00A6  
             __size_of___llmod 008A                    _RA5_pressed 00C6               __size_of_getByte 00AA  
             __size_of_dequeue 00A2                  ??_start_timer 006A                       ___xxtofl 23CE  
             __size_of_readDHT 00D4       printTime_ms@current_time 0072      __end_of_system_initialize 3B2C  
             __size_of_enqueue 00AC                fp__handleButton 0000                       __ptext10 3B98  
                     __ptext11 39B6                       __ptext20 37EC                       __ptext12 1DB0  
                     __ptext21 1010                       __ptext13 3B66                       __ptext30 3036  
                     __ptext22 2B96                       __ptext14 3BD0                       __ptext31 2D52  
                     __ptext23 2E18                       __ptext15 3682                       __ptext40 3748  
                     __ptext32 393A                       __ptext24 3BAA                       __ptext16 2722  
                     __ptext41 379A                       __ptext33 3834                       __ptext25 34A6  
                     __ptext17 2C7E                       __ptext50 3B80                       __ptext42 32DE  
                     __ptext34 38FA                       __ptext26 3238                       __ptext18 318E  
                     __ptext51 30E2                       __ptext43 39F0                       __ptext35 3876  
                     __ptext27 2150                       __ptext19 23CE                       __ptext52 3AA4  
                     __ptext44 3A26                       __ptext36 3978                       __ptext28 2A8E  
                     __ptext53 3B4A                       __ptext45 2ED4                       __ptext37 38B8  
                     __ptext29 1984                       __ptext54 3A52                       __ptext46 3A7C  
                     __ptext38 3AEE                       __ptext55 2F86                       __ptext39 35B4  
                     __ptext56 0000                       __ptext48 14D2                       __ptext49 2586  
                     _dispatch 3BD0                       _get_time 3BAA                       _countRB0 0038  
                     _countRA5 0040           fp__printTempAndHumid 0000                  __size_of_main 0128  
                  _ready_queue 0100                   ??_removeTask 0001                       getByte@i 0063  
                     _num_task 00C4                       _stateRB0 00C1                       int$flags 004D  
                     _stateRA5 00C2                     _LCDPutChar 3876                     _LCDPutInst 38B8  
        __end_of_SendByteBBSPI 361E              i2___awmod@divisor 0003              i2___awmod@counter 0005  
                   _INTCONbits 000FF2             __end_of_removeTask 2722               ??_handleListHead 000F  
        __size_of_printTime_ms 00BC         __size_of_LCDMoveCursor 003E            __end_of_start_timer 3416  
                     intlevel2 0000                  ?_handleButton 006E            _remove_task_counter 004A  
             ___lldiv@dividend 0060        __end_of_WritePort_BBSPI 3B0E                readDHT@checkSum 0065  
                 _prev_time_ms 0044                  ?_getSizeQueue 0001        __size_of_pin_initialize 0024  
                 _printTime_ms 2E18                _queueInitialize 3530        WritePort_BBSPI@port_add 0064  
             ___lldiv@quotient 0068     __size_of_system_initialize 001E                 _humidity_dht11 00BD  
                ___fladd@signs 0093                 ??_handleButton 0070                 _humidity_value 00C7  
      __size_of_register_timer 003A                    dequeue@temp 006F                   ___fladd@aexp 0094  
                 ___fladd@bexp 0095                  ?_isEmptyQueue 0001               queueInitialize@i 0066  
               readDHT@timeOut 0066                   ?_isEmptyList 0001                   ?_isFullQueue 0001  
