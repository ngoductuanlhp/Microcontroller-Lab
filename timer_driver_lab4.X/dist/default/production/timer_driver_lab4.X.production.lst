

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Oct 06 18:41:01 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50  0000                     
    51                           ; Version 2.10
    52                           ; Generated 31/07/2019 GMT
    53                           ; 
    54                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F8722 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     
    86                           	psect	idataCOMRAM
    87  0014B6                     __pidataCOMRAM:
    88                           	opt callstack 0
    89                           
    90                           ;initializer for _rear
    91  0014B6  FFFF               	dw	65535
    92                           
    93                           ;initializer for _front
    94  0014B8  FFFF               	dw	65535
    95  0000                     _TMR1L	set	4046
    96  0000                     _TMR1H	set	4047
    97  0000                     _T1CON	set	4045
    98  0000                     _PIR1bits	set	3998
    99  0000                     _PIE1bits	set	3997
   100  0000                     _TMR0L	set	4054
   101  0000                     _T0CON	set	4053
   102  0000                     _INTCONbits	set	4082
   103  0000                     _TRISD	set	3989
   104  0000                     _LATD	set	3980
   105  0000                     _ADCON1	set	4033
   106  0000                     _TRISC	set	3988
   107  0000                     _LATC	set	3979
   108  0000                     _OSCCON	set	4051
   109  0000                     _LATDbits	set	3980
   110                           
   111                           ; #config settings
   112  0000                     
   113                           	psect	cinit
   114  0011DC                     __pcinit:
   115                           	opt callstack 0
   116  0011DC                     start_initialization:
   117                           	opt callstack 0
   118  0011DC                     __initialization:
   119                           	opt callstack 0
   120                           
   121                           ; Initialize objects allocated to COMRAM (4 bytes)
   122                           ; load TBLPTR registers with __pidataCOMRAM
   123  0011DC  0EB6               	movlw	low __pidataCOMRAM
   124  0011DE  6EF6               	movwf	tblptrl,c
   125  0011E0  0E14               	movlw	high __pidataCOMRAM
   126  0011E2  6EF7               	movwf	tblptrh,c
   127  0011E4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   128  0011E6  6EF8               	movwf	tblptru,c
   129  0011E8  EE00  F041         	lfsr	0,__pdataCOMRAM
   130  0011EC  EE10 F004          	lfsr	1,4
   131  0011F0                     copy_data0:
   132  0011F0  0009               	tblrd		*+
   133  0011F2  CFF5 FFEE          	movff	tablat,postinc0
   134  0011F6  50E5               	movf	postdec1,w,c
   135  0011F8  50E1               	movf	fsr1l,w,c
   136  0011FA  E1FA               	bnz	copy_data0
   137                           
   138                           ; Clear objects allocated to BIGRAM (300 bytes)
   139  0011FC  EE00  F0F8         	lfsr	0,__pbssBIGRAM
   140  001200  EE11 F02C          	lfsr	1,300
   141  001204                     clear_0:
   142  001204  6AEE               	clrf	postinc0,c
   143  001206  50E5               	movf	postdec1,w,c
   144  001208  50E1               	movf	fsr1l,w,c
   145  00120A  E1FC               	bnz	clear_0
   146  00120C  50E2               	movf	fsr1h,w,c
   147  00120E  E1FA               	bnz	clear_0
   148                           
   149                           ; Clear objects allocated to BANK0 (107 bytes)
   150  001210  EE00  F060         	lfsr	0,__pbssBANK0
   151  001214  0E6B               	movlw	107
   152  001216                     clear_1:
   153  001216  6AEE               	clrf	postinc0,c
   154  001218  06E8               	decf	wreg,f,c
   155  00121A  E1FD               	bnz	clear_1
   156                           
   157                           ; Clear objects allocated to COMRAM (19 bytes)
   158  00121C  EE00  F02E         	lfsr	0,__pbssCOMRAM
   159  001220  0E13               	movlw	19
   160  001222                     clear_2:
   161  001222  6AEE               	clrf	postinc0,c
   162  001224  06E8               	decf	wreg,f,c
   163  001226  E1FD               	bnz	clear_2
   164  001228                     end_of_initialization:
   165                           	opt callstack 0
   166  001228                     __end_of__initialization:
   167                           	opt callstack 0
   168  001228  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   169  00122A  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   170  00122C  0100               	movlb	0
   171  00122E  EF85  F005         	goto	_main	;jump to C main() function
   172                           
   173                           	psect	bssCOMRAM
   174  00002E                     __pbssCOMRAM:
   175                           	opt callstack 0
   176  00002E                     _LED_state:
   177                           	opt callstack 0
   178  00002E                     	ds	16
   179  00003E                     _count:
   180                           	opt callstack 0
   181  00003E                     	ds	2
   182  000040                     _value:
   183                           	opt callstack 0
   184  000040                     	ds	1
   185                           
   186                           	psect	dataCOMRAM
   187  000041                     __pdataCOMRAM:
   188                           	opt callstack 0
   189  000041                     _rear:
   190                           	opt callstack 0
   191  000041                     	ds	2
   192  000043                     _front:
   193                           	opt callstack 0
   194  000043                     	ds	2
   195                           
   196                           	psect	bssBANK0
   197  000060                     __pbssBANK0:
   198                           	opt callstack 0
   199  000060                     _ready_queue:
   200                           	opt callstack 0
   201  000060                     	ds	100
   202  0000C4                     _time_ms:
   203                           	opt callstack 0
   204  0000C4                     	ds	4
   205  0000C8                     _head:
   206                           	opt callstack 0
   207  0000C8                     	ds	2
   208  0000CA                     _num_task:
   209                           	opt callstack 0
   210  0000CA                     	ds	1
   211                           
   212                           	psect	bssBIGRAM
   213  0000F8                     __pbssBIGRAM:
   214                           	opt callstack 0
   215  0000F8                     _task_list:
   216                           	opt callstack 0
   217  0000F8                     	ds	300
   218                           
   219                           	psect	cstackBANK0
   220  0000CB                     __pcstackBANK0:
   221                           	opt callstack 0
   222  0000CB                     ?_blink_LED5:
   223                           	opt callstack 0
   224  0000CB                     ?___wmul:
   225                           	opt callstack 0
   226  0000CB                     ?___awmod:
   227                           	opt callstack 0
   228  0000CB                     ___wmul@multiplier:
   229                           	opt callstack 0
   230  0000CB                     ___awmod@dividend:
   231                           	opt callstack 0
   232                           
   233                           ; 2 bytes @ 0x0
   234  0000CB                     	ds	2
   235  0000CD                     ___wmul@multiplicand:
   236                           	opt callstack 0
   237  0000CD                     ___awmod@divisor:
   238                           	opt callstack 0
   239                           
   240                           ; 2 bytes @ 0x2
   241  0000CD                     	ds	2
   242  0000CF                     ___awmod@counter:
   243                           	opt callstack 0
   244  0000CF                     ___wmul@product:
   245                           	opt callstack 0
   246                           
   247                           ; 2 bytes @ 0x4
   248  0000CF                     	ds	1
   249  0000D0                     ___awmod@sign:
   250                           	opt callstack 0
   251                           
   252                           ; 1 bytes @ 0x5
   253  0000D0                     	ds	1
   254  0000D1                     ??_getSizeQueue:
   255  0000D1                     initializeTaskList@i:
   256                           	opt callstack 0
   257  0000D1                     addTask@period:
   258                           	opt callstack 0
   259                           
   260                           ; 4 bytes @ 0x6
   261  0000D1                     	ds	2
   262  0000D3                     ??_start_timer:
   263  0000D3                     ?_dequeue:
   264                           	opt callstack 0
   265                           
   266                           ; 5 bytes @ 0x8
   267  0000D3                     	ds	2
   268  0000D5                     start_timer@timer_vaddr:
   269                           	opt callstack 0
   270  0000D5                     addTask@delay:
   271                           	opt callstack 0
   272                           
   273                           ; 4 bytes @ 0xA
   274  0000D5                     	ds	1
   275  0000D6                     
   276                           ; 1 bytes @ 0xB
   277  0000D6                     	ds	2
   278  0000D8                     dequeue@idx:
   279                           	opt callstack 0
   280                           
   281                           ; 2 bytes @ 0xD
   282  0000D8                     	ds	1
   283  0000D9                     addTask@ptr:
   284                           	opt callstack 0
   285                           
   286                           ; 3 bytes @ 0xE
   287  0000D9                     	ds	1
   288  0000DA                     dequeue@temp:
   289                           	opt callstack 0
   290                           
   291                           ; 5 bytes @ 0xF
   292  0000DA                     	ds	2
   293  0000DC                     addTask@data:
   294                           	opt callstack 0
   295                           
   296                           ; 2 bytes @ 0x11
   297  0000DC                     	ds	2
   298  0000DE                     ??_addTask:
   299                           
   300                           ; 1 bytes @ 0x13
   301  0000DE                     	ds	1
   302  0000DF                     selectReadyTask@node:
   303                           	opt callstack 0
   304                           
   305                           ; 5 bytes @ 0x14
   306  0000DF                     	ds	5
   307  0000E4                     
   308                           ; 1 bytes @ 0x19
   309  0000E4                     	ds	2
   310  0000E6                     addTask@prev:
   311                           	opt callstack 0
   312                           
   313                           ; 2 bytes @ 0x1B
   314  0000E6                     	ds	2
   315  0000E8                     addTask@cur:
   316                           	opt callstack 0
   317                           
   318                           ; 2 bytes @ 0x1D
   319  0000E8                     	ds	2
   320  0000EA                     addTask@idx:
   321                           	opt callstack 0
   322                           
   323                           ; 1 bytes @ 0x1F
   324  0000EA                     	ds	1
   325  0000EB                     register_timer@period:
   326                           	opt callstack 0
   327                           
   328                           ; 4 bytes @ 0x20
   329  0000EB                     	ds	4
   330  0000EF                     register_timer@delay:
   331                           	opt callstack 0
   332                           
   333                           ; 4 bytes @ 0x24
   334  0000EF                     	ds	4
   335  0000F3                     register_timer@callback:
   336                           	opt callstack 0
   337                           
   338                           ; 3 bytes @ 0x28
   339  0000F3                     	ds	3
   340  0000F6                     register_timer@data:
   341                           	opt callstack 0
   342                           
   343                           ; 2 bytes @ 0x2B
   344  0000F6                     	ds	2
   345  0000F8                     
   346                           ; 1 bytes @ 0x2D
   347                           
   348                           	psect	cstackCOMRAM
   349  000001                     __pcstackCOMRAM:
   350                           	opt callstack 0
   351  000001                     ??_removeTask:
   352  000001                     ?i2___wmul:
   353                           	opt callstack 0
   354  000001                     ?i2___awmod:
   355                           	opt callstack 0
   356  000001                     i2___wmul@multiplier:
   357                           	opt callstack 0
   358  000001                     i2___awmod@dividend:
   359                           	opt callstack 0
   360                           
   361                           ; 2 bytes @ 0x0
   362  000001                     	ds	2
   363  000003                     i2___wmul@multiplicand:
   364                           	opt callstack 0
   365  000003                     i2___awmod@divisor:
   366                           	opt callstack 0
   367                           
   368                           ; 2 bytes @ 0x2
   369  000003                     	ds	2
   370  000005                     removeTask@pos:
   371                           	opt callstack 0
   372  000005                     i2___awmod@counter:
   373                           	opt callstack 0
   374  000005                     i2___wmul@product:
   375                           	opt callstack 0
   376                           
   377                           ; 2 bytes @ 0x4
   378  000005                     	ds	1
   379  000006                     removeTask@idx:
   380                           	opt callstack 0
   381  000006                     i2___awmod@sign:
   382                           	opt callstack 0
   383                           
   384                           ; 1 bytes @ 0x5
   385  000006                     	ds	1
   386  000007                     ??i2_getSizeQueue:
   387                           
   388                           ; 1 bytes @ 0x6
   389  000007                     	ds	2
   390  000009                     ??_isFullQueue:
   391                           
   392                           ; 1 bytes @ 0x8
   393  000009                     	ds	1
   394  00000A                     enqueue@ptr:
   395                           	opt callstack 0
   396                           
   397                           ; 3 bytes @ 0x9
   398  00000A                     	ds	3
   399  00000D                     enqueue@data:
   400                           	opt callstack 0
   401                           
   402                           ; 2 bytes @ 0xC
   403  00000D                     	ds	2
   404  00000F                     ??_handleListHead:
   405                           
   406                           ; 1 bytes @ 0xE
   407  00000F                     	ds	12
   408  00001B                     _handleListHead$1173:
   409                           	opt callstack 0
   410                           
   411                           ; 3 bytes @ 0x1A
   412  00001B                     	ds	3
   413  00001E                     _handleListHead$1174:
   414                           	opt callstack 0
   415                           
   416                           ; 2 bytes @ 0x1D
   417  00001E                     	ds	2
   418  000020                     _handleListHead$1175:
   419                           	opt callstack 0
   420                           
   421                           ; 2 bytes @ 0x1F
   422  000020                     	ds	2
   423  000022                     handleListHead@prev:
   424                           	opt callstack 0
   425                           
   426                           ; 2 bytes @ 0x21
   427  000022                     	ds	2
   428  000024                     handleListHead@cur:
   429                           	opt callstack 0
   430                           
   431                           ; 2 bytes @ 0x23
   432  000024                     	ds	2
   433  000026                     handleListHead@pos:
   434                           	opt callstack 0
   435                           
   436                           ; 2 bytes @ 0x25
   437  000026                     	ds	2
   438  000028                     ??_timer_interrupt:
   439                           
   440                           ; 1 bytes @ 0x27
   441  000028                     	ds	6
   442                           
   443 ;;
   444 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   445 ;;
   446 ;; *************** function _main *****************
   447 ;; Defined at:
   448 ;;		line 51 in file "main.c"
   449 ;; Parameters:    Size  Location     Type
   450 ;;		None
   451 ;; Auto vars:     Size  Location     Type
   452 ;;  idx5            2    0        int 
   453 ;;  idx4            2    0        int 
   454 ;;  idx3            2    0        int 
   455 ;;  idx2            2    0        int 
   456 ;;  idx1            2    0        int 
   457 ;;  idx0            2    0        int 
   458 ;; Return value:  Size  Location     Type
   459 ;;                  1    wreg      void 
   460 ;; Registers used:
   461 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
   462 ;; Tracked objects:
   463 ;;		On entry : 0/0
   464 ;;		On exit  : 0/0
   465 ;;		Unchanged: 0/0
   466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   468 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   470 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   471 ;;Total ram usage:       12 bytes
   472 ;; Hardware stack levels required when called:   12
   473 ;; This function calls:
   474 ;;		_dispatch
   475 ;;		_register_timer
   476 ;;		_system_initialize
   477 ;; This function is called by:
   478 ;;		Startup code after reset
   479 ;; This function uses a non-reentrant model
   480 ;;
   481                           
   482                           	psect	text0
   483  000B0A                     __ptext0:
   484                           	opt callstack 0
   485  000B0A                     _main:
   486                           	opt callstack 19
   487  000B0A                     
   488                           ;main.c: 52:     system_initialize();
   489  000B0A  EC21  F00A         	call	_system_initialize	;wreg free
   490  000B0E  0EE8               	movlw	232
   491  000B10  0100               	movlb	0	; () banked
   492  000B12  6FEB               	movwf	register_timer@period& (0+255),b
   493  000B14  0E03               	movlw	3
   494  000B16  6FEC               	movwf	(register_timer@period+1)& (0+255),b
   495  000B18  0E00               	movlw	0
   496  000B1A  6FED               	movwf	(register_timer@period+2)& (0+255),b
   497  000B1C  0E00               	movlw	0
   498  000B1E  6FEE               	movwf	(register_timer@period+3)& (0+255),b
   499  000B20  0E00               	movlw	0
   500  000B22  6FEF               	movwf	register_timer@delay& (0+255),b
   501  000B24  0E00               	movlw	0
   502  000B26  6FF0               	movwf	(register_timer@delay+1)& (0+255),b
   503  000B28  0E00               	movlw	0
   504  000B2A  6FF1               	movwf	(register_timer@delay+2)& (0+255),b
   505  000B2C  0E00               	movlw	0
   506  000B2E  6FF2               	movwf	(register_timer@delay+3)& (0+255),b
   507  000B30  0EB4               	movlw	low _blink_LED0
   508  000B32  6FF3               	movwf	register_timer@callback& (0+255),b
   509  000B34  0E13               	movlw	high _blink_LED0
   510  000B36  6FF4               	movwf	(register_timer@callback+1)& (0+255),b
   511  000B38  0E00               	movlw	low (_blink_LED0 shr (0+16))
   512  000B3A  6FF5               	movwf	(register_timer@callback+2)& (0+255),b
   513  000B3C  0E00               	movlw	0
   514  000B3E  6FF6               	movwf	register_timer@data& (0+255),b
   515  000B40  0E00               	movlw	0
   516  000B42  6FF7               	movwf	(register_timer@data+1)& (0+255),b
   517  000B44  EC19  F009         	call	_register_timer	;wreg free
   518  000B48  0EE8               	movlw	232
   519  000B4A  0100               	movlb	0	; () banked
   520  000B4C  6FEB               	movwf	register_timer@period& (0+255),b
   521  000B4E  0E03               	movlw	3
   522  000B50  6FEC               	movwf	(register_timer@period+1)& (0+255),b
   523  000B52  0E00               	movlw	0
   524  000B54  6FED               	movwf	(register_timer@period+2)& (0+255),b
   525  000B56  0E00               	movlw	0
   526  000B58  6FEE               	movwf	(register_timer@period+3)& (0+255),b
   527  000B5A  0EC8               	movlw	200
   528  000B5C  6FEF               	movwf	register_timer@delay& (0+255),b
   529  000B5E  0E00               	movlw	0
   530  000B60  6FF0               	movwf	(register_timer@delay+1)& (0+255),b
   531  000B62  0E00               	movlw	0
   532  000B64  6FF1               	movwf	(register_timer@delay+2)& (0+255),b
   533  000B66  0E00               	movlw	0
   534  000B68  6FF2               	movwf	(register_timer@delay+3)& (0+255),b
   535  000B6A  0E8E               	movlw	low _blink_LED1
   536  000B6C  6FF3               	movwf	register_timer@callback& (0+255),b
   537  000B6E  0E13               	movlw	high _blink_LED1
   538  000B70  6FF4               	movwf	(register_timer@callback+1)& (0+255),b
   539  000B72  0E00               	movlw	low (_blink_LED1 shr (0+16))
   540  000B74  6FF5               	movwf	(register_timer@callback+2)& (0+255),b
   541  000B76  0E00               	movlw	0
   542  000B78  6FF6               	movwf	register_timer@data& (0+255),b
   543  000B7A  0E00               	movlw	0
   544  000B7C  6FF7               	movwf	(register_timer@data+1)& (0+255),b
   545  000B7E  EC19  F009         	call	_register_timer	;wreg free
   546  000B82  0EB8               	movlw	184
   547  000B84  0100               	movlb	0	; () banked
   548  000B86  6FEB               	movwf	register_timer@period& (0+255),b
   549  000B88  0E0B               	movlw	11
   550  000B8A  6FEC               	movwf	(register_timer@period+1)& (0+255),b
   551  000B8C  0E00               	movlw	0
   552  000B8E  6FED               	movwf	(register_timer@period+2)& (0+255),b
   553  000B90  0E00               	movlw	0
   554  000B92  6FEE               	movwf	(register_timer@period+3)& (0+255),b
   555  000B94  0E90               	movlw	144
   556  000B96  6FEF               	movwf	register_timer@delay& (0+255),b
   557  000B98  0E01               	movlw	1
   558  000B9A  6FF0               	movwf	(register_timer@delay+1)& (0+255),b
   559  000B9C  0E00               	movlw	0
   560  000B9E  6FF1               	movwf	(register_timer@delay+2)& (0+255),b
   561  000BA0  0E00               	movlw	0
   562  000BA2  6FF2               	movwf	(register_timer@delay+3)& (0+255),b
   563  000BA4  0E68               	movlw	low _blink_LED2
   564  000BA6  6FF3               	movwf	register_timer@callback& (0+255),b
   565  000BA8  0E13               	movlw	high _blink_LED2
   566  000BAA  6FF4               	movwf	(register_timer@callback+1)& (0+255),b
   567  000BAC  0E00               	movlw	low (_blink_LED2 shr (0+16))
   568  000BAE  6FF5               	movwf	(register_timer@callback+2)& (0+255),b
   569  000BB0  0E00               	movlw	0
   570  000BB2  6FF6               	movwf	register_timer@data& (0+255),b
   571  000BB4  0E00               	movlw	0
   572  000BB6  6FF7               	movwf	(register_timer@data+1)& (0+255),b
   573  000BB8  EC19  F009         	call	_register_timer	;wreg free
   574  000BBC  0E28               	movlw	40
   575  000BBE  0100               	movlb	0	; () banked
   576  000BC0  6FEB               	movwf	register_timer@period& (0+255),b
   577  000BC2  0E23               	movlw	35
   578  000BC4  6FEC               	movwf	(register_timer@period+1)& (0+255),b
   579  000BC6  0E00               	movlw	0
   580  000BC8  6FED               	movwf	(register_timer@period+2)& (0+255),b
   581  000BCA  0E00               	movlw	0
   582  000BCC  6FEE               	movwf	(register_timer@period+3)& (0+255),b
   583  000BCE  0E90               	movlw	144
   584  000BD0  6FEF               	movwf	register_timer@delay& (0+255),b
   585  000BD2  0E01               	movlw	1
   586  000BD4  6FF0               	movwf	(register_timer@delay+1)& (0+255),b
   587  000BD6  0E00               	movlw	0
   588  000BD8  6FF1               	movwf	(register_timer@delay+2)& (0+255),b
   589  000BDA  0E00               	movlw	0
   590  000BDC  6FF2               	movwf	(register_timer@delay+3)& (0+255),b
   591  000BDE  0E42               	movlw	low _blink_LED3
   592  000BE0  6FF3               	movwf	register_timer@callback& (0+255),b
   593  000BE2  0E13               	movlw	high _blink_LED3
   594  000BE4  6FF4               	movwf	(register_timer@callback+1)& (0+255),b
   595  000BE6  0E00               	movlw	low (_blink_LED3 shr (0+16))
   596  000BE8  6FF5               	movwf	(register_timer@callback+2)& (0+255),b
   597  000BEA  0E00               	movlw	0
   598  000BEC  6FF6               	movwf	register_timer@data& (0+255),b
   599  000BEE  0E00               	movlw	0
   600  000BF0  6FF7               	movwf	(register_timer@data+1)& (0+255),b
   601  000BF2  EC19  F009         	call	_register_timer	;wreg free
   602  000BF6  0E98               	movlw	152
   603  000BF8  0100               	movlb	0	; () banked
   604  000BFA  6FEB               	movwf	register_timer@period& (0+255),b
   605  000BFC  0E3A               	movlw	58
   606  000BFE  6FEC               	movwf	(register_timer@period+1)& (0+255),b
   607  000C00  0E00               	movlw	0
   608  000C02  6FED               	movwf	(register_timer@period+2)& (0+255),b
   609  000C04  0E00               	movlw	0
   610  000C06  6FEE               	movwf	(register_timer@period+3)& (0+255),b
   611  000C08  0EC8               	movlw	200
   612  000C0A  6FEF               	movwf	register_timer@delay& (0+255),b
   613  000C0C  0E00               	movlw	0
   614  000C0E  6FF0               	movwf	(register_timer@delay+1)& (0+255),b
   615  000C10  0E00               	movlw	0
   616  000C12  6FF1               	movwf	(register_timer@delay+2)& (0+255),b
   617  000C14  0E00               	movlw	0
   618  000C16  6FF2               	movwf	(register_timer@delay+3)& (0+255),b
   619  000C18  0E1C               	movlw	low _blink_LED4
   620  000C1A  6FF3               	movwf	register_timer@callback& (0+255),b
   621  000C1C  0E13               	movlw	high _blink_LED4
   622  000C1E  6FF4               	movwf	(register_timer@callback+1)& (0+255),b
   623  000C20  0E00               	movlw	low (_blink_LED4 shr (0+16))
   624  000C22  6FF5               	movwf	(register_timer@callback+2)& (0+255),b
   625  000C24  0E00               	movlw	0
   626  000C26  6FF6               	movwf	register_timer@data& (0+255),b
   627  000C28  0E00               	movlw	0
   628  000C2A  6FF7               	movwf	(register_timer@data+1)& (0+255),b
   629  000C2C  EC19  F009         	call	_register_timer	;wreg free
   630  000C30  0E64               	movlw	100
   631  000C32  0100               	movlb	0	; () banked
   632  000C34  6FEB               	movwf	register_timer@period& (0+255),b
   633  000C36  0E00               	movlw	0
   634  000C38  6FEC               	movwf	(register_timer@period+1)& (0+255),b
   635  000C3A  0E00               	movlw	0
   636  000C3C  6FED               	movwf	(register_timer@period+2)& (0+255),b
   637  000C3E  0E00               	movlw	0
   638  000C40  6FEE               	movwf	(register_timer@period+3)& (0+255),b
   639  000C42  0E10               	movlw	16
   640  000C44  6FEF               	movwf	register_timer@delay& (0+255),b
   641  000C46  0E27               	movlw	39
   642  000C48  6FF0               	movwf	(register_timer@delay+1)& (0+255),b
   643  000C4A  0E00               	movlw	0
   644  000C4C  6FF1               	movwf	(register_timer@delay+2)& (0+255),b
   645  000C4E  0E00               	movlw	0
   646  000C50  6FF2               	movwf	(register_timer@delay+3)& (0+255),b
   647  000C52  0EDA               	movlw	low _blink_LED5
   648  000C54  6FF3               	movwf	register_timer@callback& (0+255),b
   649  000C56  0E13               	movlw	high _blink_LED5
   650  000C58  6FF4               	movwf	(register_timer@callback+1)& (0+255),b
   651  000C5A  0E00               	movlw	low (_blink_LED5 shr (0+16))
   652  000C5C  6FF5               	movwf	(register_timer@callback+2)& (0+255),b
   653  000C5E  0E00               	movlw	0
   654  000C60  6FF6               	movwf	register_timer@data& (0+255),b
   655  000C62  0E00               	movlw	0
   656  000C64  6FF7               	movwf	(register_timer@data+1)& (0+255),b
   657  000C66  EC19  F009         	call	_register_timer	;wreg free
   658  000C6A                     l2103:
   659                           
   660                           ;main.c: 60:         dispatch();
   661  000C6A  EC58  F00A         	call	_dispatch	;wreg free
   662  000C6E  EF35  F006         	goto	l2103
   663  000C72  EF07  F000         	goto	start
   664  000C76                     __end_of_main:
   665                           	opt callstack 0
   666                           
   667 ;; *************** function _system_initialize *****************
   668 ;; Defined at:
   669 ;;		line 22 in file "mcc.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;		None
   672 ;; Auto vars:     Size  Location     Type
   673 ;;		None
   674 ;; Return value:  Size  Location     Type
   675 ;;                  1    wreg      void 
   676 ;; Registers used:
   677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   678 ;; Tracked objects:
   679 ;;		On entry : 0/0
   680 ;;		On exit  : 0/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   687 ;;Total ram usage:        0 bytes
   688 ;; Hardware stack levels used:    1
   689 ;; Hardware stack levels required when called:    9
   690 ;; This function calls:
   691 ;;		_interrupt_initialize
   692 ;;		_osc_initialize
   693 ;;		_pin_initialize
   694 ;;		_start_timer
   695 ;; This function is called by:
   696 ;;		_main
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700                           	psect	text1
   701  001442                     __ptext1:
   702                           	opt callstack 0
   703  001442                     _system_initialize:
   704                           	opt callstack 21
   705  001442                     
   706                           ;mcc.c: 23:     osc_initialize();
   707  001442  EC52  F00A         	call	_osc_initialize	;wreg free
   708                           
   709                           ;mcc.c: 24:     pin_initialize();
   710  001446  EC47  F00A         	call	_pin_initialize	;wreg free
   711  00144A                     
   712                           ;mcc.c: 25:     interrupt_initialize();
   713  00144A  EC55  F00A         	call	_interrupt_initialize	;wreg free
   714  00144E                     
   715                           ;mcc.c: 26:     start_timer(0);
   716  00144E  0E00               	movlw	0
   717  001450  EC71  F008         	call	_start_timer
   718  001454                     
   719                           ;mcc.c: 27:     start_timer(1);
   720  001454  0E01               	movlw	1
   721  001456  EC71  F008         	call	_start_timer
   722  00145A  0012               	return		;funcret
   723  00145C                     __end_of_system_initialize:
   724                           	opt callstack 0
   725                           
   726 ;; *************** function _start_timer *****************
   727 ;; Defined at:
   728 ;;		line 5 in file "clock.c"
   729 ;; Parameters:    Size  Location     Type
   730 ;;  timer_vaddr     1    wreg     unsigned char 
   731 ;; Auto vars:     Size  Location     Type
   732 ;;  timer_vaddr     1   10[BANK0 ] unsigned char 
   733 ;; Return value:  Size  Location     Type
   734 ;;                  2   68[None  ] int 
   735 ;; Registers used:
   736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   737 ;; Tracked objects:
   738 ;;		On entry : 0/0
   739 ;;		On exit  : 0/0
   740 ;;		Unchanged: 0/0
   741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   743 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   744 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   745 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   746 ;;Total ram usage:        3 bytes
   747 ;; Hardware stack levels used:    1
   748 ;; Hardware stack levels required when called:    8
   749 ;; This function calls:
   750 ;;		_initializeTaskList
   751 ;; This function is called by:
   752 ;;		_system_initialize
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756                           	psect	text2
   757  0010E2                     __ptext2:
   758                           	opt callstack 0
   759  0010E2                     _start_timer:
   760                           	opt callstack 21
   761                           
   762                           ;incstack = 0
   763                           ;start_timer@timer_vaddr stored from wreg
   764  0010E2  0100               	movlb	0	; () banked
   765  0010E4  6FD5               	movwf	start_timer@timer_vaddr& (0+255),b
   766  0010E6                     
   767                           ;clock.c: 6:     if(timer_vaddr > 4)
   768  0010E6  0E04               	movlw	4
   769  0010E8  0100               	movlb	0	; () banked
   770  0010EA  65D5               	cpfsgt	start_timer@timer_vaddr& (0+255),b
   771  0010EC  EF7A  F008         	goto	u1921
   772  0010F0  EF7C  F008         	goto	u1920
   773  0010F4                     u1921:
   774  0010F4  EF9A  F008         	goto	l1991
   775  0010F8                     u1920:
   776  0010F8  EFBB  F008         	goto	l259
   777  0010FC                     l261:
   778                           
   779                           ; BSR set to: 0
   780                           ;clock.c: 10:             INTCONbits.TMR0IE = 1;
   781  0010FC  8AF2               	bsf	242,5,c	;volatile
   782                           
   783                           ;clock.c: 11:             INTCONbits.TMR0IF = 0;
   784  0010FE  94F2               	bcf	242,2,c	;volatile
   785  001100                     
   786                           ; BSR set to: 0
   787                           ;clock.c: 12:             T0CON = 0xC3;
   788  001100  0EC3               	movlw	195
   789  001102  6ED5               	movwf	213,c	;volatile
   790                           
   791                           ;clock.c: 13:             TMR0L = 131;
   792  001104  0E83               	movlw	131
   793  001106  6ED6               	movwf	214,c	;volatile
   794                           
   795                           ;clock.c: 14:             time_ms = 0;
   796  001108  0E00               	movlw	0
   797  00110A  6FC4               	movwf	_time_ms& (0+255),b
   798  00110C  0E00               	movlw	0
   799  00110E  6FC5               	movwf	(_time_ms+1)& (0+255),b
   800  001110  0E00               	movlw	0
   801  001112  6FC6               	movwf	(_time_ms+2)& (0+255),b
   802  001114  0E00               	movlw	0
   803  001116  6FC7               	movwf	(_time_ms+3)& (0+255),b
   804                           
   805                           ;clock.c: 15:             break;
   806  001118  EFBB  F008         	goto	l259
   807  00111C                     l1977:
   808                           
   809                           ; BSR set to: 0
   810                           ;clock.c: 17:             initializeTaskList();
   811  00111C  EC3B  F006         	call	_initializeTaskList	;wreg free
   812  001120                     
   813                           ;clock.c: 18:             PIE1bits.TMR1IE = 1;
   814  001120  809D               	bsf	157,0,c	;volatile
   815  001122                     
   816                           ;clock.c: 19:             PIR1bits.TMR1IF = 0;
   817  001122  909E               	bcf	158,0,c	;volatile
   818  001124                     
   819                           ;clock.c: 20:             T1CON = 0b10000001;
   820  001124  0E81               	movlw	129
   821  001126  6ECD               	movwf	205,c	;volatile
   822  001128                     
   823                           ;clock.c: 21:             TMR1H = 0xB1;
   824  001128  0EB1               	movlw	177
   825  00112A  6ECF               	movwf	207,c	;volatile
   826  00112C                     
   827                           ;clock.c: 22:             TMR1L = 0xE0;
   828  00112C  0EE0               	movlw	224
   829  00112E  6ECE               	movwf	206,c	;volatile
   830                           
   831                           ;clock.c: 23:             break;
   832  001130  EFBB  F008         	goto	l259
   833  001134                     l1991:
   834                           
   835                           ; BSR set to: 0
   836  001134  51D5               	movf	start_timer@timer_vaddr& (0+255),w,b
   837  001136  6FD3               	movwf	??_start_timer& (0+255),b
   838  001138  6BD4               	clrf	(??_start_timer+1)& (0+255),b
   839                           
   840                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   841                           ; Switch size 1, requested type "simple"
   842                           ; Number of cases is 1, Range of values is 0 to 0
   843                           ; switch strategies available:
   844                           ; Name         Instructions Cycles
   845                           ; simple_byte            4     3 (average)
   846                           ;	Chosen strategy is simple_byte
   847  00113A  51D4               	movf	(??_start_timer+1)& (0+255),w,b
   848  00113C  0A00               	xorlw	0	; case 0
   849  00113E  B4D8               	btfsc	status,2,c
   850  001140  EFA4  F008         	goto	l2135
   851  001144  EFBB  F008         	goto	l259
   852  001148                     l2135:
   853                           
   854                           ; BSR set to: 0
   855                           ; Switch size 1, requested type "simple"
   856                           ; Number of cases is 5, Range of values is 0 to 4
   857                           ; switch strategies available:
   858                           ; Name         Instructions Cycles
   859                           ; simple_byte           16     9 (average)
   860                           ;	Chosen strategy is simple_byte
   861  001148  51D3               	movf	??_start_timer& (0+255),w,b
   862  00114A  0A00               	xorlw	0	; case 0
   863  00114C  B4D8               	btfsc	status,2,c
   864  00114E  EF7E  F008         	goto	l261
   865  001152  0A01               	xorlw	1	; case 1
   866  001154  B4D8               	btfsc	status,2,c
   867  001156  EF8E  F008         	goto	l1977
   868  00115A  0A03               	xorlw	3	; case 2
   869  00115C  B4D8               	btfsc	status,2,c
   870  00115E  EFBB  F008         	goto	l259
   871  001162  0A01               	xorlw	1	; case 3
   872  001164  B4D8               	btfsc	status,2,c
   873  001166  EFBB  F008         	goto	l259
   874  00116A  0A07               	xorlw	7	; case 4
   875  00116C  B4D8               	btfsc	status,2,c
   876  00116E  EFBB  F008         	goto	l259
   877  001172  EFBB  F008         	goto	l259
   878  001176                     l259:
   879  001176  0012               	return		;funcret
   880  001178                     __end_of_start_timer:
   881                           	opt callstack 0
   882                           
   883 ;; *************** function _initializeTaskList *****************
   884 ;; Defined at:
   885 ;;		line 11 in file "task.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;		None
   888 ;; Auto vars:     Size  Location     Type
   889 ;;  i               2    6[BANK0 ] int 
   890 ;; Return value:  Size  Location     Type
   891 ;;                  1    wreg      void 
   892 ;; Registers used:
   893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   900 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   902 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   903 ;;Total ram usage:        2 bytes
   904 ;; Hardware stack levels used:    1
   905 ;; Hardware stack levels required when called:    7
   906 ;; This function calls:
   907 ;;		___wmul
   908 ;; This function is called by:
   909 ;;		_start_timer
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913                           	psect	text3
   914  000C76                     __ptext3:
   915                           	opt callstack 0
   916  000C76                     _initializeTaskList:
   917                           	opt callstack 21
   918  000C76                     
   919                           ;task.c: 12:     for(int i = 0; i < 20; i++) {
   920  000C76  0E00               	movlw	0
   921  000C78  0100               	movlb	0	; () banked
   922  000C7A  6FD2               	movwf	(initializeTaskList@i+1)& (0+255),b
   923  000C7C  0E00               	movlw	0
   924  000C7E  6FD1               	movwf	initializeTaskList@i& (0+255),b
   925  000C80                     l1957:
   926                           
   927                           ; BSR set to: 0
   928                           ;task.c: 13:         task_list[i].delay_t = 0;
   929  000C80  C0D1  F0CB         	movff	initializeTaskList@i,___wmul@multiplier
   930  000C84  C0D2  F0CC         	movff	initializeTaskList@i+1,___wmul@multiplier+1
   931  000C88  0E00               	movlw	0
   932  000C8A  6FCE               	movwf	(___wmul@multiplicand+1)& (0+255),b
   933  000C8C  0E0F               	movlw	15
   934  000C8E  6FCD               	movwf	___wmul@multiplicand& (0+255),b
   935  000C90  EC66  F009         	call	___wmul	;wreg free
   936  000C94  0EF8               	movlw	low _task_list
   937  000C96  0100               	movlb	0	; () banked
   938  000C98  25CB               	addwf	?___wmul& (0+255),w,b
   939  000C9A  6ED9               	movwf	fsr2l,c
   940  000C9C  0E00               	movlw	high _task_list
   941  000C9E  21CC               	addwfc	(?___wmul+1)& (0+255),w,b
   942  000CA0  6EDA               	movwf	fsr2h,c
   943  000CA2  6ADE               	clrf	postinc2,c
   944  000CA4  6ADE               	clrf	postinc2,c
   945  000CA6  6ADE               	clrf	postinc2,c
   946  000CA8  6ADD               	clrf	postdec2,c
   947                           
   948                           ;task.c: 14:         task_list[i].period_t = 0;
   949  000CAA  C0D1  F0CB         	movff	initializeTaskList@i,___wmul@multiplier
   950  000CAE  C0D2  F0CC         	movff	initializeTaskList@i+1,___wmul@multiplier+1
   951  000CB2  0E00               	movlw	0
   952  000CB4  6FCE               	movwf	(___wmul@multiplicand+1)& (0+255),b
   953  000CB6  0E0F               	movlw	15
   954  000CB8  6FCD               	movwf	___wmul@multiplicand& (0+255),b
   955  000CBA  EC66  F009         	call	___wmul	;wreg free
   956  000CBE  0EFC               	movlw	low (_task_list+4)
   957  000CC0  0100               	movlb	0	; () banked
   958  000CC2  25CB               	addwf	?___wmul& (0+255),w,b
   959  000CC4  6ED9               	movwf	fsr2l,c
   960  000CC6  0E00               	movlw	high (_task_list+4)
   961  000CC8  21CC               	addwfc	(?___wmul+1)& (0+255),w,b
   962  000CCA  6EDA               	movwf	fsr2h,c
   963  000CCC  6ADE               	clrf	postinc2,c
   964  000CCE  6ADE               	clrf	postinc2,c
   965  000CD0  6ADE               	clrf	postinc2,c
   966  000CD2  6ADD               	clrf	postdec2,c
   967                           
   968                           ;task.c: 15:         task_list[i].func_ptr = ((void*)0);
   969  000CD4  C0D1  F0CB         	movff	initializeTaskList@i,___wmul@multiplier
   970  000CD8  C0D2  F0CC         	movff	initializeTaskList@i+1,___wmul@multiplier+1
   971  000CDC  0E00               	movlw	0
   972  000CDE  6FCE               	movwf	(___wmul@multiplicand+1)& (0+255),b
   973  000CE0  0E0F               	movlw	15
   974  000CE2  6FCD               	movwf	___wmul@multiplicand& (0+255),b
   975  000CE4  EC66  F009         	call	___wmul	;wreg free
   976  000CE8  0E00               	movlw	low (_task_list+8)
   977  000CEA  0100               	movlb	0	; () banked
   978  000CEC  25CB               	addwf	?___wmul& (0+255),w,b
   979  000CEE  6ED9               	movwf	fsr2l,c
   980  000CF0  0E01               	movlw	high (_task_list+8)
   981  000CF2  21CC               	addwfc	(?___wmul+1)& (0+255),w,b
   982  000CF4  6EDA               	movwf	fsr2h,c
   983  000CF6  0E00               	movlw	0
   984  000CF8  6EDE               	movwf	postinc2,c
   985  000CFA  0E00               	movlw	0
   986  000CFC  6EDE               	movwf	postinc2,c
   987  000CFE  0E00               	movlw	0
   988  000D00  6EDE               	movwf	postinc2,c
   989                           
   990                           ;task.c: 16:         task_list[i].data_p = ((void*)0);
   991  000D02  C0D1  F0CB         	movff	initializeTaskList@i,___wmul@multiplier
   992  000D06  C0D2  F0CC         	movff	initializeTaskList@i+1,___wmul@multiplier+1
   993  000D0A  0E00               	movlw	0
   994  000D0C  6FCE               	movwf	(___wmul@multiplicand+1)& (0+255),b
   995  000D0E  0E0F               	movlw	15
   996  000D10  6FCD               	movwf	___wmul@multiplicand& (0+255),b
   997  000D12  EC66  F009         	call	___wmul	;wreg free
   998  000D16  0E05               	movlw	low (_task_list+13)
   999  000D18  0100               	movlb	0	; () banked
  1000  000D1A  25CB               	addwf	?___wmul& (0+255),w,b
  1001  000D1C  6ED9               	movwf	fsr2l,c
  1002  000D1E  0E01               	movlw	high (_task_list+13)
  1003  000D20  21CC               	addwfc	(?___wmul+1)& (0+255),w,b
  1004  000D22  6EDA               	movwf	fsr2h,c
  1005  000D24  0E00               	movlw	0
  1006  000D26  6EDE               	movwf	postinc2,c
  1007  000D28  0E00               	movlw	0
  1008  000D2A  6EDD               	movwf	postdec2,c
  1009                           
  1010                           ;task.c: 17:         task_list[i].next = 105;
  1011  000D2C  C0D1  F0CB         	movff	initializeTaskList@i,___wmul@multiplier
  1012  000D30  C0D2  F0CC         	movff	initializeTaskList@i+1,___wmul@multiplier+1
  1013  000D34  0E00               	movlw	0
  1014  000D36  6FCE               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1015  000D38  0E0F               	movlw	15
  1016  000D3A  6FCD               	movwf	___wmul@multiplicand& (0+255),b
  1017  000D3C  EC66  F009         	call	___wmul	;wreg free
  1018  000D40  0E03               	movlw	low (_task_list+11)
  1019  000D42  0100               	movlb	0	; () banked
  1020  000D44  25CB               	addwf	?___wmul& (0+255),w,b
  1021  000D46  6ED9               	movwf	fsr2l,c
  1022  000D48  0E01               	movlw	high (_task_list+11)
  1023  000D4A  21CC               	addwfc	(?___wmul+1)& (0+255),w,b
  1024  000D4C  6EDA               	movwf	fsr2h,c
  1025  000D4E  0E69               	movlw	105
  1026  000D50  6EDE               	movwf	postinc2,c
  1027  000D52  0E00               	movlw	0
  1028  000D54  6EDD               	movwf	postdec2,c
  1029  000D56                     
  1030                           ; BSR set to: 0
  1031                           ;task.c: 18:     }
  1032  000D56  4BD1               	infsnz	initializeTaskList@i& (0+255),f,b
  1033  000D58  2BD2               	incf	(initializeTaskList@i+1)& (0+255),f,b
  1034  000D5A                     
  1035                           ; BSR set to: 0
  1036  000D5A  BFD2               	btfsc	(initializeTaskList@i+1)& (0+255),7,b
  1037  000D5C  EFB9  F006         	goto	u1911
  1038  000D60  51D2               	movf	(initializeTaskList@i+1)& (0+255),w,b
  1039  000D62  E109               	bnz	u1910
  1040  000D64  0E14               	movlw	20
  1041  000D66  5DD1               	subwf	initializeTaskList@i& (0+255),w,b
  1042  000D68  A0D8               	btfss	status,0,c
  1043  000D6A  EFB9  F006         	goto	u1911
  1044  000D6E  EFBB  F006         	goto	u1910
  1045  000D72                     u1911:
  1046  000D72  EF40  F006         	goto	l1957
  1047  000D76                     u1910:
  1048  000D76                     
  1049                           ; BSR set to: 0
  1050                           ;task.c: 19:     num_task = 0;
  1051  000D76  0E00               	movlw	0
  1052  000D78  6FCA               	movwf	_num_task& (0+255),b
  1053                           
  1054                           ;task.c: 20:     head = 105;
  1055  000D7A  0E00               	movlw	0
  1056  000D7C  6FC9               	movwf	(_head+1)& (0+255),b
  1057  000D7E  0E69               	movlw	105
  1058  000D80  6FC8               	movwf	_head& (0+255),b
  1059  000D82                     
  1060                           ; BSR set to: 0
  1061  000D82  0012               	return		;funcret
  1062  000D84                     __end_of_initializeTaskList:
  1063                           	opt callstack 0
  1064                           
  1065 ;; *************** function _pin_initialize *****************
  1066 ;; Defined at:
  1067 ;;		line 7 in file "mcc.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;		None
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;		None
  1072 ;; Return value:  Size  Location     Type
  1073 ;;                  1    wreg      void 
  1074 ;; Registers used:
  1075 ;;		wreg, status,2
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1085 ;;Total ram usage:        0 bytes
  1086 ;; Hardware stack levels used:    1
  1087 ;; Hardware stack levels required when called:    6
  1088 ;; This function calls:
  1089 ;;		Nothing
  1090 ;; This function is called by:
  1091 ;;		_system_initialize
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095                           	psect	text4
  1096  00148E                     __ptext4:
  1097                           	opt callstack 0
  1098  00148E                     _pin_initialize:
  1099                           	opt callstack 23
  1100  00148E                     
  1101                           ;mcc.c: 8:     LATC = 0x00;
  1102  00148E  0E00               	movlw	0
  1103  001490  6E8B               	movwf	139,c	;volatile
  1104                           
  1105                           ;mcc.c: 9:     TRISC = 0xD7;
  1106  001492  0ED7               	movlw	215
  1107  001494  6E94               	movwf	148,c	;volatile
  1108                           
  1109                           ;mcc.c: 10:     ADCON1 = 0b00001111;
  1110  001496  0E0F               	movlw	15
  1111  001498  6EC1               	movwf	193,c	;volatile
  1112                           
  1113                           ;mcc.c: 13:     LATD = 0x00;
  1114  00149A  0E00               	movlw	0
  1115  00149C  6E8C               	movwf	140,c	;volatile
  1116                           
  1117                           ;mcc.c: 14:     TRISD = 0x00;
  1118  00149E  0E00               	movlw	0
  1119  0014A0  6E95               	movwf	149,c	;volatile
  1120  0014A2  0012               	return		;funcret
  1121  0014A4                     __end_of_pin_initialize:
  1122                           	opt callstack 0
  1123                           
  1124 ;; *************** function _osc_initialize *****************
  1125 ;; Defined at:
  1126 ;;		line 3 in file "mcc.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;		None
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;		None
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  1    wreg      void 
  1133 ;; Registers used:
  1134 ;;		wreg, status,2
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1144 ;;Total ram usage:        0 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; Hardware stack levels required when called:    6
  1147 ;; This function calls:
  1148 ;;		Nothing
  1149 ;; This function is called by:
  1150 ;;		_system_initialize
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           	psect	text5
  1155  0014A4                     __ptext5:
  1156                           	opt callstack 0
  1157  0014A4                     _osc_initialize:
  1158                           	opt callstack 23
  1159  0014A4                     
  1160                           ;mcc.c: 4:     OSCCON = 0x70;
  1161  0014A4  0E70               	movlw	112
  1162  0014A6  6ED3               	movwf	211,c	;volatile
  1163  0014A8  0012               	return		;funcret
  1164  0014AA                     __end_of_osc_initialize:
  1165                           	opt callstack 0
  1166                           
  1167 ;; *************** function _interrupt_initialize *****************
  1168 ;; Defined at:
  1169 ;;		line 17 in file "mcc.c"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;		None
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;		None
  1174 ;; Return value:  Size  Location     Type
  1175 ;;                  1    wreg      void 
  1176 ;; Registers used:
  1177 ;;		None
  1178 ;; Tracked objects:
  1179 ;;		On entry : 0/0
  1180 ;;		On exit  : 0/0
  1181 ;;		Unchanged: 0/0
  1182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1187 ;;Total ram usage:        0 bytes
  1188 ;; Hardware stack levels used:    1
  1189 ;; Hardware stack levels required when called:    6
  1190 ;; This function calls:
  1191 ;;		Nothing
  1192 ;; This function is called by:
  1193 ;;		_system_initialize
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197                           	psect	text6
  1198  0014AA                     __ptext6:
  1199                           	opt callstack 0
  1200  0014AA                     _interrupt_initialize:
  1201                           	opt callstack 23
  1202  0014AA                     
  1203                           ;mcc.c: 18:     INTCONbits.GIE = 1;
  1204  0014AA  8EF2               	bsf	242,7,c	;volatile
  1205                           
  1206                           ;mcc.c: 19:     INTCONbits.PEIE = 1;
  1207  0014AC  8CF2               	bsf	242,6,c	;volatile
  1208  0014AE  0012               	return		;funcret
  1209  0014B0                     __end_of_interrupt_initialize:
  1210                           	opt callstack 0
  1211                           
  1212 ;; *************** function _register_timer *****************
  1213 ;; Defined at:
  1214 ;;		line 38 in file "clock.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;  period          4   32[BANK0 ] unsigned long 
  1217 ;;  delay           4   36[BANK0 ] unsigned long 
  1218 ;;  callback        3   40[BANK0 ] PTR FTN()void 
  1219 ;;		 -> blink_LED5(1), blink_LED4(1), blink_LED3(1), blink_LED2(1), 
  1220 ;;		 -> blink_LED1(1), blink_LED0(1), 
  1221 ;;  data            2   43[BANK0 ] PTR void 
  1222 ;;		 -> NULL(0), 
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;		None
  1225 ;; Return value:  Size  Location     Type
  1226 ;;                  1    wreg      unsigned char 
  1227 ;; Registers used:
  1228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1229 ;; Tracked objects:
  1230 ;;		On entry : 0/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1234 ;;      Params:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1237 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1238 ;;Total ram usage:       13 bytes
  1239 ;; Hardware stack levels used:    1
  1240 ;; Hardware stack levels required when called:    8
  1241 ;; This function calls:
  1242 ;;		_addTask
  1243 ;; This function is called by:
  1244 ;;		_main
  1245 ;; This function uses a non-reentrant model
  1246 ;;
  1247                           
  1248                           	psect	text7
  1249  001232                     __ptext7:
  1250                           	opt callstack 0
  1251  001232                     _register_timer:
  1252                           	opt callstack 22
  1253  001232                     
  1254                           ;clock.c: 39:     return addTask(period, delay, callback, data);
  1255  001232  C0EB  F0D1         	movff	register_timer@period,addTask@period
  1256  001236  C0EC  F0D2         	movff	register_timer@period+1,addTask@period+1
  1257  00123A  C0ED  F0D3         	movff	register_timer@period+2,addTask@period+2
  1258  00123E  C0EE  F0D4         	movff	register_timer@period+3,addTask@period+3
  1259  001242  C0EF  F0D5         	movff	register_timer@delay,addTask@delay
  1260  001246  C0F0  F0D6         	movff	register_timer@delay+1,addTask@delay+1
  1261  00124A  C0F1  F0D7         	movff	register_timer@delay+2,addTask@delay+2
  1262  00124E  C0F2  F0D8         	movff	register_timer@delay+3,addTask@delay+3
  1263  001252  C0F3  F0D9         	movff	register_timer@callback,addTask@ptr
  1264  001256  C0F4  F0DA         	movff	register_timer@callback+1,addTask@ptr+1
  1265  00125A  C0F5  F0DB         	movff	register_timer@callback+2,addTask@ptr+2
  1266  00125E  C0F6  F0DC         	movff	register_timer@data,addTask@data
  1267  001262  C0F7  F0DD         	movff	register_timer@data+1,addTask@data+1
  1268  001266  ECB1  F002         	call	_addTask	;wreg free
  1269  00126A  0012               	return		;funcret
  1270  00126C                     __end_of_register_timer:
  1271                           	opt callstack 0
  1272                           
  1273 ;; *************** function _addTask *****************
  1274 ;; Defined at:
  1275 ;;		line 23 in file "task.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;  period          4    6[BANK0 ] unsigned long 
  1278 ;;  delay           4   10[BANK0 ] unsigned long 
  1279 ;;  ptr             3   14[BANK0 ] PTR FTN()void 
  1280 ;;		 -> blink_LED5(1), blink_LED4(1), blink_LED3(1), blink_LED2(1), 
  1281 ;;		 -> blink_LED1(1), blink_LED0(1), 
  1282 ;;  data            2   17[BANK0 ] PTR void 
  1283 ;;		 -> NULL(0), 
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;  cur             2   29[BANK0 ] int 
  1286 ;;  prev            2   27[BANK0 ] int 
  1287 ;;  idx             1   31[BANK0 ] unsigned char 
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  1    wreg      unsigned char 
  1290 ;; Registers used:
  1291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1297 ;;      Params:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1298 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1299 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1300 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1301 ;;Total ram usage:       26 bytes
  1302 ;; Hardware stack levels used:    1
  1303 ;; Hardware stack levels required when called:    7
  1304 ;; This function calls:
  1305 ;;		___wmul
  1306 ;;		_isFullList
  1307 ;; This function is called by:
  1308 ;;		_register_timer
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           	psect	text8
  1313  000562                     __ptext8:
  1314                           	opt callstack 0
  1315  000562                     _addTask:
  1316                           	opt callstack 22
  1317  000562                     
  1318                           ;task.c: 24:     if(isFullList())
  1319  000562  EC2E  F00A         	call	_isFullList	;wreg free
  1320  000566  0900               	iorlw	0
  1321  000568  B4D8               	btfsc	status,2,c
  1322  00056A  EFB9  F002         	goto	u1931
  1323  00056E  EFBB  F002         	goto	u1930
  1324  000572                     u1931:
  1325  000572  EFBE  F002         	goto	l2005
  1326  000576                     u1930:
  1327  000576                     l2001:
  1328                           
  1329                           ;task.c: 25:         return 109;
  1330  000576  0E6D               	movlw	109
  1331  000578  EFAE  F004         	goto	l158
  1332  00057C                     l2005:
  1333                           
  1334                           ;task.c: 26:     char idx;;task.c: 27:     for(idx = 0; idx < 20; idx++) {
  1335  00057C  0E00               	movlw	0
  1336  00057E  0100               	movlb	0	; () banked
  1337  000580  6FEA               	movwf	addTask@idx& (0+255),b
  1338  000582                     l2011:
  1339                           
  1340                           ; BSR set to: 0
  1341                           ;task.c: 28:         if(task_list[idx].func_ptr == ((void*)0))
  1342  000582  51EA               	movf	addTask@idx& (0+255),w,b
  1343  000584  0D0F               	mullw	15
  1344  000586  0E00               	movlw	low (_task_list+8)
  1345  000588  24F3               	addwf	243,w,c
  1346  00058A  6ED9               	movwf	fsr2l,c
  1347  00058C  0E01               	movlw	high (_task_list+8)
  1348  00058E  20F4               	addwfc	prodh,w,c
  1349  000590  6EDA               	movwf	fsr2h,c
  1350  000592  50DE               	movf	postinc2,w,c
  1351  000594  10DE               	iorwf	postinc2,w,c
  1352  000596  10DE               	iorwf	postinc2,w,c
  1353  000598  A4D8               	btfss	status,2,c
  1354  00059A  EFD1  F002         	goto	u1941
  1355  00059E  EFD3  F002         	goto	u1940
  1356  0005A2                     u1941:
  1357  0005A2  EFD5  F002         	goto	l2015
  1358  0005A6                     u1940:
  1359  0005A6  EFDE  F002         	goto	l2019
  1360  0005AA                     l2015:
  1361                           
  1362                           ; BSR set to: 0
  1363                           ;task.c: 30:     }
  1364  0005AA  2BEA               	incf	addTask@idx& (0+255),f,b
  1365  0005AC                     
  1366                           ; BSR set to: 0
  1367  0005AC  0E13               	movlw	19
  1368  0005AE  65EA               	cpfsgt	addTask@idx& (0+255),b
  1369  0005B0  EFDC  F002         	goto	u1951
  1370  0005B4  EFDE  F002         	goto	u1950
  1371  0005B8                     u1951:
  1372  0005B8  EFC1  F002         	goto	l2011
  1373  0005BC                     u1950:
  1374  0005BC                     l2019:
  1375                           
  1376                           ; BSR set to: 0
  1377                           ;task.c: 31:     if(idx == 20)
  1378  0005BC  0E14               	movlw	20
  1379  0005BE  19EA               	xorwf	addTask@idx& (0+255),w,b
  1380  0005C0  A4D8               	btfss	status,2,c
  1381  0005C2  EFE5  F002         	goto	u1961
  1382  0005C6  EFE7  F002         	goto	u1960
  1383  0005CA                     u1961:
  1384  0005CA  EFE9  F002         	goto	l2025
  1385  0005CE                     u1960:
  1386  0005CE  EFBB  F002         	goto	l2001
  1387  0005D2                     l2025:
  1388                           
  1389                           ; BSR set to: 0
  1390                           ;task.c: 33:     task_list[idx].delay_t = delay;
  1391  0005D2  51EA               	movf	addTask@idx& (0+255),w,b
  1392  0005D4  0D0F               	mullw	15
  1393  0005D6  0EF8               	movlw	low _task_list
  1394  0005D8  24F3               	addwf	243,w,c
  1395  0005DA  6ED9               	movwf	fsr2l,c
  1396  0005DC  0E00               	movlw	high _task_list
  1397  0005DE  20F4               	addwfc	prodh,w,c
  1398  0005E0  6EDA               	movwf	fsr2h,c
  1399  0005E2  C0D5  FFDE         	movff	addTask@delay,postinc2
  1400  0005E6  C0D6  FFDE         	movff	addTask@delay+1,postinc2
  1401  0005EA  C0D7  FFDE         	movff	addTask@delay+2,postinc2
  1402  0005EE  C0D8  FFDE         	movff	addTask@delay+3,postinc2
  1403                           
  1404                           ;task.c: 34:     task_list[idx].period_t = period;
  1405  0005F2  51EA               	movf	addTask@idx& (0+255),w,b
  1406  0005F4  0D0F               	mullw	15
  1407  0005F6  0EFC               	movlw	low (_task_list+4)
  1408  0005F8  24F3               	addwf	243,w,c
  1409  0005FA  6ED9               	movwf	fsr2l,c
  1410  0005FC  0E00               	movlw	high (_task_list+4)
  1411  0005FE  20F4               	addwfc	prodh,w,c
  1412  000600  6EDA               	movwf	fsr2h,c
  1413  000602  C0D1  FFDE         	movff	addTask@period,postinc2
  1414  000606  C0D2  FFDE         	movff	addTask@period+1,postinc2
  1415  00060A  C0D3  FFDE         	movff	addTask@period+2,postinc2
  1416  00060E  C0D4  FFDE         	movff	addTask@period+3,postinc2
  1417                           
  1418                           ;task.c: 35:     task_list[idx].func_ptr = ptr;
  1419  000612  51EA               	movf	addTask@idx& (0+255),w,b
  1420  000614  0D0F               	mullw	15
  1421  000616  0E00               	movlw	low (_task_list+8)
  1422  000618  24F3               	addwf	243,w,c
  1423  00061A  6ED9               	movwf	fsr2l,c
  1424  00061C  0E01               	movlw	high (_task_list+8)
  1425  00061E  20F4               	addwfc	prodh,w,c
  1426  000620  6EDA               	movwf	fsr2h,c
  1427  000622  C0D9  FFDE         	movff	addTask@ptr,postinc2
  1428  000626  C0DA  FFDE         	movff	addTask@ptr+1,postinc2
  1429  00062A  C0DB  FFDE         	movff	addTask@ptr+2,postinc2
  1430                           
  1431                           ;task.c: 36:     task_list[idx].data_p = data;
  1432  00062E  51EA               	movf	addTask@idx& (0+255),w,b
  1433  000630  0D0F               	mullw	15
  1434  000632  0E05               	movlw	low (_task_list+13)
  1435  000634  24F3               	addwf	243,w,c
  1436  000636  6ED9               	movwf	fsr2l,c
  1437  000638  0E01               	movlw	high (_task_list+13)
  1438  00063A  20F4               	addwfc	prodh,w,c
  1439  00063C  6EDA               	movwf	fsr2h,c
  1440  00063E  C0DC  FFDE         	movff	addTask@data,postinc2
  1441  000642  C0DD  FFDD         	movff	addTask@data+1,postdec2
  1442  000646                     
  1443                           ; BSR set to: 0
  1444                           ;task.c: 37:     num_task++;
  1445  000646  2BCA               	incf	_num_task& (0+255),f,b
  1446  000648                     
  1447                           ; BSR set to: 0
  1448                           ;task.c: 38:     if(head == 105 || (head != 105 && task_list[head].delay_t > task_list[i
      +                          dx].delay_t)) {
  1449  000648  0E69               	movlw	105
  1450  00064A  19C8               	xorwf	_head& (0+255),w,b
  1451  00064C  11C9               	iorwf	(_head+1)& (0+255),w,b
  1452  00064E  B4D8               	btfsc	status,2,c
  1453  000650  EF2C  F003         	goto	u1971
  1454  000654  EF2E  F003         	goto	u1970
  1455  000658                     u1971:
  1456  000658  EF60  F003         	goto	l2035
  1457  00065C                     u1970:
  1458  00065C                     
  1459                           ; BSR set to: 0
  1460  00065C  0E69               	movlw	105
  1461  00065E  19C8               	xorwf	_head& (0+255),w,b
  1462  000660  11C9               	iorwf	(_head+1)& (0+255),w,b
  1463  000662  B4D8               	btfsc	status,2,c
  1464  000664  EF36  F003         	goto	u1981
  1465  000668  EF38  F003         	goto	u1980
  1466  00066C                     u1981:
  1467  00066C  EF71  F003         	goto	l2039
  1468  000670                     u1980:
  1469  000670                     
  1470                           ; BSR set to: 0
  1471  000670  C0C8  F0CB         	movff	_head,___wmul@multiplier
  1472  000674  C0C9  F0CC         	movff	_head+1,___wmul@multiplier+1
  1473  000678  0E00               	movlw	0
  1474  00067A  6FCE               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1475  00067C  0E0F               	movlw	15
  1476  00067E  6FCD               	movwf	___wmul@multiplicand& (0+255),b
  1477  000680  EC66  F009         	call	___wmul	;wreg free
  1478  000684  0EF8               	movlw	low _task_list
  1479  000686  0100               	movlb	0	; () banked
  1480  000688  25CB               	addwf	?___wmul& (0+255),w,b
  1481  00068A  6ED9               	movwf	fsr2l,c
  1482  00068C  0E00               	movlw	high _task_list
  1483  00068E  21CC               	addwfc	(?___wmul+1)& (0+255),w,b
  1484  000690  6EDA               	movwf	fsr2h,c
  1485  000692  51EA               	movf	addTask@idx& (0+255),w,b
  1486  000694  0D0F               	mullw	15
  1487  000696  0EF8               	movlw	low _task_list
  1488  000698  24F3               	addwf	243,w,c
  1489  00069A  6EE1               	movwf	fsr1l,c
  1490  00069C  0E00               	movlw	high _task_list
  1491  00069E  20F4               	addwfc	prodh,w,c
  1492  0006A0  6EE2               	movwf	fsr1h,c
  1493  0006A2  50DE               	movf	postinc2,w,c
  1494  0006A4  5CE6               	subwf	postinc1,w,c
  1495  0006A6  50DE               	movf	postinc2,w,c
  1496  0006A8  58E6               	subwfb	postinc1,w,c
  1497  0006AA  50DE               	movf	postinc2,w,c
  1498  0006AC  58E6               	subwfb	postinc1,w,c
  1499  0006AE  50DE               	movf	postinc2,w,c
  1500  0006B0  58E6               	subwfb	postinc1,w,c
  1501  0006B2  B0D8               	btfsc	status,0,c
  1502  0006B4  EF5E  F003         	goto	u1991
  1503  0006B8  EF60  F003         	goto	u1990
  1504  0006BC                     u1991:
  1505  0006BC  EF71  F003         	goto	l2039
  1506  0006C0                     u1990:
  1507  0006C0                     l2035:
  1508                           
  1509                           ; BSR set to: 0
  1510                           ;task.c: 39:         task_list[idx].next = head;
  1511  0006C0  51EA               	movf	addTask@idx& (0+255),w,b
  1512  0006C2  0D0F               	mullw	15
  1513  0006C4  0E03               	movlw	low (_task_list+11)
  1514  0006C6  24F3               	addwf	243,w,c
  1515  0006C8  6ED9               	movwf	fsr2l,c
  1516  0006CA  0E01               	movlw	high (_task_list+11)
  1517  0006CC  20F4               	addwfc	prodh,w,c
  1518  0006CE  6EDA               	movwf	fsr2h,c
  1519  0006D0  C0C8  FFDE         	movff	_head,postinc2
  1520  0006D4  C0C9  FFDD         	movff	_head+1,postdec2
  1521  0006D8                     
  1522                           ; BSR set to: 0
  1523                           ;task.c: 40:         head = idx;
  1524  0006D8  C0EA  F0C8         	movff	addTask@idx,_head
  1525  0006DC  6BC9               	clrf	(_head+1)& (0+255),b
  1526                           
  1527                           ;task.c: 41:     }
  1528  0006DE  EF4D  F004         	goto	l2057
  1529  0006E2                     l2039:
  1530                           
  1531                           ; BSR set to: 0
  1532                           ;task.c: 43:         delay = delay - task_list[head].delay_t;
  1533  0006E2  C0C8  F0CB         	movff	_head,___wmul@multiplier
  1534  0006E6  C0C9  F0CC         	movff	_head+1,___wmul@multiplier+1
  1535  0006EA  0E00               	movlw	0
  1536  0006EC  6FCE               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1537  0006EE  0E0F               	movlw	15
  1538  0006F0  6FCD               	movwf	___wmul@multiplicand& (0+255),b
  1539  0006F2  EC66  F009         	call	___wmul	;wreg free
  1540  0006F6  0EF8               	movlw	low _task_list
  1541  0006F8  0100               	movlb	0	; () banked
  1542  0006FA  25CB               	addwf	?___wmul& (0+255),w,b
  1543  0006FC  6ED9               	movwf	fsr2l,c
  1544  0006FE  0E00               	movlw	high _task_list
  1545  000700  21CC               	addwfc	(?___wmul+1)& (0+255),w,b
  1546  000702  6EDA               	movwf	fsr2h,c
  1547  000704  CFDE F0DE          	movff	postinc2,??_addTask
  1548  000708  CFDE F0DF          	movff	postinc2,??_addTask+1
  1549  00070C  CFDE F0E0          	movff	postinc2,??_addTask+2
  1550  000710  CFDE F0E1          	movff	postinc2,??_addTask+3
  1551  000714  51DE               	movf	??_addTask& (0+255),w,b
  1552  000716  5DD5               	subwf	addTask@delay& (0+255),w,b
  1553  000718  6FD5               	movwf	addTask@delay& (0+255),b
  1554  00071A  51DF               	movf	(??_addTask+1)& (0+255),w,b
  1555  00071C  59D6               	subwfb	(addTask@delay+1)& (0+255),w,b
  1556  00071E  6FD6               	movwf	(addTask@delay+1)& (0+255),b
  1557  000720  51E0               	movf	(??_addTask+2)& (0+255),w,b
  1558  000722  59D7               	subwfb	(addTask@delay+2)& (0+255),w,b
  1559  000724  6FD7               	movwf	(addTask@delay+2)& (0+255),b
  1560  000726  51E1               	movf	(??_addTask+3)& (0+255),w,b
  1561  000728  59D8               	subwfb	(addTask@delay+3)& (0+255),w,b
  1562  00072A  6FD8               	movwf	(addTask@delay+3)& (0+255),b
  1563                           
  1564                           ;task.c: 44:         int cur = task_list[head].next;
  1565  00072C  C0C8  F0CB         	movff	_head,___wmul@multiplier
  1566  000730  C0C9  F0CC         	movff	_head+1,___wmul@multiplier+1
  1567  000734  0E00               	movlw	0
  1568  000736  6FCE               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1569  000738  0E0F               	movlw	15
  1570  00073A  6FCD               	movwf	___wmul@multiplicand& (0+255),b
  1571  00073C  EC66  F009         	call	___wmul	;wreg free
  1572  000740  0E03               	movlw	low (_task_list+11)
  1573  000742  0100               	movlb	0	; () banked
  1574  000744  25CB               	addwf	?___wmul& (0+255),w,b
  1575  000746  6ED9               	movwf	fsr2l,c
  1576  000748  0E01               	movlw	high (_task_list+11)
  1577  00074A  21CC               	addwfc	(?___wmul+1)& (0+255),w,b
  1578  00074C  6EDA               	movwf	fsr2h,c
  1579  00074E  CFDE F0E8          	movff	postinc2,addTask@cur
  1580  000752  CFDD F0E9          	movff	postdec2,addTask@cur+1
  1581  000756                     
  1582                           ; BSR set to: 0
  1583                           ;task.c: 45:         int prev = head;
  1584  000756  C0C8  F0E6         	movff	_head,addTask@prev
  1585  00075A  C0C9  F0E7         	movff	_head+1,addTask@prev+1
  1586                           
  1587                           ;task.c: 46:         while(cur != 105 && task_list[cur].delay_t <= delay) {
  1588  00075E  EFEF  F003         	goto	l2047
  1589  000762                     l2043:
  1590                           
  1591                           ; BSR set to: 0
  1592                           ;task.c: 47:             delay = delay - task_list[cur].delay_t;
  1593  000762  C0E8  F0CB         	movff	addTask@cur,___wmul@multiplier
  1594  000766  C0E9  F0CC         	movff	addTask@cur+1,___wmul@multiplier+1
  1595  00076A  0E00               	movlw	0
  1596  00076C  6FCE               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1597  00076E  0E0F               	movlw	15
  1598  000770  6FCD               	movwf	___wmul@multiplicand& (0+255),b
  1599  000772  EC66  F009         	call	___wmul	;wreg free
  1600  000776  0EF8               	movlw	low _task_list
  1601  000778  0100               	movlb	0	; () banked
  1602  00077A  25CB               	addwf	?___wmul& (0+255),w,b
  1603  00077C  6ED9               	movwf	fsr2l,c
  1604  00077E  0E00               	movlw	high _task_list
  1605  000780  21CC               	addwfc	(?___wmul+1)& (0+255),w,b
  1606  000782  6EDA               	movwf	fsr2h,c
  1607  000784  CFDE F0DE          	movff	postinc2,??_addTask
  1608  000788  CFDE F0DF          	movff	postinc2,??_addTask+1
  1609  00078C  CFDE F0E0          	movff	postinc2,??_addTask+2
  1610  000790  CFDE F0E1          	movff	postinc2,??_addTask+3
  1611  000794  51DE               	movf	??_addTask& (0+255),w,b
  1612  000796  5DD5               	subwf	addTask@delay& (0+255),w,b
  1613  000798  6FD5               	movwf	addTask@delay& (0+255),b
  1614  00079A  51DF               	movf	(??_addTask+1)& (0+255),w,b
  1615  00079C  59D6               	subwfb	(addTask@delay+1)& (0+255),w,b
  1616  00079E  6FD6               	movwf	(addTask@delay+1)& (0+255),b
  1617  0007A0  51E0               	movf	(??_addTask+2)& (0+255),w,b
  1618  0007A2  59D7               	subwfb	(addTask@delay+2)& (0+255),w,b
  1619  0007A4  6FD7               	movwf	(addTask@delay+2)& (0+255),b
  1620  0007A6  51E1               	movf	(??_addTask+3)& (0+255),w,b
  1621  0007A8  59D8               	subwfb	(addTask@delay+3)& (0+255),w,b
  1622  0007AA  6FD8               	movwf	(addTask@delay+3)& (0+255),b
  1623  0007AC                     
  1624                           ; BSR set to: 0
  1625                           ;task.c: 48:             prev = cur;
  1626  0007AC  C0E8  F0E6         	movff	addTask@cur,addTask@prev
  1627  0007B0  C0E9  F0E7         	movff	addTask@cur+1,addTask@prev+1
  1628                           
  1629                           ;task.c: 49:             cur = task_list[cur].next;
  1630  0007B4  C0E8  F0CB         	movff	addTask@cur,___wmul@multiplier
  1631  0007B8  C0E9  F0CC         	movff	addTask@cur+1,___wmul@multiplier+1
  1632  0007BC  0E00               	movlw	0
  1633  0007BE  6FCE               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1634  0007C0  0E0F               	movlw	15
  1635  0007C2  6FCD               	movwf	___wmul@multiplicand& (0+255),b
  1636  0007C4  EC66  F009         	call	___wmul	;wreg free
  1637  0007C8  0E03               	movlw	low (_task_list+11)
  1638  0007CA  0100               	movlb	0	; () banked
  1639  0007CC  25CB               	addwf	?___wmul& (0+255),w,b
  1640  0007CE  6ED9               	movwf	fsr2l,c
  1641  0007D0  0E01               	movlw	high (_task_list+11)
  1642  0007D2  21CC               	addwfc	(?___wmul+1)& (0+255),w,b
  1643  0007D4  6EDA               	movwf	fsr2h,c
  1644  0007D6  CFDE F0E8          	movff	postinc2,addTask@cur
  1645  0007DA  CFDD F0E9          	movff	postdec2,addTask@cur+1
  1646  0007DE                     l2047:
  1647                           
  1648                           ; BSR set to: 0
  1649                           ;task.c: 46:         while(cur != 105 && task_list[cur].delay_t <= delay) {
  1650  0007DE  0E69               	movlw	105
  1651  0007E0  19E8               	xorwf	addTask@cur& (0+255),w,b
  1652  0007E2  11E9               	iorwf	(addTask@cur+1)& (0+255),w,b
  1653  0007E4  B4D8               	btfsc	status,2,c
  1654  0007E6  EFF7  F003         	goto	u2001
  1655  0007EA  EFF9  F003         	goto	u2000
  1656  0007EE                     u2001:
  1657  0007EE  EF19  F004         	goto	l2051
  1658  0007F2                     u2000:
  1659  0007F2                     
  1660                           ; BSR set to: 0
  1661  0007F2  C0E8  F0CB         	movff	addTask@cur,___wmul@multiplier
  1662  0007F6  C0E9  F0CC         	movff	addTask@cur+1,___wmul@multiplier+1
  1663  0007FA  0E00               	movlw	0
  1664  0007FC  6FCE               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1665  0007FE  0E0F               	movlw	15
  1666  000800  6FCD               	movwf	___wmul@multiplicand& (0+255),b
  1667  000802  EC66  F009         	call	___wmul	;wreg free
  1668  000806  0EF8               	movlw	low _task_list
  1669  000808  0100               	movlb	0	; () banked
  1670  00080A  25CB               	addwf	?___wmul& (0+255),w,b
  1671  00080C  6ED9               	movwf	fsr2l,c
  1672  00080E  0E00               	movlw	high _task_list
  1673  000810  21CC               	addwfc	(?___wmul+1)& (0+255),w,b
  1674  000812  6EDA               	movwf	fsr2h,c
  1675  000814  50DE               	movf	postinc2,w,c
  1676  000816  5DD5               	subwf	addTask@delay& (0+255),w,b
  1677  000818  50DE               	movf	postinc2,w,c
  1678  00081A  59D6               	subwfb	(addTask@delay+1)& (0+255),w,b
  1679  00081C  50DE               	movf	postinc2,w,c
  1680  00081E  59D7               	subwfb	(addTask@delay+2)& (0+255),w,b
  1681  000820  50DE               	movf	postinc2,w,c
  1682  000822  59D8               	subwfb	(addTask@delay+3)& (0+255),w,b
  1683  000824  B0D8               	btfsc	status,0,c
  1684  000826  EF17  F004         	goto	u2011
  1685  00082A  EF19  F004         	goto	u2010
  1686  00082E                     u2011:
  1687  00082E  EFB1  F003         	goto	l2043
  1688  000832                     u2010:
  1689  000832                     l2051:
  1690                           
  1691                           ; BSR set to: 0
  1692                           ;task.c: 51:         task_list[prev].next = idx;
  1693  000832  51EA               	movf	addTask@idx& (0+255),w,b
  1694  000834  6FDE               	movwf	??_addTask& (0+255),b
  1695  000836  6BDF               	clrf	(??_addTask+1)& (0+255),b
  1696  000838  C0E6  F0CB         	movff	addTask@prev,___wmul@multiplier
  1697  00083C  C0E7  F0CC         	movff	addTask@prev+1,___wmul@multiplier+1
  1698  000840  0E00               	movlw	0
  1699  000842  6FCE               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1700  000844  0E0F               	movlw	15
  1701  000846  6FCD               	movwf	___wmul@multiplicand& (0+255),b
  1702  000848  EC66  F009         	call	___wmul	;wreg free
  1703  00084C  0E03               	movlw	low (_task_list+11)
  1704  00084E  0100               	movlb	0	; () banked
  1705  000850  25CB               	addwf	?___wmul& (0+255),w,b
  1706  000852  6ED9               	movwf	fsr2l,c
  1707  000854  0E01               	movlw	high (_task_list+11)
  1708  000856  21CC               	addwfc	(?___wmul+1)& (0+255),w,b
  1709  000858  6EDA               	movwf	fsr2h,c
  1710  00085A  C0DE  FFDE         	movff	??_addTask,postinc2
  1711  00085E  C0DF  FFDD         	movff	??_addTask+1,postdec2
  1712  000862                     
  1713                           ; BSR set to: 0
  1714                           ;task.c: 52:         task_list[idx].next = cur;
  1715  000862  51EA               	movf	addTask@idx& (0+255),w,b
  1716  000864  0D0F               	mullw	15
  1717  000866  0E03               	movlw	low (_task_list+11)
  1718  000868  24F3               	addwf	243,w,c
  1719  00086A  6ED9               	movwf	fsr2l,c
  1720  00086C  0E01               	movlw	high (_task_list+11)
  1721  00086E  20F4               	addwfc	prodh,w,c
  1722  000870  6EDA               	movwf	fsr2h,c
  1723  000872  C0E8  FFDE         	movff	addTask@cur,postinc2
  1724  000876  C0E9  FFDD         	movff	addTask@cur+1,postdec2
  1725  00087A                     
  1726                           ; BSR set to: 0
  1727                           ;task.c: 53:         task_list[idx].delay_t = delay;
  1728  00087A  51EA               	movf	addTask@idx& (0+255),w,b
  1729  00087C  0D0F               	mullw	15
  1730  00087E  0EF8               	movlw	low _task_list
  1731  000880  24F3               	addwf	243,w,c
  1732  000882  6ED9               	movwf	fsr2l,c
  1733  000884  0E00               	movlw	high _task_list
  1734  000886  20F4               	addwfc	prodh,w,c
  1735  000888  6EDA               	movwf	fsr2h,c
  1736  00088A  C0D5  FFDE         	movff	addTask@delay,postinc2
  1737  00088E  C0D6  FFDE         	movff	addTask@delay+1,postinc2
  1738  000892  C0D7  FFDE         	movff	addTask@delay+2,postinc2
  1739  000896  C0D8  FFDE         	movff	addTask@delay+3,postinc2
  1740  00089A                     l2057:
  1741                           
  1742                           ; BSR set to: 0
  1743                           ;task.c: 55:     if(task_list[idx].next != 105)
  1744  00089A  51EA               	movf	addTask@idx& (0+255),w,b
  1745  00089C  0D0F               	mullw	15
  1746  00089E  0E03               	movlw	low (_task_list+11)
  1747  0008A0  24F3               	addwf	243,w,c
  1748  0008A2  6ED9               	movwf	fsr2l,c
  1749  0008A4  0E01               	movlw	high (_task_list+11)
  1750  0008A6  20F4               	addwfc	prodh,w,c
  1751  0008A8  6EDA               	movwf	fsr2h,c
  1752  0008AA  0E69               	movlw	105
  1753  0008AC  18DE               	xorwf	postinc2,w,c
  1754  0008AE  10DE               	iorwf	postinc2,w,c
  1755  0008B0  B4D8               	btfsc	status,2,c
  1756  0008B2  EF5D  F004         	goto	u2021
  1757  0008B6  EF5F  F004         	goto	u2020
  1758  0008BA                     u2021:
  1759  0008BA  EFAD  F004         	goto	l2061
  1760  0008BE                     u2020:
  1761  0008BE                     
  1762                           ; BSR set to: 0
  1763                           ;task.c: 56:         task_list[task_list[idx].next].delay_t = task_list[task_list[idx].n
      +                          ext].delay_t - delay;
  1764  0008BE  51EA               	movf	addTask@idx& (0+255),w,b
  1765  0008C0  0D0F               	mullw	15
  1766  0008C2  0E03               	movlw	low (_task_list+11)
  1767  0008C4  24F3               	addwf	243,w,c
  1768  0008C6  6ED9               	movwf	fsr2l,c
  1769  0008C8  0E01               	movlw	high (_task_list+11)
  1770  0008CA  20F4               	addwfc	prodh,w,c
  1771  0008CC  6EDA               	movwf	fsr2h,c
  1772  0008CE  CFDE F0CB          	movff	postinc2,___wmul@multiplier
  1773  0008D2  CFDD F0CC          	movff	postdec2,___wmul@multiplier+1
  1774  0008D6  0E00               	movlw	0
  1775  0008D8  6FCE               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1776  0008DA  0E0F               	movlw	15
  1777  0008DC  6FCD               	movwf	___wmul@multiplicand& (0+255),b
  1778  0008DE  EC66  F009         	call	___wmul	;wreg free
  1779  0008E2  0EF8               	movlw	low _task_list
  1780  0008E4  0100               	movlb	0	; () banked
  1781  0008E6  25CB               	addwf	?___wmul& (0+255),w,b
  1782  0008E8  6ED9               	movwf	fsr2l,c
  1783  0008EA  0E00               	movlw	high _task_list
  1784  0008EC  21CC               	addwfc	(?___wmul+1)& (0+255),w,b
  1785  0008EE  6EDA               	movwf	fsr2h,c
  1786  0008F0  CFDE F0DE          	movff	postinc2,??_addTask
  1787  0008F4  CFDE F0DF          	movff	postinc2,??_addTask+1
  1788  0008F8  CFDE F0E0          	movff	postinc2,??_addTask+2
  1789  0008FC  CFDE F0E1          	movff	postinc2,??_addTask+3
  1790  000900  51D5               	movf	addTask@delay& (0+255),w,b
  1791  000902  5DDE               	subwf	??_addTask& (0+255),w,b
  1792  000904  6FE2               	movwf	(??_addTask+4)& (0+255),b
  1793  000906  51D6               	movf	(addTask@delay+1)& (0+255),w,b
  1794  000908  59DF               	subwfb	(??_addTask+1)& (0+255),w,b
  1795  00090A  6FE3               	movwf	(??_addTask+5)& (0+255),b
  1796  00090C  51D7               	movf	(addTask@delay+2)& (0+255),w,b
  1797  00090E  59E0               	subwfb	(??_addTask+2)& (0+255),w,b
  1798  000910  6FE4               	movwf	(??_addTask+6)& (0+255),b
  1799  000912  51D8               	movf	(addTask@delay+3)& (0+255),w,b
  1800  000914  59E1               	subwfb	(??_addTask+3)& (0+255),w,b
  1801  000916  6FE5               	movwf	(??_addTask+7)& (0+255),b
  1802  000918  51EA               	movf	addTask@idx& (0+255),w,b
  1803  00091A  0D0F               	mullw	15
  1804  00091C  0E03               	movlw	low (_task_list+11)
  1805  00091E  24F3               	addwf	243,w,c
  1806  000920  6ED9               	movwf	fsr2l,c
  1807  000922  0E01               	movlw	high (_task_list+11)
  1808  000924  20F4               	addwfc	prodh,w,c
  1809  000926  6EDA               	movwf	fsr2h,c
  1810  000928  CFDE F0CB          	movff	postinc2,___wmul@multiplier
  1811  00092C  CFDD F0CC          	movff	postdec2,___wmul@multiplier+1
  1812  000930  0E00               	movlw	0
  1813  000932  6FCE               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1814  000934  0E0F               	movlw	15
  1815  000936  6FCD               	movwf	___wmul@multiplicand& (0+255),b
  1816  000938  EC66  F009         	call	___wmul	;wreg free
  1817  00093C  0EF8               	movlw	low _task_list
  1818  00093E  0100               	movlb	0	; () banked
  1819  000940  25CB               	addwf	?___wmul& (0+255),w,b
  1820  000942  6ED9               	movwf	fsr2l,c
  1821  000944  0E00               	movlw	high _task_list
  1822  000946  21CC               	addwfc	(?___wmul+1)& (0+255),w,b
  1823  000948  6EDA               	movwf	fsr2h,c
  1824  00094A  C0E2  FFDE         	movff	??_addTask+4,postinc2
  1825  00094E  C0E3  FFDE         	movff	??_addTask+5,postinc2
  1826  000952  C0E4  FFDE         	movff	??_addTask+6,postinc2
  1827  000956  C0E5  FFDE         	movff	??_addTask+7,postinc2
  1828  00095A                     l2061:
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;task.c: 57:     return idx;
  1832  00095A  51EA               	movf	addTask@idx& (0+255),w,b
  1833  00095C                     l158:
  1834  00095C  0012               	return		;funcret
  1835  00095E                     __end_of_addTask:
  1836                           	opt callstack 0
  1837                           
  1838 ;; *************** function _isFullList *****************
  1839 ;; Defined at:
  1840 ;;		line 7 in file "task.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;		None
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;		None
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  1    wreg      unsigned char 
  1847 ;; Registers used:
  1848 ;;		wreg, status,2, status,0
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1858 ;;Total ram usage:        0 bytes
  1859 ;; Hardware stack levels used:    1
  1860 ;; Hardware stack levels required when called:    6
  1861 ;; This function calls:
  1862 ;;		Nothing
  1863 ;; This function is called by:
  1864 ;;		_addTask
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           	psect	text9
  1869  00145C                     __ptext9:
  1870                           	opt callstack 0
  1871  00145C                     _isFullList:
  1872                           	opt callstack 22
  1873  00145C                     
  1874                           ;task.c: 8:     return num_task == 20 ? 1 : 0;
  1875  00145C  0E14               	movlw	20
  1876  00145E  0100               	movlb	0	; () banked
  1877  001460  19CA               	xorwf	_num_task& (0+255),w,b
  1878  001462  B4D8               	btfsc	status,2,c
  1879  001464  EF36  F00A         	goto	u1891
  1880  001468  EF39  F00A         	goto	u1890
  1881  00146C                     u1891:
  1882  00146C  0E01               	movlw	1
  1883  00146E  EF3A  F00A         	goto	u1900
  1884  001472                     u1890:
  1885  001472  0E00               	movlw	0
  1886  001474                     u1900:
  1887  001474                     
  1888                           ; BSR set to: 0
  1889  001474  0012               	return		;funcret
  1890  001476                     __end_of_isFullList:
  1891                           	opt callstack 0
  1892                           
  1893 ;; *************** function _dispatch *****************
  1894 ;; Defined at:
  1895 ;;		line 72 in file "clock.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;		None
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;		None
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  1    wreg      void 
  1902 ;; Registers used:
  1903 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1913 ;;Total ram usage:        0 bytes
  1914 ;; Hardware stack levels used:    1
  1915 ;; Hardware stack levels required when called:   11
  1916 ;; This function calls:
  1917 ;;		_selectReadyTask
  1918 ;; This function is called by:
  1919 ;;		_main
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923                           	psect	text10
  1924  0014B0                     __ptext10:
  1925                           	opt callstack 0
  1926  0014B0                     _dispatch:
  1927                           	opt callstack 19
  1928  0014B0                     
  1929                           ;clock.c: 73:     selectReadyTask();
  1930  0014B0  ECBC  F008         	call	_selectReadyTask	;wreg free
  1931  0014B4  0012               	return		;funcret
  1932  0014B6                     __end_of_dispatch:
  1933                           	opt callstack 0
  1934                           
  1935 ;; *************** function _selectReadyTask *****************
  1936 ;; Defined at:
  1937 ;;		line 118 in file "task.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;		None
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;  node            5   20[BANK0 ] struct .
  1942 ;; Return value:  Size  Location     Type
  1943 ;;                  1    wreg      void 
  1944 ;; Registers used:
  1945 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1952 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1954 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1955 ;;Total ram usage:        5 bytes
  1956 ;; Hardware stack levels used:    1
  1957 ;; Hardware stack levels required when called:   10
  1958 ;; This function calls:
  1959 ;;		_blink_LED0
  1960 ;;		_blink_LED1
  1961 ;;		_blink_LED2
  1962 ;;		_blink_LED3
  1963 ;;		_blink_LED4
  1964 ;;		_blink_LED5
  1965 ;;		_dequeue
  1966 ;;		_isEmptyQueue
  1967 ;; This function is called by:
  1968 ;;		_dispatch
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           	psect	text11
  1973  001178                     __ptext11:
  1974                           	opt callstack 0
  1975  001178                     _selectReadyTask:
  1976                           	opt callstack 19
  1977  001178                     
  1978                           ;task.c: 119:     while(!isEmptyQueue()) {
  1979  001178  EFE3  F008         	goto	l2073
  1980  00117C                     l2067:
  1981                           
  1982                           ;task.c: 120:         queue_node node = dequeue();
  1983  00117C  EC20  F008         	call	_dequeue	;wreg free
  1984  001180  EE20  F0DF         	lfsr	2,selectReadyTask@node
  1985  001184  0E04               	movlw	4
  1986  001186                     u2031:
  1987  001186  CFEB FFDB          	movff	plusw0,plusw2
  1988  00118A  06E8               	decf	wreg,f,c
  1989  00118C  E2FC               	bc	u2031
  1990  00118E                     
  1991                           ;task.c: 121:         if(node.func_ptr != ((void*)0))
  1992  00118E  0100               	movlb	0	; () banked
  1993  001190  51DF               	movf	selectReadyTask@node& (0+255),w,b
  1994  001192  11E0               	iorwf	(selectReadyTask@node+1)& (0+255),w,b
  1995  001194  11E1               	iorwf	(selectReadyTask@node+2)& (0+255),w,b
  1996  001196  B4D8               	btfsc	status,2,c
  1997  001198  EFD0  F008         	goto	u2041
  1998  00119C  EFD2  F008         	goto	u2040
  1999  0011A0                     u2041:
  2000  0011A0  EFE3  F008         	goto	l2073
  2001  0011A4                     u2040:
  2002  0011A4                     
  2003                           ; BSR set to: 0
  2004                           ;task.c: 122:             (node.func_ptr)(node.data_p);
  2005  0011A4  C0E2  F0CB         	movff	selectReadyTask@node+3,?_blink_LED5
  2006  0011A8  C0E3  F0CC         	movff	selectReadyTask@node+4,?_blink_LED5+1
  2007  0011AC  D802               	call	u2058
  2008  0011AE  EFE3  F008         	goto	u2059
  2009  0011B2                     u2058:
  2010  0011B2  0005               	push	
  2011  0011B4  6EFA               	movwf	pclath,c
  2012  0011B6  51DF               	movf	selectReadyTask@node& (0+255),w,b
  2013  0011B8  6EFD               	movwf	tosl,c
  2014  0011BA  51E0               	movf	(selectReadyTask@node+1)& (0+255),w,b
  2015  0011BC  6EFE               	movwf	tosh,c
  2016  0011BE  51E1               	movf	(selectReadyTask@node+2)& (0+255),w,b
  2017  0011C0  6EFF               	movwf	tosu,c
  2018  0011C2  50FA               	movf	pclath,w,c
  2019  0011C4  0012               	return		;indir
  2020  0011C6                     u2059:
  2021  0011C6                     l2073:
  2022                           
  2023                           ;task.c: 119:     while(!isEmptyQueue()) {
  2024  0011C6  EC36  F009         	call	_isEmptyQueue	;wreg free
  2025  0011CA  0900               	iorlw	0
  2026  0011CC  B4D8               	btfsc	status,2,c
  2027  0011CE  EFEB  F008         	goto	u2061
  2028  0011D2  EFED  F008         	goto	u2060
  2029  0011D6                     u2061:
  2030  0011D6  EFBE  F008         	goto	l2067
  2031  0011DA                     u2060:
  2032  0011DA  0012               	return		;funcret
  2033  0011DC                     __end_of_selectReadyTask:
  2034                           	opt callstack 0
  2035                           
  2036 ;; *************** function _dequeue *****************
  2037 ;; Defined at:
  2038 ;;		line 28 in file "ready_queue.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;		None
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;  temp            5   15[BANK0 ] struct .
  2043 ;;  idx             2   13[BANK0 ] int 
  2044 ;; Return value:  Size  Location     Type
  2045 ;;                  5    8[BANK0 ] struct .
  2046 ;; Registers used:
  2047 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2053 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2054 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2056 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2057 ;;Total ram usage:       12 bytes
  2058 ;; Hardware stack levels used:    1
  2059 ;; Hardware stack levels required when called:    9
  2060 ;; This function calls:
  2061 ;;		___awmod
  2062 ;;		___wmul
  2063 ;;		_isEmptyQueue
  2064 ;; This function is called by:
  2065 ;;		_selectReadyTask
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068                           
  2069                           	psect	text12
  2070  001040                     __ptext12:
  2071                           	opt callstack 0
  2072  001040                     _dequeue:
  2073                           	opt callstack 19
  2074  001040                     
  2075                           ;ready_queue.c: 29:     queue_node temp;;ready_queue.c: 30:     temp.func_ptr = ((void*)
      +                          0);
  2076  001040  0E00               	movlw	0
  2077  001042  0100               	movlb	0	; () banked
  2078  001044  6FDA               	movwf	dequeue@temp& (0+255),b
  2079  001046  0E00               	movlw	0
  2080  001048  6FDB               	movwf	(dequeue@temp+1)& (0+255),b
  2081  00104A  0E00               	movlw	0
  2082  00104C  6FDC               	movwf	(dequeue@temp+2)& (0+255),b
  2083                           
  2084                           ;ready_queue.c: 31:     temp.data_p = ((void*)0);
  2085  00104E  0E00               	movlw	0
  2086  001050  6FDD               	movwf	(dequeue@temp+3)& (0+255),b
  2087  001052  0E00               	movlw	0
  2088  001054  6FDE               	movwf	(dequeue@temp+4)& (0+255),b
  2089  001056                     
  2090                           ; BSR set to: 0
  2091                           ;ready_queue.c: 32:     if(isEmptyQueue())
  2092  001056  EC36  F009         	call	_isEmptyQueue	;wreg free
  2093  00105A  0900               	iorlw	0
  2094  00105C  B4D8               	btfsc	status,2,c
  2095  00105E  EF33  F008         	goto	u1861
  2096  001062  EF35  F008         	goto	u1860
  2097  001066                     u1861:
  2098  001066  EF40  F008         	goto	l122
  2099  00106A                     u1860:
  2100  00106A                     l1935:
  2101                           
  2102                           ;ready_queue.c: 33:         return temp;
  2103  00106A  EE20  F0DA         	lfsr	2,dequeue@temp
  2104  00106E  EE00  F0D3         	lfsr	0,?_dequeue
  2105  001072  0E04               	movlw	4
  2106  001074                     u1871:
  2107  001074  CFDB FFEB          	movff	plusw2,plusw0
  2108  001078  06E8               	decf	wreg,f,c
  2109  00107A  E2FC               	bc	u1871
  2110  00107C  EF70  F008         	goto	l123
  2111  001080                     l122:
  2112                           
  2113                           ;ready_queue.c: 34:     int idx = front;
  2114  001080  C043  F0D8         	movff	_front,dequeue@idx
  2115  001084  C044  F0D9         	movff	_front+1,dequeue@idx+1
  2116  001088                     
  2117                           ;ready_queue.c: 35:     front = (front + 1) % 20;
  2118  001088  0E01               	movlw	1
  2119  00108A  2443               	addwf	_front^0,w,c
  2120  00108C  0100               	movlb	0	; () banked
  2121  00108E  6FCB               	movwf	___awmod@dividend& (0+255),b
  2122  001090  0E00               	movlw	0
  2123  001092  2044               	addwfc	(_front+1)^0,w,c
  2124  001094  6FCC               	movwf	(___awmod@dividend+1)& (0+255),b
  2125  001096  0E00               	movlw	0
  2126  001098  6FCE               	movwf	(___awmod@divisor+1)& (0+255),b
  2127  00109A  0E14               	movlw	20
  2128  00109C  6FCD               	movwf	___awmod@divisor& (0+255),b
  2129  00109E  ECC2  F006         	call	___awmod	;wreg free
  2130  0010A2  C0CB  F043         	movff	?___awmod,_front
  2131  0010A6  C0CC  F044         	movff	?___awmod+1,_front+1
  2132  0010AA                     
  2133                           ;ready_queue.c: 36:     temp = ready_queue[idx];
  2134  0010AA  C0D8  F0CB         	movff	dequeue@idx,___wmul@multiplier
  2135  0010AE  C0D9  F0CC         	movff	dequeue@idx+1,___wmul@multiplier+1
  2136  0010B2  0E00               	movlw	0
  2137  0010B4  0100               	movlb	0	; () banked
  2138  0010B6  6FCE               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2139  0010B8  0E05               	movlw	5
  2140  0010BA  6FCD               	movwf	___wmul@multiplicand& (0+255),b
  2141  0010BC  EC66  F009         	call	___wmul	;wreg free
  2142  0010C0  0E60               	movlw	low _ready_queue
  2143  0010C2  0100               	movlb	0	; () banked
  2144  0010C4  25CB               	addwf	?___wmul& (0+255),w,b
  2145  0010C6  6ED9               	movwf	fsr2l,c
  2146  0010C8  0E00               	movlw	high _ready_queue
  2147  0010CA  21CC               	addwfc	(?___wmul+1)& (0+255),w,b
  2148  0010CC  6EDA               	movwf	fsr2h,c
  2149  0010CE  EE10  F0DA         	lfsr	1,dequeue@temp
  2150  0010D2  0E04               	movlw	4
  2151  0010D4                     u1881:
  2152  0010D4  CFDB FFE3          	movff	plusw2,plusw1
  2153  0010D8  06E8               	decf	wreg,f,c
  2154  0010DA  E2FC               	bc	u1881
  2155  0010DC  EF35  F008         	goto	l1935
  2156  0010E0                     l123:
  2157  0010E0  0012               	return		;funcret
  2158  0010E2                     __end_of_dequeue:
  2159                           	opt callstack 0
  2160                           
  2161 ;; *************** function _isEmptyQueue *****************
  2162 ;; Defined at:
  2163 ;;		line 11 in file "ready_queue.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;		None
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;		None
  2168 ;; Return value:  Size  Location     Type
  2169 ;;                  1    wreg      unsigned char 
  2170 ;; Registers used:
  2171 ;;		wreg, status,2, status,0, cstack
  2172 ;; Tracked objects:
  2173 ;;		On entry : 0/0
  2174 ;;		On exit  : 0/0
  2175 ;;		Unchanged: 0/0
  2176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2181 ;;Total ram usage:        0 bytes
  2182 ;; Hardware stack levels used:    1
  2183 ;; Hardware stack levels required when called:    8
  2184 ;; This function calls:
  2185 ;;		_getSizeQueue
  2186 ;; This function is called by:
  2187 ;;		_dequeue
  2188 ;;		_selectReadyTask
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           	psect	text13
  2193  00126C                     __ptext13:
  2194                           	opt callstack 0
  2195  00126C                     _isEmptyQueue:
  2196                           	opt callstack 20
  2197  00126C                     
  2198                           ;ready_queue.c: 12:     if(front == -1)
  2199  00126C  2843               	incf	_front^0,w,c
  2200  00126E  E106               	bnz	u1651
  2201  001270  2844               	incf	(_front+1)^0,w,c
  2202  001272  A4D8               	btfss	status,2,c
  2203  001274  EF3E  F009         	goto	u1651
  2204  001278  EF40  F009         	goto	u1650
  2205  00127C                     u1651:
  2206  00127C  EF43  F009         	goto	l1897
  2207  001280                     u1650:
  2208  001280                     
  2209                           ;ready_queue.c: 13:         return 0;
  2210  001280  0E00               	movlw	0
  2211  001282  EF4F  F009         	goto	l114
  2212  001286                     l1897:
  2213                           
  2214                           ;ready_queue.c: 14:     return getSizeQueue() == 0 ? 1 : 0;
  2215  001286  EC50  F009         	call	_getSizeQueue	;wreg free
  2216  00128A  0900               	iorlw	0
  2217  00128C  B4D8               	btfsc	status,2,c
  2218  00128E  EF4B  F009         	goto	u1661
  2219  001292  EF4E  F009         	goto	u1660
  2220  001296                     u1661:
  2221  001296  0E01               	movlw	1
  2222  001298  EF4F  F009         	goto	u1670
  2223  00129C                     u1660:
  2224  00129C  0E00               	movlw	0
  2225  00129E                     u1670:
  2226  00129E                     l114:
  2227  00129E  0012               	return		;funcret
  2228  0012A0                     __end_of_isEmptyQueue:
  2229                           	opt callstack 0
  2230                           
  2231 ;; *************** function _getSizeQueue *****************
  2232 ;; Defined at:
  2233 ;;		line 3 in file "ready_queue.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;		None
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;		None
  2238 ;; Return value:  Size  Location     Type
  2239 ;;                  1    wreg      unsigned char 
  2240 ;; Registers used:
  2241 ;;		wreg, status,2, status,0, cstack
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2249 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2250 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2251 ;;Total ram usage:        2 bytes
  2252 ;; Hardware stack levels used:    1
  2253 ;; Hardware stack levels required when called:    7
  2254 ;; This function calls:
  2255 ;;		___awmod
  2256 ;; This function is called by:
  2257 ;;		_isEmptyQueue
  2258 ;; This function uses a non-reentrant model
  2259 ;;
  2260                           
  2261                           	psect	text14
  2262  0012A0                     __ptext14:
  2263                           	opt callstack 0
  2264  0012A0                     _getSizeQueue:
  2265                           	opt callstack 20
  2266  0012A0                     
  2267                           ;ready_queue.c: 4:     return (rear - front + 1 + 20) % 20;
  2268  0012A0  5043               	movf	_front^0,w,c
  2269  0012A2  5C41               	subwf	_rear^0,w,c
  2270  0012A4  0100               	movlb	0	; () banked
  2271  0012A6  6FD1               	movwf	??_getSizeQueue& (0+255),b
  2272  0012A8  5044               	movf	(_front+1)^0,w,c
  2273  0012AA  5842               	subwfb	(_rear+1)^0,w,c
  2274  0012AC  6FD2               	movwf	(??_getSizeQueue+1)& (0+255),b
  2275  0012AE  0E15               	movlw	21
  2276  0012B0  25D1               	addwf	??_getSizeQueue& (0+255),w,b
  2277  0012B2  6FCB               	movwf	___awmod@dividend& (0+255),b
  2278  0012B4  0E00               	movlw	0
  2279  0012B6  21D2               	addwfc	(??_getSizeQueue+1)& (0+255),w,b
  2280  0012B8  6FCC               	movwf	(___awmod@dividend+1)& (0+255),b
  2281  0012BA  0E00               	movlw	0
  2282  0012BC  6FCE               	movwf	(___awmod@divisor+1)& (0+255),b
  2283  0012BE  0E14               	movlw	20
  2284  0012C0  6FCD               	movwf	___awmod@divisor& (0+255),b
  2285  0012C2  ECC2  F006         	call	___awmod	;wreg free
  2286  0012C6  0100               	movlb	0	; () banked
  2287  0012C8  51CB               	movf	?___awmod& (0+255),w,b
  2288  0012CA                     
  2289                           ; BSR set to: 0
  2290  0012CA  0012               	return		;funcret
  2291  0012CC                     __end_of_getSizeQueue:
  2292                           	opt callstack 0
  2293                           
  2294 ;; *************** function ___awmod *****************
  2295 ;; Defined at:
  2296 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;  dividend        2    0[BANK0 ] int 
  2299 ;;  divisor         2    2[BANK0 ] int 
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;  sign            1    5[BANK0 ] unsigned char 
  2302 ;;  counter         1    4[BANK0 ] unsigned char 
  2303 ;; Return value:  Size  Location     Type
  2304 ;;                  2    0[BANK0 ] int 
  2305 ;; Registers used:
  2306 ;;		wreg, status,2, status,0
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2312 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2313 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2315 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2316 ;;Total ram usage:        6 bytes
  2317 ;; Hardware stack levels used:    1
  2318 ;; Hardware stack levels required when called:    6
  2319 ;; This function calls:
  2320 ;;		Nothing
  2321 ;; This function is called by:
  2322 ;;		_getSizeQueue
  2323 ;;		_dequeue
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           	psect	text15
  2328  000D84                     __ptext15:
  2329                           	opt callstack 0
  2330  000D84                     ___awmod:
  2331                           	opt callstack 20
  2332  000D84  0E00               	movlw	0
  2333  000D86  0100               	movlb	0	; () banked
  2334  000D88  6FD0               	movwf	___awmod@sign& (0+255),b
  2335  000D8A                     
  2336                           ; BSR set to: 0
  2337  000D8A  BFCC               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  2338  000D8C  EFCC  F006         	goto	u1590
  2339  000D90  EFCA  F006         	goto	u1591
  2340  000D94                     u1591:
  2341  000D94  EFD2  F006         	goto	l1859
  2342  000D98                     u1590:
  2343  000D98                     
  2344                           ; BSR set to: 0
  2345  000D98  6DCB               	negf	___awmod@dividend& (0+255),b
  2346  000D9A  1FCC               	comf	(___awmod@dividend+1)& (0+255),f,b
  2347  000D9C  B0D8               	btfsc	status,0,c
  2348  000D9E  2BCC               	incf	(___awmod@dividend+1)& (0+255),f,b
  2349  000DA0                     
  2350                           ; BSR set to: 0
  2351  000DA0  0E01               	movlw	1
  2352  000DA2  6FD0               	movwf	___awmod@sign& (0+255),b
  2353  000DA4                     l1859:
  2354                           
  2355                           ; BSR set to: 0
  2356  000DA4  BFCE               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  2357  000DA6  EFD9  F006         	goto	u1600
  2358  000DAA  EFD7  F006         	goto	u1601
  2359  000DAE                     u1601:
  2360  000DAE  EFDD  F006         	goto	l1863
  2361  000DB2                     u1600:
  2362  000DB2                     
  2363                           ; BSR set to: 0
  2364  000DB2  6DCD               	negf	___awmod@divisor& (0+255),b
  2365  000DB4  1FCE               	comf	(___awmod@divisor+1)& (0+255),f,b
  2366  000DB6  B0D8               	btfsc	status,0,c
  2367  000DB8  2BCE               	incf	(___awmod@divisor+1)& (0+255),f,b
  2368  000DBA                     l1863:
  2369                           
  2370                           ; BSR set to: 0
  2371  000DBA  51CD               	movf	___awmod@divisor& (0+255),w,b
  2372  000DBC  11CE               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  2373  000DBE  B4D8               	btfsc	status,2,c
  2374  000DC0  EFE4  F006         	goto	u1611
  2375  000DC4  EFE6  F006         	goto	u1610
  2376  000DC8                     u1611:
  2377  000DC8  EF0A  F007         	goto	l1879
  2378  000DCC                     u1610:
  2379  000DCC                     
  2380                           ; BSR set to: 0
  2381  000DCC  0E01               	movlw	1
  2382  000DCE  6FCF               	movwf	___awmod@counter& (0+255),b
  2383  000DD0  EFEE  F006         	goto	l1869
  2384  000DD4                     l1867:
  2385                           
  2386                           ; BSR set to: 0
  2387  000DD4  90D8               	bcf	status,0,c
  2388  000DD6  37CD               	rlcf	___awmod@divisor& (0+255),f,b
  2389  000DD8  37CE               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  2390  000DDA  2BCF               	incf	___awmod@counter& (0+255),f,b
  2391  000DDC                     l1869:
  2392                           
  2393                           ; BSR set to: 0
  2394  000DDC  AFCE               	btfss	(___awmod@divisor+1)& (0+255),7,b
  2395  000DDE  EFF3  F006         	goto	u1621
  2396  000DE2  EFF5  F006         	goto	u1620
  2397  000DE6                     u1621:
  2398  000DE6  EFEA  F006         	goto	l1867
  2399  000DEA                     u1620:
  2400  000DEA                     l1871:
  2401                           
  2402                           ; BSR set to: 0
  2403  000DEA  51CD               	movf	___awmod@divisor& (0+255),w,b
  2404  000DEC  5DCB               	subwf	___awmod@dividend& (0+255),w,b
  2405  000DEE  51CE               	movf	(___awmod@divisor+1)& (0+255),w,b
  2406  000DF0  59CC               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  2407  000DF2  A0D8               	btfss	status,0,c
  2408  000DF4  EFFE  F006         	goto	u1631
  2409  000DF8  EF00  F007         	goto	u1630
  2410  000DFC                     u1631:
  2411  000DFC  EF04  F007         	goto	l1875
  2412  000E00                     u1630:
  2413  000E00                     
  2414                           ; BSR set to: 0
  2415  000E00  51CD               	movf	___awmod@divisor& (0+255),w,b
  2416  000E02  5FCB               	subwf	___awmod@dividend& (0+255),f,b
  2417  000E04  51CE               	movf	(___awmod@divisor+1)& (0+255),w,b
  2418  000E06  5BCC               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  2419  000E08                     l1875:
  2420                           
  2421                           ; BSR set to: 0
  2422  000E08  90D8               	bcf	status,0,c
  2423  000E0A  33CE               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  2424  000E0C  33CD               	rrcf	___awmod@divisor& (0+255),f,b
  2425  000E0E                     
  2426                           ; BSR set to: 0
  2427  000E0E  2FCF               	decfsz	___awmod@counter& (0+255),f,b
  2428  000E10  EFF5  F006         	goto	l1871
  2429  000E14                     l1879:
  2430                           
  2431                           ; BSR set to: 0
  2432  000E14  51D0               	movf	___awmod@sign& (0+255),w,b
  2433  000E16  B4D8               	btfsc	status,2,c
  2434  000E18  EF10  F007         	goto	u1641
  2435  000E1C  EF12  F007         	goto	u1640
  2436  000E20                     u1641:
  2437  000E20  EF16  F007         	goto	l1883
  2438  000E24                     u1640:
  2439  000E24                     
  2440                           ; BSR set to: 0
  2441  000E24  6DCB               	negf	___awmod@dividend& (0+255),b
  2442  000E26  1FCC               	comf	(___awmod@dividend+1)& (0+255),f,b
  2443  000E28  B0D8               	btfsc	status,0,c
  2444  000E2A  2BCC               	incf	(___awmod@dividend+1)& (0+255),f,b
  2445  000E2C                     l1883:
  2446                           
  2447                           ; BSR set to: 0
  2448  000E2C  C0CB  F0CB         	movff	___awmod@dividend,?___awmod
  2449  000E30  C0CC  F0CC         	movff	___awmod@dividend+1,?___awmod+1
  2450  000E34                     
  2451                           ; BSR set to: 0
  2452  000E34  0012               	return		;funcret
  2453  000E36                     __end_of___awmod:
  2454                           	opt callstack 0
  2455                           
  2456 ;; *************** function ___wmul *****************
  2457 ;; Defined at:
  2458 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2461 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;  product         2    4[BANK0 ] unsigned int 
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  2    0[BANK0 ] unsigned int 
  2466 ;; Registers used:
  2467 ;;		wreg, status,2, status,0, prodl, prodh
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2473 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2474 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2476 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2477 ;;Total ram usage:        6 bytes
  2478 ;; Hardware stack levels used:    1
  2479 ;; Hardware stack levels required when called:    6
  2480 ;; This function calls:
  2481 ;;		Nothing
  2482 ;; This function is called by:
  2483 ;;		_dequeue
  2484 ;;		_initializeTaskList
  2485 ;;		_addTask
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489                           	psect	text16
  2490  0012CC                     __ptext16:
  2491                           	opt callstack 0
  2492  0012CC                     ___wmul:
  2493                           	opt callstack 21
  2494  0012CC  0100               	movlb	0	; () banked
  2495  0012CE  51CB               	movf	___wmul@multiplier& (0+255),w,b
  2496  0012D0  03CD               	mulwf	___wmul@multiplicand& (0+255),b
  2497  0012D2  CFF3 F0CF          	movff	prodl,___wmul@product
  2498  0012D6  CFF4 F0D0          	movff	prodh,___wmul@product+1
  2499  0012DA  51CB               	movf	___wmul@multiplier& (0+255),w,b
  2500  0012DC  03CE               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  2501  0012DE  50F3               	movf	243,w,c
  2502  0012E0  27D0               	addwf	(___wmul@product+1)& (0+255),f,b
  2503  0012E2  51CC               	movf	(___wmul@multiplier+1)& (0+255),w,b
  2504  0012E4  03CD               	mulwf	___wmul@multiplicand& (0+255),b
  2505  0012E6  50F3               	movf	243,w,c
  2506  0012E8  27D0               	addwf	(___wmul@product+1)& (0+255),f,b
  2507  0012EA                     
  2508                           ; BSR set to: 0
  2509  0012EA  C0CF  F0CB         	movff	___wmul@product,?___wmul
  2510  0012EE  C0D0  F0CC         	movff	___wmul@product+1,?___wmul+1
  2511  0012F2                     
  2512                           ; BSR set to: 0
  2513  0012F2  0012               	return		;funcret
  2514  0012F4                     __end_of___wmul:
  2515                           	opt callstack 0
  2516                           
  2517 ;; *************** function _blink_LED4 *****************
  2518 ;; Defined at:
  2519 ;;		line 42 in file "main.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;		None
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;		None
  2524 ;; Return value:  Size  Location     Type
  2525 ;;                  1    wreg      void 
  2526 ;; Registers used:
  2527 ;;		wreg, status,2, status,0
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2533 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2536 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2537 ;;Total ram usage:        2 bytes
  2538 ;; Hardware stack levels used:    1
  2539 ;; Hardware stack levels required when called:    6
  2540 ;; This function calls:
  2541 ;;		Nothing
  2542 ;; This function is called by:
  2543 ;;		_main
  2544 ;;		_selectReadyTask
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           	psect	text17
  2549  00131C                     __ptext17:
  2550                           	opt callstack 0
  2551  00131C                     _blink_LED4:
  2552                           	opt callstack 22
  2553  00131C                     
  2554                           ;main.c: 43:     LED_state[4] = !LED_state[4];
  2555  00131C  5036               	movf	(_LED_state+8)^0,w,c
  2556  00131E  1037               	iorwf	(_LED_state+9)^0,w,c
  2557  001320  B4D8               	btfsc	status,2,c
  2558  001322  EF95  F009         	goto	u1801
  2559  001326  EF98  F009         	goto	u1800
  2560  00132A                     u1801:
  2561  00132A  0E01               	movlw	1
  2562  00132C  EF99  F009         	goto	u1810
  2563  001330                     u1800:
  2564  001330  0E00               	movlw	0
  2565  001332                     u1810:
  2566  001332  6E36               	movwf	(_LED_state+8)^0,c
  2567  001334  6A37               	clrf	(_LED_state+9)^0,c
  2568  001336                     
  2569                           ;main.c: 44:     LATDbits.LATD4 = LED_state[4];
  2570  001336  B036               	btfsc	(_LED_state+8)^0,0,c
  2571  001338  D002               	bra	u1825
  2572  00133A  988C               	bcf	140,4,c	;volatile
  2573  00133C  D001               	bra	u1826
  2574  00133E                     u1825:
  2575  00133E  888C               	bsf	140,4,c	;volatile
  2576  001340                     u1826:
  2577  001340  0012               	return		;funcret
  2578  001342                     __end_of_blink_LED4:
  2579                           	opt callstack 0
  2580                           
  2581 ;; *************** function _blink_LED3 *****************
  2582 ;; Defined at:
  2583 ;;		line 38 in file "main.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;		None
  2586 ;; Auto vars:     Size  Location     Type
  2587 ;;		None
  2588 ;; Return value:  Size  Location     Type
  2589 ;;                  1    wreg      void 
  2590 ;; Registers used:
  2591 ;;		wreg, status,2, status,0
  2592 ;; Tracked objects:
  2593 ;;		On entry : 0/0
  2594 ;;		On exit  : 0/0
  2595 ;;		Unchanged: 0/0
  2596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2597 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2600 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2601 ;;Total ram usage:        2 bytes
  2602 ;; Hardware stack levels used:    1
  2603 ;; Hardware stack levels required when called:    6
  2604 ;; This function calls:
  2605 ;;		Nothing
  2606 ;; This function is called by:
  2607 ;;		_main
  2608 ;;		_selectReadyTask
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612                           	psect	text18
  2613  001342                     __ptext18:
  2614                           	opt callstack 0
  2615  001342                     _blink_LED3:
  2616                           	opt callstack 22
  2617  001342                     
  2618                           ;main.c: 39:     LED_state[3] = !LED_state[3];
  2619  001342  5034               	movf	(_LED_state+6)^0,w,c
  2620  001344  1035               	iorwf	(_LED_state+7)^0,w,c
  2621  001346  B4D8               	btfsc	status,2,c
  2622  001348  EFA8  F009         	goto	u1771
  2623  00134C  EFAB  F009         	goto	u1770
  2624  001350                     u1771:
  2625  001350  0E01               	movlw	1
  2626  001352  EFAC  F009         	goto	u1780
  2627  001356                     u1770:
  2628  001356  0E00               	movlw	0
  2629  001358                     u1780:
  2630  001358  6E34               	movwf	(_LED_state+6)^0,c
  2631  00135A  6A35               	clrf	(_LED_state+7)^0,c
  2632  00135C                     
  2633                           ;main.c: 40:     LATDbits.LATD3 = LED_state[3];
  2634  00135C  B034               	btfsc	(_LED_state+6)^0,0,c
  2635  00135E  D002               	bra	u1795
  2636  001360  968C               	bcf	140,3,c	;volatile
  2637  001362  D001               	bra	u1796
  2638  001364                     u1795:
  2639  001364  868C               	bsf	140,3,c	;volatile
  2640  001366                     u1796:
  2641  001366  0012               	return		;funcret
  2642  001368                     __end_of_blink_LED3:
  2643                           	opt callstack 0
  2644                           
  2645 ;; *************** function _blink_LED2 *****************
  2646 ;; Defined at:
  2647 ;;		line 34 in file "main.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;		None
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;		None
  2652 ;; Return value:  Size  Location     Type
  2653 ;;                  1    wreg      void 
  2654 ;; Registers used:
  2655 ;;		wreg, status,2, status,0
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2661 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2664 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2665 ;;Total ram usage:        2 bytes
  2666 ;; Hardware stack levels used:    1
  2667 ;; Hardware stack levels required when called:    6
  2668 ;; This function calls:
  2669 ;;		Nothing
  2670 ;; This function is called by:
  2671 ;;		_main
  2672 ;;		_selectReadyTask
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           	psect	text19
  2677  001368                     __ptext19:
  2678                           	opt callstack 0
  2679  001368                     _blink_LED2:
  2680                           	opt callstack 22
  2681  001368                     
  2682                           ;main.c: 35:     LED_state[2] = !LED_state[2];
  2683  001368  5032               	movf	(_LED_state+4)^0,w,c
  2684  00136A  1033               	iorwf	(_LED_state+5)^0,w,c
  2685  00136C  B4D8               	btfsc	status,2,c
  2686  00136E  EFBB  F009         	goto	u1741
  2687  001372  EFBE  F009         	goto	u1740
  2688  001376                     u1741:
  2689  001376  0E01               	movlw	1
  2690  001378  EFBF  F009         	goto	u1750
  2691  00137C                     u1740:
  2692  00137C  0E00               	movlw	0
  2693  00137E                     u1750:
  2694  00137E  6E32               	movwf	(_LED_state+4)^0,c
  2695  001380  6A33               	clrf	(_LED_state+5)^0,c
  2696  001382                     
  2697                           ;main.c: 36:     LATDbits.LATD2 = LED_state[2];
  2698  001382  B032               	btfsc	(_LED_state+4)^0,0,c
  2699  001384  D002               	bra	u1765
  2700  001386  948C               	bcf	140,2,c	;volatile
  2701  001388  D001               	bra	u1766
  2702  00138A                     u1765:
  2703  00138A  848C               	bsf	140,2,c	;volatile
  2704  00138C                     u1766:
  2705  00138C  0012               	return		;funcret
  2706  00138E                     __end_of_blink_LED2:
  2707                           	opt callstack 0
  2708                           
  2709 ;; *************** function _blink_LED1 *****************
  2710 ;; Defined at:
  2711 ;;		line 29 in file "main.c"
  2712 ;; Parameters:    Size  Location     Type
  2713 ;;		None
  2714 ;; Auto vars:     Size  Location     Type
  2715 ;;		None
  2716 ;; Return value:  Size  Location     Type
  2717 ;;                  1    wreg      void 
  2718 ;; Registers used:
  2719 ;;		wreg, status,2, status,0
  2720 ;; Tracked objects:
  2721 ;;		On entry : 0/0
  2722 ;;		On exit  : 0/0
  2723 ;;		Unchanged: 0/0
  2724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2725 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2728 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2729 ;;Total ram usage:        2 bytes
  2730 ;; Hardware stack levels used:    1
  2731 ;; Hardware stack levels required when called:    6
  2732 ;; This function calls:
  2733 ;;		Nothing
  2734 ;; This function is called by:
  2735 ;;		_main
  2736 ;;		_selectReadyTask
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740                           	psect	text20
  2741  00138E                     __ptext20:
  2742                           	opt callstack 0
  2743  00138E                     _blink_LED1:
  2744                           	opt callstack 22
  2745  00138E                     
  2746                           ;main.c: 30:     LED_state[1] = !LED_state[1];
  2747  00138E  5030               	movf	(_LED_state+2)^0,w,c
  2748  001390  1031               	iorwf	(_LED_state+3)^0,w,c
  2749  001392  B4D8               	btfsc	status,2,c
  2750  001394  EFCE  F009         	goto	u1711
  2751  001398  EFD1  F009         	goto	u1710
  2752  00139C                     u1711:
  2753  00139C  0E01               	movlw	1
  2754  00139E  EFD2  F009         	goto	u1720
  2755  0013A2                     u1710:
  2756  0013A2  0E00               	movlw	0
  2757  0013A4                     u1720:
  2758  0013A4  6E30               	movwf	(_LED_state+2)^0,c
  2759  0013A6  6A31               	clrf	(_LED_state+3)^0,c
  2760  0013A8                     
  2761                           ;main.c: 31:     LATDbits.LATD1 = LED_state[1];
  2762  0013A8  B030               	btfsc	(_LED_state+2)^0,0,c
  2763  0013AA  D002               	bra	u1735
  2764  0013AC  928C               	bcf	140,1,c	;volatile
  2765  0013AE  D001               	bra	u1736
  2766  0013B0                     u1735:
  2767  0013B0  828C               	bsf	140,1,c	;volatile
  2768  0013B2                     u1736:
  2769  0013B2  0012               	return		;funcret
  2770  0013B4                     __end_of_blink_LED1:
  2771                           	opt callstack 0
  2772                           
  2773 ;; *************** function _blink_LED0 *****************
  2774 ;; Defined at:
  2775 ;;		line 24 in file "main.c"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;		None
  2778 ;; Auto vars:     Size  Location     Type
  2779 ;;		None
  2780 ;; Return value:  Size  Location     Type
  2781 ;;                  1    wreg      void 
  2782 ;; Registers used:
  2783 ;;		wreg, status,2, status,0
  2784 ;; Tracked objects:
  2785 ;;		On entry : 0/0
  2786 ;;		On exit  : 0/0
  2787 ;;		Unchanged: 0/0
  2788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2789 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2792 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2793 ;;Total ram usage:        2 bytes
  2794 ;; Hardware stack levels used:    1
  2795 ;; Hardware stack levels required when called:    6
  2796 ;; This function calls:
  2797 ;;		Nothing
  2798 ;; This function is called by:
  2799 ;;		_main
  2800 ;;		_selectReadyTask
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           	psect	text21
  2805  0013B4                     __ptext21:
  2806                           	opt callstack 0
  2807  0013B4                     _blink_LED0:
  2808                           	opt callstack 22
  2809  0013B4                     
  2810                           ;main.c: 25:     LED_state[0] = !LED_state[0];
  2811  0013B4  502E               	movf	_LED_state^0,w,c
  2812  0013B6  102F               	iorwf	(_LED_state+1)^0,w,c
  2813  0013B8  B4D8               	btfsc	status,2,c
  2814  0013BA  EFE1  F009         	goto	u1681
  2815  0013BE  EFE4  F009         	goto	u1680
  2816  0013C2                     u1681:
  2817  0013C2  0E01               	movlw	1
  2818  0013C4  EFE5  F009         	goto	u1690
  2819  0013C8                     u1680:
  2820  0013C8  0E00               	movlw	0
  2821  0013CA                     u1690:
  2822  0013CA  6E2E               	movwf	_LED_state^0,c
  2823  0013CC  6A2F               	clrf	(_LED_state+1)^0,c
  2824  0013CE                     
  2825                           ;main.c: 26:     LATDbits.LATD0 = LED_state[0];
  2826  0013CE  B02E               	btfsc	_LED_state^0,0,c
  2827  0013D0  D002               	bra	u1705
  2828  0013D2  908C               	bcf	140,0,c	;volatile
  2829  0013D4  D001               	bra	u1706
  2830  0013D6                     u1705:
  2831  0013D6  808C               	bsf	140,0,c	;volatile
  2832  0013D8                     u1706:
  2833  0013D8  0012               	return		;funcret
  2834  0013DA                     __end_of_blink_LED0:
  2835                           	opt callstack 0
  2836                           
  2837 ;; *************** function _blink_LED5 *****************
  2838 ;; Defined at:
  2839 ;;		line 46 in file "main.c"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;		None
  2842 ;; Auto vars:     Size  Location     Type
  2843 ;;		None
  2844 ;; Return value:  Size  Location     Type
  2845 ;;                  1    wreg      void 
  2846 ;; Registers used:
  2847 ;;		wreg, status,2, status,0
  2848 ;; Tracked objects:
  2849 ;;		On entry : 0/0
  2850 ;;		On exit  : 0/0
  2851 ;;		Unchanged: 0/0
  2852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2853 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2856 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2857 ;;Total ram usage:        2 bytes
  2858 ;; Hardware stack levels used:    1
  2859 ;; Hardware stack levels required when called:    6
  2860 ;; This function calls:
  2861 ;;		Nothing
  2862 ;; This function is called by:
  2863 ;;		_main
  2864 ;;		_selectReadyTask
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           	psect	text22
  2869  0013DA                     __ptext22:
  2870                           	opt callstack 0
  2871  0013DA                     _blink_LED5:
  2872                           	opt callstack 22
  2873  0013DA                     
  2874                           ;main.c: 47:     LED_state[5] = !LED_state[5];
  2875  0013DA  5038               	movf	(_LED_state+10)^0,w,c
  2876  0013DC  1039               	iorwf	(_LED_state+11)^0,w,c
  2877  0013DE  B4D8               	btfsc	status,2,c
  2878  0013E0  EFF4  F009         	goto	u1831
  2879  0013E4  EFF7  F009         	goto	u1830
  2880  0013E8                     u1831:
  2881  0013E8  0E01               	movlw	1
  2882  0013EA  EFF8  F009         	goto	u1840
  2883  0013EE                     u1830:
  2884  0013EE  0E00               	movlw	0
  2885  0013F0                     u1840:
  2886  0013F0  6E38               	movwf	(_LED_state+10)^0,c
  2887  0013F2  6A39               	clrf	(_LED_state+11)^0,c
  2888  0013F4                     
  2889                           ;main.c: 48:     LATDbits.LATD5 = LED_state[5];
  2890  0013F4  B038               	btfsc	(_LED_state+10)^0,0,c
  2891  0013F6  D002               	bra	u1855
  2892  0013F8  9A8C               	bcf	140,5,c	;volatile
  2893  0013FA  D001               	bra	u1856
  2894  0013FC                     u1855:
  2895  0013FC  8A8C               	bsf	140,5,c	;volatile
  2896  0013FE                     u1856:
  2897  0013FE  0012               	return		;funcret
  2898  001400                     __end_of_blink_LED5:
  2899                           	opt callstack 0
  2900                           
  2901 ;; *************** function _timer_interrupt *****************
  2902 ;; Defined at:
  2903 ;;		line 53 in file "clock.c"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;		None
  2906 ;; Auto vars:     Size  Location     Type
  2907 ;;		None
  2908 ;; Return value:  Size  Location     Type
  2909 ;;                  1    wreg      void 
  2910 ;; Registers used:
  2911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2912 ;; Tracked objects:
  2913 ;;		On entry : 0/0
  2914 ;;		On exit  : 0/0
  2915 ;;		Unchanged: 0/0
  2916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2919 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2920 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2921 ;;Total ram usage:        6 bytes
  2922 ;; Hardware stack levels used:    1
  2923 ;; Hardware stack levels required when called:    5
  2924 ;; This function calls:
  2925 ;;		_handleListHead
  2926 ;; This function is called by:
  2927 ;;		Interrupt level 2
  2928 ;; This function uses a non-reentrant model
  2929 ;;
  2930                           
  2931                           	psect	intcode
  2932  000008                     __pintcode:
  2933                           	opt callstack 0
  2934  000008                     _timer_interrupt:
  2935                           	opt callstack 19
  2936                           
  2937                           ;incstack = 0
  2938  000008  8245               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2939  00000A  ED1B  F007         	call	int_func,f	;refresh shadow registers
  2940                           
  2941                           	psect	intcode_body
  2942  000E36                     __pintcode_body:
  2943                           	opt callstack 19
  2944  000E36                     int_func:
  2945                           	opt callstack 19
  2946  000E36  0006               	pop		; remove dummy address from shadow register refresh
  2947  000E38  CFE1 F028          	movff	fsr1l,??_timer_interrupt
  2948  000E3C  CFE2 F029          	movff	fsr1h,??_timer_interrupt+1
  2949  000E40  CFD9 F02A          	movff	fsr2l,??_timer_interrupt+2
  2950  000E44  CFDA F02B          	movff	fsr2h,??_timer_interrupt+3
  2951  000E48  CFF3 F02C          	movff	prodl,??_timer_interrupt+4
  2952  000E4C  CFF4 F02D          	movff	prodh,??_timer_interrupt+5
  2953  000E50                     
  2954                           ;clock.c: 54:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF) {
  2955  000E50  AAF2               	btfss	242,5,c	;volatile
  2956  000E52  EF2D  F007         	goto	i2u154_41
  2957  000E56  EF2F  F007         	goto	i2u154_40
  2958  000E5A                     i2u154_41:
  2959  000E5A  EF40  F007         	goto	i2l1805
  2960  000E5E                     i2u154_40:
  2961  000E5E  A4F2               	btfss	242,2,c	;volatile
  2962  000E60  EF34  F007         	goto	i2u155_41
  2963  000E64  EF36  F007         	goto	i2u155_40
  2964  000E68                     i2u155_41:
  2965  000E68  EF40  F007         	goto	i2l1805
  2966  000E6C                     i2u155_40:
  2967  000E6C                     
  2968                           ;clock.c: 55:         INTCONbits.TMR0IF = 0;
  2969  000E6C  94F2               	bcf	242,2,c	;volatile
  2970  000E6E                     
  2971                           ;clock.c: 56:         TMR0L = 131;
  2972  000E6E  0E83               	movlw	131
  2973  000E70  6ED6               	movwf	214,c	;volatile
  2974  000E72                     
  2975                           ;clock.c: 57:         time_ms++;
  2976  000E72  0E01               	movlw	1
  2977  000E74  0100               	movlb	0	; () banked
  2978  000E76  27C4               	addwf	_time_ms& (0+255),f,b
  2979  000E78  0E00               	movlw	0
  2980  000E7A  23C5               	addwfc	(_time_ms+1)& (0+255),f,b
  2981  000E7C  23C6               	addwfc	(_time_ms+2)& (0+255),f,b
  2982  000E7E  23C7               	addwfc	(_time_ms+3)& (0+255),f,b
  2983  000E80                     i2l1805:
  2984                           
  2985                           ;clock.c: 59:     if(PIE1bits.TMR1IE && PIR1bits.TMR1IF) {
  2986  000E80  A09D               	btfss	157,0,c	;volatile
  2987  000E82  EF45  F007         	goto	i2u156_41
  2988  000E86  EF47  F007         	goto	i2u156_40
  2989  000E8A                     i2u156_41:
  2990  000E8A  EF65  F007         	goto	i2l286
  2991  000E8E                     i2u156_40:
  2992  000E8E  A09E               	btfss	158,0,c	;volatile
  2993  000E90  EF4C  F007         	goto	i2u157_41
  2994  000E94  EF4E  F007         	goto	i2u157_40
  2995  000E98                     i2u157_41:
  2996  000E98  EF65  F007         	goto	i2l286
  2997  000E9C                     i2u157_40:
  2998  000E9C                     
  2999                           ;clock.c: 60:         PIR1bits.TMR1IF = 0;
  3000  000E9C  909E               	bcf	158,0,c	;volatile
  3001  000E9E                     
  3002                           ;clock.c: 61:         TMR1H = 0xB1;
  3003  000E9E  0EB1               	movlw	177
  3004  000EA0  6ECF               	movwf	207,c	;volatile
  3005                           
  3006                           ;clock.c: 62:         TMR1L = 0xE0;
  3007  000EA2  0EE0               	movlw	224
  3008  000EA4  6ECE               	movwf	206,c	;volatile
  3009  000EA6                     
  3010                           ;clock.c: 63:         handleListHead();
  3011  000EA6  EC09  F000         	call	_handleListHead	;wreg free
  3012  000EAA                     
  3013                           ;clock.c: 64:         count++;
  3014  000EAA  4A3E               	infsnz	_count^0,f,c
  3015  000EAC  2A3F               	incf	(_count+1)^0,f,c
  3016  000EAE                     
  3017                           ;clock.c: 65:         if(count == 100) {
  3018  000EAE  0E64               	movlw	100
  3019  000EB0  183E               	xorwf	_count^0,w,c
  3020  000EB2  103F               	iorwf	(_count+1)^0,w,c
  3021  000EB4  A4D8               	btfss	status,2,c
  3022  000EB6  EF5F  F007         	goto	i2u158_41
  3023  000EBA  EF61  F007         	goto	i2u158_40
  3024  000EBE                     i2u158_41:
  3025  000EBE  EF65  F007         	goto	i2l286
  3026  000EC2                     i2u158_40:
  3027  000EC2                     
  3028                           ;clock.c: 66:             count = 0;
  3029  000EC2  0E00               	movlw	0
  3030  000EC4  6E3F               	movwf	(_count+1)^0,c
  3031  000EC6  0E00               	movlw	0
  3032  000EC8  6E3E               	movwf	_count^0,c
  3033  000ECA                     i2l286:
  3034  000ECA  C02D  FFF4         	movff	??_timer_interrupt+5,prodh
  3035  000ECE  C02C  FFF3         	movff	??_timer_interrupt+4,prodl
  3036  000ED2  C02B  FFDA         	movff	??_timer_interrupt+3,fsr2h
  3037  000ED6  C02A  FFD9         	movff	??_timer_interrupt+2,fsr2l
  3038  000EDA  C029  FFE2         	movff	??_timer_interrupt+1,fsr1h
  3039  000EDE  C028  FFE1         	movff	??_timer_interrupt,fsr1l
  3040  000EE2  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3041  000EE4  0011               	retfie		f
  3042  000EE6                     __end_of_timer_interrupt:
  3043                           	opt callstack 0
  3044                           
  3045 ;; *************** function _handleListHead *****************
  3046 ;; Defined at:
  3047 ;;		line 84 in file "task.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;		None
  3050 ;; Auto vars:     Size  Location     Type
  3051 ;;  cur             2   35[COMRAM] int 
  3052 ;;  prev            2   33[COMRAM] int 
  3053 ;;  pos             2   37[COMRAM] int 
  3054 ;; Return value:  Size  Location     Type
  3055 ;;                  1    wreg      void 
  3056 ;; Registers used:
  3057 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3058 ;; Tracked objects:
  3059 ;;		On entry : 0/0
  3060 ;;		On exit  : 0/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3064 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3065 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3066 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3067 ;;Total ram usage:       25 bytes
  3068 ;; Hardware stack levels used:    1
  3069 ;; Hardware stack levels required when called:    4
  3070 ;; This function calls:
  3071 ;;		_enqueue
  3072 ;;		_removeTask
  3073 ;;		i2___wmul
  3074 ;; This function is called by:
  3075 ;;		_timer_interrupt
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079                           	psect	text24
  3080  000012                     __ptext24:
  3081                           	opt callstack 0
  3082  000012                     _handleListHead:
  3083                           	opt callstack 19
  3084  000012                     
  3085                           ;task.c: 85:     if(head == 105)
  3086  000012  0E69               	movlw	105
  3087  000014  0100               	movlb	0	; () banked
  3088  000016  19C8               	xorwf	_head& (0+255),w,b
  3089  000018  11C9               	iorwf	(_head+1)& (0+255),w,b
  3090  00001A  A4D8               	btfss	status,2,c
  3091  00001C  EF12  F000         	goto	i2u145_41
  3092  000020  EF14  F000         	goto	i2u145_40
  3093  000024                     i2u145_41:
  3094  000024  EF7F  F002         	goto	i2l190
  3095  000028                     i2u145_40:
  3096  000028  EFB0  F002         	goto	i2l189
  3097  00002C                     i2l191:
  3098                           
  3099                           ;task.c: 88:         int pos = head;
  3100  00002C  C0C8  F026         	movff	_head,handleListHead@pos
  3101  000030  C0C9  F027         	movff	_head+1,handleListHead@pos+1
  3102  000034                     
  3103                           ;task.c: 89:         enqueue(task_list[pos].func_ptr, task_list[pos].data_p);
  3104  000034  C026  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3105  000038  C027  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3106  00003C  0E00               	movlw	0
  3107  00003E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3108  000040  0E0F               	movlw	15
  3109  000042  6E03               	movwf	i2___wmul@multiplicand^0,c
  3110  000044  EC00  F00A         	call	i2___wmul	;wreg free
  3111  000048  0E00               	movlw	low (_task_list+8)
  3112  00004A  2401               	addwf	?i2___wmul^0,w,c
  3113  00004C  6ED9               	movwf	fsr2l,c
  3114  00004E  0E01               	movlw	high (_task_list+8)
  3115  000050  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3116  000052  6EDA               	movwf	fsr2h,c
  3117  000054  CFDE F01B          	movff	postinc2,_handleListHead$1173
  3118  000058  CFDE F01C          	movff	postinc2,_handleListHead$1173+1
  3119  00005C  CFDD F01D          	movff	postdec2,_handleListHead$1173+2
  3120                           
  3121                           ;task.c: 89:         enqueue(task_list[pos].func_ptr, task_list[pos].data_p);
  3122  000060  C026  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3123  000064  C027  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3124  000068  0E00               	movlw	0
  3125  00006A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3126  00006C  0E0F               	movlw	15
  3127  00006E  6E03               	movwf	i2___wmul@multiplicand^0,c
  3128  000070  EC00  F00A         	call	i2___wmul	;wreg free
  3129  000074  0E05               	movlw	low (_task_list+13)
  3130  000076  2401               	addwf	?i2___wmul^0,w,c
  3131  000078  6ED9               	movwf	fsr2l,c
  3132  00007A  0E01               	movlw	high (_task_list+13)
  3133  00007C  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3134  00007E  6EDA               	movwf	fsr2h,c
  3135  000080  CFDE F01E          	movff	postinc2,_handleListHead$1174
  3136  000084  CFDD F01F          	movff	postdec2,_handleListHead$1174+1
  3137                           
  3138                           ;task.c: 89:         enqueue(task_list[pos].func_ptr, task_list[pos].data_p);
  3139  000088  C01B  F00A         	movff	_handleListHead$1173,enqueue@ptr
  3140  00008C  C01C  F00B         	movff	_handleListHead$1173+1,enqueue@ptr+1
  3141  000090  C01D  F00C         	movff	_handleListHead$1173+2,enqueue@ptr+2
  3142  000094  C01E  F00D         	movff	_handleListHead$1174,enqueue@data
  3143  000098  C01F  F00E         	movff	_handleListHead$1174+1,enqueue@data+1
  3144  00009C  ECCB  F007         	call	_enqueue	;wreg free
  3145                           
  3146                           ;task.c: 90:         head = task_list[pos].next;
  3147  0000A0  C026  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3148  0000A4  C027  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3149  0000A8  0E00               	movlw	0
  3150  0000AA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3151  0000AC  0E0F               	movlw	15
  3152  0000AE  6E03               	movwf	i2___wmul@multiplicand^0,c
  3153  0000B0  EC00  F00A         	call	i2___wmul	;wreg free
  3154  0000B4  0E03               	movlw	low (_task_list+11)
  3155  0000B6  2401               	addwf	?i2___wmul^0,w,c
  3156  0000B8  6ED9               	movwf	fsr2l,c
  3157  0000BA  0E01               	movlw	high (_task_list+11)
  3158  0000BC  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3159  0000BE  6EDA               	movwf	fsr2h,c
  3160  0000C0  CFDE F0C8          	movff	postinc2,_head
  3161  0000C4  CFDD F0C9          	movff	postdec2,_head+1
  3162                           
  3163                           ;task.c: 91:         if(task_list[pos].period_t == 0) {
  3164  0000C8  C026  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3165  0000CC  C027  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3166  0000D0  0E00               	movlw	0
  3167  0000D2  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3168  0000D4  0E0F               	movlw	15
  3169  0000D6  6E03               	movwf	i2___wmul@multiplicand^0,c
  3170  0000D8  EC00  F00A         	call	i2___wmul	;wreg free
  3171  0000DC  0EFC               	movlw	low (_task_list+4)
  3172  0000DE  2401               	addwf	?i2___wmul^0,w,c
  3173  0000E0  6ED9               	movwf	fsr2l,c
  3174  0000E2  0E00               	movlw	high (_task_list+4)
  3175  0000E4  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3176  0000E6  6EDA               	movwf	fsr2h,c
  3177  0000E8  50DE               	movf	postinc2,w,c
  3178  0000EA  10DE               	iorwf	postinc2,w,c
  3179  0000EC  10DE               	iorwf	postinc2,w,c
  3180  0000EE  10DE               	iorwf	postinc2,w,c
  3181  0000F0  A4D8               	btfss	status,2,c
  3182  0000F2  EF7D  F000         	goto	i2u146_41
  3183  0000F6  EF7F  F000         	goto	i2u146_40
  3184  0000FA                     i2u146_41:
  3185  0000FA  EF84  F000         	goto	i2l1739
  3186  0000FE                     i2u146_40:
  3187  0000FE                     
  3188                           ;task.c: 92:             removeTask(pos);
  3189  0000FE  5026               	movf	handleListHead@pos^0,w,c
  3190  000100  ECAF  F004         	call	_removeTask
  3191                           
  3192                           ;task.c: 93:         }
  3193  000104  EF7F  F002         	goto	i2l190
  3194  000108                     i2l1739:
  3195                           
  3196                           ;task.c: 95:             task_list[pos].delay_t = task_list[pos].period_t;
  3197  000108  C026  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3198  00010C  C027  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3199  000110  0E00               	movlw	0
  3200  000112  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3201  000114  0E0F               	movlw	15
  3202  000116  6E03               	movwf	i2___wmul@multiplicand^0,c
  3203  000118  EC00  F00A         	call	i2___wmul	;wreg free
  3204  00011C  0EFC               	movlw	low (_task_list+4)
  3205  00011E  2401               	addwf	?i2___wmul^0,w,c
  3206  000120  6ED9               	movwf	fsr2l,c
  3207  000122  0E00               	movlw	high (_task_list+4)
  3208  000124  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3209  000126  6EDA               	movwf	fsr2h,c
  3210  000128  C026  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3211  00012C  C027  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3212  000130  0E00               	movlw	0
  3213  000132  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3214  000134  0E0F               	movlw	15
  3215  000136  6E03               	movwf	i2___wmul@multiplicand^0,c
  3216  000138  EC00  F00A         	call	i2___wmul	;wreg free
  3217  00013C  0EF8               	movlw	low _task_list
  3218  00013E  2401               	addwf	?i2___wmul^0,w,c
  3219  000140  6EE1               	movwf	fsr1l,c
  3220  000142  0E00               	movlw	high _task_list
  3221  000144  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3222  000146  6EE2               	movwf	fsr1h,c
  3223  000148  CFDE FFE6          	movff	postinc2,postinc1
  3224  00014C  CFDE FFE6          	movff	postinc2,postinc1
  3225  000150  CFDE FFE6          	movff	postinc2,postinc1
  3226  000154  CFDE FFE6          	movff	postinc2,postinc1
  3227  000158                     
  3228                           ;task.c: 96:             if(head == 105 || (head != 105 && task_list[head].delay_t > tas
      +                          k_list[pos].delay_t)) {
  3229  000158  0E69               	movlw	105
  3230  00015A  0100               	movlb	0	; () banked
  3231  00015C  19C8               	xorwf	_head& (0+255),w,b
  3232  00015E  11C9               	iorwf	(_head+1)& (0+255),w,b
  3233  000160  B4D8               	btfsc	status,2,c
  3234  000162  EFB5  F000         	goto	i2u147_41
  3235  000166  EFB7  F000         	goto	i2u147_40
  3236  00016A                     i2u147_41:
  3237  00016A  EFF0  F000         	goto	i2l1747
  3238  00016E                     i2u147_40:
  3239  00016E                     
  3240                           ; BSR set to: 0
  3241  00016E  0E69               	movlw	105
  3242  000170  19C8               	xorwf	_head& (0+255),w,b
  3243  000172  11C9               	iorwf	(_head+1)& (0+255),w,b
  3244  000174  B4D8               	btfsc	status,2,c
  3245  000176  EFBF  F000         	goto	i2u148_41
  3246  00017A  EFC1  F000         	goto	i2u148_40
  3247  00017E                     i2u148_41:
  3248  00017E  EF0A  F001         	goto	i2l1751
  3249  000182                     i2u148_40:
  3250  000182                     
  3251                           ; BSR set to: 0
  3252  000182  C0C8  F001         	movff	_head,i2___wmul@multiplier
  3253  000186  C0C9  F002         	movff	_head+1,i2___wmul@multiplier+1
  3254  00018A  0E00               	movlw	0
  3255  00018C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3256  00018E  0E0F               	movlw	15
  3257  000190  6E03               	movwf	i2___wmul@multiplicand^0,c
  3258  000192  EC00  F00A         	call	i2___wmul	;wreg free
  3259  000196  0EF8               	movlw	low _task_list
  3260  000198  2401               	addwf	?i2___wmul^0,w,c
  3261  00019A  6ED9               	movwf	fsr2l,c
  3262  00019C  0E00               	movlw	high _task_list
  3263  00019E  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3264  0001A0  6EDA               	movwf	fsr2h,c
  3265  0001A2  C026  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3266  0001A6  C027  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3267  0001AA  0E00               	movlw	0
  3268  0001AC  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3269  0001AE  0E0F               	movlw	15
  3270  0001B0  6E03               	movwf	i2___wmul@multiplicand^0,c
  3271  0001B2  EC00  F00A         	call	i2___wmul	;wreg free
  3272  0001B6  0EF8               	movlw	low _task_list
  3273  0001B8  2401               	addwf	?i2___wmul^0,w,c
  3274  0001BA  6EE1               	movwf	fsr1l,c
  3275  0001BC  0E00               	movlw	high _task_list
  3276  0001BE  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3277  0001C0  6EE2               	movwf	fsr1h,c
  3278  0001C2  50DE               	movf	postinc2,w,c
  3279  0001C4  5CE6               	subwf	postinc1,w,c
  3280  0001C6  50DE               	movf	postinc2,w,c
  3281  0001C8  58E6               	subwfb	postinc1,w,c
  3282  0001CA  50DE               	movf	postinc2,w,c
  3283  0001CC  58E6               	subwfb	postinc1,w,c
  3284  0001CE  50DE               	movf	postinc2,w,c
  3285  0001D0  58E6               	subwfb	postinc1,w,c
  3286  0001D2  B0D8               	btfsc	status,0,c
  3287  0001D4  EFEE  F000         	goto	i2u149_41
  3288  0001D8  EFF0  F000         	goto	i2u149_40
  3289  0001DC                     i2u149_41:
  3290  0001DC  EF0A  F001         	goto	i2l1751
  3291  0001E0                     i2u149_40:
  3292  0001E0                     i2l1747:
  3293                           
  3294                           ;task.c: 97:                 task_list[pos].next = head;
  3295  0001E0  C026  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3296  0001E4  C027  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3297  0001E8  0E00               	movlw	0
  3298  0001EA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3299  0001EC  0E0F               	movlw	15
  3300  0001EE  6E03               	movwf	i2___wmul@multiplicand^0,c
  3301  0001F0  EC00  F00A         	call	i2___wmul	;wreg free
  3302  0001F4  0E03               	movlw	low (_task_list+11)
  3303  0001F6  2401               	addwf	?i2___wmul^0,w,c
  3304  0001F8  6ED9               	movwf	fsr2l,c
  3305  0001FA  0E01               	movlw	high (_task_list+11)
  3306  0001FC  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3307  0001FE  6EDA               	movwf	fsr2h,c
  3308  000200  C0C8  FFDE         	movff	_head,postinc2
  3309  000204  C0C9  FFDD         	movff	_head+1,postdec2
  3310  000208                     
  3311                           ;task.c: 98:                 head = pos;
  3312  000208  C026  F0C8         	movff	handleListHead@pos,_head
  3313  00020C  C027  F0C9         	movff	handleListHead@pos+1,_head+1
  3314                           
  3315                           ;task.c: 99:             } else {
  3316  000210  EF21  F002         	goto	i2l197
  3317  000214                     i2l1751:
  3318                           
  3319                           ;task.c: 100:                 task_list[pos].delay_t = task_list[pos].delay_t - task_lis
      +                          t[head].delay_t;
  3320  000214  C0C8  F001         	movff	_head,i2___wmul@multiplier
  3321  000218  C0C9  F002         	movff	_head+1,i2___wmul@multiplier+1
  3322  00021C  0E00               	movlw	0
  3323  00021E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3324  000220  0E0F               	movlw	15
  3325  000222  6E03               	movwf	i2___wmul@multiplicand^0,c
  3326  000224  EC00  F00A         	call	i2___wmul	;wreg free
  3327  000228  0EF8               	movlw	low _task_list
  3328  00022A  2401               	addwf	?i2___wmul^0,w,c
  3329  00022C  6ED9               	movwf	fsr2l,c
  3330  00022E  0E00               	movlw	high _task_list
  3331  000230  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3332  000232  6EDA               	movwf	fsr2h,c
  3333  000234  CFDE F00F          	movff	postinc2,??_handleListHead
  3334  000238  CFDE F010          	movff	postinc2,??_handleListHead+1
  3335  00023C  CFDE F011          	movff	postinc2,??_handleListHead+2
  3336  000240  CFDE F012          	movff	postinc2,??_handleListHead+3
  3337  000244  C026  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3338  000248  C027  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3339  00024C  0E00               	movlw	0
  3340  00024E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3341  000250  0E0F               	movlw	15
  3342  000252  6E03               	movwf	i2___wmul@multiplicand^0,c
  3343  000254  EC00  F00A         	call	i2___wmul	;wreg free
  3344  000258  0EF8               	movlw	low _task_list
  3345  00025A  2401               	addwf	?i2___wmul^0,w,c
  3346  00025C  6ED9               	movwf	fsr2l,c
  3347  00025E  0E00               	movlw	high _task_list
  3348  000260  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3349  000262  6EDA               	movwf	fsr2h,c
  3350  000264  CFDE F013          	movff	postinc2,??_handleListHead+4
  3351  000268  CFDE F014          	movff	postinc2,??_handleListHead+5
  3352  00026C  CFDE F015          	movff	postinc2,??_handleListHead+6
  3353  000270  CFDE F016          	movff	postinc2,??_handleListHead+7
  3354  000274  500F               	movf	??_handleListHead^0,w,c
  3355  000276  5C13               	subwf	(??_handleListHead+4)^0,w,c
  3356  000278  6E17               	movwf	(??_handleListHead+8)^0,c
  3357  00027A  5010               	movf	(??_handleListHead+1)^0,w,c
  3358  00027C  5814               	subwfb	(??_handleListHead+5)^0,w,c
  3359  00027E  6E18               	movwf	(??_handleListHead+9)^0,c
  3360  000280  5011               	movf	(??_handleListHead+2)^0,w,c
  3361  000282  5815               	subwfb	(??_handleListHead+6)^0,w,c
  3362  000284  6E19               	movwf	(??_handleListHead+10)^0,c
  3363  000286  5012               	movf	(??_handleListHead+3)^0,w,c
  3364  000288  5816               	subwfb	(??_handleListHead+7)^0,w,c
  3365  00028A  6E1A               	movwf	(??_handleListHead+11)^0,c
  3366  00028C  C026  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3367  000290  C027  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3368  000294  0E00               	movlw	0
  3369  000296  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3370  000298  0E0F               	movlw	15
  3371  00029A  6E03               	movwf	i2___wmul@multiplicand^0,c
  3372  00029C  EC00  F00A         	call	i2___wmul	;wreg free
  3373  0002A0  0EF8               	movlw	low _task_list
  3374  0002A2  2401               	addwf	?i2___wmul^0,w,c
  3375  0002A4  6ED9               	movwf	fsr2l,c
  3376  0002A6  0E00               	movlw	high _task_list
  3377  0002A8  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3378  0002AA  6EDA               	movwf	fsr2h,c
  3379  0002AC  C017  FFDE         	movff	??_handleListHead+8,postinc2
  3380  0002B0  C018  FFDE         	movff	??_handleListHead+9,postinc2
  3381  0002B4  C019  FFDE         	movff	??_handleListHead+10,postinc2
  3382  0002B8  C01A  FFDE         	movff	??_handleListHead+11,postinc2
  3383                           
  3384                           ;task.c: 101:                 int cur = task_list[head].next;
  3385  0002BC  C0C8  F001         	movff	_head,i2___wmul@multiplier
  3386  0002C0  C0C9  F002         	movff	_head+1,i2___wmul@multiplier+1
  3387  0002C4  0E00               	movlw	0
  3388  0002C6  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3389  0002C8  0E0F               	movlw	15
  3390  0002CA  6E03               	movwf	i2___wmul@multiplicand^0,c
  3391  0002CC  EC00  F00A         	call	i2___wmul	;wreg free
  3392  0002D0  0E03               	movlw	low (_task_list+11)
  3393  0002D2  2401               	addwf	?i2___wmul^0,w,c
  3394  0002D4  6ED9               	movwf	fsr2l,c
  3395  0002D6  0E01               	movlw	high (_task_list+11)
  3396  0002D8  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3397  0002DA  6EDA               	movwf	fsr2h,c
  3398  0002DC  CFDE F024          	movff	postinc2,handleListHead@cur
  3399  0002E0  CFDD F025          	movff	postdec2,handleListHead@cur+1
  3400  0002E4                     
  3401                           ;task.c: 102:                 int prev = head;
  3402  0002E4  C0C8  F022         	movff	_head,handleListHead@prev
  3403  0002E8  C0C9  F023         	movff	_head+1,handleListHead@prev+1
  3404                           
  3405                           ;task.c: 103:                 while(cur != 105 && task_list[cur].delay_t <= task_list[po
      +                          s].delay_t) {
  3406  0002EC  EFC0  F001         	goto	i2l1759
  3407  0002F0                     i2l1755:
  3408                           
  3409                           ;task.c: 104:                     task_list[pos].delay_t -= task_list[cur].delay_t;
  3410  0002F0  C024  F001         	movff	handleListHead@cur,i2___wmul@multiplier
  3411  0002F4  C025  F002         	movff	handleListHead@cur+1,i2___wmul@multiplier+1
  3412  0002F8  0E00               	movlw	0
  3413  0002FA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3414  0002FC  0E0F               	movlw	15
  3415  0002FE  6E03               	movwf	i2___wmul@multiplicand^0,c
  3416  000300  EC00  F00A         	call	i2___wmul	;wreg free
  3417  000304  0EF8               	movlw	low _task_list
  3418  000306  2401               	addwf	?i2___wmul^0,w,c
  3419  000308  6ED9               	movwf	fsr2l,c
  3420  00030A  0E00               	movlw	high _task_list
  3421  00030C  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3422  00030E  6EDA               	movwf	fsr2h,c
  3423  000310  CFDE F00F          	movff	postinc2,??_handleListHead
  3424  000314  CFDE F010          	movff	postinc2,??_handleListHead+1
  3425  000318  CFDE F011          	movff	postinc2,??_handleListHead+2
  3426  00031C  CFDE F012          	movff	postinc2,??_handleListHead+3
  3427  000320  C026  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3428  000324  C027  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3429  000328  0E00               	movlw	0
  3430  00032A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3431  00032C  0E0F               	movlw	15
  3432  00032E  6E03               	movwf	i2___wmul@multiplicand^0,c
  3433  000330  EC00  F00A         	call	i2___wmul	;wreg free
  3434  000334  0EF8               	movlw	low _task_list
  3435  000336  2401               	addwf	?i2___wmul^0,w,c
  3436  000338  6ED9               	movwf	fsr2l,c
  3437  00033A  0E00               	movlw	high _task_list
  3438  00033C  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3439  00033E  6EDA               	movwf	fsr2h,c
  3440  000340  500F               	movf	??_handleListHead^0,w,c
  3441  000342  5EDE               	subwf	postinc2,f,c
  3442  000344  5010               	movf	(??_handleListHead+1)^0,w,c
  3443  000346  5ADE               	subwfb	postinc2,f,c
  3444  000348  5011               	movf	(??_handleListHead+2)^0,w,c
  3445  00034A  5ADE               	subwfb	postinc2,f,c
  3446  00034C  5012               	movf	(??_handleListHead+3)^0,w,c
  3447  00034E  5ADE               	subwfb	postinc2,f,c
  3448  000350                     
  3449                           ;task.c: 105:                     prev = cur;
  3450  000350  C024  F022         	movff	handleListHead@cur,handleListHead@prev
  3451  000354  C025  F023         	movff	handleListHead@cur+1,handleListHead@prev+1
  3452                           
  3453                           ;task.c: 106:                     cur = task_list[cur].next;
  3454  000358  C024  F001         	movff	handleListHead@cur,i2___wmul@multiplier
  3455  00035C  C025  F002         	movff	handleListHead@cur+1,i2___wmul@multiplier+1
  3456  000360  0E00               	movlw	0
  3457  000362  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3458  000364  0E0F               	movlw	15
  3459  000366  6E03               	movwf	i2___wmul@multiplicand^0,c
  3460  000368  EC00  F00A         	call	i2___wmul	;wreg free
  3461  00036C  0E03               	movlw	low (_task_list+11)
  3462  00036E  2401               	addwf	?i2___wmul^0,w,c
  3463  000370  6ED9               	movwf	fsr2l,c
  3464  000372  0E01               	movlw	high (_task_list+11)
  3465  000374  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3466  000376  6EDA               	movwf	fsr2h,c
  3467  000378  CFDE F024          	movff	postinc2,handleListHead@cur
  3468  00037C  CFDD F025          	movff	postdec2,handleListHead@cur+1
  3469  000380                     i2l1759:
  3470                           
  3471                           ;task.c: 103:                 while(cur != 105 && task_list[cur].delay_t <= task_list[po
      +                          s].delay_t) {
  3472  000380  0E69               	movlw	105
  3473  000382  1824               	xorwf	handleListHead@cur^0,w,c
  3474  000384  1025               	iorwf	(handleListHead@cur+1)^0,w,c
  3475  000386  B4D8               	btfsc	status,2,c
  3476  000388  EFC8  F001         	goto	i2u150_41
  3477  00038C  EFCA  F001         	goto	i2u150_40
  3478  000390                     i2u150_41:
  3479  000390  EFF9  F001         	goto	i2l1763
  3480  000394                     i2u150_40:
  3481  000394  C024  F001         	movff	handleListHead@cur,i2___wmul@multiplier
  3482  000398  C025  F002         	movff	handleListHead@cur+1,i2___wmul@multiplier+1
  3483  00039C  0E00               	movlw	0
  3484  00039E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3485  0003A0  0E0F               	movlw	15
  3486  0003A2  6E03               	movwf	i2___wmul@multiplicand^0,c
  3487  0003A4  EC00  F00A         	call	i2___wmul	;wreg free
  3488  0003A8  0EF8               	movlw	low _task_list
  3489  0003AA  2401               	addwf	?i2___wmul^0,w,c
  3490  0003AC  6ED9               	movwf	fsr2l,c
  3491  0003AE  0E00               	movlw	high _task_list
  3492  0003B0  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3493  0003B2  6EDA               	movwf	fsr2h,c
  3494  0003B4  C026  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3495  0003B8  C027  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3496  0003BC  0E00               	movlw	0
  3497  0003BE  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3498  0003C0  0E0F               	movlw	15
  3499  0003C2  6E03               	movwf	i2___wmul@multiplicand^0,c
  3500  0003C4  EC00  F00A         	call	i2___wmul	;wreg free
  3501  0003C8  0EF8               	movlw	low _task_list
  3502  0003CA  2401               	addwf	?i2___wmul^0,w,c
  3503  0003CC  6EE1               	movwf	fsr1l,c
  3504  0003CE  0E00               	movlw	high _task_list
  3505  0003D0  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3506  0003D2  6EE2               	movwf	fsr1h,c
  3507  0003D4  50DE               	movf	postinc2,w,c
  3508  0003D6  5CE6               	subwf	postinc1,w,c
  3509  0003D8  50DE               	movf	postinc2,w,c
  3510  0003DA  58E6               	subwfb	postinc1,w,c
  3511  0003DC  50DE               	movf	postinc2,w,c
  3512  0003DE  58E6               	subwfb	postinc1,w,c
  3513  0003E0  50DE               	movf	postinc2,w,c
  3514  0003E2  58E6               	subwfb	postinc1,w,c
  3515  0003E4  B0D8               	btfsc	status,0,c
  3516  0003E6  EFF7  F001         	goto	i2u151_41
  3517  0003EA  EFF9  F001         	goto	i2u151_40
  3518  0003EE                     i2u151_41:
  3519  0003EE  EF78  F001         	goto	i2l1755
  3520  0003F2                     i2u151_40:
  3521  0003F2                     i2l1763:
  3522                           
  3523                           ;task.c: 108:                 task_list[prev].next = pos;
  3524  0003F2  C022  F001         	movff	handleListHead@prev,i2___wmul@multiplier
  3525  0003F6  C023  F002         	movff	handleListHead@prev+1,i2___wmul@multiplier+1
  3526  0003FA  0E00               	movlw	0
  3527  0003FC  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3528  0003FE  0E0F               	movlw	15
  3529  000400  6E03               	movwf	i2___wmul@multiplicand^0,c
  3530  000402  EC00  F00A         	call	i2___wmul	;wreg free
  3531  000406  0E03               	movlw	low (_task_list+11)
  3532  000408  2401               	addwf	?i2___wmul^0,w,c
  3533  00040A  6ED9               	movwf	fsr2l,c
  3534  00040C  0E01               	movlw	high (_task_list+11)
  3535  00040E  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3536  000410  6EDA               	movwf	fsr2h,c
  3537  000412  C026  FFDE         	movff	handleListHead@pos,postinc2
  3538  000416  C027  FFDD         	movff	handleListHead@pos+1,postdec2
  3539                           
  3540                           ;task.c: 109:                 task_list[pos].next = cur;
  3541  00041A  C026  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3542  00041E  C027  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3543  000422  0E00               	movlw	0
  3544  000424  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3545  000426  0E0F               	movlw	15
  3546  000428  6E03               	movwf	i2___wmul@multiplicand^0,c
  3547  00042A  EC00  F00A         	call	i2___wmul	;wreg free
  3548  00042E  0E03               	movlw	low (_task_list+11)
  3549  000430  2401               	addwf	?i2___wmul^0,w,c
  3550  000432  6ED9               	movwf	fsr2l,c
  3551  000434  0E01               	movlw	high (_task_list+11)
  3552  000436  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3553  000438  6EDA               	movwf	fsr2h,c
  3554  00043A  C024  FFDE         	movff	handleListHead@cur,postinc2
  3555  00043E  C025  FFDD         	movff	handleListHead@cur+1,postdec2
  3556  000442                     i2l197:
  3557                           
  3558                           ;task.c: 111:             if(task_list[pos].next != 105)
  3559  000442  C026  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3560  000446  C027  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3561  00044A  0E00               	movlw	0
  3562  00044C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3563  00044E  0E0F               	movlw	15
  3564  000450  6E03               	movwf	i2___wmul@multiplicand^0,c
  3565  000452  EC00  F00A         	call	i2___wmul	;wreg free
  3566  000456  0E03               	movlw	low (_task_list+11)
  3567  000458  2401               	addwf	?i2___wmul^0,w,c
  3568  00045A  6ED9               	movwf	fsr2l,c
  3569  00045C  0E01               	movlw	high (_task_list+11)
  3570  00045E  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3571  000460  6EDA               	movwf	fsr2h,c
  3572  000462  0E69               	movlw	105
  3573  000464  18DE               	xorwf	postinc2,w,c
  3574  000466  10DE               	iorwf	postinc2,w,c
  3575  000468  B4D8               	btfsc	status,2,c
  3576  00046A  EF39  F002         	goto	i2u152_41
  3577  00046E  EF3B  F002         	goto	i2u152_40
  3578  000472                     i2u152_41:
  3579  000472  EF7F  F002         	goto	i2l190
  3580  000476                     i2u152_40:
  3581  000476                     
  3582                           ;task.c: 112:                 task_list[task_list[pos].next].delay_t -= task_list[pos].d
      +                          elay_t;
  3583  000476  C026  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3584  00047A  C027  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3585  00047E  0E00               	movlw	0
  3586  000480  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3587  000482  0E0F               	movlw	15
  3588  000484  6E03               	movwf	i2___wmul@multiplicand^0,c
  3589  000486  EC00  F00A         	call	i2___wmul	;wreg free
  3590  00048A  0E03               	movlw	low (_task_list+11)
  3591  00048C  2401               	addwf	?i2___wmul^0,w,c
  3592  00048E  6ED9               	movwf	fsr2l,c
  3593  000490  0E01               	movlw	high (_task_list+11)
  3594  000492  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3595  000494  6EDA               	movwf	fsr2h,c
  3596  000496  CFDE F020          	movff	postinc2,_handleListHead$1175
  3597  00049A  CFDD F021          	movff	postdec2,_handleListHead$1175+1
  3598                           
  3599                           ;task.c: 112:                 task_list[task_list[pos].next].delay_t -= task_list[pos].d
      +                          elay_t;
  3600  00049E  C026  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3601  0004A2  C027  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3602  0004A6  0E00               	movlw	0
  3603  0004A8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3604  0004AA  0E0F               	movlw	15
  3605  0004AC  6E03               	movwf	i2___wmul@multiplicand^0,c
  3606  0004AE  EC00  F00A         	call	i2___wmul	;wreg free
  3607  0004B2  0EF8               	movlw	low _task_list
  3608  0004B4  2401               	addwf	?i2___wmul^0,w,c
  3609  0004B6  6ED9               	movwf	fsr2l,c
  3610  0004B8  0E00               	movlw	high _task_list
  3611  0004BA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3612  0004BC  6EDA               	movwf	fsr2h,c
  3613  0004BE  CFDE F00F          	movff	postinc2,??_handleListHead
  3614  0004C2  CFDE F010          	movff	postinc2,??_handleListHead+1
  3615  0004C6  CFDE F011          	movff	postinc2,??_handleListHead+2
  3616  0004CA  CFDE F012          	movff	postinc2,??_handleListHead+3
  3617  0004CE  C020  F001         	movff	_handleListHead$1175,i2___wmul@multiplier
  3618  0004D2  C021  F002         	movff	_handleListHead$1175+1,i2___wmul@multiplier+1
  3619  0004D6  0E00               	movlw	0
  3620  0004D8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3621  0004DA  0E0F               	movlw	15
  3622  0004DC  6E03               	movwf	i2___wmul@multiplicand^0,c
  3623  0004DE  EC00  F00A         	call	i2___wmul	;wreg free
  3624  0004E2  0EF8               	movlw	low _task_list
  3625  0004E4  2401               	addwf	?i2___wmul^0,w,c
  3626  0004E6  6ED9               	movwf	fsr2l,c
  3627  0004E8  0E00               	movlw	high _task_list
  3628  0004EA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3629  0004EC  6EDA               	movwf	fsr2h,c
  3630  0004EE  500F               	movf	??_handleListHead^0,w,c
  3631  0004F0  5EDE               	subwf	postinc2,f,c
  3632  0004F2  5010               	movf	(??_handleListHead+1)^0,w,c
  3633  0004F4  5ADE               	subwfb	postinc2,f,c
  3634  0004F6  5011               	movf	(??_handleListHead+2)^0,w,c
  3635  0004F8  5ADE               	subwfb	postinc2,f,c
  3636  0004FA  5012               	movf	(??_handleListHead+3)^0,w,c
  3637  0004FC  5ADE               	subwfb	postinc2,f,c
  3638  0004FE                     i2l190:
  3639                           
  3640                           ;task.c: 87:     while(task_list[head].delay_t == 0) {
  3641  0004FE  C0C8  F001         	movff	_head,i2___wmul@multiplier
  3642  000502  C0C9  F002         	movff	_head+1,i2___wmul@multiplier+1
  3643  000506  0E00               	movlw	0
  3644  000508  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3645  00050A  0E0F               	movlw	15
  3646  00050C  6E03               	movwf	i2___wmul@multiplicand^0,c
  3647  00050E  EC00  F00A         	call	i2___wmul	;wreg free
  3648  000512  0EF8               	movlw	low _task_list
  3649  000514  2401               	addwf	?i2___wmul^0,w,c
  3650  000516  6ED9               	movwf	fsr2l,c
  3651  000518  0E00               	movlw	high _task_list
  3652  00051A  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3653  00051C  6EDA               	movwf	fsr2h,c
  3654  00051E  50DE               	movf	postinc2,w,c
  3655  000520  10DE               	iorwf	postinc2,w,c
  3656  000522  10DE               	iorwf	postinc2,w,c
  3657  000524  10DE               	iorwf	postinc2,w,c
  3658  000526  B4D8               	btfsc	status,2,c
  3659  000528  EF98  F002         	goto	i2u153_41
  3660  00052C  EF9A  F002         	goto	i2u153_40
  3661  000530                     i2u153_41:
  3662  000530  EF16  F000         	goto	i2l191
  3663  000534                     i2u153_40:
  3664  000534                     
  3665                           ;task.c: 115:     task_list[head].delay_t-= 10;
  3666  000534  C0C8  F001         	movff	_head,i2___wmul@multiplier
  3667  000538  C0C9  F002         	movff	_head+1,i2___wmul@multiplier+1
  3668  00053C  0E00               	movlw	0
  3669  00053E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3670  000540  0E0F               	movlw	15
  3671  000542  6E03               	movwf	i2___wmul@multiplicand^0,c
  3672  000544  EC00  F00A         	call	i2___wmul	;wreg free
  3673  000548  0EF8               	movlw	low _task_list
  3674  00054A  2401               	addwf	?i2___wmul^0,w,c
  3675  00054C  6ED9               	movwf	fsr2l,c
  3676  00054E  0E00               	movlw	high _task_list
  3677  000550  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3678  000552  6EDA               	movwf	fsr2h,c
  3679  000554  0E0A               	movlw	10
  3680  000556  5EDE               	subwf	postinc2,f,c
  3681  000558  0E00               	movlw	0
  3682  00055A  5ADE               	subwfb	postinc2,f,c
  3683  00055C  5ADE               	subwfb	postinc2,f,c
  3684  00055E  5ADE               	subwfb	postinc2,f,c
  3685  000560                     i2l189:
  3686  000560  0012               	return		;funcret
  3687  000562                     __end_of_handleListHead:
  3688                           	opt callstack 0
  3689                           
  3690 ;; *************** function _removeTask *****************
  3691 ;; Defined at:
  3692 ;;		line 60 in file "task.c"
  3693 ;; Parameters:    Size  Location     Type
  3694 ;;  idx             1    wreg     unsigned char 
  3695 ;; Auto vars:     Size  Location     Type
  3696 ;;  idx             1    5[COMRAM] unsigned char 
  3697 ;;  pos             1    4[COMRAM] unsigned char 
  3698 ;; Return value:  Size  Location     Type
  3699 ;;                  1    wreg      unsigned char 
  3700 ;; Registers used:
  3701 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3702 ;; Tracked objects:
  3703 ;;		On entry : 0/0
  3704 ;;		On exit  : 0/0
  3705 ;;		Unchanged: 0/0
  3706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3708 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3709 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3710 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3711 ;;Total ram usage:        6 bytes
  3712 ;; Hardware stack levels used:    1
  3713 ;; Hardware stack levels required when called:    1
  3714 ;; This function calls:
  3715 ;;		_isEmptyList
  3716 ;; This function is called by:
  3717 ;;		_handleListHead
  3718 ;;		_remove_timer
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           	psect	text25
  3723  00095E                     __ptext25:
  3724                           	opt callstack 0
  3725  00095E                     _removeTask:
  3726                           	opt callstack 21
  3727                           
  3728                           ;incstack = 0
  3729                           ;removeTask@idx stored from wreg
  3730  00095E  6E06               	movwf	removeTask@idx^0,c
  3731  000960                     
  3732                           ;task.c: 61:     if(isEmptyList() || task_list[idx].func_ptr == ((void*)0))
  3733  000960  EC3B  F00A         	call	_isEmptyList	;wreg free
  3734  000964  0900               	iorlw	0
  3735  000966  A4D8               	btfss	status,2,c
  3736  000968  EFB8  F004         	goto	i2u136_41
  3737  00096C  EFBA  F004         	goto	i2u136_40
  3738  000970                     i2u136_41:
  3739  000970  EFCC  F004         	goto	i2l1683
  3740  000974                     i2u136_40:
  3741  000974  5006               	movf	removeTask@idx^0,w,c
  3742  000976  0D0F               	mullw	15
  3743  000978  0E00               	movlw	low (_task_list+8)
  3744  00097A  24F3               	addwf	243,w,c
  3745  00097C  6ED9               	movwf	fsr2l,c
  3746  00097E  0E01               	movlw	high (_task_list+8)
  3747  000980  20F4               	addwfc	prodh,w,c
  3748  000982  6EDA               	movwf	fsr2h,c
  3749  000984  50DE               	movf	postinc2,w,c
  3750  000986  10DE               	iorwf	postinc2,w,c
  3751  000988  10DE               	iorwf	postinc2,w,c
  3752  00098A  A4D8               	btfss	status,2,c
  3753  00098C  EFCA  F004         	goto	i2u137_41
  3754  000990  EFCC  F004         	goto	i2u137_40
  3755  000994                     i2u137_41:
  3756  000994  EFCF  F004         	goto	i2l1687
  3757  000998                     i2u137_40:
  3758  000998                     i2l1683:
  3759                           
  3760                           ;task.c: 62:         return 0;
  3761  000998  0E00               	movlw	0
  3762  00099A  EF84  F005         	goto	i2l178
  3763  00099E                     i2l1687:
  3764                           
  3765                           ;task.c: 63:     task_list[idx].delay_t = 0;
  3766  00099E  5006               	movf	removeTask@idx^0,w,c
  3767  0009A0  0D0F               	mullw	15
  3768  0009A2  0EF8               	movlw	low _task_list
  3769  0009A4  24F3               	addwf	243,w,c
  3770  0009A6  6ED9               	movwf	fsr2l,c
  3771  0009A8  0E00               	movlw	high _task_list
  3772  0009AA  20F4               	addwfc	prodh,w,c
  3773  0009AC  6EDA               	movwf	fsr2h,c
  3774  0009AE  6ADE               	clrf	postinc2,c
  3775  0009B0  6ADE               	clrf	postinc2,c
  3776  0009B2  6ADE               	clrf	postinc2,c
  3777  0009B4  6ADD               	clrf	postdec2,c
  3778                           
  3779                           ;task.c: 64:     task_list[idx].period_t = 0;
  3780  0009B6  5006               	movf	removeTask@idx^0,w,c
  3781  0009B8  0D0F               	mullw	15
  3782  0009BA  0EFC               	movlw	low (_task_list+4)
  3783  0009BC  24F3               	addwf	243,w,c
  3784  0009BE  6ED9               	movwf	fsr2l,c
  3785  0009C0  0E00               	movlw	high (_task_list+4)
  3786  0009C2  20F4               	addwfc	prodh,w,c
  3787  0009C4  6EDA               	movwf	fsr2h,c
  3788  0009C6  6ADE               	clrf	postinc2,c
  3789  0009C8  6ADE               	clrf	postinc2,c
  3790  0009CA  6ADE               	clrf	postinc2,c
  3791  0009CC  6ADD               	clrf	postdec2,c
  3792                           
  3793                           ;task.c: 65:     task_list[idx].func_ptr = ((void*)0);
  3794  0009CE  5006               	movf	removeTask@idx^0,w,c
  3795  0009D0  0D0F               	mullw	15
  3796  0009D2  0E00               	movlw	low (_task_list+8)
  3797  0009D4  24F3               	addwf	243,w,c
  3798  0009D6  6ED9               	movwf	fsr2l,c
  3799  0009D8  0E01               	movlw	high (_task_list+8)
  3800  0009DA  20F4               	addwfc	prodh,w,c
  3801  0009DC  6EDA               	movwf	fsr2h,c
  3802  0009DE  0E00               	movlw	0
  3803  0009E0  6EDE               	movwf	postinc2,c
  3804  0009E2  0E00               	movlw	0
  3805  0009E4  6EDE               	movwf	postinc2,c
  3806  0009E6  0E00               	movlw	0
  3807  0009E8  6EDE               	movwf	postinc2,c
  3808                           
  3809                           ;task.c: 66:     task_list[idx].data_p = ((void*)0);
  3810  0009EA  5006               	movf	removeTask@idx^0,w,c
  3811  0009EC  0D0F               	mullw	15
  3812  0009EE  0E05               	movlw	low (_task_list+13)
  3813  0009F0  24F3               	addwf	243,w,c
  3814  0009F2  6ED9               	movwf	fsr2l,c
  3815  0009F4  0E01               	movlw	high (_task_list+13)
  3816  0009F6  20F4               	addwfc	prodh,w,c
  3817  0009F8  6EDA               	movwf	fsr2h,c
  3818  0009FA  0E00               	movlw	0
  3819  0009FC  6EDE               	movwf	postinc2,c
  3820  0009FE  0E00               	movlw	0
  3821  000A00  6EDD               	movwf	postdec2,c
  3822  000A02                     
  3823                           ;task.c: 67:     num_task--;
  3824  000A02  0100               	movlb	0	; () banked
  3825  000A04  07CA               	decf	_num_task& (0+255),f,b
  3826  000A06                     
  3827                           ; BSR set to: 0
  3828                           ;task.c: 68:     if(idx == head) {
  3829  000A06  5006               	movf	removeTask@idx^0,w,c
  3830  000A08  6E01               	movwf	??_removeTask^0,c
  3831  000A0A  6A02               	clrf	(??_removeTask+1)^0,c
  3832  000A0C  51C8               	movf	_head& (0+255),w,b
  3833  000A0E  1801               	xorwf	??_removeTask^0,w,c
  3834  000A10  E107               	bnz	i2u138_41
  3835  000A12  51C9               	movf	(_head+1)& (0+255),w,b
  3836  000A14  1802               	xorwf	(??_removeTask+1)^0,w,c
  3837  000A16  A4D8               	btfss	status,2,c
  3838  000A18  EF10  F005         	goto	i2u138_41
  3839  000A1C  EF12  F005         	goto	i2u138_40
  3840  000A20                     i2u138_41:
  3841  000A20  EF2C  F005         	goto	i2l179
  3842  000A24                     i2u138_40:
  3843  000A24                     
  3844                           ; BSR set to: 0
  3845                           ;task.c: 69:         head = task_list[idx].next;
  3846  000A24  5006               	movf	removeTask@idx^0,w,c
  3847  000A26  0D0F               	mullw	15
  3848  000A28  0E03               	movlw	low (_task_list+11)
  3849  000A2A  24F3               	addwf	243,w,c
  3850  000A2C  6ED9               	movwf	fsr2l,c
  3851  000A2E  0E01               	movlw	high (_task_list+11)
  3852  000A30  20F4               	addwfc	prodh,w,c
  3853  000A32  6EDA               	movwf	fsr2h,c
  3854  000A34  CFDE F0C8          	movff	postinc2,_head
  3855  000A38  CFDD F0C9          	movff	postdec2,_head+1
  3856                           
  3857                           ;task.c: 70:         task_list[idx].next = 105;
  3858  000A3C  5006               	movf	removeTask@idx^0,w,c
  3859  000A3E  0D0F               	mullw	15
  3860  000A40  0E03               	movlw	low (_task_list+11)
  3861  000A42  24F3               	addwf	243,w,c
  3862  000A44  6ED9               	movwf	fsr2l,c
  3863  000A46  0E01               	movlw	high (_task_list+11)
  3864  000A48  20F4               	addwfc	prodh,w,c
  3865  000A4A  6EDA               	movwf	fsr2h,c
  3866  000A4C  0E69               	movlw	105
  3867  000A4E  6EDE               	movwf	postinc2,c
  3868  000A50  0E00               	movlw	0
  3869  000A52  6EDD               	movwf	postdec2,c
  3870                           
  3871                           ;task.c: 71:     }
  3872  000A54  EF83  F005         	goto	i2l1703
  3873  000A58                     i2l179:
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;task.c: 73:         char pos = head;
  3877  000A58  C0C8  F005         	movff	_head,removeTask@pos
  3878                           
  3879                           ;task.c: 74:         while(task_list[pos].next != 105 && task_list[pos].next != idx) {
  3880  000A5C  EF3A  F005         	goto	i2l181
  3881  000A60                     i2l1695:
  3882                           
  3883                           ;task.c: 75:             pos = task_list[pos].next;
  3884  000A60  5005               	movf	removeTask@pos^0,w,c
  3885  000A62  0D0F               	mullw	15
  3886  000A64  0E03               	movlw	low (_task_list+11)
  3887  000A66  24F3               	addwf	243,w,c
  3888  000A68  6ED9               	movwf	fsr2l,c
  3889  000A6A  0E01               	movlw	high (_task_list+11)
  3890  000A6C  20F4               	addwfc	prodh,w,c
  3891  000A6E  6EDA               	movwf	fsr2h,c
  3892  000A70  50DF               	movf	indf2,w,c
  3893  000A72  6E05               	movwf	removeTask@pos^0,c
  3894  000A74                     i2l181:
  3895                           
  3896                           ;task.c: 74:         while(task_list[pos].next != 105 && task_list[pos].next != idx) {
  3897  000A74  5005               	movf	removeTask@pos^0,w,c
  3898  000A76  0D0F               	mullw	15
  3899  000A78  0E03               	movlw	low (_task_list+11)
  3900  000A7A  24F3               	addwf	243,w,c
  3901  000A7C  6ED9               	movwf	fsr2l,c
  3902  000A7E  0E01               	movlw	high (_task_list+11)
  3903  000A80  20F4               	addwfc	prodh,w,c
  3904  000A82  6EDA               	movwf	fsr2h,c
  3905  000A84  0E69               	movlw	105
  3906  000A86  18DE               	xorwf	postinc2,w,c
  3907  000A88  10DE               	iorwf	postinc2,w,c
  3908  000A8A  B4D8               	btfsc	status,2,c
  3909  000A8C  EF4A  F005         	goto	i2u139_41
  3910  000A90  EF4C  F005         	goto	i2u139_40
  3911  000A94                     i2u139_41:
  3912  000A94  EF63  F005         	goto	i2l1699
  3913  000A98                     i2u139_40:
  3914  000A98  5005               	movf	removeTask@pos^0,w,c
  3915  000A9A  0D0F               	mullw	15
  3916  000A9C  0E03               	movlw	low (_task_list+11)
  3917  000A9E  24F3               	addwf	243,w,c
  3918  000AA0  6ED9               	movwf	fsr2l,c
  3919  000AA2  0E01               	movlw	high (_task_list+11)
  3920  000AA4  20F4               	addwfc	prodh,w,c
  3921  000AA6  6EDA               	movwf	fsr2h,c
  3922  000AA8  5006               	movf	removeTask@idx^0,w,c
  3923  000AAA  6E03               	movwf	(??_removeTask+2)^0,c
  3924  000AAC  6A04               	clrf	(??_removeTask+3)^0,c
  3925  000AAE  50DE               	movf	postinc2,w,c
  3926  000AB0  1803               	xorwf	(??_removeTask+2)^0,w,c
  3927  000AB2  E107               	bnz	i2u140_41
  3928  000AB4  50DE               	movf	postinc2,w,c
  3929  000AB6  1804               	xorwf	(??_removeTask+3)^0,w,c
  3930  000AB8  A4D8               	btfss	status,2,c
  3931  000ABA  EF61  F005         	goto	i2u140_41
  3932  000ABE  EF63  F005         	goto	i2u140_40
  3933  000AC2                     i2u140_41:
  3934  000AC2  EF30  F005         	goto	i2l1695
  3935  000AC6                     i2u140_40:
  3936  000AC6                     i2l1699:
  3937                           
  3938                           ;task.c: 77:         task_list[pos].next = task_list[idx].next;
  3939  000AC6  5006               	movf	removeTask@idx^0,w,c
  3940  000AC8  0D0F               	mullw	15
  3941  000ACA  0E03               	movlw	low (_task_list+11)
  3942  000ACC  24F3               	addwf	243,w,c
  3943  000ACE  6ED9               	movwf	fsr2l,c
  3944  000AD0  0E01               	movlw	high (_task_list+11)
  3945  000AD2  20F4               	addwfc	prodh,w,c
  3946  000AD4  6EDA               	movwf	fsr2h,c
  3947  000AD6  5005               	movf	removeTask@pos^0,w,c
  3948  000AD8  0D0F               	mullw	15
  3949  000ADA  0E03               	movlw	low (_task_list+11)
  3950  000ADC  24F3               	addwf	243,w,c
  3951  000ADE  6EE1               	movwf	fsr1l,c
  3952  000AE0  0E01               	movlw	high (_task_list+11)
  3953  000AE2  20F4               	addwfc	prodh,w,c
  3954  000AE4  6EE2               	movwf	fsr1h,c
  3955  000AE6  CFDE FFE6          	movff	postinc2,postinc1
  3956  000AEA  CFDD FFE5          	movff	postdec2,postdec1
  3957  000AEE                     
  3958                           ;task.c: 78:         task_list[idx].next = 105;
  3959  000AEE  5006               	movf	removeTask@idx^0,w,c
  3960  000AF0  0D0F               	mullw	15
  3961  000AF2  0E03               	movlw	low (_task_list+11)
  3962  000AF4  24F3               	addwf	243,w,c
  3963  000AF6  6ED9               	movwf	fsr2l,c
  3964  000AF8  0E01               	movlw	high (_task_list+11)
  3965  000AFA  20F4               	addwfc	prodh,w,c
  3966  000AFC  6EDA               	movwf	fsr2h,c
  3967  000AFE  0E69               	movlw	105
  3968  000B00  6EDE               	movwf	postinc2,c
  3969  000B02  0E00               	movlw	0
  3970  000B04  6EDD               	movwf	postdec2,c
  3971  000B06                     i2l1703:
  3972                           
  3973                           ;task.c: 81:     return 1;
  3974  000B06  0E01               	movlw	1
  3975  000B08                     i2l178:
  3976  000B08  0012               	return		;funcret
  3977  000B0A                     __end_of_removeTask:
  3978                           	opt callstack 0
  3979                           
  3980 ;; *************** function _isEmptyList *****************
  3981 ;; Defined at:
  3982 ;;		line 3 in file "task.c"
  3983 ;; Parameters:    Size  Location     Type
  3984 ;;		None
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;		None
  3987 ;; Return value:  Size  Location     Type
  3988 ;;                  1    wreg      unsigned char 
  3989 ;; Registers used:
  3990 ;;		wreg, status,2
  3991 ;; Tracked objects:
  3992 ;;		On entry : 0/0
  3993 ;;		On exit  : 0/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4000 ;;Total ram usage:        0 bytes
  4001 ;; Hardware stack levels used:    1
  4002 ;; This function calls:
  4003 ;;		Nothing
  4004 ;; This function is called by:
  4005 ;;		_removeTask
  4006 ;; This function uses a non-reentrant model
  4007 ;;
  4008                           
  4009                           	psect	text26
  4010  001476                     __ptext26:
  4011                           	opt callstack 0
  4012  001476                     _isEmptyList:
  4013                           	opt callstack 21
  4014  001476                     
  4015                           ;task.c: 4:     return num_task == 0 ? 1 : 0;
  4016  001476  0100               	movlb	0	; () banked
  4017  001478  51CA               	movf	_num_task& (0+255),w,b
  4018  00147A  B4D8               	btfsc	status,2,c
  4019  00147C  EF42  F00A         	goto	i2u118_41
  4020  001480  EF45  F00A         	goto	i2u118_40
  4021  001484                     i2u118_41:
  4022  001484  0E01               	movlw	1
  4023  001486  EF46  F00A         	goto	i2u119_40
  4024  00148A                     i2u118_40:
  4025  00148A  0E00               	movlw	0
  4026  00148C                     i2u119_40:
  4027  00148C                     
  4028                           ; BSR set to: 0
  4029  00148C  0012               	return		;funcret
  4030  00148E                     __end_of_isEmptyList:
  4031                           	opt callstack 0
  4032                           
  4033 ;; *************** function _enqueue *****************
  4034 ;; Defined at:
  4035 ;;		line 17 in file "ready_queue.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;  ptr             3    9[COMRAM] PTR FTN()void 
  4038 ;;		 -> NULL(0), blink_LED5(1), blink_LED4(1), blink_LED3(1), 
  4039 ;;		 -> blink_LED2(1), blink_LED1(1), blink_LED0(1), 
  4040 ;;  data            2   12[COMRAM] PTR void 
  4041 ;;		 -> NULL(0), 
  4042 ;; Auto vars:     Size  Location     Type
  4043 ;;		None
  4044 ;; Return value:  Size  Location     Type
  4045 ;;                  1    wreg      unsigned char 
  4046 ;; Registers used:
  4047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4048 ;; Tracked objects:
  4049 ;;		On entry : 0/0
  4050 ;;		On exit  : 0/0
  4051 ;;		Unchanged: 0/0
  4052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4053 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4056 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4057 ;;Total ram usage:        5 bytes
  4058 ;; Hardware stack levels used:    1
  4059 ;; Hardware stack levels required when called:    3
  4060 ;; This function calls:
  4061 ;;		_isFullQueue
  4062 ;;		i2___awmod
  4063 ;;		i2___wmul
  4064 ;; This function is called by:
  4065 ;;		_handleListHead
  4066 ;; This function uses a non-reentrant model
  4067 ;;
  4068                           
  4069                           	psect	text27
  4070  000F96                     __ptext27:
  4071                           	opt callstack 0
  4072  000F96                     _enqueue:
  4073                           	opt callstack 19
  4074  000F96                     
  4075                           ;ready_queue.c: 18:     if(isFullQueue())
  4076  000F96  EC13  F00A         	call	_isFullQueue	;wreg free
  4077  000F9A  0900               	iorlw	0
  4078  000F9C  B4D8               	btfsc	status,2,c
  4079  000F9E  EFD3  F007         	goto	i2u124_41
  4080  000FA2  EFD5  F007         	goto	i2u124_40
  4081  000FA6                     i2u124_41:
  4082  000FA6  EFD7  F007         	goto	i2l1601
  4083  000FAA                     i2u124_40:
  4084  000FAA  EF1F  F008         	goto	i2l118
  4085  000FAE                     i2l1601:
  4086                           
  4087                           ;ready_queue.c: 20:     if(front == -1)
  4088  000FAE  2843               	incf	_front^0,w,c
  4089  000FB0  E106               	bnz	i2u125_41
  4090  000FB2  2844               	incf	(_front+1)^0,w,c
  4091  000FB4  A4D8               	btfss	status,2,c
  4092  000FB6  EFDF  F007         	goto	i2u125_41
  4093  000FBA  EFE1  F007         	goto	i2u125_40
  4094  000FBE                     i2u125_41:
  4095  000FBE  EFE5  F007         	goto	i2l1605
  4096  000FC2                     i2u125_40:
  4097  000FC2                     
  4098                           ;ready_queue.c: 21:         front = 0;
  4099  000FC2  0E00               	movlw	0
  4100  000FC4  6E44               	movwf	(_front+1)^0,c
  4101  000FC6  0E00               	movlw	0
  4102  000FC8  6E43               	movwf	_front^0,c
  4103  000FCA                     i2l1605:
  4104                           
  4105                           ;ready_queue.c: 22:     rear = (rear + 1) % 20;
  4106  000FCA  0E01               	movlw	1
  4107  000FCC  2441               	addwf	_rear^0,w,c
  4108  000FCE  6E01               	movwf	i2___awmod@dividend^0,c
  4109  000FD0  0E00               	movlw	0
  4110  000FD2  2042               	addwfc	(_rear+1)^0,w,c
  4111  000FD4  6E02               	movwf	(i2___awmod@dividend+1)^0,c
  4112  000FD6  0E00               	movlw	0
  4113  000FD8  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  4114  000FDA  0E14               	movlw	20
  4115  000FDC  6E03               	movwf	i2___awmod@divisor^0,c
  4116  000FDE  EC73  F007         	call	i2___awmod	;wreg free
  4117  000FE2  C001  F041         	movff	?i2___awmod,_rear
  4118  000FE6  C002  F042         	movff	?i2___awmod+1,_rear+1
  4119  000FEA                     
  4120                           ;ready_queue.c: 23:     ready_queue[rear].func_ptr = ptr;
  4121  000FEA  C041  F001         	movff	_rear,i2___wmul@multiplier
  4122  000FEE  C042  F002         	movff	_rear+1,i2___wmul@multiplier+1
  4123  000FF2  0E00               	movlw	0
  4124  000FF4  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  4125  000FF6  0E05               	movlw	5
  4126  000FF8  6E03               	movwf	i2___wmul@multiplicand^0,c
  4127  000FFA  EC00  F00A         	call	i2___wmul	;wreg free
  4128  000FFE  0E60               	movlw	low _ready_queue
  4129  001000  2401               	addwf	?i2___wmul^0,w,c
  4130  001002  6ED9               	movwf	fsr2l,c
  4131  001004  0E00               	movlw	high _ready_queue
  4132  001006  2002               	addwfc	(?i2___wmul+1)^0,w,c
  4133  001008  6EDA               	movwf	fsr2h,c
  4134  00100A  C00A  FFDE         	movff	enqueue@ptr,postinc2
  4135  00100E  C00B  FFDE         	movff	enqueue@ptr+1,postinc2
  4136  001012  C00C  FFDE         	movff	enqueue@ptr+2,postinc2
  4137  001016                     
  4138                           ;ready_queue.c: 24:     ready_queue[rear].data_p = data;
  4139  001016  C041  F001         	movff	_rear,i2___wmul@multiplier
  4140  00101A  C042  F002         	movff	_rear+1,i2___wmul@multiplier+1
  4141  00101E  0E00               	movlw	0
  4142  001020  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  4143  001022  0E05               	movlw	5
  4144  001024  6E03               	movwf	i2___wmul@multiplicand^0,c
  4145  001026  EC00  F00A         	call	i2___wmul	;wreg free
  4146  00102A  0E63               	movlw	low (_ready_queue+3)
  4147  00102C  2401               	addwf	?i2___wmul^0,w,c
  4148  00102E  6ED9               	movwf	fsr2l,c
  4149  001030  0E00               	movlw	high (_ready_queue+3)
  4150  001032  2002               	addwfc	(?i2___wmul+1)^0,w,c
  4151  001034  6EDA               	movwf	fsr2h,c
  4152  001036  C00D  FFDE         	movff	enqueue@data,postinc2
  4153  00103A  C00E  FFDD         	movff	enqueue@data+1,postdec2
  4154  00103E                     i2l118:
  4155  00103E  0012               	return		;funcret
  4156  001040                     __end_of_enqueue:
  4157                           	opt callstack 0
  4158                           
  4159 ;; *************** function i2___wmul *****************
  4160 ;; Defined at:
  4161 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  4162 ;; Parameters:    Size  Location     Type
  4163 ;;  multiplier      2    0[COMRAM] unsigned int 
  4164 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4165 ;; Auto vars:     Size  Location     Type
  4166 ;;  __wmul          2    4[COMRAM] unsigned int 
  4167 ;; Return value:  Size  Location     Type
  4168 ;;                  2    0[COMRAM] unsigned int 
  4169 ;; Registers used:
  4170 ;;		wreg, status,2, status,0, prodl, prodh
  4171 ;; Tracked objects:
  4172 ;;		On entry : 0/0
  4173 ;;		On exit  : 0/0
  4174 ;;		Unchanged: 0/0
  4175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4176 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4177 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4179 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4180 ;;Total ram usage:        6 bytes
  4181 ;; Hardware stack levels used:    1
  4182 ;; This function calls:
  4183 ;;		Nothing
  4184 ;; This function is called by:
  4185 ;;		_enqueue
  4186 ;;		_handleListHead
  4187 ;; This function uses a non-reentrant model
  4188 ;;
  4189                           
  4190                           	psect	text28
  4191  001400                     __ptext28:
  4192                           	opt callstack 0
  4193  001400                     i2___wmul:
  4194                           	opt callstack 22
  4195  001400  5001               	movf	i2___wmul@multiplier^0,w,c
  4196  001402  0203               	mulwf	i2___wmul@multiplicand^0,c
  4197  001404  CFF3 F005          	movff	prodl,i2___wmul@product
  4198  001408  CFF4 F006          	movff	prodh,i2___wmul@product+1
  4199  00140C  5001               	movf	i2___wmul@multiplier^0,w,c
  4200  00140E  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
  4201  001410  50F3               	movf	243,w,c
  4202  001412  2606               	addwf	(i2___wmul@product+1)^0,f,c
  4203  001414  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
  4204  001416  0203               	mulwf	i2___wmul@multiplicand^0,c
  4205  001418  50F3               	movf	243,w,c
  4206  00141A  2606               	addwf	(i2___wmul@product+1)^0,f,c
  4207  00141C  C005  F001         	movff	i2___wmul@product,?i2___wmul
  4208  001420  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  4209  001424  0012               	return		;funcret
  4210  001426                     __end_ofi2___wmul:
  4211                           	opt callstack 0
  4212                           
  4213 ;; *************** function _isFullQueue *****************
  4214 ;; Defined at:
  4215 ;;		line 7 in file "ready_queue.c"
  4216 ;; Parameters:    Size  Location     Type
  4217 ;;		None
  4218 ;; Auto vars:     Size  Location     Type
  4219 ;;		None
  4220 ;; Return value:  Size  Location     Type
  4221 ;;                  1    wreg      unsigned char 
  4222 ;; Registers used:
  4223 ;;		wreg, status,2, status,0, cstack
  4224 ;; Tracked objects:
  4225 ;;		On entry : 0/0
  4226 ;;		On exit  : 0/0
  4227 ;;		Unchanged: 0/0
  4228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4231 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4232 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4233 ;;Total ram usage:        1 bytes
  4234 ;; Hardware stack levels used:    1
  4235 ;; Hardware stack levels required when called:    2
  4236 ;; This function calls:
  4237 ;;		i2_getSizeQueue
  4238 ;; This function is called by:
  4239 ;;		_enqueue
  4240 ;; This function uses a non-reentrant model
  4241 ;;
  4242                           
  4243                           	psect	text29
  4244  001426                     __ptext29:
  4245                           	opt callstack 0
  4246  001426                     _isFullQueue:
  4247                           	opt callstack 19
  4248  001426                     
  4249                           ;ready_queue.c: 8:     return getSizeQueue() >= 20 ? 1 : 0;
  4250  001426  EC7A  F009         	call	i2_getSizeQueue	;wreg free
  4251  00142A  6E09               	movwf	??_isFullQueue^0,c
  4252  00142C  0E14               	movlw	20
  4253  00142E  6009               	cpfslt	??_isFullQueue^0,c
  4254  001430  EF1C  F00A         	goto	i2u113_41
  4255  001434  EF1F  F00A         	goto	i2u113_40
  4256  001438                     i2u113_41:
  4257  001438  0E01               	movlw	1
  4258  00143A  EF20  F00A         	goto	i2u114_40
  4259  00143E                     i2u113_40:
  4260  00143E  0E00               	movlw	0
  4261  001440                     i2u114_40:
  4262  001440  0012               	return		;funcret
  4263  001442                     __end_of_isFullQueue:
  4264                           	opt callstack 0
  4265                           
  4266 ;; *************** function i2_getSizeQueue *****************
  4267 ;; Defined at:
  4268 ;;		line 3 in file "ready_queue.c"
  4269 ;; Parameters:    Size  Location     Type
  4270 ;;		None
  4271 ;; Auto vars:     Size  Location     Type
  4272 ;;		None
  4273 ;; Return value:  Size  Location     Type
  4274 ;;                  1    wreg      unsigned char 
  4275 ;; Registers used:
  4276 ;;		wreg, status,2, status,0, cstack
  4277 ;; Tracked objects:
  4278 ;;		On entry : 0/0
  4279 ;;		On exit  : 0/0
  4280 ;;		Unchanged: 0/0
  4281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4284 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4285 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4286 ;;Total ram usage:        2 bytes
  4287 ;; Hardware stack levels used:    1
  4288 ;; Hardware stack levels required when called:    1
  4289 ;; This function calls:
  4290 ;;		i2___awmod
  4291 ;; This function is called by:
  4292 ;;		_isFullQueue
  4293 ;; This function uses a non-reentrant model
  4294 ;;
  4295                           
  4296                           	psect	text30
  4297  0012F4                     __ptext30:
  4298                           	opt callstack 0
  4299  0012F4                     i2_getSizeQueue:
  4300                           	opt callstack 19
  4301  0012F4                     
  4302                           ;ready_queue.c: 4:     return (rear - front + 1 + 20) % 20;
  4303  0012F4  5043               	movf	_front^0,w,c
  4304  0012F6  5C41               	subwf	_rear^0,w,c
  4305  0012F8  6E07               	movwf	??i2_getSizeQueue^0,c
  4306  0012FA  5044               	movf	(_front+1)^0,w,c
  4307  0012FC  5842               	subwfb	(_rear+1)^0,w,c
  4308  0012FE  6E08               	movwf	(??i2_getSizeQueue+1)^0,c
  4309  001300  0E15               	movlw	21
  4310  001302  2407               	addwf	??i2_getSizeQueue^0,w,c
  4311  001304  6E01               	movwf	i2___awmod@dividend^0,c
  4312  001306  0E00               	movlw	0
  4313  001308  2008               	addwfc	(??i2_getSizeQueue+1)^0,w,c
  4314  00130A  6E02               	movwf	(i2___awmod@dividend+1)^0,c
  4315  00130C  0E00               	movlw	0
  4316  00130E  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  4317  001310  0E14               	movlw	20
  4318  001312  6E03               	movwf	i2___awmod@divisor^0,c
  4319  001314  EC73  F007         	call	i2___awmod	;wreg free
  4320  001318  5001               	movf	?i2___awmod^0,w,c
  4321  00131A  0012               	return		;funcret
  4322  00131C                     __end_ofi2_getSizeQueue:
  4323                           	opt callstack 0
  4324                           
  4325 ;; *************** function i2___awmod *****************
  4326 ;; Defined at:
  4327 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  4328 ;; Parameters:    Size  Location     Type
  4329 ;;  dividend        2    0[COMRAM] int 
  4330 ;;  divisor         2    2[COMRAM] int 
  4331 ;; Auto vars:     Size  Location     Type
  4332 ;;  __awmod         1    5[COMRAM] unsigned char 
  4333 ;;  __awmod         1    4[COMRAM] unsigned char 
  4334 ;; Return value:  Size  Location     Type
  4335 ;;                  2    0[COMRAM] int 
  4336 ;; Registers used:
  4337 ;;		wreg, status,2, status,0
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4343 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4344 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4346 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4347 ;;Total ram usage:        6 bytes
  4348 ;; Hardware stack levels used:    1
  4349 ;; This function calls:
  4350 ;;		Nothing
  4351 ;; This function is called by:
  4352 ;;		_enqueue
  4353 ;;		i2_getSizeQueue
  4354 ;; This function uses a non-reentrant model
  4355 ;;
  4356                           
  4357                           	psect	text31
  4358  000EE6                     __ptext31:
  4359                           	opt callstack 0
  4360  000EE6                     i2___awmod:
  4361                           	opt callstack 21
  4362  000EE6  0E00               	movlw	0
  4363  000EE8  6E06               	movwf	i2___awmod@sign^0,c
  4364  000EEA  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
  4365  000EEC  EF7C  F007         	goto	i2u86_40
  4366  000EF0  EF7A  F007         	goto	i2u86_41
  4367  000EF4                     i2u86_41:
  4368  000EF4  EF82  F007         	goto	i2l1443
  4369  000EF8                     i2u86_40:
  4370  000EF8  6C01               	negf	i2___awmod@dividend^0,c
  4371  000EFA  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  4372  000EFC  B0D8               	btfsc	status,0,c
  4373  000EFE  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  4374  000F00  0E01               	movlw	1
  4375  000F02  6E06               	movwf	i2___awmod@sign^0,c
  4376  000F04                     i2l1443:
  4377  000F04  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
  4378  000F06  EF89  F007         	goto	i2u87_40
  4379  000F0A  EF87  F007         	goto	i2u87_41
  4380  000F0E                     i2u87_41:
  4381  000F0E  EF8D  F007         	goto	i2l1447
  4382  000F12                     i2u87_40:
  4383  000F12  6C03               	negf	i2___awmod@divisor^0,c
  4384  000F14  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  4385  000F16  B0D8               	btfsc	status,0,c
  4386  000F18  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  4387  000F1A                     i2l1447:
  4388  000F1A  5003               	movf	i2___awmod@divisor^0,w,c
  4389  000F1C  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  4390  000F1E  B4D8               	btfsc	status,2,c
  4391  000F20  EF94  F007         	goto	i2u88_41
  4392  000F24  EF96  F007         	goto	i2u88_40
  4393  000F28                     i2u88_41:
  4394  000F28  EFBA  F007         	goto	i2l1463
  4395  000F2C                     i2u88_40:
  4396  000F2C  0E01               	movlw	1
  4397  000F2E  6E05               	movwf	i2___awmod@counter^0,c
  4398  000F30  EF9E  F007         	goto	i2l1453
  4399  000F34                     i2l1451:
  4400  000F34  90D8               	bcf	status,0,c
  4401  000F36  3603               	rlcf	i2___awmod@divisor^0,f,c
  4402  000F38  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  4403  000F3A  2A05               	incf	i2___awmod@counter^0,f,c
  4404  000F3C                     i2l1453:
  4405  000F3C  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  4406  000F3E  EFA3  F007         	goto	i2u89_41
  4407  000F42  EFA5  F007         	goto	i2u89_40
  4408  000F46                     i2u89_41:
  4409  000F46  EF9A  F007         	goto	i2l1451
  4410  000F4A                     i2u89_40:
  4411  000F4A                     i2l1455:
  4412  000F4A  5003               	movf	i2___awmod@divisor^0,w,c
  4413  000F4C  5C01               	subwf	i2___awmod@dividend^0,w,c
  4414  000F4E  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  4415  000F50  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  4416  000F52  A0D8               	btfss	status,0,c
  4417  000F54  EFAE  F007         	goto	i2u90_41
  4418  000F58  EFB0  F007         	goto	i2u90_40
  4419  000F5C                     i2u90_41:
  4420  000F5C  EFB4  F007         	goto	i2l1459
  4421  000F60                     i2u90_40:
  4422  000F60  5003               	movf	i2___awmod@divisor^0,w,c
  4423  000F62  5E01               	subwf	i2___awmod@dividend^0,f,c
  4424  000F64  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  4425  000F66  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  4426  000F68                     i2l1459:
  4427  000F68  90D8               	bcf	status,0,c
  4428  000F6A  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  4429  000F6C  3203               	rrcf	i2___awmod@divisor^0,f,c
  4430  000F6E  2E05               	decfsz	i2___awmod@counter^0,f,c
  4431  000F70  EFA5  F007         	goto	i2l1455
  4432  000F74                     i2l1463:
  4433  000F74  5006               	movf	i2___awmod@sign^0,w,c
  4434  000F76  B4D8               	btfsc	status,2,c
  4435  000F78  EFC0  F007         	goto	i2u91_41
  4436  000F7C  EFC2  F007         	goto	i2u91_40
  4437  000F80                     i2u91_41:
  4438  000F80  EFC6  F007         	goto	i2l1467
  4439  000F84                     i2u91_40:
  4440  000F84  6C01               	negf	i2___awmod@dividend^0,c
  4441  000F86  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  4442  000F88  B0D8               	btfsc	status,0,c
  4443  000F8A  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  4444  000F8C                     i2l1467:
  4445  000F8C  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  4446  000F90  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  4447  000F94  0012               	return		;funcret
  4448  000F96                     __end_ofi2___awmod:
  4449                           	opt callstack 0
  4450  0000                     
  4451                           	psect	text32
  4452  000000                     __ptext32:
  4453                           	opt callstack 0
  4454  000000                     
  4455                           	psect	rparam
  4456  0000                     
  4457                           	psect	temp
  4458  000045                     btemp:
  4459                           	opt callstack 0
  4460  000045                     	ds	1
  4461  0000                     int$flags	set	btemp
  4462  0000                     wtemp8	set	btemp+1
  4463  0000                     ttemp5	set	btemp+1
  4464  0000                     ttemp6	set	btemp+4
  4465  0000                     ttemp7	set	btemp+8
  4466                           tosu	equ	0xFFF
  4467                           tosh	equ	0xFFE
  4468                           tosl	equ	0xFFD
  4469                           stkptr	equ	0xFFC
  4470                           pclatu	equ	0xFFB
  4471                           pclath	equ	0xFFA
  4472                           pcl	equ	0xFF9
  4473                           tblptru	equ	0xFF8
  4474                           tblptrh	equ	0xFF7
  4475                           tblptrl	equ	0xFF6
  4476                           tablat	equ	0xFF5
  4477                           prodh	equ	0xFF4
  4478                           prodl	equ	0xFF3
  4479                           indf0	equ	0xFEF
  4480                           postinc0	equ	0xFEE
  4481                           postdec0	equ	0xFED
  4482                           preinc0	equ	0xFEC
  4483                           plusw0	equ	0xFEB
  4484                           fsr0h	equ	0xFEA
  4485                           fsr0l	equ	0xFE9
  4486                           wreg	equ	0xFE8
  4487                           indf1	equ	0xFE7
  4488                           postinc1	equ	0xFE6
  4489                           postdec1	equ	0xFE5
  4490                           preinc1	equ	0xFE4
  4491                           plusw1	equ	0xFE3
  4492                           fsr1h	equ	0xFE2
  4493                           fsr1l	equ	0xFE1
  4494                           bsr	equ	0xFE0
  4495                           indf2	equ	0xFDF
  4496                           postinc2	equ	0xFDE
  4497                           postdec2	equ	0xFDD
  4498                           preinc2	equ	0xFDC
  4499                           plusw2	equ	0xFDB
  4500                           fsr2h	equ	0xFDA
  4501                           fsr2l	equ	0xFD9
  4502                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         426
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      68
    BANK0           160     45     152
    BANK1           256     12      12
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    handleListHead$1174	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    handleListHead$1173	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(NULL[0]), blink_LED5(), blink_LED4(), blink_LED3(), 
		 -> blink_LED2(), blink_LED1(), blink_LED0(), 

    ?_dequeue.data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ?_dequeue.func_ptr	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(NULL[0]), blink_LED5(), blink_LED4(), blink_LED3(), 
		 -> blink_LED2(), blink_LED1(), blink_LED0(), 

    register_timer@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    register_timer@callback	PTR FTN()void  size(3) Largest target is 1
		 -> blink_LED5(), blink_LED4(), blink_LED3(), blink_LED2(), 
		 -> blink_LED1(), blink_LED0(), 

    node.data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    node.func_ptr	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(NULL[0]), blink_LED5(), blink_LED4(), blink_LED3(), 
		 -> blink_LED2(), blink_LED1(), blink_LED0(), 

    addTask@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    addTask@ptr	PTR FTN()void  size(3) Largest target is 1
		 -> blink_LED5(), blink_LED4(), blink_LED3(), blink_LED2(), 
		 -> blink_LED1(), blink_LED0(), 

    S29$data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    task_list.data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S29$func_ptr	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(NULL[0]), blink_LED5(), blink_LED4(), blink_LED3(), 
		 -> blink_LED2(), blink_LED1(), blink_LED0(), 

    task_list.func_ptr	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(NULL[0]), blink_LED5(), blink_LED4(), blink_LED3(), 
		 -> blink_LED2(), blink_LED1(), blink_LED0(), 

    temp.data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    temp.func_ptr	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(NULL[0]), blink_LED5(), blink_LED4(), blink_LED3(), 
		 -> blink_LED2(), blink_LED1(), blink_LED0(), 

    enqueue@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S25$data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ready_queue.data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S25$func_ptr	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(NULL[0]), blink_LED5(), blink_LED4(), blink_LED3(), 
		 -> blink_LED2(), blink_LED1(), blink_LED0(), 

    ready_queue.func_ptr	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(NULL[0]), blink_LED5(), blink_LED4(), blink_LED3(), 
		 -> blink_LED2(), blink_LED1(), blink_LED0(), 

    enqueue@ptr	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(NULL[0]), blink_LED5(), blink_LED4(), blink_LED3(), 
		 -> blink_LED2(), blink_LED1(), blink_LED0(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _timer_interrupt in COMRAM

    _timer_interrupt->_handleListHead
    _handleListHead->_enqueue
    _enqueue->_isFullQueue
    _isFullQueue->i2_getSizeQueue
    i2_getSizeQueue->i2___awmod

Critical Paths under _main in BANK0

    _main->_register_timer
    _system_initialize->_start_timer
    _start_timer->_initializeTaskList
    _initializeTaskList->___wmul
    _register_timer->_addTask
    _addTask->___wmul
    _dispatch->_selectReadyTask
    _selectReadyTask->_dequeue
    _isEmptyQueue->_getSizeQueue
    _getSizeQueue->___awmod

Critical Paths under _timer_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer_interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer_interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer_interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timer_interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timer_interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _timer_interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _timer_interrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _timer_interrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _timer_interrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _timer_interrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _timer_interrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _timer_interrupt in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _timer_interrupt in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _timer_interrupt in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _timer_interrupt in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    9624
                                              0 BANK1     12    12      0
                           _dispatch
                     _register_timer
                  _system_initialize
 ---------------------------------------------------------------------------------
 (1) _system_initialize                                    0     0      0    1169
               _interrupt_initialize
                     _osc_initialize
                     _pin_initialize
                        _start_timer
 ---------------------------------------------------------------------------------
 (2) _start_timer                                          3     3      0    1169
                                              8 BANK0      3     3      0
                 _initializeTaskList
 ---------------------------------------------------------------------------------
 (3) _initializeTaskList                                   2     2      0    1107
                                              6 BANK0      2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _pin_initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _osc_initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _interrupt_initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _register_timer                                      13     0     13    4606
                                             32 BANK0     13     0     13
                            _addTask
 ---------------------------------------------------------------------------------
 (2) _addTask                                             26    13     13    2322
                                              6 BANK0     26    13     13
                             ___wmul
                         _isFullList
 ---------------------------------------------------------------------------------
 (3) _isFullList                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dispatch                                             0     0      0    3831
                    _selectReadyTask
 ---------------------------------------------------------------------------------
 (2) _selectReadyTask                                      5     5      0    3831
                                             20 BANK0      5     5      0
                         _blink_LED0 *
                         _blink_LED1 *
                         _blink_LED2 *
                         _blink_LED3 *
                         _blink_LED4 *
                         _blink_LED5 *
                            _dequeue
                       _isEmptyQueue
 ---------------------------------------------------------------------------------
 (3) _dequeue                                             12     7      5    2829
                                              8 BANK0     12     7      5
                            ___awmod
                             ___wmul
                       _isEmptyQueue
 ---------------------------------------------------------------------------------
 (3) _isEmptyQueue                                         0     0      0     903
                       _getSizeQueue
 ---------------------------------------------------------------------------------
 (4) _getSizeQueue                                         2     2      0     903
                                              6 BANK0      2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     903
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     884
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _blink_LED5                                           2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _blink_LED4                                           0     0      0       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _blink_LED3                                           0     0      0       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _blink_LED2                                           0     0      0       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _blink_LED1                                           0     0      0       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _blink_LED0                                           0     0      0       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _timer_interrupt                                      6     6      0    2862
                                             39 COMRAM     6     6      0
                     _handleListHead
 ---------------------------------------------------------------------------------
 (8) _handleListHead                                      25    25      0    2862
                                             14 COMRAM    25    25      0
                            _enqueue
                         _removeTask
                           i2___wmul
 ---------------------------------------------------------------------------------
 (9) _removeTask                                           6     6      0     332
                                              0 COMRAM     6     6      0
                        _isEmptyList
 ---------------------------------------------------------------------------------
 (10) _isEmptyList                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _enqueue                                              5     0      5    1467
                                              9 COMRAM     5     0      5
                        _isFullQueue
                          i2___awmod
                           i2___wmul
 ---------------------------------------------------------------------------------
 (9) i2___wmul                                             6     2      4     471
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) _isFullQueue                                         1     1      0     400
                                              8 COMRAM     1     1      0
                     i2_getSizeQueue
 ---------------------------------------------------------------------------------
 (11) i2_getSizeQueue                                      2     2      0     400
                                              6 COMRAM     2     2      0
                          i2___awmod
 ---------------------------------------------------------------------------------
 (10) i2___awmod                                           6     2      4     400
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dispatch
     _selectReadyTask
       _blink_LED0 *
       _blink_LED1 *
       _blink_LED2 *
       _blink_LED3 *
       _blink_LED4 *
       _blink_LED5 *
       _dequeue *
         ___awmod
         ___wmul
         _isEmptyQueue
           _getSizeQueue
             ___awmod
       _isEmptyQueue *
         _getSizeQueue
           ___awmod
   _register_timer
     _addTask
       ___wmul
       _isFullList
   _system_initialize
     _interrupt_initialize
     _osc_initialize
     _pin_initialize
     _start_timer
       _initializeTaskList
         ___wmul

 _timer_interrupt (ROOT)
   _handleListHead
     _enqueue
       _isFullQueue
         i2_getSizeQueue
           i2___awmod
       i2___awmod
       i2___wmul
     _removeTask
       _isEmptyList
     i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0     12C      37        7.6%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      C       C       7        4.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2D      98       5       95.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      44       1       72.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E8      32        0.0%
DATA                 0      0     214       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Oct 06 18:41:01 2019

             ??i2_getSizeQueue 0007                             l32 13B2                             l41 1340  
                           l35 138C                             l44 13FE                             l29 13D8  
                           l38 1366                             l90 14A2                             l93 14AE  
                           l87 14A8                             l96 145A                 ??_getSizeQueue 00D1  
          ___wmul@multiplicand 00CD                            l114 129E                            l122 1080  
                          l107 12CA                            l123 10E0                            l211 11DA  
                          l154 0D82                            l149 1474                            l261 10FC  
                          l158 095C                            l272 126A                            l259 1176  
                          l292 12F2                            l536 0E34                            l289 14B4  
                  _start_timer 10E2                   ___awmod@sign 00D0                            prod 000FF3  
                          tosl 000FFD                            wreg 000FE8                   __CFG_LVP$OFF 000000  
                 __CFG_WDT$OFF 000000                           l2001 0576                           l2011 0582  
                         l2005 057C                           l2101 0C30                           l2031 065C  
                         l2015 05AA                           l2103 0C6A                           l2041 0756  
                         l2033 0670                           l2025 05D2                           l2017 05AC  
                         l2051 0832                           l2043 0762                           l2035 06C0  
                         l2027 0646                           l2019 05BC                           l2061 095A  
                         l2053 0862                           l2045 07AC                           l2037 06D8  
                         l2029 0648                           l2071 11A4                           l2055 087A  
                         l2047 07DE                           l2039 06E2                           l2135 1148  
                         l2073 11C6                           l2065 1178                           l2049 07F2  
                         l2057 089A                           l2081 1454                           l2067 117C  
                         l2059 08BE                           l2083 1232                           l2075 1442  
                         l2091 0B0E                           l2069 118E                           l2077 144A  
                         l2093 0B48                           l2087 14B0                           l2079 144E  
                         l2095 0B82                           l2097 0BBC                           l2089 0B0A  
                         l2099 0BF6                           l1901 12CC                           l1911 138E  
                         l1903 12EA                           l1913 13A8                           l1921 135C  
                         l1907 13B4                           l1915 1368                           l1923 131C  
                         l1851 0D84                           l1931 1040                           l1909 13CE  
                         l1917 1382                           l1925 1336                           l1861 0DB2  
                         l1853 0D8A                           l1941 10AA                           l1933 1056  
                         l1927 13DA                           l1919 1342                           l1871 0DEA  
                         l1863 0DBA                           l1855 0D98                           l1935 106A  
                         l1951 0C76                           l1929 13F4                           l1881 0E24  
                         l1873 0E00                           l1865 0DCC                           l1857 0DA0  
                         l1961 0D5A                           l1883 0E2C                           l1875 0E08  
                         l1867 0DD4                           l1859 0DA4                           l1891 126C  
                         l1939 1088                           l1947 145C                           l1963 0D76  
                         l1971 10E6                           l1877 0E0E                           l1869 0DDC  
                         l1893 1280                           l1965 14A4                           l1957 0C80  
                         l1981 1122                           l1879 0E14                           l1887 12A0  
                         l1967 148E                           l1959 0D56                           l1983 1124  
                         l1975 1100                           l1991 1134                           l1897 1286  
                         l1969 14AA                           l1985 1128                           l1977 111C  
                         l1987 112C                           l1979 1120                           l1999 0562  
                         u2000 07F2                           u2001 07EE                           u2010 0832  
                         u2011 082E                           u2020 08BE                           u2021 08BA  
                         u2031 1186                           u2040 11A4                           u2041 11A0  
                         u2060 11DA                           u2061 11D6                           _LATC 000F8B  
                         u1600 0DB2                           _LATD 000F8C                           u1601 0DAE  
                         u1610 0DCC                           u2058 11B2                           u1611 0DC8  
                         u2059 11C6                           u1620 0DEA                           u1621 0DE6  
                         u1710 13A2                           u1630 0E00                           u1711 139C  
                         u1631 0DFC                           u1720 13A4                           u1800 1330  
                         u1640 0E24                           u1705 13D6                           u1801 132A  
                         u1641 0E20                           u1706 13D8                           u1810 1332  
                         u1650 1280                           u1651 127C                           u1740 137C  
                         u1660 129C                           u1900 1474                           u1741 1376  
                         u1661 1296                           u1830 13EE                           u1750 137E  
                         u1590 0D98                           u1670 129E                           u1910 0D76  
                         u1831 13E8                           u1735 13B0                           u1591 0D94  
                         u1911 0D72                           u1840 13F0                           u1680 13C8  
                         u1736 13B2                           u1920 10F8                           u1681 13C2  
                         u1825 133E                           u1921 10F4                           u1690 13CA  
                         u1770 1356                           u1826 1340                           u1930 0576  
                         u1771 1350                           u1931 0572                           u1780 1358  
                         u1860 106A                           u1940 05A6                           u1765 138A  
                         u1861 1066                           u1941 05A2                           u1766 138C  
                         u1950 05BC                           u1855 13FC                           u1871 1074  
                         u1951 05B8                           u1856 13FE                           u1960 05CE  
                         u1881 10D4                           u1961 05CA                           u1890 1472  
                         u1970 065C                           u1795 1364                           u1891 146C  
                         u1971 0658                           u1796 1366                           u1980 0670  
                         u1981 066C                           u1990 06C0                           u1991 06BC  
               ??_isEmptyQueue 00D3       __size_of_selectReadyTask 0064                           _head 00C8  
                         _main 0B0A                           _rear 0041                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         fsr2l 000FD9                           btemp 0045                           prodh 000FF4  
                         prodl 000FF3                           start 000E                  __CFG_IESO$OFF 000000  
                __CFG_MCLRE$ON 000000                   ___param_bank 000000                          ?_main 0001  
              __end_of___awmod 0E36                __end_of_addTask 095E                          _T0CON 000FD5  
                        _T1CON 000FCD                          i2l110 1440                          i2l107 131A  
                        i2l118 103E                          i2l146 148C                          i2l181 0A74  
                        i2l190 04FE                          i2l191 002C                          i2l178 0B08  
                        i2l179 0A58                          i2l292 1424                          i2l197 0442  
                        i2l189 0560                          i2l286 0ECA                          i2l536 0F94  
                        _TMR1H 000FCF                          _TMR0L 000FD6                          _TMR1L 000FCE  
                        _TRISC 000F94                          _TRISD 000F95                  __CFG_PWRT$OFF 000000  
               __CFG_FCMEN$OFF 000000                __end_of_dequeue 10E2                __end_of_enqueue 1040  
                        _count 003E                          _front 0043    __size_of_initializeTaskList 010E  
                        _value 0040                 __CFG_BOREN$OFF 000000                          pclath 000FFA  
                        tablat 000FF5  __size_of_interrupt_initialize 0006               __end_ofi2___wmul 1426  
                        plusw0 000FEB                          plusw1 000FE3                          plusw2 000FDB  
                        ttemp5 0046                          ttemp6 0049                          ttemp7 004D  
                        status 000FD8        __size_of_osc_initialize 0006                          wtemp8 0046  
           __size_ofi2___awmod 00B0                __initialization 11DC                   __end_of_main 0C76  
               _pin_initialize 148E       __size_of_timer_interrupt 0EDE                         ??_main 00F8  
                __activetblptr 000003                    enqueue@data 000D                         _ADCON1 000FC1  
               _register_timer 1232                         i2l1441 0F00                         i2l1601 0FAE  
                       i2l1451 0F34                         i2l1443 0F04                         i2l1435 0EE6  
                       i2l1515 1426                         i2l1603 0FC2                         i2l1461 0F6E  
                       i2l1453 0F3C                         i2l1445 0F12                         i2l1437 0EEA  
                       i2l1605 0FCA                         i2l1701 0AEE                         i2l1455 0F4A  
                       i2l1463 0F74                         i2l1447 0F1A                         i2l1439 0EF8  
                       i2l1607 0FEA                         i2l1535 1476                         i2l1703 0B06  
                       i2l1465 0F84                         i2l1457 0F60                         i2l1449 0F2C  
                       i2l1609 1016                         i2l1801 0E6E                         i2l1467 0F8C  
                       i2l1459 0F68                         i2l1731 0012                         i2l1811 0E9E  
                       i2l1803 0E72                         i2l1557 1400                         i2l1741 0158  
                       i2l1813 0EA6                         i2l1805 0E80                         i2l1487 12F4  
                       i2l1559 141C                         i2l1751 0214                         i2l1743 016E  
                       i2l1735 0034                         i2l1815 0EAA                         i2l1807 0E8E  
                       i2l1681 0974                         i2l1761 0394                         i2l1753 02E4  
                       i2l1745 0182                         i2l1737 00FE                         i2l1817 0EAE  
                       i2l1809 0E9C                         i2l1691 0A06                         i2l1683 0998  
                       i2l1763 03F2                         i2l1755 02F0                         i2l1747 01E0  
                       i2l1739 0108                         i2l1819 0EC2                         i2l1597 0F96  
                       i2l1693 0A24                         i2l1765 0476                         i2l1757 0350  
                       i2l1749 0208                         i2l1695 0A60                         i2l1687 099E  
                       i2l1679 0960                         i2l1767 0534                         i2l1759 0380  
                       i2l1697 0A98                         i2l1689 0A02                         i2l1699 0AC6  
                       i2l1795 0E50                         i2l1797 0E5E                         i2l1799 0E6C  
          initializeTaskList@i 00D1           __end_of_getSizeQueue 12CC                         _OSCCON 000FD3  
               __CFG_XINST$OFF 000000           __size_of_isEmptyList 0018               __end_of_dispatch 14B6  
            ??_selectReadyTask 00DF                         ___wmul 12CC         __end_of_pin_initialize 14A4  
                    ??___awmod 00CF                      ??_addTask 00DE           __size_of_isFullQueue 001C  
                 addTask@delay 00D5                         clear_0 1204                         clear_1 1216  
                       clear_2 1222                ___awmod@divisor 00CD                ___awmod@counter 00CF  
         __end_of_isEmptyQueue 12A0                      ??_dequeue 00D8                      ??_enqueue 000F  
                 __pdataCOMRAM 0041              __end_ofi2___awmod 0F96                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8         __end_of_register_timer 126C  
               i2___awmod@sign 0006                     __accesstop 0060        __end_of__initialization 1228  
                ___rparam_used 000001                 __pcstackCOMRAM 0001                ?_pin_initialize 0001  
                    ?i2___wmul 0001                   ?_start_timer 0001                __CFG_OSC$INTIO7 000000  
            ??_timer_interrupt 0028                     addTask@idx 00EA                     addTask@cur 00E8  
                   addTask@ptr 00D9                ?_register_timer 00EB                     __pbssBANK0 0060  
               _osc_initialize 14A4        __size_of_handleListHead 0550                     _blink_LED0 13B4  
                   _blink_LED1 138E                     _blink_LED2 1368                     _blink_LED3 1342  
                   _blink_LED4 131C                     _blink_LED5 13DA         start_timer@timer_vaddr 00D5  
                      ?___wmul 00CB             register_timer@data 00F6                     ??i2___wmul 0005  
                   _isFullList 145C          __size_of_getSizeQueue 002C                        i2u90_40 0F60  
                      i2u90_41 0F5C                        i2u91_40 0F84                        i2u91_41 0F80  
                      i2u86_40 0EF8                        i2u86_41 0EF4                        i2u87_40 0F12  
                      i2u87_41 0F0E                        i2u88_40 0F2C                        i2u88_41 0F28  
                      i2u89_40 0F4A                        i2u89_41 0F46         __end_of_osc_initialize 14AA  
                    ?_dispatch 0001           register_timer@period 00EB                        __Hparam 0000  
                      __Lparam 0000          __size_of_isEmptyQueue 0034                        ___awmod 0D84  
                      _addTask 0562                __size_of___wmul 0028   __end_of_interrupt_initialize 14B0  
                      __pcinit 11DC                        __ramtop 1000                   _getSizeQueue 12A0  
                      __ptext0 0B0A                        __ptext1 1442                        __ptext2 10E2  
                      __ptext3 0C76                        __ptext4 148E                        __ptext5 14A4  
                      __ptext6 14AA                        __ptext7 1232                        __ptext8 0562  
                      __ptext9 145C                        _dequeue 1040                        _enqueue 0F96  
             ___awmod@dividend 00CB        __size_ofi2_getSizeQueue 0028                  addTask@period 00D1  
   __end_of_initializeTaskList 0D84                        _time_ms 00C4                     ??_dispatch 00E4  
               __pintcode_body 0E36                ?_osc_initialize 0001           end_of_initialization 1228  
              _selectReadyTask 1178                        int_func 0E36                      _LED_state 002E  
          i2___wmul@multiplier 0001                   _isEmptyQueue 126C                     _removeTask 095E  
                  ?_blink_LED0 00CB                    ?_blink_LED1 00CB                    ?_blink_LED2 00CB  
                  ?_blink_LED3 00CB                    ?_blink_LED4 00CB                    ?_blink_LED5 00CB  
           handleListHead@prev 0022                        postdec1 000FE5                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
                   dequeue@idx 00D8                    ?_isFullList 0001           __size_of_start_timer 0096  
                    i2___awmod 0EE6                  ??_isEmptyList 0001               ??_pin_initialize 00CB  
               _handleListHead 0012                  ??_isFullQueue 0009                _timer_interrupt 0008  
               __end_of___wmul 12F4         register_timer@callback 00F3                  __pidataCOMRAM 14B6  
             ??_register_timer 00F8               i2___wmul@product 0005            start_initialization 11DC  
      __end_of_selectReadyTask 11DC              __size_ofi2___wmul 0026            __size_of_blink_LED0 0026  
          __size_of_blink_LED1 0026            __size_of_blink_LED2 0026            __size_of_blink_LED3 0026  
          __size_of_blink_LED4 0026            __size_of_blink_LED5 0026                     ?i2___awmod 0001  
          selectReadyTask@node 00DF           _interrupt_initialize 14AA         __end_of_handleListHead 0562  
                   enqueue@ptr 000A                    ?_removeTask 0001            __size_of_isFullList 001A  
                  addTask@data 00DC                       ??___wmul 00CF            __end_of_isEmptyList 148E  
                  addTask@prev 00E6            __end_of_isFullQueue 1442                    __pbssBIGRAM 00F8  
               i2_getSizeQueue 12F4                    __pbssCOMRAM 002E                  __pcstackBANK0 00CB  
        ?_interrupt_initialize 0001              __size_of_dispatch 0006                ?_handleListHead 0001  
      __end_of_timer_interrupt 0EE6                  removeTask@idx 0006                  removeTask@pos 0005  
                    __pintcode 0008                       ?___awmod 00CB                       ?_addTask 00D1  
       __end_ofi2_getSizeQueue 131C                       ?_dequeue 00D3                       ?_enqueue 000A  
          register_timer@delay 00EF               ??_osc_initialize 00CB               ?_selectReadyTask 0001  
          __size_of_removeTask 01AC                    ??i2___awmod 0005                 ___wmul@product 00CF  
                     _LATDbits 000F8C             _initializeTaskList 0C76                       _PIE1bits 000F9D  
                  _isEmptyList 1476                       i2u113_40 143E                       i2u113_41 1438  
                     i2u114_40 1440                       i2u124_40 0FAA                       i2u140_40 0AC6  
                     i2u124_41 0FA6                       i2u140_41 0AC2                       i2u125_40 0FC2  
                     i2u125_41 0FBE                       i2u118_40 148A                       i2u150_40 0394  
                     i2u118_41 1484                       i2u150_41 0390                       i2u119_40 148C  
                     i2u151_40 03F2                       i2u151_41 03EE                       i2u136_40 0974  
                     i2u152_40 0476                       i2u136_41 0970                       i2u152_41 0472  
                     i2u137_40 0998                       i2u153_40 0534                       i2u145_40 0028  
                     i2u137_41 0994                       i2u153_41 0530                       i2u145_41 0024  
                     i2u138_40 0A24                       i2u146_40 00FE                       i2u154_40 0E5E  
                     i2u138_41 0A20                       i2u146_41 00FA                       i2u154_41 0E5A  
                     i2u139_40 0A98                       i2u147_40 016E                       i2u155_40 0E6C  
                     i2u139_41 0A94                       i2u147_41 016A                       i2u155_41 0E68  
                     i2u148_40 0182                       i2u156_40 0E8E                       i2u148_41 017E  
                     i2u156_41 0E8A                       i2u149_40 01E0                       i2u157_40 0E9C  
                     i2u149_41 01DC                       i2u157_41 0E98                       i2u158_40 0EC2  
                     i2u158_41 0EBE                       _PIR1bits 000F9E                      _task_list 00F8  
                 ??_blink_LED0 00CB                   ??_blink_LED1 00CB                   ??_blink_LED2 00CB  
                 ??_blink_LED3 00CB                   ??_blink_LED4 00CB                   ??_blink_LED5 00CD  
                  _isFullQueue 1426              handleListHead@cur 0024              handleListHead@pos 0026  
          ?_initializeTaskList 0001                ?i2_getSizeQueue 0001              ___wmul@multiplier 00CB  
                     i2___wmul 1400                   ??_isFullList 00CB              _system_initialize 1442  
         ??_initializeTaskList 00D1         ??_interrupt_initialize 00CB             __end_of_blink_LED0 13DA  
           __end_of_blink_LED1 13B4             __end_of_blink_LED2 138E             __end_of_blink_LED3 1368  
           __end_of_blink_LED4 1342             __end_of_blink_LED5 1400                      copy_data0 11F0  
           i2___awmod@dividend 0001             ?_system_initialize 0001            ??_system_initialize 00D6  
             ?_timer_interrupt 0001                       __Hrparam 0000                       __Lrparam 0000  
          _handleListHead$1173 001B            _handleListHead$1174 001E            _handleListHead$1175 0020  
           __end_of_isFullList 1476               __size_of___awmod 00B2               __size_of_addTask 03FC  
        i2___wmul@multiplicand 0003               __size_of_dequeue 00A2                  ??_start_timer 00D3  
    __end_of_system_initialize 145C               __size_of_enqueue 00AA                       __ptext10 14B0  
                     __ptext11 1178                       __ptext20 138E                       __ptext12 1040  
                     __ptext21 13B4                       __ptext13 126C                       __ptext30 12F4  
                     __ptext22 13DA                       __ptext14 12A0                       __ptext31 0EE6  
                     __ptext15 0D84                       __ptext32 0000                       __ptext24 0012  
                     __ptext16 12CC                       __ptext25 095E                       __ptext17 131C  
                     __ptext26 1476                       __ptext18 1342                       __ptext27 0F96  
                     __ptext19 1368                       __ptext28 1400                       __ptext29 1426  
                     _dispatch 14B0                  __size_of_main 016C                    _ready_queue 0060  
                 ??_removeTask 0001                       _num_task 00CA                       int$flags 0045  
            i2___awmod@divisor 0003              i2___awmod@counter 0005                     _INTCONbits 000FF2  
           __end_of_removeTask 0B0A               ??_handleListHead 000F            __end_of_start_timer 1178  
                     intlevel2 0000                  fp__blink_LED0 0000                  fp__blink_LED1 0000  
                fp__blink_LED2 0000                  fp__blink_LED3 0000                  fp__blink_LED4 0000  
                fp__blink_LED5 0000                  ?_getSizeQueue 0001        __size_of_pin_initialize 0016  
   __size_of_system_initialize 001A        __size_of_register_timer 003A                    dequeue@temp 00DA  
                ?_isEmptyQueue 0001                   ?_isEmptyList 0001                   ?_isFullQueue 0001  
