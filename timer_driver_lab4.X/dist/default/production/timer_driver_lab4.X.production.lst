

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Oct 06 18:31:03 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50  0000                     
    51                           ; Version 2.10
    52                           ; Generated 31/07/2019 GMT
    53                           ; 
    54                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F8722 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     
    86                           	psect	idataCOMRAM
    87  00142E                     __pidataCOMRAM:
    88                           	opt callstack 0
    89                           
    90                           ;initializer for _rear
    91  00142E  FFFF               	dw	65535
    92                           
    93                           ;initializer for _front
    94  001430  FFFF               	dw	65535
    95  0000                     _TMR1L	set	4046
    96  0000                     _TMR1H	set	4047
    97  0000                     _T1CON	set	4045
    98  0000                     _PIR1bits	set	3998
    99  0000                     _PIE1bits	set	3997
   100  0000                     _TMR0L	set	4054
   101  0000                     _T0CON	set	4053
   102  0000                     _INTCONbits	set	4082
   103  0000                     _TRISD	set	3989
   104  0000                     _LATD	set	3980
   105  0000                     _ADCON1	set	4033
   106  0000                     _TRISC	set	3988
   107  0000                     _LATC	set	3979
   108  0000                     _OSCCON	set	4051
   109  0000                     _LATDbits	set	3980
   110                           
   111                           ; #config settings
   112  0000                     
   113                           	psect	cinit
   114  001158                     __pcinit:
   115                           	opt callstack 0
   116  001158                     start_initialization:
   117                           	opt callstack 0
   118  001158                     __initialization:
   119                           	opt callstack 0
   120                           
   121                           ; Initialize objects allocated to COMRAM (4 bytes)
   122                           ; load TBLPTR registers with __pidataCOMRAM
   123  001158  0E2E               	movlw	low __pidataCOMRAM
   124  00115A  6EF6               	movwf	tblptrl,c
   125  00115C  0E14               	movlw	high __pidataCOMRAM
   126  00115E  6EF7               	movwf	tblptrh,c
   127  001160  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   128  001162  6EF8               	movwf	tblptru,c
   129  001164  EE00  F042         	lfsr	0,__pdataCOMRAM
   130  001168  EE10 F004          	lfsr	1,4
   131  00116C                     copy_data0:
   132  00116C  0009               	tblrd		*+
   133  00116E  CFF5 FFEE          	movff	tablat,postinc0
   134  001172  50E5               	movf	postdec1,w,c
   135  001174  50E1               	movf	fsr1l,w,c
   136  001176  E1FA               	bnz	copy_data0
   137                           
   138                           ; Clear objects allocated to BIGRAM (300 bytes)
   139  001178  EE00  F0CB         	lfsr	0,__pbssBIGRAM
   140  00117C  EE11 F02C          	lfsr	1,300
   141  001180                     clear_0:
   142  001180  6AEE               	clrf	postinc0,c
   143  001182  50E5               	movf	postdec1,w,c
   144  001184  50E1               	movf	fsr1l,w,c
   145  001186  E1FC               	bnz	clear_0
   146  001188  50E2               	movf	fsr1h,w,c
   147  00118A  E1FA               	bnz	clear_0
   148                           
   149                           ; Clear objects allocated to BANK0 (62 bytes)
   150  00118C  EE00  F060         	lfsr	0,__pbssBANK0
   151  001190  0E3E               	movlw	62
   152  001192                     clear_1:
   153  001192  6AEE               	clrf	postinc0,c
   154  001194  06E8               	decf	wreg,f,c
   155  001196  E1FD               	bnz	clear_1
   156                           
   157                           ; Clear objects allocated to COMRAM (24 bytes)
   158  001198  EE00  F02A         	lfsr	0,__pbssCOMRAM
   159  00119C  0E18               	movlw	24
   160  00119E                     clear_2:
   161  00119E  6AEE               	clrf	postinc0,c
   162  0011A0  06E8               	decf	wreg,f,c
   163  0011A2  E1FD               	bnz	clear_2
   164  0011A4                     end_of_initialization:
   165                           	opt callstack 0
   166  0011A4                     __end_of__initialization:
   167                           	opt callstack 0
   168  0011A4  9046               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   169  0011A6  9246               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   170  0011A8  0100               	movlb	0
   171  0011AA  EF6D  F005         	goto	_main	;jump to C main() function
   172                           
   173                           	psect	bssCOMRAM
   174  00002A                     __pbssCOMRAM:
   175                           	opt callstack 0
   176  00002A                     _LED_state:
   177                           	opt callstack 0
   178  00002A                     	ds	16
   179  00003A                     _time_ms:
   180                           	opt callstack 0
   181  00003A                     	ds	4
   182  00003E                     _count:
   183                           	opt callstack 0
   184  00003E                     	ds	2
   185  000040                     _num_task:
   186                           	opt callstack 0
   187  000040                     	ds	1
   188  000041                     _value:
   189                           	opt callstack 0
   190  000041                     	ds	1
   191                           
   192                           	psect	dataCOMRAM
   193  000042                     __pdataCOMRAM:
   194                           	opt callstack 0
   195  000042                     _rear:
   196                           	opt callstack 0
   197  000042                     	ds	2
   198  000044                     _front:
   199                           	opt callstack 0
   200  000044                     	ds	2
   201                           
   202                           	psect	bssBANK0
   203  000060                     __pbssBANK0:
   204                           	opt callstack 0
   205  000060                     _ready_queue:
   206                           	opt callstack 0
   207  000060                     	ds	60
   208  00009C                     _head:
   209                           	opt callstack 0
   210  00009C                     	ds	2
   211                           
   212                           	psect	bssBIGRAM
   213  0000CB                     __pbssBIGRAM:
   214                           	opt callstack 0
   215  0000CB                     _task_list:
   216                           	opt callstack 0
   217  0000CB                     	ds	300
   218                           
   219                           	psect	cstackBANK0
   220  00009E                     __pcstackBANK0:
   221                           	opt callstack 0
   222  00009E                     ?___wmul:
   223                           	opt callstack 0
   224  00009E                     ?___awmod:
   225                           	opt callstack 0
   226  00009E                     ___wmul@multiplier:
   227                           	opt callstack 0
   228  00009E                     ___awmod@dividend:
   229                           	opt callstack 0
   230                           
   231                           ; 2 bytes @ 0x0
   232  00009E                     	ds	2
   233  0000A0                     ___wmul@multiplicand:
   234                           	opt callstack 0
   235  0000A0                     ___awmod@divisor:
   236                           	opt callstack 0
   237                           
   238                           ; 2 bytes @ 0x2
   239  0000A0                     	ds	2
   240  0000A2                     ___awmod@counter:
   241                           	opt callstack 0
   242  0000A2                     ___wmul@product:
   243                           	opt callstack 0
   244                           
   245                           ; 2 bytes @ 0x4
   246  0000A2                     	ds	1
   247  0000A3                     ___awmod@sign:
   248                           	opt callstack 0
   249                           
   250                           ; 1 bytes @ 0x5
   251  0000A3                     	ds	1
   252  0000A4                     ??_getSizeQueue:
   253  0000A4                     initializeTaskList@i:
   254                           	opt callstack 0
   255  0000A4                     addTask@period:
   256                           	opt callstack 0
   257                           
   258                           ; 4 bytes @ 0x6
   259  0000A4                     	ds	2
   260  0000A6                     ??_start_timer:
   261  0000A6                     ?_dequeue:
   262                           	opt callstack 0
   263                           
   264                           ; 3 bytes @ 0x8
   265  0000A6                     	ds	2
   266  0000A8                     start_timer@timer_vaddr:
   267                           	opt callstack 0
   268  0000A8                     addTask@delay:
   269                           	opt callstack 0
   270                           
   271                           ; 4 bytes @ 0xA
   272  0000A8                     	ds	1
   273  0000A9                     dequeue@idx:
   274                           	opt callstack 0
   275                           
   276                           ; 2 bytes @ 0xB
   277  0000A9                     	ds	2
   278  0000AB                     selectReadyTask@ptr:
   279                           	opt callstack 0
   280                           
   281                           ; 3 bytes @ 0xD
   282  0000AB                     	ds	1
   283  0000AC                     addTask@ptr:
   284                           	opt callstack 0
   285                           
   286                           ; 3 bytes @ 0xE
   287  0000AC                     	ds	2
   288  0000AE                     
   289                           ; 1 bytes @ 0x10
   290  0000AE                     	ds	1
   291  0000AF                     addTask@data:
   292                           	opt callstack 0
   293                           
   294                           ; 2 bytes @ 0x11
   295  0000AF                     	ds	2
   296  0000B1                     ??_addTask:
   297                           
   298                           ; 1 bytes @ 0x13
   299  0000B1                     	ds	8
   300  0000B9                     addTask@prev:
   301                           	opt callstack 0
   302                           
   303                           ; 2 bytes @ 0x1B
   304  0000B9                     	ds	2
   305  0000BB                     addTask@cur:
   306                           	opt callstack 0
   307                           
   308                           ; 2 bytes @ 0x1D
   309  0000BB                     	ds	2
   310  0000BD                     addTask@idx:
   311                           	opt callstack 0
   312                           
   313                           ; 1 bytes @ 0x1F
   314  0000BD                     	ds	1
   315  0000BE                     register_timer@period:
   316                           	opt callstack 0
   317                           
   318                           ; 4 bytes @ 0x20
   319  0000BE                     	ds	4
   320  0000C2                     register_timer@delay:
   321                           	opt callstack 0
   322                           
   323                           ; 4 bytes @ 0x24
   324  0000C2                     	ds	4
   325  0000C6                     register_timer@callback:
   326                           	opt callstack 0
   327                           
   328                           ; 3 bytes @ 0x28
   329  0000C6                     	ds	3
   330  0000C9                     register_timer@data:
   331                           	opt callstack 0
   332                           
   333                           ; 2 bytes @ 0x2B
   334  0000C9                     	ds	2
   335  0000CB                     
   336                           ; 1 bytes @ 0x2D
   337                           
   338                           	psect	cstackCOMRAM
   339  000001                     __pcstackCOMRAM:
   340                           	opt callstack 0
   341  000001                     ??_removeTask:
   342  000001                     ?i2___wmul:
   343                           	opt callstack 0
   344  000001                     ?i2___awmod:
   345                           	opt callstack 0
   346  000001                     i2___wmul@multiplier:
   347                           	opt callstack 0
   348  000001                     i2___awmod@dividend:
   349                           	opt callstack 0
   350                           
   351                           ; 2 bytes @ 0x0
   352  000001                     	ds	2
   353  000003                     i2___wmul@multiplicand:
   354                           	opt callstack 0
   355  000003                     i2___awmod@divisor:
   356                           	opt callstack 0
   357                           
   358                           ; 2 bytes @ 0x2
   359  000003                     	ds	2
   360  000005                     removeTask@pos:
   361                           	opt callstack 0
   362  000005                     i2___awmod@counter:
   363                           	opt callstack 0
   364  000005                     i2___wmul@product:
   365                           	opt callstack 0
   366                           
   367                           ; 2 bytes @ 0x4
   368  000005                     	ds	1
   369  000006                     removeTask@idx:
   370                           	opt callstack 0
   371  000006                     i2___awmod@sign:
   372                           	opt callstack 0
   373                           
   374                           ; 1 bytes @ 0x5
   375  000006                     	ds	1
   376  000007                     ??i2_getSizeQueue:
   377                           
   378                           ; 1 bytes @ 0x6
   379  000007                     	ds	2
   380  000009                     ??_isFullQueue:
   381                           
   382                           ; 1 bytes @ 0x8
   383  000009                     	ds	1
   384  00000A                     enqueue@ptr:
   385                           	opt callstack 0
   386                           
   387                           ; 3 bytes @ 0x9
   388  00000A                     	ds	3
   389  00000D                     ??_handleListHead:
   390                           
   391                           ; 1 bytes @ 0xC
   392  00000D                     	ds	12
   393  000019                     _handleListHead$1149:
   394                           	opt callstack 0
   395                           
   396                           ; 3 bytes @ 0x18
   397  000019                     	ds	3
   398  00001C                     _handleListHead$1150:
   399                           	opt callstack 0
   400                           
   401                           ; 2 bytes @ 0x1B
   402  00001C                     	ds	2
   403  00001E                     handleListHead@prev:
   404                           	opt callstack 0
   405                           
   406                           ; 2 bytes @ 0x1D
   407  00001E                     	ds	2
   408  000020                     handleListHead@cur:
   409                           	opt callstack 0
   410                           
   411                           ; 2 bytes @ 0x1F
   412  000020                     	ds	2
   413  000022                     handleListHead@pos:
   414                           	opt callstack 0
   415                           
   416                           ; 2 bytes @ 0x21
   417  000022                     	ds	2
   418  000024                     ??_timer_interrupt:
   419                           
   420                           ; 1 bytes @ 0x23
   421  000024                     	ds	6
   422                           
   423 ;;
   424 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   425 ;;
   426 ;; *************** function _main *****************
   427 ;; Defined at:
   428 ;;		line 51 in file "main.c"
   429 ;; Parameters:    Size  Location     Type
   430 ;;		None
   431 ;; Auto vars:     Size  Location     Type
   432 ;;  idx5            2    0        int 
   433 ;;  idx4            2    0        int 
   434 ;;  idx3            2    0        int 
   435 ;;  idx2            2    0        int 
   436 ;;  idx1            2    0        int 
   437 ;;  idx0            2    0        int 
   438 ;; Return value:  Size  Location     Type
   439 ;;                  1    wreg      void 
   440 ;; Registers used:
   441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
   442 ;; Tracked objects:
   443 ;;		On entry : 0/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   448 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   450 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   451 ;;Total ram usage:       12 bytes
   452 ;; Hardware stack levels required when called:   12
   453 ;; This function calls:
   454 ;;		_dispatch
   455 ;;		_register_timer
   456 ;;		_system_initialize
   457 ;; This function is called by:
   458 ;;		Startup code after reset
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462                           	psect	text0
   463  000ADA                     __ptext0:
   464                           	opt callstack 0
   465  000ADA                     _main:
   466                           	opt callstack 19
   467  000ADA                     
   468                           ;main.c: 52:     system_initialize();
   469  000ADA  ECDF  F009         	call	_system_initialize	;wreg free
   470  000ADE  0EE8               	movlw	232
   471  000AE0  0100               	movlb	0	; () banked
   472  000AE2  6FBE               	movwf	register_timer@period& (0+255),b
   473  000AE4  0E03               	movlw	3
   474  000AE6  6FBF               	movwf	(register_timer@period+1)& (0+255),b
   475  000AE8  0E00               	movlw	0
   476  000AEA  6FC0               	movwf	(register_timer@period+2)& (0+255),b
   477  000AEC  0E00               	movlw	0
   478  000AEE  6FC1               	movwf	(register_timer@period+3)& (0+255),b
   479  000AF0  0E00               	movlw	0
   480  000AF2  6FC2               	movwf	register_timer@delay& (0+255),b
   481  000AF4  0E00               	movlw	0
   482  000AF6  6FC3               	movwf	(register_timer@delay+1)& (0+255),b
   483  000AF8  0E00               	movlw	0
   484  000AFA  6FC4               	movwf	(register_timer@delay+2)& (0+255),b
   485  000AFC  0E00               	movlw	0
   486  000AFE  6FC5               	movwf	(register_timer@delay+3)& (0+255),b
   487  000B00  0E30               	movlw	low _blink_LED0
   488  000B02  6FC6               	movwf	register_timer@callback& (0+255),b
   489  000B04  0E13               	movlw	high _blink_LED0
   490  000B06  6FC7               	movwf	(register_timer@callback+1)& (0+255),b
   491  000B08  0E00               	movlw	low (_blink_LED0 shr (0+16))
   492  000B0A  6FC8               	movwf	(register_timer@callback+2)& (0+255),b
   493  000B0C  0E00               	movlw	0
   494  000B0E  6FC9               	movwf	register_timer@data& (0+255),b
   495  000B10  0E00               	movlw	0
   496  000B12  6FCA               	movwf	(register_timer@data+1)& (0+255),b
   497  000B14  ECD7  F008         	call	_register_timer	;wreg free
   498  000B18  0EE8               	movlw	232
   499  000B1A  0100               	movlb	0	; () banked
   500  000B1C  6FBE               	movwf	register_timer@period& (0+255),b
   501  000B1E  0E03               	movlw	3
   502  000B20  6FBF               	movwf	(register_timer@period+1)& (0+255),b
   503  000B22  0E00               	movlw	0
   504  000B24  6FC0               	movwf	(register_timer@period+2)& (0+255),b
   505  000B26  0E00               	movlw	0
   506  000B28  6FC1               	movwf	(register_timer@period+3)& (0+255),b
   507  000B2A  0EC8               	movlw	200
   508  000B2C  6FC2               	movwf	register_timer@delay& (0+255),b
   509  000B2E  0E00               	movlw	0
   510  000B30  6FC3               	movwf	(register_timer@delay+1)& (0+255),b
   511  000B32  0E00               	movlw	0
   512  000B34  6FC4               	movwf	(register_timer@delay+2)& (0+255),b
   513  000B36  0E00               	movlw	0
   514  000B38  6FC5               	movwf	(register_timer@delay+3)& (0+255),b
   515  000B3A  0E0A               	movlw	low _blink_LED1
   516  000B3C  6FC6               	movwf	register_timer@callback& (0+255),b
   517  000B3E  0E13               	movlw	high _blink_LED1
   518  000B40  6FC7               	movwf	(register_timer@callback+1)& (0+255),b
   519  000B42  0E00               	movlw	low (_blink_LED1 shr (0+16))
   520  000B44  6FC8               	movwf	(register_timer@callback+2)& (0+255),b
   521  000B46  0E00               	movlw	0
   522  000B48  6FC9               	movwf	register_timer@data& (0+255),b
   523  000B4A  0E00               	movlw	0
   524  000B4C  6FCA               	movwf	(register_timer@data+1)& (0+255),b
   525  000B4E  ECD7  F008         	call	_register_timer	;wreg free
   526  000B52  0EB8               	movlw	184
   527  000B54  0100               	movlb	0	; () banked
   528  000B56  6FBE               	movwf	register_timer@period& (0+255),b
   529  000B58  0E0B               	movlw	11
   530  000B5A  6FBF               	movwf	(register_timer@period+1)& (0+255),b
   531  000B5C  0E00               	movlw	0
   532  000B5E  6FC0               	movwf	(register_timer@period+2)& (0+255),b
   533  000B60  0E00               	movlw	0
   534  000B62  6FC1               	movwf	(register_timer@period+3)& (0+255),b
   535  000B64  0E90               	movlw	144
   536  000B66  6FC2               	movwf	register_timer@delay& (0+255),b
   537  000B68  0E01               	movlw	1
   538  000B6A  6FC3               	movwf	(register_timer@delay+1)& (0+255),b
   539  000B6C  0E00               	movlw	0
   540  000B6E  6FC4               	movwf	(register_timer@delay+2)& (0+255),b
   541  000B70  0E00               	movlw	0
   542  000B72  6FC5               	movwf	(register_timer@delay+3)& (0+255),b
   543  000B74  0EE4               	movlw	low _blink_LED2
   544  000B76  6FC6               	movwf	register_timer@callback& (0+255),b
   545  000B78  0E12               	movlw	high _blink_LED2
   546  000B7A  6FC7               	movwf	(register_timer@callback+1)& (0+255),b
   547  000B7C  0E00               	movlw	low (_blink_LED2 shr (0+16))
   548  000B7E  6FC8               	movwf	(register_timer@callback+2)& (0+255),b
   549  000B80  0E00               	movlw	0
   550  000B82  6FC9               	movwf	register_timer@data& (0+255),b
   551  000B84  0E00               	movlw	0
   552  000B86  6FCA               	movwf	(register_timer@data+1)& (0+255),b
   553  000B88  ECD7  F008         	call	_register_timer	;wreg free
   554  000B8C  0E28               	movlw	40
   555  000B8E  0100               	movlb	0	; () banked
   556  000B90  6FBE               	movwf	register_timer@period& (0+255),b
   557  000B92  0E23               	movlw	35
   558  000B94  6FBF               	movwf	(register_timer@period+1)& (0+255),b
   559  000B96  0E00               	movlw	0
   560  000B98  6FC0               	movwf	(register_timer@period+2)& (0+255),b
   561  000B9A  0E00               	movlw	0
   562  000B9C  6FC1               	movwf	(register_timer@period+3)& (0+255),b
   563  000B9E  0E90               	movlw	144
   564  000BA0  6FC2               	movwf	register_timer@delay& (0+255),b
   565  000BA2  0E01               	movlw	1
   566  000BA4  6FC3               	movwf	(register_timer@delay+1)& (0+255),b
   567  000BA6  0E00               	movlw	0
   568  000BA8  6FC4               	movwf	(register_timer@delay+2)& (0+255),b
   569  000BAA  0E00               	movlw	0
   570  000BAC  6FC5               	movwf	(register_timer@delay+3)& (0+255),b
   571  000BAE  0EBE               	movlw	low _blink_LED3
   572  000BB0  6FC6               	movwf	register_timer@callback& (0+255),b
   573  000BB2  0E12               	movlw	high _blink_LED3
   574  000BB4  6FC7               	movwf	(register_timer@callback+1)& (0+255),b
   575  000BB6  0E00               	movlw	low (_blink_LED3 shr (0+16))
   576  000BB8  6FC8               	movwf	(register_timer@callback+2)& (0+255),b
   577  000BBA  0E00               	movlw	0
   578  000BBC  6FC9               	movwf	register_timer@data& (0+255),b
   579  000BBE  0E00               	movlw	0
   580  000BC0  6FCA               	movwf	(register_timer@data+1)& (0+255),b
   581  000BC2  ECD7  F008         	call	_register_timer	;wreg free
   582  000BC6  0E98               	movlw	152
   583  000BC8  0100               	movlb	0	; () banked
   584  000BCA  6FBE               	movwf	register_timer@period& (0+255),b
   585  000BCC  0E3A               	movlw	58
   586  000BCE  6FBF               	movwf	(register_timer@period+1)& (0+255),b
   587  000BD0  0E00               	movlw	0
   588  000BD2  6FC0               	movwf	(register_timer@period+2)& (0+255),b
   589  000BD4  0E00               	movlw	0
   590  000BD6  6FC1               	movwf	(register_timer@period+3)& (0+255),b
   591  000BD8  0EC8               	movlw	200
   592  000BDA  6FC2               	movwf	register_timer@delay& (0+255),b
   593  000BDC  0E00               	movlw	0
   594  000BDE  6FC3               	movwf	(register_timer@delay+1)& (0+255),b
   595  000BE0  0E00               	movlw	0
   596  000BE2  6FC4               	movwf	(register_timer@delay+2)& (0+255),b
   597  000BE4  0E00               	movlw	0
   598  000BE6  6FC5               	movwf	(register_timer@delay+3)& (0+255),b
   599  000BE8  0E98               	movlw	low _blink_LED4
   600  000BEA  6FC6               	movwf	register_timer@callback& (0+255),b
   601  000BEC  0E12               	movlw	high _blink_LED4
   602  000BEE  6FC7               	movwf	(register_timer@callback+1)& (0+255),b
   603  000BF0  0E00               	movlw	low (_blink_LED4 shr (0+16))
   604  000BF2  6FC8               	movwf	(register_timer@callback+2)& (0+255),b
   605  000BF4  0E00               	movlw	0
   606  000BF6  6FC9               	movwf	register_timer@data& (0+255),b
   607  000BF8  0E00               	movlw	0
   608  000BFA  6FCA               	movwf	(register_timer@data+1)& (0+255),b
   609  000BFC  ECD7  F008         	call	_register_timer	;wreg free
   610  000C00  0E64               	movlw	100
   611  000C02  0100               	movlb	0	; () banked
   612  000C04  6FBE               	movwf	register_timer@period& (0+255),b
   613  000C06  0E00               	movlw	0
   614  000C08  6FBF               	movwf	(register_timer@period+1)& (0+255),b
   615  000C0A  0E00               	movlw	0
   616  000C0C  6FC0               	movwf	(register_timer@period+2)& (0+255),b
   617  000C0E  0E00               	movlw	0
   618  000C10  6FC1               	movwf	(register_timer@period+3)& (0+255),b
   619  000C12  0E10               	movlw	16
   620  000C14  6FC2               	movwf	register_timer@delay& (0+255),b
   621  000C16  0E27               	movlw	39
   622  000C18  6FC3               	movwf	(register_timer@delay+1)& (0+255),b
   623  000C1A  0E00               	movlw	0
   624  000C1C  6FC4               	movwf	(register_timer@delay+2)& (0+255),b
   625  000C1E  0E00               	movlw	0
   626  000C20  6FC5               	movwf	(register_timer@delay+3)& (0+255),b
   627  000C22  0E56               	movlw	low _blink_LED5
   628  000C24  6FC6               	movwf	register_timer@callback& (0+255),b
   629  000C26  0E13               	movlw	high _blink_LED5
   630  000C28  6FC7               	movwf	(register_timer@callback+1)& (0+255),b
   631  000C2A  0E00               	movlw	low (_blink_LED5 shr (0+16))
   632  000C2C  6FC8               	movwf	(register_timer@callback+2)& (0+255),b
   633  000C2E  0E00               	movlw	0
   634  000C30  6FC9               	movwf	register_timer@data& (0+255),b
   635  000C32  0E00               	movlw	0
   636  000C34  6FCA               	movwf	(register_timer@data+1)& (0+255),b
   637  000C36  ECD7  F008         	call	_register_timer	;wreg free
   638  000C3A                     l2069:
   639                           
   640                           ;main.c: 60:         dispatch();
   641  000C3A  EC14  F00A         	call	_dispatch	;wreg free
   642  000C3E  EF1D  F006         	goto	l2069
   643  000C42  EF07  F000         	goto	start
   644  000C46                     __end_of_main:
   645                           	opt callstack 0
   646                           
   647 ;; *************** function _system_initialize *****************
   648 ;; Defined at:
   649 ;;		line 22 in file "mcc.c"
   650 ;; Parameters:    Size  Location     Type
   651 ;;		None
   652 ;; Auto vars:     Size  Location     Type
   653 ;;		None
   654 ;; Return value:  Size  Location     Type
   655 ;;                  1    wreg      void 
   656 ;; Registers used:
   657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   658 ;; Tracked objects:
   659 ;;		On entry : 0/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   667 ;;Total ram usage:        0 bytes
   668 ;; Hardware stack levels used:    1
   669 ;; Hardware stack levels required when called:    9
   670 ;; This function calls:
   671 ;;		_interrupt_initialize
   672 ;;		_osc_initialize
   673 ;;		_pin_initialize
   674 ;;		_start_timer
   675 ;; This function is called by:
   676 ;;		_main
   677 ;; This function uses a non-reentrant model
   678 ;;
   679                           
   680                           	psect	text1
   681  0013BE                     __ptext1:
   682                           	opt callstack 0
   683  0013BE                     _system_initialize:
   684                           	opt callstack 21
   685  0013BE                     
   686                           ;mcc.c: 23:     osc_initialize();
   687  0013BE  EC0E  F00A         	call	_osc_initialize	;wreg free
   688                           
   689                           ;mcc.c: 24:     pin_initialize();
   690  0013C2  ECF8  F009         	call	_pin_initialize	;wreg free
   691  0013C6                     
   692                           ;mcc.c: 25:     interrupt_initialize();
   693  0013C6  EC11  F00A         	call	_interrupt_initialize	;wreg free
   694  0013CA                     
   695                           ;mcc.c: 26:     start_timer(0);
   696  0013CA  0E00               	movlw	0
   697  0013CC  ECB2  F007         	call	_start_timer
   698  0013D0                     
   699                           ;mcc.c: 27:     start_timer(1);
   700  0013D0  0E01               	movlw	1
   701  0013D2  ECB2  F007         	call	_start_timer
   702  0013D6  0012               	return		;funcret
   703  0013D8                     __end_of_system_initialize:
   704                           	opt callstack 0
   705                           
   706 ;; *************** function _start_timer *****************
   707 ;; Defined at:
   708 ;;		line 5 in file "clock.c"
   709 ;; Parameters:    Size  Location     Type
   710 ;;  timer_vaddr     1    wreg     unsigned char 
   711 ;; Auto vars:     Size  Location     Type
   712 ;;  timer_vaddr     1   10[BANK0 ] unsigned char 
   713 ;; Return value:  Size  Location     Type
   714 ;;                  2   68[None  ] int 
   715 ;; Registers used:
   716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   723 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   724 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   725 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   726 ;;Total ram usage:        3 bytes
   727 ;; Hardware stack levels used:    1
   728 ;; Hardware stack levels required when called:    8
   729 ;; This function calls:
   730 ;;		_initializeTaskList
   731 ;; This function is called by:
   732 ;;		_system_initialize
   733 ;; This function uses a non-reentrant model
   734 ;;
   735                           
   736                           	psect	text2
   737  000F64                     __ptext2:
   738                           	opt callstack 0
   739  000F64                     _start_timer:
   740                           	opt callstack 21
   741                           
   742                           ;incstack = 0
   743                           ;start_timer@timer_vaddr stored from wreg
   744  000F64  0100               	movlb	0	; () banked
   745  000F66  6FA8               	movwf	start_timer@timer_vaddr& (0+255),b
   746  000F68                     
   747                           ;clock.c: 6:     if(timer_vaddr > 4)
   748  000F68  0E04               	movlw	4
   749  000F6A  0100               	movlb	0	; () banked
   750  000F6C  65A8               	cpfsgt	start_timer@timer_vaddr& (0+255),b
   751  000F6E  EFBB  F007         	goto	u1841
   752  000F72  EFBD  F007         	goto	u1840
   753  000F76                     u1841:
   754  000F76  EFDB  F007         	goto	l1957
   755  000F7A                     u1840:
   756  000F7A  EFFC  F007         	goto	l259
   757  000F7E                     l261:
   758                           
   759                           ; BSR set to: 0
   760                           ;clock.c: 10:             INTCONbits.TMR0IE = 1;
   761  000F7E  8AF2               	bsf	242,5,c	;volatile
   762                           
   763                           ;clock.c: 11:             INTCONbits.TMR0IF = 0;
   764  000F80  94F2               	bcf	242,2,c	;volatile
   765  000F82                     
   766                           ; BSR set to: 0
   767                           ;clock.c: 12:             T0CON = 0xC3;
   768  000F82  0EC3               	movlw	195
   769  000F84  6ED5               	movwf	213,c	;volatile
   770                           
   771                           ;clock.c: 13:             TMR0L = 131;
   772  000F86  0E83               	movlw	131
   773  000F88  6ED6               	movwf	214,c	;volatile
   774                           
   775                           ;clock.c: 14:             time_ms = 0;
   776  000F8A  0E00               	movlw	0
   777  000F8C  6E3A               	movwf	_time_ms^0,c
   778  000F8E  0E00               	movlw	0
   779  000F90  6E3B               	movwf	(_time_ms+1)^0,c
   780  000F92  0E00               	movlw	0
   781  000F94  6E3C               	movwf	(_time_ms+2)^0,c
   782  000F96  0E00               	movlw	0
   783  000F98  6E3D               	movwf	(_time_ms+3)^0,c
   784                           
   785                           ;clock.c: 15:             break;
   786  000F9A  EFFC  F007         	goto	l259
   787  000F9E                     l1943:
   788                           
   789                           ; BSR set to: 0
   790                           ;clock.c: 17:             initializeTaskList();
   791  000F9E  EC23  F006         	call	_initializeTaskList	;wreg free
   792  000FA2                     
   793                           ;clock.c: 18:             PIE1bits.TMR1IE = 1;
   794  000FA2  809D               	bsf	157,0,c	;volatile
   795  000FA4                     
   796                           ;clock.c: 19:             PIR1bits.TMR1IF = 0;
   797  000FA4  909E               	bcf	158,0,c	;volatile
   798  000FA6                     
   799                           ;clock.c: 20:             T1CON = 0b10000001;
   800  000FA6  0E81               	movlw	129
   801  000FA8  6ECD               	movwf	205,c	;volatile
   802  000FAA                     
   803                           ;clock.c: 21:             TMR1H = 0xB1;
   804  000FAA  0EB1               	movlw	177
   805  000FAC  6ECF               	movwf	207,c	;volatile
   806  000FAE                     
   807                           ;clock.c: 22:             TMR1L = 0xE0;
   808  000FAE  0EE0               	movlw	224
   809  000FB0  6ECE               	movwf	206,c	;volatile
   810                           
   811                           ;clock.c: 23:             break;
   812  000FB2  EFFC  F007         	goto	l259
   813  000FB6                     l1957:
   814                           
   815                           ; BSR set to: 0
   816  000FB6  51A8               	movf	start_timer@timer_vaddr& (0+255),w,b
   817  000FB8  6FA6               	movwf	??_start_timer& (0+255),b
   818  000FBA  6BA7               	clrf	(??_start_timer+1)& (0+255),b
   819                           
   820                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   821                           ; Switch size 1, requested type "simple"
   822                           ; Number of cases is 1, Range of values is 0 to 0
   823                           ; switch strategies available:
   824                           ; Name         Instructions Cycles
   825                           ; simple_byte            4     3 (average)
   826                           ;	Chosen strategy is simple_byte
   827  000FBC  51A7               	movf	(??_start_timer+1)& (0+255),w,b
   828  000FBE  0A00               	xorlw	0	; case 0
   829  000FC0  B4D8               	btfsc	status,2,c
   830  000FC2  EFE5  F007         	goto	l2101
   831  000FC6  EFFC  F007         	goto	l259
   832  000FCA                     l2101:
   833                           
   834                           ; BSR set to: 0
   835                           ; Switch size 1, requested type "simple"
   836                           ; Number of cases is 5, Range of values is 0 to 4
   837                           ; switch strategies available:
   838                           ; Name         Instructions Cycles
   839                           ; simple_byte           16     9 (average)
   840                           ;	Chosen strategy is simple_byte
   841  000FCA  51A6               	movf	??_start_timer& (0+255),w,b
   842  000FCC  0A00               	xorlw	0	; case 0
   843  000FCE  B4D8               	btfsc	status,2,c
   844  000FD0  EFBF  F007         	goto	l261
   845  000FD4  0A01               	xorlw	1	; case 1
   846  000FD6  B4D8               	btfsc	status,2,c
   847  000FD8  EFCF  F007         	goto	l1943
   848  000FDC  0A03               	xorlw	3	; case 2
   849  000FDE  B4D8               	btfsc	status,2,c
   850  000FE0  EFFC  F007         	goto	l259
   851  000FE4  0A01               	xorlw	1	; case 3
   852  000FE6  B4D8               	btfsc	status,2,c
   853  000FE8  EFFC  F007         	goto	l259
   854  000FEC  0A07               	xorlw	7	; case 4
   855  000FEE  B4D8               	btfsc	status,2,c
   856  000FF0  EFFC  F007         	goto	l259
   857  000FF4  EFFC  F007         	goto	l259
   858  000FF8                     l259:
   859  000FF8  0012               	return		;funcret
   860  000FFA                     __end_of_start_timer:
   861                           	opt callstack 0
   862                           
   863 ;; *************** function _initializeTaskList *****************
   864 ;; Defined at:
   865 ;;		line 11 in file "task.c"
   866 ;; Parameters:    Size  Location     Type
   867 ;;		None
   868 ;; Auto vars:     Size  Location     Type
   869 ;;  i               2    6[BANK0 ] int 
   870 ;; Return value:  Size  Location     Type
   871 ;;                  1    wreg      void 
   872 ;; Registers used:
   873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   874 ;; Tracked objects:
   875 ;;		On entry : 0/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   880 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   882 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   883 ;;Total ram usage:        2 bytes
   884 ;; Hardware stack levels used:    1
   885 ;; Hardware stack levels required when called:    7
   886 ;; This function calls:
   887 ;;		___wmul
   888 ;; This function is called by:
   889 ;;		_start_timer
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893                           	psect	text3
   894  000C46                     __ptext3:
   895                           	opt callstack 0
   896  000C46                     _initializeTaskList:
   897                           	opt callstack 21
   898  000C46                     
   899                           ;task.c: 12:     for(int i = 0; i < 20; i++) {
   900  000C46  0E00               	movlw	0
   901  000C48  0100               	movlb	0	; () banked
   902  000C4A  6FA5               	movwf	(initializeTaskList@i+1)& (0+255),b
   903  000C4C  0E00               	movlw	0
   904  000C4E  6FA4               	movwf	initializeTaskList@i& (0+255),b
   905  000C50                     l1923:
   906                           
   907                           ; BSR set to: 0
   908                           ;task.c: 13:         task_list[i].delay_t = 0;
   909  000C50  C0A4  F09E         	movff	initializeTaskList@i,___wmul@multiplier
   910  000C54  C0A5  F09F         	movff	initializeTaskList@i+1,___wmul@multiplier+1
   911  000C58  0E00               	movlw	0
   912  000C5A  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
   913  000C5C  0E0F               	movlw	15
   914  000C5E  6FA0               	movwf	___wmul@multiplicand& (0+255),b
   915  000C60  EC24  F009         	call	___wmul	;wreg free
   916  000C64  0ECB               	movlw	low _task_list
   917  000C66  0100               	movlb	0	; () banked
   918  000C68  259E               	addwf	?___wmul& (0+255),w,b
   919  000C6A  6ED9               	movwf	fsr2l,c
   920  000C6C  0E00               	movlw	high _task_list
   921  000C6E  219F               	addwfc	(?___wmul+1)& (0+255),w,b
   922  000C70  6EDA               	movwf	fsr2h,c
   923  000C72  6ADE               	clrf	postinc2,c
   924  000C74  6ADE               	clrf	postinc2,c
   925  000C76  6ADE               	clrf	postinc2,c
   926  000C78  6ADD               	clrf	postdec2,c
   927                           
   928                           ;task.c: 14:         task_list[i].period_t = 0;
   929  000C7A  C0A4  F09E         	movff	initializeTaskList@i,___wmul@multiplier
   930  000C7E  C0A5  F09F         	movff	initializeTaskList@i+1,___wmul@multiplier+1
   931  000C82  0E00               	movlw	0
   932  000C84  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
   933  000C86  0E0F               	movlw	15
   934  000C88  6FA0               	movwf	___wmul@multiplicand& (0+255),b
   935  000C8A  EC24  F009         	call	___wmul	;wreg free
   936  000C8E  0ECF               	movlw	low (_task_list+4)
   937  000C90  0100               	movlb	0	; () banked
   938  000C92  259E               	addwf	?___wmul& (0+255),w,b
   939  000C94  6ED9               	movwf	fsr2l,c
   940  000C96  0E00               	movlw	high (_task_list+4)
   941  000C98  219F               	addwfc	(?___wmul+1)& (0+255),w,b
   942  000C9A  6EDA               	movwf	fsr2h,c
   943  000C9C  6ADE               	clrf	postinc2,c
   944  000C9E  6ADE               	clrf	postinc2,c
   945  000CA0  6ADE               	clrf	postinc2,c
   946  000CA2  6ADD               	clrf	postdec2,c
   947                           
   948                           ;task.c: 15:         task_list[i].func_ptr = ((void*)0);
   949  000CA4  C0A4  F09E         	movff	initializeTaskList@i,___wmul@multiplier
   950  000CA8  C0A5  F09F         	movff	initializeTaskList@i+1,___wmul@multiplier+1
   951  000CAC  0E00               	movlw	0
   952  000CAE  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
   953  000CB0  0E0F               	movlw	15
   954  000CB2  6FA0               	movwf	___wmul@multiplicand& (0+255),b
   955  000CB4  EC24  F009         	call	___wmul	;wreg free
   956  000CB8  0ED3               	movlw	low (_task_list+8)
   957  000CBA  0100               	movlb	0	; () banked
   958  000CBC  259E               	addwf	?___wmul& (0+255),w,b
   959  000CBE  6ED9               	movwf	fsr2l,c
   960  000CC0  0E00               	movlw	high (_task_list+8)
   961  000CC2  219F               	addwfc	(?___wmul+1)& (0+255),w,b
   962  000CC4  6EDA               	movwf	fsr2h,c
   963  000CC6  0E00               	movlw	0
   964  000CC8  6EDE               	movwf	postinc2,c
   965  000CCA  0E00               	movlw	0
   966  000CCC  6EDE               	movwf	postinc2,c
   967  000CCE  0E00               	movlw	0
   968  000CD0  6EDE               	movwf	postinc2,c
   969                           
   970                           ;task.c: 16:         task_list[i].data_p = ((void*)0);
   971  000CD2  C0A4  F09E         	movff	initializeTaskList@i,___wmul@multiplier
   972  000CD6  C0A5  F09F         	movff	initializeTaskList@i+1,___wmul@multiplier+1
   973  000CDA  0E00               	movlw	0
   974  000CDC  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
   975  000CDE  0E0F               	movlw	15
   976  000CE0  6FA0               	movwf	___wmul@multiplicand& (0+255),b
   977  000CE2  EC24  F009         	call	___wmul	;wreg free
   978  000CE6  0ED8               	movlw	low (_task_list+13)
   979  000CE8  0100               	movlb	0	; () banked
   980  000CEA  259E               	addwf	?___wmul& (0+255),w,b
   981  000CEC  6ED9               	movwf	fsr2l,c
   982  000CEE  0E00               	movlw	high (_task_list+13)
   983  000CF0  219F               	addwfc	(?___wmul+1)& (0+255),w,b
   984  000CF2  6EDA               	movwf	fsr2h,c
   985  000CF4  0E00               	movlw	0
   986  000CF6  6EDE               	movwf	postinc2,c
   987  000CF8  0E00               	movlw	0
   988  000CFA  6EDD               	movwf	postdec2,c
   989                           
   990                           ;task.c: 17:         task_list[i].next = 105;
   991  000CFC  C0A4  F09E         	movff	initializeTaskList@i,___wmul@multiplier
   992  000D00  C0A5  F09F         	movff	initializeTaskList@i+1,___wmul@multiplier+1
   993  000D04  0E00               	movlw	0
   994  000D06  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
   995  000D08  0E0F               	movlw	15
   996  000D0A  6FA0               	movwf	___wmul@multiplicand& (0+255),b
   997  000D0C  EC24  F009         	call	___wmul	;wreg free
   998  000D10  0ED6               	movlw	low (_task_list+11)
   999  000D12  0100               	movlb	0	; () banked
  1000  000D14  259E               	addwf	?___wmul& (0+255),w,b
  1001  000D16  6ED9               	movwf	fsr2l,c
  1002  000D18  0E00               	movlw	high (_task_list+11)
  1003  000D1A  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  1004  000D1C  6EDA               	movwf	fsr2h,c
  1005  000D1E  0E69               	movlw	105
  1006  000D20  6EDE               	movwf	postinc2,c
  1007  000D22  0E00               	movlw	0
  1008  000D24  6EDD               	movwf	postdec2,c
  1009  000D26                     
  1010                           ; BSR set to: 0
  1011                           ;task.c: 18:     }
  1012  000D26  4BA4               	infsnz	initializeTaskList@i& (0+255),f,b
  1013  000D28  2BA5               	incf	(initializeTaskList@i+1)& (0+255),f,b
  1014  000D2A                     
  1015                           ; BSR set to: 0
  1016  000D2A  BFA5               	btfsc	(initializeTaskList@i+1)& (0+255),7,b
  1017  000D2C  EFA1  F006         	goto	u1831
  1018  000D30  51A5               	movf	(initializeTaskList@i+1)& (0+255),w,b
  1019  000D32  E109               	bnz	u1830
  1020  000D34  0E14               	movlw	20
  1021  000D36  5DA4               	subwf	initializeTaskList@i& (0+255),w,b
  1022  000D38  A0D8               	btfss	status,0,c
  1023  000D3A  EFA1  F006         	goto	u1831
  1024  000D3E  EFA3  F006         	goto	u1830
  1025  000D42                     u1831:
  1026  000D42  EF28  F006         	goto	l1923
  1027  000D46                     u1830:
  1028  000D46                     
  1029                           ; BSR set to: 0
  1030                           ;task.c: 19:     num_task = 0;
  1031  000D46  0E00               	movlw	0
  1032  000D48  6E40               	movwf	_num_task^0,c
  1033                           
  1034                           ;task.c: 20:     head = 105;
  1035  000D4A  0E00               	movlw	0
  1036  000D4C  6F9D               	movwf	(_head+1)& (0+255),b
  1037  000D4E  0E69               	movlw	105
  1038  000D50  6F9C               	movwf	_head& (0+255),b
  1039  000D52                     
  1040                           ; BSR set to: 0
  1041  000D52  0012               	return		;funcret
  1042  000D54                     __end_of_initializeTaskList:
  1043                           	opt callstack 0
  1044                           
  1045 ;; *************** function _pin_initialize *****************
  1046 ;; Defined at:
  1047 ;;		line 7 in file "mcc.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;		None
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;		None
  1052 ;; Return value:  Size  Location     Type
  1053 ;;                  1    wreg      void 
  1054 ;; Registers used:
  1055 ;;		wreg, status,2
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1065 ;;Total ram usage:        0 bytes
  1066 ;; Hardware stack levels used:    1
  1067 ;; Hardware stack levels required when called:    6
  1068 ;; This function calls:
  1069 ;;		Nothing
  1070 ;; This function is called by:
  1071 ;;		_system_initialize
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           	psect	text4
  1076  0013F0                     __ptext4:
  1077                           	opt callstack 0
  1078  0013F0                     _pin_initialize:
  1079                           	opt callstack 23
  1080  0013F0                     
  1081                           ;mcc.c: 8:     LATC = 0x00;
  1082  0013F0  0E00               	movlw	0
  1083  0013F2  6E8B               	movwf	139,c	;volatile
  1084                           
  1085                           ;mcc.c: 9:     TRISC = 0xD7;
  1086  0013F4  0ED7               	movlw	215
  1087  0013F6  6E94               	movwf	148,c	;volatile
  1088                           
  1089                           ;mcc.c: 10:     ADCON1 = 0b00001111;
  1090  0013F8  0E0F               	movlw	15
  1091  0013FA  6EC1               	movwf	193,c	;volatile
  1092                           
  1093                           ;mcc.c: 13:     LATD = 0x00;
  1094  0013FC  0E00               	movlw	0
  1095  0013FE  6E8C               	movwf	140,c	;volatile
  1096                           
  1097                           ;mcc.c: 14:     TRISD = 0x00;
  1098  001400  0E00               	movlw	0
  1099  001402  6E95               	movwf	149,c	;volatile
  1100  001404  0012               	return		;funcret
  1101  001406                     __end_of_pin_initialize:
  1102                           	opt callstack 0
  1103                           
  1104 ;; *************** function _osc_initialize *****************
  1105 ;; Defined at:
  1106 ;;		line 3 in file "mcc.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;		None
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;		None
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  1    wreg      void 
  1113 ;; Registers used:
  1114 ;;		wreg, status,2
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1124 ;;Total ram usage:        0 bytes
  1125 ;; Hardware stack levels used:    1
  1126 ;; Hardware stack levels required when called:    6
  1127 ;; This function calls:
  1128 ;;		Nothing
  1129 ;; This function is called by:
  1130 ;;		_system_initialize
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133                           
  1134                           	psect	text5
  1135  00141C                     __ptext5:
  1136                           	opt callstack 0
  1137  00141C                     _osc_initialize:
  1138                           	opt callstack 23
  1139  00141C                     
  1140                           ;mcc.c: 4:     OSCCON = 0x70;
  1141  00141C  0E70               	movlw	112
  1142  00141E  6ED3               	movwf	211,c	;volatile
  1143  001420  0012               	return		;funcret
  1144  001422                     __end_of_osc_initialize:
  1145                           	opt callstack 0
  1146                           
  1147 ;; *************** function _interrupt_initialize *****************
  1148 ;; Defined at:
  1149 ;;		line 17 in file "mcc.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;		None
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;		None
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  1    wreg      void 
  1156 ;; Registers used:
  1157 ;;		None
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1167 ;;Total ram usage:        0 bytes
  1168 ;; Hardware stack levels used:    1
  1169 ;; Hardware stack levels required when called:    6
  1170 ;; This function calls:
  1171 ;;		Nothing
  1172 ;; This function is called by:
  1173 ;;		_system_initialize
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177                           	psect	text6
  1178  001422                     __ptext6:
  1179                           	opt callstack 0
  1180  001422                     _interrupt_initialize:
  1181                           	opt callstack 23
  1182  001422                     
  1183                           ;mcc.c: 18:     INTCONbits.GIE = 1;
  1184  001422  8EF2               	bsf	242,7,c	;volatile
  1185                           
  1186                           ;mcc.c: 19:     INTCONbits.PEIE = 1;
  1187  001424  8CF2               	bsf	242,6,c	;volatile
  1188  001426  0012               	return		;funcret
  1189  001428                     __end_of_interrupt_initialize:
  1190                           	opt callstack 0
  1191                           
  1192 ;; *************** function _register_timer *****************
  1193 ;; Defined at:
  1194 ;;		line 38 in file "clock.c"
  1195 ;; Parameters:    Size  Location     Type
  1196 ;;  period          4   32[BANK0 ] unsigned long 
  1197 ;;  delay           4   36[BANK0 ] unsigned long 
  1198 ;;  callback        3   40[BANK0 ] PTR FTN()void 
  1199 ;;		 -> blink_LED5(1), blink_LED4(1), blink_LED3(1), blink_LED2(1), 
  1200 ;;		 -> blink_LED1(1), blink_LED0(1), 
  1201 ;;  data            2   43[BANK0 ] PTR void 
  1202 ;;		 -> NULL(0), 
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;		None
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  1    wreg      unsigned char 
  1207 ;; Registers used:
  1208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1214 ;;      Params:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1217 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1218 ;;Total ram usage:       13 bytes
  1219 ;; Hardware stack levels used:    1
  1220 ;; Hardware stack levels required when called:    8
  1221 ;; This function calls:
  1222 ;;		_addTask
  1223 ;; This function is called by:
  1224 ;;		_main
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228                           	psect	text7
  1229  0011AE                     __ptext7:
  1230                           	opt callstack 0
  1231  0011AE                     _register_timer:
  1232                           	opt callstack 22
  1233  0011AE                     
  1234                           ;clock.c: 39:     return addTask(period, delay, callback, data);
  1235  0011AE  C0BE  F0A4         	movff	register_timer@period,addTask@period
  1236  0011B2  C0BF  F0A5         	movff	register_timer@period+1,addTask@period+1
  1237  0011B6  C0C0  F0A6         	movff	register_timer@period+2,addTask@period+2
  1238  0011BA  C0C1  F0A7         	movff	register_timer@period+3,addTask@period+3
  1239  0011BE  C0C2  F0A8         	movff	register_timer@delay,addTask@delay
  1240  0011C2  C0C3  F0A9         	movff	register_timer@delay+1,addTask@delay+1
  1241  0011C6  C0C4  F0AA         	movff	register_timer@delay+2,addTask@delay+2
  1242  0011CA  C0C5  F0AB         	movff	register_timer@delay+3,addTask@delay+3
  1243  0011CE  C0C6  F0AC         	movff	register_timer@callback,addTask@ptr
  1244  0011D2  C0C7  F0AD         	movff	register_timer@callback+1,addTask@ptr+1
  1245  0011D6  C0C8  F0AE         	movff	register_timer@callback+2,addTask@ptr+2
  1246  0011DA  C0C9  F0AF         	movff	register_timer@data,addTask@data
  1247  0011DE  C0CA  F0B0         	movff	register_timer@data+1,addTask@data+1
  1248  0011E2  EC99  F002         	call	_addTask	;wreg free
  1249  0011E6  0012               	return		;funcret
  1250  0011E8                     __end_of_register_timer:
  1251                           	opt callstack 0
  1252                           
  1253 ;; *************** function _addTask *****************
  1254 ;; Defined at:
  1255 ;;		line 23 in file "task.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;  period          4    6[BANK0 ] unsigned long 
  1258 ;;  delay           4   10[BANK0 ] unsigned long 
  1259 ;;  ptr             3   14[BANK0 ] PTR FTN()void 
  1260 ;;		 -> blink_LED5(1), blink_LED4(1), blink_LED3(1), blink_LED2(1), 
  1261 ;;		 -> blink_LED1(1), blink_LED0(1), 
  1262 ;;  data            2   17[BANK0 ] PTR void 
  1263 ;;		 -> NULL(0), 
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;  cur             2   29[BANK0 ] int 
  1266 ;;  prev            2   27[BANK0 ] int 
  1267 ;;  idx             1   31[BANK0 ] unsigned char 
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  1    wreg      unsigned char 
  1270 ;; Registers used:
  1271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1277 ;;      Params:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1278 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1279 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1280 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1281 ;;Total ram usage:       26 bytes
  1282 ;; Hardware stack levels used:    1
  1283 ;; Hardware stack levels required when called:    7
  1284 ;; This function calls:
  1285 ;;		___wmul
  1286 ;;		_isFullList
  1287 ;; This function is called by:
  1288 ;;		_register_timer
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           	psect	text8
  1293  000532                     __ptext8:
  1294                           	opt callstack 0
  1295  000532                     _addTask:
  1296                           	opt callstack 22
  1297  000532                     
  1298                           ;task.c: 24:     if(isFullList())
  1299  000532  ECEC  F009         	call	_isFullList	;wreg free
  1300  000536  0900               	iorlw	0
  1301  000538  B4D8               	btfsc	status,2,c
  1302  00053A  EFA1  F002         	goto	u1851
  1303  00053E  EFA3  F002         	goto	u1850
  1304  000542                     u1851:
  1305  000542  EFA6  F002         	goto	l1971
  1306  000546                     u1850:
  1307  000546                     l1967:
  1308                           
  1309                           ;task.c: 25:         return 109;
  1310  000546  0E6D               	movlw	109
  1311  000548  EF96  F004         	goto	l158
  1312  00054C                     l1971:
  1313                           
  1314                           ;task.c: 26:     char idx;;task.c: 27:     for(idx = 0; idx < 20; idx++) {
  1315  00054C  0E00               	movlw	0
  1316  00054E  0100               	movlb	0	; () banked
  1317  000550  6FBD               	movwf	addTask@idx& (0+255),b
  1318  000552                     l1977:
  1319                           
  1320                           ; BSR set to: 0
  1321                           ;task.c: 28:         if(task_list[idx].func_ptr == ((void*)0))
  1322  000552  51BD               	movf	addTask@idx& (0+255),w,b
  1323  000554  0D0F               	mullw	15
  1324  000556  0ED3               	movlw	low (_task_list+8)
  1325  000558  24F3               	addwf	243,w,c
  1326  00055A  6ED9               	movwf	fsr2l,c
  1327  00055C  0E00               	movlw	high (_task_list+8)
  1328  00055E  20F4               	addwfc	prodh,w,c
  1329  000560  6EDA               	movwf	fsr2h,c
  1330  000562  50DE               	movf	postinc2,w,c
  1331  000564  10DE               	iorwf	postinc2,w,c
  1332  000566  10DE               	iorwf	postinc2,w,c
  1333  000568  A4D8               	btfss	status,2,c
  1334  00056A  EFB9  F002         	goto	u1861
  1335  00056E  EFBB  F002         	goto	u1860
  1336  000572                     u1861:
  1337  000572  EFBD  F002         	goto	l1981
  1338  000576                     u1860:
  1339  000576  EFC6  F002         	goto	l1985
  1340  00057A                     l1981:
  1341                           
  1342                           ; BSR set to: 0
  1343                           ;task.c: 30:     }
  1344  00057A  2BBD               	incf	addTask@idx& (0+255),f,b
  1345  00057C                     
  1346                           ; BSR set to: 0
  1347  00057C  0E13               	movlw	19
  1348  00057E  65BD               	cpfsgt	addTask@idx& (0+255),b
  1349  000580  EFC4  F002         	goto	u1871
  1350  000584  EFC6  F002         	goto	u1870
  1351  000588                     u1871:
  1352  000588  EFA9  F002         	goto	l1977
  1353  00058C                     u1870:
  1354  00058C                     l1985:
  1355                           
  1356                           ; BSR set to: 0
  1357                           ;task.c: 31:     if(idx == 20)
  1358  00058C  0E14               	movlw	20
  1359  00058E  19BD               	xorwf	addTask@idx& (0+255),w,b
  1360  000590  A4D8               	btfss	status,2,c
  1361  000592  EFCD  F002         	goto	u1881
  1362  000596  EFCF  F002         	goto	u1880
  1363  00059A                     u1881:
  1364  00059A  EFD1  F002         	goto	l1991
  1365  00059E                     u1880:
  1366  00059E  EFA3  F002         	goto	l1967
  1367  0005A2                     l1991:
  1368                           
  1369                           ; BSR set to: 0
  1370                           ;task.c: 33:     task_list[idx].delay_t = delay;
  1371  0005A2  51BD               	movf	addTask@idx& (0+255),w,b
  1372  0005A4  0D0F               	mullw	15
  1373  0005A6  0ECB               	movlw	low _task_list
  1374  0005A8  24F3               	addwf	243,w,c
  1375  0005AA  6ED9               	movwf	fsr2l,c
  1376  0005AC  0E00               	movlw	high _task_list
  1377  0005AE  20F4               	addwfc	prodh,w,c
  1378  0005B0  6EDA               	movwf	fsr2h,c
  1379  0005B2  C0A8  FFDE         	movff	addTask@delay,postinc2
  1380  0005B6  C0A9  FFDE         	movff	addTask@delay+1,postinc2
  1381  0005BA  C0AA  FFDE         	movff	addTask@delay+2,postinc2
  1382  0005BE  C0AB  FFDE         	movff	addTask@delay+3,postinc2
  1383                           
  1384                           ;task.c: 34:     task_list[idx].period_t = period;
  1385  0005C2  51BD               	movf	addTask@idx& (0+255),w,b
  1386  0005C4  0D0F               	mullw	15
  1387  0005C6  0ECF               	movlw	low (_task_list+4)
  1388  0005C8  24F3               	addwf	243,w,c
  1389  0005CA  6ED9               	movwf	fsr2l,c
  1390  0005CC  0E00               	movlw	high (_task_list+4)
  1391  0005CE  20F4               	addwfc	prodh,w,c
  1392  0005D0  6EDA               	movwf	fsr2h,c
  1393  0005D2  C0A4  FFDE         	movff	addTask@period,postinc2
  1394  0005D6  C0A5  FFDE         	movff	addTask@period+1,postinc2
  1395  0005DA  C0A6  FFDE         	movff	addTask@period+2,postinc2
  1396  0005DE  C0A7  FFDE         	movff	addTask@period+3,postinc2
  1397                           
  1398                           ;task.c: 35:     task_list[idx].func_ptr = ptr;
  1399  0005E2  51BD               	movf	addTask@idx& (0+255),w,b
  1400  0005E4  0D0F               	mullw	15
  1401  0005E6  0ED3               	movlw	low (_task_list+8)
  1402  0005E8  24F3               	addwf	243,w,c
  1403  0005EA  6ED9               	movwf	fsr2l,c
  1404  0005EC  0E00               	movlw	high (_task_list+8)
  1405  0005EE  20F4               	addwfc	prodh,w,c
  1406  0005F0  6EDA               	movwf	fsr2h,c
  1407  0005F2  C0AC  FFDE         	movff	addTask@ptr,postinc2
  1408  0005F6  C0AD  FFDE         	movff	addTask@ptr+1,postinc2
  1409  0005FA  C0AE  FFDE         	movff	addTask@ptr+2,postinc2
  1410                           
  1411                           ;task.c: 36:     task_list[idx].data_p = data;
  1412  0005FE  51BD               	movf	addTask@idx& (0+255),w,b
  1413  000600  0D0F               	mullw	15
  1414  000602  0ED8               	movlw	low (_task_list+13)
  1415  000604  24F3               	addwf	243,w,c
  1416  000606  6ED9               	movwf	fsr2l,c
  1417  000608  0E00               	movlw	high (_task_list+13)
  1418  00060A  20F4               	addwfc	prodh,w,c
  1419  00060C  6EDA               	movwf	fsr2h,c
  1420  00060E  C0AF  FFDE         	movff	addTask@data,postinc2
  1421  000612  C0B0  FFDD         	movff	addTask@data+1,postdec2
  1422  000616                     
  1423                           ; BSR set to: 0
  1424                           ;task.c: 37:     num_task++;
  1425  000616  2A40               	incf	_num_task^0,f,c
  1426  000618                     
  1427                           ; BSR set to: 0
  1428                           ;task.c: 38:     if(head == 105 || (head != 105 && task_list[head].delay_t > task_list[i
      +                          dx].delay_t)) {
  1429  000618  0E69               	movlw	105
  1430  00061A  199C               	xorwf	_head& (0+255),w,b
  1431  00061C  119D               	iorwf	(_head+1)& (0+255),w,b
  1432  00061E  B4D8               	btfsc	status,2,c
  1433  000620  EF14  F003         	goto	u1891
  1434  000624  EF16  F003         	goto	u1890
  1435  000628                     u1891:
  1436  000628  EF48  F003         	goto	l2001
  1437  00062C                     u1890:
  1438  00062C                     
  1439                           ; BSR set to: 0
  1440  00062C  0E69               	movlw	105
  1441  00062E  199C               	xorwf	_head& (0+255),w,b
  1442  000630  119D               	iorwf	(_head+1)& (0+255),w,b
  1443  000632  B4D8               	btfsc	status,2,c
  1444  000634  EF1E  F003         	goto	u1901
  1445  000638  EF20  F003         	goto	u1900
  1446  00063C                     u1901:
  1447  00063C  EF59  F003         	goto	l2005
  1448  000640                     u1900:
  1449  000640                     
  1450                           ; BSR set to: 0
  1451  000640  C09C  F09E         	movff	_head,___wmul@multiplier
  1452  000644  C09D  F09F         	movff	_head+1,___wmul@multiplier+1
  1453  000648  0E00               	movlw	0
  1454  00064A  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1455  00064C  0E0F               	movlw	15
  1456  00064E  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  1457  000650  EC24  F009         	call	___wmul	;wreg free
  1458  000654  0ECB               	movlw	low _task_list
  1459  000656  0100               	movlb	0	; () banked
  1460  000658  259E               	addwf	?___wmul& (0+255),w,b
  1461  00065A  6ED9               	movwf	fsr2l,c
  1462  00065C  0E00               	movlw	high _task_list
  1463  00065E  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  1464  000660  6EDA               	movwf	fsr2h,c
  1465  000662  51BD               	movf	addTask@idx& (0+255),w,b
  1466  000664  0D0F               	mullw	15
  1467  000666  0ECB               	movlw	low _task_list
  1468  000668  24F3               	addwf	243,w,c
  1469  00066A  6EE1               	movwf	fsr1l,c
  1470  00066C  0E00               	movlw	high _task_list
  1471  00066E  20F4               	addwfc	prodh,w,c
  1472  000670  6EE2               	movwf	fsr1h,c
  1473  000672  50DE               	movf	postinc2,w,c
  1474  000674  5CE6               	subwf	postinc1,w,c
  1475  000676  50DE               	movf	postinc2,w,c
  1476  000678  58E6               	subwfb	postinc1,w,c
  1477  00067A  50DE               	movf	postinc2,w,c
  1478  00067C  58E6               	subwfb	postinc1,w,c
  1479  00067E  50DE               	movf	postinc2,w,c
  1480  000680  58E6               	subwfb	postinc1,w,c
  1481  000682  B0D8               	btfsc	status,0,c
  1482  000684  EF46  F003         	goto	u1911
  1483  000688  EF48  F003         	goto	u1910
  1484  00068C                     u1911:
  1485  00068C  EF59  F003         	goto	l2005
  1486  000690                     u1910:
  1487  000690                     l2001:
  1488                           
  1489                           ; BSR set to: 0
  1490                           ;task.c: 39:         task_list[idx].next = head;
  1491  000690  51BD               	movf	addTask@idx& (0+255),w,b
  1492  000692  0D0F               	mullw	15
  1493  000694  0ED6               	movlw	low (_task_list+11)
  1494  000696  24F3               	addwf	243,w,c
  1495  000698  6ED9               	movwf	fsr2l,c
  1496  00069A  0E00               	movlw	high (_task_list+11)
  1497  00069C  20F4               	addwfc	prodh,w,c
  1498  00069E  6EDA               	movwf	fsr2h,c
  1499  0006A0  C09C  FFDE         	movff	_head,postinc2
  1500  0006A4  C09D  FFDD         	movff	_head+1,postdec2
  1501  0006A8                     
  1502                           ; BSR set to: 0
  1503                           ;task.c: 40:         head = idx;
  1504  0006A8  C0BD  F09C         	movff	addTask@idx,_head
  1505  0006AC  6B9D               	clrf	(_head+1)& (0+255),b
  1506                           
  1507                           ;task.c: 41:     }
  1508  0006AE  EF35  F004         	goto	l2023
  1509  0006B2                     l2005:
  1510                           
  1511                           ; BSR set to: 0
  1512                           ;task.c: 43:         delay = delay - task_list[head].delay_t;
  1513  0006B2  C09C  F09E         	movff	_head,___wmul@multiplier
  1514  0006B6  C09D  F09F         	movff	_head+1,___wmul@multiplier+1
  1515  0006BA  0E00               	movlw	0
  1516  0006BC  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1517  0006BE  0E0F               	movlw	15
  1518  0006C0  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  1519  0006C2  EC24  F009         	call	___wmul	;wreg free
  1520  0006C6  0ECB               	movlw	low _task_list
  1521  0006C8  0100               	movlb	0	; () banked
  1522  0006CA  259E               	addwf	?___wmul& (0+255),w,b
  1523  0006CC  6ED9               	movwf	fsr2l,c
  1524  0006CE  0E00               	movlw	high _task_list
  1525  0006D0  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  1526  0006D2  6EDA               	movwf	fsr2h,c
  1527  0006D4  CFDE F0B1          	movff	postinc2,??_addTask
  1528  0006D8  CFDE F0B2          	movff	postinc2,??_addTask+1
  1529  0006DC  CFDE F0B3          	movff	postinc2,??_addTask+2
  1530  0006E0  CFDE F0B4          	movff	postinc2,??_addTask+3
  1531  0006E4  51B1               	movf	??_addTask& (0+255),w,b
  1532  0006E6  5DA8               	subwf	addTask@delay& (0+255),w,b
  1533  0006E8  6FA8               	movwf	addTask@delay& (0+255),b
  1534  0006EA  51B2               	movf	(??_addTask+1)& (0+255),w,b
  1535  0006EC  59A9               	subwfb	(addTask@delay+1)& (0+255),w,b
  1536  0006EE  6FA9               	movwf	(addTask@delay+1)& (0+255),b
  1537  0006F0  51B3               	movf	(??_addTask+2)& (0+255),w,b
  1538  0006F2  59AA               	subwfb	(addTask@delay+2)& (0+255),w,b
  1539  0006F4  6FAA               	movwf	(addTask@delay+2)& (0+255),b
  1540  0006F6  51B4               	movf	(??_addTask+3)& (0+255),w,b
  1541  0006F8  59AB               	subwfb	(addTask@delay+3)& (0+255),w,b
  1542  0006FA  6FAB               	movwf	(addTask@delay+3)& (0+255),b
  1543                           
  1544                           ;task.c: 44:         int cur = task_list[head].next;
  1545  0006FC  C09C  F09E         	movff	_head,___wmul@multiplier
  1546  000700  C09D  F09F         	movff	_head+1,___wmul@multiplier+1
  1547  000704  0E00               	movlw	0
  1548  000706  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1549  000708  0E0F               	movlw	15
  1550  00070A  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  1551  00070C  EC24  F009         	call	___wmul	;wreg free
  1552  000710  0ED6               	movlw	low (_task_list+11)
  1553  000712  0100               	movlb	0	; () banked
  1554  000714  259E               	addwf	?___wmul& (0+255),w,b
  1555  000716  6ED9               	movwf	fsr2l,c
  1556  000718  0E00               	movlw	high (_task_list+11)
  1557  00071A  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  1558  00071C  6EDA               	movwf	fsr2h,c
  1559  00071E  CFDE F0BB          	movff	postinc2,addTask@cur
  1560  000722  CFDD F0BC          	movff	postdec2,addTask@cur+1
  1561  000726                     
  1562                           ; BSR set to: 0
  1563                           ;task.c: 45:         int prev = head;
  1564  000726  C09C  F0B9         	movff	_head,addTask@prev
  1565  00072A  C09D  F0BA         	movff	_head+1,addTask@prev+1
  1566                           
  1567                           ;task.c: 46:         while(cur != 105 && task_list[cur].delay_t <= delay) {
  1568  00072E  EFD7  F003         	goto	l2013
  1569  000732                     l2009:
  1570                           
  1571                           ; BSR set to: 0
  1572                           ;task.c: 47:             delay = delay - task_list[cur].delay_t;
  1573  000732  C0BB  F09E         	movff	addTask@cur,___wmul@multiplier
  1574  000736  C0BC  F09F         	movff	addTask@cur+1,___wmul@multiplier+1
  1575  00073A  0E00               	movlw	0
  1576  00073C  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1577  00073E  0E0F               	movlw	15
  1578  000740  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  1579  000742  EC24  F009         	call	___wmul	;wreg free
  1580  000746  0ECB               	movlw	low _task_list
  1581  000748  0100               	movlb	0	; () banked
  1582  00074A  259E               	addwf	?___wmul& (0+255),w,b
  1583  00074C  6ED9               	movwf	fsr2l,c
  1584  00074E  0E00               	movlw	high _task_list
  1585  000750  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  1586  000752  6EDA               	movwf	fsr2h,c
  1587  000754  CFDE F0B1          	movff	postinc2,??_addTask
  1588  000758  CFDE F0B2          	movff	postinc2,??_addTask+1
  1589  00075C  CFDE F0B3          	movff	postinc2,??_addTask+2
  1590  000760  CFDE F0B4          	movff	postinc2,??_addTask+3
  1591  000764  51B1               	movf	??_addTask& (0+255),w,b
  1592  000766  5DA8               	subwf	addTask@delay& (0+255),w,b
  1593  000768  6FA8               	movwf	addTask@delay& (0+255),b
  1594  00076A  51B2               	movf	(??_addTask+1)& (0+255),w,b
  1595  00076C  59A9               	subwfb	(addTask@delay+1)& (0+255),w,b
  1596  00076E  6FA9               	movwf	(addTask@delay+1)& (0+255),b
  1597  000770  51B3               	movf	(??_addTask+2)& (0+255),w,b
  1598  000772  59AA               	subwfb	(addTask@delay+2)& (0+255),w,b
  1599  000774  6FAA               	movwf	(addTask@delay+2)& (0+255),b
  1600  000776  51B4               	movf	(??_addTask+3)& (0+255),w,b
  1601  000778  59AB               	subwfb	(addTask@delay+3)& (0+255),w,b
  1602  00077A  6FAB               	movwf	(addTask@delay+3)& (0+255),b
  1603  00077C                     
  1604                           ; BSR set to: 0
  1605                           ;task.c: 48:             prev = cur;
  1606  00077C  C0BB  F0B9         	movff	addTask@cur,addTask@prev
  1607  000780  C0BC  F0BA         	movff	addTask@cur+1,addTask@prev+1
  1608                           
  1609                           ;task.c: 49:             cur = task_list[cur].next;
  1610  000784  C0BB  F09E         	movff	addTask@cur,___wmul@multiplier
  1611  000788  C0BC  F09F         	movff	addTask@cur+1,___wmul@multiplier+1
  1612  00078C  0E00               	movlw	0
  1613  00078E  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1614  000790  0E0F               	movlw	15
  1615  000792  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  1616  000794  EC24  F009         	call	___wmul	;wreg free
  1617  000798  0ED6               	movlw	low (_task_list+11)
  1618  00079A  0100               	movlb	0	; () banked
  1619  00079C  259E               	addwf	?___wmul& (0+255),w,b
  1620  00079E  6ED9               	movwf	fsr2l,c
  1621  0007A0  0E00               	movlw	high (_task_list+11)
  1622  0007A2  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  1623  0007A4  6EDA               	movwf	fsr2h,c
  1624  0007A6  CFDE F0BB          	movff	postinc2,addTask@cur
  1625  0007AA  CFDD F0BC          	movff	postdec2,addTask@cur+1
  1626  0007AE                     l2013:
  1627                           
  1628                           ; BSR set to: 0
  1629                           ;task.c: 46:         while(cur != 105 && task_list[cur].delay_t <= delay) {
  1630  0007AE  0E69               	movlw	105
  1631  0007B0  19BB               	xorwf	addTask@cur& (0+255),w,b
  1632  0007B2  11BC               	iorwf	(addTask@cur+1)& (0+255),w,b
  1633  0007B4  B4D8               	btfsc	status,2,c
  1634  0007B6  EFDF  F003         	goto	u1921
  1635  0007BA  EFE1  F003         	goto	u1920
  1636  0007BE                     u1921:
  1637  0007BE  EF01  F004         	goto	l2017
  1638  0007C2                     u1920:
  1639  0007C2                     
  1640                           ; BSR set to: 0
  1641  0007C2  C0BB  F09E         	movff	addTask@cur,___wmul@multiplier
  1642  0007C6  C0BC  F09F         	movff	addTask@cur+1,___wmul@multiplier+1
  1643  0007CA  0E00               	movlw	0
  1644  0007CC  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1645  0007CE  0E0F               	movlw	15
  1646  0007D0  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  1647  0007D2  EC24  F009         	call	___wmul	;wreg free
  1648  0007D6  0ECB               	movlw	low _task_list
  1649  0007D8  0100               	movlb	0	; () banked
  1650  0007DA  259E               	addwf	?___wmul& (0+255),w,b
  1651  0007DC  6ED9               	movwf	fsr2l,c
  1652  0007DE  0E00               	movlw	high _task_list
  1653  0007E0  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  1654  0007E2  6EDA               	movwf	fsr2h,c
  1655  0007E4  50DE               	movf	postinc2,w,c
  1656  0007E6  5DA8               	subwf	addTask@delay& (0+255),w,b
  1657  0007E8  50DE               	movf	postinc2,w,c
  1658  0007EA  59A9               	subwfb	(addTask@delay+1)& (0+255),w,b
  1659  0007EC  50DE               	movf	postinc2,w,c
  1660  0007EE  59AA               	subwfb	(addTask@delay+2)& (0+255),w,b
  1661  0007F0  50DE               	movf	postinc2,w,c
  1662  0007F2  59AB               	subwfb	(addTask@delay+3)& (0+255),w,b
  1663  0007F4  B0D8               	btfsc	status,0,c
  1664  0007F6  EFFF  F003         	goto	u1931
  1665  0007FA  EF01  F004         	goto	u1930
  1666  0007FE                     u1931:
  1667  0007FE  EF99  F003         	goto	l2009
  1668  000802                     u1930:
  1669  000802                     l2017:
  1670                           
  1671                           ; BSR set to: 0
  1672                           ;task.c: 51:         task_list[prev].next = idx;
  1673  000802  51BD               	movf	addTask@idx& (0+255),w,b
  1674  000804  6FB1               	movwf	??_addTask& (0+255),b
  1675  000806  6BB2               	clrf	(??_addTask+1)& (0+255),b
  1676  000808  C0B9  F09E         	movff	addTask@prev,___wmul@multiplier
  1677  00080C  C0BA  F09F         	movff	addTask@prev+1,___wmul@multiplier+1
  1678  000810  0E00               	movlw	0
  1679  000812  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1680  000814  0E0F               	movlw	15
  1681  000816  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  1682  000818  EC24  F009         	call	___wmul	;wreg free
  1683  00081C  0ED6               	movlw	low (_task_list+11)
  1684  00081E  0100               	movlb	0	; () banked
  1685  000820  259E               	addwf	?___wmul& (0+255),w,b
  1686  000822  6ED9               	movwf	fsr2l,c
  1687  000824  0E00               	movlw	high (_task_list+11)
  1688  000826  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  1689  000828  6EDA               	movwf	fsr2h,c
  1690  00082A  C0B1  FFDE         	movff	??_addTask,postinc2
  1691  00082E  C0B2  FFDD         	movff	??_addTask+1,postdec2
  1692  000832                     
  1693                           ; BSR set to: 0
  1694                           ;task.c: 52:         task_list[idx].next = cur;
  1695  000832  51BD               	movf	addTask@idx& (0+255),w,b
  1696  000834  0D0F               	mullw	15
  1697  000836  0ED6               	movlw	low (_task_list+11)
  1698  000838  24F3               	addwf	243,w,c
  1699  00083A  6ED9               	movwf	fsr2l,c
  1700  00083C  0E00               	movlw	high (_task_list+11)
  1701  00083E  20F4               	addwfc	prodh,w,c
  1702  000840  6EDA               	movwf	fsr2h,c
  1703  000842  C0BB  FFDE         	movff	addTask@cur,postinc2
  1704  000846  C0BC  FFDD         	movff	addTask@cur+1,postdec2
  1705  00084A                     
  1706                           ; BSR set to: 0
  1707                           ;task.c: 53:         task_list[idx].delay_t = delay;
  1708  00084A  51BD               	movf	addTask@idx& (0+255),w,b
  1709  00084C  0D0F               	mullw	15
  1710  00084E  0ECB               	movlw	low _task_list
  1711  000850  24F3               	addwf	243,w,c
  1712  000852  6ED9               	movwf	fsr2l,c
  1713  000854  0E00               	movlw	high _task_list
  1714  000856  20F4               	addwfc	prodh,w,c
  1715  000858  6EDA               	movwf	fsr2h,c
  1716  00085A  C0A8  FFDE         	movff	addTask@delay,postinc2
  1717  00085E  C0A9  FFDE         	movff	addTask@delay+1,postinc2
  1718  000862  C0AA  FFDE         	movff	addTask@delay+2,postinc2
  1719  000866  C0AB  FFDE         	movff	addTask@delay+3,postinc2
  1720  00086A                     l2023:
  1721                           
  1722                           ; BSR set to: 0
  1723                           ;task.c: 55:     if(task_list[idx].next != 105)
  1724  00086A  51BD               	movf	addTask@idx& (0+255),w,b
  1725  00086C  0D0F               	mullw	15
  1726  00086E  0ED6               	movlw	low (_task_list+11)
  1727  000870  24F3               	addwf	243,w,c
  1728  000872  6ED9               	movwf	fsr2l,c
  1729  000874  0E00               	movlw	high (_task_list+11)
  1730  000876  20F4               	addwfc	prodh,w,c
  1731  000878  6EDA               	movwf	fsr2h,c
  1732  00087A  0E69               	movlw	105
  1733  00087C  18DE               	xorwf	postinc2,w,c
  1734  00087E  10DE               	iorwf	postinc2,w,c
  1735  000880  B4D8               	btfsc	status,2,c
  1736  000882  EF45  F004         	goto	u1941
  1737  000886  EF47  F004         	goto	u1940
  1738  00088A                     u1941:
  1739  00088A  EF95  F004         	goto	l2027
  1740  00088E                     u1940:
  1741  00088E                     
  1742                           ; BSR set to: 0
  1743                           ;task.c: 56:         task_list[task_list[idx].next].delay_t = task_list[task_list[idx].n
      +                          ext].delay_t - delay;
  1744  00088E  51BD               	movf	addTask@idx& (0+255),w,b
  1745  000890  0D0F               	mullw	15
  1746  000892  0ED6               	movlw	low (_task_list+11)
  1747  000894  24F3               	addwf	243,w,c
  1748  000896  6ED9               	movwf	fsr2l,c
  1749  000898  0E00               	movlw	high (_task_list+11)
  1750  00089A  20F4               	addwfc	prodh,w,c
  1751  00089C  6EDA               	movwf	fsr2h,c
  1752  00089E  CFDE F09E          	movff	postinc2,___wmul@multiplier
  1753  0008A2  CFDD F09F          	movff	postdec2,___wmul@multiplier+1
  1754  0008A6  0E00               	movlw	0
  1755  0008A8  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1756  0008AA  0E0F               	movlw	15
  1757  0008AC  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  1758  0008AE  EC24  F009         	call	___wmul	;wreg free
  1759  0008B2  0ECB               	movlw	low _task_list
  1760  0008B4  0100               	movlb	0	; () banked
  1761  0008B6  259E               	addwf	?___wmul& (0+255),w,b
  1762  0008B8  6ED9               	movwf	fsr2l,c
  1763  0008BA  0E00               	movlw	high _task_list
  1764  0008BC  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  1765  0008BE  6EDA               	movwf	fsr2h,c
  1766  0008C0  CFDE F0B1          	movff	postinc2,??_addTask
  1767  0008C4  CFDE F0B2          	movff	postinc2,??_addTask+1
  1768  0008C8  CFDE F0B3          	movff	postinc2,??_addTask+2
  1769  0008CC  CFDE F0B4          	movff	postinc2,??_addTask+3
  1770  0008D0  51A8               	movf	addTask@delay& (0+255),w,b
  1771  0008D2  5DB1               	subwf	??_addTask& (0+255),w,b
  1772  0008D4  6FB5               	movwf	(??_addTask+4)& (0+255),b
  1773  0008D6  51A9               	movf	(addTask@delay+1)& (0+255),w,b
  1774  0008D8  59B2               	subwfb	(??_addTask+1)& (0+255),w,b
  1775  0008DA  6FB6               	movwf	(??_addTask+5)& (0+255),b
  1776  0008DC  51AA               	movf	(addTask@delay+2)& (0+255),w,b
  1777  0008DE  59B3               	subwfb	(??_addTask+2)& (0+255),w,b
  1778  0008E0  6FB7               	movwf	(??_addTask+6)& (0+255),b
  1779  0008E2  51AB               	movf	(addTask@delay+3)& (0+255),w,b
  1780  0008E4  59B4               	subwfb	(??_addTask+3)& (0+255),w,b
  1781  0008E6  6FB8               	movwf	(??_addTask+7)& (0+255),b
  1782  0008E8  51BD               	movf	addTask@idx& (0+255),w,b
  1783  0008EA  0D0F               	mullw	15
  1784  0008EC  0ED6               	movlw	low (_task_list+11)
  1785  0008EE  24F3               	addwf	243,w,c
  1786  0008F0  6ED9               	movwf	fsr2l,c
  1787  0008F2  0E00               	movlw	high (_task_list+11)
  1788  0008F4  20F4               	addwfc	prodh,w,c
  1789  0008F6  6EDA               	movwf	fsr2h,c
  1790  0008F8  CFDE F09E          	movff	postinc2,___wmul@multiplier
  1791  0008FC  CFDD F09F          	movff	postdec2,___wmul@multiplier+1
  1792  000900  0E00               	movlw	0
  1793  000902  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1794  000904  0E0F               	movlw	15
  1795  000906  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  1796  000908  EC24  F009         	call	___wmul	;wreg free
  1797  00090C  0ECB               	movlw	low _task_list
  1798  00090E  0100               	movlb	0	; () banked
  1799  000910  259E               	addwf	?___wmul& (0+255),w,b
  1800  000912  6ED9               	movwf	fsr2l,c
  1801  000914  0E00               	movlw	high _task_list
  1802  000916  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  1803  000918  6EDA               	movwf	fsr2h,c
  1804  00091A  C0B5  FFDE         	movff	??_addTask+4,postinc2
  1805  00091E  C0B6  FFDE         	movff	??_addTask+5,postinc2
  1806  000922  C0B7  FFDE         	movff	??_addTask+6,postinc2
  1807  000926  C0B8  FFDE         	movff	??_addTask+7,postinc2
  1808  00092A                     l2027:
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;task.c: 57:     return idx;
  1812  00092A  51BD               	movf	addTask@idx& (0+255),w,b
  1813  00092C                     l158:
  1814  00092C  0012               	return		;funcret
  1815  00092E                     __end_of_addTask:
  1816                           	opt callstack 0
  1817                           
  1818 ;; *************** function _isFullList *****************
  1819 ;; Defined at:
  1820 ;;		line 7 in file "task.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;		None
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;		None
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  1    wreg      unsigned char 
  1827 ;; Registers used:
  1828 ;;		wreg, status,2, status,0
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1838 ;;Total ram usage:        0 bytes
  1839 ;; Hardware stack levels used:    1
  1840 ;; Hardware stack levels required when called:    6
  1841 ;; This function calls:
  1842 ;;		Nothing
  1843 ;; This function is called by:
  1844 ;;		_addTask
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           	psect	text9
  1849  0013D8                     __ptext9:
  1850                           	opt callstack 0
  1851  0013D8                     _isFullList:
  1852                           	opt callstack 22
  1853  0013D8                     
  1854                           ;task.c: 8:     return num_task == 20 ? 1 : 0;
  1855  0013D8  0E14               	movlw	20
  1856  0013DA  1840               	xorwf	_num_task^0,w,c
  1857  0013DC  B4D8               	btfsc	status,2,c
  1858  0013DE  EFF3  F009         	goto	u1811
  1859  0013E2  EFF6  F009         	goto	u1810
  1860  0013E6                     u1811:
  1861  0013E6  0E01               	movlw	1
  1862  0013E8  EFF7  F009         	goto	u1820
  1863  0013EC                     u1810:
  1864  0013EC  0E00               	movlw	0
  1865  0013EE                     u1820:
  1866  0013EE  0012               	return		;funcret
  1867  0013F0                     __end_of_isFullList:
  1868                           	opt callstack 0
  1869                           
  1870 ;; *************** function _dispatch *****************
  1871 ;; Defined at:
  1872 ;;		line 72 in file "clock.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;		None
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;		None
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  1    wreg      void 
  1879 ;; Registers used:
  1880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1890 ;;Total ram usage:        0 bytes
  1891 ;; Hardware stack levels used:    1
  1892 ;; Hardware stack levels required when called:   11
  1893 ;; This function calls:
  1894 ;;		_selectReadyTask
  1895 ;; This function is called by:
  1896 ;;		_main
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           	psect	text10
  1901  001428                     __ptext10:
  1902                           	opt callstack 0
  1903  001428                     _dispatch:
  1904                           	opt callstack 19
  1905  001428                     
  1906                           ;clock.c: 73:     selectReadyTask();
  1907  001428  EC7F  F008         	call	_selectReadyTask	;wreg free
  1908  00142C  0012               	return		;funcret
  1909  00142E                     __end_of_dispatch:
  1910                           	opt callstack 0
  1911                           
  1912 ;; *************** function _selectReadyTask *****************
  1913 ;; Defined at:
  1914 ;;		line 118 in file "task.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;		None
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;  ptr             3   13[BANK0 ] PTR FTN()void 
  1919 ;;		 -> NULL(0), blink_LED5(1), blink_LED4(1), blink_LED3(1), 
  1920 ;;		 -> blink_LED2(1), blink_LED1(1), blink_LED0(1), 
  1921 ;; Return value:  Size  Location     Type
  1922 ;;                  1    wreg      void 
  1923 ;; Registers used:
  1924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1925 ;; Tracked objects:
  1926 ;;		On entry : 0/0
  1927 ;;		On exit  : 0/0
  1928 ;;		Unchanged: 0/0
  1929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1931 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1933 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1934 ;;Total ram usage:        3 bytes
  1935 ;; Hardware stack levels used:    1
  1936 ;; Hardware stack levels required when called:   10
  1937 ;; This function calls:
  1938 ;;		_blink_LED0
  1939 ;;		_blink_LED1
  1940 ;;		_blink_LED2
  1941 ;;		_blink_LED3
  1942 ;;		_blink_LED4
  1943 ;;		_blink_LED5
  1944 ;;		_dequeue
  1945 ;;		_isEmptyQueue
  1946 ;; This function is called by:
  1947 ;;		_dispatch
  1948 ;; This function uses a non-reentrant model
  1949 ;;
  1950                           
  1951                           	psect	text11
  1952  0010FE                     __ptext11:
  1953                           	opt callstack 0
  1954  0010FE                     _selectReadyTask:
  1955                           	opt callstack 19
  1956  0010FE                     
  1957                           ;task.c: 119:     while(!isEmptyQueue()) {
  1958  0010FE  EFA1  F008         	goto	l2039
  1959  001102                     l2033:
  1960                           
  1961                           ;task.c: 120:         FUNCTION_PTR ptr = dequeue();
  1962  001102  ECFD  F007         	call	_dequeue	;wreg free
  1963  001106  C0A6  F0AB         	movff	?_dequeue,selectReadyTask@ptr
  1964  00110A  C0A7  F0AC         	movff	?_dequeue+1,selectReadyTask@ptr+1
  1965  00110E  C0A8  F0AD         	movff	?_dequeue+2,selectReadyTask@ptr+2
  1966  001112                     
  1967                           ;task.c: 121:         if( ptr != ((void*)0))
  1968  001112  0100               	movlb	0	; () banked
  1969  001114  51AB               	movf	selectReadyTask@ptr& (0+255),w,b
  1970  001116  11AC               	iorwf	(selectReadyTask@ptr+1)& (0+255),w,b
  1971  001118  11AD               	iorwf	(selectReadyTask@ptr+2)& (0+255),w,b
  1972  00111A  B4D8               	btfsc	status,2,c
  1973  00111C  EF92  F008         	goto	u1951
  1974  001120  EF94  F008         	goto	u1950
  1975  001124                     u1951:
  1976  001124  EFA1  F008         	goto	l2039
  1977  001128                     u1950:
  1978  001128                     
  1979                           ; BSR set to: 0
  1980                           ;task.c: 122:             (ptr)();
  1981  001128  D802               	call	u1968
  1982  00112A  EFA1  F008         	goto	u1969
  1983  00112E                     u1968:
  1984  00112E  0005               	push	
  1985  001130  6EFA               	movwf	pclath,c
  1986  001132  51AB               	movf	selectReadyTask@ptr& (0+255),w,b
  1987  001134  6EFD               	movwf	tosl,c
  1988  001136  51AC               	movf	(selectReadyTask@ptr+1)& (0+255),w,b
  1989  001138  6EFE               	movwf	tosh,c
  1990  00113A  51AD               	movf	(selectReadyTask@ptr+2)& (0+255),w,b
  1991  00113C  6EFF               	movwf	tosu,c
  1992  00113E  50FA               	movf	pclath,w,c
  1993  001140  0012               	return		;indir
  1994  001142                     u1969:
  1995  001142                     l2039:
  1996                           
  1997                           ;task.c: 119:     while(!isEmptyQueue()) {
  1998  001142  ECF4  F008         	call	_isEmptyQueue	;wreg free
  1999  001146  0900               	iorlw	0
  2000  001148  B4D8               	btfsc	status,2,c
  2001  00114A  EFA9  F008         	goto	u1971
  2002  00114E  EFAB  F008         	goto	u1970
  2003  001152                     u1971:
  2004  001152  EF81  F008         	goto	l2033
  2005  001156                     u1970:
  2006  001156  0012               	return		;funcret
  2007  001158                     __end_of_selectReadyTask:
  2008                           	opt callstack 0
  2009                           
  2010 ;; *************** function _dequeue *****************
  2011 ;; Defined at:
  2012 ;;		line 27 in file "ready_queue.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;		None
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;  idx             2   11[BANK0 ] int 
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  3    8[BANK0 ] PTR FTN()void 
  2019 ;; Registers used:
  2020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2026 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2027 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2029 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2030 ;;Total ram usage:        5 bytes
  2031 ;; Hardware stack levels used:    1
  2032 ;; Hardware stack levels required when called:    9
  2033 ;; This function calls:
  2034 ;;		___awmod
  2035 ;;		___wmul
  2036 ;;		_isEmptyQueue
  2037 ;; This function is called by:
  2038 ;;		_selectReadyTask
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042                           	psect	text12
  2043  000FFA                     __ptext12:
  2044                           	opt callstack 0
  2045  000FFA                     _dequeue:
  2046                           	opt callstack 19
  2047  000FFA                     
  2048                           ;ready_queue.c: 28:     if(isEmptyQueue())
  2049  000FFA  ECF4  F008         	call	_isEmptyQueue	;wreg free
  2050  000FFE  0900               	iorlw	0
  2051  001000  B4D8               	btfsc	status,2,c
  2052  001002  EF05  F008         	goto	u1801
  2053  001006  EF07  F008         	goto	u1800
  2054  00100A                     u1801:
  2055  00100A  EF10  F008         	goto	l122
  2056  00100E                     u1800:
  2057  00100E                     
  2058                           ;ready_queue.c: 29:         return ((void*)0);
  2059  00100E  0E00               	movlw	0
  2060  001010  0100               	movlb	0	; () banked
  2061  001012  6FA6               	movwf	?_dequeue& (0+255),b
  2062  001014  0E00               	movlw	0
  2063  001016  6FA7               	movwf	(?_dequeue+1)& (0+255),b
  2064  001018  0E00               	movlw	0
  2065  00101A  6FA8               	movwf	(?_dequeue+2)& (0+255),b
  2066  00101C  EF3D  F008         	goto	l123
  2067  001020                     l122:
  2068                           
  2069                           ;ready_queue.c: 30:     int idx = front;
  2070  001020  C044  F0A9         	movff	_front,dequeue@idx
  2071  001024  C045  F0AA         	movff	_front+1,dequeue@idx+1
  2072  001028                     
  2073                           ;ready_queue.c: 31:     front = (front + 1) % 20;
  2074  001028  0E01               	movlw	1
  2075  00102A  2444               	addwf	_front^0,w,c
  2076  00102C  0100               	movlb	0	; () banked
  2077  00102E  6F9E               	movwf	___awmod@dividend& (0+255),b
  2078  001030  0E00               	movlw	0
  2079  001032  2045               	addwfc	(_front+1)^0,w,c
  2080  001034  6F9F               	movwf	(___awmod@dividend+1)& (0+255),b
  2081  001036  0E00               	movlw	0
  2082  001038  6FA1               	movwf	(___awmod@divisor+1)& (0+255),b
  2083  00103A  0E14               	movlw	20
  2084  00103C  6FA0               	movwf	___awmod@divisor& (0+255),b
  2085  00103E  ECAA  F006         	call	___awmod	;wreg free
  2086  001042  C09E  F044         	movff	?___awmod,_front
  2087  001046  C09F  F045         	movff	?___awmod+1,_front+1
  2088  00104A                     
  2089                           ;ready_queue.c: 32:     return ready_queue[idx];
  2090  00104A  C0A9  F09E         	movff	dequeue@idx,___wmul@multiplier
  2091  00104E  C0AA  F09F         	movff	dequeue@idx+1,___wmul@multiplier+1
  2092  001052  0E00               	movlw	0
  2093  001054  0100               	movlb	0	; () banked
  2094  001056  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2095  001058  0E03               	movlw	3
  2096  00105A  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  2097  00105C  EC24  F009         	call	___wmul	;wreg free
  2098  001060  0E60               	movlw	low _ready_queue
  2099  001062  0100               	movlb	0	; () banked
  2100  001064  259E               	addwf	?___wmul& (0+255),w,b
  2101  001066  6ED9               	movwf	fsr2l,c
  2102  001068  0E00               	movlw	high _ready_queue
  2103  00106A  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  2104  00106C  6EDA               	movwf	fsr2h,c
  2105  00106E  CFDE F0A6          	movff	postinc2,?_dequeue
  2106  001072  CFDE F0A7          	movff	postinc2,?_dequeue+1
  2107  001076  CFDD F0A8          	movff	postdec2,?_dequeue+2
  2108  00107A                     l123:
  2109                           
  2110                           ; BSR set to: 0
  2111  00107A  0012               	return		;funcret
  2112  00107C                     __end_of_dequeue:
  2113                           	opt callstack 0
  2114                           
  2115 ;; *************** function _isEmptyQueue *****************
  2116 ;; Defined at:
  2117 ;;		line 11 in file "ready_queue.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;		None
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;		None
  2122 ;; Return value:  Size  Location     Type
  2123 ;;                  1    wreg      unsigned char 
  2124 ;; Registers used:
  2125 ;;		wreg, status,2, status,0, cstack
  2126 ;; Tracked objects:
  2127 ;;		On entry : 0/0
  2128 ;;		On exit  : 0/0
  2129 ;;		Unchanged: 0/0
  2130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2135 ;;Total ram usage:        0 bytes
  2136 ;; Hardware stack levels used:    1
  2137 ;; Hardware stack levels required when called:    8
  2138 ;; This function calls:
  2139 ;;		_getSizeQueue
  2140 ;; This function is called by:
  2141 ;;		_dequeue
  2142 ;;		_selectReadyTask
  2143 ;; This function uses a non-reentrant model
  2144 ;;
  2145                           
  2146                           	psect	text13
  2147  0011E8                     __ptext13:
  2148                           	opt callstack 0
  2149  0011E8                     _isEmptyQueue:
  2150                           	opt callstack 20
  2151  0011E8                     
  2152                           ;ready_queue.c: 12:     if(front == -1)
  2153  0011E8  2844               	incf	_front^0,w,c
  2154  0011EA  E106               	bnz	u1591
  2155  0011EC  2845               	incf	(_front+1)^0,w,c
  2156  0011EE  A4D8               	btfss	status,2,c
  2157  0011F0  EFFC  F008         	goto	u1591
  2158  0011F4  EFFE  F008         	goto	u1590
  2159  0011F8                     u1591:
  2160  0011F8  EF01  F009         	goto	l1867
  2161  0011FC                     u1590:
  2162  0011FC                     
  2163                           ;ready_queue.c: 13:         return 0;
  2164  0011FC  0E00               	movlw	0
  2165  0011FE  EF0D  F009         	goto	l114
  2166  001202                     l1867:
  2167                           
  2168                           ;ready_queue.c: 14:     return getSizeQueue() == 0 ? 1 : 0;
  2169  001202  EC0E  F009         	call	_getSizeQueue	;wreg free
  2170  001206  0900               	iorlw	0
  2171  001208  B4D8               	btfsc	status,2,c
  2172  00120A  EF09  F009         	goto	u1601
  2173  00120E  EF0C  F009         	goto	u1600
  2174  001212                     u1601:
  2175  001212  0E01               	movlw	1
  2176  001214  EF0D  F009         	goto	u1610
  2177  001218                     u1600:
  2178  001218  0E00               	movlw	0
  2179  00121A                     u1610:
  2180  00121A                     l114:
  2181  00121A  0012               	return		;funcret
  2182  00121C                     __end_of_isEmptyQueue:
  2183                           	opt callstack 0
  2184                           
  2185 ;; *************** function _getSizeQueue *****************
  2186 ;; Defined at:
  2187 ;;		line 3 in file "ready_queue.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;		None
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;		None
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  1    wreg      unsigned char 
  2194 ;; Registers used:
  2195 ;;		wreg, status,2, status,0, cstack
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2203 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2204 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2205 ;;Total ram usage:        2 bytes
  2206 ;; Hardware stack levels used:    1
  2207 ;; Hardware stack levels required when called:    7
  2208 ;; This function calls:
  2209 ;;		___awmod
  2210 ;; This function is called by:
  2211 ;;		_isEmptyQueue
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           	psect	text14
  2216  00121C                     __ptext14:
  2217                           	opt callstack 0
  2218  00121C                     _getSizeQueue:
  2219                           	opt callstack 20
  2220  00121C                     
  2221                           ;ready_queue.c: 4:     return (rear - front + 1 + 20) % 20;
  2222  00121C  5044               	movf	_front^0,w,c
  2223  00121E  5C42               	subwf	_rear^0,w,c
  2224  001220  0100               	movlb	0	; () banked
  2225  001222  6FA4               	movwf	??_getSizeQueue& (0+255),b
  2226  001224  5045               	movf	(_front+1)^0,w,c
  2227  001226  5843               	subwfb	(_rear+1)^0,w,c
  2228  001228  6FA5               	movwf	(??_getSizeQueue+1)& (0+255),b
  2229  00122A  0E15               	movlw	21
  2230  00122C  25A4               	addwf	??_getSizeQueue& (0+255),w,b
  2231  00122E  6F9E               	movwf	___awmod@dividend& (0+255),b
  2232  001230  0E00               	movlw	0
  2233  001232  21A5               	addwfc	(??_getSizeQueue+1)& (0+255),w,b
  2234  001234  6F9F               	movwf	(___awmod@dividend+1)& (0+255),b
  2235  001236  0E00               	movlw	0
  2236  001238  6FA1               	movwf	(___awmod@divisor+1)& (0+255),b
  2237  00123A  0E14               	movlw	20
  2238  00123C  6FA0               	movwf	___awmod@divisor& (0+255),b
  2239  00123E  ECAA  F006         	call	___awmod	;wreg free
  2240  001242  0100               	movlb	0	; () banked
  2241  001244  519E               	movf	?___awmod& (0+255),w,b
  2242  001246                     
  2243                           ; BSR set to: 0
  2244  001246  0012               	return		;funcret
  2245  001248                     __end_of_getSizeQueue:
  2246                           	opt callstack 0
  2247                           
  2248 ;; *************** function ___awmod *****************
  2249 ;; Defined at:
  2250 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;  dividend        2    0[BANK0 ] int 
  2253 ;;  divisor         2    2[BANK0 ] int 
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;  sign            1    5[BANK0 ] unsigned char 
  2256 ;;  counter         1    4[BANK0 ] unsigned char 
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  2    0[BANK0 ] int 
  2259 ;; Registers used:
  2260 ;;		wreg, status,2, status,0
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2266 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2267 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2269 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2270 ;;Total ram usage:        6 bytes
  2271 ;; Hardware stack levels used:    1
  2272 ;; Hardware stack levels required when called:    6
  2273 ;; This function calls:
  2274 ;;		Nothing
  2275 ;; This function is called by:
  2276 ;;		_getSizeQueue
  2277 ;;		_dequeue
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           	psect	text15
  2282  000D54                     __ptext15:
  2283                           	opt callstack 0
  2284  000D54                     ___awmod:
  2285                           	opt callstack 20
  2286  000D54  0E00               	movlw	0
  2287  000D56  0100               	movlb	0	; () banked
  2288  000D58  6FA3               	movwf	___awmod@sign& (0+255),b
  2289  000D5A                     
  2290                           ; BSR set to: 0
  2291  000D5A  BF9F               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  2292  000D5C  EFB4  F006         	goto	u1530
  2293  000D60  EFB2  F006         	goto	u1531
  2294  000D64                     u1531:
  2295  000D64  EFBA  F006         	goto	l1829
  2296  000D68                     u1530:
  2297  000D68                     
  2298                           ; BSR set to: 0
  2299  000D68  6D9E               	negf	___awmod@dividend& (0+255),b
  2300  000D6A  1F9F               	comf	(___awmod@dividend+1)& (0+255),f,b
  2301  000D6C  B0D8               	btfsc	status,0,c
  2302  000D6E  2B9F               	incf	(___awmod@dividend+1)& (0+255),f,b
  2303  000D70                     
  2304                           ; BSR set to: 0
  2305  000D70  0E01               	movlw	1
  2306  000D72  6FA3               	movwf	___awmod@sign& (0+255),b
  2307  000D74                     l1829:
  2308                           
  2309                           ; BSR set to: 0
  2310  000D74  BFA1               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  2311  000D76  EFC1  F006         	goto	u1540
  2312  000D7A  EFBF  F006         	goto	u1541
  2313  000D7E                     u1541:
  2314  000D7E  EFC5  F006         	goto	l1833
  2315  000D82                     u1540:
  2316  000D82                     
  2317                           ; BSR set to: 0
  2318  000D82  6DA0               	negf	___awmod@divisor& (0+255),b
  2319  000D84  1FA1               	comf	(___awmod@divisor+1)& (0+255),f,b
  2320  000D86  B0D8               	btfsc	status,0,c
  2321  000D88  2BA1               	incf	(___awmod@divisor+1)& (0+255),f,b
  2322  000D8A                     l1833:
  2323                           
  2324                           ; BSR set to: 0
  2325  000D8A  51A0               	movf	___awmod@divisor& (0+255),w,b
  2326  000D8C  11A1               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  2327  000D8E  B4D8               	btfsc	status,2,c
  2328  000D90  EFCC  F006         	goto	u1551
  2329  000D94  EFCE  F006         	goto	u1550
  2330  000D98                     u1551:
  2331  000D98  EFF2  F006         	goto	l1849
  2332  000D9C                     u1550:
  2333  000D9C                     
  2334                           ; BSR set to: 0
  2335  000D9C  0E01               	movlw	1
  2336  000D9E  6FA2               	movwf	___awmod@counter& (0+255),b
  2337  000DA0  EFD6  F006         	goto	l1839
  2338  000DA4                     l1837:
  2339                           
  2340                           ; BSR set to: 0
  2341  000DA4  90D8               	bcf	status,0,c
  2342  000DA6  37A0               	rlcf	___awmod@divisor& (0+255),f,b
  2343  000DA8  37A1               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  2344  000DAA  2BA2               	incf	___awmod@counter& (0+255),f,b
  2345  000DAC                     l1839:
  2346                           
  2347                           ; BSR set to: 0
  2348  000DAC  AFA1               	btfss	(___awmod@divisor+1)& (0+255),7,b
  2349  000DAE  EFDB  F006         	goto	u1561
  2350  000DB2  EFDD  F006         	goto	u1560
  2351  000DB6                     u1561:
  2352  000DB6  EFD2  F006         	goto	l1837
  2353  000DBA                     u1560:
  2354  000DBA                     l1841:
  2355                           
  2356                           ; BSR set to: 0
  2357  000DBA  51A0               	movf	___awmod@divisor& (0+255),w,b
  2358  000DBC  5D9E               	subwf	___awmod@dividend& (0+255),w,b
  2359  000DBE  51A1               	movf	(___awmod@divisor+1)& (0+255),w,b
  2360  000DC0  599F               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  2361  000DC2  A0D8               	btfss	status,0,c
  2362  000DC4  EFE6  F006         	goto	u1571
  2363  000DC8  EFE8  F006         	goto	u1570
  2364  000DCC                     u1571:
  2365  000DCC  EFEC  F006         	goto	l1845
  2366  000DD0                     u1570:
  2367  000DD0                     
  2368                           ; BSR set to: 0
  2369  000DD0  51A0               	movf	___awmod@divisor& (0+255),w,b
  2370  000DD2  5F9E               	subwf	___awmod@dividend& (0+255),f,b
  2371  000DD4  51A1               	movf	(___awmod@divisor+1)& (0+255),w,b
  2372  000DD6  5B9F               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  2373  000DD8                     l1845:
  2374                           
  2375                           ; BSR set to: 0
  2376  000DD8  90D8               	bcf	status,0,c
  2377  000DDA  33A1               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  2378  000DDC  33A0               	rrcf	___awmod@divisor& (0+255),f,b
  2379  000DDE                     
  2380                           ; BSR set to: 0
  2381  000DDE  2FA2               	decfsz	___awmod@counter& (0+255),f,b
  2382  000DE0  EFDD  F006         	goto	l1841
  2383  000DE4                     l1849:
  2384                           
  2385                           ; BSR set to: 0
  2386  000DE4  51A3               	movf	___awmod@sign& (0+255),w,b
  2387  000DE6  B4D8               	btfsc	status,2,c
  2388  000DE8  EFF8  F006         	goto	u1581
  2389  000DEC  EFFA  F006         	goto	u1580
  2390  000DF0                     u1581:
  2391  000DF0  EFFE  F006         	goto	l1853
  2392  000DF4                     u1580:
  2393  000DF4                     
  2394                           ; BSR set to: 0
  2395  000DF4  6D9E               	negf	___awmod@dividend& (0+255),b
  2396  000DF6  1F9F               	comf	(___awmod@dividend+1)& (0+255),f,b
  2397  000DF8  B0D8               	btfsc	status,0,c
  2398  000DFA  2B9F               	incf	(___awmod@dividend+1)& (0+255),f,b
  2399  000DFC                     l1853:
  2400                           
  2401                           ; BSR set to: 0
  2402  000DFC  C09E  F09E         	movff	___awmod@dividend,?___awmod
  2403  000E00  C09F  F09F         	movff	___awmod@dividend+1,?___awmod+1
  2404  000E04                     
  2405                           ; BSR set to: 0
  2406  000E04  0012               	return		;funcret
  2407  000E06                     __end_of___awmod:
  2408                           	opt callstack 0
  2409                           
  2410 ;; *************** function ___wmul *****************
  2411 ;; Defined at:
  2412 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2415 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2416 ;; Auto vars:     Size  Location     Type
  2417 ;;  product         2    4[BANK0 ] unsigned int 
  2418 ;; Return value:  Size  Location     Type
  2419 ;;                  2    0[BANK0 ] unsigned int 
  2420 ;; Registers used:
  2421 ;;		wreg, status,2, status,0, prodl, prodh
  2422 ;; Tracked objects:
  2423 ;;		On entry : 0/0
  2424 ;;		On exit  : 0/0
  2425 ;;		Unchanged: 0/0
  2426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2427 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2428 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;Total ram usage:        6 bytes
  2432 ;; Hardware stack levels used:    1
  2433 ;; Hardware stack levels required when called:    6
  2434 ;; This function calls:
  2435 ;;		Nothing
  2436 ;; This function is called by:
  2437 ;;		_dequeue
  2438 ;;		_initializeTaskList
  2439 ;;		_addTask
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           	psect	text16
  2444  001248                     __ptext16:
  2445                           	opt callstack 0
  2446  001248                     ___wmul:
  2447                           	opt callstack 21
  2448  001248  0100               	movlb	0	; () banked
  2449  00124A  519E               	movf	___wmul@multiplier& (0+255),w,b
  2450  00124C  03A0               	mulwf	___wmul@multiplicand& (0+255),b
  2451  00124E  CFF3 F0A2          	movff	prodl,___wmul@product
  2452  001252  CFF4 F0A3          	movff	prodh,___wmul@product+1
  2453  001256  519E               	movf	___wmul@multiplier& (0+255),w,b
  2454  001258  03A1               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  2455  00125A  50F3               	movf	243,w,c
  2456  00125C  27A3               	addwf	(___wmul@product+1)& (0+255),f,b
  2457  00125E  519F               	movf	(___wmul@multiplier+1)& (0+255),w,b
  2458  001260  03A0               	mulwf	___wmul@multiplicand& (0+255),b
  2459  001262  50F3               	movf	243,w,c
  2460  001264  27A3               	addwf	(___wmul@product+1)& (0+255),f,b
  2461  001266                     
  2462                           ; BSR set to: 0
  2463  001266  C0A2  F09E         	movff	___wmul@product,?___wmul
  2464  00126A  C0A3  F09F         	movff	___wmul@product+1,?___wmul+1
  2465  00126E                     
  2466                           ; BSR set to: 0
  2467  00126E  0012               	return		;funcret
  2468  001270                     __end_of___wmul:
  2469                           	opt callstack 0
  2470                           
  2471 ;; *************** function _blink_LED4 *****************
  2472 ;; Defined at:
  2473 ;;		line 42 in file "main.c"
  2474 ;; Parameters:    Size  Location     Type
  2475 ;;		None
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;		None
  2478 ;; Return value:  Size  Location     Type
  2479 ;;                  1    wreg      void 
  2480 ;; Registers used:
  2481 ;;		wreg, status,2, status,0
  2482 ;; Tracked objects:
  2483 ;;		On entry : 0/0
  2484 ;;		On exit  : 0/0
  2485 ;;		Unchanged: 0/0
  2486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2491 ;;Total ram usage:        0 bytes
  2492 ;; Hardware stack levels used:    1
  2493 ;; Hardware stack levels required when called:    6
  2494 ;; This function calls:
  2495 ;;		Nothing
  2496 ;; This function is called by:
  2497 ;;		_main
  2498 ;;		_selectReadyTask
  2499 ;; This function uses a non-reentrant model
  2500 ;;
  2501                           
  2502                           	psect	text17
  2503  001298                     __ptext17:
  2504                           	opt callstack 0
  2505  001298                     _blink_LED4:
  2506                           	opt callstack 22
  2507  001298                     
  2508                           ;main.c: 43:     LED_state[4] = !LED_state[4];
  2509  001298  5032               	movf	(_LED_state+8)^0,w,c
  2510  00129A  1033               	iorwf	(_LED_state+9)^0,w,c
  2511  00129C  B4D8               	btfsc	status,2,c
  2512  00129E  EF53  F009         	goto	u1741
  2513  0012A2  EF56  F009         	goto	u1740
  2514  0012A6                     u1741:
  2515  0012A6  0E01               	movlw	1
  2516  0012A8  EF57  F009         	goto	u1750
  2517  0012AC                     u1740:
  2518  0012AC  0E00               	movlw	0
  2519  0012AE                     u1750:
  2520  0012AE  6E32               	movwf	(_LED_state+8)^0,c
  2521  0012B0  6A33               	clrf	(_LED_state+9)^0,c
  2522  0012B2                     
  2523                           ;main.c: 44:     LATDbits.LATD4 = LED_state[4];
  2524  0012B2  B032               	btfsc	(_LED_state+8)^0,0,c
  2525  0012B4  D002               	bra	u1765
  2526  0012B6  988C               	bcf	140,4,c	;volatile
  2527  0012B8  D001               	bra	u1766
  2528  0012BA                     u1765:
  2529  0012BA  888C               	bsf	140,4,c	;volatile
  2530  0012BC                     u1766:
  2531  0012BC  0012               	return		;funcret
  2532  0012BE                     __end_of_blink_LED4:
  2533                           	opt callstack 0
  2534                           
  2535 ;; *************** function _blink_LED3 *****************
  2536 ;; Defined at:
  2537 ;;		line 38 in file "main.c"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;		None
  2540 ;; Auto vars:     Size  Location     Type
  2541 ;;		None
  2542 ;; Return value:  Size  Location     Type
  2543 ;;                  1    wreg      void 
  2544 ;; Registers used:
  2545 ;;		wreg, status,2, status,0
  2546 ;; Tracked objects:
  2547 ;;		On entry : 0/0
  2548 ;;		On exit  : 0/0
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2555 ;;Total ram usage:        0 bytes
  2556 ;; Hardware stack levels used:    1
  2557 ;; Hardware stack levels required when called:    6
  2558 ;; This function calls:
  2559 ;;		Nothing
  2560 ;; This function is called by:
  2561 ;;		_main
  2562 ;;		_selectReadyTask
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           	psect	text18
  2567  0012BE                     __ptext18:
  2568                           	opt callstack 0
  2569  0012BE                     _blink_LED3:
  2570                           	opt callstack 22
  2571  0012BE                     
  2572                           ;main.c: 39:     LED_state[3] = !LED_state[3];
  2573  0012BE  5030               	movf	(_LED_state+6)^0,w,c
  2574  0012C0  1031               	iorwf	(_LED_state+7)^0,w,c
  2575  0012C2  B4D8               	btfsc	status,2,c
  2576  0012C4  EF66  F009         	goto	u1711
  2577  0012C8  EF69  F009         	goto	u1710
  2578  0012CC                     u1711:
  2579  0012CC  0E01               	movlw	1
  2580  0012CE  EF6A  F009         	goto	u1720
  2581  0012D2                     u1710:
  2582  0012D2  0E00               	movlw	0
  2583  0012D4                     u1720:
  2584  0012D4  6E30               	movwf	(_LED_state+6)^0,c
  2585  0012D6  6A31               	clrf	(_LED_state+7)^0,c
  2586  0012D8                     
  2587                           ;main.c: 40:     LATDbits.LATD3 = LED_state[3];
  2588  0012D8  B030               	btfsc	(_LED_state+6)^0,0,c
  2589  0012DA  D002               	bra	u1735
  2590  0012DC  968C               	bcf	140,3,c	;volatile
  2591  0012DE  D001               	bra	u1736
  2592  0012E0                     u1735:
  2593  0012E0  868C               	bsf	140,3,c	;volatile
  2594  0012E2                     u1736:
  2595  0012E2  0012               	return		;funcret
  2596  0012E4                     __end_of_blink_LED3:
  2597                           	opt callstack 0
  2598                           
  2599 ;; *************** function _blink_LED2 *****************
  2600 ;; Defined at:
  2601 ;;		line 34 in file "main.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;		None
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;		None
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  1    wreg      void 
  2608 ;; Registers used:
  2609 ;;		wreg, status,2, status,0
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2619 ;;Total ram usage:        0 bytes
  2620 ;; Hardware stack levels used:    1
  2621 ;; Hardware stack levels required when called:    6
  2622 ;; This function calls:
  2623 ;;		Nothing
  2624 ;; This function is called by:
  2625 ;;		_main
  2626 ;;		_selectReadyTask
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630                           	psect	text19
  2631  0012E4                     __ptext19:
  2632                           	opt callstack 0
  2633  0012E4                     _blink_LED2:
  2634                           	opt callstack 22
  2635  0012E4                     
  2636                           ;main.c: 35:     LED_state[2] = !LED_state[2];
  2637  0012E4  502E               	movf	(_LED_state+4)^0,w,c
  2638  0012E6  102F               	iorwf	(_LED_state+5)^0,w,c
  2639  0012E8  B4D8               	btfsc	status,2,c
  2640  0012EA  EF79  F009         	goto	u1681
  2641  0012EE  EF7C  F009         	goto	u1680
  2642  0012F2                     u1681:
  2643  0012F2  0E01               	movlw	1
  2644  0012F4  EF7D  F009         	goto	u1690
  2645  0012F8                     u1680:
  2646  0012F8  0E00               	movlw	0
  2647  0012FA                     u1690:
  2648  0012FA  6E2E               	movwf	(_LED_state+4)^0,c
  2649  0012FC  6A2F               	clrf	(_LED_state+5)^0,c
  2650  0012FE                     
  2651                           ;main.c: 36:     LATDbits.LATD2 = LED_state[2];
  2652  0012FE  B02E               	btfsc	(_LED_state+4)^0,0,c
  2653  001300  D002               	bra	u1705
  2654  001302  948C               	bcf	140,2,c	;volatile
  2655  001304  D001               	bra	u1706
  2656  001306                     u1705:
  2657  001306  848C               	bsf	140,2,c	;volatile
  2658  001308                     u1706:
  2659  001308  0012               	return		;funcret
  2660  00130A                     __end_of_blink_LED2:
  2661                           	opt callstack 0
  2662                           
  2663 ;; *************** function _blink_LED1 *****************
  2664 ;; Defined at:
  2665 ;;		line 29 in file "main.c"
  2666 ;; Parameters:    Size  Location     Type
  2667 ;;		None
  2668 ;; Auto vars:     Size  Location     Type
  2669 ;;		None
  2670 ;; Return value:  Size  Location     Type
  2671 ;;                  1    wreg      void 
  2672 ;; Registers used:
  2673 ;;		wreg, status,2, status,0
  2674 ;; Tracked objects:
  2675 ;;		On entry : 0/0
  2676 ;;		On exit  : 0/0
  2677 ;;		Unchanged: 0/0
  2678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2683 ;;Total ram usage:        0 bytes
  2684 ;; Hardware stack levels used:    1
  2685 ;; Hardware stack levels required when called:    6
  2686 ;; This function calls:
  2687 ;;		Nothing
  2688 ;; This function is called by:
  2689 ;;		_main
  2690 ;;		_selectReadyTask
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           	psect	text20
  2695  00130A                     __ptext20:
  2696                           	opt callstack 0
  2697  00130A                     _blink_LED1:
  2698                           	opt callstack 22
  2699  00130A                     
  2700                           ;main.c: 30:     LED_state[1] = !LED_state[1];
  2701  00130A  502C               	movf	(_LED_state+2)^0,w,c
  2702  00130C  102D               	iorwf	(_LED_state+3)^0,w,c
  2703  00130E  B4D8               	btfsc	status,2,c
  2704  001310  EF8C  F009         	goto	u1651
  2705  001314  EF8F  F009         	goto	u1650
  2706  001318                     u1651:
  2707  001318  0E01               	movlw	1
  2708  00131A  EF90  F009         	goto	u1660
  2709  00131E                     u1650:
  2710  00131E  0E00               	movlw	0
  2711  001320                     u1660:
  2712  001320  6E2C               	movwf	(_LED_state+2)^0,c
  2713  001322  6A2D               	clrf	(_LED_state+3)^0,c
  2714  001324                     
  2715                           ;main.c: 31:     LATDbits.LATD1 = LED_state[1];
  2716  001324  B02C               	btfsc	(_LED_state+2)^0,0,c
  2717  001326  D002               	bra	u1675
  2718  001328  928C               	bcf	140,1,c	;volatile
  2719  00132A  D001               	bra	u1676
  2720  00132C                     u1675:
  2721  00132C  828C               	bsf	140,1,c	;volatile
  2722  00132E                     u1676:
  2723  00132E  0012               	return		;funcret
  2724  001330                     __end_of_blink_LED1:
  2725                           	opt callstack 0
  2726                           
  2727 ;; *************** function _blink_LED0 *****************
  2728 ;; Defined at:
  2729 ;;		line 24 in file "main.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;		None
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;		None
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  1    wreg      void 
  2736 ;; Registers used:
  2737 ;;		wreg, status,2, status,0
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2747 ;;Total ram usage:        0 bytes
  2748 ;; Hardware stack levels used:    1
  2749 ;; Hardware stack levels required when called:    6
  2750 ;; This function calls:
  2751 ;;		Nothing
  2752 ;; This function is called by:
  2753 ;;		_main
  2754 ;;		_selectReadyTask
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           	psect	text21
  2759  001330                     __ptext21:
  2760                           	opt callstack 0
  2761  001330                     _blink_LED0:
  2762                           	opt callstack 22
  2763  001330                     
  2764                           ;main.c: 25:     LED_state[0] = !LED_state[0];
  2765  001330  502A               	movf	_LED_state^0,w,c
  2766  001332  102B               	iorwf	(_LED_state+1)^0,w,c
  2767  001334  B4D8               	btfsc	status,2,c
  2768  001336  EF9F  F009         	goto	u1621
  2769  00133A  EFA2  F009         	goto	u1620
  2770  00133E                     u1621:
  2771  00133E  0E01               	movlw	1
  2772  001340  EFA3  F009         	goto	u1630
  2773  001344                     u1620:
  2774  001344  0E00               	movlw	0
  2775  001346                     u1630:
  2776  001346  6E2A               	movwf	_LED_state^0,c
  2777  001348  6A2B               	clrf	(_LED_state+1)^0,c
  2778  00134A                     
  2779                           ;main.c: 26:     LATDbits.LATD0 = LED_state[0];
  2780  00134A  B02A               	btfsc	_LED_state^0,0,c
  2781  00134C  D002               	bra	u1645
  2782  00134E  908C               	bcf	140,0,c	;volatile
  2783  001350  D001               	bra	u1646
  2784  001352                     u1645:
  2785  001352  808C               	bsf	140,0,c	;volatile
  2786  001354                     u1646:
  2787  001354  0012               	return		;funcret
  2788  001356                     __end_of_blink_LED0:
  2789                           	opt callstack 0
  2790                           
  2791 ;; *************** function _blink_LED5 *****************
  2792 ;; Defined at:
  2793 ;;		line 46 in file "main.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;		None
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;		None
  2798 ;; Return value:  Size  Location     Type
  2799 ;;                  1    wreg      void 
  2800 ;; Registers used:
  2801 ;;		wreg, status,2, status,0
  2802 ;; Tracked objects:
  2803 ;;		On entry : 0/0
  2804 ;;		On exit  : 0/0
  2805 ;;		Unchanged: 0/0
  2806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2811 ;;Total ram usage:        0 bytes
  2812 ;; Hardware stack levels used:    1
  2813 ;; Hardware stack levels required when called:    6
  2814 ;; This function calls:
  2815 ;;		Nothing
  2816 ;; This function is called by:
  2817 ;;		_main
  2818 ;;		_selectReadyTask
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           	psect	text22
  2823  001356                     __ptext22:
  2824                           	opt callstack 0
  2825  001356                     _blink_LED5:
  2826                           	opt callstack 22
  2827  001356                     
  2828                           ;main.c: 47:     LED_state[5] = !LED_state[5];
  2829  001356  5034               	movf	(_LED_state+10)^0,w,c
  2830  001358  1035               	iorwf	(_LED_state+11)^0,w,c
  2831  00135A  B4D8               	btfsc	status,2,c
  2832  00135C  EFB2  F009         	goto	u1771
  2833  001360  EFB5  F009         	goto	u1770
  2834  001364                     u1771:
  2835  001364  0E01               	movlw	1
  2836  001366  EFB6  F009         	goto	u1780
  2837  00136A                     u1770:
  2838  00136A  0E00               	movlw	0
  2839  00136C                     u1780:
  2840  00136C  6E34               	movwf	(_LED_state+10)^0,c
  2841  00136E  6A35               	clrf	(_LED_state+11)^0,c
  2842  001370                     
  2843                           ;main.c: 48:     LATDbits.LATD5 = LED_state[5];
  2844  001370  B034               	btfsc	(_LED_state+10)^0,0,c
  2845  001372  D002               	bra	u1795
  2846  001374  9A8C               	bcf	140,5,c	;volatile
  2847  001376  D001               	bra	u1796
  2848  001378                     u1795:
  2849  001378  8A8C               	bsf	140,5,c	;volatile
  2850  00137A                     u1796:
  2851  00137A  0012               	return		;funcret
  2852  00137C                     __end_of_blink_LED5:
  2853                           	opt callstack 0
  2854                           
  2855 ;; *************** function _timer_interrupt *****************
  2856 ;; Defined at:
  2857 ;;		line 53 in file "clock.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;		None
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;		None
  2862 ;; Return value:  Size  Location     Type
  2863 ;;                  1    wreg      void 
  2864 ;; Registers used:
  2865 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2866 ;; Tracked objects:
  2867 ;;		On entry : 0/0
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2873 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2874 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2875 ;;Total ram usage:        6 bytes
  2876 ;; Hardware stack levels used:    1
  2877 ;; Hardware stack levels required when called:    5
  2878 ;; This function calls:
  2879 ;;		_handleListHead
  2880 ;; This function is called by:
  2881 ;;		Interrupt level 2
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885                           	psect	intcode
  2886  000008                     __pintcode:
  2887                           	opt callstack 0
  2888  000008                     _timer_interrupt:
  2889                           	opt callstack 19
  2890                           
  2891                           ;incstack = 0
  2892  000008  8246               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2893  00000A  ED5B  F007         	call	int_func,f	;refresh shadow registers
  2894                           
  2895                           	psect	intcode_body
  2896  000EB6                     __pintcode_body:
  2897                           	opt callstack 19
  2898  000EB6                     int_func:
  2899                           	opt callstack 19
  2900  000EB6  0006               	pop		; remove dummy address from shadow register refresh
  2901  000EB8  CFE1 F024          	movff	fsr1l,??_timer_interrupt
  2902  000EBC  CFE2 F025          	movff	fsr1h,??_timer_interrupt+1
  2903  000EC0  CFD9 F026          	movff	fsr2l,??_timer_interrupt+2
  2904  000EC4  CFDA F027          	movff	fsr2h,??_timer_interrupt+3
  2905  000EC8  CFF3 F028          	movff	prodl,??_timer_interrupt+4
  2906  000ECC  CFF4 F029          	movff	prodh,??_timer_interrupt+5
  2907  000ED0                     
  2908                           ;clock.c: 54:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF) {
  2909  000ED0  AAF2               	btfss	242,5,c	;volatile
  2910  000ED2  EF6D  F007         	goto	i2u148_41
  2911  000ED6  EF6F  F007         	goto	i2u148_40
  2912  000EDA                     i2u148_41:
  2913  000EDA  EF7F  F007         	goto	i2l1785
  2914  000EDE                     i2u148_40:
  2915  000EDE  A4F2               	btfss	242,2,c	;volatile
  2916  000EE0  EF74  F007         	goto	i2u149_41
  2917  000EE4  EF76  F007         	goto	i2u149_40
  2918  000EE8                     i2u149_41:
  2919  000EE8  EF7F  F007         	goto	i2l1785
  2920  000EEC                     i2u149_40:
  2921  000EEC                     
  2922                           ;clock.c: 55:         INTCONbits.TMR0IF = 0;
  2923  000EEC  94F2               	bcf	242,2,c	;volatile
  2924  000EEE                     
  2925                           ;clock.c: 56:         TMR0L = 131;
  2926  000EEE  0E83               	movlw	131
  2927  000EF0  6ED6               	movwf	214,c	;volatile
  2928  000EF2                     
  2929                           ;clock.c: 57:         time_ms++;
  2930  000EF2  0E01               	movlw	1
  2931  000EF4  263A               	addwf	_time_ms^0,f,c
  2932  000EF6  0E00               	movlw	0
  2933  000EF8  223B               	addwfc	(_time_ms+1)^0,f,c
  2934  000EFA  223C               	addwfc	(_time_ms+2)^0,f,c
  2935  000EFC  223D               	addwfc	(_time_ms+3)^0,f,c
  2936  000EFE                     i2l1785:
  2937                           
  2938                           ;clock.c: 59:     if(PIE1bits.TMR1IE && PIR1bits.TMR1IF) {
  2939  000EFE  A09D               	btfss	157,0,c	;volatile
  2940  000F00  EF84  F007         	goto	i2u150_41
  2941  000F04  EF86  F007         	goto	i2u150_40
  2942  000F08                     i2u150_41:
  2943  000F08  EFA4  F007         	goto	i2l286
  2944  000F0C                     i2u150_40:
  2945  000F0C  A09E               	btfss	158,0,c	;volatile
  2946  000F0E  EF8B  F007         	goto	i2u151_41
  2947  000F12  EF8D  F007         	goto	i2u151_40
  2948  000F16                     i2u151_41:
  2949  000F16  EFA4  F007         	goto	i2l286
  2950  000F1A                     i2u151_40:
  2951  000F1A                     
  2952                           ;clock.c: 60:         PIR1bits.TMR1IF = 0;
  2953  000F1A  909E               	bcf	158,0,c	;volatile
  2954  000F1C                     
  2955                           ;clock.c: 61:         TMR1H = 0xB1;
  2956  000F1C  0EB1               	movlw	177
  2957  000F1E  6ECF               	movwf	207,c	;volatile
  2958                           
  2959                           ;clock.c: 62:         TMR1L = 0xE0;
  2960  000F20  0EE0               	movlw	224
  2961  000F22  6ECE               	movwf	206,c	;volatile
  2962  000F24                     
  2963                           ;clock.c: 63:         handleListHead();
  2964  000F24  EC09  F000         	call	_handleListHead	;wreg free
  2965  000F28                     
  2966                           ;clock.c: 64:         count++;
  2967  000F28  4A3E               	infsnz	_count^0,f,c
  2968  000F2A  2A3F               	incf	(_count+1)^0,f,c
  2969  000F2C                     
  2970                           ;clock.c: 65:         if(count == 100) {
  2971  000F2C  0E64               	movlw	100
  2972  000F2E  183E               	xorwf	_count^0,w,c
  2973  000F30  103F               	iorwf	(_count+1)^0,w,c
  2974  000F32  A4D8               	btfss	status,2,c
  2975  000F34  EF9E  F007         	goto	i2u152_41
  2976  000F38  EFA0  F007         	goto	i2u152_40
  2977  000F3C                     i2u152_41:
  2978  000F3C  EFA4  F007         	goto	i2l286
  2979  000F40                     i2u152_40:
  2980  000F40                     
  2981                           ;clock.c: 66:             count = 0;
  2982  000F40  0E00               	movlw	0
  2983  000F42  6E3F               	movwf	(_count+1)^0,c
  2984  000F44  0E00               	movlw	0
  2985  000F46  6E3E               	movwf	_count^0,c
  2986  000F48                     i2l286:
  2987  000F48  C029  FFF4         	movff	??_timer_interrupt+5,prodh
  2988  000F4C  C028  FFF3         	movff	??_timer_interrupt+4,prodl
  2989  000F50  C027  FFDA         	movff	??_timer_interrupt+3,fsr2h
  2990  000F54  C026  FFD9         	movff	??_timer_interrupt+2,fsr2l
  2991  000F58  C025  FFE2         	movff	??_timer_interrupt+1,fsr1h
  2992  000F5C  C024  FFE1         	movff	??_timer_interrupt,fsr1l
  2993  000F60  9246               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2994  000F62  0011               	retfie		f
  2995  000F64                     __end_of_timer_interrupt:
  2996                           	opt callstack 0
  2997                           
  2998 ;; *************** function _handleListHead *****************
  2999 ;; Defined at:
  3000 ;;		line 84 in file "task.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;		None
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;  cur             2   31[COMRAM] int 
  3005 ;;  prev            2   29[COMRAM] int 
  3006 ;;  pos             2   33[COMRAM] int 
  3007 ;; Return value:  Size  Location     Type
  3008 ;;                  1    wreg      void 
  3009 ;; Registers used:
  3010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3011 ;; Tracked objects:
  3012 ;;		On entry : 0/0
  3013 ;;		On exit  : 0/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3017 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3018 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3019 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3020 ;;Total ram usage:       23 bytes
  3021 ;; Hardware stack levels used:    1
  3022 ;; Hardware stack levels required when called:    4
  3023 ;; This function calls:
  3024 ;;		_enqueue
  3025 ;;		_removeTask
  3026 ;;		i2___wmul
  3027 ;; This function is called by:
  3028 ;;		_timer_interrupt
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           	psect	text24
  3033  000012                     __ptext24:
  3034                           	opt callstack 0
  3035  000012                     _handleListHead:
  3036                           	opt callstack 19
  3037  000012                     
  3038                           ;task.c: 85:     if(head == 105)
  3039  000012  0E69               	movlw	105
  3040  000014  0100               	movlb	0	; () banked
  3041  000016  199C               	xorwf	_head& (0+255),w,b
  3042  000018  119D               	iorwf	(_head+1)& (0+255),w,b
  3043  00001A  A4D8               	btfss	status,2,c
  3044  00001C  EF12  F000         	goto	i2u139_41
  3045  000020  EF14  F000         	goto	i2u139_40
  3046  000024                     i2u139_41:
  3047  000024  EF67  F002         	goto	i2l190
  3048  000028                     i2u139_40:
  3049  000028  EF98  F002         	goto	i2l189
  3050  00002C                     i2l191:
  3051                           
  3052                           ;task.c: 88:         int pos = head;
  3053  00002C  C09C  F022         	movff	_head,handleListHead@pos
  3054  000030  C09D  F023         	movff	_head+1,handleListHead@pos+1
  3055  000034                     
  3056                           ;task.c: 89:         enqueue(task_list[pos].func_ptr);
  3057  000034  C022  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3058  000038  C023  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3059  00003C  0E00               	movlw	0
  3060  00003E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3061  000040  0E0F               	movlw	15
  3062  000042  6E03               	movwf	i2___wmul@multiplicand^0,c
  3063  000044  ECBE  F009         	call	i2___wmul	;wreg free
  3064  000048  0ED3               	movlw	low (_task_list+8)
  3065  00004A  2401               	addwf	?i2___wmul^0,w,c
  3066  00004C  6ED9               	movwf	fsr2l,c
  3067  00004E  0E00               	movlw	high (_task_list+8)
  3068  000050  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3069  000052  6EDA               	movwf	fsr2h,c
  3070  000054  CFDE F019          	movff	postinc2,_handleListHead$1149
  3071  000058  CFDE F01A          	movff	postinc2,_handleListHead$1149+1
  3072  00005C  CFDD F01B          	movff	postdec2,_handleListHead$1149+2
  3073                           
  3074                           ;task.c: 89:         enqueue(task_list[pos].func_ptr);
  3075  000060  C019  F00A         	movff	_handleListHead$1149,enqueue@ptr
  3076  000064  C01A  F00B         	movff	_handleListHead$1149+1,enqueue@ptr+1
  3077  000068  C01B  F00C         	movff	_handleListHead$1149+2,enqueue@ptr+2
  3078  00006C  EC3E  F008         	call	_enqueue	;wreg free
  3079                           
  3080                           ;task.c: 90:         head = task_list[pos].next;
  3081  000070  C022  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3082  000074  C023  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3083  000078  0E00               	movlw	0
  3084  00007A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3085  00007C  0E0F               	movlw	15
  3086  00007E  6E03               	movwf	i2___wmul@multiplicand^0,c
  3087  000080  ECBE  F009         	call	i2___wmul	;wreg free
  3088  000084  0ED6               	movlw	low (_task_list+11)
  3089  000086  2401               	addwf	?i2___wmul^0,w,c
  3090  000088  6ED9               	movwf	fsr2l,c
  3091  00008A  0E00               	movlw	high (_task_list+11)
  3092  00008C  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3093  00008E  6EDA               	movwf	fsr2h,c
  3094  000090  CFDE F09C          	movff	postinc2,_head
  3095  000094  CFDD F09D          	movff	postdec2,_head+1
  3096                           
  3097                           ;task.c: 91:         if(task_list[pos].period_t == 0) {
  3098  000098  C022  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3099  00009C  C023  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3100  0000A0  0E00               	movlw	0
  3101  0000A2  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3102  0000A4  0E0F               	movlw	15
  3103  0000A6  6E03               	movwf	i2___wmul@multiplicand^0,c
  3104  0000A8  ECBE  F009         	call	i2___wmul	;wreg free
  3105  0000AC  0ECF               	movlw	low (_task_list+4)
  3106  0000AE  2401               	addwf	?i2___wmul^0,w,c
  3107  0000B0  6ED9               	movwf	fsr2l,c
  3108  0000B2  0E00               	movlw	high (_task_list+4)
  3109  0000B4  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3110  0000B6  6EDA               	movwf	fsr2h,c
  3111  0000B8  50DE               	movf	postinc2,w,c
  3112  0000BA  10DE               	iorwf	postinc2,w,c
  3113  0000BC  10DE               	iorwf	postinc2,w,c
  3114  0000BE  10DE               	iorwf	postinc2,w,c
  3115  0000C0  A4D8               	btfss	status,2,c
  3116  0000C2  EF65  F000         	goto	i2u140_41
  3117  0000C6  EF67  F000         	goto	i2u140_40
  3118  0000CA                     i2u140_41:
  3119  0000CA  EF6C  F000         	goto	i2l1725
  3120  0000CE                     i2u140_40:
  3121  0000CE                     
  3122                           ;task.c: 92:             removeTask(pos);
  3123  0000CE  5022               	movf	handleListHead@pos^0,w,c
  3124  0000D0  EC97  F004         	call	_removeTask
  3125                           
  3126                           ;task.c: 93:         }
  3127  0000D4  EF67  F002         	goto	i2l190
  3128  0000D8                     i2l1725:
  3129                           
  3130                           ;task.c: 95:             task_list[pos].delay_t = task_list[pos].period_t;
  3131  0000D8  C022  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3132  0000DC  C023  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3133  0000E0  0E00               	movlw	0
  3134  0000E2  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3135  0000E4  0E0F               	movlw	15
  3136  0000E6  6E03               	movwf	i2___wmul@multiplicand^0,c
  3137  0000E8  ECBE  F009         	call	i2___wmul	;wreg free
  3138  0000EC  0ECF               	movlw	low (_task_list+4)
  3139  0000EE  2401               	addwf	?i2___wmul^0,w,c
  3140  0000F0  6ED9               	movwf	fsr2l,c
  3141  0000F2  0E00               	movlw	high (_task_list+4)
  3142  0000F4  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3143  0000F6  6EDA               	movwf	fsr2h,c
  3144  0000F8  C022  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3145  0000FC  C023  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3146  000100  0E00               	movlw	0
  3147  000102  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3148  000104  0E0F               	movlw	15
  3149  000106  6E03               	movwf	i2___wmul@multiplicand^0,c
  3150  000108  ECBE  F009         	call	i2___wmul	;wreg free
  3151  00010C  0ECB               	movlw	low _task_list
  3152  00010E  2401               	addwf	?i2___wmul^0,w,c
  3153  000110  6EE1               	movwf	fsr1l,c
  3154  000112  0E00               	movlw	high _task_list
  3155  000114  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3156  000116  6EE2               	movwf	fsr1h,c
  3157  000118  CFDE FFE6          	movff	postinc2,postinc1
  3158  00011C  CFDE FFE6          	movff	postinc2,postinc1
  3159  000120  CFDE FFE6          	movff	postinc2,postinc1
  3160  000124  CFDE FFE6          	movff	postinc2,postinc1
  3161  000128                     
  3162                           ;task.c: 96:             if(head == 105 || (head != 105 && task_list[head].delay_t > tas
      +                          k_list[pos].delay_t)) {
  3163  000128  0E69               	movlw	105
  3164  00012A  0100               	movlb	0	; () banked
  3165  00012C  199C               	xorwf	_head& (0+255),w,b
  3166  00012E  119D               	iorwf	(_head+1)& (0+255),w,b
  3167  000130  B4D8               	btfsc	status,2,c
  3168  000132  EF9D  F000         	goto	i2u141_41
  3169  000136  EF9F  F000         	goto	i2u141_40
  3170  00013A                     i2u141_41:
  3171  00013A  EFD8  F000         	goto	i2l1733
  3172  00013E                     i2u141_40:
  3173  00013E                     
  3174                           ; BSR set to: 0
  3175  00013E  0E69               	movlw	105
  3176  000140  199C               	xorwf	_head& (0+255),w,b
  3177  000142  119D               	iorwf	(_head+1)& (0+255),w,b
  3178  000144  B4D8               	btfsc	status,2,c
  3179  000146  EFA7  F000         	goto	i2u142_41
  3180  00014A  EFA9  F000         	goto	i2u142_40
  3181  00014E                     i2u142_41:
  3182  00014E  EFF2  F000         	goto	i2l1737
  3183  000152                     i2u142_40:
  3184  000152                     
  3185                           ; BSR set to: 0
  3186  000152  C09C  F001         	movff	_head,i2___wmul@multiplier
  3187  000156  C09D  F002         	movff	_head+1,i2___wmul@multiplier+1
  3188  00015A  0E00               	movlw	0
  3189  00015C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3190  00015E  0E0F               	movlw	15
  3191  000160  6E03               	movwf	i2___wmul@multiplicand^0,c
  3192  000162  ECBE  F009         	call	i2___wmul	;wreg free
  3193  000166  0ECB               	movlw	low _task_list
  3194  000168  2401               	addwf	?i2___wmul^0,w,c
  3195  00016A  6ED9               	movwf	fsr2l,c
  3196  00016C  0E00               	movlw	high _task_list
  3197  00016E  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3198  000170  6EDA               	movwf	fsr2h,c
  3199  000172  C022  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3200  000176  C023  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3201  00017A  0E00               	movlw	0
  3202  00017C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3203  00017E  0E0F               	movlw	15
  3204  000180  6E03               	movwf	i2___wmul@multiplicand^0,c
  3205  000182  ECBE  F009         	call	i2___wmul	;wreg free
  3206  000186  0ECB               	movlw	low _task_list
  3207  000188  2401               	addwf	?i2___wmul^0,w,c
  3208  00018A  6EE1               	movwf	fsr1l,c
  3209  00018C  0E00               	movlw	high _task_list
  3210  00018E  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3211  000190  6EE2               	movwf	fsr1h,c
  3212  000192  50DE               	movf	postinc2,w,c
  3213  000194  5CE6               	subwf	postinc1,w,c
  3214  000196  50DE               	movf	postinc2,w,c
  3215  000198  58E6               	subwfb	postinc1,w,c
  3216  00019A  50DE               	movf	postinc2,w,c
  3217  00019C  58E6               	subwfb	postinc1,w,c
  3218  00019E  50DE               	movf	postinc2,w,c
  3219  0001A0  58E6               	subwfb	postinc1,w,c
  3220  0001A2  B0D8               	btfsc	status,0,c
  3221  0001A4  EFD6  F000         	goto	i2u143_41
  3222  0001A8  EFD8  F000         	goto	i2u143_40
  3223  0001AC                     i2u143_41:
  3224  0001AC  EFF2  F000         	goto	i2l1737
  3225  0001B0                     i2u143_40:
  3226  0001B0                     i2l1733:
  3227                           
  3228                           ;task.c: 97:                 task_list[pos].next = head;
  3229  0001B0  C022  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3230  0001B4  C023  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3231  0001B8  0E00               	movlw	0
  3232  0001BA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3233  0001BC  0E0F               	movlw	15
  3234  0001BE  6E03               	movwf	i2___wmul@multiplicand^0,c
  3235  0001C0  ECBE  F009         	call	i2___wmul	;wreg free
  3236  0001C4  0ED6               	movlw	low (_task_list+11)
  3237  0001C6  2401               	addwf	?i2___wmul^0,w,c
  3238  0001C8  6ED9               	movwf	fsr2l,c
  3239  0001CA  0E00               	movlw	high (_task_list+11)
  3240  0001CC  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3241  0001CE  6EDA               	movwf	fsr2h,c
  3242  0001D0  C09C  FFDE         	movff	_head,postinc2
  3243  0001D4  C09D  FFDD         	movff	_head+1,postdec2
  3244  0001D8                     
  3245                           ;task.c: 98:                 head = pos;
  3246  0001D8  C022  F09C         	movff	handleListHead@pos,_head
  3247  0001DC  C023  F09D         	movff	handleListHead@pos+1,_head+1
  3248                           
  3249                           ;task.c: 99:             } else {
  3250  0001E0  EF09  F002         	goto	i2l197
  3251  0001E4                     i2l1737:
  3252                           
  3253                           ;task.c: 100:                 task_list[pos].delay_t = task_list[pos].delay_t - task_lis
      +                          t[head].delay_t;
  3254  0001E4  C09C  F001         	movff	_head,i2___wmul@multiplier
  3255  0001E8  C09D  F002         	movff	_head+1,i2___wmul@multiplier+1
  3256  0001EC  0E00               	movlw	0
  3257  0001EE  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3258  0001F0  0E0F               	movlw	15
  3259  0001F2  6E03               	movwf	i2___wmul@multiplicand^0,c
  3260  0001F4  ECBE  F009         	call	i2___wmul	;wreg free
  3261  0001F8  0ECB               	movlw	low _task_list
  3262  0001FA  2401               	addwf	?i2___wmul^0,w,c
  3263  0001FC  6ED9               	movwf	fsr2l,c
  3264  0001FE  0E00               	movlw	high _task_list
  3265  000200  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3266  000202  6EDA               	movwf	fsr2h,c
  3267  000204  CFDE F00D          	movff	postinc2,??_handleListHead
  3268  000208  CFDE F00E          	movff	postinc2,??_handleListHead+1
  3269  00020C  CFDE F00F          	movff	postinc2,??_handleListHead+2
  3270  000210  CFDE F010          	movff	postinc2,??_handleListHead+3
  3271  000214  C022  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3272  000218  C023  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3273  00021C  0E00               	movlw	0
  3274  00021E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3275  000220  0E0F               	movlw	15
  3276  000222  6E03               	movwf	i2___wmul@multiplicand^0,c
  3277  000224  ECBE  F009         	call	i2___wmul	;wreg free
  3278  000228  0ECB               	movlw	low _task_list
  3279  00022A  2401               	addwf	?i2___wmul^0,w,c
  3280  00022C  6ED9               	movwf	fsr2l,c
  3281  00022E  0E00               	movlw	high _task_list
  3282  000230  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3283  000232  6EDA               	movwf	fsr2h,c
  3284  000234  CFDE F011          	movff	postinc2,??_handleListHead+4
  3285  000238  CFDE F012          	movff	postinc2,??_handleListHead+5
  3286  00023C  CFDE F013          	movff	postinc2,??_handleListHead+6
  3287  000240  CFDE F014          	movff	postinc2,??_handleListHead+7
  3288  000244  500D               	movf	??_handleListHead^0,w,c
  3289  000246  5C11               	subwf	(??_handleListHead+4)^0,w,c
  3290  000248  6E15               	movwf	(??_handleListHead+8)^0,c
  3291  00024A  500E               	movf	(??_handleListHead+1)^0,w,c
  3292  00024C  5812               	subwfb	(??_handleListHead+5)^0,w,c
  3293  00024E  6E16               	movwf	(??_handleListHead+9)^0,c
  3294  000250  500F               	movf	(??_handleListHead+2)^0,w,c
  3295  000252  5813               	subwfb	(??_handleListHead+6)^0,w,c
  3296  000254  6E17               	movwf	(??_handleListHead+10)^0,c
  3297  000256  5010               	movf	(??_handleListHead+3)^0,w,c
  3298  000258  5814               	subwfb	(??_handleListHead+7)^0,w,c
  3299  00025A  6E18               	movwf	(??_handleListHead+11)^0,c
  3300  00025C  C022  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3301  000260  C023  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3302  000264  0E00               	movlw	0
  3303  000266  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3304  000268  0E0F               	movlw	15
  3305  00026A  6E03               	movwf	i2___wmul@multiplicand^0,c
  3306  00026C  ECBE  F009         	call	i2___wmul	;wreg free
  3307  000270  0ECB               	movlw	low _task_list
  3308  000272  2401               	addwf	?i2___wmul^0,w,c
  3309  000274  6ED9               	movwf	fsr2l,c
  3310  000276  0E00               	movlw	high _task_list
  3311  000278  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3312  00027A  6EDA               	movwf	fsr2h,c
  3313  00027C  C015  FFDE         	movff	??_handleListHead+8,postinc2
  3314  000280  C016  FFDE         	movff	??_handleListHead+9,postinc2
  3315  000284  C017  FFDE         	movff	??_handleListHead+10,postinc2
  3316  000288  C018  FFDE         	movff	??_handleListHead+11,postinc2
  3317                           
  3318                           ;task.c: 101:                 int cur = task_list[head].next;
  3319  00028C  C09C  F001         	movff	_head,i2___wmul@multiplier
  3320  000290  C09D  F002         	movff	_head+1,i2___wmul@multiplier+1
  3321  000294  0E00               	movlw	0
  3322  000296  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3323  000298  0E0F               	movlw	15
  3324  00029A  6E03               	movwf	i2___wmul@multiplicand^0,c
  3325  00029C  ECBE  F009         	call	i2___wmul	;wreg free
  3326  0002A0  0ED6               	movlw	low (_task_list+11)
  3327  0002A2  2401               	addwf	?i2___wmul^0,w,c
  3328  0002A4  6ED9               	movwf	fsr2l,c
  3329  0002A6  0E00               	movlw	high (_task_list+11)
  3330  0002A8  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3331  0002AA  6EDA               	movwf	fsr2h,c
  3332  0002AC  CFDE F020          	movff	postinc2,handleListHead@cur
  3333  0002B0  CFDD F021          	movff	postdec2,handleListHead@cur+1
  3334  0002B4                     
  3335                           ;task.c: 102:                 int prev = head;
  3336  0002B4  C09C  F01E         	movff	_head,handleListHead@prev
  3337  0002B8  C09D  F01F         	movff	_head+1,handleListHead@prev+1
  3338                           
  3339                           ;task.c: 103:                 while(cur != 105 && task_list[cur].delay_t <= task_list[po
      +                          s].delay_t) {
  3340  0002BC  EFA8  F001         	goto	i2l1745
  3341  0002C0                     i2l1741:
  3342                           
  3343                           ;task.c: 104:                     task_list[pos].delay_t -= task_list[cur].delay_t;
  3344  0002C0  C020  F001         	movff	handleListHead@cur,i2___wmul@multiplier
  3345  0002C4  C021  F002         	movff	handleListHead@cur+1,i2___wmul@multiplier+1
  3346  0002C8  0E00               	movlw	0
  3347  0002CA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3348  0002CC  0E0F               	movlw	15
  3349  0002CE  6E03               	movwf	i2___wmul@multiplicand^0,c
  3350  0002D0  ECBE  F009         	call	i2___wmul	;wreg free
  3351  0002D4  0ECB               	movlw	low _task_list
  3352  0002D6  2401               	addwf	?i2___wmul^0,w,c
  3353  0002D8  6ED9               	movwf	fsr2l,c
  3354  0002DA  0E00               	movlw	high _task_list
  3355  0002DC  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3356  0002DE  6EDA               	movwf	fsr2h,c
  3357  0002E0  CFDE F00D          	movff	postinc2,??_handleListHead
  3358  0002E4  CFDE F00E          	movff	postinc2,??_handleListHead+1
  3359  0002E8  CFDE F00F          	movff	postinc2,??_handleListHead+2
  3360  0002EC  CFDE F010          	movff	postinc2,??_handleListHead+3
  3361  0002F0  C022  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3362  0002F4  C023  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3363  0002F8  0E00               	movlw	0
  3364  0002FA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3365  0002FC  0E0F               	movlw	15
  3366  0002FE  6E03               	movwf	i2___wmul@multiplicand^0,c
  3367  000300  ECBE  F009         	call	i2___wmul	;wreg free
  3368  000304  0ECB               	movlw	low _task_list
  3369  000306  2401               	addwf	?i2___wmul^0,w,c
  3370  000308  6ED9               	movwf	fsr2l,c
  3371  00030A  0E00               	movlw	high _task_list
  3372  00030C  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3373  00030E  6EDA               	movwf	fsr2h,c
  3374  000310  500D               	movf	??_handleListHead^0,w,c
  3375  000312  5EDE               	subwf	postinc2,f,c
  3376  000314  500E               	movf	(??_handleListHead+1)^0,w,c
  3377  000316  5ADE               	subwfb	postinc2,f,c
  3378  000318  500F               	movf	(??_handleListHead+2)^0,w,c
  3379  00031A  5ADE               	subwfb	postinc2,f,c
  3380  00031C  5010               	movf	(??_handleListHead+3)^0,w,c
  3381  00031E  5ADE               	subwfb	postinc2,f,c
  3382  000320                     
  3383                           ;task.c: 105:                     prev = cur;
  3384  000320  C020  F01E         	movff	handleListHead@cur,handleListHead@prev
  3385  000324  C021  F01F         	movff	handleListHead@cur+1,handleListHead@prev+1
  3386                           
  3387                           ;task.c: 106:                     cur = task_list[cur].next;
  3388  000328  C020  F001         	movff	handleListHead@cur,i2___wmul@multiplier
  3389  00032C  C021  F002         	movff	handleListHead@cur+1,i2___wmul@multiplier+1
  3390  000330  0E00               	movlw	0
  3391  000332  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3392  000334  0E0F               	movlw	15
  3393  000336  6E03               	movwf	i2___wmul@multiplicand^0,c
  3394  000338  ECBE  F009         	call	i2___wmul	;wreg free
  3395  00033C  0ED6               	movlw	low (_task_list+11)
  3396  00033E  2401               	addwf	?i2___wmul^0,w,c
  3397  000340  6ED9               	movwf	fsr2l,c
  3398  000342  0E00               	movlw	high (_task_list+11)
  3399  000344  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3400  000346  6EDA               	movwf	fsr2h,c
  3401  000348  CFDE F020          	movff	postinc2,handleListHead@cur
  3402  00034C  CFDD F021          	movff	postdec2,handleListHead@cur+1
  3403  000350                     i2l1745:
  3404                           
  3405                           ;task.c: 103:                 while(cur != 105 && task_list[cur].delay_t <= task_list[po
      +                          s].delay_t) {
  3406  000350  0E69               	movlw	105
  3407  000352  1820               	xorwf	handleListHead@cur^0,w,c
  3408  000354  1021               	iorwf	(handleListHead@cur+1)^0,w,c
  3409  000356  B4D8               	btfsc	status,2,c
  3410  000358  EFB0  F001         	goto	i2u144_41
  3411  00035C  EFB2  F001         	goto	i2u144_40
  3412  000360                     i2u144_41:
  3413  000360  EFE1  F001         	goto	i2l1749
  3414  000364                     i2u144_40:
  3415  000364  C020  F001         	movff	handleListHead@cur,i2___wmul@multiplier
  3416  000368  C021  F002         	movff	handleListHead@cur+1,i2___wmul@multiplier+1
  3417  00036C  0E00               	movlw	0
  3418  00036E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3419  000370  0E0F               	movlw	15
  3420  000372  6E03               	movwf	i2___wmul@multiplicand^0,c
  3421  000374  ECBE  F009         	call	i2___wmul	;wreg free
  3422  000378  0ECB               	movlw	low _task_list
  3423  00037A  2401               	addwf	?i2___wmul^0,w,c
  3424  00037C  6ED9               	movwf	fsr2l,c
  3425  00037E  0E00               	movlw	high _task_list
  3426  000380  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3427  000382  6EDA               	movwf	fsr2h,c
  3428  000384  C022  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3429  000388  C023  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3430  00038C  0E00               	movlw	0
  3431  00038E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3432  000390  0E0F               	movlw	15
  3433  000392  6E03               	movwf	i2___wmul@multiplicand^0,c
  3434  000394  ECBE  F009         	call	i2___wmul	;wreg free
  3435  000398  0ECB               	movlw	low _task_list
  3436  00039A  2401               	addwf	?i2___wmul^0,w,c
  3437  00039C  6EE1               	movwf	fsr1l,c
  3438  00039E  0E00               	movlw	high _task_list
  3439  0003A0  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3440  0003A2  6EE2               	movwf	fsr1h,c
  3441  0003A4  50DE               	movf	postinc2,w,c
  3442  0003A6  5CE6               	subwf	postinc1,w,c
  3443  0003A8  50DE               	movf	postinc2,w,c
  3444  0003AA  58E6               	subwfb	postinc1,w,c
  3445  0003AC  50DE               	movf	postinc2,w,c
  3446  0003AE  58E6               	subwfb	postinc1,w,c
  3447  0003B0  50DE               	movf	postinc2,w,c
  3448  0003B2  58E6               	subwfb	postinc1,w,c
  3449  0003B4  B0D8               	btfsc	status,0,c
  3450  0003B6  EFDF  F001         	goto	i2u145_41
  3451  0003BA  EFE1  F001         	goto	i2u145_40
  3452  0003BE                     i2u145_41:
  3453  0003BE  EF60  F001         	goto	i2l1741
  3454  0003C2                     i2u145_40:
  3455  0003C2                     i2l1749:
  3456                           
  3457                           ;task.c: 108:                 task_list[prev].next = pos;
  3458  0003C2  C01E  F001         	movff	handleListHead@prev,i2___wmul@multiplier
  3459  0003C6  C01F  F002         	movff	handleListHead@prev+1,i2___wmul@multiplier+1
  3460  0003CA  0E00               	movlw	0
  3461  0003CC  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3462  0003CE  0E0F               	movlw	15
  3463  0003D0  6E03               	movwf	i2___wmul@multiplicand^0,c
  3464  0003D2  ECBE  F009         	call	i2___wmul	;wreg free
  3465  0003D6  0ED6               	movlw	low (_task_list+11)
  3466  0003D8  2401               	addwf	?i2___wmul^0,w,c
  3467  0003DA  6ED9               	movwf	fsr2l,c
  3468  0003DC  0E00               	movlw	high (_task_list+11)
  3469  0003DE  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3470  0003E0  6EDA               	movwf	fsr2h,c
  3471  0003E2  C022  FFDE         	movff	handleListHead@pos,postinc2
  3472  0003E6  C023  FFDD         	movff	handleListHead@pos+1,postdec2
  3473                           
  3474                           ;task.c: 109:                 task_list[pos].next = cur;
  3475  0003EA  C022  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3476  0003EE  C023  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3477  0003F2  0E00               	movlw	0
  3478  0003F4  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3479  0003F6  0E0F               	movlw	15
  3480  0003F8  6E03               	movwf	i2___wmul@multiplicand^0,c
  3481  0003FA  ECBE  F009         	call	i2___wmul	;wreg free
  3482  0003FE  0ED6               	movlw	low (_task_list+11)
  3483  000400  2401               	addwf	?i2___wmul^0,w,c
  3484  000402  6ED9               	movwf	fsr2l,c
  3485  000404  0E00               	movlw	high (_task_list+11)
  3486  000406  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3487  000408  6EDA               	movwf	fsr2h,c
  3488  00040A  C020  FFDE         	movff	handleListHead@cur,postinc2
  3489  00040E  C021  FFDD         	movff	handleListHead@cur+1,postdec2
  3490  000412                     i2l197:
  3491                           
  3492                           ;task.c: 111:             if(task_list[pos].next != 105)
  3493  000412  C022  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3494  000416  C023  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3495  00041A  0E00               	movlw	0
  3496  00041C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3497  00041E  0E0F               	movlw	15
  3498  000420  6E03               	movwf	i2___wmul@multiplicand^0,c
  3499  000422  ECBE  F009         	call	i2___wmul	;wreg free
  3500  000426  0ED6               	movlw	low (_task_list+11)
  3501  000428  2401               	addwf	?i2___wmul^0,w,c
  3502  00042A  6ED9               	movwf	fsr2l,c
  3503  00042C  0E00               	movlw	high (_task_list+11)
  3504  00042E  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3505  000430  6EDA               	movwf	fsr2h,c
  3506  000432  0E69               	movlw	105
  3507  000434  18DE               	xorwf	postinc2,w,c
  3508  000436  10DE               	iorwf	postinc2,w,c
  3509  000438  B4D8               	btfsc	status,2,c
  3510  00043A  EF21  F002         	goto	i2u146_41
  3511  00043E  EF23  F002         	goto	i2u146_40
  3512  000442                     i2u146_41:
  3513  000442  EF67  F002         	goto	i2l190
  3514  000446                     i2u146_40:
  3515  000446                     
  3516                           ;task.c: 112:                 task_list[task_list[pos].next].delay_t -= task_list[pos].d
      +                          elay_t;
  3517  000446  C022  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3518  00044A  C023  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3519  00044E  0E00               	movlw	0
  3520  000450  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3521  000452  0E0F               	movlw	15
  3522  000454  6E03               	movwf	i2___wmul@multiplicand^0,c
  3523  000456  ECBE  F009         	call	i2___wmul	;wreg free
  3524  00045A  0ED6               	movlw	low (_task_list+11)
  3525  00045C  2401               	addwf	?i2___wmul^0,w,c
  3526  00045E  6ED9               	movwf	fsr2l,c
  3527  000460  0E00               	movlw	high (_task_list+11)
  3528  000462  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3529  000464  6EDA               	movwf	fsr2h,c
  3530  000466  CFDE F01C          	movff	postinc2,_handleListHead$1150
  3531  00046A  CFDD F01D          	movff	postdec2,_handleListHead$1150+1
  3532                           
  3533                           ;task.c: 112:                 task_list[task_list[pos].next].delay_t -= task_list[pos].d
      +                          elay_t;
  3534  00046E  C022  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3535  000472  C023  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3536  000476  0E00               	movlw	0
  3537  000478  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3538  00047A  0E0F               	movlw	15
  3539  00047C  6E03               	movwf	i2___wmul@multiplicand^0,c
  3540  00047E  ECBE  F009         	call	i2___wmul	;wreg free
  3541  000482  0ECB               	movlw	low _task_list
  3542  000484  2401               	addwf	?i2___wmul^0,w,c
  3543  000486  6ED9               	movwf	fsr2l,c
  3544  000488  0E00               	movlw	high _task_list
  3545  00048A  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3546  00048C  6EDA               	movwf	fsr2h,c
  3547  00048E  CFDE F00D          	movff	postinc2,??_handleListHead
  3548  000492  CFDE F00E          	movff	postinc2,??_handleListHead+1
  3549  000496  CFDE F00F          	movff	postinc2,??_handleListHead+2
  3550  00049A  CFDE F010          	movff	postinc2,??_handleListHead+3
  3551  00049E  C01C  F001         	movff	_handleListHead$1150,i2___wmul@multiplier
  3552  0004A2  C01D  F002         	movff	_handleListHead$1150+1,i2___wmul@multiplier+1
  3553  0004A6  0E00               	movlw	0
  3554  0004A8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3555  0004AA  0E0F               	movlw	15
  3556  0004AC  6E03               	movwf	i2___wmul@multiplicand^0,c
  3557  0004AE  ECBE  F009         	call	i2___wmul	;wreg free
  3558  0004B2  0ECB               	movlw	low _task_list
  3559  0004B4  2401               	addwf	?i2___wmul^0,w,c
  3560  0004B6  6ED9               	movwf	fsr2l,c
  3561  0004B8  0E00               	movlw	high _task_list
  3562  0004BA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3563  0004BC  6EDA               	movwf	fsr2h,c
  3564  0004BE  500D               	movf	??_handleListHead^0,w,c
  3565  0004C0  5EDE               	subwf	postinc2,f,c
  3566  0004C2  500E               	movf	(??_handleListHead+1)^0,w,c
  3567  0004C4  5ADE               	subwfb	postinc2,f,c
  3568  0004C6  500F               	movf	(??_handleListHead+2)^0,w,c
  3569  0004C8  5ADE               	subwfb	postinc2,f,c
  3570  0004CA  5010               	movf	(??_handleListHead+3)^0,w,c
  3571  0004CC  5ADE               	subwfb	postinc2,f,c
  3572  0004CE                     i2l190:
  3573                           
  3574                           ;task.c: 87:     while(task_list[head].delay_t == 0) {
  3575  0004CE  C09C  F001         	movff	_head,i2___wmul@multiplier
  3576  0004D2  C09D  F002         	movff	_head+1,i2___wmul@multiplier+1
  3577  0004D6  0E00               	movlw	0
  3578  0004D8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3579  0004DA  0E0F               	movlw	15
  3580  0004DC  6E03               	movwf	i2___wmul@multiplicand^0,c
  3581  0004DE  ECBE  F009         	call	i2___wmul	;wreg free
  3582  0004E2  0ECB               	movlw	low _task_list
  3583  0004E4  2401               	addwf	?i2___wmul^0,w,c
  3584  0004E6  6ED9               	movwf	fsr2l,c
  3585  0004E8  0E00               	movlw	high _task_list
  3586  0004EA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3587  0004EC  6EDA               	movwf	fsr2h,c
  3588  0004EE  50DE               	movf	postinc2,w,c
  3589  0004F0  10DE               	iorwf	postinc2,w,c
  3590  0004F2  10DE               	iorwf	postinc2,w,c
  3591  0004F4  10DE               	iorwf	postinc2,w,c
  3592  0004F6  B4D8               	btfsc	status,2,c
  3593  0004F8  EF80  F002         	goto	i2u147_41
  3594  0004FC  EF82  F002         	goto	i2u147_40
  3595  000500                     i2u147_41:
  3596  000500  EF16  F000         	goto	i2l191
  3597  000504                     i2u147_40:
  3598  000504                     
  3599                           ;task.c: 115:     task_list[head].delay_t-= 10;
  3600  000504  C09C  F001         	movff	_head,i2___wmul@multiplier
  3601  000508  C09D  F002         	movff	_head+1,i2___wmul@multiplier+1
  3602  00050C  0E00               	movlw	0
  3603  00050E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3604  000510  0E0F               	movlw	15
  3605  000512  6E03               	movwf	i2___wmul@multiplicand^0,c
  3606  000514  ECBE  F009         	call	i2___wmul	;wreg free
  3607  000518  0ECB               	movlw	low _task_list
  3608  00051A  2401               	addwf	?i2___wmul^0,w,c
  3609  00051C  6ED9               	movwf	fsr2l,c
  3610  00051E  0E00               	movlw	high _task_list
  3611  000520  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3612  000522  6EDA               	movwf	fsr2h,c
  3613  000524  0E0A               	movlw	10
  3614  000526  5EDE               	subwf	postinc2,f,c
  3615  000528  0E00               	movlw	0
  3616  00052A  5ADE               	subwfb	postinc2,f,c
  3617  00052C  5ADE               	subwfb	postinc2,f,c
  3618  00052E  5ADE               	subwfb	postinc2,f,c
  3619  000530                     i2l189:
  3620  000530  0012               	return		;funcret
  3621  000532                     __end_of_handleListHead:
  3622                           	opt callstack 0
  3623                           
  3624 ;; *************** function _removeTask *****************
  3625 ;; Defined at:
  3626 ;;		line 60 in file "task.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;  idx             1    wreg     unsigned char 
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;  idx             1    5[COMRAM] unsigned char 
  3631 ;;  pos             1    4[COMRAM] unsigned char 
  3632 ;; Return value:  Size  Location     Type
  3633 ;;                  1    wreg      unsigned char 
  3634 ;; Registers used:
  3635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 0/0
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3642 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3643 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3644 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3645 ;;Total ram usage:        6 bytes
  3646 ;; Hardware stack levels used:    1
  3647 ;; Hardware stack levels required when called:    1
  3648 ;; This function calls:
  3649 ;;		_isEmptyList
  3650 ;; This function is called by:
  3651 ;;		_handleListHead
  3652 ;;		_remove_timer
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655                           
  3656                           	psect	text25
  3657  00092E                     __ptext25:
  3658                           	opt callstack 0
  3659  00092E                     _removeTask:
  3660                           	opt callstack 21
  3661                           
  3662                           ;incstack = 0
  3663                           ;removeTask@idx stored from wreg
  3664  00092E  6E06               	movwf	removeTask@idx^0,c
  3665  000930                     
  3666                           ;task.c: 61:     if(isEmptyList() || task_list[idx].func_ptr == ((void*)0))
  3667  000930  EC03  F00A         	call	_isEmptyList	;wreg free
  3668  000934  0900               	iorlw	0
  3669  000936  A4D8               	btfss	status,2,c
  3670  000938  EFA0  F004         	goto	i2u131_41
  3671  00093C  EFA2  F004         	goto	i2u131_40
  3672  000940                     i2u131_41:
  3673  000940  EFB4  F004         	goto	i2l1669
  3674  000944                     i2u131_40:
  3675  000944  5006               	movf	removeTask@idx^0,w,c
  3676  000946  0D0F               	mullw	15
  3677  000948  0ED3               	movlw	low (_task_list+8)
  3678  00094A  24F3               	addwf	243,w,c
  3679  00094C  6ED9               	movwf	fsr2l,c
  3680  00094E  0E00               	movlw	high (_task_list+8)
  3681  000950  20F4               	addwfc	prodh,w,c
  3682  000952  6EDA               	movwf	fsr2h,c
  3683  000954  50DE               	movf	postinc2,w,c
  3684  000956  10DE               	iorwf	postinc2,w,c
  3685  000958  10DE               	iorwf	postinc2,w,c
  3686  00095A  A4D8               	btfss	status,2,c
  3687  00095C  EFB2  F004         	goto	i2u132_41
  3688  000960  EFB4  F004         	goto	i2u132_40
  3689  000964                     i2u132_41:
  3690  000964  EFB7  F004         	goto	i2l1673
  3691  000968                     i2u132_40:
  3692  000968                     i2l1669:
  3693                           
  3694                           ;task.c: 62:         return 0;
  3695  000968  0E00               	movlw	0
  3696  00096A  EF6C  F005         	goto	i2l178
  3697  00096E                     i2l1673:
  3698                           
  3699                           ;task.c: 63:     task_list[idx].delay_t = 0;
  3700  00096E  5006               	movf	removeTask@idx^0,w,c
  3701  000970  0D0F               	mullw	15
  3702  000972  0ECB               	movlw	low _task_list
  3703  000974  24F3               	addwf	243,w,c
  3704  000976  6ED9               	movwf	fsr2l,c
  3705  000978  0E00               	movlw	high _task_list
  3706  00097A  20F4               	addwfc	prodh,w,c
  3707  00097C  6EDA               	movwf	fsr2h,c
  3708  00097E  6ADE               	clrf	postinc2,c
  3709  000980  6ADE               	clrf	postinc2,c
  3710  000982  6ADE               	clrf	postinc2,c
  3711  000984  6ADD               	clrf	postdec2,c
  3712                           
  3713                           ;task.c: 64:     task_list[idx].period_t = 0;
  3714  000986  5006               	movf	removeTask@idx^0,w,c
  3715  000988  0D0F               	mullw	15
  3716  00098A  0ECF               	movlw	low (_task_list+4)
  3717  00098C  24F3               	addwf	243,w,c
  3718  00098E  6ED9               	movwf	fsr2l,c
  3719  000990  0E00               	movlw	high (_task_list+4)
  3720  000992  20F4               	addwfc	prodh,w,c
  3721  000994  6EDA               	movwf	fsr2h,c
  3722  000996  6ADE               	clrf	postinc2,c
  3723  000998  6ADE               	clrf	postinc2,c
  3724  00099A  6ADE               	clrf	postinc2,c
  3725  00099C  6ADD               	clrf	postdec2,c
  3726                           
  3727                           ;task.c: 65:     task_list[idx].func_ptr = ((void*)0);
  3728  00099E  5006               	movf	removeTask@idx^0,w,c
  3729  0009A0  0D0F               	mullw	15
  3730  0009A2  0ED3               	movlw	low (_task_list+8)
  3731  0009A4  24F3               	addwf	243,w,c
  3732  0009A6  6ED9               	movwf	fsr2l,c
  3733  0009A8  0E00               	movlw	high (_task_list+8)
  3734  0009AA  20F4               	addwfc	prodh,w,c
  3735  0009AC  6EDA               	movwf	fsr2h,c
  3736  0009AE  0E00               	movlw	0
  3737  0009B0  6EDE               	movwf	postinc2,c
  3738  0009B2  0E00               	movlw	0
  3739  0009B4  6EDE               	movwf	postinc2,c
  3740  0009B6  0E00               	movlw	0
  3741  0009B8  6EDE               	movwf	postinc2,c
  3742                           
  3743                           ;task.c: 66:     task_list[idx].data_p = ((void*)0);
  3744  0009BA  5006               	movf	removeTask@idx^0,w,c
  3745  0009BC  0D0F               	mullw	15
  3746  0009BE  0ED8               	movlw	low (_task_list+13)
  3747  0009C0  24F3               	addwf	243,w,c
  3748  0009C2  6ED9               	movwf	fsr2l,c
  3749  0009C4  0E00               	movlw	high (_task_list+13)
  3750  0009C6  20F4               	addwfc	prodh,w,c
  3751  0009C8  6EDA               	movwf	fsr2h,c
  3752  0009CA  0E00               	movlw	0
  3753  0009CC  6EDE               	movwf	postinc2,c
  3754  0009CE  0E00               	movlw	0
  3755  0009D0  6EDD               	movwf	postdec2,c
  3756  0009D2                     
  3757                           ;task.c: 67:     num_task--;
  3758  0009D2  0640               	decf	_num_task^0,f,c
  3759  0009D4                     
  3760                           ;task.c: 68:     if(idx == head) {
  3761  0009D4  5006               	movf	removeTask@idx^0,w,c
  3762  0009D6  6E01               	movwf	??_removeTask^0,c
  3763  0009D8  6A02               	clrf	(??_removeTask+1)^0,c
  3764  0009DA  0100               	movlb	0	; () banked
  3765  0009DC  519C               	movf	_head& (0+255),w,b
  3766  0009DE  1801               	xorwf	??_removeTask^0,w,c
  3767  0009E0  E107               	bnz	i2u133_41
  3768  0009E2  519D               	movf	(_head+1)& (0+255),w,b
  3769  0009E4  1802               	xorwf	(??_removeTask+1)^0,w,c
  3770  0009E6  A4D8               	btfss	status,2,c
  3771  0009E8  EFF8  F004         	goto	i2u133_41
  3772  0009EC  EFFA  F004         	goto	i2u133_40
  3773  0009F0                     i2u133_41:
  3774  0009F0  EF14  F005         	goto	i2l179
  3775  0009F4                     i2u133_40:
  3776  0009F4                     
  3777                           ; BSR set to: 0
  3778                           ;task.c: 69:         head = task_list[idx].next;
  3779  0009F4  5006               	movf	removeTask@idx^0,w,c
  3780  0009F6  0D0F               	mullw	15
  3781  0009F8  0ED6               	movlw	low (_task_list+11)
  3782  0009FA  24F3               	addwf	243,w,c
  3783  0009FC  6ED9               	movwf	fsr2l,c
  3784  0009FE  0E00               	movlw	high (_task_list+11)
  3785  000A00  20F4               	addwfc	prodh,w,c
  3786  000A02  6EDA               	movwf	fsr2h,c
  3787  000A04  CFDE F09C          	movff	postinc2,_head
  3788  000A08  CFDD F09D          	movff	postdec2,_head+1
  3789                           
  3790                           ;task.c: 70:         task_list[idx].next = 105;
  3791  000A0C  5006               	movf	removeTask@idx^0,w,c
  3792  000A0E  0D0F               	mullw	15
  3793  000A10  0ED6               	movlw	low (_task_list+11)
  3794  000A12  24F3               	addwf	243,w,c
  3795  000A14  6ED9               	movwf	fsr2l,c
  3796  000A16  0E00               	movlw	high (_task_list+11)
  3797  000A18  20F4               	addwfc	prodh,w,c
  3798  000A1A  6EDA               	movwf	fsr2h,c
  3799  000A1C  0E69               	movlw	105
  3800  000A1E  6EDE               	movwf	postinc2,c
  3801  000A20  0E00               	movlw	0
  3802  000A22  6EDD               	movwf	postdec2,c
  3803                           
  3804                           ;task.c: 71:     }
  3805  000A24  EF6B  F005         	goto	i2l1689
  3806  000A28                     i2l179:
  3807                           
  3808                           ; BSR set to: 0
  3809                           ;task.c: 73:         char pos = head;
  3810  000A28  C09C  F005         	movff	_head,removeTask@pos
  3811                           
  3812                           ;task.c: 74:         while(task_list[pos].next != 105 && task_list[pos].next != idx) {
  3813  000A2C  EF22  F005         	goto	i2l181
  3814  000A30                     i2l1681:
  3815                           
  3816                           ;task.c: 75:             pos = task_list[pos].next;
  3817  000A30  5005               	movf	removeTask@pos^0,w,c
  3818  000A32  0D0F               	mullw	15
  3819  000A34  0ED6               	movlw	low (_task_list+11)
  3820  000A36  24F3               	addwf	243,w,c
  3821  000A38  6ED9               	movwf	fsr2l,c
  3822  000A3A  0E00               	movlw	high (_task_list+11)
  3823  000A3C  20F4               	addwfc	prodh,w,c
  3824  000A3E  6EDA               	movwf	fsr2h,c
  3825  000A40  50DF               	movf	indf2,w,c
  3826  000A42  6E05               	movwf	removeTask@pos^0,c
  3827  000A44                     i2l181:
  3828                           
  3829                           ;task.c: 74:         while(task_list[pos].next != 105 && task_list[pos].next != idx) {
  3830  000A44  5005               	movf	removeTask@pos^0,w,c
  3831  000A46  0D0F               	mullw	15
  3832  000A48  0ED6               	movlw	low (_task_list+11)
  3833  000A4A  24F3               	addwf	243,w,c
  3834  000A4C  6ED9               	movwf	fsr2l,c
  3835  000A4E  0E00               	movlw	high (_task_list+11)
  3836  000A50  20F4               	addwfc	prodh,w,c
  3837  000A52  6EDA               	movwf	fsr2h,c
  3838  000A54  0E69               	movlw	105
  3839  000A56  18DE               	xorwf	postinc2,w,c
  3840  000A58  10DE               	iorwf	postinc2,w,c
  3841  000A5A  B4D8               	btfsc	status,2,c
  3842  000A5C  EF32  F005         	goto	i2u134_41
  3843  000A60  EF34  F005         	goto	i2u134_40
  3844  000A64                     i2u134_41:
  3845  000A64  EF4B  F005         	goto	i2l1685
  3846  000A68                     i2u134_40:
  3847  000A68  5005               	movf	removeTask@pos^0,w,c
  3848  000A6A  0D0F               	mullw	15
  3849  000A6C  0ED6               	movlw	low (_task_list+11)
  3850  000A6E  24F3               	addwf	243,w,c
  3851  000A70  6ED9               	movwf	fsr2l,c
  3852  000A72  0E00               	movlw	high (_task_list+11)
  3853  000A74  20F4               	addwfc	prodh,w,c
  3854  000A76  6EDA               	movwf	fsr2h,c
  3855  000A78  5006               	movf	removeTask@idx^0,w,c
  3856  000A7A  6E03               	movwf	(??_removeTask+2)^0,c
  3857  000A7C  6A04               	clrf	(??_removeTask+3)^0,c
  3858  000A7E  50DE               	movf	postinc2,w,c
  3859  000A80  1803               	xorwf	(??_removeTask+2)^0,w,c
  3860  000A82  E107               	bnz	i2u135_41
  3861  000A84  50DE               	movf	postinc2,w,c
  3862  000A86  1804               	xorwf	(??_removeTask+3)^0,w,c
  3863  000A88  A4D8               	btfss	status,2,c
  3864  000A8A  EF49  F005         	goto	i2u135_41
  3865  000A8E  EF4B  F005         	goto	i2u135_40
  3866  000A92                     i2u135_41:
  3867  000A92  EF18  F005         	goto	i2l1681
  3868  000A96                     i2u135_40:
  3869  000A96                     i2l1685:
  3870                           
  3871                           ;task.c: 77:         task_list[pos].next = task_list[idx].next;
  3872  000A96  5006               	movf	removeTask@idx^0,w,c
  3873  000A98  0D0F               	mullw	15
  3874  000A9A  0ED6               	movlw	low (_task_list+11)
  3875  000A9C  24F3               	addwf	243,w,c
  3876  000A9E  6ED9               	movwf	fsr2l,c
  3877  000AA0  0E00               	movlw	high (_task_list+11)
  3878  000AA2  20F4               	addwfc	prodh,w,c
  3879  000AA4  6EDA               	movwf	fsr2h,c
  3880  000AA6  5005               	movf	removeTask@pos^0,w,c
  3881  000AA8  0D0F               	mullw	15
  3882  000AAA  0ED6               	movlw	low (_task_list+11)
  3883  000AAC  24F3               	addwf	243,w,c
  3884  000AAE  6EE1               	movwf	fsr1l,c
  3885  000AB0  0E00               	movlw	high (_task_list+11)
  3886  000AB2  20F4               	addwfc	prodh,w,c
  3887  000AB4  6EE2               	movwf	fsr1h,c
  3888  000AB6  CFDE FFE6          	movff	postinc2,postinc1
  3889  000ABA  CFDD FFE5          	movff	postdec2,postdec1
  3890  000ABE                     
  3891                           ;task.c: 78:         task_list[idx].next = 105;
  3892  000ABE  5006               	movf	removeTask@idx^0,w,c
  3893  000AC0  0D0F               	mullw	15
  3894  000AC2  0ED6               	movlw	low (_task_list+11)
  3895  000AC4  24F3               	addwf	243,w,c
  3896  000AC6  6ED9               	movwf	fsr2l,c
  3897  000AC8  0E00               	movlw	high (_task_list+11)
  3898  000ACA  20F4               	addwfc	prodh,w,c
  3899  000ACC  6EDA               	movwf	fsr2h,c
  3900  000ACE  0E69               	movlw	105
  3901  000AD0  6EDE               	movwf	postinc2,c
  3902  000AD2  0E00               	movlw	0
  3903  000AD4  6EDD               	movwf	postdec2,c
  3904  000AD6                     i2l1689:
  3905                           
  3906                           ;task.c: 81:     return 1;
  3907  000AD6  0E01               	movlw	1
  3908  000AD8                     i2l178:
  3909  000AD8  0012               	return		;funcret
  3910  000ADA                     __end_of_removeTask:
  3911                           	opt callstack 0
  3912                           
  3913 ;; *************** function _isEmptyList *****************
  3914 ;; Defined at:
  3915 ;;		line 3 in file "task.c"
  3916 ;; Parameters:    Size  Location     Type
  3917 ;;		None
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;		None
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  1    wreg      unsigned char 
  3922 ;; Registers used:
  3923 ;;		wreg, status,2
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3933 ;;Total ram usage:        0 bytes
  3934 ;; Hardware stack levels used:    1
  3935 ;; This function calls:
  3936 ;;		Nothing
  3937 ;; This function is called by:
  3938 ;;		_removeTask
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942                           	psect	text26
  3943  001406                     __ptext26:
  3944                           	opt callstack 0
  3945  001406                     _isEmptyList:
  3946                           	opt callstack 21
  3947  001406                     
  3948                           ;task.c: 4:     return num_task == 0 ? 1 : 0;
  3949  001406  5040               	movf	_num_task^0,w,c
  3950  001408  B4D8               	btfsc	status,2,c
  3951  00140A  EF09  F00A         	goto	i2u113_41
  3952  00140E  EF0C  F00A         	goto	i2u113_40
  3953  001412                     i2u113_41:
  3954  001412  0E01               	movlw	1
  3955  001414  EF0D  F00A         	goto	i2u114_40
  3956  001418                     i2u113_40:
  3957  001418  0E00               	movlw	0
  3958  00141A                     i2u114_40:
  3959  00141A  0012               	return		;funcret
  3960  00141C                     __end_of_isEmptyList:
  3961                           	opt callstack 0
  3962                           
  3963 ;; *************** function _enqueue *****************
  3964 ;; Defined at:
  3965 ;;		line 17 in file "ready_queue.c"
  3966 ;; Parameters:    Size  Location     Type
  3967 ;;  ptr             3    9[COMRAM] PTR FTN()void 
  3968 ;;		 -> NULL(0), blink_LED5(1), blink_LED4(1), blink_LED3(1), 
  3969 ;;		 -> blink_LED2(1), blink_LED1(1), blink_LED0(1), 
  3970 ;; Auto vars:     Size  Location     Type
  3971 ;;		None
  3972 ;; Return value:  Size  Location     Type
  3973 ;;                  1    wreg      unsigned char 
  3974 ;; Registers used:
  3975 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3976 ;; Tracked objects:
  3977 ;;		On entry : 0/0
  3978 ;;		On exit  : 0/0
  3979 ;;		Unchanged: 0/0
  3980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3981 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3984 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3985 ;;Total ram usage:        3 bytes
  3986 ;; Hardware stack levels used:    1
  3987 ;; Hardware stack levels required when called:    3
  3988 ;; This function calls:
  3989 ;;		_isFullQueue
  3990 ;;		i2___awmod
  3991 ;;		i2___wmul
  3992 ;; This function is called by:
  3993 ;;		_handleListHead
  3994 ;; This function uses a non-reentrant model
  3995 ;;
  3996                           
  3997                           	psect	text27
  3998  00107C                     __ptext27:
  3999                           	opt callstack 0
  4000  00107C                     _enqueue:
  4001                           	opt callstack 19
  4002  00107C                     
  4003                           ;ready_queue.c: 18:     if(isFullQueue())
  4004  00107C  ECD1  F009         	call	_isFullQueue	;wreg free
  4005  001080  0900               	iorlw	0
  4006  001082  B4D8               	btfsc	status,2,c
  4007  001084  EF46  F008         	goto	i2u119_41
  4008  001088  EF48  F008         	goto	i2u119_40
  4009  00108C                     i2u119_41:
  4010  00108C  EF4A  F008         	goto	i2l1589
  4011  001090                     i2u119_40:
  4012  001090  EF7E  F008         	goto	i2l118
  4013  001094                     i2l1589:
  4014                           
  4015                           ;ready_queue.c: 20:     if(front == -1)
  4016  001094  2844               	incf	_front^0,w,c
  4017  001096  E106               	bnz	i2u120_41
  4018  001098  2845               	incf	(_front+1)^0,w,c
  4019  00109A  A4D8               	btfss	status,2,c
  4020  00109C  EF52  F008         	goto	i2u120_41
  4021  0010A0  EF54  F008         	goto	i2u120_40
  4022  0010A4                     i2u120_41:
  4023  0010A4  EF58  F008         	goto	i2l1593
  4024  0010A8                     i2u120_40:
  4025  0010A8                     
  4026                           ;ready_queue.c: 21:         front = 0;
  4027  0010A8  0E00               	movlw	0
  4028  0010AA  6E45               	movwf	(_front+1)^0,c
  4029  0010AC  0E00               	movlw	0
  4030  0010AE  6E44               	movwf	_front^0,c
  4031  0010B0                     i2l1593:
  4032                           
  4033                           ;ready_queue.c: 22:     rear = (rear + 1) % 20;
  4034  0010B0  0E01               	movlw	1
  4035  0010B2  2442               	addwf	_rear^0,w,c
  4036  0010B4  6E01               	movwf	i2___awmod@dividend^0,c
  4037  0010B6  0E00               	movlw	0
  4038  0010B8  2043               	addwfc	(_rear+1)^0,w,c
  4039  0010BA  6E02               	movwf	(i2___awmod@dividend+1)^0,c
  4040  0010BC  0E00               	movlw	0
  4041  0010BE  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  4042  0010C0  0E14               	movlw	20
  4043  0010C2  6E03               	movwf	i2___awmod@divisor^0,c
  4044  0010C4  EC03  F007         	call	i2___awmod	;wreg free
  4045  0010C8  C001  F042         	movff	?i2___awmod,_rear
  4046  0010CC  C002  F043         	movff	?i2___awmod+1,_rear+1
  4047  0010D0                     
  4048                           ;ready_queue.c: 23:     ready_queue[rear] = ptr;
  4049  0010D0  C042  F001         	movff	_rear,i2___wmul@multiplier
  4050  0010D4  C043  F002         	movff	_rear+1,i2___wmul@multiplier+1
  4051  0010D8  0E00               	movlw	0
  4052  0010DA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  4053  0010DC  0E03               	movlw	3
  4054  0010DE  6E03               	movwf	i2___wmul@multiplicand^0,c
  4055  0010E0  ECBE  F009         	call	i2___wmul	;wreg free
  4056  0010E4  0E60               	movlw	low _ready_queue
  4057  0010E6  2401               	addwf	?i2___wmul^0,w,c
  4058  0010E8  6ED9               	movwf	fsr2l,c
  4059  0010EA  0E00               	movlw	high _ready_queue
  4060  0010EC  2002               	addwfc	(?i2___wmul+1)^0,w,c
  4061  0010EE  6EDA               	movwf	fsr2h,c
  4062  0010F0  C00A  FFDE         	movff	enqueue@ptr,postinc2
  4063  0010F4  C00B  FFDE         	movff	enqueue@ptr+1,postinc2
  4064  0010F8  C00C  FFDE         	movff	enqueue@ptr+2,postinc2
  4065  0010FC                     i2l118:
  4066  0010FC  0012               	return		;funcret
  4067  0010FE                     __end_of_enqueue:
  4068                           	opt callstack 0
  4069                           
  4070 ;; *************** function i2___wmul *****************
  4071 ;; Defined at:
  4072 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  4073 ;; Parameters:    Size  Location     Type
  4074 ;;  multiplier      2    0[COMRAM] unsigned int 
  4075 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4076 ;; Auto vars:     Size  Location     Type
  4077 ;;  __wmul          2    4[COMRAM] unsigned int 
  4078 ;; Return value:  Size  Location     Type
  4079 ;;                  2    0[COMRAM] unsigned int 
  4080 ;; Registers used:
  4081 ;;		wreg, status,2, status,0, prodl, prodh
  4082 ;; Tracked objects:
  4083 ;;		On entry : 0/0
  4084 ;;		On exit  : 0/0
  4085 ;;		Unchanged: 0/0
  4086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4087 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4088 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4090 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4091 ;;Total ram usage:        6 bytes
  4092 ;; Hardware stack levels used:    1
  4093 ;; This function calls:
  4094 ;;		Nothing
  4095 ;; This function is called by:
  4096 ;;		_enqueue
  4097 ;;		_handleListHead
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100                           
  4101                           	psect	text28
  4102  00137C                     __ptext28:
  4103                           	opt callstack 0
  4104  00137C                     i2___wmul:
  4105                           	opt callstack 22
  4106  00137C  5001               	movf	i2___wmul@multiplier^0,w,c
  4107  00137E  0203               	mulwf	i2___wmul@multiplicand^0,c
  4108  001380  CFF3 F005          	movff	prodl,i2___wmul@product
  4109  001384  CFF4 F006          	movff	prodh,i2___wmul@product+1
  4110  001388  5001               	movf	i2___wmul@multiplier^0,w,c
  4111  00138A  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
  4112  00138C  50F3               	movf	243,w,c
  4113  00138E  2606               	addwf	(i2___wmul@product+1)^0,f,c
  4114  001390  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
  4115  001392  0203               	mulwf	i2___wmul@multiplicand^0,c
  4116  001394  50F3               	movf	243,w,c
  4117  001396  2606               	addwf	(i2___wmul@product+1)^0,f,c
  4118  001398  C005  F001         	movff	i2___wmul@product,?i2___wmul
  4119  00139C  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  4120  0013A0  0012               	return		;funcret
  4121  0013A2                     __end_ofi2___wmul:
  4122                           	opt callstack 0
  4123                           
  4124 ;; *************** function _isFullQueue *****************
  4125 ;; Defined at:
  4126 ;;		line 7 in file "ready_queue.c"
  4127 ;; Parameters:    Size  Location     Type
  4128 ;;		None
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;		None
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  1    wreg      unsigned char 
  4133 ;; Registers used:
  4134 ;;		wreg, status,2, status,0, cstack
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4142 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4143 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4144 ;;Total ram usage:        1 bytes
  4145 ;; Hardware stack levels used:    1
  4146 ;; Hardware stack levels required when called:    2
  4147 ;; This function calls:
  4148 ;;		i2_getSizeQueue
  4149 ;; This function is called by:
  4150 ;;		_enqueue
  4151 ;; This function uses a non-reentrant model
  4152 ;;
  4153                           
  4154                           	psect	text29
  4155  0013A2                     __ptext29:
  4156                           	opt callstack 0
  4157  0013A2                     _isFullQueue:
  4158                           	opt callstack 19
  4159  0013A2                     
  4160                           ;ready_queue.c: 8:     return getSizeQueue() >= 20 ? 1 : 0;
  4161  0013A2  EC38  F009         	call	i2_getSizeQueue	;wreg free
  4162  0013A6  6E09               	movwf	??_isFullQueue^0,c
  4163  0013A8  0E14               	movlw	20
  4164  0013AA  6009               	cpfslt	??_isFullQueue^0,c
  4165  0013AC  EFDA  F009         	goto	i2u110_41
  4166  0013B0  EFDD  F009         	goto	i2u110_40
  4167  0013B4                     i2u110_41:
  4168  0013B4  0E01               	movlw	1
  4169  0013B6  EFDE  F009         	goto	i2u111_40
  4170  0013BA                     i2u110_40:
  4171  0013BA  0E00               	movlw	0
  4172  0013BC                     i2u111_40:
  4173  0013BC  0012               	return		;funcret
  4174  0013BE                     __end_of_isFullQueue:
  4175                           	opt callstack 0
  4176                           
  4177 ;; *************** function i2_getSizeQueue *****************
  4178 ;; Defined at:
  4179 ;;		line 3 in file "ready_queue.c"
  4180 ;; Parameters:    Size  Location     Type
  4181 ;;		None
  4182 ;; Auto vars:     Size  Location     Type
  4183 ;;		None
  4184 ;; Return value:  Size  Location     Type
  4185 ;;                  1    wreg      unsigned char 
  4186 ;; Registers used:
  4187 ;;		wreg, status,2, status,0, cstack
  4188 ;; Tracked objects:
  4189 ;;		On entry : 0/0
  4190 ;;		On exit  : 0/0
  4191 ;;		Unchanged: 0/0
  4192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4195 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4196 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4197 ;;Total ram usage:        2 bytes
  4198 ;; Hardware stack levels used:    1
  4199 ;; Hardware stack levels required when called:    1
  4200 ;; This function calls:
  4201 ;;		i2___awmod
  4202 ;; This function is called by:
  4203 ;;		_isFullQueue
  4204 ;; This function uses a non-reentrant model
  4205 ;;
  4206                           
  4207                           	psect	text30
  4208  001270                     __ptext30:
  4209                           	opt callstack 0
  4210  001270                     i2_getSizeQueue:
  4211                           	opt callstack 19
  4212  001270                     
  4213                           ;ready_queue.c: 4:     return (rear - front + 1 + 20) % 20;
  4214  001270  5044               	movf	_front^0,w,c
  4215  001272  5C42               	subwf	_rear^0,w,c
  4216  001274  6E07               	movwf	??i2_getSizeQueue^0,c
  4217  001276  5045               	movf	(_front+1)^0,w,c
  4218  001278  5843               	subwfb	(_rear+1)^0,w,c
  4219  00127A  6E08               	movwf	(??i2_getSizeQueue+1)^0,c
  4220  00127C  0E15               	movlw	21
  4221  00127E  2407               	addwf	??i2_getSizeQueue^0,w,c
  4222  001280  6E01               	movwf	i2___awmod@dividend^0,c
  4223  001282  0E00               	movlw	0
  4224  001284  2008               	addwfc	(??i2_getSizeQueue+1)^0,w,c
  4225  001286  6E02               	movwf	(i2___awmod@dividend+1)^0,c
  4226  001288  0E00               	movlw	0
  4227  00128A  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  4228  00128C  0E14               	movlw	20
  4229  00128E  6E03               	movwf	i2___awmod@divisor^0,c
  4230  001290  EC03  F007         	call	i2___awmod	;wreg free
  4231  001294  5001               	movf	?i2___awmod^0,w,c
  4232  001296  0012               	return		;funcret
  4233  001298                     __end_ofi2_getSizeQueue:
  4234                           	opt callstack 0
  4235                           
  4236 ;; *************** function i2___awmod *****************
  4237 ;; Defined at:
  4238 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;  dividend        2    0[COMRAM] int 
  4241 ;;  divisor         2    2[COMRAM] int 
  4242 ;; Auto vars:     Size  Location     Type
  4243 ;;  __awmod         1    5[COMRAM] unsigned char 
  4244 ;;  __awmod         1    4[COMRAM] unsigned char 
  4245 ;; Return value:  Size  Location     Type
  4246 ;;                  2    0[COMRAM] int 
  4247 ;; Registers used:
  4248 ;;		wreg, status,2, status,0
  4249 ;; Tracked objects:
  4250 ;;		On entry : 0/0
  4251 ;;		On exit  : 0/0
  4252 ;;		Unchanged: 0/0
  4253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4254 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4255 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4257 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4258 ;;Total ram usage:        6 bytes
  4259 ;; Hardware stack levels used:    1
  4260 ;; This function calls:
  4261 ;;		Nothing
  4262 ;; This function is called by:
  4263 ;;		_enqueue
  4264 ;;		i2_getSizeQueue
  4265 ;; This function uses a non-reentrant model
  4266 ;;
  4267                           
  4268                           	psect	text31
  4269  000E06                     __ptext31:
  4270                           	opt callstack 0
  4271  000E06                     i2___awmod:
  4272                           	opt callstack 21
  4273  000E06  0E00               	movlw	0
  4274  000E08  6E06               	movwf	i2___awmod@sign^0,c
  4275  000E0A  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
  4276  000E0C  EF0C  F007         	goto	i2u83_40
  4277  000E10  EF0A  F007         	goto	i2u83_41
  4278  000E14                     i2u83_41:
  4279  000E14  EF12  F007         	goto	i2l1437
  4280  000E18                     i2u83_40:
  4281  000E18  6C01               	negf	i2___awmod@dividend^0,c
  4282  000E1A  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  4283  000E1C  B0D8               	btfsc	status,0,c
  4284  000E1E  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  4285  000E20  0E01               	movlw	1
  4286  000E22  6E06               	movwf	i2___awmod@sign^0,c
  4287  000E24                     i2l1437:
  4288  000E24  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
  4289  000E26  EF19  F007         	goto	i2u84_40
  4290  000E2A  EF17  F007         	goto	i2u84_41
  4291  000E2E                     i2u84_41:
  4292  000E2E  EF1D  F007         	goto	i2l1441
  4293  000E32                     i2u84_40:
  4294  000E32  6C03               	negf	i2___awmod@divisor^0,c
  4295  000E34  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  4296  000E36  B0D8               	btfsc	status,0,c
  4297  000E38  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  4298  000E3A                     i2l1441:
  4299  000E3A  5003               	movf	i2___awmod@divisor^0,w,c
  4300  000E3C  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  4301  000E3E  B4D8               	btfsc	status,2,c
  4302  000E40  EF24  F007         	goto	i2u85_41
  4303  000E44  EF26  F007         	goto	i2u85_40
  4304  000E48                     i2u85_41:
  4305  000E48  EF4A  F007         	goto	i2l1457
  4306  000E4C                     i2u85_40:
  4307  000E4C  0E01               	movlw	1
  4308  000E4E  6E05               	movwf	i2___awmod@counter^0,c
  4309  000E50  EF2E  F007         	goto	i2l1447
  4310  000E54                     i2l1445:
  4311  000E54  90D8               	bcf	status,0,c
  4312  000E56  3603               	rlcf	i2___awmod@divisor^0,f,c
  4313  000E58  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  4314  000E5A  2A05               	incf	i2___awmod@counter^0,f,c
  4315  000E5C                     i2l1447:
  4316  000E5C  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  4317  000E5E  EF33  F007         	goto	i2u86_41
  4318  000E62  EF35  F007         	goto	i2u86_40
  4319  000E66                     i2u86_41:
  4320  000E66  EF2A  F007         	goto	i2l1445
  4321  000E6A                     i2u86_40:
  4322  000E6A                     i2l1449:
  4323  000E6A  5003               	movf	i2___awmod@divisor^0,w,c
  4324  000E6C  5C01               	subwf	i2___awmod@dividend^0,w,c
  4325  000E6E  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  4326  000E70  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  4327  000E72  A0D8               	btfss	status,0,c
  4328  000E74  EF3E  F007         	goto	i2u87_41
  4329  000E78  EF40  F007         	goto	i2u87_40
  4330  000E7C                     i2u87_41:
  4331  000E7C  EF44  F007         	goto	i2l1453
  4332  000E80                     i2u87_40:
  4333  000E80  5003               	movf	i2___awmod@divisor^0,w,c
  4334  000E82  5E01               	subwf	i2___awmod@dividend^0,f,c
  4335  000E84  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  4336  000E86  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  4337  000E88                     i2l1453:
  4338  000E88  90D8               	bcf	status,0,c
  4339  000E8A  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  4340  000E8C  3203               	rrcf	i2___awmod@divisor^0,f,c
  4341  000E8E  2E05               	decfsz	i2___awmod@counter^0,f,c
  4342  000E90  EF35  F007         	goto	i2l1449
  4343  000E94                     i2l1457:
  4344  000E94  5006               	movf	i2___awmod@sign^0,w,c
  4345  000E96  B4D8               	btfsc	status,2,c
  4346  000E98  EF50  F007         	goto	i2u88_41
  4347  000E9C  EF52  F007         	goto	i2u88_40
  4348  000EA0                     i2u88_41:
  4349  000EA0  EF56  F007         	goto	i2l1461
  4350  000EA4                     i2u88_40:
  4351  000EA4  6C01               	negf	i2___awmod@dividend^0,c
  4352  000EA6  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  4353  000EA8  B0D8               	btfsc	status,0,c
  4354  000EAA  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  4355  000EAC                     i2l1461:
  4356  000EAC  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  4357  000EB0  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  4358  000EB4  0012               	return		;funcret
  4359  000EB6                     __end_ofi2___awmod:
  4360                           	opt callstack 0
  4361  0000                     
  4362                           	psect	text32
  4363  000000                     __ptext32:
  4364                           	opt callstack 0
  4365  000000                     
  4366                           	psect	rparam
  4367  0000                     
  4368                           	psect	temp
  4369  000046                     btemp:
  4370                           	opt callstack 0
  4371  000046                     	ds	1
  4372  0000                     int$flags	set	btemp
  4373  0000                     wtemp8	set	btemp+1
  4374  0000                     ttemp5	set	btemp+1
  4375  0000                     ttemp6	set	btemp+4
  4376  0000                     ttemp7	set	btemp+8
  4377                           tosu	equ	0xFFF
  4378                           tosh	equ	0xFFE
  4379                           tosl	equ	0xFFD
  4380                           stkptr	equ	0xFFC
  4381                           pclatu	equ	0xFFB
  4382                           pclath	equ	0xFFA
  4383                           pcl	equ	0xFF9
  4384                           tblptru	equ	0xFF8
  4385                           tblptrh	equ	0xFF7
  4386                           tblptrl	equ	0xFF6
  4387                           tablat	equ	0xFF5
  4388                           prodh	equ	0xFF4
  4389                           prodl	equ	0xFF3
  4390                           indf0	equ	0xFEF
  4391                           postinc0	equ	0xFEE
  4392                           postdec0	equ	0xFED
  4393                           preinc0	equ	0xFEC
  4394                           plusw0	equ	0xFEB
  4395                           fsr0h	equ	0xFEA
  4396                           fsr0l	equ	0xFE9
  4397                           wreg	equ	0xFE8
  4398                           indf1	equ	0xFE7
  4399                           postinc1	equ	0xFE6
  4400                           postdec1	equ	0xFE5
  4401                           preinc1	equ	0xFE4
  4402                           plusw1	equ	0xFE3
  4403                           fsr1h	equ	0xFE2
  4404                           fsr1l	equ	0xFE1
  4405                           bsr	equ	0xFE0
  4406                           indf2	equ	0xFDF
  4407                           postinc2	equ	0xFDE
  4408                           postdec2	equ	0xFDD
  4409                           preinc2	equ	0xFDC
  4410                           plusw2	equ	0xFDB
  4411                           fsr2h	equ	0xFDA
  4412                           fsr2l	equ	0xFD9
  4413                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         386
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     41      69
    BANK0           160     57     119
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    handleListHead$1149	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(NULL[0]), blink_LED5(), blink_LED4(), blink_LED3(), 
		 -> blink_LED2(), blink_LED1(), blink_LED0(), 

    register_timer@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    register_timer@callback	PTR FTN()void  size(3) Largest target is 1
		 -> blink_LED5(), blink_LED4(), blink_LED3(), blink_LED2(), 
		 -> blink_LED1(), blink_LED0(), 

    selectReadyTask@ptr	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(NULL[0]), blink_LED5(), blink_LED4(), blink_LED3(), 
		 -> blink_LED2(), blink_LED1(), blink_LED0(), 

    addTask@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    addTask@ptr	PTR FTN()void  size(3) Largest target is 1
		 -> blink_LED5(), blink_LED4(), blink_LED3(), blink_LED2(), 
		 -> blink_LED1(), blink_LED0(), 

    S26$data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    task_list.data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S26$func_ptr	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(NULL[0]), blink_LED5(), blink_LED4(), blink_LED3(), 
		 -> blink_LED2(), blink_LED1(), blink_LED0(), 

    task_list.func_ptr	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(NULL[0]), blink_LED5(), blink_LED4(), blink_LED3(), 
		 -> blink_LED2(), blink_LED1(), blink_LED0(), 

    sp__dequeue	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(NULL[0]), blink_LED5(), blink_LED4(), blink_LED3(), 
		 -> blink_LED2(), blink_LED1(), blink_LED0(), 

    enqueue@ptr	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(NULL[0]), blink_LED5(), blink_LED4(), blink_LED3(), 
		 -> blink_LED2(), blink_LED1(), blink_LED0(), 

    ready_queue	PTR FTN()void [20] size(3) Largest target is 1
		 -> NULL(NULL[0]), blink_LED5(), blink_LED4(), blink_LED3(), 
		 -> blink_LED2(), blink_LED1(), blink_LED0(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _timer_interrupt in COMRAM

    _timer_interrupt->_handleListHead
    _handleListHead->_enqueue
    _enqueue->_isFullQueue
    _isFullQueue->i2_getSizeQueue
    i2_getSizeQueue->i2___awmod

Critical Paths under _main in BANK0

    _main->_register_timer
    _system_initialize->_start_timer
    _start_timer->_initializeTaskList
    _initializeTaskList->___wmul
    _register_timer->_addTask
    _addTask->___wmul
    _dispatch->_selectReadyTask
    _selectReadyTask->_dequeue
    _isEmptyQueue->_getSizeQueue
    _getSizeQueue->___awmod

Critical Paths under _timer_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer_interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer_interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer_interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timer_interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timer_interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _timer_interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _timer_interrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _timer_interrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _timer_interrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _timer_interrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _timer_interrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _timer_interrupt in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _timer_interrupt in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _timer_interrupt in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _timer_interrupt in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    9155
                                             45 BANK0     12    12      0
                           _dispatch
                     _register_timer
                  _system_initialize
 ---------------------------------------------------------------------------------
 (1) _system_initialize                                    0     0      0    1059
               _interrupt_initialize
                     _osc_initialize
                     _pin_initialize
                        _start_timer
 ---------------------------------------------------------------------------------
 (2) _start_timer                                          3     3      0    1059
                                              8 BANK0      3     3      0
                 _initializeTaskList
 ---------------------------------------------------------------------------------
 (3) _initializeTaskList                                   2     2      0     997
                                              6 BANK0      2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _pin_initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _osc_initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _interrupt_initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _register_timer                                      13     0     13    4496
                                             32 BANK0     13     0     13
                            _addTask
 ---------------------------------------------------------------------------------
 (2) _addTask                                             26    13     13    2212
                                              6 BANK0     26    13     13
                             ___wmul
                         _isFullList
 ---------------------------------------------------------------------------------
 (3) _isFullList                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dispatch                                             0     0      0    3582
                    _selectReadyTask
 ---------------------------------------------------------------------------------
 (2) _selectReadyTask                                      3     3      0    3582
                                             13 BANK0      3     3      0
                         _blink_LED0 *
                         _blink_LED1 *
                         _blink_LED2 *
                         _blink_LED3 *
                         _blink_LED4 *
                         _blink_LED5 *
                            _dequeue
                       _isEmptyQueue
 ---------------------------------------------------------------------------------
 (3) _dequeue                                              5     2      3    2614
                                              8 BANK0      5     2      3
                            ___awmod
                             ___wmul
                       _isEmptyQueue
 ---------------------------------------------------------------------------------
 (3) _isEmptyQueue                                         0     0      0     903
                       _getSizeQueue
 ---------------------------------------------------------------------------------
 (4) _getSizeQueue                                         2     2      0     903
                                              6 BANK0      2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     903
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     774
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _blink_LED5                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _blink_LED4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _blink_LED3                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _blink_LED2                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _blink_LED1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _blink_LED0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _timer_interrupt                                      6     6      0    2617
                                             35 COMRAM     6     6      0
                     _handleListHead
 ---------------------------------------------------------------------------------
 (8) _handleListHead                                      23    23      0    2617
                                             12 COMRAM    23    23      0
                            _enqueue
                         _removeTask
                           i2___wmul
 ---------------------------------------------------------------------------------
 (9) _removeTask                                           6     6      0     332
                                              0 COMRAM     6     6      0
                        _isEmptyList
 ---------------------------------------------------------------------------------
 (10) _isEmptyList                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _enqueue                                              3     0      3    1309
                                              9 COMRAM     3     0      3
                        _isFullQueue
                          i2___awmod
                           i2___wmul
 ---------------------------------------------------------------------------------
 (9) i2___wmul                                             6     2      4     411
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) _isFullQueue                                         1     1      0     400
                                              8 COMRAM     1     1      0
                     i2_getSizeQueue
 ---------------------------------------------------------------------------------
 (11) i2_getSizeQueue                                      2     2      0     400
                                              6 COMRAM     2     2      0
                          i2___awmod
 ---------------------------------------------------------------------------------
 (10) i2___awmod                                           6     2      4     400
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dispatch
     _selectReadyTask
       _blink_LED0 *
       _blink_LED1 *
       _blink_LED2 *
       _blink_LED3 *
       _blink_LED4 *
       _blink_LED5 *
       _dequeue *
         ___awmod
         ___wmul
         _isEmptyQueue
           _getSizeQueue
             ___awmod
       _isEmptyQueue *
         _getSizeQueue
           ___awmod
   _register_timer
     _addTask
       ___wmul
       _isFullList
   _system_initialize
     _interrupt_initialize
     _osc_initialize
     _pin_initialize
     _start_timer
       _initializeTaskList
         ___wmul

 _timer_interrupt (ROOT)
   _handleListHead
     _enqueue
       _isFullQueue
         i2_getSizeQueue
           i2___awmod
       i2___awmod
       i2___wmul
     _removeTask
       _isEmptyList
     i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0     12C      37        7.6%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     39      77       5       74.4%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     29      45       1       73.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BC      32        0.0%
DATA                 0      0     1E8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Oct 06 18:31:03 2019

             ??i2_getSizeQueue 0007                             l32 132E                             l41 12BC  
                           l35 1308                             l44 137A                             l29 1354  
                           l38 12E2                             l90 1404                             l93 1426  
                           l87 1420                             l96 13D6                 ??_getSizeQueue 00A4  
          ___wmul@multiplicand 00A0                            l114 121A                            l122 1020  
                          l107 1246                            l123 107A                            l211 1156  
                          l154 0D52                            l149 13EE                            l261 0F7E  
                          l158 092C                            l272 11E6                            l259 0FF8  
                          l292 126E                            l536 0E04                            l289 142C  
                  _start_timer 0F64                   ___awmod@sign 00A3                            prod 000FF3  
                          tosl 000FFD                            wreg 000FE8                   __CFG_LVP$OFF 000000  
                 __CFG_WDT$OFF 000000                           l2001 0690                           l2011 077C  
                         l2003 06A8                           l2021 084A                           l2013 07AE  
                         l2005 06B2                           l2101 0FCA                           l2031 10FE  
                         l2015 07C2                           l2007 0726                           l2023 086A  
                         l2033 1102                           l2025 088E                           l2017 0802  
                         l2009 0732                           l2041 13BE                           l2035 1112  
                         l2027 092A                           l2019 0832                           l2043 13C6  
                         l2037 1128                           l2053 1428                           l2045 13CA  
                         l2061 0B52                           l2039 1142                           l2047 13D0  
                         l2063 0B8C                           l2055 0ADA                           l2049 11AE  
                         l2065 0BC6                           l2057 0ADE                           l2067 0C00  
                         l2059 0B18                           l2069 0C3A                           l1821 0D54  
                         l1901 0FFA                           l1831 0D82                           l1823 0D5A  
                         l1903 100E                           l1841 0DBA                           l1833 0D8A  
                         l1825 0D68                           l1913 13D8                           l1851 0DF4  
                         l1843 0DD0                           l1835 0D9C                           l1827 0D70  
                         l1907 1028                           l1931 141C                           l1923 0C50  
                         l1853 0DFC                           l1845 0DD8                           l1837 0DA4  
                         l1829 0D74                           l1861 11E8                           l1909 104A  
                         l1933 13F0                           l1925 0D26                           l1917 0C46  
                         l1941 0F82                           l1871 1248                           l1847 0DDE  
                         l1839 0DAC                           l1863 11FC                           l1935 1422  
                         l1927 0D2A                           l1951 0FAA                           l1943 0F9E  
                         l1881 130A                           l1873 1266                           l1849 0DE4  
                         l1857 121C                           l1929 0D46                           l1953 0FAE  
                         l1945 0FA2                           l1937 0F68                           l1883 1324  
                         l1891 12D8                           l1867 1202                           l1971 054C  
                         l1947 0FA4                           l1877 1330                           l1885 12E4  
                         l1893 1298                           l1981 057A                           l1965 0532  
                         l1949 0FA6                           l1957 0FB6                           l1879 134A  
                         l1887 12FE                           l1895 12B2                           l1991 05A2  
                         l1983 057C                           l1967 0546                           l1897 1356  
                         l1889 12BE                           l1993 0616                           l1985 058C  
                         l1977 0552                           l1899 1370                           l1995 0618  
                         l1997 062C                           l1999 0640                           _LATC 000F8B  
                         u1600 1218                           _LATD 000F8C                           u1601 1212  
                         u1530 0D68                           u1610 121A                           u1531 0D64  
                         u1620 1344                           u1540 0D82                           u1621 133E  
                         u1541 0D7E                           u1630 1346                           u1710 12D2  
                         u1550 0D9C                           u1711 12CC                           u1551 0D98  
                         u1720 12D4                           u1560 0DBA                           u1800 100E  
                         u1705 1306                           u1561 0DB6                           u1801 100A  
                         u1650 131E                           u1706 1308                           u1570 0DD0  
                         u1810 13EC                           u1651 1318                           u1571 0DCC  
                         u1811 13E6                           u1660 1320                           u1740 12AC  
                         u1580 0DF4                           u1820 13EE                           u1900 0640  
                         u1645 1352                           u1741 12A6                           u1581 0DF0  
                         u1901 063C                           u1646 1354                           u1750 12AE  
                         u1590 11FC                           u1910 0690                           u1830 0D46  
                         u1735 12E0                           u1591 11F8                           u1911 068C  
                         u1831 0D42                           u1680 12F8                           u1736 12E2  
                         u1920 07C2                           u1840 0F7A                           u1681 12F2  
                         u1921 07BE                           u1841 0F76                           u1770 136A  
                         u1690 12FA                           u1930 0802                           u1850 0546  
                         u1771 1364                           u1675 132C                           u1931 07FE  
                         u1851 0542                           u1780 136C                           u1676 132E  
                         u1940 088E                           u1860 0576                           u1765 12BA  
                         u1941 088A                           u1861 0572                           u1766 12BC  
                         u1950 1128                           u1870 058C                           u1951 1124  
                         u1871 0588                           u1880 059E                           u1881 059A  
                         u1970 1156                           u1890 062C                           u1795 1378  
                         u1971 1152                           u1891 0628                           u1796 137A  
                         u1968 112E                           u1969 1142                 ??_isEmptyQueue 00A6  
     __size_of_selectReadyTask 005A                           _head 009C                           _main 0ADA  
                         _rear 0042                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf2 000FDF                           fsr1l 000FE1                           fsr2l 000FD9  
                         btemp 0046                           prodh 000FF4                           prodl 000FF3  
                         start 000E                  __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000  
                 ___param_bank 000000                          ?_main 0001                __end_of___awmod 0E06  
              __end_of_addTask 092E                          _T0CON 000FD5                          _T1CON 000FCD  
                        i2l110 13BC                          i2l107 1296                          i2l118 10FC  
                        i2l146 141A                          i2l181 0A44                          i2l190 04CE  
                        i2l191 002C                          i2l178 0AD8                          i2l179 0A28  
                        i2l292 13A0                          i2l197 0412                          i2l189 0530  
                        i2l286 0F48                          i2l536 0EB4                          _TMR1H 000FCF  
                        _TMR0L 000FD6                          _TMR1L 000FCE                          _TRISC 000F94  
                        _TRISD 000F95                  __CFG_PWRT$OFF 000000                 __CFG_FCMEN$OFF 000000  
              __end_of_dequeue 107C                __end_of_enqueue 10FE                          _count 003E  
                        _front 0044    __size_of_initializeTaskList 010E                          _value 0041  
               __CFG_BOREN$OFF 000000                          pclath 000FFA                          tablat 000FF5  
__size_of_interrupt_initialize 0006               __end_ofi2___wmul 13A2                          ttemp5 0047  
                        ttemp6 004A                          ttemp7 004E                          status 000FD8  
      __size_of_osc_initialize 0006                          wtemp8 0047             __size_ofi2___awmod 00B0  
              __initialization 1158                   __end_of_main 0C46                 _pin_initialize 13F0  
     __size_of_timer_interrupt 0F5C                         ??_main 00CB                  __activetblptr 000003  
                       _ADCON1 000FC1                 _register_timer 11AE                         i2l1431 0E0A  
                       i2l1441 0E3A                         i2l1433 0E18                         i2l1451 0E80  
                       i2l1443 0E4C                         i2l1435 0E20                         i2l1461 0EAC  
                       i2l1453 0E88                         i2l1445 0E54                         i2l1437 0E24  
                       i2l1429 0E06                         i2l1509 13A2                         i2l1525 1406  
                       i2l1455 0E8E                         i2l1447 0E5C                         i2l1439 0E32  
                       i2l1449 0E6A                         i2l1457 0E94                         i2l1481 1270  
                       i2l1721 0034                         i2l1459 0EA4                         i2l1547 137C  
                       i2l1731 0152                         i2l1723 00CE                         i2l1549 1398  
                       i2l1741 02C0                         i2l1733 01B0                         i2l1725 00D8  
                       i2l1717 0012                         i2l1591 10A8                         i2l1751 0446  
                       i2l1743 0320                         i2l1735 01D8                         i2l1727 0128  
                       i2l1593 10B0                         i2l1585 107C                         i2l1681 0A30  
                       i2l1673 096E                         i2l1665 0930                         i2l1753 0504  
                       i2l1745 0350                         i2l1737 01E4                         i2l1729 013E  
                       i2l1595 10D0                         i2l1683 0A68                         i2l1675 09D2  
                       i2l1667 0944                         i2l1747 0364                         i2l1739 02B4  
                       i2l1589 1094                         i2l1685 0A96                         i2l1677 09D4  
                       i2l1669 0968                         i2l1749 03C2                         i2l1781 0EEE  
                       i2l1687 0ABE                         i2l1679 09F4                         i2l1791 0F1C  
                       i2l1783 0EF2                         i2l1775 0ED0                         i2l1689 0AD6  
                       i2l1793 0F24                         i2l1777 0EDE                         i2l1785 0EFE  
                       i2l1795 0F28                         i2l1787 0F0C                         i2l1779 0EEC  
                       i2l1797 0F2C                         i2l1789 0F1A                         i2l1799 0F40  
          initializeTaskList@i 00A4           __end_of_getSizeQueue 1248                         _OSCCON 000FD3  
               __CFG_XINST$OFF 000000           __size_of_isEmptyList 0016               __end_of_dispatch 142E  
            ??_selectReadyTask 00AB                         ___wmul 1248         __end_of_pin_initialize 1406  
                    ??___awmod 00A2                      ??_addTask 00B1           __size_of_isFullQueue 001C  
                 addTask@delay 00A8                         clear_0 1180                         clear_1 1192  
                       clear_2 119E                ___awmod@divisor 00A0                ___awmod@counter 00A2  
         __end_of_isEmptyQueue 121C                      ??_dequeue 00A9                      ??_enqueue 000D  
                 __pdataCOMRAM 0042              __end_ofi2___awmod 0EB6                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8         __end_of_register_timer 11E8  
               i2___awmod@sign 0006                     __accesstop 0060        __end_of__initialization 11A4  
                ___rparam_used 000001                 __pcstackCOMRAM 0001                ?_pin_initialize 0001  
                    ?i2___wmul 0001                   ?_start_timer 0001                __CFG_OSC$INTIO7 000000  
            ??_timer_interrupt 0024                     addTask@idx 00BD                     addTask@cur 00BB  
                   addTask@ptr 00AC                ?_register_timer 00BE                     __pbssBANK0 0060  
               _osc_initialize 141C        __size_of_handleListHead 0520                     _blink_LED0 1330  
                   _blink_LED1 130A                     _blink_LED2 12E4                     _blink_LED3 12BE  
                   _blink_LED4 1298                     _blink_LED5 1356         start_timer@timer_vaddr 00A8  
                      ?___wmul 009E             register_timer@data 00C9                     ??i2___wmul 0005  
                   _isFullList 13D8          __size_of_getSizeQueue 002C                        i2u83_40 0E18  
                      i2u83_41 0E14                        i2u84_40 0E32                        i2u84_41 0E2E  
                      i2u85_40 0E4C                        i2u85_41 0E48                        i2u86_40 0E6A  
                      i2u86_41 0E66                        i2u87_40 0E80                        i2u87_41 0E7C  
                      i2u88_40 0EA4                        i2u88_41 0EA0         __end_of_osc_initialize 1422  
                    ?_dispatch 0001           register_timer@period 00BE                        __Hparam 0000  
                      __Lparam 0000          __size_of_isEmptyQueue 0034                        ___awmod 0D54  
                      _addTask 0532                __size_of___wmul 0028   __end_of_interrupt_initialize 1428  
                      __pcinit 1158                        __ramtop 1000                   _getSizeQueue 121C  
                      __ptext0 0ADA                        __ptext1 13BE                        __ptext2 0F64  
                      __ptext3 0C46                        __ptext4 13F0                        __ptext5 141C  
                      __ptext6 1422                        __ptext7 11AE                        __ptext8 0532  
                      __ptext9 13D8                        _dequeue 0FFA                        _enqueue 107C  
             ___awmod@dividend 009E        __size_ofi2_getSizeQueue 0028                  addTask@period 00A4  
   __end_of_initializeTaskList 0D54                        _time_ms 003A                     ??_dispatch 00AE  
               __pintcode_body 0EB6                ?_osc_initialize 0001           end_of_initialization 11A4  
              _selectReadyTask 10FE                        int_func 0EB6                      _LED_state 002A  
          i2___wmul@multiplier 0001                   _isEmptyQueue 11E8                     _removeTask 092E  
                  ?_blink_LED0 0001                    ?_blink_LED1 0001                    ?_blink_LED2 0001  
                  ?_blink_LED3 0001                    ?_blink_LED4 0001                    ?_blink_LED5 0001  
           handleListHead@prev 001E                        postdec1 000FE5                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
                   dequeue@idx 00A9                    ?_isFullList 0001           __size_of_start_timer 0096  
                    i2___awmod 0E06                  ??_isEmptyList 0001               ??_pin_initialize 009E  
               _handleListHead 0012                  ??_isFullQueue 0009                _timer_interrupt 0008  
               __end_of___wmul 1270         register_timer@callback 00C6                  __pidataCOMRAM 142E  
             ??_register_timer 00CB               i2___wmul@product 0005            start_initialization 1158  
      __end_of_selectReadyTask 1158              __size_ofi2___wmul 0026            __size_of_blink_LED0 0026  
          __size_of_blink_LED1 0026            __size_of_blink_LED2 0026            __size_of_blink_LED3 0026  
          __size_of_blink_LED4 0026            __size_of_blink_LED5 0026                     ?i2___awmod 0001  
         _interrupt_initialize 1422         __end_of_handleListHead 0532                     enqueue@ptr 000A  
                  ?_removeTask 0001            __size_of_isFullList 0018                    addTask@data 00AF  
                     ??___wmul 00A2            __end_of_isEmptyList 141C                    addTask@prev 00B9  
          __end_of_isFullQueue 13BE                    __pbssBIGRAM 00CB                 i2_getSizeQueue 1270  
                  __pbssCOMRAM 002A                  __pcstackBANK0 009E          ?_interrupt_initialize 0001  
            __size_of_dispatch 0006                ?_handleListHead 0001        __end_of_timer_interrupt 0F64  
                removeTask@idx 0006                  removeTask@pos 0005                      __pintcode 0008  
                     ?___awmod 009E                       ?_addTask 00A4         __end_ofi2_getSizeQueue 1298  
                     ?_dequeue 00A6                       ?_enqueue 000A            register_timer@delay 00C2  
             ??_osc_initialize 009E               ?_selectReadyTask 0001            __size_of_removeTask 01AC  
                  ??i2___awmod 0005                 ___wmul@product 00A2                       _LATDbits 000F8C  
           _initializeTaskList 0C46                       _PIE1bits 000F9D                    _isEmptyList 1406  
                     i2u110_40 13BA                       i2u110_41 13B4                       i2u111_40 13BC  
                     i2u120_40 10A8                       i2u120_41 10A4                       i2u113_40 1418  
                     i2u113_41 1412                       i2u114_40 141A                       i2u131_40 0944  
                     i2u131_41 0940                       i2u132_40 0968                       i2u140_40 00CE  
                     i2u132_41 0964                       i2u140_41 00CA                       i2u133_40 09F4  
                     i2u141_40 013E                       i2u133_41 09F0                       i2u141_41 013A  
                     i2u134_40 0A68                       i2u142_40 0152                       i2u150_40 0F0C  
                     i2u134_41 0A64                       i2u142_41 014E                       i2u150_41 0F08  
                     i2u119_40 1090                       i2u135_40 0A96                       i2u143_40 01B0  
                     i2u151_40 0F1A                       i2u119_41 108C                       i2u135_41 0A92  
                     i2u143_41 01AC                       i2u151_41 0F16                       i2u144_40 0364  
                     i2u152_40 0F40                       i2u144_41 0360                       i2u152_41 0F3C  
                     i2u145_40 03C2                       i2u145_41 03BE                       i2u146_40 0446  
                     i2u146_41 0442                       i2u147_40 0504                       i2u139_40 0028  
                     i2u147_41 0500                       i2u139_41 0024                       i2u148_40 0EDE  
                     i2u148_41 0EDA                       i2u149_40 0EEC                       i2u149_41 0EE8  
                     _PIR1bits 000F9E                      _task_list 00CB                   ??_blink_LED0 009E  
                 ??_blink_LED1 009E                   ??_blink_LED2 009E                   ??_blink_LED3 009E  
                 ??_blink_LED4 009E                   ??_blink_LED5 009E                    _isFullQueue 13A2  
            handleListHead@cur 0020              handleListHead@pos 0022            ?_initializeTaskList 0001  
              ?i2_getSizeQueue 0001              ___wmul@multiplier 009E                       i2___wmul 137C  
                 ??_isFullList 009E              _system_initialize 13BE           ??_initializeTaskList 00A4  
       ??_interrupt_initialize 009E             __end_of_blink_LED0 1356             __end_of_blink_LED1 1330  
           __end_of_blink_LED2 130A             __end_of_blink_LED3 12E4             __end_of_blink_LED4 12BE  
           __end_of_blink_LED5 137C                      copy_data0 116C             i2___awmod@dividend 0001  
           ?_system_initialize 0001             selectReadyTask@ptr 00AB            ??_system_initialize 00A9  
             ?_timer_interrupt 0001                       __Hrparam 0000                       __Lrparam 0000  
          _handleListHead$1150 001C            _handleListHead$1149 0019             __end_of_isFullList 13F0  
             __size_of___awmod 00B2               __size_of_addTask 03FC          i2___wmul@multiplicand 0003  
             __size_of_dequeue 0082                  ??_start_timer 00A6      __end_of_system_initialize 13D8  
             __size_of_enqueue 0082                       __ptext10 1428                       __ptext11 10FE  
                     __ptext20 130A                       __ptext12 0FFA                       __ptext21 1330  
                     __ptext13 11E8                       __ptext30 1270                       __ptext22 1356  
                     __ptext14 121C                       __ptext31 0E06                       __ptext15 0D54  
                     __ptext32 0000                       __ptext24 0012                       __ptext16 1248  
                     __ptext25 092E                       __ptext17 1298                       __ptext26 1406  
                     __ptext18 12BE                       __ptext27 107C                       __ptext19 12E4  
                     __ptext28 137C                       __ptext29 13A2                       _dispatch 1428  
                __size_of_main 016C                    _ready_queue 0060                   ??_removeTask 0001  
                     _num_task 0040                       int$flags 0046              i2___awmod@divisor 0003  
            i2___awmod@counter 0005                     _INTCONbits 000FF2             __end_of_removeTask 0ADA  
             ??_handleListHead 000D            __end_of_start_timer 0FFA                       intlevel2 0000  
                fp__blink_LED0 0000                  fp__blink_LED1 0000                  fp__blink_LED2 0000  
                fp__blink_LED3 0000                  fp__blink_LED4 0000                  fp__blink_LED5 0000  
                ?_getSizeQueue 0001        __size_of_pin_initialize 0016     __size_of_system_initialize 001A  
      __size_of_register_timer 003A                  ?_isEmptyQueue 0001                   ?_isEmptyList 0001  
                 ?_isFullQueue 0001  
