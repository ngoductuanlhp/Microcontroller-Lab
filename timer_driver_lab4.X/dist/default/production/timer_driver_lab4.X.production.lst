

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Oct 06 18:24:45 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50  0000                     
    51                           ; Version 2.10
    52                           ; Generated 31/07/2019 GMT
    53                           ; 
    54                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F8722 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     
    86                           	psect	idataCOMRAM
    87  001484                     __pidataCOMRAM:
    88                           	opt callstack 0
    89                           
    90                           ;initializer for _rear
    91  001484  FFFF               	dw	65535
    92                           
    93                           ;initializer for _front
    94  001486  FFFF               	dw	65535
    95  0000                     _TMR1L	set	4046
    96  0000                     _TMR1H	set	4047
    97  0000                     _T1CON	set	4045
    98  0000                     _PIR1bits	set	3998
    99  0000                     _PIE1bits	set	3997
   100  0000                     _TMR0L	set	4054
   101  0000                     _T0CON	set	4053
   102  0000                     _INTCONbits	set	4082
   103  0000                     _TRISD	set	3989
   104  0000                     _LATD	set	3980
   105  0000                     _ADCON1	set	4033
   106  0000                     _TRISC	set	3988
   107  0000                     _LATC	set	3979
   108  0000                     _OSCCON	set	4051
   109  0000                     _LATDbits	set	3980
   110                           
   111                           ; #config settings
   112  0000                     
   113                           	psect	cinit
   114  0011B6                     __pcinit:
   115                           	opt callstack 0
   116  0011B6                     start_initialization:
   117                           	opt callstack 0
   118  0011B6                     __initialization:
   119                           	opt callstack 0
   120                           
   121                           ; Initialize objects allocated to COMRAM (4 bytes)
   122                           ; load TBLPTR registers with __pidataCOMRAM
   123  0011B6  0E84               	movlw	low __pidataCOMRAM
   124  0011B8  6EF6               	movwf	tblptrl,c
   125  0011BA  0E14               	movlw	high __pidataCOMRAM
   126  0011BC  6EF7               	movwf	tblptrh,c
   127  0011BE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   128  0011C0  6EF8               	movwf	tblptru,c
   129  0011C2  EE00  F044         	lfsr	0,__pdataCOMRAM
   130  0011C6  EE10 F004          	lfsr	1,4
   131  0011CA                     copy_data0:
   132  0011CA  0009               	tblrd		*+
   133  0011CC  CFF5 FFEE          	movff	tablat,postinc0
   134  0011D0  50E5               	movf	postdec1,w,c
   135  0011D2  50E1               	movf	fsr1l,w,c
   136  0011D4  E1FA               	bnz	copy_data0
   137                           
   138                           ; Clear objects allocated to BIGRAM (260 bytes)
   139  0011D6  EE00  F0C9         	lfsr	0,__pbssBIGRAM
   140  0011DA  EE11 F004          	lfsr	1,260
   141  0011DE                     clear_0:
   142  0011DE  6AEE               	clrf	postinc0,c
   143  0011E0  50E5               	movf	postdec1,w,c
   144  0011E2  50E1               	movf	fsr1l,w,c
   145  0011E4  E1FC               	bnz	clear_0
   146  0011E6  50E2               	movf	fsr1h,w,c
   147  0011E8  E1FA               	bnz	clear_0
   148                           
   149                           ; Clear objects allocated to BANK0 (62 bytes)
   150  0011EA  EE00  F060         	lfsr	0,__pbssBANK0
   151  0011EE  0E3E               	movlw	62
   152  0011F0                     clear_1:
   153  0011F0  6AEE               	clrf	postinc0,c
   154  0011F2  06E8               	decf	wreg,f,c
   155  0011F4  E1FD               	bnz	clear_1
   156                           
   157                           ; Clear objects allocated to COMRAM (24 bytes)
   158  0011F6  EE00  F02C         	lfsr	0,__pbssCOMRAM
   159  0011FA  0E18               	movlw	24
   160  0011FC                     clear_2:
   161  0011FC  6AEE               	clrf	postinc0,c
   162  0011FE  06E8               	decf	wreg,f,c
   163  001200  E1FD               	bnz	clear_2
   164  001202                     end_of_initialization:
   165                           	opt callstack 0
   166  001202                     __end_of__initialization:
   167                           	opt callstack 0
   168  001202  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   169  001204  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   170  001206  0100               	movlb	0
   171  001208  EFB1  F005         	goto	_main	;jump to C main() function
   172                           
   173                           	psect	bssCOMRAM
   174  00002C                     __pbssCOMRAM:
   175                           	opt callstack 0
   176  00002C                     _LED_state:
   177                           	opt callstack 0
   178  00002C                     	ds	16
   179  00003C                     _time_ms:
   180                           	opt callstack 0
   181  00003C                     	ds	4
   182  000040                     _count:
   183                           	opt callstack 0
   184  000040                     	ds	2
   185  000042                     _num_task:
   186                           	opt callstack 0
   187  000042                     	ds	1
   188  000043                     _value:
   189                           	opt callstack 0
   190  000043                     	ds	1
   191                           
   192                           	psect	dataCOMRAM
   193  000044                     __pdataCOMRAM:
   194                           	opt callstack 0
   195  000044                     _rear:
   196                           	opt callstack 0
   197  000044                     	ds	2
   198  000046                     _front:
   199                           	opt callstack 0
   200  000046                     	ds	2
   201                           
   202                           	psect	bssBANK0
   203  000060                     __pbssBANK0:
   204                           	opt callstack 0
   205  000060                     _ready_queue:
   206                           	opt callstack 0
   207  000060                     	ds	60
   208  00009C                     _head:
   209                           	opt callstack 0
   210  00009C                     	ds	2
   211                           
   212                           	psect	bssBIGRAM
   213  0000C9                     __pbssBIGRAM:
   214                           	opt callstack 0
   215  0000C9                     _task_list:
   216                           	opt callstack 0
   217  0000C9                     	ds	260
   218                           
   219                           	psect	cstackBANK0
   220  00009E                     __pcstackBANK0:
   221                           	opt callstack 0
   222  00009E                     ?___wmul:
   223                           	opt callstack 0
   224  00009E                     ?___awmod:
   225                           	opt callstack 0
   226  00009E                     ___wmul@multiplier:
   227                           	opt callstack 0
   228  00009E                     ___awmod@dividend:
   229                           	opt callstack 0
   230                           
   231                           ; 2 bytes @ 0x0
   232  00009E                     	ds	2
   233  0000A0                     ___wmul@multiplicand:
   234                           	opt callstack 0
   235  0000A0                     ___awmod@divisor:
   236                           	opt callstack 0
   237                           
   238                           ; 2 bytes @ 0x2
   239  0000A0                     	ds	2
   240  0000A2                     ___awmod@counter:
   241                           	opt callstack 0
   242  0000A2                     ___wmul@product:
   243                           	opt callstack 0
   244                           
   245                           ; 2 bytes @ 0x4
   246  0000A2                     	ds	1
   247  0000A3                     ___awmod@sign:
   248                           	opt callstack 0
   249                           
   250                           ; 1 bytes @ 0x5
   251  0000A3                     	ds	1
   252  0000A4                     ??_getSizeQueue:
   253  0000A4                     initializeTaskList@i:
   254                           	opt callstack 0
   255  0000A4                     addTask@period:
   256                           	opt callstack 0
   257                           
   258                           ; 4 bytes @ 0x6
   259  0000A4                     	ds	2
   260  0000A6                     ??_start_timer:
   261  0000A6                     ?_dequeue:
   262                           	opt callstack 0
   263                           
   264                           ; 3 bytes @ 0x8
   265  0000A6                     	ds	2
   266  0000A8                     start_timer@timer_vaddr:
   267                           	opt callstack 0
   268  0000A8                     addTask@delay:
   269                           	opt callstack 0
   270                           
   271                           ; 4 bytes @ 0xA
   272  0000A8                     	ds	1
   273  0000A9                     dequeue@idx:
   274                           	opt callstack 0
   275                           
   276                           ; 2 bytes @ 0xB
   277  0000A9                     	ds	2
   278  0000AB                     selectReadyTask@ptr:
   279                           	opt callstack 0
   280                           
   281                           ; 3 bytes @ 0xD
   282  0000AB                     	ds	1
   283  0000AC                     addTask@ptr:
   284                           	opt callstack 0
   285                           
   286                           ; 3 bytes @ 0xE
   287  0000AC                     	ds	2
   288  0000AE                     
   289                           ; 1 bytes @ 0x10
   290  0000AE                     	ds	1
   291  0000AF                     ??_addTask:
   292                           
   293                           ; 1 bytes @ 0x11
   294  0000AF                     	ds	8
   295  0000B7                     addTask@prev:
   296                           	opt callstack 0
   297                           
   298                           ; 2 bytes @ 0x19
   299  0000B7                     	ds	2
   300  0000B9                     addTask@cur:
   301                           	opt callstack 0
   302                           
   303                           ; 2 bytes @ 0x1B
   304  0000B9                     	ds	2
   305  0000BB                     addTask@idx:
   306                           	opt callstack 0
   307                           
   308                           ; 1 bytes @ 0x1D
   309  0000BB                     	ds	1
   310  0000BC                     register_timer@period:
   311                           	opt callstack 0
   312                           
   313                           ; 4 bytes @ 0x1E
   314  0000BC                     	ds	4
   315  0000C0                     register_timer@delay:
   316                           	opt callstack 0
   317                           
   318                           ; 4 bytes @ 0x22
   319  0000C0                     	ds	4
   320  0000C4                     register_timer@callback:
   321                           	opt callstack 0
   322                           
   323                           ; 3 bytes @ 0x26
   324  0000C4                     	ds	3
   325  0000C7                     register_timer@data:
   326                           	opt callstack 0
   327                           
   328                           ; 2 bytes @ 0x29
   329  0000C7                     	ds	2
   330  0000C9                     
   331                           ; 1 bytes @ 0x2B
   332                           
   333                           	psect	cstackCOMRAM
   334  000001                     __pcstackCOMRAM:
   335                           	opt callstack 0
   336  000001                     ??_removeTask:
   337  000001                     ?i2___wmul:
   338                           	opt callstack 0
   339  000001                     ?i2___awmod:
   340                           	opt callstack 0
   341  000001                     i2___wmul@multiplier:
   342                           	opt callstack 0
   343  000001                     i2___awmod@dividend:
   344                           	opt callstack 0
   345                           
   346                           ; 2 bytes @ 0x0
   347  000001                     	ds	2
   348  000003                     i2___wmul@multiplicand:
   349                           	opt callstack 0
   350  000003                     i2___awmod@divisor:
   351                           	opt callstack 0
   352                           
   353                           ; 2 bytes @ 0x2
   354  000003                     	ds	2
   355  000005                     removeTask@pos:
   356                           	opt callstack 0
   357  000005                     i2___awmod@counter:
   358                           	opt callstack 0
   359  000005                     i2___wmul@product:
   360                           	opt callstack 0
   361                           
   362                           ; 2 bytes @ 0x4
   363  000005                     	ds	1
   364  000006                     removeTask@idx:
   365                           	opt callstack 0
   366  000006                     i2___awmod@sign:
   367                           	opt callstack 0
   368                           
   369                           ; 1 bytes @ 0x5
   370  000006                     	ds	1
   371  000007                     ??i2_getSizeQueue:
   372                           
   373                           ; 1 bytes @ 0x6
   374  000007                     	ds	2
   375  000009                     ??_isFullQueue:
   376                           
   377                           ; 1 bytes @ 0x8
   378  000009                     	ds	1
   379  00000A                     enqueue@ptr:
   380                           	opt callstack 0
   381                           
   382                           ; 3 bytes @ 0x9
   383  00000A                     	ds	3
   384  00000D                     ??_handleListHead:
   385                           
   386                           ; 1 bytes @ 0xC
   387  00000D                     	ds	12
   388  000019                     _handleListHead$1146:
   389                           	opt callstack 0
   390                           
   391                           ; 3 bytes @ 0x18
   392  000019                     	ds	3
   393  00001C                     _handleListHead$1147:
   394                           	opt callstack 0
   395                           
   396                           ; 2 bytes @ 0x1B
   397  00001C                     	ds	2
   398  00001E                     _handleListHead$1148:
   399                           	opt callstack 0
   400                           
   401                           ; 2 bytes @ 0x1D
   402  00001E                     	ds	2
   403  000020                     handleListHead@prev:
   404                           	opt callstack 0
   405                           
   406                           ; 2 bytes @ 0x1F
   407  000020                     	ds	2
   408  000022                     handleListHead@cur:
   409                           	opt callstack 0
   410                           
   411                           ; 2 bytes @ 0x21
   412  000022                     	ds	2
   413  000024                     handleListHead@pos:
   414                           	opt callstack 0
   415                           
   416                           ; 2 bytes @ 0x23
   417  000024                     	ds	2
   418  000026                     ??_timer_interrupt:
   419                           
   420                           ; 1 bytes @ 0x25
   421  000026                     	ds	6
   422                           
   423 ;;
   424 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   425 ;;
   426 ;; *************** function _main *****************
   427 ;; Defined at:
   428 ;;		line 51 in file "main.c"
   429 ;; Parameters:    Size  Location     Type
   430 ;;		None
   431 ;; Auto vars:     Size  Location     Type
   432 ;;  idx5            2    0        int 
   433 ;;  idx4            2    0        int 
   434 ;;  idx3            2    0        int 
   435 ;;  idx2            2    0        int 
   436 ;;  idx1            2    0        int 
   437 ;;  idx0            2    0        int 
   438 ;; Return value:  Size  Location     Type
   439 ;;                  1    wreg      void 
   440 ;; Registers used:
   441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
   442 ;; Tracked objects:
   443 ;;		On entry : 0/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   448 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   450 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   451 ;;Total ram usage:       12 bytes
   452 ;; Hardware stack levels required when called:   12
   453 ;; This function calls:
   454 ;;		_dispatch
   455 ;;		_register_timer
   456 ;;		_system_initialize
   457 ;; This function is called by:
   458 ;;		Startup code after reset
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462                           	psect	text0
   463  000B62                     __ptext0:
   464                           	opt callstack 0
   465  000B62                     _main:
   466                           	opt callstack 19
   467  000B62                     
   468                           ;main.c: 52:     system_initialize();
   469  000B62  EC0A  F00A         	call	_system_initialize	;wreg free
   470  000B66  0EE8               	movlw	232
   471  000B68  0100               	movlb	0	; () banked
   472  000B6A  6FBC               	movwf	register_timer@period& (0+255),b
   473  000B6C  0E03               	movlw	3
   474  000B6E  6FBD               	movwf	(register_timer@period+1)& (0+255),b
   475  000B70  0E00               	movlw	0
   476  000B72  6FBE               	movwf	(register_timer@period+2)& (0+255),b
   477  000B74  0E00               	movlw	0
   478  000B76  6FBF               	movwf	(register_timer@period+3)& (0+255),b
   479  000B78  0E00               	movlw	0
   480  000B7A  6FC0               	movwf	register_timer@delay& (0+255),b
   481  000B7C  0E00               	movlw	0
   482  000B7E  6FC1               	movwf	(register_timer@delay+1)& (0+255),b
   483  000B80  0E00               	movlw	0
   484  000B82  6FC2               	movwf	(register_timer@delay+2)& (0+255),b
   485  000B84  0E00               	movlw	0
   486  000B86  6FC3               	movwf	(register_timer@delay+3)& (0+255),b
   487  000B88  0E86               	movlw	low _blink_LED0
   488  000B8A  6FC4               	movwf	register_timer@callback& (0+255),b
   489  000B8C  0E13               	movlw	high _blink_LED0
   490  000B8E  6FC5               	movwf	(register_timer@callback+1)& (0+255),b
   491  000B90  0E00               	movlw	low (_blink_LED0 shr (0+16))
   492  000B92  6FC6               	movwf	(register_timer@callback+2)& (0+255),b
   493  000B94  0E00               	movlw	0
   494  000B96  6FC7               	movwf	register_timer@data& (0+255),b
   495  000B98  0E00               	movlw	0
   496  000B9A  6FC8               	movwf	(register_timer@data+1)& (0+255),b
   497  000B9C  EC20  F009         	call	_register_timer	;wreg free
   498  000BA0  0EE8               	movlw	232
   499  000BA2  0100               	movlb	0	; () banked
   500  000BA4  6FBC               	movwf	register_timer@period& (0+255),b
   501  000BA6  0E03               	movlw	3
   502  000BA8  6FBD               	movwf	(register_timer@period+1)& (0+255),b
   503  000BAA  0E00               	movlw	0
   504  000BAC  6FBE               	movwf	(register_timer@period+2)& (0+255),b
   505  000BAE  0E00               	movlw	0
   506  000BB0  6FBF               	movwf	(register_timer@period+3)& (0+255),b
   507  000BB2  0EC8               	movlw	200
   508  000BB4  6FC0               	movwf	register_timer@delay& (0+255),b
   509  000BB6  0E00               	movlw	0
   510  000BB8  6FC1               	movwf	(register_timer@delay+1)& (0+255),b
   511  000BBA  0E00               	movlw	0
   512  000BBC  6FC2               	movwf	(register_timer@delay+2)& (0+255),b
   513  000BBE  0E00               	movlw	0
   514  000BC0  6FC3               	movwf	(register_timer@delay+3)& (0+255),b
   515  000BC2  0E60               	movlw	low _blink_LED1
   516  000BC4  6FC4               	movwf	register_timer@callback& (0+255),b
   517  000BC6  0E13               	movlw	high _blink_LED1
   518  000BC8  6FC5               	movwf	(register_timer@callback+1)& (0+255),b
   519  000BCA  0E00               	movlw	low (_blink_LED1 shr (0+16))
   520  000BCC  6FC6               	movwf	(register_timer@callback+2)& (0+255),b
   521  000BCE  0E00               	movlw	0
   522  000BD0  6FC7               	movwf	register_timer@data& (0+255),b
   523  000BD2  0E00               	movlw	0
   524  000BD4  6FC8               	movwf	(register_timer@data+1)& (0+255),b
   525  000BD6  EC20  F009         	call	_register_timer	;wreg free
   526  000BDA  0EB8               	movlw	184
   527  000BDC  0100               	movlb	0	; () banked
   528  000BDE  6FBC               	movwf	register_timer@period& (0+255),b
   529  000BE0  0E0B               	movlw	11
   530  000BE2  6FBD               	movwf	(register_timer@period+1)& (0+255),b
   531  000BE4  0E00               	movlw	0
   532  000BE6  6FBE               	movwf	(register_timer@period+2)& (0+255),b
   533  000BE8  0E00               	movlw	0
   534  000BEA  6FBF               	movwf	(register_timer@period+3)& (0+255),b
   535  000BEC  0E90               	movlw	144
   536  000BEE  6FC0               	movwf	register_timer@delay& (0+255),b
   537  000BF0  0E01               	movlw	1
   538  000BF2  6FC1               	movwf	(register_timer@delay+1)& (0+255),b
   539  000BF4  0E00               	movlw	0
   540  000BF6  6FC2               	movwf	(register_timer@delay+2)& (0+255),b
   541  000BF8  0E00               	movlw	0
   542  000BFA  6FC3               	movwf	(register_timer@delay+3)& (0+255),b
   543  000BFC  0E3A               	movlw	low _blink_LED2
   544  000BFE  6FC4               	movwf	register_timer@callback& (0+255),b
   545  000C00  0E13               	movlw	high _blink_LED2
   546  000C02  6FC5               	movwf	(register_timer@callback+1)& (0+255),b
   547  000C04  0E00               	movlw	low (_blink_LED2 shr (0+16))
   548  000C06  6FC6               	movwf	(register_timer@callback+2)& (0+255),b
   549  000C08  0E00               	movlw	0
   550  000C0A  6FC7               	movwf	register_timer@data& (0+255),b
   551  000C0C  0E00               	movlw	0
   552  000C0E  6FC8               	movwf	(register_timer@data+1)& (0+255),b
   553  000C10  EC20  F009         	call	_register_timer	;wreg free
   554  000C14  0E28               	movlw	40
   555  000C16  0100               	movlb	0	; () banked
   556  000C18  6FBC               	movwf	register_timer@period& (0+255),b
   557  000C1A  0E23               	movlw	35
   558  000C1C  6FBD               	movwf	(register_timer@period+1)& (0+255),b
   559  000C1E  0E00               	movlw	0
   560  000C20  6FBE               	movwf	(register_timer@period+2)& (0+255),b
   561  000C22  0E00               	movlw	0
   562  000C24  6FBF               	movwf	(register_timer@period+3)& (0+255),b
   563  000C26  0E90               	movlw	144
   564  000C28  6FC0               	movwf	register_timer@delay& (0+255),b
   565  000C2A  0E01               	movlw	1
   566  000C2C  6FC1               	movwf	(register_timer@delay+1)& (0+255),b
   567  000C2E  0E00               	movlw	0
   568  000C30  6FC2               	movwf	(register_timer@delay+2)& (0+255),b
   569  000C32  0E00               	movlw	0
   570  000C34  6FC3               	movwf	(register_timer@delay+3)& (0+255),b
   571  000C36  0E14               	movlw	low _blink_LED3
   572  000C38  6FC4               	movwf	register_timer@callback& (0+255),b
   573  000C3A  0E13               	movlw	high _blink_LED3
   574  000C3C  6FC5               	movwf	(register_timer@callback+1)& (0+255),b
   575  000C3E  0E00               	movlw	low (_blink_LED3 shr (0+16))
   576  000C40  6FC6               	movwf	(register_timer@callback+2)& (0+255),b
   577  000C42  0E00               	movlw	0
   578  000C44  6FC7               	movwf	register_timer@data& (0+255),b
   579  000C46  0E00               	movlw	0
   580  000C48  6FC8               	movwf	(register_timer@data+1)& (0+255),b
   581  000C4A  EC20  F009         	call	_register_timer	;wreg free
   582  000C4E  0E98               	movlw	152
   583  000C50  0100               	movlb	0	; () banked
   584  000C52  6FBC               	movwf	register_timer@period& (0+255),b
   585  000C54  0E3A               	movlw	58
   586  000C56  6FBD               	movwf	(register_timer@period+1)& (0+255),b
   587  000C58  0E00               	movlw	0
   588  000C5A  6FBE               	movwf	(register_timer@period+2)& (0+255),b
   589  000C5C  0E00               	movlw	0
   590  000C5E  6FBF               	movwf	(register_timer@period+3)& (0+255),b
   591  000C60  0EC8               	movlw	200
   592  000C62  6FC0               	movwf	register_timer@delay& (0+255),b
   593  000C64  0E00               	movlw	0
   594  000C66  6FC1               	movwf	(register_timer@delay+1)& (0+255),b
   595  000C68  0E00               	movlw	0
   596  000C6A  6FC2               	movwf	(register_timer@delay+2)& (0+255),b
   597  000C6C  0E00               	movlw	0
   598  000C6E  6FC3               	movwf	(register_timer@delay+3)& (0+255),b
   599  000C70  0EEE               	movlw	low _blink_LED4
   600  000C72  6FC4               	movwf	register_timer@callback& (0+255),b
   601  000C74  0E12               	movlw	high _blink_LED4
   602  000C76  6FC5               	movwf	(register_timer@callback+1)& (0+255),b
   603  000C78  0E00               	movlw	low (_blink_LED4 shr (0+16))
   604  000C7A  6FC6               	movwf	(register_timer@callback+2)& (0+255),b
   605  000C7C  0E00               	movlw	0
   606  000C7E  6FC7               	movwf	register_timer@data& (0+255),b
   607  000C80  0E00               	movlw	0
   608  000C82  6FC8               	movwf	(register_timer@data+1)& (0+255),b
   609  000C84  EC20  F009         	call	_register_timer	;wreg free
   610  000C88  0E64               	movlw	100
   611  000C8A  0100               	movlb	0	; () banked
   612  000C8C  6FBC               	movwf	register_timer@period& (0+255),b
   613  000C8E  0E00               	movlw	0
   614  000C90  6FBD               	movwf	(register_timer@period+1)& (0+255),b
   615  000C92  0E00               	movlw	0
   616  000C94  6FBE               	movwf	(register_timer@period+2)& (0+255),b
   617  000C96  0E00               	movlw	0
   618  000C98  6FBF               	movwf	(register_timer@period+3)& (0+255),b
   619  000C9A  0E10               	movlw	16
   620  000C9C  6FC0               	movwf	register_timer@delay& (0+255),b
   621  000C9E  0E27               	movlw	39
   622  000CA0  6FC1               	movwf	(register_timer@delay+1)& (0+255),b
   623  000CA2  0E00               	movlw	0
   624  000CA4  6FC2               	movwf	(register_timer@delay+2)& (0+255),b
   625  000CA6  0E00               	movlw	0
   626  000CA8  6FC3               	movwf	(register_timer@delay+3)& (0+255),b
   627  000CAA  0EAC               	movlw	low _blink_LED5
   628  000CAC  6FC4               	movwf	register_timer@callback& (0+255),b
   629  000CAE  0E13               	movlw	high _blink_LED5
   630  000CB0  6FC5               	movwf	(register_timer@callback+1)& (0+255),b
   631  000CB2  0E00               	movlw	low (_blink_LED5 shr (0+16))
   632  000CB4  6FC6               	movwf	(register_timer@callback+2)& (0+255),b
   633  000CB6  0E00               	movlw	0
   634  000CB8  6FC7               	movwf	register_timer@data& (0+255),b
   635  000CBA  0E00               	movlw	0
   636  000CBC  6FC8               	movwf	(register_timer@data+1)& (0+255),b
   637  000CBE  EC20  F009         	call	_register_timer	;wreg free
   638  000CC2                     l2081:
   639                           
   640                           ;main.c: 60:         dispatch();
   641  000CC2  EC3F  F00A         	call	_dispatch	;wreg free
   642  000CC6  EF61  F006         	goto	l2081
   643  000CCA  EF07  F000         	goto	start
   644  000CCE                     __end_of_main:
   645                           	opt callstack 0
   646                           
   647 ;; *************** function _system_initialize *****************
   648 ;; Defined at:
   649 ;;		line 22 in file "mcc.c"
   650 ;; Parameters:    Size  Location     Type
   651 ;;		None
   652 ;; Auto vars:     Size  Location     Type
   653 ;;		None
   654 ;; Return value:  Size  Location     Type
   655 ;;                  1    wreg      void 
   656 ;; Registers used:
   657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   658 ;; Tracked objects:
   659 ;;		On entry : 0/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   667 ;;Total ram usage:        0 bytes
   668 ;; Hardware stack levels used:    1
   669 ;; Hardware stack levels required when called:    9
   670 ;; This function calls:
   671 ;;		_interrupt_initialize
   672 ;;		_osc_initialize
   673 ;;		_pin_initialize
   674 ;;		_start_timer
   675 ;; This function is called by:
   676 ;;		_main
   677 ;; This function uses a non-reentrant model
   678 ;;
   679                           
   680                           	psect	text1
   681  001414                     __ptext1:
   682                           	opt callstack 0
   683  001414                     _system_initialize:
   684                           	opt callstack 21
   685  001414                     
   686                           ;mcc.c: 23:     osc_initialize();
   687  001414  EC39  F00A         	call	_osc_initialize	;wreg free
   688                           
   689                           ;mcc.c: 24:     pin_initialize();
   690  001418  EC23  F00A         	call	_pin_initialize	;wreg free
   691  00141C                     
   692                           ;mcc.c: 25:     interrupt_initialize();
   693  00141C  EC3C  F00A         	call	_interrupt_initialize	;wreg free
   694  001420                     
   695                           ;mcc.c: 26:     start_timer(0);
   696  001420  0E00               	movlw	0
   697  001422  ECE1  F007         	call	_start_timer
   698  001426                     
   699                           ;mcc.c: 27:     start_timer(1);
   700  001426  0E01               	movlw	1
   701  001428  ECE1  F007         	call	_start_timer
   702  00142C  0012               	return		;funcret
   703  00142E                     __end_of_system_initialize:
   704                           	opt callstack 0
   705                           
   706 ;; *************** function _start_timer *****************
   707 ;; Defined at:
   708 ;;		line 5 in file "clock.c"
   709 ;; Parameters:    Size  Location     Type
   710 ;;  timer_vaddr     1    wreg     unsigned char 
   711 ;; Auto vars:     Size  Location     Type
   712 ;;  timer_vaddr     1   10[BANK0 ] unsigned char 
   713 ;; Return value:  Size  Location     Type
   714 ;;                  2   68[None  ] int 
   715 ;; Registers used:
   716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   723 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   724 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   725 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   726 ;;Total ram usage:        3 bytes
   727 ;; Hardware stack levels used:    1
   728 ;; Hardware stack levels required when called:    8
   729 ;; This function calls:
   730 ;;		_initializeTaskList
   731 ;; This function is called by:
   732 ;;		_system_initialize
   733 ;; This function uses a non-reentrant model
   734 ;;
   735                           
   736                           	psect	text2
   737  000FC2                     __ptext2:
   738                           	opt callstack 0
   739  000FC2                     _start_timer:
   740                           	opt callstack 21
   741                           
   742                           ;incstack = 0
   743                           ;start_timer@timer_vaddr stored from wreg
   744  000FC2  0100               	movlb	0	; () banked
   745  000FC4  6FA8               	movwf	start_timer@timer_vaddr& (0+255),b
   746  000FC6                     
   747                           ;clock.c: 6:     if(timer_vaddr > 4)
   748  000FC6  0E04               	movlw	4
   749  000FC8  0100               	movlb	0	; () banked
   750  000FCA  65A8               	cpfsgt	start_timer@timer_vaddr& (0+255),b
   751  000FCC  EFEA  F007         	goto	u1841
   752  000FD0  EFEC  F007         	goto	u1840
   753  000FD4                     u1841:
   754  000FD4  EF0A  F008         	goto	l1969
   755  000FD8                     u1840:
   756  000FD8  EF2B  F008         	goto	l259
   757  000FDC                     l261:
   758                           
   759                           ; BSR set to: 0
   760                           ;clock.c: 10:             INTCONbits.TMR0IE = 1;
   761  000FDC  8AF2               	bsf	242,5,c	;volatile
   762                           
   763                           ;clock.c: 11:             INTCONbits.TMR0IF = 0;
   764  000FDE  94F2               	bcf	242,2,c	;volatile
   765  000FE0                     
   766                           ; BSR set to: 0
   767                           ;clock.c: 12:             T0CON = 0xC3;
   768  000FE0  0EC3               	movlw	195
   769  000FE2  6ED5               	movwf	213,c	;volatile
   770                           
   771                           ;clock.c: 13:             TMR0L = 131;
   772  000FE4  0E83               	movlw	131
   773  000FE6  6ED6               	movwf	214,c	;volatile
   774                           
   775                           ;clock.c: 14:             time_ms = 0;
   776  000FE8  0E00               	movlw	0
   777  000FEA  6E3C               	movwf	_time_ms^0,c
   778  000FEC  0E00               	movlw	0
   779  000FEE  6E3D               	movwf	(_time_ms+1)^0,c
   780  000FF0  0E00               	movlw	0
   781  000FF2  6E3E               	movwf	(_time_ms+2)^0,c
   782  000FF4  0E00               	movlw	0
   783  000FF6  6E3F               	movwf	(_time_ms+3)^0,c
   784                           
   785                           ;clock.c: 15:             break;
   786  000FF8  EF2B  F008         	goto	l259
   787  000FFC                     l1955:
   788                           
   789                           ; BSR set to: 0
   790                           ;clock.c: 17:             initializeTaskList();
   791  000FFC  EC67  F006         	call	_initializeTaskList	;wreg free
   792  001000                     
   793                           ;clock.c: 18:             PIE1bits.TMR1IE = 1;
   794  001000  809D               	bsf	157,0,c	;volatile
   795  001002                     
   796                           ;clock.c: 19:             PIR1bits.TMR1IF = 0;
   797  001002  909E               	bcf	158,0,c	;volatile
   798  001004                     
   799                           ;clock.c: 20:             T1CON = 0b10000001;
   800  001004  0E81               	movlw	129
   801  001006  6ECD               	movwf	205,c	;volatile
   802  001008                     
   803                           ;clock.c: 21:             TMR1H = 0xB1;
   804  001008  0EB1               	movlw	177
   805  00100A  6ECF               	movwf	207,c	;volatile
   806  00100C                     
   807                           ;clock.c: 22:             TMR1L = 0xE0;
   808  00100C  0EE0               	movlw	224
   809  00100E  6ECE               	movwf	206,c	;volatile
   810                           
   811                           ;clock.c: 23:             break;
   812  001010  EF2B  F008         	goto	l259
   813  001014                     l1969:
   814                           
   815                           ; BSR set to: 0
   816  001014  51A8               	movf	start_timer@timer_vaddr& (0+255),w,b
   817  001016  6FA6               	movwf	??_start_timer& (0+255),b
   818  001018  6BA7               	clrf	(??_start_timer+1)& (0+255),b
   819                           
   820                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   821                           ; Switch size 1, requested type "simple"
   822                           ; Number of cases is 1, Range of values is 0 to 0
   823                           ; switch strategies available:
   824                           ; Name         Instructions Cycles
   825                           ; simple_byte            4     3 (average)
   826                           ;	Chosen strategy is simple_byte
   827  00101A  51A7               	movf	(??_start_timer+1)& (0+255),w,b
   828  00101C  0A00               	xorlw	0	; case 0
   829  00101E  B4D8               	btfsc	status,2,c
   830  001020  EF14  F008         	goto	l2113
   831  001024  EF2B  F008         	goto	l259
   832  001028                     l2113:
   833                           
   834                           ; BSR set to: 0
   835                           ; Switch size 1, requested type "simple"
   836                           ; Number of cases is 5, Range of values is 0 to 4
   837                           ; switch strategies available:
   838                           ; Name         Instructions Cycles
   839                           ; simple_byte           16     9 (average)
   840                           ;	Chosen strategy is simple_byte
   841  001028  51A6               	movf	??_start_timer& (0+255),w,b
   842  00102A  0A00               	xorlw	0	; case 0
   843  00102C  B4D8               	btfsc	status,2,c
   844  00102E  EFEE  F007         	goto	l261
   845  001032  0A01               	xorlw	1	; case 1
   846  001034  B4D8               	btfsc	status,2,c
   847  001036  EFFE  F007         	goto	l1955
   848  00103A  0A03               	xorlw	3	; case 2
   849  00103C  B4D8               	btfsc	status,2,c
   850  00103E  EF2B  F008         	goto	l259
   851  001042  0A01               	xorlw	1	; case 3
   852  001044  B4D8               	btfsc	status,2,c
   853  001046  EF2B  F008         	goto	l259
   854  00104A  0A07               	xorlw	7	; case 4
   855  00104C  B4D8               	btfsc	status,2,c
   856  00104E  EF2B  F008         	goto	l259
   857  001052  EF2B  F008         	goto	l259
   858  001056                     l259:
   859  001056  0012               	return		;funcret
   860  001058                     __end_of_start_timer:
   861                           	opt callstack 0
   862                           
   863 ;; *************** function _initializeTaskList *****************
   864 ;; Defined at:
   865 ;;		line 11 in file "task.c"
   866 ;; Parameters:    Size  Location     Type
   867 ;;		None
   868 ;; Auto vars:     Size  Location     Type
   869 ;;  i               2    6[BANK0 ] int 
   870 ;; Return value:  Size  Location     Type
   871 ;;                  1    wreg      void 
   872 ;; Registers used:
   873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   874 ;; Tracked objects:
   875 ;;		On entry : 0/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   880 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   882 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   883 ;;Total ram usage:        2 bytes
   884 ;; Hardware stack levels used:    1
   885 ;; Hardware stack levels required when called:    7
   886 ;; This function calls:
   887 ;;		___wmul
   888 ;; This function is called by:
   889 ;;		_start_timer
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893                           	psect	text3
   894  000CCE                     __ptext3:
   895                           	opt callstack 0
   896  000CCE                     _initializeTaskList:
   897                           	opt callstack 21
   898  000CCE                     
   899                           ;task.c: 12:     for(int i = 0; i < 20; i++) {
   900  000CCE  0E00               	movlw	0
   901  000CD0  0100               	movlb	0	; () banked
   902  000CD2  6FA5               	movwf	(initializeTaskList@i+1)& (0+255),b
   903  000CD4  0E00               	movlw	0
   904  000CD6  6FA4               	movwf	initializeTaskList@i& (0+255),b
   905  000CD8                     l1935:
   906                           
   907                           ; BSR set to: 0
   908                           ;task.c: 13:         task_list[i].delay_t = 0;
   909  000CD8  C0A4  F09E         	movff	initializeTaskList@i,___wmul@multiplier
   910  000CDC  C0A5  F09F         	movff	initializeTaskList@i+1,___wmul@multiplier+1
   911  000CE0  0E00               	movlw	0
   912  000CE2  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
   913  000CE4  0E0D               	movlw	13
   914  000CE6  6FA0               	movwf	___wmul@multiplicand& (0+255),b
   915  000CE8  EC4F  F009         	call	___wmul	;wreg free
   916  000CEC  0EC9               	movlw	low _task_list
   917  000CEE  0100               	movlb	0	; () banked
   918  000CF0  259E               	addwf	?___wmul& (0+255),w,b
   919  000CF2  6ED9               	movwf	fsr2l,c
   920  000CF4  0E00               	movlw	high _task_list
   921  000CF6  219F               	addwfc	(?___wmul+1)& (0+255),w,b
   922  000CF8  6EDA               	movwf	fsr2h,c
   923  000CFA  6ADE               	clrf	postinc2,c
   924  000CFC  6ADE               	clrf	postinc2,c
   925  000CFE  6ADE               	clrf	postinc2,c
   926  000D00  6ADD               	clrf	postdec2,c
   927                           
   928                           ;task.c: 14:         task_list[i].period_t = 0;
   929  000D02  C0A4  F09E         	movff	initializeTaskList@i,___wmul@multiplier
   930  000D06  C0A5  F09F         	movff	initializeTaskList@i+1,___wmul@multiplier+1
   931  000D0A  0E00               	movlw	0
   932  000D0C  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
   933  000D0E  0E0D               	movlw	13
   934  000D10  6FA0               	movwf	___wmul@multiplicand& (0+255),b
   935  000D12  EC4F  F009         	call	___wmul	;wreg free
   936  000D16  0ECD               	movlw	low (_task_list+4)
   937  000D18  0100               	movlb	0	; () banked
   938  000D1A  259E               	addwf	?___wmul& (0+255),w,b
   939  000D1C  6ED9               	movwf	fsr2l,c
   940  000D1E  0E00               	movlw	high (_task_list+4)
   941  000D20  219F               	addwfc	(?___wmul+1)& (0+255),w,b
   942  000D22  6EDA               	movwf	fsr2h,c
   943  000D24  6ADE               	clrf	postinc2,c
   944  000D26  6ADE               	clrf	postinc2,c
   945  000D28  6ADE               	clrf	postinc2,c
   946  000D2A  6ADD               	clrf	postdec2,c
   947                           
   948                           ;task.c: 15:         task_list[i].func_ptr = ((void*)0);
   949  000D2C  C0A4  F09E         	movff	initializeTaskList@i,___wmul@multiplier
   950  000D30  C0A5  F09F         	movff	initializeTaskList@i+1,___wmul@multiplier+1
   951  000D34  0E00               	movlw	0
   952  000D36  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
   953  000D38  0E0D               	movlw	13
   954  000D3A  6FA0               	movwf	___wmul@multiplicand& (0+255),b
   955  000D3C  EC4F  F009         	call	___wmul	;wreg free
   956  000D40  0ED1               	movlw	low (_task_list+8)
   957  000D42  0100               	movlb	0	; () banked
   958  000D44  259E               	addwf	?___wmul& (0+255),w,b
   959  000D46  6ED9               	movwf	fsr2l,c
   960  000D48  0E00               	movlw	high (_task_list+8)
   961  000D4A  219F               	addwfc	(?___wmul+1)& (0+255),w,b
   962  000D4C  6EDA               	movwf	fsr2h,c
   963  000D4E  0E00               	movlw	0
   964  000D50  6EDE               	movwf	postinc2,c
   965  000D52  0E00               	movlw	0
   966  000D54  6EDE               	movwf	postinc2,c
   967  000D56  0E00               	movlw	0
   968  000D58  6EDE               	movwf	postinc2,c
   969                           
   970                           ;task.c: 16:         task_list[i].next = 105;
   971  000D5A  C0A4  F09E         	movff	initializeTaskList@i,___wmul@multiplier
   972  000D5E  C0A5  F09F         	movff	initializeTaskList@i+1,___wmul@multiplier+1
   973  000D62  0E00               	movlw	0
   974  000D64  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
   975  000D66  0E0D               	movlw	13
   976  000D68  6FA0               	movwf	___wmul@multiplicand& (0+255),b
   977  000D6A  EC4F  F009         	call	___wmul	;wreg free
   978  000D6E  0ED4               	movlw	low (_task_list+11)
   979  000D70  0100               	movlb	0	; () banked
   980  000D72  259E               	addwf	?___wmul& (0+255),w,b
   981  000D74  6ED9               	movwf	fsr2l,c
   982  000D76  0E00               	movlw	high (_task_list+11)
   983  000D78  219F               	addwfc	(?___wmul+1)& (0+255),w,b
   984  000D7A  6EDA               	movwf	fsr2h,c
   985  000D7C  0E69               	movlw	105
   986  000D7E  6EDE               	movwf	postinc2,c
   987  000D80  0E00               	movlw	0
   988  000D82  6EDD               	movwf	postdec2,c
   989  000D84                     
   990                           ; BSR set to: 0
   991                           ;task.c: 17:     }
   992  000D84  4BA4               	infsnz	initializeTaskList@i& (0+255),f,b
   993  000D86  2BA5               	incf	(initializeTaskList@i+1)& (0+255),f,b
   994  000D88                     
   995                           ; BSR set to: 0
   996  000D88  BFA5               	btfsc	(initializeTaskList@i+1)& (0+255),7,b
   997  000D8A  EFD0  F006         	goto	u1831
   998  000D8E  51A5               	movf	(initializeTaskList@i+1)& (0+255),w,b
   999  000D90  E109               	bnz	u1830
  1000  000D92  0E14               	movlw	20
  1001  000D94  5DA4               	subwf	initializeTaskList@i& (0+255),w,b
  1002  000D96  A0D8               	btfss	status,0,c
  1003  000D98  EFD0  F006         	goto	u1831
  1004  000D9C  EFD2  F006         	goto	u1830
  1005  000DA0                     u1831:
  1006  000DA0  EF6C  F006         	goto	l1935
  1007  000DA4                     u1830:
  1008  000DA4                     
  1009                           ; BSR set to: 0
  1010                           ;task.c: 18:     num_task = 0;
  1011  000DA4  0E00               	movlw	0
  1012  000DA6  6E42               	movwf	_num_task^0,c
  1013                           
  1014                           ;task.c: 19:     head = 105;
  1015  000DA8  0E00               	movlw	0
  1016  000DAA  6F9D               	movwf	(_head+1)& (0+255),b
  1017  000DAC  0E69               	movlw	105
  1018  000DAE  6F9C               	movwf	_head& (0+255),b
  1019  000DB0                     
  1020                           ; BSR set to: 0
  1021  000DB0  0012               	return		;funcret
  1022  000DB2                     __end_of_initializeTaskList:
  1023                           	opt callstack 0
  1024                           
  1025 ;; *************** function _pin_initialize *****************
  1026 ;; Defined at:
  1027 ;;		line 7 in file "mcc.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;		None
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;		None
  1032 ;; Return value:  Size  Location     Type
  1033 ;;                  1    wreg      void 
  1034 ;; Registers used:
  1035 ;;		wreg, status,2
  1036 ;; Tracked objects:
  1037 ;;		On entry : 0/0
  1038 ;;		On exit  : 0/0
  1039 ;;		Unchanged: 0/0
  1040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1045 ;;Total ram usage:        0 bytes
  1046 ;; Hardware stack levels used:    1
  1047 ;; Hardware stack levels required when called:    6
  1048 ;; This function calls:
  1049 ;;		Nothing
  1050 ;; This function is called by:
  1051 ;;		_system_initialize
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055                           	psect	text4
  1056  001446                     __ptext4:
  1057                           	opt callstack 0
  1058  001446                     _pin_initialize:
  1059                           	opt callstack 23
  1060  001446                     
  1061                           ;mcc.c: 8:     LATC = 0x00;
  1062  001446  0E00               	movlw	0
  1063  001448  6E8B               	movwf	139,c	;volatile
  1064                           
  1065                           ;mcc.c: 9:     TRISC = 0xD7;
  1066  00144A  0ED7               	movlw	215
  1067  00144C  6E94               	movwf	148,c	;volatile
  1068                           
  1069                           ;mcc.c: 10:     ADCON1 = 0b00001111;
  1070  00144E  0E0F               	movlw	15
  1071  001450  6EC1               	movwf	193,c	;volatile
  1072                           
  1073                           ;mcc.c: 13:     LATD = 0x00;
  1074  001452  0E00               	movlw	0
  1075  001454  6E8C               	movwf	140,c	;volatile
  1076                           
  1077                           ;mcc.c: 14:     TRISD = 0x00;
  1078  001456  0E00               	movlw	0
  1079  001458  6E95               	movwf	149,c	;volatile
  1080  00145A  0012               	return		;funcret
  1081  00145C                     __end_of_pin_initialize:
  1082                           	opt callstack 0
  1083                           
  1084 ;; *************** function _osc_initialize *****************
  1085 ;; Defined at:
  1086 ;;		line 3 in file "mcc.c"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;		None
  1089 ;; Auto vars:     Size  Location     Type
  1090 ;;		None
  1091 ;; Return value:  Size  Location     Type
  1092 ;;                  1    wreg      void 
  1093 ;; Registers used:
  1094 ;;		wreg, status,2
  1095 ;; Tracked objects:
  1096 ;;		On entry : 0/0
  1097 ;;		On exit  : 0/0
  1098 ;;		Unchanged: 0/0
  1099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1104 ;;Total ram usage:        0 bytes
  1105 ;; Hardware stack levels used:    1
  1106 ;; Hardware stack levels required when called:    6
  1107 ;; This function calls:
  1108 ;;		Nothing
  1109 ;; This function is called by:
  1110 ;;		_system_initialize
  1111 ;; This function uses a non-reentrant model
  1112 ;;
  1113                           
  1114                           	psect	text5
  1115  001472                     __ptext5:
  1116                           	opt callstack 0
  1117  001472                     _osc_initialize:
  1118                           	opt callstack 23
  1119  001472                     
  1120                           ;mcc.c: 4:     OSCCON = 0x70;
  1121  001472  0E70               	movlw	112
  1122  001474  6ED3               	movwf	211,c	;volatile
  1123  001476  0012               	return		;funcret
  1124  001478                     __end_of_osc_initialize:
  1125                           	opt callstack 0
  1126                           
  1127 ;; *************** function _interrupt_initialize *****************
  1128 ;; Defined at:
  1129 ;;		line 17 in file "mcc.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;		None
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;		None
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  1    wreg      void 
  1136 ;; Registers used:
  1137 ;;		None
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1147 ;;Total ram usage:        0 bytes
  1148 ;; Hardware stack levels used:    1
  1149 ;; Hardware stack levels required when called:    6
  1150 ;; This function calls:
  1151 ;;		Nothing
  1152 ;; This function is called by:
  1153 ;;		_system_initialize
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           	psect	text6
  1158  001478                     __ptext6:
  1159                           	opt callstack 0
  1160  001478                     _interrupt_initialize:
  1161                           	opt callstack 23
  1162  001478                     
  1163                           ;mcc.c: 18:     INTCONbits.GIE = 1;
  1164  001478  8EF2               	bsf	242,7,c	;volatile
  1165                           
  1166                           ;mcc.c: 19:     INTCONbits.PEIE = 1;
  1167  00147A  8CF2               	bsf	242,6,c	;volatile
  1168  00147C  0012               	return		;funcret
  1169  00147E                     __end_of_interrupt_initialize:
  1170                           	opt callstack 0
  1171                           
  1172 ;; *************** function _register_timer *****************
  1173 ;; Defined at:
  1174 ;;		line 38 in file "clock.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;  period          4   30[BANK0 ] unsigned long 
  1177 ;;  delay           4   34[BANK0 ] unsigned long 
  1178 ;;  callback        3   38[BANK0 ] PTR FTN()void 
  1179 ;;		 -> blink_LED5(1), blink_LED4(1), blink_LED3(1), blink_LED2(1), 
  1180 ;;		 -> blink_LED1(1), blink_LED0(1), 
  1181 ;;  data            2   41[BANK0 ] PTR void 
  1182 ;;		 -> NULL(0), 
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;		None
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  1    wreg      unsigned char 
  1187 ;; Registers used:
  1188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1194 ;;      Params:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1197 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1198 ;;Total ram usage:       13 bytes
  1199 ;; Hardware stack levels used:    1
  1200 ;; Hardware stack levels required when called:    8
  1201 ;; This function calls:
  1202 ;;		_addTask
  1203 ;; This function is called by:
  1204 ;;		_main
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           
  1208                           	psect	text7
  1209  001240                     __ptext7:
  1210                           	opt callstack 0
  1211  001240                     _register_timer:
  1212                           	opt callstack 22
  1213  001240                     
  1214                           ;clock.c: 39:     return addTask(period, delay, callback);
  1215  001240  C0BC  F0A4         	movff	register_timer@period,addTask@period
  1216  001244  C0BD  F0A5         	movff	register_timer@period+1,addTask@period+1
  1217  001248  C0BE  F0A6         	movff	register_timer@period+2,addTask@period+2
  1218  00124C  C0BF  F0A7         	movff	register_timer@period+3,addTask@period+3
  1219  001250  C0C0  F0A8         	movff	register_timer@delay,addTask@delay
  1220  001254  C0C1  F0A9         	movff	register_timer@delay+1,addTask@delay+1
  1221  001258  C0C2  F0AA         	movff	register_timer@delay+2,addTask@delay+2
  1222  00125C  C0C3  F0AB         	movff	register_timer@delay+3,addTask@delay+3
  1223  001260  C0C4  F0AC         	movff	register_timer@callback,addTask@ptr
  1224  001264  C0C5  F0AD         	movff	register_timer@callback+1,addTask@ptr+1
  1225  001268  C0C6  F0AE         	movff	register_timer@callback+2,addTask@ptr+2
  1226  00126C  ECF5  F002         	call	_addTask	;wreg free
  1227  001270  0012               	return		;funcret
  1228  001272                     __end_of_register_timer:
  1229                           	opt callstack 0
  1230                           
  1231 ;; *************** function _addTask *****************
  1232 ;; Defined at:
  1233 ;;		line 22 in file "task.c"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;  period          4    6[BANK0 ] unsigned long 
  1236 ;;  delay           4   10[BANK0 ] unsigned long 
  1237 ;;  ptr             3   14[BANK0 ] PTR FTN()void 
  1238 ;;		 -> blink_LED5(1), blink_LED4(1), blink_LED3(1), blink_LED2(1), 
  1239 ;;		 -> blink_LED1(1), blink_LED0(1), 
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;  cur             2   27[BANK0 ] int 
  1242 ;;  prev            2   25[BANK0 ] int 
  1243 ;;  idx             1   29[BANK0 ] unsigned char 
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  1    wreg      unsigned char 
  1246 ;; Registers used:
  1247 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1253 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1254 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1255 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1256 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1257 ;;Total ram usage:       24 bytes
  1258 ;; Hardware stack levels used:    1
  1259 ;; Hardware stack levels required when called:    7
  1260 ;; This function calls:
  1261 ;;		___wmul
  1262 ;;		_isFullList
  1263 ;; This function is called by:
  1264 ;;		_register_timer
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268                           	psect	text8
  1269  0005EA                     __ptext8:
  1270                           	opt callstack 0
  1271  0005EA                     _addTask:
  1272                           	opt callstack 22
  1273  0005EA                     
  1274                           ;task.c: 23:     if(isFullList())
  1275  0005EA  EC17  F00A         	call	_isFullList	;wreg free
  1276  0005EE  0900               	iorlw	0
  1277  0005F0  B4D8               	btfsc	status,2,c
  1278  0005F2  EFFD  F002         	goto	u1851
  1279  0005F6  EFFF  F002         	goto	u1850
  1280  0005FA                     u1851:
  1281  0005FA  EF02  F003         	goto	l1983
  1282  0005FE                     u1850:
  1283  0005FE                     l1979:
  1284                           
  1285                           ;task.c: 24:         return 109;
  1286  0005FE  0E6D               	movlw	109
  1287  000600  EFE6  F004         	goto	l158
  1288  000604                     l1983:
  1289                           
  1290                           ;task.c: 25:     char idx;;task.c: 26:     for(idx = 0; idx < 20; idx++) {
  1291  000604  0E00               	movlw	0
  1292  000606  0100               	movlb	0	; () banked
  1293  000608  6FBB               	movwf	addTask@idx& (0+255),b
  1294  00060A                     l1989:
  1295                           
  1296                           ; BSR set to: 0
  1297                           ;task.c: 27:         if(task_list[idx].func_ptr == ((void*)0))
  1298  00060A  51BB               	movf	addTask@idx& (0+255),w,b
  1299  00060C  0D0D               	mullw	13
  1300  00060E  0ED1               	movlw	low (_task_list+8)
  1301  000610  24F3               	addwf	243,w,c
  1302  000612  6ED9               	movwf	fsr2l,c
  1303  000614  0E00               	movlw	high (_task_list+8)
  1304  000616  20F4               	addwfc	prodh,w,c
  1305  000618  6EDA               	movwf	fsr2h,c
  1306  00061A  50DE               	movf	postinc2,w,c
  1307  00061C  10DE               	iorwf	postinc2,w,c
  1308  00061E  10DE               	iorwf	postinc2,w,c
  1309  000620  A4D8               	btfss	status,2,c
  1310  000622  EF15  F003         	goto	u1861
  1311  000626  EF17  F003         	goto	u1860
  1312  00062A                     u1861:
  1313  00062A  EF19  F003         	goto	l1993
  1314  00062E                     u1860:
  1315  00062E  EF22  F003         	goto	l1997
  1316  000632                     l1993:
  1317                           
  1318                           ; BSR set to: 0
  1319                           ;task.c: 29:     }
  1320  000632  2BBB               	incf	addTask@idx& (0+255),f,b
  1321  000634                     
  1322                           ; BSR set to: 0
  1323  000634  0E13               	movlw	19
  1324  000636  65BB               	cpfsgt	addTask@idx& (0+255),b
  1325  000638  EF20  F003         	goto	u1871
  1326  00063C  EF22  F003         	goto	u1870
  1327  000640                     u1871:
  1328  000640  EF05  F003         	goto	l1989
  1329  000644                     u1870:
  1330  000644                     l1997:
  1331                           
  1332                           ; BSR set to: 0
  1333                           ;task.c: 30:     if(idx == 20)
  1334  000644  0E14               	movlw	20
  1335  000646  19BB               	xorwf	addTask@idx& (0+255),w,b
  1336  000648  A4D8               	btfss	status,2,c
  1337  00064A  EF29  F003         	goto	u1881
  1338  00064E  EF2B  F003         	goto	u1880
  1339  000652                     u1881:
  1340  000652  EF2D  F003         	goto	l2003
  1341  000656                     u1880:
  1342  000656  EFFF  F002         	goto	l1979
  1343  00065A                     l2003:
  1344                           
  1345                           ; BSR set to: 0
  1346                           ;task.c: 35:     task_list[idx].delay_t = delay;
  1347  00065A  51BB               	movf	addTask@idx& (0+255),w,b
  1348  00065C  0D0D               	mullw	13
  1349  00065E  0EC9               	movlw	low _task_list
  1350  000660  24F3               	addwf	243,w,c
  1351  000662  6ED9               	movwf	fsr2l,c
  1352  000664  0E00               	movlw	high _task_list
  1353  000666  20F4               	addwfc	prodh,w,c
  1354  000668  6EDA               	movwf	fsr2h,c
  1355  00066A  C0A8  FFDE         	movff	addTask@delay,postinc2
  1356  00066E  C0A9  FFDE         	movff	addTask@delay+1,postinc2
  1357  000672  C0AA  FFDE         	movff	addTask@delay+2,postinc2
  1358  000676  C0AB  FFDE         	movff	addTask@delay+3,postinc2
  1359                           
  1360                           ;task.c: 36:     task_list[idx].period_t = period;
  1361  00067A  51BB               	movf	addTask@idx& (0+255),w,b
  1362  00067C  0D0D               	mullw	13
  1363  00067E  0ECD               	movlw	low (_task_list+4)
  1364  000680  24F3               	addwf	243,w,c
  1365  000682  6ED9               	movwf	fsr2l,c
  1366  000684  0E00               	movlw	high (_task_list+4)
  1367  000686  20F4               	addwfc	prodh,w,c
  1368  000688  6EDA               	movwf	fsr2h,c
  1369  00068A  C0A4  FFDE         	movff	addTask@period,postinc2
  1370  00068E  C0A5  FFDE         	movff	addTask@period+1,postinc2
  1371  000692  C0A6  FFDE         	movff	addTask@period+2,postinc2
  1372  000696  C0A7  FFDE         	movff	addTask@period+3,postinc2
  1373                           
  1374                           ;task.c: 37:     task_list[idx].func_ptr = ptr;
  1375  00069A  51BB               	movf	addTask@idx& (0+255),w,b
  1376  00069C  0D0D               	mullw	13
  1377  00069E  0ED1               	movlw	low (_task_list+8)
  1378  0006A0  24F3               	addwf	243,w,c
  1379  0006A2  6ED9               	movwf	fsr2l,c
  1380  0006A4  0E00               	movlw	high (_task_list+8)
  1381  0006A6  20F4               	addwfc	prodh,w,c
  1382  0006A8  6EDA               	movwf	fsr2h,c
  1383  0006AA  C0AC  FFDE         	movff	addTask@ptr,postinc2
  1384  0006AE  C0AD  FFDE         	movff	addTask@ptr+1,postinc2
  1385  0006B2  C0AE  FFDE         	movff	addTask@ptr+2,postinc2
  1386  0006B6                     
  1387                           ; BSR set to: 0
  1388                           ;task.c: 38:     num_task++;
  1389  0006B6  2A42               	incf	_num_task^0,f,c
  1390  0006B8                     
  1391                           ; BSR set to: 0
  1392                           ;task.c: 39:     if(head == 105 || (head != 105 && task_list[head].delay_t > task_list[i
      +                          dx].delay_t)) {
  1393  0006B8  0E69               	movlw	105
  1394  0006BA  199C               	xorwf	_head& (0+255),w,b
  1395  0006BC  119D               	iorwf	(_head+1)& (0+255),w,b
  1396  0006BE  B4D8               	btfsc	status,2,c
  1397  0006C0  EF64  F003         	goto	u1891
  1398  0006C4  EF66  F003         	goto	u1890
  1399  0006C8                     u1891:
  1400  0006C8  EF98  F003         	goto	l2013
  1401  0006CC                     u1890:
  1402  0006CC                     
  1403                           ; BSR set to: 0
  1404  0006CC  0E69               	movlw	105
  1405  0006CE  199C               	xorwf	_head& (0+255),w,b
  1406  0006D0  119D               	iorwf	(_head+1)& (0+255),w,b
  1407  0006D2  B4D8               	btfsc	status,2,c
  1408  0006D4  EF6E  F003         	goto	u1901
  1409  0006D8  EF70  F003         	goto	u1900
  1410  0006DC                     u1901:
  1411  0006DC  EFA9  F003         	goto	l2017
  1412  0006E0                     u1900:
  1413  0006E0                     
  1414                           ; BSR set to: 0
  1415  0006E0  C09C  F09E         	movff	_head,___wmul@multiplier
  1416  0006E4  C09D  F09F         	movff	_head+1,___wmul@multiplier+1
  1417  0006E8  0E00               	movlw	0
  1418  0006EA  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1419  0006EC  0E0D               	movlw	13
  1420  0006EE  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  1421  0006F0  EC4F  F009         	call	___wmul	;wreg free
  1422  0006F4  0EC9               	movlw	low _task_list
  1423  0006F6  0100               	movlb	0	; () banked
  1424  0006F8  259E               	addwf	?___wmul& (0+255),w,b
  1425  0006FA  6ED9               	movwf	fsr2l,c
  1426  0006FC  0E00               	movlw	high _task_list
  1427  0006FE  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  1428  000700  6EDA               	movwf	fsr2h,c
  1429  000702  51BB               	movf	addTask@idx& (0+255),w,b
  1430  000704  0D0D               	mullw	13
  1431  000706  0EC9               	movlw	low _task_list
  1432  000708  24F3               	addwf	243,w,c
  1433  00070A  6EE1               	movwf	fsr1l,c
  1434  00070C  0E00               	movlw	high _task_list
  1435  00070E  20F4               	addwfc	prodh,w,c
  1436  000710  6EE2               	movwf	fsr1h,c
  1437  000712  50DE               	movf	postinc2,w,c
  1438  000714  5CE6               	subwf	postinc1,w,c
  1439  000716  50DE               	movf	postinc2,w,c
  1440  000718  58E6               	subwfb	postinc1,w,c
  1441  00071A  50DE               	movf	postinc2,w,c
  1442  00071C  58E6               	subwfb	postinc1,w,c
  1443  00071E  50DE               	movf	postinc2,w,c
  1444  000720  58E6               	subwfb	postinc1,w,c
  1445  000722  B0D8               	btfsc	status,0,c
  1446  000724  EF96  F003         	goto	u1911
  1447  000728  EF98  F003         	goto	u1910
  1448  00072C                     u1911:
  1449  00072C  EFA9  F003         	goto	l2017
  1450  000730                     u1910:
  1451  000730                     l2013:
  1452                           
  1453                           ; BSR set to: 0
  1454                           ;task.c: 40:         task_list[idx].next = head;
  1455  000730  51BB               	movf	addTask@idx& (0+255),w,b
  1456  000732  0D0D               	mullw	13
  1457  000734  0ED4               	movlw	low (_task_list+11)
  1458  000736  24F3               	addwf	243,w,c
  1459  000738  6ED9               	movwf	fsr2l,c
  1460  00073A  0E00               	movlw	high (_task_list+11)
  1461  00073C  20F4               	addwfc	prodh,w,c
  1462  00073E  6EDA               	movwf	fsr2h,c
  1463  000740  C09C  FFDE         	movff	_head,postinc2
  1464  000744  C09D  FFDD         	movff	_head+1,postdec2
  1465  000748                     
  1466                           ; BSR set to: 0
  1467                           ;task.c: 41:         head = idx;
  1468  000748  C0BB  F09C         	movff	addTask@idx,_head
  1469  00074C  6B9D               	clrf	(_head+1)& (0+255),b
  1470                           
  1471                           ;task.c: 43:     }
  1472  00074E  EF85  F004         	goto	l2035
  1473  000752                     l2017:
  1474                           
  1475                           ; BSR set to: 0
  1476                           ;task.c: 45:         delay = delay - task_list[head].delay_t;
  1477  000752  C09C  F09E         	movff	_head,___wmul@multiplier
  1478  000756  C09D  F09F         	movff	_head+1,___wmul@multiplier+1
  1479  00075A  0E00               	movlw	0
  1480  00075C  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1481  00075E  0E0D               	movlw	13
  1482  000760  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  1483  000762  EC4F  F009         	call	___wmul	;wreg free
  1484  000766  0EC9               	movlw	low _task_list
  1485  000768  0100               	movlb	0	; () banked
  1486  00076A  259E               	addwf	?___wmul& (0+255),w,b
  1487  00076C  6ED9               	movwf	fsr2l,c
  1488  00076E  0E00               	movlw	high _task_list
  1489  000770  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  1490  000772  6EDA               	movwf	fsr2h,c
  1491  000774  CFDE F0AF          	movff	postinc2,??_addTask
  1492  000778  CFDE F0B0          	movff	postinc2,??_addTask+1
  1493  00077C  CFDE F0B1          	movff	postinc2,??_addTask+2
  1494  000780  CFDE F0B2          	movff	postinc2,??_addTask+3
  1495  000784  51AF               	movf	??_addTask& (0+255),w,b
  1496  000786  5DA8               	subwf	addTask@delay& (0+255),w,b
  1497  000788  6FA8               	movwf	addTask@delay& (0+255),b
  1498  00078A  51B0               	movf	(??_addTask+1)& (0+255),w,b
  1499  00078C  59A9               	subwfb	(addTask@delay+1)& (0+255),w,b
  1500  00078E  6FA9               	movwf	(addTask@delay+1)& (0+255),b
  1501  000790  51B1               	movf	(??_addTask+2)& (0+255),w,b
  1502  000792  59AA               	subwfb	(addTask@delay+2)& (0+255),w,b
  1503  000794  6FAA               	movwf	(addTask@delay+2)& (0+255),b
  1504  000796  51B2               	movf	(??_addTask+3)& (0+255),w,b
  1505  000798  59AB               	subwfb	(addTask@delay+3)& (0+255),w,b
  1506  00079A  6FAB               	movwf	(addTask@delay+3)& (0+255),b
  1507                           
  1508                           ;task.c: 46:         int cur = task_list[head].next;
  1509  00079C  C09C  F09E         	movff	_head,___wmul@multiplier
  1510  0007A0  C09D  F09F         	movff	_head+1,___wmul@multiplier+1
  1511  0007A4  0E00               	movlw	0
  1512  0007A6  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1513  0007A8  0E0D               	movlw	13
  1514  0007AA  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  1515  0007AC  EC4F  F009         	call	___wmul	;wreg free
  1516  0007B0  0ED4               	movlw	low (_task_list+11)
  1517  0007B2  0100               	movlb	0	; () banked
  1518  0007B4  259E               	addwf	?___wmul& (0+255),w,b
  1519  0007B6  6ED9               	movwf	fsr2l,c
  1520  0007B8  0E00               	movlw	high (_task_list+11)
  1521  0007BA  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  1522  0007BC  6EDA               	movwf	fsr2h,c
  1523  0007BE  CFDE F0B9          	movff	postinc2,addTask@cur
  1524  0007C2  CFDD F0BA          	movff	postdec2,addTask@cur+1
  1525  0007C6                     
  1526                           ; BSR set to: 0
  1527                           ;task.c: 47:         int prev = head;
  1528  0007C6  C09C  F0B7         	movff	_head,addTask@prev
  1529  0007CA  C09D  F0B8         	movff	_head+1,addTask@prev+1
  1530                           
  1531                           ;task.c: 48:         while(cur != 105 && task_list[cur].delay_t <= delay) {
  1532  0007CE  EF27  F004         	goto	l2025
  1533  0007D2                     l2021:
  1534                           
  1535                           ; BSR set to: 0
  1536                           ;task.c: 49:             delay = delay - task_list[cur].delay_t;
  1537  0007D2  C0B9  F09E         	movff	addTask@cur,___wmul@multiplier
  1538  0007D6  C0BA  F09F         	movff	addTask@cur+1,___wmul@multiplier+1
  1539  0007DA  0E00               	movlw	0
  1540  0007DC  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1541  0007DE  0E0D               	movlw	13
  1542  0007E0  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  1543  0007E2  EC4F  F009         	call	___wmul	;wreg free
  1544  0007E6  0EC9               	movlw	low _task_list
  1545  0007E8  0100               	movlb	0	; () banked
  1546  0007EA  259E               	addwf	?___wmul& (0+255),w,b
  1547  0007EC  6ED9               	movwf	fsr2l,c
  1548  0007EE  0E00               	movlw	high _task_list
  1549  0007F0  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  1550  0007F2  6EDA               	movwf	fsr2h,c
  1551  0007F4  CFDE F0AF          	movff	postinc2,??_addTask
  1552  0007F8  CFDE F0B0          	movff	postinc2,??_addTask+1
  1553  0007FC  CFDE F0B1          	movff	postinc2,??_addTask+2
  1554  000800  CFDE F0B2          	movff	postinc2,??_addTask+3
  1555  000804  51AF               	movf	??_addTask& (0+255),w,b
  1556  000806  5DA8               	subwf	addTask@delay& (0+255),w,b
  1557  000808  6FA8               	movwf	addTask@delay& (0+255),b
  1558  00080A  51B0               	movf	(??_addTask+1)& (0+255),w,b
  1559  00080C  59A9               	subwfb	(addTask@delay+1)& (0+255),w,b
  1560  00080E  6FA9               	movwf	(addTask@delay+1)& (0+255),b
  1561  000810  51B1               	movf	(??_addTask+2)& (0+255),w,b
  1562  000812  59AA               	subwfb	(addTask@delay+2)& (0+255),w,b
  1563  000814  6FAA               	movwf	(addTask@delay+2)& (0+255),b
  1564  000816  51B2               	movf	(??_addTask+3)& (0+255),w,b
  1565  000818  59AB               	subwfb	(addTask@delay+3)& (0+255),w,b
  1566  00081A  6FAB               	movwf	(addTask@delay+3)& (0+255),b
  1567  00081C                     
  1568                           ; BSR set to: 0
  1569                           ;task.c: 50:             prev = cur;
  1570  00081C  C0B9  F0B7         	movff	addTask@cur,addTask@prev
  1571  000820  C0BA  F0B8         	movff	addTask@cur+1,addTask@prev+1
  1572                           
  1573                           ;task.c: 51:             cur = task_list[cur].next;
  1574  000824  C0B9  F09E         	movff	addTask@cur,___wmul@multiplier
  1575  000828  C0BA  F09F         	movff	addTask@cur+1,___wmul@multiplier+1
  1576  00082C  0E00               	movlw	0
  1577  00082E  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1578  000830  0E0D               	movlw	13
  1579  000832  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  1580  000834  EC4F  F009         	call	___wmul	;wreg free
  1581  000838  0ED4               	movlw	low (_task_list+11)
  1582  00083A  0100               	movlb	0	; () banked
  1583  00083C  259E               	addwf	?___wmul& (0+255),w,b
  1584  00083E  6ED9               	movwf	fsr2l,c
  1585  000840  0E00               	movlw	high (_task_list+11)
  1586  000842  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  1587  000844  6EDA               	movwf	fsr2h,c
  1588  000846  CFDE F0B9          	movff	postinc2,addTask@cur
  1589  00084A  CFDD F0BA          	movff	postdec2,addTask@cur+1
  1590  00084E                     l2025:
  1591                           
  1592                           ; BSR set to: 0
  1593                           ;task.c: 48:         while(cur != 105 && task_list[cur].delay_t <= delay) {
  1594  00084E  0E69               	movlw	105
  1595  000850  19B9               	xorwf	addTask@cur& (0+255),w,b
  1596  000852  11BA               	iorwf	(addTask@cur+1)& (0+255),w,b
  1597  000854  B4D8               	btfsc	status,2,c
  1598  000856  EF2F  F004         	goto	u1921
  1599  00085A  EF31  F004         	goto	u1920
  1600  00085E                     u1921:
  1601  00085E  EF51  F004         	goto	l2029
  1602  000862                     u1920:
  1603  000862                     
  1604                           ; BSR set to: 0
  1605  000862  C0B9  F09E         	movff	addTask@cur,___wmul@multiplier
  1606  000866  C0BA  F09F         	movff	addTask@cur+1,___wmul@multiplier+1
  1607  00086A  0E00               	movlw	0
  1608  00086C  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1609  00086E  0E0D               	movlw	13
  1610  000870  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  1611  000872  EC4F  F009         	call	___wmul	;wreg free
  1612  000876  0EC9               	movlw	low _task_list
  1613  000878  0100               	movlb	0	; () banked
  1614  00087A  259E               	addwf	?___wmul& (0+255),w,b
  1615  00087C  6ED9               	movwf	fsr2l,c
  1616  00087E  0E00               	movlw	high _task_list
  1617  000880  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  1618  000882  6EDA               	movwf	fsr2h,c
  1619  000884  50DE               	movf	postinc2,w,c
  1620  000886  5DA8               	subwf	addTask@delay& (0+255),w,b
  1621  000888  50DE               	movf	postinc2,w,c
  1622  00088A  59A9               	subwfb	(addTask@delay+1)& (0+255),w,b
  1623  00088C  50DE               	movf	postinc2,w,c
  1624  00088E  59AA               	subwfb	(addTask@delay+2)& (0+255),w,b
  1625  000890  50DE               	movf	postinc2,w,c
  1626  000892  59AB               	subwfb	(addTask@delay+3)& (0+255),w,b
  1627  000894  B0D8               	btfsc	status,0,c
  1628  000896  EF4F  F004         	goto	u1931
  1629  00089A  EF51  F004         	goto	u1930
  1630  00089E                     u1931:
  1631  00089E  EFE9  F003         	goto	l2021
  1632  0008A2                     u1930:
  1633  0008A2                     l2029:
  1634                           
  1635                           ; BSR set to: 0
  1636                           ;task.c: 53:         task_list[prev].next = idx;
  1637  0008A2  51BB               	movf	addTask@idx& (0+255),w,b
  1638  0008A4  6FAF               	movwf	??_addTask& (0+255),b
  1639  0008A6  6BB0               	clrf	(??_addTask+1)& (0+255),b
  1640  0008A8  C0B7  F09E         	movff	addTask@prev,___wmul@multiplier
  1641  0008AC  C0B8  F09F         	movff	addTask@prev+1,___wmul@multiplier+1
  1642  0008B0  0E00               	movlw	0
  1643  0008B2  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1644  0008B4  0E0D               	movlw	13
  1645  0008B6  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  1646  0008B8  EC4F  F009         	call	___wmul	;wreg free
  1647  0008BC  0ED4               	movlw	low (_task_list+11)
  1648  0008BE  0100               	movlb	0	; () banked
  1649  0008C0  259E               	addwf	?___wmul& (0+255),w,b
  1650  0008C2  6ED9               	movwf	fsr2l,c
  1651  0008C4  0E00               	movlw	high (_task_list+11)
  1652  0008C6  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  1653  0008C8  6EDA               	movwf	fsr2h,c
  1654  0008CA  C0AF  FFDE         	movff	??_addTask,postinc2
  1655  0008CE  C0B0  FFDD         	movff	??_addTask+1,postdec2
  1656  0008D2                     
  1657                           ; BSR set to: 0
  1658                           ;task.c: 54:         task_list[idx].next = cur;
  1659  0008D2  51BB               	movf	addTask@idx& (0+255),w,b
  1660  0008D4  0D0D               	mullw	13
  1661  0008D6  0ED4               	movlw	low (_task_list+11)
  1662  0008D8  24F3               	addwf	243,w,c
  1663  0008DA  6ED9               	movwf	fsr2l,c
  1664  0008DC  0E00               	movlw	high (_task_list+11)
  1665  0008DE  20F4               	addwfc	prodh,w,c
  1666  0008E0  6EDA               	movwf	fsr2h,c
  1667  0008E2  C0B9  FFDE         	movff	addTask@cur,postinc2
  1668  0008E6  C0BA  FFDD         	movff	addTask@cur+1,postdec2
  1669  0008EA                     
  1670                           ; BSR set to: 0
  1671                           ;task.c: 55:         task_list[idx].delay_t = delay;
  1672  0008EA  51BB               	movf	addTask@idx& (0+255),w,b
  1673  0008EC  0D0D               	mullw	13
  1674  0008EE  0EC9               	movlw	low _task_list
  1675  0008F0  24F3               	addwf	243,w,c
  1676  0008F2  6ED9               	movwf	fsr2l,c
  1677  0008F4  0E00               	movlw	high _task_list
  1678  0008F6  20F4               	addwfc	prodh,w,c
  1679  0008F8  6EDA               	movwf	fsr2h,c
  1680  0008FA  C0A8  FFDE         	movff	addTask@delay,postinc2
  1681  0008FE  C0A9  FFDE         	movff	addTask@delay+1,postinc2
  1682  000902  C0AA  FFDE         	movff	addTask@delay+2,postinc2
  1683  000906  C0AB  FFDE         	movff	addTask@delay+3,postinc2
  1684  00090A                     l2035:
  1685                           
  1686                           ; BSR set to: 0
  1687                           ;task.c: 57:     if(task_list[idx].next != 105)
  1688  00090A  51BB               	movf	addTask@idx& (0+255),w,b
  1689  00090C  0D0D               	mullw	13
  1690  00090E  0ED4               	movlw	low (_task_list+11)
  1691  000910  24F3               	addwf	243,w,c
  1692  000912  6ED9               	movwf	fsr2l,c
  1693  000914  0E00               	movlw	high (_task_list+11)
  1694  000916  20F4               	addwfc	prodh,w,c
  1695  000918  6EDA               	movwf	fsr2h,c
  1696  00091A  0E69               	movlw	105
  1697  00091C  18DE               	xorwf	postinc2,w,c
  1698  00091E  10DE               	iorwf	postinc2,w,c
  1699  000920  B4D8               	btfsc	status,2,c
  1700  000922  EF95  F004         	goto	u1941
  1701  000926  EF97  F004         	goto	u1940
  1702  00092A                     u1941:
  1703  00092A  EFE5  F004         	goto	l2039
  1704  00092E                     u1940:
  1705  00092E                     
  1706                           ; BSR set to: 0
  1707                           ;task.c: 58:         task_list[task_list[idx].next].delay_t = task_list[task_list[idx].n
      +                          ext].delay_t - delay;
  1708  00092E  51BB               	movf	addTask@idx& (0+255),w,b
  1709  000930  0D0D               	mullw	13
  1710  000932  0ED4               	movlw	low (_task_list+11)
  1711  000934  24F3               	addwf	243,w,c
  1712  000936  6ED9               	movwf	fsr2l,c
  1713  000938  0E00               	movlw	high (_task_list+11)
  1714  00093A  20F4               	addwfc	prodh,w,c
  1715  00093C  6EDA               	movwf	fsr2h,c
  1716  00093E  CFDE F09E          	movff	postinc2,___wmul@multiplier
  1717  000942  CFDD F09F          	movff	postdec2,___wmul@multiplier+1
  1718  000946  0E00               	movlw	0
  1719  000948  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1720  00094A  0E0D               	movlw	13
  1721  00094C  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  1722  00094E  EC4F  F009         	call	___wmul	;wreg free
  1723  000952  0EC9               	movlw	low _task_list
  1724  000954  0100               	movlb	0	; () banked
  1725  000956  259E               	addwf	?___wmul& (0+255),w,b
  1726  000958  6ED9               	movwf	fsr2l,c
  1727  00095A  0E00               	movlw	high _task_list
  1728  00095C  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  1729  00095E  6EDA               	movwf	fsr2h,c
  1730  000960  CFDE F0AF          	movff	postinc2,??_addTask
  1731  000964  CFDE F0B0          	movff	postinc2,??_addTask+1
  1732  000968  CFDE F0B1          	movff	postinc2,??_addTask+2
  1733  00096C  CFDE F0B2          	movff	postinc2,??_addTask+3
  1734  000970  51A8               	movf	addTask@delay& (0+255),w,b
  1735  000972  5DAF               	subwf	??_addTask& (0+255),w,b
  1736  000974  6FB3               	movwf	(??_addTask+4)& (0+255),b
  1737  000976  51A9               	movf	(addTask@delay+1)& (0+255),w,b
  1738  000978  59B0               	subwfb	(??_addTask+1)& (0+255),w,b
  1739  00097A  6FB4               	movwf	(??_addTask+5)& (0+255),b
  1740  00097C  51AA               	movf	(addTask@delay+2)& (0+255),w,b
  1741  00097E  59B1               	subwfb	(??_addTask+2)& (0+255),w,b
  1742  000980  6FB5               	movwf	(??_addTask+6)& (0+255),b
  1743  000982  51AB               	movf	(addTask@delay+3)& (0+255),w,b
  1744  000984  59B2               	subwfb	(??_addTask+3)& (0+255),w,b
  1745  000986  6FB6               	movwf	(??_addTask+7)& (0+255),b
  1746  000988  51BB               	movf	addTask@idx& (0+255),w,b
  1747  00098A  0D0D               	mullw	13
  1748  00098C  0ED4               	movlw	low (_task_list+11)
  1749  00098E  24F3               	addwf	243,w,c
  1750  000990  6ED9               	movwf	fsr2l,c
  1751  000992  0E00               	movlw	high (_task_list+11)
  1752  000994  20F4               	addwfc	prodh,w,c
  1753  000996  6EDA               	movwf	fsr2h,c
  1754  000998  CFDE F09E          	movff	postinc2,___wmul@multiplier
  1755  00099C  CFDD F09F          	movff	postdec2,___wmul@multiplier+1
  1756  0009A0  0E00               	movlw	0
  1757  0009A2  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1758  0009A4  0E0D               	movlw	13
  1759  0009A6  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  1760  0009A8  EC4F  F009         	call	___wmul	;wreg free
  1761  0009AC  0EC9               	movlw	low _task_list
  1762  0009AE  0100               	movlb	0	; () banked
  1763  0009B0  259E               	addwf	?___wmul& (0+255),w,b
  1764  0009B2  6ED9               	movwf	fsr2l,c
  1765  0009B4  0E00               	movlw	high _task_list
  1766  0009B6  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  1767  0009B8  6EDA               	movwf	fsr2h,c
  1768  0009BA  C0B3  FFDE         	movff	??_addTask+4,postinc2
  1769  0009BE  C0B4  FFDE         	movff	??_addTask+5,postinc2
  1770  0009C2  C0B5  FFDE         	movff	??_addTask+6,postinc2
  1771  0009C6  C0B6  FFDE         	movff	??_addTask+7,postinc2
  1772  0009CA                     l2039:
  1773                           
  1774                           ; BSR set to: 0
  1775                           ;task.c: 59:     return idx;
  1776  0009CA  51BB               	movf	addTask@idx& (0+255),w,b
  1777  0009CC                     l158:
  1778  0009CC  0012               	return		;funcret
  1779  0009CE                     __end_of_addTask:
  1780                           	opt callstack 0
  1781                           
  1782 ;; *************** function _isFullList *****************
  1783 ;; Defined at:
  1784 ;;		line 7 in file "task.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;		None
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;		None
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  1    wreg      unsigned char 
  1791 ;; Registers used:
  1792 ;;		wreg, status,2, status,0
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1802 ;;Total ram usage:        0 bytes
  1803 ;; Hardware stack levels used:    1
  1804 ;; Hardware stack levels required when called:    6
  1805 ;; This function calls:
  1806 ;;		Nothing
  1807 ;; This function is called by:
  1808 ;;		_addTask
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           	psect	text9
  1813  00142E                     __ptext9:
  1814                           	opt callstack 0
  1815  00142E                     _isFullList:
  1816                           	opt callstack 22
  1817  00142E                     
  1818                           ;task.c: 8:     return num_task == 20 ? 1 : 0;
  1819  00142E  0E14               	movlw	20
  1820  001430  1842               	xorwf	_num_task^0,w,c
  1821  001432  B4D8               	btfsc	status,2,c
  1822  001434  EF1E  F00A         	goto	u1811
  1823  001438  EF21  F00A         	goto	u1810
  1824  00143C                     u1811:
  1825  00143C  0E01               	movlw	1
  1826  00143E  EF22  F00A         	goto	u1820
  1827  001442                     u1810:
  1828  001442  0E00               	movlw	0
  1829  001444                     u1820:
  1830  001444  0012               	return		;funcret
  1831  001446                     __end_of_isFullList:
  1832                           	opt callstack 0
  1833                           
  1834 ;; *************** function _dispatch *****************
  1835 ;; Defined at:
  1836 ;;		line 72 in file "clock.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;		None
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;		None
  1841 ;; Return value:  Size  Location     Type
  1842 ;;                  1    wreg      void 
  1843 ;; Registers used:
  1844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1854 ;;Total ram usage:        0 bytes
  1855 ;; Hardware stack levels used:    1
  1856 ;; Hardware stack levels required when called:   11
  1857 ;; This function calls:
  1858 ;;		_selectReadyTask
  1859 ;; This function is called by:
  1860 ;;		_main
  1861 ;; This function uses a non-reentrant model
  1862 ;;
  1863                           
  1864                           	psect	text10
  1865  00147E                     __ptext10:
  1866                           	opt callstack 0
  1867  00147E                     _dispatch:
  1868                           	opt callstack 19
  1869  00147E                     
  1870                           ;clock.c: 73:     selectReadyTask();
  1871  00147E  ECAE  F008         	call	_selectReadyTask	;wreg free
  1872  001482  0012               	return		;funcret
  1873  001484                     __end_of_dispatch:
  1874                           	opt callstack 0
  1875                           
  1876 ;; *************** function _selectReadyTask *****************
  1877 ;; Defined at:
  1878 ;;		line 127 in file "task.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;		None
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;  ptr             3   13[BANK0 ] PTR FTN()void 
  1883 ;;		 -> NULL(0), blink_LED5(1), blink_LED4(1), blink_LED3(1), 
  1884 ;;		 -> blink_LED2(1), blink_LED1(1), blink_LED0(1), 
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      void 
  1887 ;; Registers used:
  1888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1895 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1897 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1898 ;;Total ram usage:        3 bytes
  1899 ;; Hardware stack levels used:    1
  1900 ;; Hardware stack levels required when called:   10
  1901 ;; This function calls:
  1902 ;;		_blink_LED0
  1903 ;;		_blink_LED1
  1904 ;;		_blink_LED2
  1905 ;;		_blink_LED3
  1906 ;;		_blink_LED4
  1907 ;;		_blink_LED5
  1908 ;;		_dequeue
  1909 ;;		_isEmptyQueue
  1910 ;; This function is called by:
  1911 ;;		_dispatch
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           	psect	text11
  1916  00115C                     __ptext11:
  1917                           	opt callstack 0
  1918  00115C                     _selectReadyTask:
  1919                           	opt callstack 19
  1920  00115C                     
  1921                           ;task.c: 128:     while(!isEmptyQueue()) {
  1922  00115C  EFD0  F008         	goto	l2051
  1923  001160                     l2045:
  1924                           
  1925                           ;task.c: 129:         FUNCTION_PTR ptr = dequeue();
  1926  001160  EC2C  F008         	call	_dequeue	;wreg free
  1927  001164  C0A6  F0AB         	movff	?_dequeue,selectReadyTask@ptr
  1928  001168  C0A7  F0AC         	movff	?_dequeue+1,selectReadyTask@ptr+1
  1929  00116C  C0A8  F0AD         	movff	?_dequeue+2,selectReadyTask@ptr+2
  1930  001170                     
  1931                           ;task.c: 130:         if( ptr != ((void*)0))
  1932  001170  0100               	movlb	0	; () banked
  1933  001172  51AB               	movf	selectReadyTask@ptr& (0+255),w,b
  1934  001174  11AC               	iorwf	(selectReadyTask@ptr+1)& (0+255),w,b
  1935  001176  11AD               	iorwf	(selectReadyTask@ptr+2)& (0+255),w,b
  1936  001178  B4D8               	btfsc	status,2,c
  1937  00117A  EFC1  F008         	goto	u1951
  1938  00117E  EFC3  F008         	goto	u1950
  1939  001182                     u1951:
  1940  001182  EFD0  F008         	goto	l2051
  1941  001186                     u1950:
  1942  001186                     
  1943                           ; BSR set to: 0
  1944                           ;task.c: 131:             (ptr)();
  1945  001186  D802               	call	u1968
  1946  001188  EFD0  F008         	goto	u1969
  1947  00118C                     u1968:
  1948  00118C  0005               	push	
  1949  00118E  6EFA               	movwf	pclath,c
  1950  001190  51AB               	movf	selectReadyTask@ptr& (0+255),w,b
  1951  001192  6EFD               	movwf	tosl,c
  1952  001194  51AC               	movf	(selectReadyTask@ptr+1)& (0+255),w,b
  1953  001196  6EFE               	movwf	tosh,c
  1954  001198  51AD               	movf	(selectReadyTask@ptr+2)& (0+255),w,b
  1955  00119A  6EFF               	movwf	tosu,c
  1956  00119C  50FA               	movf	pclath,w,c
  1957  00119E  0012               	return		;indir
  1958  0011A0                     u1969:
  1959  0011A0                     l2051:
  1960                           
  1961                           ;task.c: 128:     while(!isEmptyQueue()) {
  1962  0011A0  EC06  F009         	call	_isEmptyQueue	;wreg free
  1963  0011A4  0900               	iorlw	0
  1964  0011A6  B4D8               	btfsc	status,2,c
  1965  0011A8  EFD8  F008         	goto	u1971
  1966  0011AC  EFDA  F008         	goto	u1970
  1967  0011B0                     u1971:
  1968  0011B0  EFB0  F008         	goto	l2045
  1969  0011B4                     u1970:
  1970  0011B4  0012               	return		;funcret
  1971  0011B6                     __end_of_selectReadyTask:
  1972                           	opt callstack 0
  1973                           
  1974 ;; *************** function _dequeue *****************
  1975 ;; Defined at:
  1976 ;;		line 27 in file "ready_queue.c"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;		None
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;  idx             2   11[BANK0 ] int 
  1981 ;; Return value:  Size  Location     Type
  1982 ;;                  3    8[BANK0 ] PTR FTN()void 
  1983 ;; Registers used:
  1984 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1985 ;; Tracked objects:
  1986 ;;		On entry : 0/0
  1987 ;;		On exit  : 0/0
  1988 ;;		Unchanged: 0/0
  1989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1990 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1991 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1993 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1994 ;;Total ram usage:        5 bytes
  1995 ;; Hardware stack levels used:    1
  1996 ;; Hardware stack levels required when called:    9
  1997 ;; This function calls:
  1998 ;;		___awmod
  1999 ;;		___wmul
  2000 ;;		_isEmptyQueue
  2001 ;; This function is called by:
  2002 ;;		_selectReadyTask
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           	psect	text12
  2007  001058                     __ptext12:
  2008                           	opt callstack 0
  2009  001058                     _dequeue:
  2010                           	opt callstack 19
  2011  001058                     
  2012                           ;ready_queue.c: 28:     if(isEmptyQueue())
  2013  001058  EC06  F009         	call	_isEmptyQueue	;wreg free
  2014  00105C  0900               	iorlw	0
  2015  00105E  B4D8               	btfsc	status,2,c
  2016  001060  EF34  F008         	goto	u1801
  2017  001064  EF36  F008         	goto	u1800
  2018  001068                     u1801:
  2019  001068  EF3F  F008         	goto	l122
  2020  00106C                     u1800:
  2021  00106C                     
  2022                           ;ready_queue.c: 29:         return ((void*)0);
  2023  00106C  0E00               	movlw	0
  2024  00106E  0100               	movlb	0	; () banked
  2025  001070  6FA6               	movwf	?_dequeue& (0+255),b
  2026  001072  0E00               	movlw	0
  2027  001074  6FA7               	movwf	(?_dequeue+1)& (0+255),b
  2028  001076  0E00               	movlw	0
  2029  001078  6FA8               	movwf	(?_dequeue+2)& (0+255),b
  2030  00107A  EF6C  F008         	goto	l123
  2031  00107E                     l122:
  2032                           
  2033                           ;ready_queue.c: 30:     int idx = front;
  2034  00107E  C046  F0A9         	movff	_front,dequeue@idx
  2035  001082  C047  F0AA         	movff	_front+1,dequeue@idx+1
  2036  001086                     
  2037                           ;ready_queue.c: 31:     front = (front + 1) % 20;
  2038  001086  0E01               	movlw	1
  2039  001088  2446               	addwf	_front^0,w,c
  2040  00108A  0100               	movlb	0	; () banked
  2041  00108C  6F9E               	movwf	___awmod@dividend& (0+255),b
  2042  00108E  0E00               	movlw	0
  2043  001090  2047               	addwfc	(_front+1)^0,w,c
  2044  001092  6F9F               	movwf	(___awmod@dividend+1)& (0+255),b
  2045  001094  0E00               	movlw	0
  2046  001096  6FA1               	movwf	(___awmod@divisor+1)& (0+255),b
  2047  001098  0E14               	movlw	20
  2048  00109A  6FA0               	movwf	___awmod@divisor& (0+255),b
  2049  00109C  ECD9  F006         	call	___awmod	;wreg free
  2050  0010A0  C09E  F046         	movff	?___awmod,_front
  2051  0010A4  C09F  F047         	movff	?___awmod+1,_front+1
  2052  0010A8                     
  2053                           ;ready_queue.c: 32:     return ready_queue[idx];
  2054  0010A8  C0A9  F09E         	movff	dequeue@idx,___wmul@multiplier
  2055  0010AC  C0AA  F09F         	movff	dequeue@idx+1,___wmul@multiplier+1
  2056  0010B0  0E00               	movlw	0
  2057  0010B2  0100               	movlb	0	; () banked
  2058  0010B4  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2059  0010B6  0E03               	movlw	3
  2060  0010B8  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  2061  0010BA  EC4F  F009         	call	___wmul	;wreg free
  2062  0010BE  0E60               	movlw	low _ready_queue
  2063  0010C0  0100               	movlb	0	; () banked
  2064  0010C2  259E               	addwf	?___wmul& (0+255),w,b
  2065  0010C4  6ED9               	movwf	fsr2l,c
  2066  0010C6  0E00               	movlw	high _ready_queue
  2067  0010C8  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  2068  0010CA  6EDA               	movwf	fsr2h,c
  2069  0010CC  CFDE F0A6          	movff	postinc2,?_dequeue
  2070  0010D0  CFDE F0A7          	movff	postinc2,?_dequeue+1
  2071  0010D4  CFDD F0A8          	movff	postdec2,?_dequeue+2
  2072  0010D8                     l123:
  2073                           
  2074                           ; BSR set to: 0
  2075  0010D8  0012               	return		;funcret
  2076  0010DA                     __end_of_dequeue:
  2077                           	opt callstack 0
  2078                           
  2079 ;; *************** function _isEmptyQueue *****************
  2080 ;; Defined at:
  2081 ;;		line 11 in file "ready_queue.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;		None
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;		None
  2086 ;; Return value:  Size  Location     Type
  2087 ;;                  1    wreg      unsigned char 
  2088 ;; Registers used:
  2089 ;;		wreg, status,2, status,0, cstack
  2090 ;; Tracked objects:
  2091 ;;		On entry : 0/0
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2099 ;;Total ram usage:        0 bytes
  2100 ;; Hardware stack levels used:    1
  2101 ;; Hardware stack levels required when called:    8
  2102 ;; This function calls:
  2103 ;;		_getSizeQueue
  2104 ;; This function is called by:
  2105 ;;		_dequeue
  2106 ;;		_selectReadyTask
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           	psect	text13
  2111  00120C                     __ptext13:
  2112                           	opt callstack 0
  2113  00120C                     _isEmptyQueue:
  2114                           	opt callstack 20
  2115  00120C                     
  2116                           ;ready_queue.c: 12:     if(front == -1)
  2117  00120C  2846               	incf	_front^0,w,c
  2118  00120E  E106               	bnz	u1591
  2119  001210  2847               	incf	(_front+1)^0,w,c
  2120  001212  A4D8               	btfss	status,2,c
  2121  001214  EF0E  F009         	goto	u1591
  2122  001218  EF10  F009         	goto	u1590
  2123  00121C                     u1591:
  2124  00121C  EF13  F009         	goto	l1879
  2125  001220                     u1590:
  2126  001220                     
  2127                           ;ready_queue.c: 13:         return 0;
  2128  001220  0E00               	movlw	0
  2129  001222  EF1F  F009         	goto	l114
  2130  001226                     l1879:
  2131                           
  2132                           ;ready_queue.c: 14:     return getSizeQueue() == 0 ? 1 : 0;
  2133  001226  EC39  F009         	call	_getSizeQueue	;wreg free
  2134  00122A  0900               	iorlw	0
  2135  00122C  B4D8               	btfsc	status,2,c
  2136  00122E  EF1B  F009         	goto	u1601
  2137  001232  EF1E  F009         	goto	u1600
  2138  001236                     u1601:
  2139  001236  0E01               	movlw	1
  2140  001238  EF1F  F009         	goto	u1610
  2141  00123C                     u1600:
  2142  00123C  0E00               	movlw	0
  2143  00123E                     u1610:
  2144  00123E                     l114:
  2145  00123E  0012               	return		;funcret
  2146  001240                     __end_of_isEmptyQueue:
  2147                           	opt callstack 0
  2148                           
  2149 ;; *************** function _getSizeQueue *****************
  2150 ;; Defined at:
  2151 ;;		line 3 in file "ready_queue.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;		None
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;		None
  2156 ;; Return value:  Size  Location     Type
  2157 ;;                  1    wreg      unsigned char 
  2158 ;; Registers used:
  2159 ;;		wreg, status,2, status,0, cstack
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2168 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2169 ;;Total ram usage:        2 bytes
  2170 ;; Hardware stack levels used:    1
  2171 ;; Hardware stack levels required when called:    7
  2172 ;; This function calls:
  2173 ;;		___awmod
  2174 ;; This function is called by:
  2175 ;;		_isEmptyQueue
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           	psect	text14
  2180  001272                     __ptext14:
  2181                           	opt callstack 0
  2182  001272                     _getSizeQueue:
  2183                           	opt callstack 20
  2184  001272                     
  2185                           ;ready_queue.c: 4:     return (rear - front + 1 + 20) % 20;
  2186  001272  5046               	movf	_front^0,w,c
  2187  001274  5C44               	subwf	_rear^0,w,c
  2188  001276  0100               	movlb	0	; () banked
  2189  001278  6FA4               	movwf	??_getSizeQueue& (0+255),b
  2190  00127A  5047               	movf	(_front+1)^0,w,c
  2191  00127C  5845               	subwfb	(_rear+1)^0,w,c
  2192  00127E  6FA5               	movwf	(??_getSizeQueue+1)& (0+255),b
  2193  001280  0E15               	movlw	21
  2194  001282  25A4               	addwf	??_getSizeQueue& (0+255),w,b
  2195  001284  6F9E               	movwf	___awmod@dividend& (0+255),b
  2196  001286  0E00               	movlw	0
  2197  001288  21A5               	addwfc	(??_getSizeQueue+1)& (0+255),w,b
  2198  00128A  6F9F               	movwf	(___awmod@dividend+1)& (0+255),b
  2199  00128C  0E00               	movlw	0
  2200  00128E  6FA1               	movwf	(___awmod@divisor+1)& (0+255),b
  2201  001290  0E14               	movlw	20
  2202  001292  6FA0               	movwf	___awmod@divisor& (0+255),b
  2203  001294  ECD9  F006         	call	___awmod	;wreg free
  2204  001298  0100               	movlb	0	; () banked
  2205  00129A  519E               	movf	?___awmod& (0+255),w,b
  2206  00129C                     
  2207                           ; BSR set to: 0
  2208  00129C  0012               	return		;funcret
  2209  00129E                     __end_of_getSizeQueue:
  2210                           	opt callstack 0
  2211                           
  2212 ;; *************** function ___awmod *****************
  2213 ;; Defined at:
  2214 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;  dividend        2    0[BANK0 ] int 
  2217 ;;  divisor         2    2[BANK0 ] int 
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;  sign            1    5[BANK0 ] unsigned char 
  2220 ;;  counter         1    4[BANK0 ] unsigned char 
  2221 ;; Return value:  Size  Location     Type
  2222 ;;                  2    0[BANK0 ] int 
  2223 ;; Registers used:
  2224 ;;		wreg, status,2, status,0
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2230 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2231 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2233 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2234 ;;Total ram usage:        6 bytes
  2235 ;; Hardware stack levels used:    1
  2236 ;; Hardware stack levels required when called:    6
  2237 ;; This function calls:
  2238 ;;		Nothing
  2239 ;; This function is called by:
  2240 ;;		_getSizeQueue
  2241 ;;		_dequeue
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245                           	psect	text15
  2246  000DB2                     __ptext15:
  2247                           	opt callstack 0
  2248  000DB2                     ___awmod:
  2249                           	opt callstack 20
  2250  000DB2  0E00               	movlw	0
  2251  000DB4  0100               	movlb	0	; () banked
  2252  000DB6  6FA3               	movwf	___awmod@sign& (0+255),b
  2253  000DB8                     
  2254                           ; BSR set to: 0
  2255  000DB8  BF9F               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  2256  000DBA  EFE3  F006         	goto	u1530
  2257  000DBE  EFE1  F006         	goto	u1531
  2258  000DC2                     u1531:
  2259  000DC2  EFE9  F006         	goto	l1841
  2260  000DC6                     u1530:
  2261  000DC6                     
  2262                           ; BSR set to: 0
  2263  000DC6  6D9E               	negf	___awmod@dividend& (0+255),b
  2264  000DC8  1F9F               	comf	(___awmod@dividend+1)& (0+255),f,b
  2265  000DCA  B0D8               	btfsc	status,0,c
  2266  000DCC  2B9F               	incf	(___awmod@dividend+1)& (0+255),f,b
  2267  000DCE                     
  2268                           ; BSR set to: 0
  2269  000DCE  0E01               	movlw	1
  2270  000DD0  6FA3               	movwf	___awmod@sign& (0+255),b
  2271  000DD2                     l1841:
  2272                           
  2273                           ; BSR set to: 0
  2274  000DD2  BFA1               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  2275  000DD4  EFF0  F006         	goto	u1540
  2276  000DD8  EFEE  F006         	goto	u1541
  2277  000DDC                     u1541:
  2278  000DDC  EFF4  F006         	goto	l1845
  2279  000DE0                     u1540:
  2280  000DE0                     
  2281                           ; BSR set to: 0
  2282  000DE0  6DA0               	negf	___awmod@divisor& (0+255),b
  2283  000DE2  1FA1               	comf	(___awmod@divisor+1)& (0+255),f,b
  2284  000DE4  B0D8               	btfsc	status,0,c
  2285  000DE6  2BA1               	incf	(___awmod@divisor+1)& (0+255),f,b
  2286  000DE8                     l1845:
  2287                           
  2288                           ; BSR set to: 0
  2289  000DE8  51A0               	movf	___awmod@divisor& (0+255),w,b
  2290  000DEA  11A1               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  2291  000DEC  B4D8               	btfsc	status,2,c
  2292  000DEE  EFFB  F006         	goto	u1551
  2293  000DF2  EFFD  F006         	goto	u1550
  2294  000DF6                     u1551:
  2295  000DF6  EF21  F007         	goto	l1861
  2296  000DFA                     u1550:
  2297  000DFA                     
  2298                           ; BSR set to: 0
  2299  000DFA  0E01               	movlw	1
  2300  000DFC  6FA2               	movwf	___awmod@counter& (0+255),b
  2301  000DFE  EF05  F007         	goto	l1851
  2302  000E02                     l1849:
  2303                           
  2304                           ; BSR set to: 0
  2305  000E02  90D8               	bcf	status,0,c
  2306  000E04  37A0               	rlcf	___awmod@divisor& (0+255),f,b
  2307  000E06  37A1               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  2308  000E08  2BA2               	incf	___awmod@counter& (0+255),f,b
  2309  000E0A                     l1851:
  2310                           
  2311                           ; BSR set to: 0
  2312  000E0A  AFA1               	btfss	(___awmod@divisor+1)& (0+255),7,b
  2313  000E0C  EF0A  F007         	goto	u1561
  2314  000E10  EF0C  F007         	goto	u1560
  2315  000E14                     u1561:
  2316  000E14  EF01  F007         	goto	l1849
  2317  000E18                     u1560:
  2318  000E18                     l1853:
  2319                           
  2320                           ; BSR set to: 0
  2321  000E18  51A0               	movf	___awmod@divisor& (0+255),w,b
  2322  000E1A  5D9E               	subwf	___awmod@dividend& (0+255),w,b
  2323  000E1C  51A1               	movf	(___awmod@divisor+1)& (0+255),w,b
  2324  000E1E  599F               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  2325  000E20  A0D8               	btfss	status,0,c
  2326  000E22  EF15  F007         	goto	u1571
  2327  000E26  EF17  F007         	goto	u1570
  2328  000E2A                     u1571:
  2329  000E2A  EF1B  F007         	goto	l1857
  2330  000E2E                     u1570:
  2331  000E2E                     
  2332                           ; BSR set to: 0
  2333  000E2E  51A0               	movf	___awmod@divisor& (0+255),w,b
  2334  000E30  5F9E               	subwf	___awmod@dividend& (0+255),f,b
  2335  000E32  51A1               	movf	(___awmod@divisor+1)& (0+255),w,b
  2336  000E34  5B9F               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  2337  000E36                     l1857:
  2338                           
  2339                           ; BSR set to: 0
  2340  000E36  90D8               	bcf	status,0,c
  2341  000E38  33A1               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  2342  000E3A  33A0               	rrcf	___awmod@divisor& (0+255),f,b
  2343  000E3C                     
  2344                           ; BSR set to: 0
  2345  000E3C  2FA2               	decfsz	___awmod@counter& (0+255),f,b
  2346  000E3E  EF0C  F007         	goto	l1853
  2347  000E42                     l1861:
  2348                           
  2349                           ; BSR set to: 0
  2350  000E42  51A3               	movf	___awmod@sign& (0+255),w,b
  2351  000E44  B4D8               	btfsc	status,2,c
  2352  000E46  EF27  F007         	goto	u1581
  2353  000E4A  EF29  F007         	goto	u1580
  2354  000E4E                     u1581:
  2355  000E4E  EF2D  F007         	goto	l1865
  2356  000E52                     u1580:
  2357  000E52                     
  2358                           ; BSR set to: 0
  2359  000E52  6D9E               	negf	___awmod@dividend& (0+255),b
  2360  000E54  1F9F               	comf	(___awmod@dividend+1)& (0+255),f,b
  2361  000E56  B0D8               	btfsc	status,0,c
  2362  000E58  2B9F               	incf	(___awmod@dividend+1)& (0+255),f,b
  2363  000E5A                     l1865:
  2364                           
  2365                           ; BSR set to: 0
  2366  000E5A  C09E  F09E         	movff	___awmod@dividend,?___awmod
  2367  000E5E  C09F  F09F         	movff	___awmod@dividend+1,?___awmod+1
  2368  000E62                     
  2369                           ; BSR set to: 0
  2370  000E62  0012               	return		;funcret
  2371  000E64                     __end_of___awmod:
  2372                           	opt callstack 0
  2373                           
  2374 ;; *************** function ___wmul *****************
  2375 ;; Defined at:
  2376 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  2377 ;; Parameters:    Size  Location     Type
  2378 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2379 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;  product         2    4[BANK0 ] unsigned int 
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  2    0[BANK0 ] unsigned int 
  2384 ;; Registers used:
  2385 ;;		wreg, status,2, status,0, prodl, prodh
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2391 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2392 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2394 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2395 ;;Total ram usage:        6 bytes
  2396 ;; Hardware stack levels used:    1
  2397 ;; Hardware stack levels required when called:    6
  2398 ;; This function calls:
  2399 ;;		Nothing
  2400 ;; This function is called by:
  2401 ;;		_dequeue
  2402 ;;		_initializeTaskList
  2403 ;;		_addTask
  2404 ;; This function uses a non-reentrant model
  2405 ;;
  2406                           
  2407                           	psect	text16
  2408  00129E                     __ptext16:
  2409                           	opt callstack 0
  2410  00129E                     ___wmul:
  2411                           	opt callstack 21
  2412  00129E  0100               	movlb	0	; () banked
  2413  0012A0  519E               	movf	___wmul@multiplier& (0+255),w,b
  2414  0012A2  03A0               	mulwf	___wmul@multiplicand& (0+255),b
  2415  0012A4  CFF3 F0A2          	movff	prodl,___wmul@product
  2416  0012A8  CFF4 F0A3          	movff	prodh,___wmul@product+1
  2417  0012AC  519E               	movf	___wmul@multiplier& (0+255),w,b
  2418  0012AE  03A1               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  2419  0012B0  50F3               	movf	243,w,c
  2420  0012B2  27A3               	addwf	(___wmul@product+1)& (0+255),f,b
  2421  0012B4  519F               	movf	(___wmul@multiplier+1)& (0+255),w,b
  2422  0012B6  03A0               	mulwf	___wmul@multiplicand& (0+255),b
  2423  0012B8  50F3               	movf	243,w,c
  2424  0012BA  27A3               	addwf	(___wmul@product+1)& (0+255),f,b
  2425  0012BC                     
  2426                           ; BSR set to: 0
  2427  0012BC  C0A2  F09E         	movff	___wmul@product,?___wmul
  2428  0012C0  C0A3  F09F         	movff	___wmul@product+1,?___wmul+1
  2429  0012C4                     
  2430                           ; BSR set to: 0
  2431  0012C4  0012               	return		;funcret
  2432  0012C6                     __end_of___wmul:
  2433                           	opt callstack 0
  2434                           
  2435 ;; *************** function _blink_LED4 *****************
  2436 ;; Defined at:
  2437 ;;		line 42 in file "main.c"
  2438 ;; Parameters:    Size  Location     Type
  2439 ;;		None
  2440 ;; Auto vars:     Size  Location     Type
  2441 ;;		None
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  1    wreg      void 
  2444 ;; Registers used:
  2445 ;;		wreg, status,2, status,0
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2455 ;;Total ram usage:        0 bytes
  2456 ;; Hardware stack levels used:    1
  2457 ;; Hardware stack levels required when called:    6
  2458 ;; This function calls:
  2459 ;;		Nothing
  2460 ;; This function is called by:
  2461 ;;		_main
  2462 ;;		_selectReadyTask
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466                           	psect	text17
  2467  0012EE                     __ptext17:
  2468                           	opt callstack 0
  2469  0012EE                     _blink_LED4:
  2470                           	opt callstack 22
  2471  0012EE                     
  2472                           ;main.c: 43:     LED_state[4] = !LED_state[4];
  2473  0012EE  5034               	movf	(_LED_state+8)^0,w,c
  2474  0012F0  1035               	iorwf	(_LED_state+9)^0,w,c
  2475  0012F2  B4D8               	btfsc	status,2,c
  2476  0012F4  EF7E  F009         	goto	u1741
  2477  0012F8  EF81  F009         	goto	u1740
  2478  0012FC                     u1741:
  2479  0012FC  0E01               	movlw	1
  2480  0012FE  EF82  F009         	goto	u1750
  2481  001302                     u1740:
  2482  001302  0E00               	movlw	0
  2483  001304                     u1750:
  2484  001304  6E34               	movwf	(_LED_state+8)^0,c
  2485  001306  6A35               	clrf	(_LED_state+9)^0,c
  2486  001308                     
  2487                           ;main.c: 44:     LATDbits.LATD4 = LED_state[4];
  2488  001308  B034               	btfsc	(_LED_state+8)^0,0,c
  2489  00130A  D002               	bra	u1765
  2490  00130C  988C               	bcf	140,4,c	;volatile
  2491  00130E  D001               	bra	u1766
  2492  001310                     u1765:
  2493  001310  888C               	bsf	140,4,c	;volatile
  2494  001312                     u1766:
  2495  001312  0012               	return		;funcret
  2496  001314                     __end_of_blink_LED4:
  2497                           	opt callstack 0
  2498                           
  2499 ;; *************** function _blink_LED3 *****************
  2500 ;; Defined at:
  2501 ;;		line 38 in file "main.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;		None
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;		None
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  1    wreg      void 
  2508 ;; Registers used:
  2509 ;;		wreg, status,2, status,0
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2519 ;;Total ram usage:        0 bytes
  2520 ;; Hardware stack levels used:    1
  2521 ;; Hardware stack levels required when called:    6
  2522 ;; This function calls:
  2523 ;;		Nothing
  2524 ;; This function is called by:
  2525 ;;		_main
  2526 ;;		_selectReadyTask
  2527 ;; This function uses a non-reentrant model
  2528 ;;
  2529                           
  2530                           	psect	text18
  2531  001314                     __ptext18:
  2532                           	opt callstack 0
  2533  001314                     _blink_LED3:
  2534                           	opt callstack 22
  2535  001314                     
  2536                           ;main.c: 39:     LED_state[3] = !LED_state[3];
  2537  001314  5032               	movf	(_LED_state+6)^0,w,c
  2538  001316  1033               	iorwf	(_LED_state+7)^0,w,c
  2539  001318  B4D8               	btfsc	status,2,c
  2540  00131A  EF91  F009         	goto	u1711
  2541  00131E  EF94  F009         	goto	u1710
  2542  001322                     u1711:
  2543  001322  0E01               	movlw	1
  2544  001324  EF95  F009         	goto	u1720
  2545  001328                     u1710:
  2546  001328  0E00               	movlw	0
  2547  00132A                     u1720:
  2548  00132A  6E32               	movwf	(_LED_state+6)^0,c
  2549  00132C  6A33               	clrf	(_LED_state+7)^0,c
  2550  00132E                     
  2551                           ;main.c: 40:     LATDbits.LATD3 = LED_state[3];
  2552  00132E  B032               	btfsc	(_LED_state+6)^0,0,c
  2553  001330  D002               	bra	u1735
  2554  001332  968C               	bcf	140,3,c	;volatile
  2555  001334  D001               	bra	u1736
  2556  001336                     u1735:
  2557  001336  868C               	bsf	140,3,c	;volatile
  2558  001338                     u1736:
  2559  001338  0012               	return		;funcret
  2560  00133A                     __end_of_blink_LED3:
  2561                           	opt callstack 0
  2562                           
  2563 ;; *************** function _blink_LED2 *****************
  2564 ;; Defined at:
  2565 ;;		line 34 in file "main.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;		None
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;		None
  2570 ;; Return value:  Size  Location     Type
  2571 ;;                  1    wreg      void 
  2572 ;; Registers used:
  2573 ;;		wreg, status,2, status,0
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2583 ;;Total ram usage:        0 bytes
  2584 ;; Hardware stack levels used:    1
  2585 ;; Hardware stack levels required when called:    6
  2586 ;; This function calls:
  2587 ;;		Nothing
  2588 ;; This function is called by:
  2589 ;;		_main
  2590 ;;		_selectReadyTask
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           	psect	text19
  2595  00133A                     __ptext19:
  2596                           	opt callstack 0
  2597  00133A                     _blink_LED2:
  2598                           	opt callstack 22
  2599  00133A                     
  2600                           ;main.c: 35:     LED_state[2] = !LED_state[2];
  2601  00133A  5030               	movf	(_LED_state+4)^0,w,c
  2602  00133C  1031               	iorwf	(_LED_state+5)^0,w,c
  2603  00133E  B4D8               	btfsc	status,2,c
  2604  001340  EFA4  F009         	goto	u1681
  2605  001344  EFA7  F009         	goto	u1680
  2606  001348                     u1681:
  2607  001348  0E01               	movlw	1
  2608  00134A  EFA8  F009         	goto	u1690
  2609  00134E                     u1680:
  2610  00134E  0E00               	movlw	0
  2611  001350                     u1690:
  2612  001350  6E30               	movwf	(_LED_state+4)^0,c
  2613  001352  6A31               	clrf	(_LED_state+5)^0,c
  2614  001354                     
  2615                           ;main.c: 36:     LATDbits.LATD2 = LED_state[2];
  2616  001354  B030               	btfsc	(_LED_state+4)^0,0,c
  2617  001356  D002               	bra	u1705
  2618  001358  948C               	bcf	140,2,c	;volatile
  2619  00135A  D001               	bra	u1706
  2620  00135C                     u1705:
  2621  00135C  848C               	bsf	140,2,c	;volatile
  2622  00135E                     u1706:
  2623  00135E  0012               	return		;funcret
  2624  001360                     __end_of_blink_LED2:
  2625                           	opt callstack 0
  2626                           
  2627 ;; *************** function _blink_LED1 *****************
  2628 ;; Defined at:
  2629 ;;		line 29 in file "main.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;		None
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;		None
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  1    wreg      void 
  2636 ;; Registers used:
  2637 ;;		wreg, status,2, status,0
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2647 ;;Total ram usage:        0 bytes
  2648 ;; Hardware stack levels used:    1
  2649 ;; Hardware stack levels required when called:    6
  2650 ;; This function calls:
  2651 ;;		Nothing
  2652 ;; This function is called by:
  2653 ;;		_main
  2654 ;;		_selectReadyTask
  2655 ;; This function uses a non-reentrant model
  2656 ;;
  2657                           
  2658                           	psect	text20
  2659  001360                     __ptext20:
  2660                           	opt callstack 0
  2661  001360                     _blink_LED1:
  2662                           	opt callstack 22
  2663  001360                     
  2664                           ;main.c: 30:     LED_state[1] = !LED_state[1];
  2665  001360  502E               	movf	(_LED_state+2)^0,w,c
  2666  001362  102F               	iorwf	(_LED_state+3)^0,w,c
  2667  001364  B4D8               	btfsc	status,2,c
  2668  001366  EFB7  F009         	goto	u1651
  2669  00136A  EFBA  F009         	goto	u1650
  2670  00136E                     u1651:
  2671  00136E  0E01               	movlw	1
  2672  001370  EFBB  F009         	goto	u1660
  2673  001374                     u1650:
  2674  001374  0E00               	movlw	0
  2675  001376                     u1660:
  2676  001376  6E2E               	movwf	(_LED_state+2)^0,c
  2677  001378  6A2F               	clrf	(_LED_state+3)^0,c
  2678  00137A                     
  2679                           ;main.c: 31:     LATDbits.LATD1 = LED_state[1];
  2680  00137A  B02E               	btfsc	(_LED_state+2)^0,0,c
  2681  00137C  D002               	bra	u1675
  2682  00137E  928C               	bcf	140,1,c	;volatile
  2683  001380  D001               	bra	u1676
  2684  001382                     u1675:
  2685  001382  828C               	bsf	140,1,c	;volatile
  2686  001384                     u1676:
  2687  001384  0012               	return		;funcret
  2688  001386                     __end_of_blink_LED1:
  2689                           	opt callstack 0
  2690                           
  2691 ;; *************** function _blink_LED0 *****************
  2692 ;; Defined at:
  2693 ;;		line 24 in file "main.c"
  2694 ;; Parameters:    Size  Location     Type
  2695 ;;		None
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;		None
  2698 ;; Return value:  Size  Location     Type
  2699 ;;                  1    wreg      void 
  2700 ;; Registers used:
  2701 ;;		wreg, status,2, status,0
  2702 ;; Tracked objects:
  2703 ;;		On entry : 0/0
  2704 ;;		On exit  : 0/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2711 ;;Total ram usage:        0 bytes
  2712 ;; Hardware stack levels used:    1
  2713 ;; Hardware stack levels required when called:    6
  2714 ;; This function calls:
  2715 ;;		Nothing
  2716 ;; This function is called by:
  2717 ;;		_main
  2718 ;;		_selectReadyTask
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           	psect	text21
  2723  001386                     __ptext21:
  2724                           	opt callstack 0
  2725  001386                     _blink_LED0:
  2726                           	opt callstack 22
  2727  001386                     
  2728                           ;main.c: 25:     LED_state[0] = !LED_state[0];
  2729  001386  502C               	movf	_LED_state^0,w,c
  2730  001388  102D               	iorwf	(_LED_state+1)^0,w,c
  2731  00138A  B4D8               	btfsc	status,2,c
  2732  00138C  EFCA  F009         	goto	u1621
  2733  001390  EFCD  F009         	goto	u1620
  2734  001394                     u1621:
  2735  001394  0E01               	movlw	1
  2736  001396  EFCE  F009         	goto	u1630
  2737  00139A                     u1620:
  2738  00139A  0E00               	movlw	0
  2739  00139C                     u1630:
  2740  00139C  6E2C               	movwf	_LED_state^0,c
  2741  00139E  6A2D               	clrf	(_LED_state+1)^0,c
  2742  0013A0                     
  2743                           ;main.c: 26:     LATDbits.LATD0 = LED_state[0];
  2744  0013A0  B02C               	btfsc	_LED_state^0,0,c
  2745  0013A2  D002               	bra	u1645
  2746  0013A4  908C               	bcf	140,0,c	;volatile
  2747  0013A6  D001               	bra	u1646
  2748  0013A8                     u1645:
  2749  0013A8  808C               	bsf	140,0,c	;volatile
  2750  0013AA                     u1646:
  2751  0013AA  0012               	return		;funcret
  2752  0013AC                     __end_of_blink_LED0:
  2753                           	opt callstack 0
  2754                           
  2755 ;; *************** function _blink_LED5 *****************
  2756 ;; Defined at:
  2757 ;;		line 46 in file "main.c"
  2758 ;; Parameters:    Size  Location     Type
  2759 ;;		None
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;		None
  2762 ;; Return value:  Size  Location     Type
  2763 ;;                  1    wreg      void 
  2764 ;; Registers used:
  2765 ;;		wreg, status,2, status,0
  2766 ;; Tracked objects:
  2767 ;;		On entry : 0/0
  2768 ;;		On exit  : 0/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2775 ;;Total ram usage:        0 bytes
  2776 ;; Hardware stack levels used:    1
  2777 ;; Hardware stack levels required when called:    6
  2778 ;; This function calls:
  2779 ;;		Nothing
  2780 ;; This function is called by:
  2781 ;;		_main
  2782 ;;		_selectReadyTask
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786                           	psect	text22
  2787  0013AC                     __ptext22:
  2788                           	opt callstack 0
  2789  0013AC                     _blink_LED5:
  2790                           	opt callstack 22
  2791  0013AC                     
  2792                           ;main.c: 47:     LED_state[5] = !LED_state[5];
  2793  0013AC  5036               	movf	(_LED_state+10)^0,w,c
  2794  0013AE  1037               	iorwf	(_LED_state+11)^0,w,c
  2795  0013B0  B4D8               	btfsc	status,2,c
  2796  0013B2  EFDD  F009         	goto	u1771
  2797  0013B6  EFE0  F009         	goto	u1770
  2798  0013BA                     u1771:
  2799  0013BA  0E01               	movlw	1
  2800  0013BC  EFE1  F009         	goto	u1780
  2801  0013C0                     u1770:
  2802  0013C0  0E00               	movlw	0
  2803  0013C2                     u1780:
  2804  0013C2  6E36               	movwf	(_LED_state+10)^0,c
  2805  0013C4  6A37               	clrf	(_LED_state+11)^0,c
  2806  0013C6                     
  2807                           ;main.c: 48:     LATDbits.LATD5 = LED_state[5];
  2808  0013C6  B036               	btfsc	(_LED_state+10)^0,0,c
  2809  0013C8  D002               	bra	u1795
  2810  0013CA  9A8C               	bcf	140,5,c	;volatile
  2811  0013CC  D001               	bra	u1796
  2812  0013CE                     u1795:
  2813  0013CE  8A8C               	bsf	140,5,c	;volatile
  2814  0013D0                     u1796:
  2815  0013D0  0012               	return		;funcret
  2816  0013D2                     __end_of_blink_LED5:
  2817                           	opt callstack 0
  2818                           
  2819 ;; *************** function _timer_interrupt *****************
  2820 ;; Defined at:
  2821 ;;		line 53 in file "clock.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;		None
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;		None
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      void 
  2828 ;; Registers used:
  2829 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2837 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2838 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2839 ;;Total ram usage:        6 bytes
  2840 ;; Hardware stack levels used:    1
  2841 ;; Hardware stack levels required when called:    5
  2842 ;; This function calls:
  2843 ;;		_handleListHead
  2844 ;; This function is called by:
  2845 ;;		Interrupt level 2
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849                           	psect	intcode
  2850  000008                     __pintcode:
  2851                           	opt callstack 0
  2852  000008                     _timer_interrupt:
  2853                           	opt callstack 19
  2854                           
  2855                           ;incstack = 0
  2856  000008  8248               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2857  00000A  ED8A  F007         	call	int_func,f	;refresh shadow registers
  2858                           
  2859                           	psect	intcode_body
  2860  000F14                     __pintcode_body:
  2861                           	opt callstack 19
  2862  000F14                     int_func:
  2863                           	opt callstack 19
  2864  000F14  0006               	pop		; remove dummy address from shadow register refresh
  2865  000F16  CFE1 F026          	movff	fsr1l,??_timer_interrupt
  2866  000F1A  CFE2 F027          	movff	fsr1h,??_timer_interrupt+1
  2867  000F1E  CFD9 F028          	movff	fsr2l,??_timer_interrupt+2
  2868  000F22  CFDA F029          	movff	fsr2h,??_timer_interrupt+3
  2869  000F26  CFF3 F02A          	movff	prodl,??_timer_interrupt+4
  2870  000F2A  CFF4 F02B          	movff	prodh,??_timer_interrupt+5
  2871  000F2E                     
  2872                           ;clock.c: 54:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF) {
  2873  000F2E  AAF2               	btfss	242,5,c	;volatile
  2874  000F30  EF9C  F007         	goto	i2u148_41
  2875  000F34  EF9E  F007         	goto	i2u148_40
  2876  000F38                     i2u148_41:
  2877  000F38  EFAE  F007         	goto	i2l1787
  2878  000F3C                     i2u148_40:
  2879  000F3C  A4F2               	btfss	242,2,c	;volatile
  2880  000F3E  EFA3  F007         	goto	i2u149_41
  2881  000F42  EFA5  F007         	goto	i2u149_40
  2882  000F46                     i2u149_41:
  2883  000F46  EFAE  F007         	goto	i2l1787
  2884  000F4A                     i2u149_40:
  2885  000F4A                     
  2886                           ;clock.c: 55:         INTCONbits.TMR0IF = 0;
  2887  000F4A  94F2               	bcf	242,2,c	;volatile
  2888  000F4C                     
  2889                           ;clock.c: 56:         TMR0L = 131;
  2890  000F4C  0E83               	movlw	131
  2891  000F4E  6ED6               	movwf	214,c	;volatile
  2892  000F50                     
  2893                           ;clock.c: 57:         time_ms++;
  2894  000F50  0E01               	movlw	1
  2895  000F52  263C               	addwf	_time_ms^0,f,c
  2896  000F54  0E00               	movlw	0
  2897  000F56  223D               	addwfc	(_time_ms+1)^0,f,c
  2898  000F58  223E               	addwfc	(_time_ms+2)^0,f,c
  2899  000F5A  223F               	addwfc	(_time_ms+3)^0,f,c
  2900  000F5C                     i2l1787:
  2901                           
  2902                           ;clock.c: 59:     if(PIE1bits.TMR1IE && PIR1bits.TMR1IF) {
  2903  000F5C  A09D               	btfss	157,0,c	;volatile
  2904  000F5E  EFB3  F007         	goto	i2u150_41
  2905  000F62  EFB5  F007         	goto	i2u150_40
  2906  000F66                     i2u150_41:
  2907  000F66  EFD3  F007         	goto	i2l286
  2908  000F6A                     i2u150_40:
  2909  000F6A  A09E               	btfss	158,0,c	;volatile
  2910  000F6C  EFBA  F007         	goto	i2u151_41
  2911  000F70  EFBC  F007         	goto	i2u151_40
  2912  000F74                     i2u151_41:
  2913  000F74  EFD3  F007         	goto	i2l286
  2914  000F78                     i2u151_40:
  2915  000F78                     
  2916                           ;clock.c: 60:         PIR1bits.TMR1IF = 0;
  2917  000F78  909E               	bcf	158,0,c	;volatile
  2918  000F7A                     
  2919                           ;clock.c: 61:         TMR1H = 0xB1;
  2920  000F7A  0EB1               	movlw	177
  2921  000F7C  6ECF               	movwf	207,c	;volatile
  2922                           
  2923                           ;clock.c: 62:         TMR1L = 0xE0;
  2924  000F7E  0EE0               	movlw	224
  2925  000F80  6ECE               	movwf	206,c	;volatile
  2926  000F82                     
  2927                           ;clock.c: 63:         handleListHead();
  2928  000F82  EC09  F000         	call	_handleListHead	;wreg free
  2929  000F86                     
  2930                           ;clock.c: 64:         count++;
  2931  000F86  4A40               	infsnz	_count^0,f,c
  2932  000F88  2A41               	incf	(_count+1)^0,f,c
  2933  000F8A                     
  2934                           ;clock.c: 65:         if(count == 100) {
  2935  000F8A  0E64               	movlw	100
  2936  000F8C  1840               	xorwf	_count^0,w,c
  2937  000F8E  1041               	iorwf	(_count+1)^0,w,c
  2938  000F90  A4D8               	btfss	status,2,c
  2939  000F92  EFCD  F007         	goto	i2u152_41
  2940  000F96  EFCF  F007         	goto	i2u152_40
  2941  000F9A                     i2u152_41:
  2942  000F9A  EFD3  F007         	goto	i2l286
  2943  000F9E                     i2u152_40:
  2944  000F9E                     
  2945                           ;clock.c: 66:             count = 0;
  2946  000F9E  0E00               	movlw	0
  2947  000FA0  6E41               	movwf	(_count+1)^0,c
  2948  000FA2  0E00               	movlw	0
  2949  000FA4  6E40               	movwf	_count^0,c
  2950  000FA6                     i2l286:
  2951  000FA6  C02B  FFF4         	movff	??_timer_interrupt+5,prodh
  2952  000FAA  C02A  FFF3         	movff	??_timer_interrupt+4,prodl
  2953  000FAE  C029  FFDA         	movff	??_timer_interrupt+3,fsr2h
  2954  000FB2  C028  FFD9         	movff	??_timer_interrupt+2,fsr2l
  2955  000FB6  C027  FFE2         	movff	??_timer_interrupt+1,fsr1h
  2956  000FBA  C026  FFE1         	movff	??_timer_interrupt,fsr1l
  2957  000FBE  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2958  000FC0  0011               	retfie		f
  2959  000FC2                     __end_of_timer_interrupt:
  2960                           	opt callstack 0
  2961                           
  2962 ;; *************** function _handleListHead *****************
  2963 ;; Defined at:
  2964 ;;		line 85 in file "task.c"
  2965 ;; Parameters:    Size  Location     Type
  2966 ;;		None
  2967 ;; Auto vars:     Size  Location     Type
  2968 ;;  cur             2   33[COMRAM] int 
  2969 ;;  prev            2   31[COMRAM] int 
  2970 ;;  pos             2   35[COMRAM] int 
  2971 ;; Return value:  Size  Location     Type
  2972 ;;                  1    wreg      void 
  2973 ;; Registers used:
  2974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2981 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2982 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2983 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2984 ;;Total ram usage:       25 bytes
  2985 ;; Hardware stack levels used:    1
  2986 ;; Hardware stack levels required when called:    4
  2987 ;; This function calls:
  2988 ;;		_enqueue
  2989 ;;		_removeTask
  2990 ;;		i2___wmul
  2991 ;; This function is called by:
  2992 ;;		_timer_interrupt
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           	psect	text24
  2997  000012                     __ptext24:
  2998                           	opt callstack 0
  2999  000012                     _handleListHead:
  3000                           	opt callstack 19
  3001  000012                     
  3002                           ;task.c: 86:     if(head == 105)
  3003  000012  0E69               	movlw	105
  3004  000014  0100               	movlb	0	; () banked
  3005  000016  199C               	xorwf	_head& (0+255),w,b
  3006  000018  119D               	iorwf	(_head+1)& (0+255),w,b
  3007  00001A  A4D8               	btfss	status,2,c
  3008  00001C  EF12  F000         	goto	i2u139_41
  3009  000020  EF14  F000         	goto	i2u139_40
  3010  000024                     i2u139_41:
  3011  000024  EFC3  F002         	goto	i2l190
  3012  000028                     i2u139_40:
  3013  000028  EFF4  F002         	goto	i2l189
  3014  00002C                     i2l191:
  3015                           
  3016                           ;task.c: 97:         int pos = head;
  3017  00002C  C09C  F024         	movff	_head,handleListHead@pos
  3018  000030  C09D  F025         	movff	_head+1,handleListHead@pos+1
  3019  000034                     
  3020                           ;task.c: 98:         enqueue(task_list[pos].func_ptr);
  3021  000034  C024  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3022  000038  C025  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3023  00003C  0E00               	movlw	0
  3024  00003E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3025  000040  0E0D               	movlw	13
  3026  000042  6E03               	movwf	i2___wmul@multiplicand^0,c
  3027  000044  ECE9  F009         	call	i2___wmul	;wreg free
  3028  000048  0ED1               	movlw	low (_task_list+8)
  3029  00004A  2401               	addwf	?i2___wmul^0,w,c
  3030  00004C  6ED9               	movwf	fsr2l,c
  3031  00004E  0E00               	movlw	high (_task_list+8)
  3032  000050  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3033  000052  6EDA               	movwf	fsr2h,c
  3034  000054  CFDE F019          	movff	postinc2,_handleListHead$1146
  3035  000058  CFDE F01A          	movff	postinc2,_handleListHead$1146+1
  3036  00005C  CFDD F01B          	movff	postdec2,_handleListHead$1146+2
  3037                           
  3038                           ;task.c: 98:         enqueue(task_list[pos].func_ptr);
  3039  000060  C019  F00A         	movff	_handleListHead$1146,enqueue@ptr
  3040  000064  C01A  F00B         	movff	_handleListHead$1146+1,enqueue@ptr+1
  3041  000068  C01B  F00C         	movff	_handleListHead$1146+2,enqueue@ptr+2
  3042  00006C  EC6D  F008         	call	_enqueue	;wreg free
  3043                           
  3044                           ;task.c: 99:         head = task_list[pos].next;
  3045  000070  C024  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3046  000074  C025  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3047  000078  0E00               	movlw	0
  3048  00007A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3049  00007C  0E0D               	movlw	13
  3050  00007E  6E03               	movwf	i2___wmul@multiplicand^0,c
  3051  000080  ECE9  F009         	call	i2___wmul	;wreg free
  3052  000084  0ED4               	movlw	low (_task_list+11)
  3053  000086  2401               	addwf	?i2___wmul^0,w,c
  3054  000088  6ED9               	movwf	fsr2l,c
  3055  00008A  0E00               	movlw	high (_task_list+11)
  3056  00008C  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3057  00008E  6EDA               	movwf	fsr2h,c
  3058  000090  CFDE F09C          	movff	postinc2,_head
  3059  000094  CFDD F09D          	movff	postdec2,_head+1
  3060                           
  3061                           ;task.c: 100:         if(task_list[pos].period_t == 0) {
  3062  000098  C024  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3063  00009C  C025  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3064  0000A0  0E00               	movlw	0
  3065  0000A2  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3066  0000A4  0E0D               	movlw	13
  3067  0000A6  6E03               	movwf	i2___wmul@multiplicand^0,c
  3068  0000A8  ECE9  F009         	call	i2___wmul	;wreg free
  3069  0000AC  0ECD               	movlw	low (_task_list+4)
  3070  0000AE  2401               	addwf	?i2___wmul^0,w,c
  3071  0000B0  6ED9               	movwf	fsr2l,c
  3072  0000B2  0E00               	movlw	high (_task_list+4)
  3073  0000B4  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3074  0000B6  6EDA               	movwf	fsr2h,c
  3075  0000B8  50DE               	movf	postinc2,w,c
  3076  0000BA  10DE               	iorwf	postinc2,w,c
  3077  0000BC  10DE               	iorwf	postinc2,w,c
  3078  0000BE  10DE               	iorwf	postinc2,w,c
  3079  0000C0  A4D8               	btfss	status,2,c
  3080  0000C2  EF65  F000         	goto	i2u140_41
  3081  0000C6  EF67  F000         	goto	i2u140_40
  3082  0000CA                     i2u140_41:
  3083  0000CA  EF6C  F000         	goto	i2l1727
  3084  0000CE                     i2u140_40:
  3085  0000CE                     
  3086                           ;task.c: 101:             removeTask(pos);
  3087  0000CE  5024               	movf	handleListHead@pos^0,w,c
  3088  0000D0  ECE7  F004         	call	_removeTask
  3089                           
  3090                           ;task.c: 102:         }
  3091  0000D4  EFC3  F002         	goto	i2l190
  3092  0000D8                     i2l1727:
  3093                           
  3094                           ;task.c: 104:             task_list[pos].delay_t = task_list[pos].period_t;
  3095  0000D8  C024  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3096  0000DC  C025  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3097  0000E0  0E00               	movlw	0
  3098  0000E2  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3099  0000E4  0E0D               	movlw	13
  3100  0000E6  6E03               	movwf	i2___wmul@multiplicand^0,c
  3101  0000E8  ECE9  F009         	call	i2___wmul	;wreg free
  3102  0000EC  0ECD               	movlw	low (_task_list+4)
  3103  0000EE  2401               	addwf	?i2___wmul^0,w,c
  3104  0000F0  6ED9               	movwf	fsr2l,c
  3105  0000F2  0E00               	movlw	high (_task_list+4)
  3106  0000F4  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3107  0000F6  6EDA               	movwf	fsr2h,c
  3108  0000F8  C024  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3109  0000FC  C025  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3110  000100  0E00               	movlw	0
  3111  000102  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3112  000104  0E0D               	movlw	13
  3113  000106  6E03               	movwf	i2___wmul@multiplicand^0,c
  3114  000108  ECE9  F009         	call	i2___wmul	;wreg free
  3115  00010C  0EC9               	movlw	low _task_list
  3116  00010E  2401               	addwf	?i2___wmul^0,w,c
  3117  000110  6EE1               	movwf	fsr1l,c
  3118  000112  0E00               	movlw	high _task_list
  3119  000114  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3120  000116  6EE2               	movwf	fsr1h,c
  3121  000118  CFDE FFE6          	movff	postinc2,postinc1
  3122  00011C  CFDE FFE6          	movff	postinc2,postinc1
  3123  000120  CFDE FFE6          	movff	postinc2,postinc1
  3124  000124  CFDE FFE6          	movff	postinc2,postinc1
  3125  000128                     
  3126                           ;task.c: 105:             if(head == 105 || (head != 105 && task_list[head].delay_t > ta
      +                          sk_list[pos].delay_t)) {
  3127  000128  0E69               	movlw	105
  3128  00012A  0100               	movlb	0	; () banked
  3129  00012C  199C               	xorwf	_head& (0+255),w,b
  3130  00012E  119D               	iorwf	(_head+1)& (0+255),w,b
  3131  000130  B4D8               	btfsc	status,2,c
  3132  000132  EF9D  F000         	goto	i2u141_41
  3133  000136  EF9F  F000         	goto	i2u141_40
  3134  00013A                     i2u141_41:
  3135  00013A  EFD8  F000         	goto	i2l1735
  3136  00013E                     i2u141_40:
  3137  00013E                     
  3138                           ; BSR set to: 0
  3139  00013E  0E69               	movlw	105
  3140  000140  199C               	xorwf	_head& (0+255),w,b
  3141  000142  119D               	iorwf	(_head+1)& (0+255),w,b
  3142  000144  B4D8               	btfsc	status,2,c
  3143  000146  EFA7  F000         	goto	i2u142_41
  3144  00014A  EFA9  F000         	goto	i2u142_40
  3145  00014E                     i2u142_41:
  3146  00014E  EFF2  F000         	goto	i2l1739
  3147  000152                     i2u142_40:
  3148  000152                     
  3149                           ; BSR set to: 0
  3150  000152  C09C  F001         	movff	_head,i2___wmul@multiplier
  3151  000156  C09D  F002         	movff	_head+1,i2___wmul@multiplier+1
  3152  00015A  0E00               	movlw	0
  3153  00015C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3154  00015E  0E0D               	movlw	13
  3155  000160  6E03               	movwf	i2___wmul@multiplicand^0,c
  3156  000162  ECE9  F009         	call	i2___wmul	;wreg free
  3157  000166  0EC9               	movlw	low _task_list
  3158  000168  2401               	addwf	?i2___wmul^0,w,c
  3159  00016A  6ED9               	movwf	fsr2l,c
  3160  00016C  0E00               	movlw	high _task_list
  3161  00016E  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3162  000170  6EDA               	movwf	fsr2h,c
  3163  000172  C024  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3164  000176  C025  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3165  00017A  0E00               	movlw	0
  3166  00017C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3167  00017E  0E0D               	movlw	13
  3168  000180  6E03               	movwf	i2___wmul@multiplicand^0,c
  3169  000182  ECE9  F009         	call	i2___wmul	;wreg free
  3170  000186  0EC9               	movlw	low _task_list
  3171  000188  2401               	addwf	?i2___wmul^0,w,c
  3172  00018A  6EE1               	movwf	fsr1l,c
  3173  00018C  0E00               	movlw	high _task_list
  3174  00018E  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3175  000190  6EE2               	movwf	fsr1h,c
  3176  000192  50DE               	movf	postinc2,w,c
  3177  000194  5CE6               	subwf	postinc1,w,c
  3178  000196  50DE               	movf	postinc2,w,c
  3179  000198  58E6               	subwfb	postinc1,w,c
  3180  00019A  50DE               	movf	postinc2,w,c
  3181  00019C  58E6               	subwfb	postinc1,w,c
  3182  00019E  50DE               	movf	postinc2,w,c
  3183  0001A0  58E6               	subwfb	postinc1,w,c
  3184  0001A2  B0D8               	btfsc	status,0,c
  3185  0001A4  EFD6  F000         	goto	i2u143_41
  3186  0001A8  EFD8  F000         	goto	i2u143_40
  3187  0001AC                     i2u143_41:
  3188  0001AC  EFF2  F000         	goto	i2l1739
  3189  0001B0                     i2u143_40:
  3190  0001B0                     i2l1735:
  3191                           
  3192                           ;task.c: 106:                 task_list[pos].next = head;
  3193  0001B0  C024  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3194  0001B4  C025  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3195  0001B8  0E00               	movlw	0
  3196  0001BA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3197  0001BC  0E0D               	movlw	13
  3198  0001BE  6E03               	movwf	i2___wmul@multiplicand^0,c
  3199  0001C0  ECE9  F009         	call	i2___wmul	;wreg free
  3200  0001C4  0ED4               	movlw	low (_task_list+11)
  3201  0001C6  2401               	addwf	?i2___wmul^0,w,c
  3202  0001C8  6ED9               	movwf	fsr2l,c
  3203  0001CA  0E00               	movlw	high (_task_list+11)
  3204  0001CC  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3205  0001CE  6EDA               	movwf	fsr2h,c
  3206  0001D0  C09C  FFDE         	movff	_head,postinc2
  3207  0001D4  C09D  FFDD         	movff	_head+1,postdec2
  3208  0001D8                     
  3209                           ;task.c: 107:                 head = pos;
  3210  0001D8  C024  F09C         	movff	handleListHead@pos,_head
  3211  0001DC  C025  F09D         	movff	handleListHead@pos+1,_head+1
  3212                           
  3213                           ;task.c: 108:             } else {
  3214  0001E0  EF2D  F002         	goto	i2l197
  3215  0001E4                     i2l1739:
  3216                           
  3217                           ;task.c: 109:                 task_list[pos].delay_t = task_list[pos].delay_t - task_lis
      +                          t[head].delay_t;
  3218  0001E4  C09C  F001         	movff	_head,i2___wmul@multiplier
  3219  0001E8  C09D  F002         	movff	_head+1,i2___wmul@multiplier+1
  3220  0001EC  0E00               	movlw	0
  3221  0001EE  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3222  0001F0  0E0D               	movlw	13
  3223  0001F2  6E03               	movwf	i2___wmul@multiplicand^0,c
  3224  0001F4  ECE9  F009         	call	i2___wmul	;wreg free
  3225  0001F8  0EC9               	movlw	low _task_list
  3226  0001FA  2401               	addwf	?i2___wmul^0,w,c
  3227  0001FC  6ED9               	movwf	fsr2l,c
  3228  0001FE  0E00               	movlw	high _task_list
  3229  000200  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3230  000202  6EDA               	movwf	fsr2h,c
  3231  000204  CFDE F00D          	movff	postinc2,??_handleListHead
  3232  000208  CFDE F00E          	movff	postinc2,??_handleListHead+1
  3233  00020C  CFDE F00F          	movff	postinc2,??_handleListHead+2
  3234  000210  CFDE F010          	movff	postinc2,??_handleListHead+3
  3235  000214  C024  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3236  000218  C025  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3237  00021C  0E00               	movlw	0
  3238  00021E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3239  000220  0E0D               	movlw	13
  3240  000222  6E03               	movwf	i2___wmul@multiplicand^0,c
  3241  000224  ECE9  F009         	call	i2___wmul	;wreg free
  3242  000228  0EC9               	movlw	low _task_list
  3243  00022A  2401               	addwf	?i2___wmul^0,w,c
  3244  00022C  6ED9               	movwf	fsr2l,c
  3245  00022E  0E00               	movlw	high _task_list
  3246  000230  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3247  000232  6EDA               	movwf	fsr2h,c
  3248  000234  CFDE F011          	movff	postinc2,??_handleListHead+4
  3249  000238  CFDE F012          	movff	postinc2,??_handleListHead+5
  3250  00023C  CFDE F013          	movff	postinc2,??_handleListHead+6
  3251  000240  CFDE F014          	movff	postinc2,??_handleListHead+7
  3252  000244  500D               	movf	??_handleListHead^0,w,c
  3253  000246  5C11               	subwf	(??_handleListHead+4)^0,w,c
  3254  000248  6E15               	movwf	(??_handleListHead+8)^0,c
  3255  00024A  500E               	movf	(??_handleListHead+1)^0,w,c
  3256  00024C  5812               	subwfb	(??_handleListHead+5)^0,w,c
  3257  00024E  6E16               	movwf	(??_handleListHead+9)^0,c
  3258  000250  500F               	movf	(??_handleListHead+2)^0,w,c
  3259  000252  5813               	subwfb	(??_handleListHead+6)^0,w,c
  3260  000254  6E17               	movwf	(??_handleListHead+10)^0,c
  3261  000256  5010               	movf	(??_handleListHead+3)^0,w,c
  3262  000258  5814               	subwfb	(??_handleListHead+7)^0,w,c
  3263  00025A  6E18               	movwf	(??_handleListHead+11)^0,c
  3264  00025C  C024  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3265  000260  C025  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3266  000264  0E00               	movlw	0
  3267  000266  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3268  000268  0E0D               	movlw	13
  3269  00026A  6E03               	movwf	i2___wmul@multiplicand^0,c
  3270  00026C  ECE9  F009         	call	i2___wmul	;wreg free
  3271  000270  0EC9               	movlw	low _task_list
  3272  000272  2401               	addwf	?i2___wmul^0,w,c
  3273  000274  6ED9               	movwf	fsr2l,c
  3274  000276  0E00               	movlw	high _task_list
  3275  000278  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3276  00027A  6EDA               	movwf	fsr2h,c
  3277  00027C  C015  FFDE         	movff	??_handleListHead+8,postinc2
  3278  000280  C016  FFDE         	movff	??_handleListHead+9,postinc2
  3279  000284  C017  FFDE         	movff	??_handleListHead+10,postinc2
  3280  000288  C018  FFDE         	movff	??_handleListHead+11,postinc2
  3281                           
  3282                           ;task.c: 110:                 int cur = task_list[head].next;
  3283  00028C  C09C  F001         	movff	_head,i2___wmul@multiplier
  3284  000290  C09D  F002         	movff	_head+1,i2___wmul@multiplier+1
  3285  000294  0E00               	movlw	0
  3286  000296  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3287  000298  0E0D               	movlw	13
  3288  00029A  6E03               	movwf	i2___wmul@multiplicand^0,c
  3289  00029C  ECE9  F009         	call	i2___wmul	;wreg free
  3290  0002A0  0ED4               	movlw	low (_task_list+11)
  3291  0002A2  2401               	addwf	?i2___wmul^0,w,c
  3292  0002A4  6ED9               	movwf	fsr2l,c
  3293  0002A6  0E00               	movlw	high (_task_list+11)
  3294  0002A8  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3295  0002AA  6EDA               	movwf	fsr2h,c
  3296  0002AC  CFDE F022          	movff	postinc2,handleListHead@cur
  3297  0002B0  CFDD F023          	movff	postdec2,handleListHead@cur+1
  3298  0002B4                     
  3299                           ;task.c: 111:                 int prev = head;
  3300  0002B4  C09C  F020         	movff	_head,handleListHead@prev
  3301  0002B8  C09D  F021         	movff	_head+1,handleListHead@prev+1
  3302                           
  3303                           ;task.c: 112:                 while(cur != 105 && task_list[cur].delay_t <= task_list[po
      +                          s].delay_t) {
  3304  0002BC  EFCC  F001         	goto	i2l1747
  3305  0002C0                     i2l1743:
  3306                           
  3307                           ;task.c: 113:                     task_list[pos].delay_t = task_list[pos].delay_t - task
      +                          _list[cur].delay_t;
  3308  0002C0  C022  F001         	movff	handleListHead@cur,i2___wmul@multiplier
  3309  0002C4  C023  F002         	movff	handleListHead@cur+1,i2___wmul@multiplier+1
  3310  0002C8  0E00               	movlw	0
  3311  0002CA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3312  0002CC  0E0D               	movlw	13
  3313  0002CE  6E03               	movwf	i2___wmul@multiplicand^0,c
  3314  0002D0  ECE9  F009         	call	i2___wmul	;wreg free
  3315  0002D4  0EC9               	movlw	low _task_list
  3316  0002D6  2401               	addwf	?i2___wmul^0,w,c
  3317  0002D8  6ED9               	movwf	fsr2l,c
  3318  0002DA  0E00               	movlw	high _task_list
  3319  0002DC  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3320  0002DE  6EDA               	movwf	fsr2h,c
  3321  0002E0  CFDE F00D          	movff	postinc2,??_handleListHead
  3322  0002E4  CFDE F00E          	movff	postinc2,??_handleListHead+1
  3323  0002E8  CFDE F00F          	movff	postinc2,??_handleListHead+2
  3324  0002EC  CFDE F010          	movff	postinc2,??_handleListHead+3
  3325  0002F0  C024  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3326  0002F4  C025  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3327  0002F8  0E00               	movlw	0
  3328  0002FA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3329  0002FC  0E0D               	movlw	13
  3330  0002FE  6E03               	movwf	i2___wmul@multiplicand^0,c
  3331  000300  ECE9  F009         	call	i2___wmul	;wreg free
  3332  000304  0EC9               	movlw	low _task_list
  3333  000306  2401               	addwf	?i2___wmul^0,w,c
  3334  000308  6ED9               	movwf	fsr2l,c
  3335  00030A  0E00               	movlw	high _task_list
  3336  00030C  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3337  00030E  6EDA               	movwf	fsr2h,c
  3338  000310  CFDE F011          	movff	postinc2,??_handleListHead+4
  3339  000314  CFDE F012          	movff	postinc2,??_handleListHead+5
  3340  000318  CFDE F013          	movff	postinc2,??_handleListHead+6
  3341  00031C  CFDE F014          	movff	postinc2,??_handleListHead+7
  3342  000320  500D               	movf	??_handleListHead^0,w,c
  3343  000322  5C11               	subwf	(??_handleListHead+4)^0,w,c
  3344  000324  6E15               	movwf	(??_handleListHead+8)^0,c
  3345  000326  500E               	movf	(??_handleListHead+1)^0,w,c
  3346  000328  5812               	subwfb	(??_handleListHead+5)^0,w,c
  3347  00032A  6E16               	movwf	(??_handleListHead+9)^0,c
  3348  00032C  500F               	movf	(??_handleListHead+2)^0,w,c
  3349  00032E  5813               	subwfb	(??_handleListHead+6)^0,w,c
  3350  000330  6E17               	movwf	(??_handleListHead+10)^0,c
  3351  000332  5010               	movf	(??_handleListHead+3)^0,w,c
  3352  000334  5814               	subwfb	(??_handleListHead+7)^0,w,c
  3353  000336  6E18               	movwf	(??_handleListHead+11)^0,c
  3354  000338  C024  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3355  00033C  C025  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3356  000340  0E00               	movlw	0
  3357  000342  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3358  000344  0E0D               	movlw	13
  3359  000346  6E03               	movwf	i2___wmul@multiplicand^0,c
  3360  000348  ECE9  F009         	call	i2___wmul	;wreg free
  3361  00034C  0EC9               	movlw	low _task_list
  3362  00034E  2401               	addwf	?i2___wmul^0,w,c
  3363  000350  6ED9               	movwf	fsr2l,c
  3364  000352  0E00               	movlw	high _task_list
  3365  000354  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3366  000356  6EDA               	movwf	fsr2h,c
  3367  000358  C015  FFDE         	movff	??_handleListHead+8,postinc2
  3368  00035C  C016  FFDE         	movff	??_handleListHead+9,postinc2
  3369  000360  C017  FFDE         	movff	??_handleListHead+10,postinc2
  3370  000364  C018  FFDE         	movff	??_handleListHead+11,postinc2
  3371  000368                     
  3372                           ;task.c: 114:                     prev = cur;
  3373  000368  C022  F020         	movff	handleListHead@cur,handleListHead@prev
  3374  00036C  C023  F021         	movff	handleListHead@cur+1,handleListHead@prev+1
  3375                           
  3376                           ;task.c: 115:                     cur = task_list[cur].next;
  3377  000370  C022  F001         	movff	handleListHead@cur,i2___wmul@multiplier
  3378  000374  C023  F002         	movff	handleListHead@cur+1,i2___wmul@multiplier+1
  3379  000378  0E00               	movlw	0
  3380  00037A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3381  00037C  0E0D               	movlw	13
  3382  00037E  6E03               	movwf	i2___wmul@multiplicand^0,c
  3383  000380  ECE9  F009         	call	i2___wmul	;wreg free
  3384  000384  0ED4               	movlw	low (_task_list+11)
  3385  000386  2401               	addwf	?i2___wmul^0,w,c
  3386  000388  6ED9               	movwf	fsr2l,c
  3387  00038A  0E00               	movlw	high (_task_list+11)
  3388  00038C  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3389  00038E  6EDA               	movwf	fsr2h,c
  3390  000390  CFDE F022          	movff	postinc2,handleListHead@cur
  3391  000394  CFDD F023          	movff	postdec2,handleListHead@cur+1
  3392  000398                     i2l1747:
  3393                           
  3394                           ;task.c: 112:                 while(cur != 105 && task_list[cur].delay_t <= task_list[po
      +                          s].delay_t) {
  3395  000398  0E69               	movlw	105
  3396  00039A  1822               	xorwf	handleListHead@cur^0,w,c
  3397  00039C  1023               	iorwf	(handleListHead@cur+1)^0,w,c
  3398  00039E  B4D8               	btfsc	status,2,c
  3399  0003A0  EFD4  F001         	goto	i2u144_41
  3400  0003A4  EFD6  F001         	goto	i2u144_40
  3401  0003A8                     i2u144_41:
  3402  0003A8  EF05  F002         	goto	i2l1751
  3403  0003AC                     i2u144_40:
  3404  0003AC  C022  F001         	movff	handleListHead@cur,i2___wmul@multiplier
  3405  0003B0  C023  F002         	movff	handleListHead@cur+1,i2___wmul@multiplier+1
  3406  0003B4  0E00               	movlw	0
  3407  0003B6  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3408  0003B8  0E0D               	movlw	13
  3409  0003BA  6E03               	movwf	i2___wmul@multiplicand^0,c
  3410  0003BC  ECE9  F009         	call	i2___wmul	;wreg free
  3411  0003C0  0EC9               	movlw	low _task_list
  3412  0003C2  2401               	addwf	?i2___wmul^0,w,c
  3413  0003C4  6ED9               	movwf	fsr2l,c
  3414  0003C6  0E00               	movlw	high _task_list
  3415  0003C8  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3416  0003CA  6EDA               	movwf	fsr2h,c
  3417  0003CC  C024  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3418  0003D0  C025  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3419  0003D4  0E00               	movlw	0
  3420  0003D6  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3421  0003D8  0E0D               	movlw	13
  3422  0003DA  6E03               	movwf	i2___wmul@multiplicand^0,c
  3423  0003DC  ECE9  F009         	call	i2___wmul	;wreg free
  3424  0003E0  0EC9               	movlw	low _task_list
  3425  0003E2  2401               	addwf	?i2___wmul^0,w,c
  3426  0003E4  6EE1               	movwf	fsr1l,c
  3427  0003E6  0E00               	movlw	high _task_list
  3428  0003E8  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3429  0003EA  6EE2               	movwf	fsr1h,c
  3430  0003EC  50DE               	movf	postinc2,w,c
  3431  0003EE  5CE6               	subwf	postinc1,w,c
  3432  0003F0  50DE               	movf	postinc2,w,c
  3433  0003F2  58E6               	subwfb	postinc1,w,c
  3434  0003F4  50DE               	movf	postinc2,w,c
  3435  0003F6  58E6               	subwfb	postinc1,w,c
  3436  0003F8  50DE               	movf	postinc2,w,c
  3437  0003FA  58E6               	subwfb	postinc1,w,c
  3438  0003FC  B0D8               	btfsc	status,0,c
  3439  0003FE  EF03  F002         	goto	i2u145_41
  3440  000402  EF05  F002         	goto	i2u145_40
  3441  000406                     i2u145_41:
  3442  000406  EF60  F001         	goto	i2l1743
  3443  00040A                     i2u145_40:
  3444  00040A                     i2l1751:
  3445                           
  3446                           ;task.c: 117:                 task_list[prev].next = pos;
  3447  00040A  C020  F001         	movff	handleListHead@prev,i2___wmul@multiplier
  3448  00040E  C021  F002         	movff	handleListHead@prev+1,i2___wmul@multiplier+1
  3449  000412  0E00               	movlw	0
  3450  000414  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3451  000416  0E0D               	movlw	13
  3452  000418  6E03               	movwf	i2___wmul@multiplicand^0,c
  3453  00041A  ECE9  F009         	call	i2___wmul	;wreg free
  3454  00041E  0ED4               	movlw	low (_task_list+11)
  3455  000420  2401               	addwf	?i2___wmul^0,w,c
  3456  000422  6ED9               	movwf	fsr2l,c
  3457  000424  0E00               	movlw	high (_task_list+11)
  3458  000426  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3459  000428  6EDA               	movwf	fsr2h,c
  3460  00042A  C024  FFDE         	movff	handleListHead@pos,postinc2
  3461  00042E  C025  FFDD         	movff	handleListHead@pos+1,postdec2
  3462                           
  3463                           ;task.c: 118:                 task_list[pos].next = cur;
  3464  000432  C024  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3465  000436  C025  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3466  00043A  0E00               	movlw	0
  3467  00043C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3468  00043E  0E0D               	movlw	13
  3469  000440  6E03               	movwf	i2___wmul@multiplicand^0,c
  3470  000442  ECE9  F009         	call	i2___wmul	;wreg free
  3471  000446  0ED4               	movlw	low (_task_list+11)
  3472  000448  2401               	addwf	?i2___wmul^0,w,c
  3473  00044A  6ED9               	movwf	fsr2l,c
  3474  00044C  0E00               	movlw	high (_task_list+11)
  3475  00044E  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3476  000450  6EDA               	movwf	fsr2h,c
  3477  000452  C022  FFDE         	movff	handleListHead@cur,postinc2
  3478  000456  C023  FFDD         	movff	handleListHead@cur+1,postdec2
  3479  00045A                     i2l197:
  3480                           
  3481                           ;task.c: 120:             if(task_list[pos].next != 105)
  3482  00045A  C024  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3483  00045E  C025  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3484  000462  0E00               	movlw	0
  3485  000464  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3486  000466  0E0D               	movlw	13
  3487  000468  6E03               	movwf	i2___wmul@multiplicand^0,c
  3488  00046A  ECE9  F009         	call	i2___wmul	;wreg free
  3489  00046E  0ED4               	movlw	low (_task_list+11)
  3490  000470  2401               	addwf	?i2___wmul^0,w,c
  3491  000472  6ED9               	movwf	fsr2l,c
  3492  000474  0E00               	movlw	high (_task_list+11)
  3493  000476  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3494  000478  6EDA               	movwf	fsr2h,c
  3495  00047A  0E69               	movlw	105
  3496  00047C  18DE               	xorwf	postinc2,w,c
  3497  00047E  10DE               	iorwf	postinc2,w,c
  3498  000480  B4D8               	btfsc	status,2,c
  3499  000482  EF45  F002         	goto	i2u146_41
  3500  000486  EF47  F002         	goto	i2u146_40
  3501  00048A                     i2u146_41:
  3502  00048A  EFC3  F002         	goto	i2l190
  3503  00048E                     i2u146_40:
  3504  00048E                     
  3505                           ;task.c: 121:                 task_list[task_list[pos].next].delay_t = task_list[task_li
      +                          st[pos].next].delay_t - task_list[pos].delay_t;
  3506  00048E  C024  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3507  000492  C025  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3508  000496  0E00               	movlw	0
  3509  000498  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3510  00049A  0E0D               	movlw	13
  3511  00049C  6E03               	movwf	i2___wmul@multiplicand^0,c
  3512  00049E  ECE9  F009         	call	i2___wmul	;wreg free
  3513  0004A2  0ED4               	movlw	low (_task_list+11)
  3514  0004A4  2401               	addwf	?i2___wmul^0,w,c
  3515  0004A6  6ED9               	movwf	fsr2l,c
  3516  0004A8  0E00               	movlw	high (_task_list+11)
  3517  0004AA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3518  0004AC  6EDA               	movwf	fsr2h,c
  3519  0004AE  CFDE F01C          	movff	postinc2,_handleListHead$1147
  3520  0004B2  CFDD F01D          	movff	postdec2,_handleListHead$1147+1
  3521                           
  3522                           ;task.c: 121:                 task_list[task_list[pos].next].delay_t = task_list[task_li
      +                          st[pos].next].delay_t - task_list[pos].delay_t;
  3523  0004B6  C024  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3524  0004BA  C025  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3525  0004BE  0E00               	movlw	0
  3526  0004C0  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3527  0004C2  0E0D               	movlw	13
  3528  0004C4  6E03               	movwf	i2___wmul@multiplicand^0,c
  3529  0004C6  ECE9  F009         	call	i2___wmul	;wreg free
  3530  0004CA  0ED4               	movlw	low (_task_list+11)
  3531  0004CC  2401               	addwf	?i2___wmul^0,w,c
  3532  0004CE  6ED9               	movwf	fsr2l,c
  3533  0004D0  0E00               	movlw	high (_task_list+11)
  3534  0004D2  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3535  0004D4  6EDA               	movwf	fsr2h,c
  3536  0004D6  CFDE F01E          	movff	postinc2,_handleListHead$1148
  3537  0004DA  CFDD F01F          	movff	postdec2,_handleListHead$1148+1
  3538                           
  3539                           ;task.c: 121:                 task_list[task_list[pos].next].delay_t = task_list[task_li
      +                          st[pos].next].delay_t - task_list[pos].delay_t;
  3540  0004DE  C024  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  3541  0004E2  C025  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  3542  0004E6  0E00               	movlw	0
  3543  0004E8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3544  0004EA  0E0D               	movlw	13
  3545  0004EC  6E03               	movwf	i2___wmul@multiplicand^0,c
  3546  0004EE  ECE9  F009         	call	i2___wmul	;wreg free
  3547  0004F2  0EC9               	movlw	low _task_list
  3548  0004F4  2401               	addwf	?i2___wmul^0,w,c
  3549  0004F6  6ED9               	movwf	fsr2l,c
  3550  0004F8  0E00               	movlw	high _task_list
  3551  0004FA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3552  0004FC  6EDA               	movwf	fsr2h,c
  3553  0004FE  CFDE F00D          	movff	postinc2,??_handleListHead
  3554  000502  CFDE F00E          	movff	postinc2,??_handleListHead+1
  3555  000506  CFDE F00F          	movff	postinc2,??_handleListHead+2
  3556  00050A  CFDE F010          	movff	postinc2,??_handleListHead+3
  3557  00050E  C01C  F001         	movff	_handleListHead$1147,i2___wmul@multiplier
  3558  000512  C01D  F002         	movff	_handleListHead$1147+1,i2___wmul@multiplier+1
  3559  000516  0E00               	movlw	0
  3560  000518  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3561  00051A  0E0D               	movlw	13
  3562  00051C  6E03               	movwf	i2___wmul@multiplicand^0,c
  3563  00051E  ECE9  F009         	call	i2___wmul	;wreg free
  3564  000522  0EC9               	movlw	low _task_list
  3565  000524  2401               	addwf	?i2___wmul^0,w,c
  3566  000526  6ED9               	movwf	fsr2l,c
  3567  000528  0E00               	movlw	high _task_list
  3568  00052A  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3569  00052C  6EDA               	movwf	fsr2h,c
  3570  00052E  CFDE F011          	movff	postinc2,??_handleListHead+4
  3571  000532  CFDE F012          	movff	postinc2,??_handleListHead+5
  3572  000536  CFDE F013          	movff	postinc2,??_handleListHead+6
  3573  00053A  CFDE F014          	movff	postinc2,??_handleListHead+7
  3574  00053E  500D               	movf	??_handleListHead^0,w,c
  3575  000540  5C11               	subwf	(??_handleListHead+4)^0,w,c
  3576  000542  6E15               	movwf	(??_handleListHead+8)^0,c
  3577  000544  500E               	movf	(??_handleListHead+1)^0,w,c
  3578  000546  5812               	subwfb	(??_handleListHead+5)^0,w,c
  3579  000548  6E16               	movwf	(??_handleListHead+9)^0,c
  3580  00054A  500F               	movf	(??_handleListHead+2)^0,w,c
  3581  00054C  5813               	subwfb	(??_handleListHead+6)^0,w,c
  3582  00054E  6E17               	movwf	(??_handleListHead+10)^0,c
  3583  000550  5010               	movf	(??_handleListHead+3)^0,w,c
  3584  000552  5814               	subwfb	(??_handleListHead+7)^0,w,c
  3585  000554  6E18               	movwf	(??_handleListHead+11)^0,c
  3586  000556  C01E  F001         	movff	_handleListHead$1148,i2___wmul@multiplier
  3587  00055A  C01F  F002         	movff	_handleListHead$1148+1,i2___wmul@multiplier+1
  3588  00055E  0E00               	movlw	0
  3589  000560  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3590  000562  0E0D               	movlw	13
  3591  000564  6E03               	movwf	i2___wmul@multiplicand^0,c
  3592  000566  ECE9  F009         	call	i2___wmul	;wreg free
  3593  00056A  0EC9               	movlw	low _task_list
  3594  00056C  2401               	addwf	?i2___wmul^0,w,c
  3595  00056E  6ED9               	movwf	fsr2l,c
  3596  000570  0E00               	movlw	high _task_list
  3597  000572  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3598  000574  6EDA               	movwf	fsr2h,c
  3599  000576  C015  FFDE         	movff	??_handleListHead+8,postinc2
  3600  00057A  C016  FFDE         	movff	??_handleListHead+9,postinc2
  3601  00057E  C017  FFDE         	movff	??_handleListHead+10,postinc2
  3602  000582  C018  FFDE         	movff	??_handleListHead+11,postinc2
  3603  000586                     i2l190:
  3604                           
  3605                           ;task.c: 96:     while(task_list[head].delay_t == 0) {
  3606  000586  C09C  F001         	movff	_head,i2___wmul@multiplier
  3607  00058A  C09D  F002         	movff	_head+1,i2___wmul@multiplier+1
  3608  00058E  0E00               	movlw	0
  3609  000590  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3610  000592  0E0D               	movlw	13
  3611  000594  6E03               	movwf	i2___wmul@multiplicand^0,c
  3612  000596  ECE9  F009         	call	i2___wmul	;wreg free
  3613  00059A  0EC9               	movlw	low _task_list
  3614  00059C  2401               	addwf	?i2___wmul^0,w,c
  3615  00059E  6ED9               	movwf	fsr2l,c
  3616  0005A0  0E00               	movlw	high _task_list
  3617  0005A2  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3618  0005A4  6EDA               	movwf	fsr2h,c
  3619  0005A6  50DE               	movf	postinc2,w,c
  3620  0005A8  10DE               	iorwf	postinc2,w,c
  3621  0005AA  10DE               	iorwf	postinc2,w,c
  3622  0005AC  10DE               	iorwf	postinc2,w,c
  3623  0005AE  B4D8               	btfsc	status,2,c
  3624  0005B0  EFDC  F002         	goto	i2u147_41
  3625  0005B4  EFDE  F002         	goto	i2u147_40
  3626  0005B8                     i2u147_41:
  3627  0005B8  EF16  F000         	goto	i2l191
  3628  0005BC                     i2u147_40:
  3629  0005BC                     
  3630                           ;task.c: 124:     task_list[head].delay_t-= 10;
  3631  0005BC  C09C  F001         	movff	_head,i2___wmul@multiplier
  3632  0005C0  C09D  F002         	movff	_head+1,i2___wmul@multiplier+1
  3633  0005C4  0E00               	movlw	0
  3634  0005C6  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3635  0005C8  0E0D               	movlw	13
  3636  0005CA  6E03               	movwf	i2___wmul@multiplicand^0,c
  3637  0005CC  ECE9  F009         	call	i2___wmul	;wreg free
  3638  0005D0  0EC9               	movlw	low _task_list
  3639  0005D2  2401               	addwf	?i2___wmul^0,w,c
  3640  0005D4  6ED9               	movwf	fsr2l,c
  3641  0005D6  0E00               	movlw	high _task_list
  3642  0005D8  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3643  0005DA  6EDA               	movwf	fsr2h,c
  3644  0005DC  0E0A               	movlw	10
  3645  0005DE  5EDE               	subwf	postinc2,f,c
  3646  0005E0  0E00               	movlw	0
  3647  0005E2  5ADE               	subwfb	postinc2,f,c
  3648  0005E4  5ADE               	subwfb	postinc2,f,c
  3649  0005E6  5ADE               	subwfb	postinc2,f,c
  3650  0005E8                     i2l189:
  3651  0005E8  0012               	return		;funcret
  3652  0005EA                     __end_of_handleListHead:
  3653                           	opt callstack 0
  3654                           
  3655 ;; *************** function _removeTask *****************
  3656 ;; Defined at:
  3657 ;;		line 62 in file "task.c"
  3658 ;; Parameters:    Size  Location     Type
  3659 ;;  idx             1    wreg     unsigned char 
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;  idx             1    5[COMRAM] unsigned char 
  3662 ;;  pos             1    4[COMRAM] unsigned char 
  3663 ;; Return value:  Size  Location     Type
  3664 ;;                  1    wreg      unsigned char 
  3665 ;; Registers used:
  3666 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3673 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3674 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3675 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3676 ;;Total ram usage:        6 bytes
  3677 ;; Hardware stack levels used:    1
  3678 ;; Hardware stack levels required when called:    1
  3679 ;; This function calls:
  3680 ;;		_isEmptyList
  3681 ;; This function is called by:
  3682 ;;		_handleListHead
  3683 ;;		_remove_timer
  3684 ;; This function uses a non-reentrant model
  3685 ;;
  3686                           
  3687                           	psect	text25
  3688  0009CE                     __ptext25:
  3689                           	opt callstack 0
  3690  0009CE                     _removeTask:
  3691                           	opt callstack 21
  3692                           
  3693                           ;incstack = 0
  3694                           ;removeTask@idx stored from wreg
  3695  0009CE  6E06               	movwf	removeTask@idx^0,c
  3696  0009D0                     
  3697                           ;task.c: 63:     if(isEmptyList() || task_list[idx].func_ptr == ((void*)0))
  3698  0009D0  EC2E  F00A         	call	_isEmptyList	;wreg free
  3699  0009D4  0900               	iorlw	0
  3700  0009D6  A4D8               	btfss	status,2,c
  3701  0009D8  EFF0  F004         	goto	i2u131_41
  3702  0009DC  EFF2  F004         	goto	i2u131_40
  3703  0009E0                     i2u131_41:
  3704  0009E0  EF04  F005         	goto	i2l1671
  3705  0009E4                     i2u131_40:
  3706  0009E4  5006               	movf	removeTask@idx^0,w,c
  3707  0009E6  0D0D               	mullw	13
  3708  0009E8  0ED1               	movlw	low (_task_list+8)
  3709  0009EA  24F3               	addwf	243,w,c
  3710  0009EC  6ED9               	movwf	fsr2l,c
  3711  0009EE  0E00               	movlw	high (_task_list+8)
  3712  0009F0  20F4               	addwfc	prodh,w,c
  3713  0009F2  6EDA               	movwf	fsr2h,c
  3714  0009F4  50DE               	movf	postinc2,w,c
  3715  0009F6  10DE               	iorwf	postinc2,w,c
  3716  0009F8  10DE               	iorwf	postinc2,w,c
  3717  0009FA  A4D8               	btfss	status,2,c
  3718  0009FC  EF02  F005         	goto	i2u132_41
  3719  000A00  EF04  F005         	goto	i2u132_40
  3720  000A04                     i2u132_41:
  3721  000A04  EF07  F005         	goto	i2l1675
  3722  000A08                     i2u132_40:
  3723  000A08                     i2l1671:
  3724                           
  3725                           ;task.c: 64:         return 0;
  3726  000A08  0E00               	movlw	0
  3727  000A0A  EFB0  F005         	goto	i2l178
  3728  000A0E                     i2l1675:
  3729                           
  3730                           ;task.c: 65:     task_list[idx].delay_t = 0;
  3731  000A0E  5006               	movf	removeTask@idx^0,w,c
  3732  000A10  0D0D               	mullw	13
  3733  000A12  0EC9               	movlw	low _task_list
  3734  000A14  24F3               	addwf	243,w,c
  3735  000A16  6ED9               	movwf	fsr2l,c
  3736  000A18  0E00               	movlw	high _task_list
  3737  000A1A  20F4               	addwfc	prodh,w,c
  3738  000A1C  6EDA               	movwf	fsr2h,c
  3739  000A1E  6ADE               	clrf	postinc2,c
  3740  000A20  6ADE               	clrf	postinc2,c
  3741  000A22  6ADE               	clrf	postinc2,c
  3742  000A24  6ADD               	clrf	postdec2,c
  3743                           
  3744                           ;task.c: 66:     task_list[idx].period_t = 0;
  3745  000A26  5006               	movf	removeTask@idx^0,w,c
  3746  000A28  0D0D               	mullw	13
  3747  000A2A  0ECD               	movlw	low (_task_list+4)
  3748  000A2C  24F3               	addwf	243,w,c
  3749  000A2E  6ED9               	movwf	fsr2l,c
  3750  000A30  0E00               	movlw	high (_task_list+4)
  3751  000A32  20F4               	addwfc	prodh,w,c
  3752  000A34  6EDA               	movwf	fsr2h,c
  3753  000A36  6ADE               	clrf	postinc2,c
  3754  000A38  6ADE               	clrf	postinc2,c
  3755  000A3A  6ADE               	clrf	postinc2,c
  3756  000A3C  6ADD               	clrf	postdec2,c
  3757                           
  3758                           ;task.c: 67:     task_list[idx].func_ptr = ((void*)0);
  3759  000A3E  5006               	movf	removeTask@idx^0,w,c
  3760  000A40  0D0D               	mullw	13
  3761  000A42  0ED1               	movlw	low (_task_list+8)
  3762  000A44  24F3               	addwf	243,w,c
  3763  000A46  6ED9               	movwf	fsr2l,c
  3764  000A48  0E00               	movlw	high (_task_list+8)
  3765  000A4A  20F4               	addwfc	prodh,w,c
  3766  000A4C  6EDA               	movwf	fsr2h,c
  3767  000A4E  0E00               	movlw	0
  3768  000A50  6EDE               	movwf	postinc2,c
  3769  000A52  0E00               	movlw	0
  3770  000A54  6EDE               	movwf	postinc2,c
  3771  000A56  0E00               	movlw	0
  3772  000A58  6EDE               	movwf	postinc2,c
  3773  000A5A                     
  3774                           ;task.c: 68:     num_task--;
  3775  000A5A  0642               	decf	_num_task^0,f,c
  3776  000A5C                     
  3777                           ;task.c: 69:     if(idx == head) {
  3778  000A5C  5006               	movf	removeTask@idx^0,w,c
  3779  000A5E  6E01               	movwf	??_removeTask^0,c
  3780  000A60  6A02               	clrf	(??_removeTask+1)^0,c
  3781  000A62  0100               	movlb	0	; () banked
  3782  000A64  519C               	movf	_head& (0+255),w,b
  3783  000A66  1801               	xorwf	??_removeTask^0,w,c
  3784  000A68  E107               	bnz	i2u133_41
  3785  000A6A  519D               	movf	(_head+1)& (0+255),w,b
  3786  000A6C  1802               	xorwf	(??_removeTask+1)^0,w,c
  3787  000A6E  A4D8               	btfss	status,2,c
  3788  000A70  EF3C  F005         	goto	i2u133_41
  3789  000A74  EF3E  F005         	goto	i2u133_40
  3790  000A78                     i2u133_41:
  3791  000A78  EF58  F005         	goto	i2l179
  3792  000A7C                     i2u133_40:
  3793  000A7C                     
  3794                           ; BSR set to: 0
  3795                           ;task.c: 70:         head = task_list[idx].next;
  3796  000A7C  5006               	movf	removeTask@idx^0,w,c
  3797  000A7E  0D0D               	mullw	13
  3798  000A80  0ED4               	movlw	low (_task_list+11)
  3799  000A82  24F3               	addwf	243,w,c
  3800  000A84  6ED9               	movwf	fsr2l,c
  3801  000A86  0E00               	movlw	high (_task_list+11)
  3802  000A88  20F4               	addwfc	prodh,w,c
  3803  000A8A  6EDA               	movwf	fsr2h,c
  3804  000A8C  CFDE F09C          	movff	postinc2,_head
  3805  000A90  CFDD F09D          	movff	postdec2,_head+1
  3806                           
  3807                           ;task.c: 71:         task_list[idx].next = -1;
  3808  000A94  5006               	movf	removeTask@idx^0,w,c
  3809  000A96  0D0D               	mullw	13
  3810  000A98  0ED4               	movlw	low (_task_list+11)
  3811  000A9A  24F3               	addwf	243,w,c
  3812  000A9C  6ED9               	movwf	fsr2l,c
  3813  000A9E  0E00               	movlw	high (_task_list+11)
  3814  000AA0  20F4               	addwfc	prodh,w,c
  3815  000AA2  6EDA               	movwf	fsr2h,c
  3816  000AA4  0EFF               	movlw	255
  3817  000AA6  6EDE               	movwf	postinc2,c
  3818  000AA8  0EFF               	movlw	255
  3819  000AAA  6EDD               	movwf	postdec2,c
  3820                           
  3821                           ;task.c: 72:     }
  3822  000AAC  EFAF  F005         	goto	i2l1691
  3823  000AB0                     i2l179:
  3824                           
  3825                           ; BSR set to: 0
  3826                           ;task.c: 74:         char pos = head;
  3827  000AB0  C09C  F005         	movff	_head,removeTask@pos
  3828                           
  3829                           ;task.c: 75:         while(task_list[pos].next != 105 && task_list[pos].next != idx) {
  3830  000AB4  EF66  F005         	goto	i2l181
  3831  000AB8                     i2l1683:
  3832                           
  3833                           ;task.c: 76:             pos = task_list[pos].next;
  3834  000AB8  5005               	movf	removeTask@pos^0,w,c
  3835  000ABA  0D0D               	mullw	13
  3836  000ABC  0ED4               	movlw	low (_task_list+11)
  3837  000ABE  24F3               	addwf	243,w,c
  3838  000AC0  6ED9               	movwf	fsr2l,c
  3839  000AC2  0E00               	movlw	high (_task_list+11)
  3840  000AC4  20F4               	addwfc	prodh,w,c
  3841  000AC6  6EDA               	movwf	fsr2h,c
  3842  000AC8  50DF               	movf	indf2,w,c
  3843  000ACA  6E05               	movwf	removeTask@pos^0,c
  3844  000ACC                     i2l181:
  3845                           
  3846                           ;task.c: 75:         while(task_list[pos].next != 105 && task_list[pos].next != idx) {
  3847  000ACC  5005               	movf	removeTask@pos^0,w,c
  3848  000ACE  0D0D               	mullw	13
  3849  000AD0  0ED4               	movlw	low (_task_list+11)
  3850  000AD2  24F3               	addwf	243,w,c
  3851  000AD4  6ED9               	movwf	fsr2l,c
  3852  000AD6  0E00               	movlw	high (_task_list+11)
  3853  000AD8  20F4               	addwfc	prodh,w,c
  3854  000ADA  6EDA               	movwf	fsr2h,c
  3855  000ADC  0E69               	movlw	105
  3856  000ADE  18DE               	xorwf	postinc2,w,c
  3857  000AE0  10DE               	iorwf	postinc2,w,c
  3858  000AE2  B4D8               	btfsc	status,2,c
  3859  000AE4  EF76  F005         	goto	i2u134_41
  3860  000AE8  EF78  F005         	goto	i2u134_40
  3861  000AEC                     i2u134_41:
  3862  000AEC  EF8F  F005         	goto	i2l1687
  3863  000AF0                     i2u134_40:
  3864  000AF0  5005               	movf	removeTask@pos^0,w,c
  3865  000AF2  0D0D               	mullw	13
  3866  000AF4  0ED4               	movlw	low (_task_list+11)
  3867  000AF6  24F3               	addwf	243,w,c
  3868  000AF8  6ED9               	movwf	fsr2l,c
  3869  000AFA  0E00               	movlw	high (_task_list+11)
  3870  000AFC  20F4               	addwfc	prodh,w,c
  3871  000AFE  6EDA               	movwf	fsr2h,c
  3872  000B00  5006               	movf	removeTask@idx^0,w,c
  3873  000B02  6E03               	movwf	(??_removeTask+2)^0,c
  3874  000B04  6A04               	clrf	(??_removeTask+3)^0,c
  3875  000B06  50DE               	movf	postinc2,w,c
  3876  000B08  1803               	xorwf	(??_removeTask+2)^0,w,c
  3877  000B0A  E107               	bnz	i2u135_41
  3878  000B0C  50DE               	movf	postinc2,w,c
  3879  000B0E  1804               	xorwf	(??_removeTask+3)^0,w,c
  3880  000B10  A4D8               	btfss	status,2,c
  3881  000B12  EF8D  F005         	goto	i2u135_41
  3882  000B16  EF8F  F005         	goto	i2u135_40
  3883  000B1A                     i2u135_41:
  3884  000B1A  EF5C  F005         	goto	i2l1683
  3885  000B1E                     i2u135_40:
  3886  000B1E                     i2l1687:
  3887                           
  3888                           ;task.c: 78:         task_list[pos].next = task_list[idx].next;
  3889  000B1E  5006               	movf	removeTask@idx^0,w,c
  3890  000B20  0D0D               	mullw	13
  3891  000B22  0ED4               	movlw	low (_task_list+11)
  3892  000B24  24F3               	addwf	243,w,c
  3893  000B26  6ED9               	movwf	fsr2l,c
  3894  000B28  0E00               	movlw	high (_task_list+11)
  3895  000B2A  20F4               	addwfc	prodh,w,c
  3896  000B2C  6EDA               	movwf	fsr2h,c
  3897  000B2E  5005               	movf	removeTask@pos^0,w,c
  3898  000B30  0D0D               	mullw	13
  3899  000B32  0ED4               	movlw	low (_task_list+11)
  3900  000B34  24F3               	addwf	243,w,c
  3901  000B36  6EE1               	movwf	fsr1l,c
  3902  000B38  0E00               	movlw	high (_task_list+11)
  3903  000B3A  20F4               	addwfc	prodh,w,c
  3904  000B3C  6EE2               	movwf	fsr1h,c
  3905  000B3E  CFDE FFE6          	movff	postinc2,postinc1
  3906  000B42  CFDD FFE5          	movff	postdec2,postdec1
  3907  000B46                     
  3908                           ;task.c: 79:         task_list[idx].next = -1;
  3909  000B46  5006               	movf	removeTask@idx^0,w,c
  3910  000B48  0D0D               	mullw	13
  3911  000B4A  0ED4               	movlw	low (_task_list+11)
  3912  000B4C  24F3               	addwf	243,w,c
  3913  000B4E  6ED9               	movwf	fsr2l,c
  3914  000B50  0E00               	movlw	high (_task_list+11)
  3915  000B52  20F4               	addwfc	prodh,w,c
  3916  000B54  6EDA               	movwf	fsr2h,c
  3917  000B56  0EFF               	movlw	255
  3918  000B58  6EDE               	movwf	postinc2,c
  3919  000B5A  0EFF               	movlw	255
  3920  000B5C  6EDD               	movwf	postdec2,c
  3921  000B5E                     i2l1691:
  3922                           
  3923                           ;task.c: 82:     return 1;
  3924  000B5E  0E01               	movlw	1
  3925  000B60                     i2l178:
  3926  000B60  0012               	return		;funcret
  3927  000B62                     __end_of_removeTask:
  3928                           	opt callstack 0
  3929                           
  3930 ;; *************** function _isEmptyList *****************
  3931 ;; Defined at:
  3932 ;;		line 3 in file "task.c"
  3933 ;; Parameters:    Size  Location     Type
  3934 ;;		None
  3935 ;; Auto vars:     Size  Location     Type
  3936 ;;		None
  3937 ;; Return value:  Size  Location     Type
  3938 ;;                  1    wreg      unsigned char 
  3939 ;; Registers used:
  3940 ;;		wreg, status,2
  3941 ;; Tracked objects:
  3942 ;;		On entry : 0/0
  3943 ;;		On exit  : 0/0
  3944 ;;		Unchanged: 0/0
  3945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3950 ;;Total ram usage:        0 bytes
  3951 ;; Hardware stack levels used:    1
  3952 ;; This function calls:
  3953 ;;		Nothing
  3954 ;; This function is called by:
  3955 ;;		_removeTask
  3956 ;; This function uses a non-reentrant model
  3957 ;;
  3958                           
  3959                           	psect	text26
  3960  00145C                     __ptext26:
  3961                           	opt callstack 0
  3962  00145C                     _isEmptyList:
  3963                           	opt callstack 21
  3964  00145C                     
  3965                           ;task.c: 4:     return num_task == 0 ? 1 : 0;
  3966  00145C  5042               	movf	_num_task^0,w,c
  3967  00145E  B4D8               	btfsc	status,2,c
  3968  001460  EF34  F00A         	goto	i2u113_41
  3969  001464  EF37  F00A         	goto	i2u113_40
  3970  001468                     i2u113_41:
  3971  001468  0E01               	movlw	1
  3972  00146A  EF38  F00A         	goto	i2u114_40
  3973  00146E                     i2u113_40:
  3974  00146E  0E00               	movlw	0
  3975  001470                     i2u114_40:
  3976  001470  0012               	return		;funcret
  3977  001472                     __end_of_isEmptyList:
  3978                           	opt callstack 0
  3979                           
  3980 ;; *************** function _enqueue *****************
  3981 ;; Defined at:
  3982 ;;		line 17 in file "ready_queue.c"
  3983 ;; Parameters:    Size  Location     Type
  3984 ;;  ptr             3    9[COMRAM] PTR FTN()void 
  3985 ;;		 -> NULL(0), blink_LED5(1), blink_LED4(1), blink_LED3(1), 
  3986 ;;		 -> blink_LED2(1), blink_LED1(1), blink_LED0(1), 
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;		None
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  1    wreg      unsigned char 
  3991 ;; Registers used:
  3992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3998 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4001 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4002 ;;Total ram usage:        3 bytes
  4003 ;; Hardware stack levels used:    1
  4004 ;; Hardware stack levels required when called:    3
  4005 ;; This function calls:
  4006 ;;		_isFullQueue
  4007 ;;		i2___awmod
  4008 ;;		i2___wmul
  4009 ;; This function is called by:
  4010 ;;		_handleListHead
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014                           	psect	text27
  4015  0010DA                     __ptext27:
  4016                           	opt callstack 0
  4017  0010DA                     _enqueue:
  4018                           	opt callstack 19
  4019  0010DA                     
  4020                           ;ready_queue.c: 18:     if(isFullQueue())
  4021  0010DA  ECFC  F009         	call	_isFullQueue	;wreg free
  4022  0010DE  0900               	iorlw	0
  4023  0010E0  B4D8               	btfsc	status,2,c
  4024  0010E2  EF75  F008         	goto	i2u119_41
  4025  0010E6  EF77  F008         	goto	i2u119_40
  4026  0010EA                     i2u119_41:
  4027  0010EA  EF79  F008         	goto	i2l1591
  4028  0010EE                     i2u119_40:
  4029  0010EE  EFAD  F008         	goto	i2l118
  4030  0010F2                     i2l1591:
  4031                           
  4032                           ;ready_queue.c: 20:     if(front == -1)
  4033  0010F2  2846               	incf	_front^0,w,c
  4034  0010F4  E106               	bnz	i2u120_41
  4035  0010F6  2847               	incf	(_front+1)^0,w,c
  4036  0010F8  A4D8               	btfss	status,2,c
  4037  0010FA  EF81  F008         	goto	i2u120_41
  4038  0010FE  EF83  F008         	goto	i2u120_40
  4039  001102                     i2u120_41:
  4040  001102  EF87  F008         	goto	i2l1595
  4041  001106                     i2u120_40:
  4042  001106                     
  4043                           ;ready_queue.c: 21:         front = 0;
  4044  001106  0E00               	movlw	0
  4045  001108  6E47               	movwf	(_front+1)^0,c
  4046  00110A  0E00               	movlw	0
  4047  00110C  6E46               	movwf	_front^0,c
  4048  00110E                     i2l1595:
  4049                           
  4050                           ;ready_queue.c: 22:     rear = (rear + 1) % 20;
  4051  00110E  0E01               	movlw	1
  4052  001110  2444               	addwf	_rear^0,w,c
  4053  001112  6E01               	movwf	i2___awmod@dividend^0,c
  4054  001114  0E00               	movlw	0
  4055  001116  2045               	addwfc	(_rear+1)^0,w,c
  4056  001118  6E02               	movwf	(i2___awmod@dividend+1)^0,c
  4057  00111A  0E00               	movlw	0
  4058  00111C  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  4059  00111E  0E14               	movlw	20
  4060  001120  6E03               	movwf	i2___awmod@divisor^0,c
  4061  001122  EC32  F007         	call	i2___awmod	;wreg free
  4062  001126  C001  F044         	movff	?i2___awmod,_rear
  4063  00112A  C002  F045         	movff	?i2___awmod+1,_rear+1
  4064  00112E                     
  4065                           ;ready_queue.c: 23:     ready_queue[rear] = ptr;
  4066  00112E  C044  F001         	movff	_rear,i2___wmul@multiplier
  4067  001132  C045  F002         	movff	_rear+1,i2___wmul@multiplier+1
  4068  001136  0E00               	movlw	0
  4069  001138  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  4070  00113A  0E03               	movlw	3
  4071  00113C  6E03               	movwf	i2___wmul@multiplicand^0,c
  4072  00113E  ECE9  F009         	call	i2___wmul	;wreg free
  4073  001142  0E60               	movlw	low _ready_queue
  4074  001144  2401               	addwf	?i2___wmul^0,w,c
  4075  001146  6ED9               	movwf	fsr2l,c
  4076  001148  0E00               	movlw	high _ready_queue
  4077  00114A  2002               	addwfc	(?i2___wmul+1)^0,w,c
  4078  00114C  6EDA               	movwf	fsr2h,c
  4079  00114E  C00A  FFDE         	movff	enqueue@ptr,postinc2
  4080  001152  C00B  FFDE         	movff	enqueue@ptr+1,postinc2
  4081  001156  C00C  FFDE         	movff	enqueue@ptr+2,postinc2
  4082  00115A                     i2l118:
  4083  00115A  0012               	return		;funcret
  4084  00115C                     __end_of_enqueue:
  4085                           	opt callstack 0
  4086                           
  4087 ;; *************** function i2___wmul *****************
  4088 ;; Defined at:
  4089 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  4090 ;; Parameters:    Size  Location     Type
  4091 ;;  multiplier      2    0[COMRAM] unsigned int 
  4092 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4093 ;; Auto vars:     Size  Location     Type
  4094 ;;  __wmul          2    4[COMRAM] unsigned int 
  4095 ;; Return value:  Size  Location     Type
  4096 ;;                  2    0[COMRAM] unsigned int 
  4097 ;; Registers used:
  4098 ;;		wreg, status,2, status,0, prodl, prodh
  4099 ;; Tracked objects:
  4100 ;;		On entry : 0/0
  4101 ;;		On exit  : 0/0
  4102 ;;		Unchanged: 0/0
  4103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4104 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4105 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4107 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4108 ;;Total ram usage:        6 bytes
  4109 ;; Hardware stack levels used:    1
  4110 ;; This function calls:
  4111 ;;		Nothing
  4112 ;; This function is called by:
  4113 ;;		_enqueue
  4114 ;;		_handleListHead
  4115 ;; This function uses a non-reentrant model
  4116 ;;
  4117                           
  4118                           	psect	text28
  4119  0013D2                     __ptext28:
  4120                           	opt callstack 0
  4121  0013D2                     i2___wmul:
  4122                           	opt callstack 22
  4123  0013D2  5001               	movf	i2___wmul@multiplier^0,w,c
  4124  0013D4  0203               	mulwf	i2___wmul@multiplicand^0,c
  4125  0013D6  CFF3 F005          	movff	prodl,i2___wmul@product
  4126  0013DA  CFF4 F006          	movff	prodh,i2___wmul@product+1
  4127  0013DE  5001               	movf	i2___wmul@multiplier^0,w,c
  4128  0013E0  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
  4129  0013E2  50F3               	movf	243,w,c
  4130  0013E4  2606               	addwf	(i2___wmul@product+1)^0,f,c
  4131  0013E6  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
  4132  0013E8  0203               	mulwf	i2___wmul@multiplicand^0,c
  4133  0013EA  50F3               	movf	243,w,c
  4134  0013EC  2606               	addwf	(i2___wmul@product+1)^0,f,c
  4135  0013EE  C005  F001         	movff	i2___wmul@product,?i2___wmul
  4136  0013F2  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  4137  0013F6  0012               	return		;funcret
  4138  0013F8                     __end_ofi2___wmul:
  4139                           	opt callstack 0
  4140                           
  4141 ;; *************** function _isFullQueue *****************
  4142 ;; Defined at:
  4143 ;;		line 7 in file "ready_queue.c"
  4144 ;; Parameters:    Size  Location     Type
  4145 ;;		None
  4146 ;; Auto vars:     Size  Location     Type
  4147 ;;		None
  4148 ;; Return value:  Size  Location     Type
  4149 ;;                  1    wreg      unsigned char 
  4150 ;; Registers used:
  4151 ;;		wreg, status,2, status,0, cstack
  4152 ;; Tracked objects:
  4153 ;;		On entry : 0/0
  4154 ;;		On exit  : 0/0
  4155 ;;		Unchanged: 0/0
  4156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4159 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4160 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4161 ;;Total ram usage:        1 bytes
  4162 ;; Hardware stack levels used:    1
  4163 ;; Hardware stack levels required when called:    2
  4164 ;; This function calls:
  4165 ;;		i2_getSizeQueue
  4166 ;; This function is called by:
  4167 ;;		_enqueue
  4168 ;; This function uses a non-reentrant model
  4169 ;;
  4170                           
  4171                           	psect	text29
  4172  0013F8                     __ptext29:
  4173                           	opt callstack 0
  4174  0013F8                     _isFullQueue:
  4175                           	opt callstack 19
  4176  0013F8                     
  4177                           ;ready_queue.c: 8:     return getSizeQueue() >= 20 ? 1 : 0;
  4178  0013F8  EC63  F009         	call	i2_getSizeQueue	;wreg free
  4179  0013FC  6E09               	movwf	??_isFullQueue^0,c
  4180  0013FE  0E14               	movlw	20
  4181  001400  6009               	cpfslt	??_isFullQueue^0,c
  4182  001402  EF05  F00A         	goto	i2u110_41
  4183  001406  EF08  F00A         	goto	i2u110_40
  4184  00140A                     i2u110_41:
  4185  00140A  0E01               	movlw	1
  4186  00140C  EF09  F00A         	goto	i2u111_40
  4187  001410                     i2u110_40:
  4188  001410  0E00               	movlw	0
  4189  001412                     i2u111_40:
  4190  001412  0012               	return		;funcret
  4191  001414                     __end_of_isFullQueue:
  4192                           	opt callstack 0
  4193                           
  4194 ;; *************** function i2_getSizeQueue *****************
  4195 ;; Defined at:
  4196 ;;		line 3 in file "ready_queue.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;		None
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;		None
  4201 ;; Return value:  Size  Location     Type
  4202 ;;                  1    wreg      unsigned char 
  4203 ;; Registers used:
  4204 ;;		wreg, status,2, status,0, cstack
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4212 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4213 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4214 ;;Total ram usage:        2 bytes
  4215 ;; Hardware stack levels used:    1
  4216 ;; Hardware stack levels required when called:    1
  4217 ;; This function calls:
  4218 ;;		i2___awmod
  4219 ;; This function is called by:
  4220 ;;		_isFullQueue
  4221 ;; This function uses a non-reentrant model
  4222 ;;
  4223                           
  4224                           	psect	text30
  4225  0012C6                     __ptext30:
  4226                           	opt callstack 0
  4227  0012C6                     i2_getSizeQueue:
  4228                           	opt callstack 19
  4229  0012C6                     
  4230                           ;ready_queue.c: 4:     return (rear - front + 1 + 20) % 20;
  4231  0012C6  5046               	movf	_front^0,w,c
  4232  0012C8  5C44               	subwf	_rear^0,w,c
  4233  0012CA  6E07               	movwf	??i2_getSizeQueue^0,c
  4234  0012CC  5047               	movf	(_front+1)^0,w,c
  4235  0012CE  5845               	subwfb	(_rear+1)^0,w,c
  4236  0012D0  6E08               	movwf	(??i2_getSizeQueue+1)^0,c
  4237  0012D2  0E15               	movlw	21
  4238  0012D4  2407               	addwf	??i2_getSizeQueue^0,w,c
  4239  0012D6  6E01               	movwf	i2___awmod@dividend^0,c
  4240  0012D8  0E00               	movlw	0
  4241  0012DA  2008               	addwfc	(??i2_getSizeQueue+1)^0,w,c
  4242  0012DC  6E02               	movwf	(i2___awmod@dividend+1)^0,c
  4243  0012DE  0E00               	movlw	0
  4244  0012E0  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  4245  0012E2  0E14               	movlw	20
  4246  0012E4  6E03               	movwf	i2___awmod@divisor^0,c
  4247  0012E6  EC32  F007         	call	i2___awmod	;wreg free
  4248  0012EA  5001               	movf	?i2___awmod^0,w,c
  4249  0012EC  0012               	return		;funcret
  4250  0012EE                     __end_ofi2_getSizeQueue:
  4251                           	opt callstack 0
  4252                           
  4253 ;; *************** function i2___awmod *****************
  4254 ;; Defined at:
  4255 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  4256 ;; Parameters:    Size  Location     Type
  4257 ;;  dividend        2    0[COMRAM] int 
  4258 ;;  divisor         2    2[COMRAM] int 
  4259 ;; Auto vars:     Size  Location     Type
  4260 ;;  __awmod         1    5[COMRAM] unsigned char 
  4261 ;;  __awmod         1    4[COMRAM] unsigned char 
  4262 ;; Return value:  Size  Location     Type
  4263 ;;                  2    0[COMRAM] int 
  4264 ;; Registers used:
  4265 ;;		wreg, status,2, status,0
  4266 ;; Tracked objects:
  4267 ;;		On entry : 0/0
  4268 ;;		On exit  : 0/0
  4269 ;;		Unchanged: 0/0
  4270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4271 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4272 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4274 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4275 ;;Total ram usage:        6 bytes
  4276 ;; Hardware stack levels used:    1
  4277 ;; This function calls:
  4278 ;;		Nothing
  4279 ;; This function is called by:
  4280 ;;		_enqueue
  4281 ;;		i2_getSizeQueue
  4282 ;; This function uses a non-reentrant model
  4283 ;;
  4284                           
  4285                           	psect	text31
  4286  000E64                     __ptext31:
  4287                           	opt callstack 0
  4288  000E64                     i2___awmod:
  4289                           	opt callstack 21
  4290  000E64  0E00               	movlw	0
  4291  000E66  6E06               	movwf	i2___awmod@sign^0,c
  4292  000E68  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
  4293  000E6A  EF3B  F007         	goto	i2u83_40
  4294  000E6E  EF39  F007         	goto	i2u83_41
  4295  000E72                     i2u83_41:
  4296  000E72  EF41  F007         	goto	i2l1437
  4297  000E76                     i2u83_40:
  4298  000E76  6C01               	negf	i2___awmod@dividend^0,c
  4299  000E78  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  4300  000E7A  B0D8               	btfsc	status,0,c
  4301  000E7C  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  4302  000E7E  0E01               	movlw	1
  4303  000E80  6E06               	movwf	i2___awmod@sign^0,c
  4304  000E82                     i2l1437:
  4305  000E82  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
  4306  000E84  EF48  F007         	goto	i2u84_40
  4307  000E88  EF46  F007         	goto	i2u84_41
  4308  000E8C                     i2u84_41:
  4309  000E8C  EF4C  F007         	goto	i2l1441
  4310  000E90                     i2u84_40:
  4311  000E90  6C03               	negf	i2___awmod@divisor^0,c
  4312  000E92  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  4313  000E94  B0D8               	btfsc	status,0,c
  4314  000E96  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  4315  000E98                     i2l1441:
  4316  000E98  5003               	movf	i2___awmod@divisor^0,w,c
  4317  000E9A  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  4318  000E9C  B4D8               	btfsc	status,2,c
  4319  000E9E  EF53  F007         	goto	i2u85_41
  4320  000EA2  EF55  F007         	goto	i2u85_40
  4321  000EA6                     i2u85_41:
  4322  000EA6  EF79  F007         	goto	i2l1457
  4323  000EAA                     i2u85_40:
  4324  000EAA  0E01               	movlw	1
  4325  000EAC  6E05               	movwf	i2___awmod@counter^0,c
  4326  000EAE  EF5D  F007         	goto	i2l1447
  4327  000EB2                     i2l1445:
  4328  000EB2  90D8               	bcf	status,0,c
  4329  000EB4  3603               	rlcf	i2___awmod@divisor^0,f,c
  4330  000EB6  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  4331  000EB8  2A05               	incf	i2___awmod@counter^0,f,c
  4332  000EBA                     i2l1447:
  4333  000EBA  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  4334  000EBC  EF62  F007         	goto	i2u86_41
  4335  000EC0  EF64  F007         	goto	i2u86_40
  4336  000EC4                     i2u86_41:
  4337  000EC4  EF59  F007         	goto	i2l1445
  4338  000EC8                     i2u86_40:
  4339  000EC8                     i2l1449:
  4340  000EC8  5003               	movf	i2___awmod@divisor^0,w,c
  4341  000ECA  5C01               	subwf	i2___awmod@dividend^0,w,c
  4342  000ECC  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  4343  000ECE  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  4344  000ED0  A0D8               	btfss	status,0,c
  4345  000ED2  EF6D  F007         	goto	i2u87_41
  4346  000ED6  EF6F  F007         	goto	i2u87_40
  4347  000EDA                     i2u87_41:
  4348  000EDA  EF73  F007         	goto	i2l1453
  4349  000EDE                     i2u87_40:
  4350  000EDE  5003               	movf	i2___awmod@divisor^0,w,c
  4351  000EE0  5E01               	subwf	i2___awmod@dividend^0,f,c
  4352  000EE2  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  4353  000EE4  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  4354  000EE6                     i2l1453:
  4355  000EE6  90D8               	bcf	status,0,c
  4356  000EE8  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  4357  000EEA  3203               	rrcf	i2___awmod@divisor^0,f,c
  4358  000EEC  2E05               	decfsz	i2___awmod@counter^0,f,c
  4359  000EEE  EF64  F007         	goto	i2l1449
  4360  000EF2                     i2l1457:
  4361  000EF2  5006               	movf	i2___awmod@sign^0,w,c
  4362  000EF4  B4D8               	btfsc	status,2,c
  4363  000EF6  EF7F  F007         	goto	i2u88_41
  4364  000EFA  EF81  F007         	goto	i2u88_40
  4365  000EFE                     i2u88_41:
  4366  000EFE  EF85  F007         	goto	i2l1461
  4367  000F02                     i2u88_40:
  4368  000F02  6C01               	negf	i2___awmod@dividend^0,c
  4369  000F04  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  4370  000F06  B0D8               	btfsc	status,0,c
  4371  000F08  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  4372  000F0A                     i2l1461:
  4373  000F0A  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  4374  000F0E  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  4375  000F12  0012               	return		;funcret
  4376  000F14                     __end_ofi2___awmod:
  4377                           	opt callstack 0
  4378  0000                     
  4379                           	psect	text32
  4380  000000                     __ptext32:
  4381                           	opt callstack 0
  4382  000000                     
  4383                           	psect	rparam
  4384  0000                     
  4385                           	psect	temp
  4386  000048                     btemp:
  4387                           	opt callstack 0
  4388  000048                     	ds	1
  4389  0000                     int$flags	set	btemp
  4390  0000                     wtemp8	set	btemp+1
  4391  0000                     ttemp5	set	btemp+1
  4392  0000                     ttemp6	set	btemp+4
  4393  0000                     ttemp7	set	btemp+8
  4394                           tosu	equ	0xFFF
  4395                           tosh	equ	0xFFE
  4396                           tosl	equ	0xFFD
  4397                           stkptr	equ	0xFFC
  4398                           pclatu	equ	0xFFB
  4399                           pclath	equ	0xFFA
  4400                           pcl	equ	0xFF9
  4401                           tblptru	equ	0xFF8
  4402                           tblptrh	equ	0xFF7
  4403                           tblptrl	equ	0xFF6
  4404                           tablat	equ	0xFF5
  4405                           prodh	equ	0xFF4
  4406                           prodl	equ	0xFF3
  4407                           indf0	equ	0xFEF
  4408                           postinc0	equ	0xFEE
  4409                           postdec0	equ	0xFED
  4410                           preinc0	equ	0xFEC
  4411                           plusw0	equ	0xFEB
  4412                           fsr0h	equ	0xFEA
  4413                           fsr0l	equ	0xFE9
  4414                           wreg	equ	0xFE8
  4415                           indf1	equ	0xFE7
  4416                           postinc1	equ	0xFE6
  4417                           postdec1	equ	0xFE5
  4418                           preinc1	equ	0xFE4
  4419                           plusw1	equ	0xFE3
  4420                           fsr1h	equ	0xFE2
  4421                           fsr1l	equ	0xFE1
  4422                           bsr	equ	0xFE0
  4423                           indf2	equ	0xFDF
  4424                           postinc2	equ	0xFDE
  4425                           postdec2	equ	0xFDD
  4426                           preinc2	equ	0xFDC
  4427                           plusw2	equ	0xFDB
  4428                           fsr2h	equ	0xFDA
  4429                           fsr2l	equ	0xFD9
  4430                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         346
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      71
    BANK0           160     55     117
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    handleListHead$1146	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(NULL[0]), blink_LED5(), blink_LED4(), blink_LED3(), 
		 -> blink_LED2(), blink_LED1(), blink_LED0(), 

    handleListHead$1124	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(NULL[0]), blink_LED5(), blink_LED4(), blink_LED3(), 
		 -> blink_LED2(), blink_LED1(), blink_LED0(), 

    register_timer@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    register_timer@callback	PTR FTN()void  size(3) Largest target is 1
		 -> blink_LED5(), blink_LED4(), blink_LED3(), blink_LED2(), 
		 -> blink_LED1(), blink_LED0(), 

    selectReadyTask@ptr	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(NULL[0]), blink_LED5(), blink_LED4(), blink_LED3(), 
		 -> blink_LED2(), blink_LED1(), blink_LED0(), 

    addTask@ptr	PTR FTN()void  size(3) Largest target is 1
		 -> blink_LED5(), blink_LED4(), blink_LED3(), blink_LED2(), 
		 -> blink_LED1(), blink_LED0(), 

    S26$func_ptr	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(NULL[0]), blink_LED5(), blink_LED4(), blink_LED3(), 
		 -> blink_LED2(), blink_LED1(), blink_LED0(), 

    task_list.func_ptr	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(NULL[0]), blink_LED5(), blink_LED4(), blink_LED3(), 
		 -> blink_LED2(), blink_LED1(), blink_LED0(), 

    sp__dequeue	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(NULL[0]), blink_LED5(), blink_LED4(), blink_LED3(), 
		 -> blink_LED2(), blink_LED1(), blink_LED0(), 

    enqueue@ptr	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(NULL[0]), blink_LED5(), blink_LED4(), blink_LED3(), 
		 -> blink_LED2(), blink_LED1(), blink_LED0(), 

    ready_queue	PTR FTN()void [20] size(3) Largest target is 1
		 -> NULL(NULL[0]), blink_LED5(), blink_LED4(), blink_LED3(), 
		 -> blink_LED2(), blink_LED1(), blink_LED0(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _timer_interrupt in COMRAM

    _timer_interrupt->_handleListHead
    _handleListHead->_enqueue
    _enqueue->_isFullQueue
    _isFullQueue->i2_getSizeQueue
    i2_getSizeQueue->i2___awmod

Critical Paths under _main in BANK0

    _main->_register_timer
    _system_initialize->_start_timer
    _start_timer->_initializeTaskList
    _initializeTaskList->___wmul
    _register_timer->_addTask
    _addTask->___wmul
    _dispatch->_selectReadyTask
    _selectReadyTask->_dequeue
    _isEmptyQueue->_getSizeQueue
    _getSizeQueue->___awmod

Critical Paths under _timer_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer_interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer_interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer_interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timer_interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timer_interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _timer_interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _timer_interrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _timer_interrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _timer_interrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _timer_interrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _timer_interrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _timer_interrupt in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _timer_interrupt in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _timer_interrupt in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _timer_interrupt in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   24445
                                             43 BANK0     12    12      0
                           _dispatch
                     _register_timer
                  _system_initialize
 ---------------------------------------------------------------------------------
 (1) _system_initialize                                    0     0      0    6196
               _interrupt_initialize
                     _osc_initialize
                     _pin_initialize
                        _start_timer
 ---------------------------------------------------------------------------------
 (2) _start_timer                                          3     3      0    6196
                                              8 BANK0      3     3      0
                 _initializeTaskList
 ---------------------------------------------------------------------------------
 (3) _initializeTaskList                                   2     2      0    6134
                                              6 BANK0      2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _pin_initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _osc_initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _interrupt_initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _register_timer                                      13     0     13    9481
                                             30 BANK0     13     0     13
                            _addTask
 ---------------------------------------------------------------------------------
 (2) _addTask                                             24    13     11    7228
                                              6 BANK0     24    13     11
                             ___wmul
                         _isFullList
 ---------------------------------------------------------------------------------
 (3) _isFullList                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dispatch                                             0     0      0    8750
                    _selectReadyTask
 ---------------------------------------------------------------------------------
 (2) _selectReadyTask                                      3     3      0    8750
                                             13 BANK0      3     3      0
                         _blink_LED0 *
                         _blink_LED1 *
                         _blink_LED2 *
                         _blink_LED3 *
                         _blink_LED4 *
                         _blink_LED5 *
                            _dequeue
                       _isEmptyQueue
 ---------------------------------------------------------------------------------
 (3) _dequeue                                              5     2      3    7782
                                              8 BANK0      5     2      3
                            ___awmod
                             ___wmul
                       _isEmptyQueue
 ---------------------------------------------------------------------------------
 (3) _isEmptyQueue                                         0     0      0     903
                       _getSizeQueue
 ---------------------------------------------------------------------------------
 (4) _getSizeQueue                                         2     2      0     903
                                              6 BANK0      2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     903
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    5942
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _blink_LED5                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _blink_LED4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _blink_LED3                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _blink_LED2                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _blink_LED1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _blink_LED0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _timer_interrupt                                      6     6      0    5210
                                             37 COMRAM     6     6      0
                     _handleListHead
 ---------------------------------------------------------------------------------
 (8) _handleListHead                                      25    25      0    5210
                                             12 COMRAM    25    25      0
                            _enqueue
                         _removeTask
                           i2___wmul
 ---------------------------------------------------------------------------------
 (9) _removeTask                                           6     6      0     310
                                              0 COMRAM     6     6      0
                        _isEmptyList
 ---------------------------------------------------------------------------------
 (10) _isEmptyList                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _enqueue                                              3     0      3    2565
                                              9 COMRAM     3     0      3
                        _isFullQueue
                          i2___awmod
                           i2___wmul
 ---------------------------------------------------------------------------------
 (9) i2___wmul                                             6     2      4    1667
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) _isFullQueue                                         1     1      0     400
                                              8 COMRAM     1     1      0
                     i2_getSizeQueue
 ---------------------------------------------------------------------------------
 (11) i2_getSizeQueue                                      2     2      0     400
                                              6 COMRAM     2     2      0
                          i2___awmod
 ---------------------------------------------------------------------------------
 (10) i2___awmod                                           6     2      4     400
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dispatch
     _selectReadyTask
       _blink_LED0 *
       _blink_LED1 *
       _blink_LED2 *
       _blink_LED3 *
       _blink_LED4 *
       _blink_LED5 *
       _dequeue *
         ___awmod
         ___wmul
         _isEmptyQueue
           _getSizeQueue
             ___awmod
       _isEmptyQueue *
         _getSizeQueue
           ___awmod
   _register_timer
     _addTask
       ___wmul
       _isFullList
   _system_initialize
     _interrupt_initialize
     _osc_initialize
     _pin_initialize
     _start_timer
       _initializeTaskList
         ___wmul

 _timer_interrupt (ROOT)
   _handleListHead
     _enqueue
       _isFullQueue
         i2_getSizeQueue
           i2___awmod
       i2___awmod
       i2___wmul
     _removeTask
       _isEmptyList
     i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0     104      37        6.6%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     37      75       5       73.1%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      47       1       75.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BC      32        0.0%
DATA                 0      0     1C0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Oct 06 18:24:45 2019

             ??i2_getSizeQueue 0007                             l32 1384                             l41 1312  
                           l35 135E                             l44 13D0                             l29 13AA  
                           l38 1338                             l90 145A                             l93 147C  
                           l87 1476                             l96 142C                 ??_getSizeQueue 00A4  
          ___wmul@multiplicand 00A0                            l114 123E                            l122 107E  
                          l107 129C                            l123 10D8                            l211 11B4  
                          l154 0DB0                            l149 1444                            l261 0FDC  
                          l158 09CC                            l272 1270                            l259 1056  
                          l292 12C4                            l536 0E62                            l289 1482  
                  _start_timer 0FC2                   ___awmod@sign 00A3                            prod 000FF3  
                          tosl 000FFD                            wreg 000FE8                   __CFG_LVP$OFF 000000  
                 __CFG_WDT$OFF 000000                           l2011 06E0                           l2003 065A  
                         l2021 07D2                           l2013 0730                           l2005 06B6  
                         l2031 08D2                           l2023 081C                           l2015 0748  
                         l2007 06B8                           l2033 08EA                           l2025 084E  
                         l2017 0752                           l2009 06CC                           l2113 1028  
                         l2051 11A0                           l2043 115C                           l2027 0862  
                         l2019 07C6                           l2035 090A                           l2045 1160  
                         l2037 092E                           l2029 08A2                           l2061 1240  
                         l2053 1414                           l2047 1170                           l2039 09CA  
                         l2055 141C                           l2071 0BA0                           l2049 1186  
                         l2065 147E                           l2057 1420                           l2081 0CC2  
                         l2073 0BDA                           l2059 1426                           l2075 0C14  
                         l2067 0B62                           l2077 0C4E                           l2069 0B66  
                         l2079 0C88                           l1901 1314                           l1911 13C6  
                         l1903 132E                           l1905 12EE                           l1841 0DD2  
                         l1833 0DB2                           l1921 10A8                           l1913 1058  
                         l1907 1308                           l1851 0E0A                           l1843 0DE0  
                         l1835 0DB8                           l1915 106C                           l1909 13AC  
                         l1853 0E18                           l1861 0E42                           l1845 0DE8  
                         l1837 0DC6                           l1925 142E                           l1941 0DA4  
                         l1863 0E52                           l1855 0E2E                           l1847 0DFA  
                         l1839 0DCE                           l1919 1086                           l1943 1472  
                         l1935 0CD8                           l1865 0E5A                           l1857 0E36  
                         l1849 0E02                           l1873 120C                           l1945 1446  
                         l1937 0D84                           l1929 0CCE                           l1961 1004  
                         l1953 0FE0                           l1891 13A0                           l1883 129E  
                         l1859 0E3C                           l1875 1220                           l1947 1478  
                         l1939 0D88                           l1963 1008                           l1955 0FFC  
                         l1893 1360                           l1885 12BC                           l1869 1272  
                         l1965 100C                           l1957 1000                           l1949 0FC6  
                         l1895 137A                           l1879 1226                           l1983 0604  
                         l1959 1002                           l1889 1386                           l1897 133A  
                         l1993 0632                           l1977 05EA                           l1969 1014  
                         l1899 1354                           l1995 0634                           l1979 05FE  
                         l1997 0644                           l1989 060A                           _LATC 000F8B  
                         u1600 123C                           _LATD 000F8C                           u1601 1236  
                         u1530 0DC6                           u1610 123E                           u1531 0DC2  
                         u1620 139A                           u1540 0DE0                           u1621 1394  
                         u1541 0DDC                           u1630 139C                           u1710 1328  
                         u1550 0DFA                           u1711 1322                           u1551 0DF6  
                         u1720 132A                           u1560 0E18                           u1800 106C  
                         u1705 135C                           u1561 0E14                           u1801 1068  
                         u1650 1374                           u1706 135E                           u1570 0E2E  
                         u1810 1442                           u1651 136E                           u1571 0E2A  
                         u1811 143C                           u1660 1376                           u1740 1302  
                         u1580 0E52                           u1820 1444                           u1900 06E0  
                         u1645 13A8                           u1741 12FC                           u1581 0E4E  
                         u1901 06DC                           u1646 13AA                           u1750 1304  
                         u1590 1220                           u1910 0730                           u1830 0DA4  
                         u1735 1336                           u1591 121C                           u1911 072C  
                         u1831 0DA0                           u1680 134E                           u1736 1338  
                         u1920 0862                           u1840 0FD8                           u1681 1348  
                         u1921 085E                           u1841 0FD4                           u1770 13C0  
                         u1690 1350                           u1930 08A2                           u1850 05FE  
                         u1771 13BA                           u1675 1382                           u1931 089E  
                         u1851 05FA                           u1780 13C2                           u1676 1384  
                         u1940 092E                           u1860 062E                           u1765 1310  
                         u1941 092A                           u1861 062A                           u1766 1312  
                         u1950 1186                           u1870 0644                           u1951 1182  
                         u1871 0640                           u1880 0656                           u1881 0652  
                         u1970 11B4                           u1890 06CC                           u1795 13CE  
                         u1971 11B0                           u1891 06C8                           u1796 13D0  
                         u1968 118C                           u1969 11A0                 ??_isEmptyQueue 00A6  
     __size_of_selectReadyTask 005A                           _head 009C                           _main 0B62  
                         _rear 0044                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf2 000FDF                           fsr1l 000FE1                           fsr2l 000FD9  
                         btemp 0048                           prodh 000FF4                           prodl 000FF3  
                         start 000E                  __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000  
                 ___param_bank 000000                          ?_main 0001                __end_of___awmod 0E64  
              __end_of_addTask 09CE                          _T0CON 000FD5                          _T1CON 000FCD  
                        i2l110 1412                          i2l107 12EC                          i2l118 115A  
                        i2l146 1470                          i2l181 0ACC                          i2l190 0586  
                        i2l191 002C                          i2l178 0B60                          i2l179 0AB0  
                        i2l292 13F6                          i2l197 045A                          i2l189 05E8  
                        i2l286 0FA6                          i2l536 0F12                          _TMR1H 000FCF  
                        _TMR0L 000FD6                          _TMR1L 000FCE                          _TRISC 000F94  
                        _TRISD 000F95                  __CFG_PWRT$OFF 000000                 __CFG_FCMEN$OFF 000000  
              __end_of_dequeue 10DA                __end_of_enqueue 115C                          _count 0040  
                        _front 0046    __size_of_initializeTaskList 00E4                          _value 0043  
               __CFG_BOREN$OFF 000000                          pclath 000FFA                          tablat 000FF5  
__size_of_interrupt_initialize 0006               __end_ofi2___wmul 13F8                          ttemp5 0049  
                        ttemp6 004C                          ttemp7 0050                          status 000FD8  
      __size_of_osc_initialize 0006                          wtemp8 0049             __size_ofi2___awmod 00B0  
              __initialization 11B6                   __end_of_main 0CCE                 _pin_initialize 1446  
     __size_of_timer_interrupt 0FBA                         ??_main 00C9                  __activetblptr 000003  
                       _ADCON1 000FC1                 _register_timer 1240                         i2l1431 0E68  
                       i2l1441 0E98                         i2l1433 0E76                         i2l1451 0EDE  
                       i2l1443 0EAA                         i2l1435 0E7E                         i2l1461 0F0A  
                       i2l1453 0EE6                         i2l1445 0EB2                         i2l1437 0E82  
                       i2l1429 0E64                         i2l1509 13F8                         i2l1525 145C  
                       i2l1455 0EEC                         i2l1447 0EBA                         i2l1439 0E90  
                       i2l1449 0EC8                         i2l1457 0EF2                         i2l1481 12C6  
                       i2l1801 0F9E                         i2l1459 0F02                         i2l1547 13D2  
                       i2l1731 013E                         i2l1723 0034                         i2l1549 13EE  
                       i2l1741 02B4                         i2l1733 0152                         i2l1725 00CE  
                       i2l1591 10F2                         i2l1671 0A08                         i2l1751 040A  
                       i2l1743 02C0                         i2l1735 01B0                         i2l1727 00D8  
                       i2l1719 0012                         i2l1593 1106                         i2l1681 0A7C  
                       i2l1753 048E                         i2l1745 0368                         i2l1737 01D8  
                       i2l1729 0128                         i2l1595 110E                         i2l1587 10DA  
                       i2l1683 0AB8                         i2l1691 0B5E                         i2l1675 0A0E  
                       i2l1667 09D0                         i2l1755 05BC                         i2l1747 0398  
                       i2l1739 01E4                         i2l1597 112E                         i2l1685 0AF0  
                       i2l1677 0A5A                         i2l1669 09E4                         i2l1749 03AC  
                       i2l1781 0F4A                         i2l1687 0B1E                         i2l1679 0A5C  
                       i2l1791 0F78                         i2l1783 0F4C                         i2l1689 0B46  
                       i2l1793 0F7A                         i2l1785 0F50                         i2l1777 0F2E  
                       i2l1795 0F82                         i2l1779 0F3C                         i2l1787 0F5C  
                       i2l1797 0F86                         i2l1789 0F6A                         i2l1799 0F8A  
          initializeTaskList@i 00A4           __end_of_getSizeQueue 129E                         _OSCCON 000FD3  
               __CFG_XINST$OFF 000000           __size_of_isEmptyList 0016               __end_of_dispatch 1484  
            ??_selectReadyTask 00AB                         ___wmul 129E         __end_of_pin_initialize 145C  
                    ??___awmod 00A2                      ??_addTask 00AF           __size_of_isFullQueue 001C  
                 addTask@delay 00A8                         clear_0 11DE                         clear_1 11F0  
                       clear_2 11FC                ___awmod@divisor 00A0                ___awmod@counter 00A2  
         __end_of_isEmptyQueue 1240                      ??_dequeue 00A9                      ??_enqueue 000D  
                 __pdataCOMRAM 0044              __end_ofi2___awmod 0F14                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8         __end_of_register_timer 1272  
               i2___awmod@sign 0006                     __accesstop 0060        __end_of__initialization 1202  
                ___rparam_used 000001                 __pcstackCOMRAM 0001                ?_pin_initialize 0001  
                    ?i2___wmul 0001                   ?_start_timer 0001                __CFG_OSC$INTIO7 000000  
            ??_timer_interrupt 0026                     addTask@idx 00BB                     addTask@cur 00B9  
                   addTask@ptr 00AC                ?_register_timer 00BC                     __pbssBANK0 0060  
               _osc_initialize 1472        __size_of_handleListHead 05D8                     _blink_LED0 1386  
                   _blink_LED1 1360                     _blink_LED2 133A                     _blink_LED3 1314  
                   _blink_LED4 12EE                     _blink_LED5 13AC         start_timer@timer_vaddr 00A8  
                      ?___wmul 009E             register_timer@data 00C7                     ??i2___wmul 0005  
                   _isFullList 142E          __size_of_getSizeQueue 002C                        i2u83_40 0E76  
                      i2u83_41 0E72                        i2u84_40 0E90                        i2u84_41 0E8C  
                      i2u85_40 0EAA                        i2u85_41 0EA6                        i2u86_40 0EC8  
                      i2u86_41 0EC4                        i2u87_40 0EDE                        i2u87_41 0EDA  
                      i2u88_40 0F02                        i2u88_41 0EFE         __end_of_osc_initialize 1478  
                    ?_dispatch 0001           register_timer@period 00BC                        __Hparam 0000  
                      __Lparam 0000          __size_of_isEmptyQueue 0034                        ___awmod 0DB2  
                      _addTask 05EA                __size_of___wmul 0028   __end_of_interrupt_initialize 147E  
                      __pcinit 11B6                        __ramtop 1000                   _getSizeQueue 1272  
                      __ptext0 0B62                        __ptext1 1414                        __ptext2 0FC2  
                      __ptext3 0CCE                        __ptext4 1446                        __ptext5 1472  
                      __ptext6 1478                        __ptext7 1240                        __ptext8 05EA  
                      __ptext9 142E                        _dequeue 1058                        _enqueue 10DA  
             ___awmod@dividend 009E        __size_ofi2_getSizeQueue 0028                  addTask@period 00A4  
   __end_of_initializeTaskList 0DB2                        _time_ms 003C                     ??_dispatch 00AE  
               __pintcode_body 0F14                ?_osc_initialize 0001           end_of_initialization 1202  
              _selectReadyTask 115C                        int_func 0F14                      _LED_state 002C  
          i2___wmul@multiplier 0001                   _isEmptyQueue 120C                     _removeTask 09CE  
                  ?_blink_LED0 0001                    ?_blink_LED1 0001                    ?_blink_LED2 0001  
                  ?_blink_LED3 0001                    ?_blink_LED4 0001                    ?_blink_LED5 0001  
           handleListHead@prev 0020                        postdec1 000FE5                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
                   dequeue@idx 00A9                    ?_isFullList 0001           __size_of_start_timer 0096  
                    i2___awmod 0E64                  ??_isEmptyList 0001               ??_pin_initialize 009E  
               _handleListHead 0012                  ??_isFullQueue 0009                _timer_interrupt 0008  
               __end_of___wmul 12C6         register_timer@callback 00C4                  __pidataCOMRAM 1484  
             ??_register_timer 00C9               i2___wmul@product 0005            start_initialization 11B6  
      __end_of_selectReadyTask 11B6              __size_ofi2___wmul 0026            __size_of_blink_LED0 0026  
          __size_of_blink_LED1 0026            __size_of_blink_LED2 0026            __size_of_blink_LED3 0026  
          __size_of_blink_LED4 0026            __size_of_blink_LED5 0026                     ?i2___awmod 0001  
         _interrupt_initialize 1478         __end_of_handleListHead 05EA                     enqueue@ptr 000A  
                  ?_removeTask 0001            __size_of_isFullList 0018                       ??___wmul 00A2  
          __end_of_isEmptyList 1472                    addTask@prev 00B7            __end_of_isFullQueue 1414  
                  __pbssBIGRAM 00C9                 i2_getSizeQueue 12C6                    __pbssCOMRAM 002C  
                __pcstackBANK0 009E          ?_interrupt_initialize 0001              __size_of_dispatch 0006  
              ?_handleListHead 0001        __end_of_timer_interrupt 0FC2                  removeTask@idx 0006  
                removeTask@pos 0005                      __pintcode 0008                       ?___awmod 009E  
                     ?_addTask 00A4         __end_ofi2_getSizeQueue 12EE                       ?_dequeue 00A6  
                     ?_enqueue 000A            register_timer@delay 00C0               ??_osc_initialize 009E  
             ?_selectReadyTask 0001            __size_of_removeTask 0194                    ??i2___awmod 0005  
               ___wmul@product 00A2                       _LATDbits 000F8C             _initializeTaskList 0CCE  
                     _PIE1bits 000F9D                    _isEmptyList 145C                       i2u110_40 1410  
                     i2u110_41 140A                       i2u111_40 1412                       i2u120_40 1106  
                     i2u120_41 1102                       i2u113_40 146E                       i2u113_41 1468  
                     i2u114_40 1470                       i2u131_40 09E4                       i2u131_41 09E0  
                     i2u132_40 0A08                       i2u140_40 00CE                       i2u132_41 0A04  
                     i2u140_41 00CA                       i2u133_40 0A7C                       i2u141_40 013E  
                     i2u133_41 0A78                       i2u141_41 013A                       i2u134_40 0AF0  
                     i2u142_40 0152                       i2u150_40 0F6A                       i2u134_41 0AEC  
                     i2u142_41 014E                       i2u150_41 0F66                       i2u119_40 10EE  
                     i2u135_40 0B1E                       i2u143_40 01B0                       i2u151_40 0F78  
                     i2u119_41 10EA                       i2u135_41 0B1A                       i2u143_41 01AC  
                     i2u151_41 0F74                       i2u144_40 03AC                       i2u152_40 0F9E  
                     i2u144_41 03A8                       i2u152_41 0F9A                       i2u145_40 040A  
                     i2u145_41 0406                       i2u146_40 048E                       i2u146_41 048A  
                     i2u147_40 05BC                       i2u139_40 0028                       i2u147_41 05B8  
                     i2u139_41 0024                       i2u148_40 0F3C                       i2u148_41 0F38  
                     i2u149_40 0F4A                       i2u149_41 0F46                       _PIR1bits 000F9E  
                    _task_list 00C9                   ??_blink_LED0 009E                   ??_blink_LED1 009E  
                 ??_blink_LED2 009E                   ??_blink_LED3 009E                   ??_blink_LED4 009E  
                 ??_blink_LED5 009E                    _isFullQueue 13F8              handleListHead@cur 0022  
            handleListHead@pos 0024            ?_initializeTaskList 0001                ?i2_getSizeQueue 0001  
            ___wmul@multiplier 009E                       i2___wmul 13D2                   ??_isFullList 009E  
            _system_initialize 1414           ??_initializeTaskList 00A4         ??_interrupt_initialize 009E  
           __end_of_blink_LED0 13AC             __end_of_blink_LED1 1386             __end_of_blink_LED2 1360  
           __end_of_blink_LED3 133A             __end_of_blink_LED4 1314             __end_of_blink_LED5 13D2  
                    copy_data0 11CA             i2___awmod@dividend 0001             ?_system_initialize 0001  
           selectReadyTask@ptr 00AB            ??_system_initialize 00A9               ?_timer_interrupt 0001  
                     __Hrparam 0000                       __Lrparam 0000            _handleListHead$1146 0019  
          _handleListHead$1147 001C            _handleListHead$1148 001E             __end_of_isFullList 1446  
             __size_of___awmod 00B2               __size_of_addTask 03E4          i2___wmul@multiplicand 0003  
             __size_of_dequeue 0082                  ??_start_timer 00A6      __end_of_system_initialize 142E  
             __size_of_enqueue 0082                       __ptext10 147E                       __ptext11 115C  
                     __ptext20 1360                       __ptext12 1058                       __ptext21 1386  
                     __ptext13 120C                       __ptext30 12C6                       __ptext22 13AC  
                     __ptext14 1272                       __ptext31 0E64                       __ptext15 0DB2  
                     __ptext32 0000                       __ptext24 0012                       __ptext16 129E  
                     __ptext25 09CE                       __ptext17 12EE                       __ptext26 145C  
                     __ptext18 1314                       __ptext27 10DA                       __ptext19 133A  
                     __ptext28 13D2                       __ptext29 13F8                       _dispatch 147E  
                __size_of_main 016C                    _ready_queue 0060                   ??_removeTask 0001  
                     _num_task 0042                       int$flags 0048              i2___awmod@divisor 0003  
            i2___awmod@counter 0005                     _INTCONbits 000FF2             __end_of_removeTask 0B62  
             ??_handleListHead 000D            __end_of_start_timer 1058                       intlevel2 0000  
                fp__blink_LED0 0000                  fp__blink_LED1 0000                  fp__blink_LED2 0000  
                fp__blink_LED3 0000                  fp__blink_LED4 0000                  fp__blink_LED5 0000  
                ?_getSizeQueue 0001        __size_of_pin_initialize 0016     __size_of_system_initialize 001A  
      __size_of_register_timer 0032                  ?_isEmptyQueue 0001                   ?_isEmptyList 0001  
                 ?_isFullQueue 0001  
