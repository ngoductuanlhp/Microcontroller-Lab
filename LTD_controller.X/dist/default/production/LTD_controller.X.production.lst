

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Nov 18 10:07:58 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    70                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    82  0000                     
    83                           ; Version 2.10
    84                           ; Generated 31/07/2019 GMT
    85                           ; 
    86                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F8722 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117  0000                     
   118                           	psect	idataBANK0
   119  003CBE                     __pidataBANK0:
   120                           	opt callstack 0
   121                           
   122                           ;initializer for _rear
   123  003CBE  FFFF               	dw	65535
   124                           
   125                           ;initializer for _front
   126  003CC0  FFFF               	dw	65535
   127                           
   128                           ;initializer for _period
   129  003CC2  2710               	dw	10000
   130                           
   131                           ;initializer for _secondReadRB0
   132  003CC4  01                 	db	1
   133                           
   134                           ;initializer for _firstReadRB0
   135  003CC5  01                 	db	1
   136                           
   137                           ;initializer for _secondReadRA5
   138  003CC6  01                 	db	1
   139                           
   140                           ;initializer for _firstReadRA5
   141  003CC7  01                 	db	1
   142  0000                     _LATDbits	set	3980
   143  0000                     _PORTBbits	set	3969
   144  0000                     _PORTAbits	set	3968
   145  0000                     _TMR1L	set	4046
   146  0000                     _TMR1H	set	4047
   147  0000                     _T1CON	set	4045
   148  0000                     _PIR1bits	set	3998
   149  0000                     _PIE1bits	set	3997
   150  0000                     _TMR0L	set	4054
   151  0000                     _T0CON	set	4053
   152  0000                     _PORTCbits	set	3970
   153  0000                     _LATCbits	set	3979
   154  0000                     _LATAbits	set	3977
   155  0000                     _TRISCbits	set	3988
   156  0000                     _TRISAbits	set	3986
   157  0000                     _LATFbits	set	3982
   158  0000                     _TRISFbits	set	3991
   159  0000                     _INTCONbits	set	4082
   160  0000                     _T2CONbits	set	4042
   161  0000                     _TMR2	set	4044
   162  0000                     _CCPR4L	set	3956
   163  0000                     _CCP4CON	set	3955
   164  0000                     _T2CON	set	4042
   165  0000                     _PR2	set	4043
   166  0000                     _TRISGbits	set	3992
   167  0000                     _TRISD	set	3989
   168  0000                     _LATD	set	3980
   169  0000                     _TRISB	set	3987
   170  0000                     _LATB	set	3978
   171  0000                     _TRISA	set	3986
   172  0000                     _LATA	set	3977
   173  0000                     _ADCON1	set	4033
   174  0000                     _TRISC	set	3988
   175  0000                     _LATC	set	3979
   176  0000                     _OSCCON	set	4051
   177                           
   178                           	psect	smallconst
   179  001000                     __psmallconst:
   180                           	opt callstack 0
   181  001000  00                 	db	0
   182  001001                     STR_6:
   183  001001  49                 	db	73	;'I'
   184  001002  44                 	db	68	;'D'
   185  001003  3A                 	db	58	;':'
   186  001004  20                 	db	32
   187  001005  31                 	db	49	;'1'
   188  001006  37                 	db	55	;'7'
   189  001007  31                 	db	49	;'1'
   190  001008  30                 	db	48	;'0'
   191  001009  33                 	db	51	;'3'
   192  00100A  36                 	db	54	;'6'
   193  00100B  34                 	db	52	;'4'
   194  00100C  20                 	db	32
   195  00100D  20                 	db	32
   196  00100E  20                 	db	32
   197  00100F  20                 	db	32
   198  001010  20                 	db	32
   199  001011  00                 	db	0
   200  001012                     STR_5:
   201  001012  4C                 	db	76	;'L'
   202  001013  54                 	db	84	;'T'
   203  001014  44                 	db	68	;'D'
   204  001015  20                 	db	32
   205  001016  63                 	db	99	;'c'
   206  001017  6F                 	db	111	;'o'
   207  001018  6E                 	db	110	;'n'
   208  001019  74                 	db	116	;'t'
   209  00101A  72                 	db	114	;'r'
   210  00101B  6F                 	db	111	;'o'
   211  00101C  6C                 	db	108	;'l'
   212  00101D  6C                 	db	108	;'l'
   213  00101E  65                 	db	101	;'e'
   214  00101F  72                 	db	114	;'r'
   215  001020  20                 	db	32
   216  001021  20                 	db	32
   217  001022  00                 	db	0
   218  001023                     STR_9:
   219  001023  48                 	db	72	;'H'
   220  001024  65                 	db	101	;'e'
   221  001025  61                 	db	97	;'a'
   222  001026  74                 	db	116	;'t'
   223  001027  20                 	db	32
   224  001028  50                 	db	80	;'P'
   225  001029  75                 	db	117	;'u'
   226  00102A  6D                 	db	109	;'m'
   227  00102B  70                 	db	112	;'p'
   228  00102C  00                 	db	0
   229  00102D                     STR_8:
   230  00102D  53                 	db	83	;'S'
   231  00102E  68                 	db	104	;'h'
   232  00102F  75                 	db	117	;'u'
   233  001030  74                 	db	116	;'t'
   234  001031  64                 	db	100	;'d'
   235  001032  6F                 	db	111	;'o'
   236  001033  77                 	db	119	;'w'
   237  001034  6E                 	db	110	;'n'
   238  001035  00                 	db	0
   239  001036                     STR_7:
   240  001036  48                 	db	72	;'H'
   241  001037  65                 	db	101	;'e'
   242  001038  61                 	db	97	;'a'
   243  001039  74                 	db	116	;'t'
   244  00103A  65                 	db	101	;'e'
   245  00103B  72                 	db	114	;'r'
   246  00103C  00                 	db	0
   247  00103D                     STR_12:
   248  00103D  46                 	db	70	;'F'
   249  00103E  61                 	db	97	;'a'
   250  00103F  6E                 	db	110	;'n'
   251  001040  33                 	db	51	;'3'
   252  001041  3A                 	db	58	;':'
   253  001042  00                 	db	0
   254  001043                     STR_2:
   255  001043  48                 	db	72	;'H'
   256  001044  3A                 	db	58	;':'
   257  001045  00                 	db	0
   258  001046                     STR_1:
   259  001046  54                 	db	84	;'T'
   260  001047  3A                 	db	58	;':'
   261  001048  00                 	db	0
   262  001049                     STR_3:
   263  001049  2C                 	db	44
   264  00104A  00                 	db	0
   265  00104B                     STR_4:
   266  00104B  2E                 	db	46
   267  00104C  00                 	db	0
   268  0000                     
   269                           ; #config settings
   270  00104D  00                 	db	0	; dummy byte at the end
   271  0000                     
   272                           	psect	cinit
   273  003764                     __pcinit:
   274                           	opt callstack 0
   275  003764                     start_initialization:
   276                           	opt callstack 0
   277  003764                     __initialization:
   278                           	opt callstack 0
   279                           
   280                           ; Initialize objects allocated to BANK0 (10 bytes)
   281                           ; load TBLPTR registers with __pidataBANK0
   282  003764  0EBE               	movlw	low __pidataBANK0
   283  003766  6EF6               	movwf	tblptrl,c
   284  003768  0E3C               	movlw	high __pidataBANK0
   285  00376A  6EF7               	movwf	tblptrh,c
   286  00376C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   287  00376E  6EF8               	movwf	tblptru,c
   288  003770  EE00  F0D5         	lfsr	0,__pdataBANK0
   289  003774  EE10 F00A          	lfsr	1,10
   290  003778                     copy_data0:
   291  003778  0009               	tblrd		*+
   292  00377A  CFF5 FFEE          	movff	tablat,postinc0
   293  00377E  50E5               	movf	postdec1,w,c
   294  003780  50E1               	movf	fsr1l,w,c
   295  003782  E1FA               	bnz	copy_data0
   296                           
   297                           ; Clear objects allocated to BIGRAM (300 bytes)
   298  003784  EE01  F064         	lfsr	0,__pbssBIGRAM
   299  003788  EE11 F02C          	lfsr	1,300
   300  00378C                     clear_0:
   301  00378C  6AEE               	clrf	postinc0,c
   302  00378E  50E5               	movf	postdec1,w,c
   303  003790  50E1               	movf	fsr1l,w,c
   304  003792  E1FC               	bnz	clear_0
   305  003794  50E2               	movf	fsr1h,w,c
   306  003796  E1FA               	bnz	clear_0
   307                           
   308                           ; Clear objects allocated to BANK1 (100 bytes)
   309  003798  EE01  F000         	lfsr	0,__pbssBANK1
   310  00379C  0E64               	movlw	100
   311  00379E                     clear_1:
   312  00379E  6AEE               	clrf	postinc0,c
   313  0037A0  06E8               	decf	wreg,f,c
   314  0037A2  E1FD               	bnz	clear_1
   315                           
   316                           ; Clear objects allocated to BANK0 (48 bytes)
   317  0037A4  EE00  F0A5         	lfsr	0,__pbssBANK0
   318  0037A8  0E30               	movlw	48
   319  0037AA                     clear_2:
   320  0037AA  6AEE               	clrf	postinc0,c
   321  0037AC  06E8               	decf	wreg,f,c
   322  0037AE  E1FD               	bnz	clear_2
   323                           
   324                           ; Clear objects allocated to COMRAM (24 bytes)
   325  0037B0  EE00  F034         	lfsr	0,__pbssCOMRAM
   326  0037B4  0E18               	movlw	24
   327  0037B6                     clear_3:
   328  0037B6  6AEE               	clrf	postinc0,c
   329  0037B8  06E8               	decf	wreg,f,c
   330  0037BA  E1FD               	bnz	clear_3
   331  0037BC                     end_of_initialization:
   332                           	opt callstack 0
   333  0037BC                     __end_of__initialization:
   334                           	opt callstack 0
   335  0037BC  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   336  0037BE  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   337  0037C0  0100               	movlb	0
   338  0037C2  EFBC  F01C         	goto	_main	;jump to C main() function
   339                           
   340                           	psect	bssCOMRAM
   341  000034                     __pbssCOMRAM:
   342                           	opt callstack 0
   343  000034                     _countRB0_1:
   344                           	opt callstack 0
   345  000034                     	ds	4
   346  000038                     _countRB0:
   347                           	opt callstack 0
   348  000038                     	ds	4
   349  00003C                     _countRA5_1:
   350                           	opt callstack 0
   351  00003C                     	ds	4
   352  000040                     _countRA5:
   353                           	opt callstack 0
   354  000040                     	ds	4
   355  000044                     _prev_time_ms:
   356                           	opt callstack 0
   357  000044                     	ds	4
   358  000048                     _count:
   359                           	opt callstack 0
   360  000048                     	ds	2
   361  00004A                     _ledVal:
   362                           	opt callstack 0
   363  00004A                     	ds	1
   364  00004B                     _value:
   365                           	opt callstack 0
   366  00004B                     	ds	1
   367                           
   368                           	psect	bssBANK0
   369  0000A5                     __pbssBANK0:
   370                           	opt callstack 0
   371  0000A5                     _task_id:
   372                           	opt callstack 0
   373  0000A5                     	ds	20
   374  0000B9                     _count_timeout:
   375                           	opt callstack 0
   376  0000B9                     	ds	4
   377  0000BD                     _time_ms:
   378                           	opt callstack 0
   379  0000BD                     	ds	4
   380  0000C1                     _humidity_dht11:
   381                           	opt callstack 0
   382  0000C1                     	ds	2
   383  0000C3                     _temperature_dht11:
   384                           	opt callstack 0
   385  0000C3                     	ds	2
   386  0000C5                     _stateRB0:
   387                           	opt callstack 0
   388  0000C5                     	ds	1
   389  0000C6                     _stateRA5:
   390                           	opt callstack 0
   391  0000C6                     	ds	1
   392  0000C7                     _head:
   393                           	opt callstack 0
   394  0000C7                     	ds	1
   395  0000C8                     _num_task:
   396                           	opt callstack 0
   397  0000C8                     	ds	1
   398  0000C9                     _flag_switch_state:
   399                           	opt callstack 0
   400  0000C9                     	ds	1
   401  0000CA                     _state:
   402                           	opt callstack 0
   403  0000CA                     	ds	1
   404  0000CB                     _RB0_pressed:
   405                           	opt callstack 0
   406  0000CB                     	ds	1
   407  0000CC                     _RA5_pressed:
   408                           	opt callstack 0
   409  0000CC                     	ds	1
   410  0000CD                     _temperature_value:
   411                           	opt callstack 0
   412  0000CD                     	ds	4
   413  0000D1                     _humidity_value:
   414                           	opt callstack 0
   415  0000D1                     	ds	4
   416                           
   417                           	psect	dataBANK0
   418  0000D5                     __pdataBANK0:
   419                           	opt callstack 0
   420  0000D5                     _rear:
   421                           	opt callstack 0
   422  0000D5                     	ds	2
   423  0000D7                     _front:
   424                           	opt callstack 0
   425  0000D7                     	ds	2
   426  0000D9                     _period:
   427                           	opt callstack 0
   428  0000D9                     	ds	2
   429  0000DB                     _secondReadRB0:
   430                           	opt callstack 0
   431  0000DB                     	ds	1
   432  0000DC                     _firstReadRB0:
   433                           	opt callstack 0
   434  0000DC                     	ds	1
   435  0000DD                     _secondReadRA5:
   436                           	opt callstack 0
   437  0000DD                     	ds	1
   438  0000DE                     _firstReadRA5:
   439                           	opt callstack 0
   440  0000DE                     	ds	1
   441                           
   442                           	psect	bssBANK1
   443  000100                     __pbssBANK1:
   444                           	opt callstack 0
   445  000100                     _ready_queue:
   446                           	opt callstack 0
   447  000100                     	ds	100
   448                           
   449                           	psect	bssBIGRAM
   450  000164                     __pbssBIGRAM:
   451                           	opt callstack 0
   452  000164                     _task_list:
   453                           	opt callstack 0
   454  000164                     	ds	300
   455                           
   456                           	psect	cstackBANK0
   457  000060                     __pcstackBANK0:
   458                           	opt callstack 0
   459  000060                     ?_readButtonRA5:
   460                           	opt callstack 0
   461  000060                     ?_readButtonRB0:
   462                           	opt callstack 0
   463  000060                     ?___wmul:
   464                           	opt callstack 0
   465  000060                     ?___awdiv:
   466                           	opt callstack 0
   467  000060                     ?___awmod:
   468                           	opt callstack 0
   469  000060                     ?_get_time:
   470                           	opt callstack 0
   471  000060                     ?___fltol:
   472                           	opt callstack 0
   473  000060                     ?___xxtofl:
   474                           	opt callstack 0
   475  000060                     SendByteBBSPI@output:
   476                           	opt callstack 0
   477  000060                     getByte@byteReceived:
   478                           	opt callstack 0
   479  000060                     turn_on_fan@idx:
   480                           	opt callstack 0
   481  000060                     set_speed_fan3@dutyCycle:
   482                           	opt callstack 0
   483  000060                     ___wmul@multiplier:
   484                           	opt callstack 0
   485  000060                     ___awdiv@dividend:
   486                           	opt callstack 0
   487  000060                     ___awmod@dividend:
   488                           	opt callstack 0
   489  000060                     ___fleq@ff1:
   490                           	opt callstack 0
   491  000060                     ___fltol@f1:
   492                           	opt callstack 0
   493  000060                     ___xxtofl@val:
   494                           	opt callstack 0
   495                           
   496                           ; 4 bytes @ 0x0
   497  000060                     	ds	1
   498  000061                     SendByteBBSPI@bitcount:
   499                           	opt callstack 0
   500  000061                     getByte@timeOut:
   501                           	opt callstack 0
   502                           
   503                           ; 2 bytes @ 0x1
   504  000061                     	ds	1
   505  000062                     ??_turn_on_fan:
   506  000062                     SendByteBBSPI@input:
   507                           	opt callstack 0
   508  000062                     handleButton@data_ptr:
   509                           	opt callstack 0
   510  000062                     ___wmul@multiplicand:
   511                           	opt callstack 0
   512  000062                     ___awdiv@divisor:
   513                           	opt callstack 0
   514  000062                     ___awmod@divisor:
   515                           	opt callstack 0
   516                           
   517                           ; 2 bytes @ 0x2
   518  000062                     	ds	1
   519  000063                     Port_BBSPIInit@port_dir:
   520                           	opt callstack 0
   521  000063                     WritePort_BBSPI@a:
   522                           	opt callstack 0
   523  000063                     getByte@i:
   524                           	opt callstack 0
   525                           
   526                           ; 1 bytes @ 0x3
   527  000063                     	ds	1
   528  000064                     ??_handleButton:
   529  000064                     ??_readDHT:
   530  000064                     ??___fltol:
   531  000064                     ??___xxtofl:
   532  000064                     WritePort_BBSPI@port_add:
   533                           	opt callstack 0
   534  000064                     ___awdiv@counter:
   535                           	opt callstack 0
   536  000064                     ___awmod@counter:
   537                           	opt callstack 0
   538  000064                     ___wmul@product:
   539                           	opt callstack 0
   540  000064                     ___fleq@ff2:
   541                           	opt callstack 0
   542                           
   543                           ; 4 bytes @ 0x4
   544  000064                     	ds	1
   545  000065                     LCDPutChar@ch:
   546                           	opt callstack 0
   547  000065                     LCDPutInst@ch:
   548                           	opt callstack 0
   549  000065                     readDHT@checkSum:
   550                           	opt callstack 0
   551  000065                     ___awdiv@sign:
   552                           	opt callstack 0
   553  000065                     ___awmod@sign:
   554                           	opt callstack 0
   555                           
   556                           ; 1 bytes @ 0x5
   557  000065                     	ds	1
   558  000066                     ??_LCDInit:
   559  000066                     ??_getSizeQueue:
   560  000066                     LCDMoveCursor@pos:
   561                           	opt callstack 0
   562  000066                     LCDPutStr@ptr:
   563                           	opt callstack 0
   564  000066                     readDHT@timeOut:
   565                           	opt callstack 0
   566  000066                     queueInitialize@i:
   567                           	opt callstack 0
   568  000066                     handleButton@checkRA5:
   569                           	opt callstack 0
   570  000066                     ___awdiv@quotient:
   571                           	opt callstack 0
   572  000066                     register_timer@period:
   573                           	opt callstack 0
   574                           
   575                           ; 4 bytes @ 0x6
   576  000066                     	ds	1
   577  000067                     LCDMoveCursor@line:
   578                           	opt callstack 0
   579                           
   580                           ; 1 bytes @ 0x7
   581  000067                     	ds	1
   582  000068                     ??___fleq:
   583  000068                     ?_dequeue:
   584                           	opt callstack 0
   585  000068                     ___fltol@sign1:
   586                           	opt callstack 0
   587  000068                     ___xxtofl@sign:
   588                           	opt callstack 0
   589  000068                     _LCDMoveCursor$651:
   590                           	opt callstack 0
   591  000068                     initializeTaskList@i:
   592                           	opt callstack 0
   593  000068                     handleButton@checkRB0:
   594                           	opt callstack 0
   595                           
   596                           ; 2 bytes @ 0x8
   597  000068                     	ds	1
   598  000069                     ___fltol@exp1:
   599                           	opt callstack 0
   600  000069                     ___xxtofl@exp:
   601                           	opt callstack 0
   602                           
   603                           ; 1 bytes @ 0x9
   604  000069                     	ds	1
   605  00006A                     ??_start_timer:
   606  00006A                     LCDMoveCursor@position:
   607                           	opt callstack 0
   608  00006A                     register_timer@delay:
   609                           	opt callstack 0
   610  00006A                     ___xxtofl@arg:
   611                           	opt callstack 0
   612                           
   613                           ; 4 bytes @ 0xA
   614  00006A                     	ds	1
   615  00006B                     LCDPrint@pos:
   616                           	opt callstack 0
   617  00006B                     LCDPrintChar@pos:
   618                           	opt callstack 0
   619                           
   620                           ; 1 bytes @ 0xB
   621  00006B                     	ds	1
   622  00006C                     LCDPrintChar@ch:
   623                           	opt callstack 0
   624  00006C                     start_timer@timer_vaddr:
   625                           	opt callstack 0
   626  00006C                     LCDPrint@ptr:
   627                           	opt callstack 0
   628                           
   629                           ; 2 bytes @ 0xC
   630  00006C                     	ds	1
   631  00006D                     LCDPrintChar@line:
   632                           	opt callstack 0
   633  00006D                     dequeue@idx:
   634                           	opt callstack 0
   635                           
   636                           ; 2 bytes @ 0xD
   637  00006D                     	ds	1
   638  00006E                     ?___flmul:
   639                           	opt callstack 0
   640  00006E                     LCDPrint@line:
   641                           	opt callstack 0
   642  00006E                     register_timer@callback:
   643                           	opt callstack 0
   644  00006E                     ___flmul@b:
   645                           	opt callstack 0
   646                           
   647                           ; 4 bytes @ 0xE
   648  00006E                     	ds	1
   649  00006F                     ??_FSM:
   650  00006F                     check_humid_to_turn_fan@humid:
   651                           	opt callstack 0
   652  00006F                     dequeue@temp:
   653                           	opt callstack 0
   654                           
   655                           ; 5 bytes @ 0xF
   656  00006F                     	ds	2
   657  000071                     register_timer@data_ptr:
   658                           	opt callstack 0
   659                           
   660                           ; 2 bytes @ 0x11
   661  000071                     	ds	1
   662  000072                     ___flmul@a:
   663                           	opt callstack 0
   664                           
   665                           ; 4 bytes @ 0x12
   666  000072                     	ds	1
   667  000073                     ??_register_timer:
   668                           
   669                           ; 1 bytes @ 0x13
   670  000073                     	ds	3
   671  000076                     ??___flmul:
   672                           
   673                           ; 1 bytes @ 0x16
   674  000076                     	ds	4
   675  00007A                     ___flmul@sign:
   676                           	opt callstack 0
   677                           
   678                           ; 1 bytes @ 0x1A
   679  00007A                     	ds	1
   680  00007B                     ___flmul@grs:
   681                           	opt callstack 0
   682                           
   683                           ; 4 bytes @ 0x1B
   684  00007B                     	ds	4
   685  00007F                     ___flmul@aexp:
   686                           	opt callstack 0
   687  00007F                     register_timer@prev:
   688                           	opt callstack 0
   689                           
   690                           ; 2 bytes @ 0x1F
   691  00007F                     	ds	1
   692  000080                     ___flmul@bexp:
   693                           	opt callstack 0
   694                           
   695                           ; 1 bytes @ 0x20
   696  000080                     	ds	1
   697  000081                     register_timer@sum:
   698                           	opt callstack 0
   699  000081                     ___flmul@prod:
   700                           	opt callstack 0
   701                           
   702                           ; 4 bytes @ 0x21
   703  000081                     	ds	2
   704  000083                     register_timer@cur:
   705                           	opt callstack 0
   706                           
   707                           ; 2 bytes @ 0x23
   708  000083                     	ds	2
   709  000085                     register_timer@idx:
   710                           	opt callstack 0
   711  000085                     ___flmul@temp:
   712                           	opt callstack 0
   713                           
   714                           ; 2 bytes @ 0x25
   715  000085                     	ds	1
   716  000086                     
   717                           ; 1 bytes @ 0x26
   718  000086                     	ds	1
   719  000087                     ?___fladd:
   720                           	opt callstack 0
   721  000087                     _printTempAndHumid$104:
   722                           	opt callstack 0
   723  000087                     ___fladd@b:
   724                           	opt callstack 0
   725                           
   726                           ; 4 bytes @ 0x27
   727  000087                     	ds	4
   728  00008B                     _printTempAndHumid$106:
   729                           	opt callstack 0
   730  00008B                     ___fladd@a:
   731                           	opt callstack 0
   732                           
   733                           ; 4 bytes @ 0x2B
   734  00008B                     	ds	4
   735  00008F                     ??___fladd:
   736  00008F                     printTempAndHumid@temp:
   737                           	opt callstack 0
   738                           
   739                           ; 2 bytes @ 0x2F
   740  00008F                     	ds	2
   741  000091                     printTempAndHumid@humid:
   742                           	opt callstack 0
   743                           
   744                           ; 2 bytes @ 0x31
   745  000091                     	ds	2
   746  000093                     ___fladd@signs:
   747                           	opt callstack 0
   748                           
   749                           ; 1 bytes @ 0x33
   750  000093                     	ds	1
   751  000094                     ___fladd@aexp:
   752                           	opt callstack 0
   753                           
   754                           ; 1 bytes @ 0x34
   755  000094                     	ds	1
   756  000095                     ___fladd@bexp:
   757                           	opt callstack 0
   758                           
   759                           ; 1 bytes @ 0x35
   760  000095                     	ds	1
   761  000096                     ___fladd@grs:
   762                           	opt callstack 0
   763                           
   764                           ; 1 bytes @ 0x36
   765  000096                     	ds	1
   766  000097                     ?___flsub:
   767                           	opt callstack 0
   768  000097                     ___flsub@b:
   769                           	opt callstack 0
   770                           
   771                           ; 4 bytes @ 0x37
   772  000097                     	ds	4
   773  00009B                     ___flsub@a:
   774                           	opt callstack 0
   775                           
   776                           ; 4 bytes @ 0x3B
   777  00009B                     	ds	4
   778  00009F                     ??_readTempAndHumid:
   779  00009F                     
   780                           ; 1 bytes @ 0x3F
   781  00009F                     	ds	1
   782  0000A0                     dispatch@node:
   783                           	opt callstack 0
   784                           
   785                           ; 5 bytes @ 0x40
   786  0000A0                     	ds	5
   787  0000A5                     
   788                           ; 1 bytes @ 0x45
   789                           
   790                           	psect	cstackCOMRAM
   791  000001                     __pcstackCOMRAM:
   792                           	opt callstack 0
   793  000001                     ??_remove_timer:
   794  000001                     ?i2___wmul:
   795                           	opt callstack 0
   796  000001                     ?i2___awmod:
   797                           	opt callstack 0
   798  000001                     i2___wmul@multiplier:
   799                           	opt callstack 0
   800  000001                     i2___awmod@dividend:
   801                           	opt callstack 0
   802                           
   803                           ; 2 bytes @ 0x0
   804  000001                     	ds	2
   805  000003                     i2___wmul@multiplicand:
   806                           	opt callstack 0
   807  000003                     i2___awmod@divisor:
   808                           	opt callstack 0
   809                           
   810                           ; 2 bytes @ 0x2
   811  000003                     	ds	2
   812  000005                     remove_timer@pos:
   813                           	opt callstack 0
   814  000005                     i2___awmod@counter:
   815                           	opt callstack 0
   816  000005                     i2___wmul@product:
   817                           	opt callstack 0
   818                           
   819                           ; 2 bytes @ 0x4
   820  000005                     	ds	1
   821  000006                     remove_timer@id:
   822                           	opt callstack 0
   823  000006                     i2___awmod@sign:
   824                           	opt callstack 0
   825                           
   826                           ; 1 bytes @ 0x5
   827  000006                     	ds	1
   828  000007                     ??i2_getSizeQueue:
   829                           
   830                           ; 1 bytes @ 0x6
   831  000007                     	ds	2
   832  000009                     ??_isFullQueue:
   833                           
   834                           ; 1 bytes @ 0x8
   835  000009                     	ds	1
   836  00000A                     enqueue@ptr:
   837                           	opt callstack 0
   838                           
   839                           ; 3 bytes @ 0x9
   840  00000A                     	ds	3
   841  00000D                     enqueue@data_ptr:
   842                           	opt callstack 0
   843                           
   844                           ; 2 bytes @ 0xC
   845  00000D                     	ds	2
   846  00000F                     ??_timer_interrupt:
   847                           
   848                           ; 1 bytes @ 0xE
   849  00000F                     	ds	22
   850  000025                     _timer_interrupt$2141:
   851                           	opt callstack 0
   852                           
   853                           ; 3 bytes @ 0x24
   854  000025                     	ds	3
   855  000028                     _timer_interrupt$2146:
   856                           	opt callstack 0
   857                           
   858                           ; 2 bytes @ 0x27
   859  000028                     	ds	2
   860  00002A                     _timer_interrupt$2147:
   861                           	opt callstack 0
   862                           
   863                           ; 2 bytes @ 0x29
   864  00002A                     	ds	2
   865  00002C                     timer_interrupt@prev:
   866                           	opt callstack 0
   867                           
   868                           ; 2 bytes @ 0x2B
   869  00002C                     	ds	2
   870  00002E                     timer_interrupt@sum:
   871                           	opt callstack 0
   872                           
   873                           ; 2 bytes @ 0x2D
   874  00002E                     	ds	2
   875  000030                     timer_interrupt@cur:
   876                           	opt callstack 0
   877                           
   878                           ; 2 bytes @ 0x2F
   879  000030                     	ds	2
   880  000032                     timer_interrupt@pos:
   881                           	opt callstack 0
   882                           
   883                           ; 2 bytes @ 0x31
   884  000032                     	ds	2
   885                           
   886 ;;
   887 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   888 ;;
   889 ;; *************** function _main *****************
   890 ;; Defined at:
   891 ;;		line 78 in file "main.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;		None
   894 ;; Auto vars:     Size  Location     Type
   895 ;;		None
   896 ;; Return value:  Size  Location     Type
   897 ;;                  1    wreg      void 
   898 ;; Registers used:
   899 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   909 ;;Total ram usage:        0 bytes
   910 ;; Hardware stack levels required when called:   12
   911 ;; This function calls:
   912 ;;		_FSM
   913 ;;		_LCDPrint
   914 ;;		_dispatch
   915 ;;		_system_initialize
   916 ;;		_system_setup
   917 ;; This function is called by:
   918 ;;		Startup code after reset
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           	psect	text0
   923  003978                     __ptext0:
   924                           	opt callstack 0
   925  003978                     _main:
   926                           	opt callstack 19
   927  003978                     
   928                           ;main.c: 80:     system_initialize();
   929  003978  ECF0  F01D         	call	_system_initialize	;wreg free
   930                           
   931                           ;main.c: 82:     system_setup();
   932  00397C  EC4E  F015         	call	_system_setup	;wreg free
   933  003980                     
   934                           ;main.c: 85:     LCDPrint(0, 0, "LTD controller  ");
   935  003980  0E00               	movlw	0
   936  003982  0100               	movlb	0	; () banked
   937  003984  6F6B               	movwf	LCDPrint@pos& (0+255),b
   938  003986  0E12               	movlw	low STR_5
   939  003988  6F6C               	movwf	LCDPrint@ptr& (0+255),b
   940  00398A  0E10               	movlw	high STR_5
   941  00398C  6F6D               	movwf	(LCDPrint@ptr+1)& (0+255),b
   942  00398E  0E00               	movlw	0
   943  003990  EC59  F01C         	call	_LCDPrint
   944  003994                     
   945                           ;main.c: 86:     LCDPrint(1, 0, "ID: 1710364     ");
   946  003994  0E00               	movlw	0
   947  003996  0100               	movlb	0	; () banked
   948  003998  6F6B               	movwf	LCDPrint@pos& (0+255),b
   949  00399A  0E01               	movlw	low STR_6
   950  00399C  6F6C               	movwf	LCDPrint@ptr& (0+255),b
   951  00399E  0E10               	movlw	high STR_6
   952  0039A0  6F6D               	movwf	(LCDPrint@ptr+1)& (0+255),b
   953  0039A2  0E01               	movlw	1
   954  0039A4  EC59  F01C         	call	_LCDPrint
   955  0039A8                     l4089:
   956                           
   957                           ;main.c: 90:         dispatch();
   958  0039A8  EC80  F01B         	call	_dispatch	;wreg free
   959  0039AC                     
   960                           ;main.c: 91:         FSM();
   961  0039AC  EC09  F014         	call	_FSM	;wreg free
   962  0039B0  EFD4  F01C         	goto	l4089
   963  0039B4  EF07  F000         	goto	start
   964  0039B8                     __end_of_main:
   965                           	opt callstack 0
   966                           
   967 ;; *************** function _system_setup *****************
   968 ;; Defined at:
   969 ;;		line 70 in file "main.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;		None
   972 ;; Auto vars:     Size  Location     Type
   973 ;;		None
   974 ;; Return value:  Size  Location     Type
   975 ;;                  1    wreg      void 
   976 ;; Registers used:
   977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   987 ;;Total ram usage:        0 bytes
   988 ;; Hardware stack levels used:    1
   989 ;; Hardware stack levels required when called:    7
   990 ;; This function calls:
   991 ;;		_register_timer
   992 ;; This function is called by:
   993 ;;		_main
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           	psect	text1
   998  002A9C                     __ptext1:
   999                           	opt callstack 0
  1000  002A9C                     _system_setup:
  1001                           	opt callstack 23
  1002  002A9C                     
  1003                           ;main.c: 71:     task_id[0] = register_timer(100, 1000, handleButton, 0);
  1004  002A9C  0E64               	movlw	100
  1005  002A9E  0100               	movlb	0	; () banked
  1006  002AA0  6F66               	movwf	register_timer@period& (0+255),b
  1007  002AA2  0E00               	movlw	0
  1008  002AA4  6F67               	movwf	(register_timer@period+1)& (0+255),b
  1009  002AA6  0E00               	movlw	0
  1010  002AA8  6F68               	movwf	(register_timer@period+2)& (0+255),b
  1011  002AAA  0E00               	movlw	0
  1012  002AAC  6F69               	movwf	(register_timer@period+3)& (0+255),b
  1013  002AAE  0EE8               	movlw	232
  1014  002AB0  6F6A               	movwf	register_timer@delay& (0+255),b
  1015  002AB2  0E03               	movlw	3
  1016  002AB4  6F6B               	movwf	(register_timer@delay+1)& (0+255),b
  1017  002AB6  0E00               	movlw	0
  1018  002AB8  6F6C               	movwf	(register_timer@delay+2)& (0+255),b
  1019  002ABA  0E00               	movlw	0
  1020  002ABC  6F6D               	movwf	(register_timer@delay+3)& (0+255),b
  1021  002ABE  0EE2               	movlw	low _handleButton
  1022  002AC0  6F6E               	movwf	register_timer@callback& (0+255),b
  1023  002AC2  0E2D               	movlw	high _handleButton
  1024  002AC4  6F6F               	movwf	(register_timer@callback+1)& (0+255),b
  1025  002AC6  0E00               	movlw	low (_handleButton shr (0+16))
  1026  002AC8  6F70               	movwf	(register_timer@callback+2)& (0+255),b
  1027  002ACA  0E00               	movlw	0
  1028  002ACC  6F71               	movwf	register_timer@data_ptr& (0+255),b
  1029  002ACE  0E00               	movlw	0
  1030  002AD0  6F72               	movwf	(register_timer@data_ptr+1)& (0+255),b
  1031  002AD2  EC3C  F00F         	call	_register_timer	;wreg free
  1032  002AD6  0100               	movlb	0	; () banked
  1033  002AD8  6FA5               	movwf	_task_id& (0+255),b
  1034                           
  1035                           ;main.c: 72:     task_id[1] = register_timer(5000, 1000, readTempAndHumid, 0);
  1036  002ADA  0E88               	movlw	136
  1037  002ADC  6F66               	movwf	register_timer@period& (0+255),b
  1038  002ADE  0E13               	movlw	19
  1039  002AE0  6F67               	movwf	(register_timer@period+1)& (0+255),b
  1040  002AE2  0E00               	movlw	0
  1041  002AE4  6F68               	movwf	(register_timer@period+2)& (0+255),b
  1042  002AE6  0E00               	movlw	0
  1043  002AE8  6F69               	movwf	(register_timer@period+3)& (0+255),b
  1044  002AEA  0EE8               	movlw	232
  1045  002AEC  6F6A               	movwf	register_timer@delay& (0+255),b
  1046  002AEE  0E03               	movlw	3
  1047  002AF0  6F6B               	movwf	(register_timer@delay+1)& (0+255),b
  1048  002AF2  0E00               	movlw	0
  1049  002AF4  6F6C               	movwf	(register_timer@delay+2)& (0+255),b
  1050  002AF6  0E00               	movlw	0
  1051  002AF8  6F6D               	movwf	(register_timer@delay+3)& (0+255),b
  1052  002AFA  0E66               	movlw	low _readTempAndHumid
  1053  002AFC  6F6E               	movwf	register_timer@callback& (0+255),b
  1054  002AFE  0E29               	movlw	high _readTempAndHumid
  1055  002B00  6F6F               	movwf	(register_timer@callback+1)& (0+255),b
  1056  002B02  0E00               	movlw	low (_readTempAndHumid shr (0+16))
  1057  002B04  6F70               	movwf	(register_timer@callback+2)& (0+255),b
  1058  002B06  0E00               	movlw	0
  1059  002B08  6F71               	movwf	register_timer@data_ptr& (0+255),b
  1060  002B0A  0E00               	movlw	0
  1061  002B0C  6F72               	movwf	(register_timer@data_ptr+1)& (0+255),b
  1062  002B0E  EC3C  F00F         	call	_register_timer	;wreg free
  1063  002B12  0100               	movlb	0	; () banked
  1064  002B14  6FA6               	movwf	(_task_id+1)& (0+255),b
  1065                           
  1066                           ;main.c: 73:     task_id[2] = register_timer(5000, 0, check_humid_to_turn_fan, 0);
  1067  002B16  0E88               	movlw	136
  1068  002B18  6F66               	movwf	register_timer@period& (0+255),b
  1069  002B1A  0E13               	movlw	19
  1070  002B1C  6F67               	movwf	(register_timer@period+1)& (0+255),b
  1071  002B1E  0E00               	movlw	0
  1072  002B20  6F68               	movwf	(register_timer@period+2)& (0+255),b
  1073  002B22  0E00               	movlw	0
  1074  002B24  6F69               	movwf	(register_timer@period+3)& (0+255),b
  1075  002B26  0E00               	movlw	0
  1076  002B28  6F6A               	movwf	register_timer@delay& (0+255),b
  1077  002B2A  0E00               	movlw	0
  1078  002B2C  6F6B               	movwf	(register_timer@delay+1)& (0+255),b
  1079  002B2E  0E00               	movlw	0
  1080  002B30  6F6C               	movwf	(register_timer@delay+2)& (0+255),b
  1081  002B32  0E00               	movlw	0
  1082  002B34  6F6D               	movwf	(register_timer@delay+3)& (0+255),b
  1083  002B36  0EC6               	movlw	low _check_humid_to_turn_fan
  1084  002B38  6F6E               	movwf	register_timer@callback& (0+255),b
  1085  002B3A  0E31               	movlw	high _check_humid_to_turn_fan
  1086  002B3C  6F6F               	movwf	(register_timer@callback+1)& (0+255),b
  1087  002B3E  0E00               	movlw	low (_check_humid_to_turn_fan shr (0+16))
  1088  002B40  6F70               	movwf	(register_timer@callback+2)& (0+255),b
  1089  002B42  0E00               	movlw	0
  1090  002B44  6F71               	movwf	register_timer@data_ptr& (0+255),b
  1091  002B46  0E00               	movlw	0
  1092  002B48  6F72               	movwf	(register_timer@data_ptr+1)& (0+255),b
  1093  002B4A  EC3C  F00F         	call	_register_timer	;wreg free
  1094  002B4E  0100               	movlb	0	; () banked
  1095  002B50  6FA7               	movwf	(_task_id+2)& (0+255),b
  1096  002B52  0E10               	movlw	16
  1097  002B54  6F66               	movwf	register_timer@period& (0+255),b
  1098  002B56  0E27               	movlw	39
  1099  002B58  6F67               	movwf	(register_timer@period+1)& (0+255),b
  1100  002B5A  0E00               	movlw	0
  1101  002B5C  6F68               	movwf	(register_timer@period+2)& (0+255),b
  1102  002B5E  0E00               	movlw	0
  1103  002B60  6F69               	movwf	(register_timer@period+3)& (0+255),b
  1104  002B62  0E10               	movlw	16
  1105  002B64  6F6A               	movwf	register_timer@delay& (0+255),b
  1106  002B66  0E27               	movlw	39
  1107  002B68  6F6B               	movwf	(register_timer@delay+1)& (0+255),b
  1108  002B6A  0E00               	movlw	0
  1109  002B6C  6F6C               	movwf	(register_timer@delay+2)& (0+255),b
  1110  002B6E  0E00               	movlw	0
  1111  002B70  6F6D               	movwf	(register_timer@delay+3)& (0+255),b
  1112  002B72  0EEA               	movlw	low _changeState
  1113  002B74  6F6E               	movwf	register_timer@callback& (0+255),b
  1114  002B76  0E3A               	movlw	high _changeState
  1115  002B78  6F6F               	movwf	(register_timer@callback+1)& (0+255),b
  1116  002B7A  0E00               	movlw	low (_changeState shr (0+16))
  1117  002B7C  6F70               	movwf	(register_timer@callback+2)& (0+255),b
  1118  002B7E  0E00               	movlw	0
  1119  002B80  6F71               	movwf	register_timer@data_ptr& (0+255),b
  1120  002B82  0E00               	movlw	0
  1121  002B84  6F72               	movwf	(register_timer@data_ptr+1)& (0+255),b
  1122  002B86  EC3C  F00F         	call	_register_timer	;wreg free
  1123  002B8A  0100               	movlb	0	; () banked
  1124  002B8C  6FA8               	movwf	(_task_id+3)& (0+255),b
  1125                           
  1126                           ;main.c: 75:     task_id[4] = register_timer(10000, 3000, printTempAndHumid, 0);
  1127  002B8E  0E10               	movlw	16
  1128  002B90  6F66               	movwf	register_timer@period& (0+255),b
  1129  002B92  0E27               	movlw	39
  1130  002B94  6F67               	movwf	(register_timer@period+1)& (0+255),b
  1131  002B96  0E00               	movlw	0
  1132  002B98  6F68               	movwf	(register_timer@period+2)& (0+255),b
  1133  002B9A  0E00               	movlw	0
  1134  002B9C  6F69               	movwf	(register_timer@period+3)& (0+255),b
  1135  002B9E  0EB8               	movlw	184
  1136  002BA0  6F6A               	movwf	register_timer@delay& (0+255),b
  1137  002BA2  0E0B               	movlw	11
  1138  002BA4  6F6B               	movwf	(register_timer@delay+1)& (0+255),b
  1139  002BA6  0E00               	movlw	0
  1140  002BA8  6F6C               	movwf	(register_timer@delay+2)& (0+255),b
  1141  002BAA  0E00               	movlw	0
  1142  002BAC  6F6D               	movwf	(register_timer@delay+3)& (0+255),b
  1143  002BAE  0E18               	movlw	low _printTempAndHumid
  1144  002BB0  6F6E               	movwf	register_timer@callback& (0+255),b
  1145  002BB2  0E22               	movlw	high _printTempAndHumid
  1146  002BB4  6F6F               	movwf	(register_timer@callback+1)& (0+255),b
  1147  002BB6  0E00               	movlw	low (_printTempAndHumid shr (0+16))
  1148  002BB8  6F70               	movwf	(register_timer@callback+2)& (0+255),b
  1149  002BBA  0E00               	movlw	0
  1150  002BBC  6F71               	movwf	register_timer@data_ptr& (0+255),b
  1151  002BBE  0E00               	movlw	0
  1152  002BC0  6F72               	movwf	(register_timer@data_ptr+1)& (0+255),b
  1153  002BC2  EC3C  F00F         	call	_register_timer	;wreg free
  1154  002BC6  0100               	movlb	0	; () banked
  1155  002BC8  6FA9               	movwf	(_task_id+4)& (0+255),b
  1156  002BCA                     
  1157                           ; BSR set to: 0
  1158  002BCA  0012               	return		;funcret
  1159  002BCC                     __end_of_system_setup:
  1160                           	opt callstack 0
  1161                           
  1162 ;; *************** function _register_timer *****************
  1163 ;; Defined at:
  1164 ;;		line 116 in file "clock.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;  period          4    6[BANK0 ] unsigned long 
  1167 ;;  delay           4   10[BANK0 ] unsigned long 
  1168 ;;  callback        3   14[BANK0 ] PTR FTN(PTR void ,)void 
  1169 ;;		 -> changeState(1), check_humid_to_turn_fan(1), readTempAndHumid(1), handleButton(1), 
  1170 ;;		 -> printTempAndHumid(1), 
  1171 ;;  data_ptr        2   17[BANK0 ] PTR void 
  1172 ;;		 -> NULL(0), 
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;  cur             2   35[BANK0 ] int 
  1175 ;;  prev            2   31[BANK0 ] int 
  1176 ;;  sum             2   33[BANK0 ] int 
  1177 ;;  idx             1   37[BANK0 ] unsigned char 
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      unsigned char 
  1180 ;; Registers used:
  1181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1187 ;;      Params:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1188 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1189 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1190 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1191 ;;Total ram usage:       32 bytes
  1192 ;; Hardware stack levels used:    1
  1193 ;; Hardware stack levels required when called:    6
  1194 ;; This function calls:
  1195 ;;		___wmul
  1196 ;;		_isFullList
  1197 ;; This function is called by:
  1198 ;;		_system_setup
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202                           	psect	text2
  1203  001E78                     __ptext2:
  1204                           	opt callstack 0
  1205  001E78                     _register_timer:
  1206                           	opt callstack 23
  1207  001E78                     
  1208                           ;clock.c: 117:     if(isFullList())
  1209  001E78  EC2E  F01E         	call	_isFullList	;wreg free
  1210  001E7C  0900               	iorlw	0
  1211  001E7E  B4D8               	btfsc	status,2,c
  1212  001E80  EF44  F00F         	goto	u3191
  1213  001E84  EF46  F00F         	goto	u3190
  1214  001E88                     u3191:
  1215  001E88  EF49  F00F         	goto	l3697
  1216  001E8C                     u3190:
  1217  001E8C                     l3693:
  1218                           
  1219                           ;clock.c: 118:         return 109;
  1220  001E8C  0E6D               	movlw	109
  1221  001E8E  EF0B  F011         	goto	l419
  1222  001E92                     l3697:
  1223                           
  1224                           ;clock.c: 119:     char idx;;clock.c: 120:     for(idx = 0; idx < 20; idx++) {
  1225  001E92  0E00               	movlw	0
  1226  001E94  0100               	movlb	0	; () banked
  1227  001E96  6F85               	movwf	register_timer@idx& (0+255),b
  1228  001E98                     l3703:
  1229                           
  1230                           ; BSR set to: 0
  1231                           ;clock.c: 121:         if(task_list[idx].func_ptr == ((void*)0))
  1232  001E98  5185               	movf	register_timer@idx& (0+255),w,b
  1233  001E9A  0D0F               	mullw	15
  1234  001E9C  0E6C               	movlw	low (_task_list+8)
  1235  001E9E  24F3               	addwf	243,w,c
  1236  001EA0  6ED9               	movwf	fsr2l,c
  1237  001EA2  0E01               	movlw	high (_task_list+8)
  1238  001EA4  20F4               	addwfc	prodh,w,c
  1239  001EA6  6EDA               	movwf	fsr2h,c
  1240  001EA8  50DE               	movf	postinc2,w,c
  1241  001EAA  10DE               	iorwf	postinc2,w,c
  1242  001EAC  10DE               	iorwf	postinc2,w,c
  1243  001EAE  A4D8               	btfss	status,2,c
  1244  001EB0  EF5C  F00F         	goto	u3201
  1245  001EB4  EF5E  F00F         	goto	u3200
  1246  001EB8                     u3201:
  1247  001EB8  EF60  F00F         	goto	l3707
  1248  001EBC                     u3200:
  1249  001EBC  EF69  F00F         	goto	l3711
  1250  001EC0                     l3707:
  1251                           
  1252                           ; BSR set to: 0
  1253                           ;clock.c: 123:     }
  1254  001EC0  2B85               	incf	register_timer@idx& (0+255),f,b
  1255  001EC2                     
  1256                           ; BSR set to: 0
  1257  001EC2  0E13               	movlw	19
  1258  001EC4  6585               	cpfsgt	register_timer@idx& (0+255),b
  1259  001EC6  EF67  F00F         	goto	u3211
  1260  001ECA  EF69  F00F         	goto	u3210
  1261  001ECE                     u3211:
  1262  001ECE  EF4C  F00F         	goto	l3703
  1263  001ED2                     u3210:
  1264  001ED2                     l3711:
  1265                           
  1266                           ; BSR set to: 0
  1267                           ;clock.c: 124:     if(idx == 20)
  1268  001ED2  0E14               	movlw	20
  1269  001ED4  1985               	xorwf	register_timer@idx& (0+255),w,b
  1270  001ED6  A4D8               	btfss	status,2,c
  1271  001ED8  EF70  F00F         	goto	u3221
  1272  001EDC  EF72  F00F         	goto	u3220
  1273  001EE0                     u3221:
  1274  001EE0  EF74  F00F         	goto	l3717
  1275  001EE4                     u3220:
  1276  001EE4  EF46  F00F         	goto	l3693
  1277  001EE8                     l3717:
  1278                           
  1279                           ; BSR set to: 0
  1280                           ;clock.c: 126:     task_list[idx].delay_t = delay;
  1281  001EE8  5185               	movf	register_timer@idx& (0+255),w,b
  1282  001EEA  0D0F               	mullw	15
  1283  001EEC  0E64               	movlw	low _task_list
  1284  001EEE  24F3               	addwf	243,w,c
  1285  001EF0  6ED9               	movwf	fsr2l,c
  1286  001EF2  0E01               	movlw	high _task_list
  1287  001EF4  20F4               	addwfc	prodh,w,c
  1288  001EF6  6EDA               	movwf	fsr2h,c
  1289  001EF8  C06A  FFDE         	movff	register_timer@delay,postinc2
  1290  001EFC  C06B  FFDE         	movff	register_timer@delay+1,postinc2
  1291  001F00  C06C  FFDE         	movff	register_timer@delay+2,postinc2
  1292  001F04  C06D  FFDE         	movff	register_timer@delay+3,postinc2
  1293                           
  1294                           ;clock.c: 127:     task_list[idx].period_t = period;
  1295  001F08  5185               	movf	register_timer@idx& (0+255),w,b
  1296  001F0A  0D0F               	mullw	15
  1297  001F0C  0E68               	movlw	low (_task_list+4)
  1298  001F0E  24F3               	addwf	243,w,c
  1299  001F10  6ED9               	movwf	fsr2l,c
  1300  001F12  0E01               	movlw	high (_task_list+4)
  1301  001F14  20F4               	addwfc	prodh,w,c
  1302  001F16  6EDA               	movwf	fsr2h,c
  1303  001F18  C066  FFDE         	movff	register_timer@period,postinc2
  1304  001F1C  C067  FFDE         	movff	register_timer@period+1,postinc2
  1305  001F20  C068  FFDE         	movff	register_timer@period+2,postinc2
  1306  001F24  C069  FFDE         	movff	register_timer@period+3,postinc2
  1307                           
  1308                           ;clock.c: 128:     task_list[idx].func_ptr = callback;
  1309  001F28  5185               	movf	register_timer@idx& (0+255),w,b
  1310  001F2A  0D0F               	mullw	15
  1311  001F2C  0E6C               	movlw	low (_task_list+8)
  1312  001F2E  24F3               	addwf	243,w,c
  1313  001F30  6ED9               	movwf	fsr2l,c
  1314  001F32  0E01               	movlw	high (_task_list+8)
  1315  001F34  20F4               	addwfc	prodh,w,c
  1316  001F36  6EDA               	movwf	fsr2h,c
  1317  001F38  C06E  FFDE         	movff	register_timer@callback,postinc2
  1318  001F3C  C06F  FFDE         	movff	register_timer@callback+1,postinc2
  1319  001F40  C070  FFDE         	movff	register_timer@callback+2,postinc2
  1320                           
  1321                           ;clock.c: 129:     task_list[idx].data_p = data_ptr;
  1322  001F44  5185               	movf	register_timer@idx& (0+255),w,b
  1323  001F46  0D0F               	mullw	15
  1324  001F48  0E71               	movlw	low (_task_list+13)
  1325  001F4A  24F3               	addwf	243,w,c
  1326  001F4C  6ED9               	movwf	fsr2l,c
  1327  001F4E  0E01               	movlw	high (_task_list+13)
  1328  001F50  20F4               	addwfc	prodh,w,c
  1329  001F52  6EDA               	movwf	fsr2h,c
  1330  001F54  C071  FFDE         	movff	register_timer@data_ptr,postinc2
  1331  001F58  C072  FFDD         	movff	register_timer@data_ptr+1,postdec2
  1332  001F5C                     
  1333                           ; BSR set to: 0
  1334                           ;clock.c: 130:     num_task++;
  1335  001F5C  2BC8               	incf	_num_task& (0+255),f,b
  1336  001F5E                     
  1337                           ; BSR set to: 0
  1338                           ;clock.c: 131:     int sum = task_list[head].delay_t;
  1339  001F5E  51C7               	movf	_head& (0+255),w,b
  1340  001F60  0D0F               	mullw	15
  1341  001F62  0E64               	movlw	low _task_list
  1342  001F64  24F3               	addwf	243,w,c
  1343  001F66  6ED9               	movwf	fsr2l,c
  1344  001F68  0E01               	movlw	high _task_list
  1345  001F6A  20F4               	addwfc	prodh,w,c
  1346  001F6C  6EDA               	movwf	fsr2h,c
  1347  001F6E  CFDE F081          	movff	postinc2,register_timer@sum
  1348  001F72  CFDD F082          	movff	postdec2,register_timer@sum+1
  1349  001F76                     
  1350                           ; BSR set to: 0
  1351                           ;clock.c: 132:     if(head == 105 || (head != 105 && sum > delay)) {
  1352  001F76  0E69               	movlw	105
  1353  001F78  19C7               	xorwf	_head& (0+255),w,b
  1354  001F7A  B4D8               	btfsc	status,2,c
  1355  001F7C  EFC2  F00F         	goto	u3231
  1356  001F80  EFC4  F00F         	goto	u3230
  1357  001F84                     u3231:
  1358  001F84  EFE5  F00F         	goto	l3729
  1359  001F88                     u3230:
  1360  001F88                     
  1361                           ; BSR set to: 0
  1362  001F88  0E69               	movlw	105
  1363  001F8A  19C7               	xorwf	_head& (0+255),w,b
  1364  001F8C  B4D8               	btfsc	status,2,c
  1365  001F8E  EFCB  F00F         	goto	u3241
  1366  001F92  EFCD  F00F         	goto	u3240
  1367  001F96                     u3241:
  1368  001F96  EFF8  F00F         	goto	l3733
  1369  001F9A                     u3240:
  1370  001F9A                     
  1371                           ; BSR set to: 0
  1372  001F9A  C081  F073         	movff	register_timer@sum,??_register_timer
  1373  001F9E  C082  F074         	movff	register_timer@sum+1,??_register_timer+1
  1374  001FA2  0E00               	movlw	0
  1375  001FA4  BF74               	btfsc	(??_register_timer+1)& (0+255),7,b
  1376  001FA6  0EFF               	movlw	255
  1377  001FA8  6F75               	movwf	(??_register_timer+2)& (0+255),b
  1378  001FAA  6F76               	movwf	(??_register_timer+3)& (0+255),b
  1379  001FAC  5173               	movf	??_register_timer& (0+255),w,b
  1380  001FAE  5D6A               	subwf	register_timer@delay& (0+255),w,b
  1381  001FB0  5174               	movf	(??_register_timer+1)& (0+255),w,b
  1382  001FB2  596B               	subwfb	(register_timer@delay+1)& (0+255),w,b
  1383  001FB4  5175               	movf	(??_register_timer+2)& (0+255),w,b
  1384  001FB6  596C               	subwfb	(register_timer@delay+2)& (0+255),w,b
  1385  001FB8  5176               	movf	(??_register_timer+3)& (0+255),w,b
  1386  001FBA  596D               	subwfb	(register_timer@delay+3)& (0+255),w,b
  1387  001FBC  B0D8               	btfsc	status,0,c
  1388  001FBE  EFE3  F00F         	goto	u3251
  1389  001FC2  EFE5  F00F         	goto	u3250
  1390  001FC6                     u3251:
  1391  001FC6  EFF8  F00F         	goto	l3733
  1392  001FCA                     u3250:
  1393  001FCA                     l3729:
  1394                           
  1395                           ; BSR set to: 0
  1396                           ;clock.c: 133:         task_list[idx].next = head;
  1397  001FCA  51C7               	movf	_head& (0+255),w,b
  1398  001FCC  6F73               	movwf	??_register_timer& (0+255),b
  1399  001FCE  6B74               	clrf	(??_register_timer+1)& (0+255),b
  1400  001FD0  5185               	movf	register_timer@idx& (0+255),w,b
  1401  001FD2  0D0F               	mullw	15
  1402  001FD4  0E6F               	movlw	low (_task_list+11)
  1403  001FD6  24F3               	addwf	243,w,c
  1404  001FD8  6ED9               	movwf	fsr2l,c
  1405  001FDA  0E01               	movlw	high (_task_list+11)
  1406  001FDC  20F4               	addwfc	prodh,w,c
  1407  001FDE  6EDA               	movwf	fsr2h,c
  1408  001FE0  C073  FFDE         	movff	??_register_timer,postinc2
  1409  001FE4  C074  FFDD         	movff	??_register_timer+1,postdec2
  1410  001FE8                     
  1411                           ; BSR set to: 0
  1412                           ;clock.c: 134:         head = idx;
  1413  001FE8  C085  F0C7         	movff	register_timer@idx,_head
  1414                           
  1415                           ;clock.c: 135:     }
  1416  001FEC  EFC7  F010         	goto	l3751
  1417  001FF0                     l3733:
  1418                           
  1419                           ; BSR set to: 0
  1420                           ;clock.c: 138:         int cur = task_list[head].next;
  1421  001FF0  51C7               	movf	_head& (0+255),w,b
  1422  001FF2  0D0F               	mullw	15
  1423  001FF4  0E6F               	movlw	low (_task_list+11)
  1424  001FF6  24F3               	addwf	243,w,c
  1425  001FF8  6ED9               	movwf	fsr2l,c
  1426  001FFA  0E01               	movlw	high (_task_list+11)
  1427  001FFC  20F4               	addwfc	prodh,w,c
  1428  001FFE  6EDA               	movwf	fsr2h,c
  1429  002000  CFDE F083          	movff	postinc2,register_timer@cur
  1430  002004  CFDD F084          	movff	postdec2,register_timer@cur+1
  1431  002008                     
  1432                           ; BSR set to: 0
  1433                           ;clock.c: 139:         int prev = head;
  1434  002008  C0C7  F07F         	movff	_head,register_timer@prev
  1435  00200C  6B80               	clrf	(register_timer@prev+1)& (0+255),b
  1436                           
  1437                           ;clock.c: 140:         while(cur != 105 && sum + task_list[cur].delay_t <= delay) {
  1438  00200E  EF37  F010         	goto	l3741
  1439  002012                     l3737:
  1440                           
  1441                           ; BSR set to: 0
  1442                           ;clock.c: 142:             sum+= task_list[cur].delay_t;
  1443  002012  C083  F060         	movff	register_timer@cur,___wmul@multiplier
  1444  002016  C084  F061         	movff	register_timer@cur+1,___wmul@multiplier+1
  1445  00201A  0E00               	movlw	0
  1446  00201C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1447  00201E  0E0F               	movlw	15
  1448  002020  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1449  002022  ECB7  F01D         	call	___wmul	;wreg free
  1450  002026  0E64               	movlw	low _task_list
  1451  002028  0100               	movlb	0	; () banked
  1452  00202A  2560               	addwf	?___wmul& (0+255),w,b
  1453  00202C  6ED9               	movwf	fsr2l,c
  1454  00202E  0E01               	movlw	high _task_list
  1455  002030  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1456  002032  6EDA               	movwf	fsr2h,c
  1457  002034  50DE               	movf	postinc2,w,c
  1458  002036  2781               	addwf	register_timer@sum& (0+255),f,b
  1459  002038  50DD               	movf	postdec2,w,c
  1460  00203A  2382               	addwfc	(register_timer@sum+1)& (0+255),f,b
  1461  00203C                     
  1462                           ; BSR set to: 0
  1463                           ;clock.c: 143:             prev = cur;
  1464  00203C  C083  F07F         	movff	register_timer@cur,register_timer@prev
  1465  002040  C084  F080         	movff	register_timer@cur+1,register_timer@prev+1
  1466                           
  1467                           ;clock.c: 144:             cur = task_list[cur].next;
  1468  002044  C083  F060         	movff	register_timer@cur,___wmul@multiplier
  1469  002048  C084  F061         	movff	register_timer@cur+1,___wmul@multiplier+1
  1470  00204C  0E00               	movlw	0
  1471  00204E  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1472  002050  0E0F               	movlw	15
  1473  002052  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1474  002054  ECB7  F01D         	call	___wmul	;wreg free
  1475  002058  0E6F               	movlw	low (_task_list+11)
  1476  00205A  0100               	movlb	0	; () banked
  1477  00205C  2560               	addwf	?___wmul& (0+255),w,b
  1478  00205E  6ED9               	movwf	fsr2l,c
  1479  002060  0E01               	movlw	high (_task_list+11)
  1480  002062  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1481  002064  6EDA               	movwf	fsr2h,c
  1482  002066  CFDE F083          	movff	postinc2,register_timer@cur
  1483  00206A  CFDD F084          	movff	postdec2,register_timer@cur+1
  1484  00206E                     l3741:
  1485                           
  1486                           ; BSR set to: 0
  1487                           ;clock.c: 140:         while(cur != 105 && sum + task_list[cur].delay_t <= delay) {
  1488  00206E  0E69               	movlw	105
  1489  002070  1983               	xorwf	register_timer@cur& (0+255),w,b
  1490  002072  1184               	iorwf	(register_timer@cur+1)& (0+255),w,b
  1491  002074  B4D8               	btfsc	status,2,c
  1492  002076  EF3F  F010         	goto	u3261
  1493  00207A  EF41  F010         	goto	u3260
  1494  00207E                     u3261:
  1495  00207E  EF7E  F010         	goto	l3745
  1496  002082                     u3260:
  1497  002082                     
  1498                           ; BSR set to: 0
  1499  002082  C083  F060         	movff	register_timer@cur,___wmul@multiplier
  1500  002086  C084  F061         	movff	register_timer@cur+1,___wmul@multiplier+1
  1501  00208A  0E00               	movlw	0
  1502  00208C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1503  00208E  0E0F               	movlw	15
  1504  002090  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1505  002092  ECB7  F01D         	call	___wmul	;wreg free
  1506  002096  0E64               	movlw	low _task_list
  1507  002098  0100               	movlb	0	; () banked
  1508  00209A  2560               	addwf	?___wmul& (0+255),w,b
  1509  00209C  6ED9               	movwf	fsr2l,c
  1510  00209E  0E01               	movlw	high _task_list
  1511  0020A0  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1512  0020A2  6EDA               	movwf	fsr2h,c
  1513  0020A4  CFDE F073          	movff	postinc2,??_register_timer
  1514  0020A8  CFDE F074          	movff	postinc2,??_register_timer+1
  1515  0020AC  CFDE F075          	movff	postinc2,??_register_timer+2
  1516  0020B0  CFDE F076          	movff	postinc2,??_register_timer+3
  1517  0020B4  C081  F077         	movff	register_timer@sum,??_register_timer+4
  1518  0020B8  C082  F078         	movff	register_timer@sum+1,??_register_timer+5
  1519  0020BC  0E00               	movlw	0
  1520  0020BE  BF78               	btfsc	(??_register_timer+5)& (0+255),7,b
  1521  0020C0  0EFF               	movlw	255
  1522  0020C2  6F79               	movwf	(??_register_timer+6)& (0+255),b
  1523  0020C4  6F7A               	movwf	(??_register_timer+7)& (0+255),b
  1524  0020C6  5173               	movf	??_register_timer& (0+255),w,b
  1525  0020C8  2577               	addwf	(??_register_timer+4)& (0+255),w,b
  1526  0020CA  6F7B               	movwf	(??_register_timer+8)& (0+255),b
  1527  0020CC  5174               	movf	(??_register_timer+1)& (0+255),w,b
  1528  0020CE  2178               	addwfc	(??_register_timer+5)& (0+255),w,b
  1529  0020D0  6F7C               	movwf	(??_register_timer+9)& (0+255),b
  1530  0020D2  5175               	movf	(??_register_timer+2)& (0+255),w,b
  1531  0020D4  2179               	addwfc	(??_register_timer+6)& (0+255),w,b
  1532  0020D6  6F7D               	movwf	(??_register_timer+10)& (0+255),b
  1533  0020D8  5176               	movf	(??_register_timer+3)& (0+255),w,b
  1534  0020DA  217A               	addwfc	(??_register_timer+7)& (0+255),w,b
  1535  0020DC  6F7E               	movwf	(??_register_timer+11)& (0+255),b
  1536  0020DE  517B               	movf	(??_register_timer+8)& (0+255),w,b
  1537  0020E0  5D6A               	subwf	register_timer@delay& (0+255),w,b
  1538  0020E2  517C               	movf	(??_register_timer+9)& (0+255),w,b
  1539  0020E4  596B               	subwfb	(register_timer@delay+1)& (0+255),w,b
  1540  0020E6  517D               	movf	(??_register_timer+10)& (0+255),w,b
  1541  0020E8  596C               	subwfb	(register_timer@delay+2)& (0+255),w,b
  1542  0020EA  517E               	movf	(??_register_timer+11)& (0+255),w,b
  1543  0020EC  596D               	subwfb	(register_timer@delay+3)& (0+255),w,b
  1544  0020EE  B0D8               	btfsc	status,0,c
  1545  0020F0  EF7C  F010         	goto	u3271
  1546  0020F4  EF7E  F010         	goto	u3270
  1547  0020F8                     u3271:
  1548  0020F8  EF09  F010         	goto	l3737
  1549  0020FC                     u3270:
  1550  0020FC                     l3745:
  1551                           
  1552                           ; BSR set to: 0
  1553                           ;clock.c: 146:         task_list[prev].next = idx;
  1554  0020FC  5185               	movf	register_timer@idx& (0+255),w,b
  1555  0020FE  6F73               	movwf	??_register_timer& (0+255),b
  1556  002100  6B74               	clrf	(??_register_timer+1)& (0+255),b
  1557  002102  C07F  F060         	movff	register_timer@prev,___wmul@multiplier
  1558  002106  C080  F061         	movff	register_timer@prev+1,___wmul@multiplier+1
  1559  00210A  0E00               	movlw	0
  1560  00210C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1561  00210E  0E0F               	movlw	15
  1562  002110  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1563  002112  ECB7  F01D         	call	___wmul	;wreg free
  1564  002116  0E6F               	movlw	low (_task_list+11)
  1565  002118  0100               	movlb	0	; () banked
  1566  00211A  2560               	addwf	?___wmul& (0+255),w,b
  1567  00211C  6ED9               	movwf	fsr2l,c
  1568  00211E  0E01               	movlw	high (_task_list+11)
  1569  002120  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1570  002122  6EDA               	movwf	fsr2h,c
  1571  002124  C073  FFDE         	movff	??_register_timer,postinc2
  1572  002128  C074  FFDD         	movff	??_register_timer+1,postdec2
  1573  00212C                     
  1574                           ; BSR set to: 0
  1575                           ;clock.c: 147:         task_list[idx].next = cur;
  1576  00212C  5185               	movf	register_timer@idx& (0+255),w,b
  1577  00212E  0D0F               	mullw	15
  1578  002130  0E6F               	movlw	low (_task_list+11)
  1579  002132  24F3               	addwf	243,w,c
  1580  002134  6ED9               	movwf	fsr2l,c
  1581  002136  0E01               	movlw	high (_task_list+11)
  1582  002138  20F4               	addwfc	prodh,w,c
  1583  00213A  6EDA               	movwf	fsr2h,c
  1584  00213C  C083  FFDE         	movff	register_timer@cur,postinc2
  1585  002140  C084  FFDD         	movff	register_timer@cur+1,postdec2
  1586  002144                     
  1587                           ; BSR set to: 0
  1588                           ;clock.c: 148:         task_list[idx].delay_t = delay - sum;
  1589  002144  C081  F073         	movff	register_timer@sum,??_register_timer
  1590  002148  C082  F074         	movff	register_timer@sum+1,??_register_timer+1
  1591  00214C  0E00               	movlw	0
  1592  00214E  BF74               	btfsc	(??_register_timer+1)& (0+255),7,b
  1593  002150  0EFF               	movlw	255
  1594  002152  6F75               	movwf	(??_register_timer+2)& (0+255),b
  1595  002154  6F76               	movwf	(??_register_timer+3)& (0+255),b
  1596  002156  5173               	movf	??_register_timer& (0+255),w,b
  1597  002158  5D6A               	subwf	register_timer@delay& (0+255),w,b
  1598  00215A  6F77               	movwf	(??_register_timer+4)& (0+255),b
  1599  00215C  5174               	movf	(??_register_timer+1)& (0+255),w,b
  1600  00215E  596B               	subwfb	(register_timer@delay+1)& (0+255),w,b
  1601  002160  6F78               	movwf	(??_register_timer+5)& (0+255),b
  1602  002162  5175               	movf	(??_register_timer+2)& (0+255),w,b
  1603  002164  596C               	subwfb	(register_timer@delay+2)& (0+255),w,b
  1604  002166  6F79               	movwf	(??_register_timer+6)& (0+255),b
  1605  002168  5176               	movf	(??_register_timer+3)& (0+255),w,b
  1606  00216A  596D               	subwfb	(register_timer@delay+3)& (0+255),w,b
  1607  00216C  6F7A               	movwf	(??_register_timer+7)& (0+255),b
  1608  00216E  5185               	movf	register_timer@idx& (0+255),w,b
  1609  002170  0D0F               	mullw	15
  1610  002172  0E64               	movlw	low _task_list
  1611  002174  24F3               	addwf	243,w,c
  1612  002176  6ED9               	movwf	fsr2l,c
  1613  002178  0E01               	movlw	high _task_list
  1614  00217A  20F4               	addwfc	prodh,w,c
  1615  00217C  6EDA               	movwf	fsr2h,c
  1616  00217E  C077  FFDE         	movff	??_register_timer+4,postinc2
  1617  002182  C078  FFDE         	movff	??_register_timer+5,postinc2
  1618  002186  C079  FFDE         	movff	??_register_timer+6,postinc2
  1619  00218A  C07A  FFDE         	movff	??_register_timer+7,postinc2
  1620  00218E                     l3751:
  1621                           
  1622                           ; BSR set to: 0
  1623                           ;clock.c: 150:     if(task_list[idx].next != 105)
  1624  00218E  5185               	movf	register_timer@idx& (0+255),w,b
  1625  002190  0D0F               	mullw	15
  1626  002192  0E6F               	movlw	low (_task_list+11)
  1627  002194  24F3               	addwf	243,w,c
  1628  002196  6ED9               	movwf	fsr2l,c
  1629  002198  0E01               	movlw	high (_task_list+11)
  1630  00219A  20F4               	addwfc	prodh,w,c
  1631  00219C  6EDA               	movwf	fsr2h,c
  1632  00219E  0E69               	movlw	105
  1633  0021A0  18DE               	xorwf	postinc2,w,c
  1634  0021A2  10DE               	iorwf	postinc2,w,c
  1635  0021A4  B4D8               	btfsc	status,2,c
  1636  0021A6  EFD7  F010         	goto	u3281
  1637  0021AA  EFD9  F010         	goto	u3280
  1638  0021AE                     u3281:
  1639  0021AE  EF0A  F011         	goto	l3755
  1640  0021B2                     u3280:
  1641  0021B2                     
  1642                           ; BSR set to: 0
  1643                           ;clock.c: 151:         task_list[task_list[idx].next].delay_t-= task_list[idx].delay_t;
  1644  0021B2  5185               	movf	register_timer@idx& (0+255),w,b
  1645  0021B4  0D0F               	mullw	15
  1646  0021B6  0E64               	movlw	low _task_list
  1647  0021B8  24F3               	addwf	243,w,c
  1648  0021BA  6ED9               	movwf	fsr2l,c
  1649  0021BC  0E01               	movlw	high _task_list
  1650  0021BE  20F4               	addwfc	prodh,w,c
  1651  0021C0  6EDA               	movwf	fsr2h,c
  1652  0021C2  CFDE F073          	movff	postinc2,??_register_timer
  1653  0021C6  CFDE F074          	movff	postinc2,??_register_timer+1
  1654  0021CA  CFDE F075          	movff	postinc2,??_register_timer+2
  1655  0021CE  CFDE F076          	movff	postinc2,??_register_timer+3
  1656  0021D2  5185               	movf	register_timer@idx& (0+255),w,b
  1657  0021D4  0D0F               	mullw	15
  1658  0021D6  0E6F               	movlw	low (_task_list+11)
  1659  0021D8  24F3               	addwf	243,w,c
  1660  0021DA  6ED9               	movwf	fsr2l,c
  1661  0021DC  0E01               	movlw	high (_task_list+11)
  1662  0021DE  20F4               	addwfc	prodh,w,c
  1663  0021E0  6EDA               	movwf	fsr2h,c
  1664  0021E2  CFDE F060          	movff	postinc2,___wmul@multiplier
  1665  0021E6  CFDD F061          	movff	postdec2,___wmul@multiplier+1
  1666  0021EA  0E00               	movlw	0
  1667  0021EC  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1668  0021EE  0E0F               	movlw	15
  1669  0021F0  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1670  0021F2  ECB7  F01D         	call	___wmul	;wreg free
  1671  0021F6  0E64               	movlw	low _task_list
  1672  0021F8  0100               	movlb	0	; () banked
  1673  0021FA  2560               	addwf	?___wmul& (0+255),w,b
  1674  0021FC  6ED9               	movwf	fsr2l,c
  1675  0021FE  0E01               	movlw	high _task_list
  1676  002200  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1677  002202  6EDA               	movwf	fsr2h,c
  1678  002204  5173               	movf	??_register_timer& (0+255),w,b
  1679  002206  5EDE               	subwf	postinc2,f,c
  1680  002208  5174               	movf	(??_register_timer+1)& (0+255),w,b
  1681  00220A  5ADE               	subwfb	postinc2,f,c
  1682  00220C  5175               	movf	(??_register_timer+2)& (0+255),w,b
  1683  00220E  5ADE               	subwfb	postinc2,f,c
  1684  002210  5176               	movf	(??_register_timer+3)& (0+255),w,b
  1685  002212  5ADE               	subwfb	postinc2,f,c
  1686  002214                     l3755:
  1687                           
  1688                           ; BSR set to: 0
  1689                           ;clock.c: 152:     return idx;
  1690  002214  5185               	movf	register_timer@idx& (0+255),w,b
  1691  002216                     l419:
  1692  002216  0012               	return		;funcret
  1693  002218                     __end_of_register_timer:
  1694                           	opt callstack 0
  1695                           
  1696 ;; *************** function _isFullList *****************
  1697 ;; Defined at:
  1698 ;;		line 77 in file "clock.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;		None
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;		None
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      unsigned char 
  1705 ;; Registers used:
  1706 ;;		wreg, status,2, status,0
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1716 ;;Total ram usage:        0 bytes
  1717 ;; Hardware stack levels used:    1
  1718 ;; Hardware stack levels required when called:    5
  1719 ;; This function calls:
  1720 ;;		Nothing
  1721 ;; This function is called by:
  1722 ;;		_register_timer
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           	psect	text3
  1727  003C5C                     __ptext3:
  1728                           	opt callstack 0
  1729  003C5C                     _isFullList:
  1730                           	opt callstack 23
  1731  003C5C                     
  1732                           ;clock.c: 78:     return num_task == 20 ? 1 : 0;
  1733  003C5C  0E14               	movlw	20
  1734  003C5E  0100               	movlb	0	; () banked
  1735  003C60  19C8               	xorwf	_num_task& (0+255),w,b
  1736  003C62  B4D8               	btfsc	status,2,c
  1737  003C64  EF36  F01E         	goto	u2661
  1738  003C68  EF39  F01E         	goto	u2660
  1739  003C6C                     u2661:
  1740  003C6C  0E01               	movlw	1
  1741  003C6E  EF3A  F01E         	goto	u2670
  1742  003C72                     u2660:
  1743  003C72  0E00               	movlw	0
  1744  003C74                     u2670:
  1745  003C74                     
  1746                           ; BSR set to: 0
  1747  003C74  0012               	return		;funcret
  1748  003C76                     __end_of_isFullList:
  1749                           	opt callstack 0
  1750                           
  1751 ;; *************** function _system_initialize *****************
  1752 ;; Defined at:
  1753 ;;		line 41 in file "mcc.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;		None
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;		None
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1771 ;;Total ram usage:        0 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; Hardware stack levels required when called:    9
  1774 ;; This function calls:
  1775 ;;		_LCDInit
  1776 ;;		_LTD_initialize
  1777 ;;		_interrupt_initialize
  1778 ;;		_osc_initialize
  1779 ;;		_pin_initialize
  1780 ;;		_start_timer
  1781 ;; This function is called by:
  1782 ;;		_main
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786                           	psect	text4
  1787  003BE0                     __ptext4:
  1788                           	opt callstack 0
  1789  003BE0                     _system_initialize:
  1790                           	opt callstack 21
  1791  003BE0                     
  1792                           ;mcc.c: 42:     osc_initialize();
  1793  003BE0  EC69  F01E         	call	_osc_initialize	;wreg free
  1794                           
  1795                           ;mcc.c: 43:     pin_initialize();
  1796  003BE4  ECDE  F01D         	call	_pin_initialize	;wreg free
  1797  003BE8                     
  1798                           ;mcc.c: 44:     interrupt_initialize();
  1799  003BE8  EC6C  F01E         	call	_interrupt_initialize	;wreg free
  1800  003BEC                     
  1801                           ;mcc.c: 45:     LTD_initialize();
  1802  003BEC  EC64  F01E         	call	_LTD_initialize	;wreg free
  1803  003BF0                     
  1804                           ;mcc.c: 46:     LCDInit();
  1805  003BF0  EC4E  F01B         	call	_LCDInit	;wreg free
  1806  003BF4                     
  1807                           ;mcc.c: 47:     start_timer(0);
  1808  003BF4  0E00               	movlw	0
  1809  003BF6  EC8C  F01A         	call	_start_timer
  1810  003BFA                     
  1811                           ;mcc.c: 48:     start_timer(1);
  1812  003BFA  0E01               	movlw	1
  1813  003BFC  EC8C  F01A         	call	_start_timer
  1814  003C00  0012               	return		;funcret
  1815  003C02                     __end_of_system_initialize:
  1816                           	opt callstack 0
  1817                           
  1818 ;; *************** function _start_timer *****************
  1819 ;; Defined at:
  1820 ;;		line 83 in file "clock.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;  timer_vaddr     1    wreg     unsigned char 
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;  timer_vaddr     1   12[BANK0 ] unsigned char 
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  2  114[None  ] int 
  1827 ;; Registers used:
  1828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1835 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1836 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1837 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1838 ;;Total ram usage:        3 bytes
  1839 ;; Hardware stack levels used:    1
  1840 ;; Hardware stack levels required when called:    8
  1841 ;; This function calls:
  1842 ;;		_initializeTaskList
  1843 ;; This function is called by:
  1844 ;;		_system_initialize
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           	psect	text5
  1849  003518                     __ptext5:
  1850                           	opt callstack 0
  1851  003518                     _start_timer:
  1852                           	opt callstack 21
  1853                           
  1854                           ;incstack = 0
  1855                           ;start_timer@timer_vaddr stored from wreg
  1856  003518  0100               	movlb	0	; () banked
  1857  00351A  6F6C               	movwf	start_timer@timer_vaddr& (0+255),b
  1858  00351C                     
  1859                           ;clock.c: 84:     if(timer_vaddr > 4)
  1860  00351C  0E04               	movlw	4
  1861  00351E  0100               	movlb	0	; () banked
  1862  003520  656C               	cpfsgt	start_timer@timer_vaddr& (0+255),b
  1863  003522  EF95  F01A         	goto	u3291
  1864  003526  EF97  F01A         	goto	u3290
  1865  00352A                     u3291:
  1866  00352A  EFB5  F01A         	goto	l3817
  1867  00352E                     u3290:
  1868  00352E  EFD6  F01A         	goto	l405
  1869  003532                     l407:
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;clock.c: 88:             INTCONbits.TMR0IE = 1;
  1873  003532  8AF2               	bsf	242,5,c	;volatile
  1874                           
  1875                           ;clock.c: 89:             INTCONbits.TMR0IF = 0;
  1876  003534  94F2               	bcf	242,2,c	;volatile
  1877  003536                     
  1878                           ; BSR set to: 0
  1879                           ;clock.c: 90:             T0CON = 0xC3;
  1880  003536  0EC3               	movlw	195
  1881  003538  6ED5               	movwf	213,c	;volatile
  1882                           
  1883                           ;clock.c: 91:             TMR0L = 131;
  1884  00353A  0E83               	movlw	131
  1885  00353C  6ED6               	movwf	214,c	;volatile
  1886                           
  1887                           ;clock.c: 92:             time_ms = 0;
  1888  00353E  0E00               	movlw	0
  1889  003540  6FBD               	movwf	_time_ms& (0+255),b
  1890  003542  0E00               	movlw	0
  1891  003544  6FBE               	movwf	(_time_ms+1)& (0+255),b
  1892  003546  0E00               	movlw	0
  1893  003548  6FBF               	movwf	(_time_ms+2)& (0+255),b
  1894  00354A  0E00               	movlw	0
  1895  00354C  6FC0               	movwf	(_time_ms+3)& (0+255),b
  1896                           
  1897                           ;clock.c: 93:             break;
  1898  00354E  EFD6  F01A         	goto	l405
  1899  003552                     l3803:
  1900                           
  1901                           ; BSR set to: 0
  1902                           ;clock.c: 95:             initializeTaskList();
  1903  003552  ECE6  F015         	call	_initializeTaskList	;wreg free
  1904  003556                     
  1905                           ;clock.c: 96:             PIE1bits.TMR1IE = 1;
  1906  003556  809D               	bsf	157,0,c	;volatile
  1907  003558                     
  1908                           ;clock.c: 97:             PIR1bits.TMR1IF = 0;
  1909  003558  909E               	bcf	158,0,c	;volatile
  1910  00355A                     
  1911                           ;clock.c: 98:             T1CON = 0b10000001;
  1912  00355A  0E81               	movlw	129
  1913  00355C  6ECD               	movwf	205,c	;volatile
  1914  00355E                     
  1915                           ;clock.c: 99:             TMR1H = 0xB1;
  1916  00355E  0EB1               	movlw	177
  1917  003560  6ECF               	movwf	207,c	;volatile
  1918  003562                     
  1919                           ;clock.c: 100:             TMR1L = 0xE0;
  1920  003562  0EE0               	movlw	224
  1921  003564  6ECE               	movwf	206,c	;volatile
  1922                           
  1923                           ;clock.c: 101:             break;
  1924  003566  EFD6  F01A         	goto	l405
  1925  00356A                     l3817:
  1926                           
  1927                           ; BSR set to: 0
  1928  00356A  516C               	movf	start_timer@timer_vaddr& (0+255),w,b
  1929  00356C  6F6A               	movwf	??_start_timer& (0+255),b
  1930  00356E  6B6B               	clrf	(??_start_timer+1)& (0+255),b
  1931                           
  1932                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1933                           ; Switch size 1, requested type "simple"
  1934                           ; Number of cases is 1, Range of values is 0 to 0
  1935                           ; switch strategies available:
  1936                           ; Name         Instructions Cycles
  1937                           ; simple_byte            4     3 (average)
  1938                           ;	Chosen strategy is simple_byte
  1939  003570  516B               	movf	(??_start_timer+1)& (0+255),w,b
  1940  003572  0A00               	xorlw	0	; case 0
  1941  003574  B4D8               	btfsc	status,2,c
  1942  003576  EFBF  F01A         	goto	l4349
  1943  00357A  EFD6  F01A         	goto	l405
  1944  00357E                     l4349:
  1945                           
  1946                           ; BSR set to: 0
  1947                           ; Switch size 1, requested type "simple"
  1948                           ; Number of cases is 5, Range of values is 0 to 4
  1949                           ; switch strategies available:
  1950                           ; Name         Instructions Cycles
  1951                           ; simple_byte           16     9 (average)
  1952                           ;	Chosen strategy is simple_byte
  1953  00357E  516A               	movf	??_start_timer& (0+255),w,b
  1954  003580  0A00               	xorlw	0	; case 0
  1955  003582  B4D8               	btfsc	status,2,c
  1956  003584  EF99  F01A         	goto	l407
  1957  003588  0A01               	xorlw	1	; case 1
  1958  00358A  B4D8               	btfsc	status,2,c
  1959  00358C  EFA9  F01A         	goto	l3803
  1960  003590  0A03               	xorlw	3	; case 2
  1961  003592  B4D8               	btfsc	status,2,c
  1962  003594  EFD6  F01A         	goto	l405
  1963  003598  0A01               	xorlw	1	; case 3
  1964  00359A  B4D8               	btfsc	status,2,c
  1965  00359C  EFD6  F01A         	goto	l405
  1966  0035A0  0A07               	xorlw	7	; case 4
  1967  0035A2  B4D8               	btfsc	status,2,c
  1968  0035A4  EFD6  F01A         	goto	l405
  1969  0035A8  EFD6  F01A         	goto	l405
  1970  0035AC                     l405:
  1971  0035AC  0012               	return		;funcret
  1972  0035AE                     __end_of_start_timer:
  1973                           	opt callstack 0
  1974                           
  1975 ;; *************** function _initializeTaskList *****************
  1976 ;; Defined at:
  1977 ;;		line 60 in file "clock.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;		None
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;  i               2    8[BANK0 ] int 
  1982 ;; Return value:  Size  Location     Type
  1983 ;;                  1    wreg      void 
  1984 ;; Registers used:
  1985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1986 ;; Tracked objects:
  1987 ;;		On entry : 0/0
  1988 ;;		On exit  : 0/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1992 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1994 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1995 ;;Total ram usage:        2 bytes
  1996 ;; Hardware stack levels used:    1
  1997 ;; Hardware stack levels required when called:    7
  1998 ;; This function calls:
  1999 ;;		___wmul
  2000 ;;		_queueInitialize
  2001 ;; This function is called by:
  2002 ;;		_start_timer
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           	psect	text6
  2007  002BCC                     __ptext6:
  2008                           	opt callstack 0
  2009  002BCC                     _initializeTaskList:
  2010                           	opt callstack 21
  2011  002BCC                     
  2012                           ;clock.c: 61:     queueInitialize();
  2013  002BCC  ECD7  F01A         	call	_queueInitialize	;wreg free
  2014  002BD0                     
  2015                           ;clock.c: 62:     for(int i = 0; i < 20; i++) {
  2016  002BD0  0E00               	movlw	0
  2017  002BD2  0100               	movlb	0	; () banked
  2018  002BD4  6F69               	movwf	(initializeTaskList@i+1)& (0+255),b
  2019  002BD6  0E00               	movlw	0
  2020  002BD8  6F68               	movwf	initializeTaskList@i& (0+255),b
  2021  002BDA                     l3313:
  2022                           
  2023                           ; BSR set to: 0
  2024                           ;clock.c: 63:         task_list[i].delay_t = 0;
  2025  002BDA  C068  F060         	movff	initializeTaskList@i,___wmul@multiplier
  2026  002BDE  C069  F061         	movff	initializeTaskList@i+1,___wmul@multiplier+1
  2027  002BE2  0E00               	movlw	0
  2028  002BE4  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2029  002BE6  0E0F               	movlw	15
  2030  002BE8  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2031  002BEA  ECB7  F01D         	call	___wmul	;wreg free
  2032  002BEE  0E64               	movlw	low _task_list
  2033  002BF0  0100               	movlb	0	; () banked
  2034  002BF2  2560               	addwf	?___wmul& (0+255),w,b
  2035  002BF4  6ED9               	movwf	fsr2l,c
  2036  002BF6  0E01               	movlw	high _task_list
  2037  002BF8  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2038  002BFA  6EDA               	movwf	fsr2h,c
  2039  002BFC  6ADE               	clrf	postinc2,c
  2040  002BFE  6ADE               	clrf	postinc2,c
  2041  002C00  6ADE               	clrf	postinc2,c
  2042  002C02  6ADD               	clrf	postdec2,c
  2043                           
  2044                           ;clock.c: 64:         task_list[i].period_t = 0;
  2045  002C04  C068  F060         	movff	initializeTaskList@i,___wmul@multiplier
  2046  002C08  C069  F061         	movff	initializeTaskList@i+1,___wmul@multiplier+1
  2047  002C0C  0E00               	movlw	0
  2048  002C0E  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2049  002C10  0E0F               	movlw	15
  2050  002C12  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2051  002C14  ECB7  F01D         	call	___wmul	;wreg free
  2052  002C18  0E68               	movlw	low (_task_list+4)
  2053  002C1A  0100               	movlb	0	; () banked
  2054  002C1C  2560               	addwf	?___wmul& (0+255),w,b
  2055  002C1E  6ED9               	movwf	fsr2l,c
  2056  002C20  0E01               	movlw	high (_task_list+4)
  2057  002C22  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2058  002C24  6EDA               	movwf	fsr2h,c
  2059  002C26  6ADE               	clrf	postinc2,c
  2060  002C28  6ADE               	clrf	postinc2,c
  2061  002C2A  6ADE               	clrf	postinc2,c
  2062  002C2C  6ADD               	clrf	postdec2,c
  2063                           
  2064                           ;clock.c: 65:         task_list[i].func_ptr = ((void*)0);
  2065  002C2E  C068  F060         	movff	initializeTaskList@i,___wmul@multiplier
  2066  002C32  C069  F061         	movff	initializeTaskList@i+1,___wmul@multiplier+1
  2067  002C36  0E00               	movlw	0
  2068  002C38  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2069  002C3A  0E0F               	movlw	15
  2070  002C3C  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2071  002C3E  ECB7  F01D         	call	___wmul	;wreg free
  2072  002C42  0E6C               	movlw	low (_task_list+8)
  2073  002C44  0100               	movlb	0	; () banked
  2074  002C46  2560               	addwf	?___wmul& (0+255),w,b
  2075  002C48  6ED9               	movwf	fsr2l,c
  2076  002C4A  0E01               	movlw	high (_task_list+8)
  2077  002C4C  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2078  002C4E  6EDA               	movwf	fsr2h,c
  2079  002C50  0E00               	movlw	0
  2080  002C52  6EDE               	movwf	postinc2,c
  2081  002C54  0E00               	movlw	0
  2082  002C56  6EDE               	movwf	postinc2,c
  2083  002C58  0E00               	movlw	0
  2084  002C5A  6EDE               	movwf	postinc2,c
  2085                           
  2086                           ;clock.c: 66:         task_list[i].data_p = ((void*)0);
  2087  002C5C  C068  F060         	movff	initializeTaskList@i,___wmul@multiplier
  2088  002C60  C069  F061         	movff	initializeTaskList@i+1,___wmul@multiplier+1
  2089  002C64  0E00               	movlw	0
  2090  002C66  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2091  002C68  0E0F               	movlw	15
  2092  002C6A  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2093  002C6C  ECB7  F01D         	call	___wmul	;wreg free
  2094  002C70  0E71               	movlw	low (_task_list+13)
  2095  002C72  0100               	movlb	0	; () banked
  2096  002C74  2560               	addwf	?___wmul& (0+255),w,b
  2097  002C76  6ED9               	movwf	fsr2l,c
  2098  002C78  0E01               	movlw	high (_task_list+13)
  2099  002C7A  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2100  002C7C  6EDA               	movwf	fsr2h,c
  2101  002C7E  0E00               	movlw	0
  2102  002C80  6EDE               	movwf	postinc2,c
  2103  002C82  0E00               	movlw	0
  2104  002C84  6EDD               	movwf	postdec2,c
  2105                           
  2106                           ;clock.c: 67:         task_list[i].next = 105;
  2107  002C86  C068  F060         	movff	initializeTaskList@i,___wmul@multiplier
  2108  002C8A  C069  F061         	movff	initializeTaskList@i+1,___wmul@multiplier+1
  2109  002C8E  0E00               	movlw	0
  2110  002C90  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2111  002C92  0E0F               	movlw	15
  2112  002C94  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2113  002C96  ECB7  F01D         	call	___wmul	;wreg free
  2114  002C9A  0E6F               	movlw	low (_task_list+11)
  2115  002C9C  0100               	movlb	0	; () banked
  2116  002C9E  2560               	addwf	?___wmul& (0+255),w,b
  2117  002CA0  6ED9               	movwf	fsr2l,c
  2118  002CA2  0E01               	movlw	high (_task_list+11)
  2119  002CA4  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2120  002CA6  6EDA               	movwf	fsr2h,c
  2121  002CA8  0E69               	movlw	105
  2122  002CAA  6EDE               	movwf	postinc2,c
  2123  002CAC  0E00               	movlw	0
  2124  002CAE  6EDD               	movwf	postdec2,c
  2125  002CB0                     
  2126                           ; BSR set to: 0
  2127                           ;clock.c: 68:     }
  2128  002CB0  4B68               	infsnz	initializeTaskList@i& (0+255),f,b
  2129  002CB2  2B69               	incf	(initializeTaskList@i+1)& (0+255),f,b
  2130  002CB4                     
  2131                           ; BSR set to: 0
  2132  002CB4  BF69               	btfsc	(initializeTaskList@i+1)& (0+255),7,b
  2133  002CB6  EF66  F016         	goto	u2651
  2134  002CBA  5169               	movf	(initializeTaskList@i+1)& (0+255),w,b
  2135  002CBC  E109               	bnz	u2650
  2136  002CBE  0E14               	movlw	20
  2137  002CC0  5D68               	subwf	initializeTaskList@i& (0+255),w,b
  2138  002CC2  A0D8               	btfss	status,0,c
  2139  002CC4  EF66  F016         	goto	u2651
  2140  002CC8  EF68  F016         	goto	u2650
  2141  002CCC                     u2651:
  2142  002CCC  EFED  F015         	goto	l3313
  2143  002CD0                     u2650:
  2144  002CD0                     
  2145                           ; BSR set to: 0
  2146                           ;clock.c: 69:     num_task = 0;
  2147  002CD0  0E00               	movlw	0
  2148  002CD2  6FC8               	movwf	_num_task& (0+255),b
  2149                           
  2150                           ;clock.c: 70:     head = 105;
  2151  002CD4  0E69               	movlw	105
  2152  002CD6  6FC7               	movwf	_head& (0+255),b
  2153  002CD8                     
  2154                           ; BSR set to: 0
  2155  002CD8  0012               	return		;funcret
  2156  002CDA                     __end_of_initializeTaskList:
  2157                           	opt callstack 0
  2158                           
  2159 ;; *************** function _queueInitialize *****************
  2160 ;; Defined at:
  2161 ;;		line 8 in file "clock.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;		None
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;  i               2    6[BANK0 ] int 
  2166 ;; Return value:  Size  Location     Type
  2167 ;;                  1    wreg      void 
  2168 ;; Registers used:
  2169 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2170 ;; Tracked objects:
  2171 ;;		On entry : 0/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2176 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2178 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2179 ;;Total ram usage:        2 bytes
  2180 ;; Hardware stack levels used:    1
  2181 ;; Hardware stack levels required when called:    6
  2182 ;; This function calls:
  2183 ;;		___wmul
  2184 ;; This function is called by:
  2185 ;;		_initializeTaskList
  2186 ;; This function uses a non-reentrant model
  2187 ;;
  2188                           
  2189                           	psect	text7
  2190  0035AE                     __ptext7:
  2191                           	opt callstack 0
  2192  0035AE                     _queueInitialize:
  2193                           	opt callstack 21
  2194  0035AE                     
  2195                           ;clock.c: 9:     for(int i = 0; i< 20; i++) {
  2196  0035AE  0E00               	movlw	0
  2197  0035B0  0100               	movlb	0	; () banked
  2198  0035B2  6F67               	movwf	(queueInitialize@i+1)& (0+255),b
  2199  0035B4  0E00               	movlw	0
  2200  0035B6  6F66               	movwf	queueInitialize@i& (0+255),b
  2201  0035B8                     l2989:
  2202                           
  2203                           ; BSR set to: 0
  2204                           ;clock.c: 10:         ready_queue[i].data_p = ((void*)0);
  2205  0035B8  C066  F060         	movff	queueInitialize@i,___wmul@multiplier
  2206  0035BC  C067  F061         	movff	queueInitialize@i+1,___wmul@multiplier+1
  2207  0035C0  0E00               	movlw	0
  2208  0035C2  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2209  0035C4  0E05               	movlw	5
  2210  0035C6  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2211  0035C8  ECB7  F01D         	call	___wmul	;wreg free
  2212  0035CC  0E03               	movlw	low (_ready_queue+3)
  2213  0035CE  0100               	movlb	0	; () banked
  2214  0035D0  2560               	addwf	?___wmul& (0+255),w,b
  2215  0035D2  6ED9               	movwf	fsr2l,c
  2216  0035D4  0E01               	movlw	high (_ready_queue+3)
  2217  0035D6  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2218  0035D8  6EDA               	movwf	fsr2h,c
  2219  0035DA  0E00               	movlw	0
  2220  0035DC  6EDE               	movwf	postinc2,c
  2221  0035DE  0E00               	movlw	0
  2222  0035E0  6EDD               	movwf	postdec2,c
  2223                           
  2224                           ;clock.c: 11:         ready_queue[i].func_ptr = ((void*)0);
  2225  0035E2  C066  F060         	movff	queueInitialize@i,___wmul@multiplier
  2226  0035E6  C067  F061         	movff	queueInitialize@i+1,___wmul@multiplier+1
  2227  0035EA  0E00               	movlw	0
  2228  0035EC  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2229  0035EE  0E05               	movlw	5
  2230  0035F0  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2231  0035F2  ECB7  F01D         	call	___wmul	;wreg free
  2232  0035F6  0E00               	movlw	low _ready_queue
  2233  0035F8  0100               	movlb	0	; () banked
  2234  0035FA  2560               	addwf	?___wmul& (0+255),w,b
  2235  0035FC  6ED9               	movwf	fsr2l,c
  2236  0035FE  0E01               	movlw	high _ready_queue
  2237  003600  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2238  003602  6EDA               	movwf	fsr2h,c
  2239  003604  0E00               	movlw	0
  2240  003606  6EDE               	movwf	postinc2,c
  2241  003608  0E00               	movlw	0
  2242  00360A  6EDE               	movwf	postinc2,c
  2243  00360C  0E00               	movlw	0
  2244  00360E  6EDE               	movwf	postinc2,c
  2245  003610                     
  2246                           ; BSR set to: 0
  2247                           ;clock.c: 12:     }
  2248  003610  4B66               	infsnz	queueInitialize@i& (0+255),f,b
  2249  003612  2B67               	incf	(queueInitialize@i+1)& (0+255),f,b
  2250  003614                     
  2251                           ; BSR set to: 0
  2252  003614  BF67               	btfsc	(queueInitialize@i+1)& (0+255),7,b
  2253  003616  EF16  F01B         	goto	u2071
  2254  00361A  5167               	movf	(queueInitialize@i+1)& (0+255),w,b
  2255  00361C  E109               	bnz	u2070
  2256  00361E  0E14               	movlw	20
  2257  003620  5D66               	subwf	queueInitialize@i& (0+255),w,b
  2258  003622  A0D8               	btfss	status,0,c
  2259  003624  EF16  F01B         	goto	u2071
  2260  003628  EF18  F01B         	goto	u2070
  2261  00362C                     u2071:
  2262  00362C  EFDC  F01A         	goto	l2989
  2263  003630                     u2070:
  2264  003630                     
  2265                           ; BSR set to: 0
  2266  003630  0012               	return		;funcret
  2267  003632                     __end_of_queueInitialize:
  2268                           	opt callstack 0
  2269                           
  2270 ;; *************** function _pin_initialize *****************
  2271 ;; Defined at:
  2272 ;;		line 7 in file "mcc.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;		None
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;		None
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  1    wreg      void 
  2279 ;; Registers used:
  2280 ;;		wreg, status,2
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2290 ;;Total ram usage:        0 bytes
  2291 ;; Hardware stack levels used:    1
  2292 ;; Hardware stack levels required when called:    5
  2293 ;; This function calls:
  2294 ;;		Nothing
  2295 ;; This function is called by:
  2296 ;;		_system_initialize
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           	psect	text8
  2301  003BBC                     __ptext8:
  2302                           	opt callstack 0
  2303  003BBC                     _pin_initialize:
  2304                           	opt callstack 24
  2305  003BBC                     
  2306                           ;mcc.c: 8:     LATC = 0x00;
  2307  003BBC  0E00               	movlw	0
  2308  003BBE  6E8B               	movwf	139,c	;volatile
  2309                           
  2310                           ;mcc.c: 9:     TRISC = 0xD7;
  2311  003BC0  0ED7               	movlw	215
  2312  003BC2  6E94               	movwf	148,c	;volatile
  2313                           
  2314                           ;mcc.c: 10:     ADCON1 = 0b00001111;
  2315  003BC4  0E0F               	movlw	15
  2316  003BC6  6EC1               	movwf	193,c	;volatile
  2317                           
  2318                           ;mcc.c: 12:     LATA = 0x00;
  2319  003BC8  0E00               	movlw	0
  2320  003BCA  6E89               	movwf	137,c	;volatile
  2321                           
  2322                           ;mcc.c: 13:     TRISA = 0xF3;
  2323  003BCC  0EF3               	movlw	243
  2324  003BCE  6E92               	movwf	146,c	;volatile
  2325                           
  2326                           ;mcc.c: 16:     LATB = 0x00;
  2327  003BD0  0E00               	movlw	0
  2328  003BD2  6E8A               	movwf	138,c	;volatile
  2329  003BD4                     
  2330                           ;mcc.c: 17:     TRISB = 0xFF;
  2331  003BD4  6893               	setf	147,c	;volatile
  2332                           
  2333                           ;mcc.c: 20:     LATD = 0x00;
  2334  003BD6  0E00               	movlw	0
  2335  003BD8  6E8C               	movwf	140,c	;volatile
  2336                           
  2337                           ;mcc.c: 21:     TRISD = 0x00;
  2338  003BDA  0E00               	movlw	0
  2339  003BDC  6E95               	movwf	149,c	;volatile
  2340  003BDE  0012               	return		;funcret
  2341  003BE0                     __end_of_pin_initialize:
  2342                           	opt callstack 0
  2343                           
  2344 ;; *************** function _osc_initialize *****************
  2345 ;; Defined at:
  2346 ;;		line 3 in file "mcc.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;		None
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;		None
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  1    wreg      void 
  2353 ;; Registers used:
  2354 ;;		wreg, status,2
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2364 ;;Total ram usage:        0 bytes
  2365 ;; Hardware stack levels used:    1
  2366 ;; Hardware stack levels required when called:    5
  2367 ;; This function calls:
  2368 ;;		Nothing
  2369 ;; This function is called by:
  2370 ;;		_system_initialize
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           	psect	text9
  2375  003CD2                     __ptext9:
  2376                           	opt callstack 0
  2377  003CD2                     _osc_initialize:
  2378                           	opt callstack 24
  2379  003CD2                     
  2380                           ;mcc.c: 4:     OSCCON = 0x70;
  2381  003CD2  0E70               	movlw	112
  2382  003CD4  6ED3               	movwf	211,c	;volatile
  2383  003CD6  0012               	return		;funcret
  2384  003CD8                     __end_of_osc_initialize:
  2385                           	opt callstack 0
  2386                           
  2387 ;; *************** function _interrupt_initialize *****************
  2388 ;; Defined at:
  2389 ;;		line 35 in file "mcc.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;		None
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;		None
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  1    wreg      void 
  2396 ;; Registers used:
  2397 ;;		None
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2407 ;;Total ram usage:        0 bytes
  2408 ;; Hardware stack levels used:    1
  2409 ;; Hardware stack levels required when called:    5
  2410 ;; This function calls:
  2411 ;;		Nothing
  2412 ;; This function is called by:
  2413 ;;		_system_initialize
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           	psect	text10
  2418  003CD8                     __ptext10:
  2419                           	opt callstack 0
  2420  003CD8                     _interrupt_initialize:
  2421                           	opt callstack 24
  2422  003CD8                     
  2423                           ;mcc.c: 36:     INTCONbits.GIE = 1;
  2424  003CD8  8EF2               	bsf	242,7,c	;volatile
  2425                           
  2426                           ;mcc.c: 37:     INTCONbits.PEIE = 1;
  2427  003CDA  8CF2               	bsf	242,6,c	;volatile
  2428  003CDC  0012               	return		;funcret
  2429  003CDE                     __end_of_interrupt_initialize:
  2430                           	opt callstack 0
  2431                           
  2432 ;; *************** function _LTD_initialize *****************
  2433 ;; Defined at:
  2434 ;;		line 3 in file "LTDtask.c"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;		None
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;		None
  2439 ;; Return value:  Size  Location     Type
  2440 ;;                  1    wreg      void 
  2441 ;; Registers used:
  2442 ;;		wreg, status,2
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2452 ;;Total ram usage:        0 bytes
  2453 ;; Hardware stack levels used:    1
  2454 ;; Hardware stack levels required when called:    5
  2455 ;; This function calls:
  2456 ;;		Nothing
  2457 ;; This function is called by:
  2458 ;;		_system_initialize
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           	psect	text11
  2463  003CC8                     __ptext11:
  2464                           	opt callstack 0
  2465  003CC8                     _LTD_initialize:
  2466                           	opt callstack 24
  2467  003CC8                     
  2468                           ;LTDtask.c: 5:     LATD = 0x00;
  2469  003CC8  0E00               	movlw	0
  2470  003CCA  6E8C               	movwf	140,c	;volatile
  2471                           
  2472                           ;LTDtask.c: 6:     TRISD = 0x00;
  2473  003CCC  0E00               	movlw	0
  2474  003CCE  6E95               	movwf	149,c	;volatile
  2475  003CD0  0012               	return		;funcret
  2476  003CD2                     __end_of_LTD_initialize:
  2477                           	opt callstack 0
  2478                           
  2479 ;; *************** function _LCDInit *****************
  2480 ;; Defined at:
  2481 ;;		line 45 in file "lcd.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;		None
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;		None
  2486 ;; Return value:  Size  Location     Type
  2487 ;;                  1    wreg      void 
  2488 ;; Registers used:
  2489 ;;		wreg, status,2, status,0, cstack
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2497 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2498 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2499 ;;Total ram usage:        1 bytes
  2500 ;; Hardware stack levels used:    1
  2501 ;; Hardware stack levels required when called:    8
  2502 ;; This function calls:
  2503 ;;		_InitBBSPI
  2504 ;;		_LCDPutInst
  2505 ;;		_Port_BBSPIInit
  2506 ;;		_WritePort_BBSPI
  2507 ;; This function is called by:
  2508 ;;		_system_initialize
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           	psect	text12
  2513  00369C                     __ptext12:
  2514                           	opt callstack 0
  2515  00369C                     _LCDInit:
  2516                           	opt callstack 21
  2517  00369C                     
  2518                           ;lcd.c: 47:     InitBBSPI();
  2519  00369C  EC47  F01E         	call	_InitBBSPI	;wreg free
  2520  0036A0                     
  2521                           ;lcd.c: 48:     TRISFbits.TRISF6 = 0;
  2522  0036A0  9C97               	bcf	151,6,c	;volatile
  2523  0036A2                     
  2524                           ;lcd.c: 49:     LATFbits.LATF6 = 0;
  2525  0036A2  9C8E               	bcf	142,6,c	;volatile
  2526  0036A4                     
  2527                           ;lcd.c: 50:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2528  0036A4  0E0D               	movlw	13
  2529  0036A6  0100               	movlb	0	; () banked
  2530  0036A8  6F66               	movwf	??_LCDInit& (0+255),b
  2531  0036AA  0EFB               	movlw	251
  2532  0036AC                     u3797:
  2533  0036AC  2EE8               	decfsz	wreg,f,c
  2534  0036AE  D7FE               	bra	u3797
  2535  0036B0  2F66               	decfsz	??_LCDInit& (0+255),f,b
  2536  0036B2  D7FC               	bra	u3797
  2537  0036B4  D000               	nop2	
  2538  0036B6                     
  2539                           ;lcd.c: 51:     LATFbits.LATF6 = 1;
  2540  0036B6  8C8E               	bsf	142,6,c	;volatile
  2541  0036B8                     
  2542                           ;lcd.c: 52:     Port_BBSPIInit (0x00);
  2543  0036B8  0E00               	movlw	0
  2544  0036BA  EC11  F01E         	call	_Port_BBSPIInit
  2545  0036BE                     
  2546                           ;lcd.c: 53:     Port_BBSPIInit (0x01);
  2547  0036BE  0E01               	movlw	1
  2548  0036C0  EC11  F01E         	call	_Port_BBSPIInit
  2549  0036C4                     
  2550                           ;lcd.c: 54:     WritePort_BBSPI (0x12, 0);
  2551  0036C4  0E00               	movlw	0
  2552  0036C6  0100               	movlb	0	; () banked
  2553  0036C8  6F63               	movwf	WritePort_BBSPI@a& (0+255),b
  2554  0036CA  0E12               	movlw	18
  2555  0036CC  EC01  F01E         	call	_WritePort_BBSPI
  2556  0036D0                     
  2557                           ;lcd.c: 55:     _delay((unsigned long)((15)*(8000000/4000.0)));
  2558  0036D0  0E27               	movlw	39
  2559  0036D2  0100               	movlb	0	; () banked
  2560  0036D4  6F66               	movwf	??_LCDInit& (0+255),b
  2561  0036D6  0EF5               	movlw	245
  2562  0036D8                     u3807:
  2563  0036D8  2EE8               	decfsz	wreg,f,c
  2564  0036DA  D7FE               	bra	u3807
  2565  0036DC  2F66               	decfsz	??_LCDInit& (0+255),f,b
  2566  0036DE  D7FC               	bra	u3807
  2567  0036E0                     
  2568                           ;lcd.c: 56:     LCDPutInst(0x32);
  2569  0036E0  0E32               	movlw	50
  2570  0036E2  EC9B  F01C         	call	_LCDPutInst
  2571  0036E6                     
  2572                           ;lcd.c: 57:     LCDPutInst(0x3C);
  2573  0036E6  0E3C               	movlw	60
  2574  0036E8  EC9B  F01C         	call	_LCDPutInst
  2575  0036EC                     
  2576                           ;lcd.c: 58:     LCDPutInst(0x0C);
  2577  0036EC  0E0C               	movlw	12
  2578  0036EE  EC9B  F01C         	call	_LCDPutInst
  2579  0036F2                     
  2580                           ;lcd.c: 59:     LCDPutInst(0x01);
  2581  0036F2  0E01               	movlw	1
  2582  0036F4  EC9B  F01C         	call	_LCDPutInst
  2583  0036F8                     
  2584                           ;lcd.c: 60:     LCDPutInst(0x06);
  2585  0036F8  0E06               	movlw	6
  2586  0036FA  EC9B  F01C         	call	_LCDPutInst
  2587  0036FE  0012               	return		;funcret
  2588  003700                     __end_of_LCDInit:
  2589                           	opt callstack 0
  2590                           
  2591 ;; *************** function _Port_BBSPIInit *****************
  2592 ;; Defined at:
  2593 ;;		line 123 in file "lcd.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;  port_dir        1    wreg     unsigned char 
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;  port_dir        1    3[BANK0 ] unsigned char 
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  1    wreg      void 
  2600 ;; Registers used:
  2601 ;;		wreg, status,2, status,0, cstack
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2608 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2610 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2611 ;;Total ram usage:        1 bytes
  2612 ;; Hardware stack levels used:    1
  2613 ;; Hardware stack levels required when called:    6
  2614 ;; This function calls:
  2615 ;;		_SendByteBBSPI
  2616 ;; This function is called by:
  2617 ;;		_LCDInit
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621                           	psect	text13
  2622  003C22                     __ptext13:
  2623                           	opt callstack 0
  2624  003C22                     _Port_BBSPIInit:
  2625                           	opt callstack 22
  2626                           
  2627                           ;incstack = 0
  2628                           ;Port_BBSPIInit@port_dir stored from wreg
  2629  003C22  0100               	movlb	0	; () banked
  2630  003C24  6F63               	movwf	Port_BBSPIInit@port_dir& (0+255),b
  2631  003C26                     
  2632                           ;lcd.c: 123: void Port_BBSPIInit (unsigned char port_dir);lcd.c: 124: {;lcd.c: 128:     
      +                          LATAbits.LATA2 = 0;
  2633  003C26  9489               	bcf	137,2,c	;volatile
  2634  003C28                     
  2635                           ;lcd.c: 129:     SendByteBBSPI(0x40);
  2636  003C28  0E40               	movlw	64
  2637  003C2A  EC19  F01B         	call	_SendByteBBSPI
  2638                           
  2639                           ;lcd.c: 130:     SendByteBBSPI(port_dir);
  2640  003C2E  0100               	movlb	0	; () banked
  2641  003C30  5163               	movf	Port_BBSPIInit@port_dir& (0+255),w,b
  2642  003C32  EC19  F01B         	call	_SendByteBBSPI
  2643                           
  2644                           ;lcd.c: 131:     SendByteBBSPI(0x00);
  2645  003C36  0E00               	movlw	0
  2646  003C38  EC19  F01B         	call	_SendByteBBSPI
  2647  003C3C                     
  2648                           ;lcd.c: 132:     LATAbits.LATA2 = 1;
  2649  003C3C  8489               	bsf	137,2,c	;volatile
  2650  003C3E  0012               	return		;funcret
  2651  003C40                     __end_of_Port_BBSPIInit:
  2652                           	opt callstack 0
  2653                           
  2654 ;; *************** function _InitBBSPI *****************
  2655 ;; Defined at:
  2656 ;;		line 70 in file "lcd.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;		None
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;		None
  2661 ;; Return value:  Size  Location     Type
  2662 ;;                  1    wreg      void 
  2663 ;; Registers used:
  2664 ;;		None
  2665 ;; Tracked objects:
  2666 ;;		On entry : 0/0
  2667 ;;		On exit  : 0/0
  2668 ;;		Unchanged: 0/0
  2669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2674 ;;Total ram usage:        0 bytes
  2675 ;; Hardware stack levels used:    1
  2676 ;; Hardware stack levels required when called:    5
  2677 ;; This function calls:
  2678 ;;		Nothing
  2679 ;; This function is called by:
  2680 ;;		_LCDInit
  2681 ;; This function uses a non-reentrant model
  2682 ;;
  2683                           
  2684                           	psect	text14
  2685  003C8E                     __ptext14:
  2686                           	opt callstack 0
  2687  003C8E                     _InitBBSPI:
  2688                           	opt callstack 23
  2689  003C8E                     
  2690                           ;lcd.c: 72:     TRISAbits.TRISA2 = 0;
  2691  003C8E  9492               	bcf	146,2,c	;volatile
  2692                           
  2693                           ;lcd.c: 73:     TRISCbits.TRISC4 = 1;
  2694  003C90  8894               	bsf	148,4,c	;volatile
  2695                           
  2696                           ;lcd.c: 74:     TRISCbits.TRISC5 = 0;
  2697  003C92  9A94               	bcf	148,5,c	;volatile
  2698                           
  2699                           ;lcd.c: 75:     TRISCbits.TRISC3 = 0;
  2700  003C94  9694               	bcf	148,3,c	;volatile
  2701                           
  2702                           ;lcd.c: 77:     LATAbits.LATA2 = 1;
  2703  003C96  8489               	bsf	137,2,c	;volatile
  2704                           
  2705                           ;lcd.c: 78:     LATCbits.LATC4 = 1;
  2706  003C98  888B               	bsf	139,4,c	;volatile
  2707                           
  2708                           ;lcd.c: 79:     LATCbits.LATC5 = 0;
  2709  003C9A  9A8B               	bcf	139,5,c	;volatile
  2710                           
  2711                           ;lcd.c: 80:     LATCbits.LATC3 = 0;
  2712  003C9C  968B               	bcf	139,3,c	;volatile
  2713  003C9E  0012               	return		;funcret
  2714  003CA0                     __end_of_InitBBSPI:
  2715                           	opt callstack 0
  2716                           
  2717 ;; *************** function _dispatch *****************
  2718 ;; Defined at:
  2719 ;;		line 234 in file "clock.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;		None
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;  node            5   64[BANK0 ] struct .
  2724 ;; Return value:  Size  Location     Type
  2725 ;;                  1    wreg      void 
  2726 ;; Registers used:
  2727 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2734 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2736 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2737 ;;Total ram usage:        5 bytes
  2738 ;; Hardware stack levels used:    1
  2739 ;; Hardware stack levels required when called:   11
  2740 ;; This function calls:
  2741 ;;		_changeState
  2742 ;;		_check_humid_to_turn_fan
  2743 ;;		_dequeue
  2744 ;;		_handleButton
  2745 ;;		_isEmptyQueue
  2746 ;;		_printTempAndHumid
  2747 ;;		_readTempAndHumid
  2748 ;; This function is called by:
  2749 ;;		_main
  2750 ;; This function uses a non-reentrant model
  2751 ;;
  2752                           
  2753                           	psect	text15
  2754  003700                     __ptext15:
  2755                           	opt callstack 0
  2756  003700                     _dispatch:
  2757                           	opt callstack 19
  2758  003700                     
  2759                           ;clock.c: 235:     while(!isEmptyQueue()) {
  2760  003700  EFA7  F01B         	goto	l3979
  2761  003704                     l3973:
  2762                           
  2763                           ;clock.c: 236:         queue_node node = dequeue();
  2764  003704  EC3B  F01A         	call	_dequeue	;wreg free
  2765  003708  EE20  F0A0         	lfsr	2,dispatch@node
  2766  00370C  0E04               	movlw	4
  2767  00370E                     u3471:
  2768  00370E  CFEB FFDB          	movff	plusw0,plusw2
  2769  003712  06E8               	decf	wreg,f,c
  2770  003714  E2FC               	bc	u3471
  2771  003716                     
  2772                           ;clock.c: 237:         if(node.func_ptr != ((void*)0))
  2773  003716  0100               	movlb	0	; () banked
  2774  003718  51A0               	movf	dispatch@node& (0+255),w,b
  2775  00371A  11A1               	iorwf	(dispatch@node+1)& (0+255),w,b
  2776  00371C  11A2               	iorwf	(dispatch@node+2)& (0+255),w,b
  2777  00371E  B4D8               	btfsc	status,2,c
  2778  003720  EF94  F01B         	goto	u3481
  2779  003724  EF96  F01B         	goto	u3480
  2780  003728                     u3481:
  2781  003728  EFA7  F01B         	goto	l3979
  2782  00372C                     u3480:
  2783  00372C                     
  2784                           ; BSR set to: 0
  2785                           ;clock.c: 238:             (node.func_ptr)(node.data_p);
  2786  00372C  C0A3  F062         	movff	dispatch@node+3,handleButton@data_ptr
  2787  003730  C0A4  F063         	movff	dispatch@node+4,handleButton@data_ptr+1
  2788  003734  D802               	call	u3498
  2789  003736  EFA7  F01B         	goto	u3499
  2790  00373A                     u3498:
  2791  00373A  0005               	push	
  2792  00373C  6EFA               	movwf	pclath,c
  2793  00373E  51A0               	movf	dispatch@node& (0+255),w,b
  2794  003740  6EFD               	movwf	tosl,c
  2795  003742  51A1               	movf	(dispatch@node+1)& (0+255),w,b
  2796  003744  6EFE               	movwf	tosh,c
  2797  003746  51A2               	movf	(dispatch@node+2)& (0+255),w,b
  2798  003748  6EFF               	movwf	tosu,c
  2799  00374A  50FA               	movf	pclath,w,c
  2800  00374C  0012               	return		;indir
  2801  00374E                     u3499:
  2802  00374E                     l3979:
  2803                           
  2804                           ;clock.c: 235:     while(!isEmptyQueue()) {
  2805  00374E  EC5A  F01D         	call	_isEmptyQueue	;wreg free
  2806  003752  0900               	iorlw	0
  2807  003754  B4D8               	btfsc	status,2,c
  2808  003756  EFAF  F01B         	goto	u3501
  2809  00375A  EFB1  F01B         	goto	u3500
  2810  00375E                     u3501:
  2811  00375E  EF82  F01B         	goto	l3973
  2812  003762                     u3500:
  2813  003762  0012               	return		;funcret
  2814  003764                     __end_of_dispatch:
  2815                           	opt callstack 0
  2816                           
  2817 ;; *************** function _readTempAndHumid *****************
  2818 ;; Defined at:
  2819 ;;		line 67 in file "dht11.c"
  2820 ;; Parameters:    Size  Location     Type
  2821 ;;		None
  2822 ;; Auto vars:     Size  Location     Type
  2823 ;;		None
  2824 ;; Return value:  Size  Location     Type
  2825 ;;                  1    wreg      void 
  2826 ;; Registers used:
  2827 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2828 ;; Tracked objects:
  2829 ;;		On entry : 0/0
  2830 ;;		On exit  : 0/0
  2831 ;;		Unchanged: 0/0
  2832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2835 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2836 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2837 ;;Total ram usage:        1 bytes
  2838 ;; Hardware stack levels used:    1
  2839 ;; Hardware stack levels required when called:    7
  2840 ;; This function calls:
  2841 ;;		___fladd
  2842 ;;		___flmul
  2843 ;;		___flsub
  2844 ;;		___xxtofl
  2845 ;;		_readDHT
  2846 ;; This function is called by:
  2847 ;;		_system_setup
  2848 ;;		_dispatch
  2849 ;; This function uses a non-reentrant model
  2850 ;;
  2851                           
  2852                           	psect	text16
  2853  002966                     __ptext16:
  2854                           	opt callstack 0
  2855  002966                     _readTempAndHumid:
  2856                           	opt callstack 22
  2857  002966                     
  2858                           ;dht11.c: 68:     if(!readDHT()) {
  2859  002966  EC65  F017         	call	_readDHT	;wreg free
  2860  00296A  0900               	iorlw	0
  2861  00296C  A4D8               	btfss	status,2,c
  2862  00296E  EFBB  F014         	goto	u3301
  2863  002972  EFBD  F014         	goto	u3300
  2864  002976                     u3301:
  2865  002976  EFD0  F014         	goto	l3831
  2866  00297A                     u3300:
  2867  00297A                     
  2868                           ;dht11.c: 69:         temperature_value = 399;
  2869  00297A  0E00               	movlw	0
  2870  00297C  0100               	movlb	0	; () banked
  2871  00297E  6FCD               	movwf	_temperature_value& (0+255),b
  2872  002980  0E80               	movlw	128
  2873  002982  6FCE               	movwf	(_temperature_value+1)& (0+255),b
  2874  002984  0EC7               	movlw	199
  2875  002986  6FCF               	movwf	(_temperature_value+2)& (0+255),b
  2876  002988  0E43               	movlw	67
  2877  00298A  6FD0               	movwf	(_temperature_value+3)& (0+255),b
  2878                           
  2879                           ;dht11.c: 70:         humidity_value = 399;
  2880  00298C  0E00               	movlw	0
  2881  00298E  6FD1               	movwf	_humidity_value& (0+255),b
  2882  002990  0E80               	movlw	128
  2883  002992  6FD2               	movwf	(_humidity_value+1)& (0+255),b
  2884  002994  0EC7               	movlw	199
  2885  002996  6FD3               	movwf	(_humidity_value+2)& (0+255),b
  2886  002998  0E43               	movlw	67
  2887  00299A  6FD4               	movwf	(_humidity_value+3)& (0+255),b
  2888  00299C  EF4D  F015         	goto	l313
  2889  0029A0                     l3831:
  2890                           
  2891                           ;dht11.c: 74:     temperature_value = temperature_dht11[0];
  2892  0029A0  0100               	movlb	0	; () banked
  2893  0029A2  51C3               	movf	_temperature_dht11& (0+255),w,b
  2894  0029A4  6F60               	movwf	___xxtofl@val& (0+255),b
  2895  0029A6  6B61               	clrf	(___xxtofl@val+1)& (0+255),b
  2896  0029A8  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  2897  0029AA  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  2898  0029AC  0E00               	movlw	0
  2899  0029AE  EC61  F012         	call	___xxtofl
  2900  0029B2  C060  F0CD         	movff	?___xxtofl,_temperature_value
  2901  0029B6  C061  F0CE         	movff	?___xxtofl+1,_temperature_value+1
  2902  0029BA  C062  F0CF         	movff	?___xxtofl+2,_temperature_value+2
  2903  0029BE  C063  F0D0         	movff	?___xxtofl+3,_temperature_value+3
  2904  0029C2                     
  2905                           ;dht11.c: 75:     if (temperature_dht11[1] & 0x80) {
  2906  0029C2  0100               	movlb	0	; () banked
  2907  0029C4  AFC4               	btfss	(_temperature_dht11+1)& (0+255),7,b
  2908  0029C6  EFE7  F014         	goto	u3311
  2909  0029CA  EFE9  F014         	goto	u3310
  2910  0029CE                     u3311:
  2911  0029CE  EF03  F015         	goto	l3837
  2912  0029D2                     u3310:
  2913  0029D2                     
  2914                           ; BSR set to: 0
  2915                           ;dht11.c: 76:         temperature_value = -1 - temperature_value;
  2916  0029D2  0E00               	movlw	0
  2917  0029D4  6F97               	movwf	___flsub@b& (0+255),b
  2918  0029D6  0E00               	movlw	0
  2919  0029D8  6F98               	movwf	(___flsub@b+1)& (0+255),b
  2920  0029DA  0E80               	movlw	128
  2921  0029DC  6F99               	movwf	(___flsub@b+2)& (0+255),b
  2922  0029DE  0EBF               	movlw	191
  2923  0029E0  6F9A               	movwf	(___flsub@b+3)& (0+255),b
  2924  0029E2  C0CD  F09B         	movff	_temperature_value,___flsub@a
  2925  0029E6  C0CE  F09C         	movff	_temperature_value+1,___flsub@a+1
  2926  0029EA  C0CF  F09D         	movff	_temperature_value+2,___flsub@a+2
  2927  0029EE  C0D0  F09E         	movff	_temperature_value+3,___flsub@a+3
  2928  0029F2  EC35  F01C         	call	___flsub	;wreg free
  2929  0029F6  C097  F0CD         	movff	?___flsub,_temperature_value
  2930  0029FA  C098  F0CE         	movff	?___flsub+1,_temperature_value+1
  2931  0029FE  C099  F0CF         	movff	?___flsub+2,_temperature_value+2
  2932  002A02  C09A  F0D0         	movff	?___flsub+3,_temperature_value+3
  2933  002A06                     l3837:
  2934                           
  2935                           ;dht11.c: 78:     temperature_value += (temperature_dht11[3] & 0x0f) * 0.1;
  2936  002A06  C0CD  F087         	movff	_temperature_value,___fladd@b
  2937  002A0A  C0CE  F088         	movff	_temperature_value+1,___fladd@b+1
  2938  002A0E  C0CF  F089         	movff	_temperature_value+2,___fladd@b+2
  2939  002A12  C0D0  F08A         	movff	_temperature_value+3,___fladd@b+3
  2940  002A16  0ECD               	movlw	205
  2941  002A18  0100               	movlb	0	; () banked
  2942  002A1A  6F72               	movwf	___flmul@a& (0+255),b
  2943  002A1C  0ECC               	movlw	204
  2944  002A1E  6F73               	movwf	(___flmul@a+1)& (0+255),b
  2945  002A20  0ECC               	movlw	204
  2946  002A22  6F74               	movwf	(___flmul@a+2)& (0+255),b
  2947  002A24  0E3D               	movlw	61
  2948  002A26  6F75               	movwf	(___flmul@a+3)& (0+255),b
  2949  002A28  C0C6  F09F         	movff	_temperature_dht11+3,??_readTempAndHumid
  2950  002A2C  0E0F               	movlw	15
  2951  002A2E  179F               	andwf	??_readTempAndHumid& (0+255),f,b
  2952  002A30  519F               	movf	??_readTempAndHumid& (0+255),w,b
  2953  002A32  6F60               	movwf	___xxtofl@val& (0+255),b
  2954  002A34  6B61               	clrf	(___xxtofl@val+1)& (0+255),b
  2955  002A36  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  2956  002A38  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  2957  002A3A  0E01               	movlw	1
  2958  002A3C  EC61  F012         	call	___xxtofl
  2959  002A40  C060  F06E         	movff	?___xxtofl,___flmul@b
  2960  002A44  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
  2961  002A48  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
  2962  002A4C  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
  2963  002A50  EC26  F00D         	call	___flmul	;wreg free
  2964  002A54  C06E  F08B         	movff	?___flmul,___fladd@a
  2965  002A58  C06F  F08C         	movff	?___flmul+1,___fladd@a+1
  2966  002A5C  C070  F08D         	movff	?___flmul+2,___fladd@a+2
  2967  002A60  C071  F08E         	movff	?___flmul+3,___fladd@a+3
  2968  002A64  ECC5  F00A         	call	___fladd	;wreg free
  2969  002A68  C087  F0CD         	movff	?___fladd,_temperature_value
  2970  002A6C  C088  F0CE         	movff	?___fladd+1,_temperature_value+1
  2971  002A70  C089  F0CF         	movff	?___fladd+2,_temperature_value+2
  2972  002A74  C08A  F0D0         	movff	?___fladd+3,_temperature_value+3
  2973  002A78                     
  2974                           ;dht11.c: 80:     humidity_value = humidity_dht11[0];
  2975  002A78  0100               	movlb	0	; () banked
  2976  002A7A  51C1               	movf	_humidity_dht11& (0+255),w,b
  2977  002A7C  6F60               	movwf	___xxtofl@val& (0+255),b
  2978  002A7E  6B61               	clrf	(___xxtofl@val+1)& (0+255),b
  2979  002A80  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  2980  002A82  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  2981  002A84  0E00               	movlw	0
  2982  002A86  EC61  F012         	call	___xxtofl
  2983  002A8A  C060  F0D1         	movff	?___xxtofl,_humidity_value
  2984  002A8E  C061  F0D2         	movff	?___xxtofl+1,_humidity_value+1
  2985  002A92  C062  F0D3         	movff	?___xxtofl+2,_humidity_value+2
  2986  002A96  C063  F0D4         	movff	?___xxtofl+3,_humidity_value+3
  2987  002A9A                     l313:
  2988  002A9A  0012               	return		;funcret
  2989  002A9C                     __end_of_readTempAndHumid:
  2990                           	opt callstack 0
  2991                           
  2992 ;; *************** function _readDHT *****************
  2993 ;; Defined at:
  2994 ;;		line 28 in file "dht11.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;		None
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;  timeOut         2    6[BANK0 ] unsigned int 
  2999 ;;  checkSum        1    5[BANK0 ] unsigned char 
  3000 ;; Return value:  Size  Location     Type
  3001 ;;                  1    wreg      unsigned char 
  3002 ;; Registers used:
  3003 ;;		wreg, status,2, status,0, cstack
  3004 ;; Tracked objects:
  3005 ;;		On entry : 0/0
  3006 ;;		On exit  : 0/0
  3007 ;;		Unchanged: 0/0
  3008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3010 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3011 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3012 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3013 ;;Total ram usage:        4 bytes
  3014 ;; Hardware stack levels used:    1
  3015 ;; Hardware stack levels required when called:    6
  3016 ;; This function calls:
  3017 ;;		_getByte
  3018 ;; This function is called by:
  3019 ;;		_readTempAndHumid
  3020 ;; This function uses a non-reentrant model
  3021 ;;
  3022                           
  3023                           	psect	text17
  3024  002ECA                     __ptext17:
  3025                           	opt callstack 0
  3026  002ECA                     _readDHT:
  3027                           	opt callstack 22
  3028  002ECA                     
  3029                           ;dht11.c: 29:     char checkSum;;dht11.c: 30:     unsigned int timeOut = 0xFFFF;
  3030  002ECA  0100               	movlb	0	; () banked
  3031  002ECC  6966               	setf	readDHT@timeOut& (0+255),b
  3032  002ECE  6967               	setf	(readDHT@timeOut+1)& (0+255),b
  3033                           
  3034                           ;dht11.c: 31:     TRISCbits.RC3 = 0;
  3035  002ED0  9694               	bcf	148,3,c	;volatile
  3036                           
  3037                           ;dht11.c: 32:     LATCbits.LC3 = 1;
  3038  002ED2  868B               	bsf	139,3,c	;volatile
  3039  002ED4                     
  3040                           ; BSR set to: 0
  3041                           ;dht11.c: 33:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3042  002ED4  0E34               	movlw	52
  3043  002ED6  0100               	movlb	0	; () banked
  3044  002ED8  6F64               	movwf	??_readDHT& (0+255),b
  3045  002EDA  0EF1               	movlw	241
  3046  002EDC                     u3817:
  3047  002EDC  2EE8               	decfsz	wreg,f,c
  3048  002EDE  D7FE               	bra	u3817
  3049  002EE0  2F64               	decfsz	??_readDHT& (0+255),f,b
  3050  002EE2  D7FC               	bra	u3817
  3051  002EE4  D000               	nop2	
  3052  002EE6                     
  3053                           ;dht11.c: 35:     LATCbits.LC3 = 0;
  3054  002EE6  968B               	bcf	139,3,c	;volatile
  3055                           
  3056                           ;dht11.c: 36:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  3057  002EE8  0E28               	movlw	40
  3058  002EEA                     u3827:
  3059  002EEA  2EE8               	decfsz	wreg,f,c
  3060  002EEC  D7FE               	bra	u3827
  3061  002EEE                     
  3062                           ;dht11.c: 37:     TRISCbits.RC3 = 1;
  3063  002EEE  8694               	bsf	148,3,c	;volatile
  3064                           
  3065                           ;dht11.c: 40:     while(!PORTCbits.RC3) {
  3066  002EF0  EF8A  F017         	goto	l300
  3067  002EF4                     l3267:
  3068                           
  3069                           ;dht11.c: 41:         timeOut--;
  3070  002EF4  0100               	movlb	0	; () banked
  3071  002EF6  0766               	decf	readDHT@timeOut& (0+255),f,b
  3072  002EF8  A0D8               	btfss	status,0,c
  3073  002EFA  0767               	decf	(readDHT@timeOut+1)& (0+255),f,b
  3074  002EFC                     
  3075                           ; BSR set to: 0
  3076                           ;dht11.c: 42:         if(!timeOut)
  3077  002EFC  5166               	movf	readDHT@timeOut& (0+255),w,b
  3078  002EFE  1167               	iorwf	(readDHT@timeOut+1)& (0+255),w,b
  3079  002F00  A4D8               	btfss	status,2,c
  3080  002F02  EF85  F017         	goto	u2571
  3081  002F06  EF87  F017         	goto	u2570
  3082  002F0A                     u2571:
  3083  002F0A  EF8A  F017         	goto	l300
  3084  002F0E                     u2570:
  3085  002F0E                     l3271:
  3086                           
  3087                           ; BSR set to: 0
  3088                           ;dht11.c: 43:             return 0;
  3089  002F0E  0E00               	movlw	0
  3090  002F10  EFCE  F017         	goto	l303
  3091  002F14                     l300:
  3092                           
  3093                           ;dht11.c: 40:     while(!PORTCbits.RC3) {
  3094  002F14  A682               	btfss	130,3,c	;volatile
  3095  002F16  EF8F  F017         	goto	u2581
  3096  002F1A  EF91  F017         	goto	u2580
  3097  002F1E                     u2581:
  3098  002F1E  EF7A  F017         	goto	l3267
  3099  002F22                     u2580:
  3100  002F22                     
  3101                           ;dht11.c: 46:     timeOut = 0xFFFF;
  3102  002F22  0100               	movlb	0	; () banked
  3103  002F24  6966               	setf	readDHT@timeOut& (0+255),b
  3104  002F26  6967               	setf	(readDHT@timeOut+1)& (0+255),b
  3105                           
  3106                           ;dht11.c: 49:     while(PORTCbits.RC3) {
  3107  002F28  EFA4  F017         	goto	l305
  3108  002F2C                     l3275:
  3109                           
  3110                           ; BSR set to: 0
  3111                           ;dht11.c: 50:         timeOut--;
  3112  002F2C  0766               	decf	readDHT@timeOut& (0+255),f,b
  3113  002F2E  A0D8               	btfss	status,0,c
  3114  002F30  0767               	decf	(readDHT@timeOut+1)& (0+255),f,b
  3115  002F32                     
  3116                           ; BSR set to: 0
  3117                           ;dht11.c: 51:         if(!timeOut)
  3118  002F32  5166               	movf	readDHT@timeOut& (0+255),w,b
  3119  002F34  1167               	iorwf	(readDHT@timeOut+1)& (0+255),w,b
  3120  002F36  A4D8               	btfss	status,2,c
  3121  002F38  EFA0  F017         	goto	u2591
  3122  002F3C  EFA2  F017         	goto	u2590
  3123  002F40                     u2591:
  3124  002F40  EFA4  F017         	goto	l305
  3125  002F44                     u2590:
  3126  002F44  EF87  F017         	goto	l3271
  3127  002F48                     l305:
  3128                           
  3129                           ; BSR set to: 0
  3130                           ;dht11.c: 49:     while(PORTCbits.RC3) {
  3131  002F48  B682               	btfsc	130,3,c	;volatile
  3132  002F4A  EFA9  F017         	goto	u2601
  3133  002F4E  EFAB  F017         	goto	u2600
  3134  002F52                     u2601:
  3135  002F52  EF96  F017         	goto	l3275
  3136  002F56                     u2600:
  3137  002F56                     
  3138                           ; BSR set to: 0
  3139                           ;dht11.c: 55:     humidity_dht11[0] = getByte();
  3140  002F56  ECE6  F019         	call	_getByte	;wreg free
  3141  002F5A  0100               	movlb	0	; () banked
  3142  002F5C  6FC1               	movwf	_humidity_dht11& (0+255),b
  3143                           
  3144                           ;dht11.c: 56:     humidity_dht11[1] = getByte();
  3145  002F5E  ECE6  F019         	call	_getByte	;wreg free
  3146  002F62  0100               	movlb	0	; () banked
  3147  002F64  6FC2               	movwf	(_humidity_dht11+1)& (0+255),b
  3148                           
  3149                           ;dht11.c: 57:     temperature_dht11[0] = getByte();
  3150  002F66  ECE6  F019         	call	_getByte	;wreg free
  3151  002F6A  0100               	movlb	0	; () banked
  3152  002F6C  6FC3               	movwf	_temperature_dht11& (0+255),b
  3153                           
  3154                           ;dht11.c: 58:     temperature_dht11[1] = getByte();
  3155  002F6E  ECE6  F019         	call	_getByte	;wreg free
  3156  002F72  0100               	movlb	0	; () banked
  3157  002F74  6FC4               	movwf	(_temperature_dht11+1)& (0+255),b
  3158                           
  3159                           ;dht11.c: 59:     checkSum = getByte();
  3160  002F76  ECE6  F019         	call	_getByte	;wreg free
  3161  002F7A  0100               	movlb	0	; () banked
  3162  002F7C  6F65               	movwf	readDHT@checkSum& (0+255),b
  3163  002F7E                     
  3164                           ; BSR set to: 0
  3165                           ;dht11.c: 61:     if( (char)( humidity_dht11[0] + humidity_dht11[1] + temperature_dht11[
      +                          0] + temperature_dht11[1] ) != checkSum )
  3166  002F7E  51C2               	movf	(_humidity_dht11+1)& (0+255),w,b
  3167  002F80  25C4               	addwf	(_temperature_dht11+1)& (0+255),w,b
  3168  002F82  25C1               	addwf	_humidity_dht11& (0+255),w,b
  3169  002F84  25C3               	addwf	_temperature_dht11& (0+255),w,b
  3170  002F86  1965               	xorwf	readDHT@checkSum& (0+255),w,b
  3171  002F88  B4D8               	btfsc	status,2,c
  3172  002F8A  EFC9  F017         	goto	u2611
  3173  002F8E  EFCB  F017         	goto	u2610
  3174  002F92                     u2611:
  3175  002F92  EFCD  F017         	goto	l3291
  3176  002F96                     u2610:
  3177  002F96  EF87  F017         	goto	l3271
  3178  002F9A                     l3291:
  3179                           
  3180                           ; BSR set to: 0
  3181                           ;dht11.c: 64:     return 1;
  3182  002F9A  0E01               	movlw	1
  3183  002F9C                     l303:
  3184                           
  3185                           ; BSR set to: 0
  3186  002F9C  0012               	return		;funcret
  3187  002F9E                     __end_of_readDHT:
  3188                           	opt callstack 0
  3189                           
  3190 ;; *************** function _getByte *****************
  3191 ;; Defined at:
  3192 ;;		line 3 in file "dht11.c"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;		None
  3195 ;; Auto vars:     Size  Location     Type
  3196 ;;  timeOut         2    1[BANK0 ] unsigned int 
  3197 ;;  i               1    3[BANK0 ] unsigned char 
  3198 ;;  byteReceived    1    0[BANK0 ] unsigned char 
  3199 ;; Return value:  Size  Location     Type
  3200 ;;                  1    wreg      unsigned char 
  3201 ;; Registers used:
  3202 ;;		wreg, status,2, status,0
  3203 ;; Tracked objects:
  3204 ;;		On entry : 0/0
  3205 ;;		On exit  : 0/0
  3206 ;;		Unchanged: 0/0
  3207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3209 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3211 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3212 ;;Total ram usage:        4 bytes
  3213 ;; Hardware stack levels used:    1
  3214 ;; Hardware stack levels required when called:    5
  3215 ;; This function calls:
  3216 ;;		Nothing
  3217 ;; This function is called by:
  3218 ;;		_readDHT
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           	psect	text18
  3223  0033CC                     __ptext18:
  3224                           	opt callstack 0
  3225  0033CC                     _getByte:
  3226                           	opt callstack 22
  3227  0033CC                     
  3228                           ;dht11.c: 4:     char i;;dht11.c: 5:     char byteReceived = 0;
  3229  0033CC  0E00               	movlw	0
  3230  0033CE  0100               	movlb	0	; () banked
  3231  0033D0  6F60               	movwf	getByte@byteReceived& (0+255),b
  3232                           
  3233                           ;dht11.c: 6:     unsigned int timeOut;;dht11.c: 8:     for(i = 0b1000000; i != 0x00; i =
      +                           i >> 1) {
  3234  0033D2  0E40               	movlw	64
  3235  0033D4  6F63               	movwf	getByte@i& (0+255),b
  3236  0033D6                     l286:
  3237                           
  3238                           ; BSR set to: 0
  3239                           ;dht11.c: 9:         timeOut = 0xFFFF;
  3240  0033D6  6961               	setf	getByte@timeOut& (0+255),b
  3241  0033D8  6962               	setf	(getByte@timeOut+1)& (0+255),b
  3242                           
  3243                           ;dht11.c: 10:         while(!PORTCbits.RC3) {
  3244  0033DA  EFFE  F019         	goto	l288
  3245  0033DE                     l2951:
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;dht11.c: 11:             timeOut--;
  3249  0033DE  0761               	decf	getByte@timeOut& (0+255),f,b
  3250  0033E0  A0D8               	btfss	status,0,c
  3251  0033E2  0762               	decf	(getByte@timeOut+1)& (0+255),f,b
  3252  0033E4                     
  3253                           ; BSR set to: 0
  3254                           ;dht11.c: 12:             if(!timeOut) return 0;
  3255  0033E4  5161               	movf	getByte@timeOut& (0+255),w,b
  3256  0033E6  1162               	iorwf	(getByte@timeOut+1)& (0+255),w,b
  3257  0033E8  A4D8               	btfss	status,2,c
  3258  0033EA  EFF9  F019         	goto	u2011
  3259  0033EE  EFFB  F019         	goto	u2010
  3260  0033F2                     u2011:
  3261  0033F2  EFFE  F019         	goto	l288
  3262  0033F6                     u2010:
  3263  0033F6                     l2955:
  3264                           
  3265                           ; BSR set to: 0
  3266  0033F6  0E00               	movlw	0
  3267  0033F8  EF3A  F01A         	goto	l291
  3268  0033FC                     l288:
  3269                           
  3270                           ; BSR set to: 0
  3271                           ;dht11.c: 10:         while(!PORTCbits.RC3) {
  3272  0033FC  A682               	btfss	130,3,c	;volatile
  3273  0033FE  EF03  F01A         	goto	u2021
  3274  003402  EF05  F01A         	goto	u2020
  3275  003406                     u2021:
  3276  003406  EFEF  F019         	goto	l2951
  3277  00340A                     u2020:
  3278  00340A                     
  3279                           ; BSR set to: 0
  3280                           ;dht11.c: 14:         _delay((unsigned long)((40)*(8000000/4000000.0)));
  3281  00340A  0E1A               	movlw	26
  3282  00340C                     u3837:
  3283  00340C  2EE8               	decfsz	wreg,f,c
  3284  00340E  D7FE               	bra	u3837
  3285  003410  D000               	nop2	
  3286  003412                     
  3287                           ;dht11.c: 15:         if(PORTCbits.RC3) {
  3288  003412  A682               	btfss	130,3,c	;volatile
  3289  003414  EF0E  F01A         	goto	u2031
  3290  003418  EF10  F01A         	goto	u2030
  3291  00341C                     u2031:
  3292  00341C  EF2D  F01A         	goto	l2975
  3293  003420                     u2030:
  3294  003420                     
  3295                           ;dht11.c: 16:             byteReceived = byteReceived | i;
  3296  003420  0100               	movlb	0	; () banked
  3297  003422  5160               	movf	getByte@byteReceived& (0+255),w,b
  3298  003424  1163               	iorwf	getByte@i& (0+255),w,b
  3299  003426  6F60               	movwf	getByte@byteReceived& (0+255),b
  3300  003428                     
  3301                           ; BSR set to: 0
  3302                           ;dht11.c: 17:             timeOut = 0xFFFF;
  3303  003428  6961               	setf	getByte@timeOut& (0+255),b
  3304  00342A  6962               	setf	(getByte@timeOut+1)& (0+255),b
  3305                           
  3306                           ;dht11.c: 18:             while(PORTCbits.RC3) {
  3307  00342C  EF26  F01A         	goto	l294
  3308  003430                     l2967:
  3309                           
  3310                           ; BSR set to: 0
  3311                           ;dht11.c: 19:                 timeOut--;
  3312  003430  0761               	decf	getByte@timeOut& (0+255),f,b
  3313  003432  A0D8               	btfss	status,0,c
  3314  003434  0762               	decf	(getByte@timeOut+1)& (0+255),f,b
  3315  003436                     
  3316                           ; BSR set to: 0
  3317                           ;dht11.c: 20:                 if(!timeOut) return 0;
  3318  003436  5161               	movf	getByte@timeOut& (0+255),w,b
  3319  003438  1162               	iorwf	(getByte@timeOut+1)& (0+255),w,b
  3320  00343A  A4D8               	btfss	status,2,c
  3321  00343C  EF22  F01A         	goto	u2041
  3322  003440  EF24  F01A         	goto	u2040
  3323  003444                     u2041:
  3324  003444  EF26  F01A         	goto	l294
  3325  003448                     u2040:
  3326  003448  EFFB  F019         	goto	l2955
  3327  00344C                     l294:
  3328                           
  3329                           ; BSR set to: 0
  3330                           ;dht11.c: 18:             while(PORTCbits.RC3) {
  3331  00344C  B682               	btfsc	130,3,c	;volatile
  3332  00344E  EF2B  F01A         	goto	u2051
  3333  003452  EF2D  F01A         	goto	u2050
  3334  003456                     u2051:
  3335  003456  EF18  F01A         	goto	l2967
  3336  00345A                     u2050:
  3337  00345A                     l2975:
  3338                           
  3339                           ;dht11.c: 23:     }
  3340  00345A  0100               	movlb	0	; () banked
  3341  00345C  90D8               	bcf	status,0,c
  3342  00345E  3163               	rrcf	getByte@i& (0+255),w,b
  3343  003460  6F63               	movwf	getByte@i& (0+255),b
  3344  003462                     
  3345                           ; BSR set to: 0
  3346  003462  5163               	movf	getByte@i& (0+255),w,b
  3347  003464  A4D8               	btfss	status,2,c
  3348  003466  EF37  F01A         	goto	u2061
  3349  00346A  EF39  F01A         	goto	u2060
  3350  00346E                     u2061:
  3351  00346E  EFEB  F019         	goto	l286
  3352  003472                     u2060:
  3353  003472                     
  3354                           ; BSR set to: 0
  3355                           ;dht11.c: 25:     return byteReceived;
  3356  003472  5160               	movf	getByte@byteReceived& (0+255),w,b
  3357  003474                     l291:
  3358                           
  3359                           ; BSR set to: 0
  3360  003474  0012               	return		;funcret
  3361  003476                     __end_of_getByte:
  3362                           	opt callstack 0
  3363                           
  3364 ;; *************** function ___xxtofl *****************
  3365 ;; Defined at:
  3366 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;  sign            1    wreg     unsigned char 
  3369 ;;  val             4    0[BANK0 ] long 
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;  sign            1    8[BANK0 ] unsigned char 
  3372 ;;  arg             4   10[BANK0 ] unsigned long 
  3373 ;;  exp             1    9[BANK0 ] unsigned char 
  3374 ;; Return value:  Size  Location     Type
  3375 ;;                  4    0[BANK0 ] unsigned char 
  3376 ;; Registers used:
  3377 ;;		wreg, status,2, status,0
  3378 ;; Tracked objects:
  3379 ;;		On entry : 0/0
  3380 ;;		On exit  : 0/0
  3381 ;;		Unchanged: 0/0
  3382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3383 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3384 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3385 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3386 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3387 ;;Total ram usage:       14 bytes
  3388 ;; Hardware stack levels used:    1
  3389 ;; Hardware stack levels required when called:    5
  3390 ;; This function calls:
  3391 ;;		Nothing
  3392 ;; This function is called by:
  3393 ;;		_readTempAndHumid
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397                           	psect	text19
  3398  0024C2                     __ptext19:
  3399                           	opt callstack 0
  3400  0024C2                     ___xxtofl:
  3401                           	opt callstack 23
  3402                           
  3403                           ; BSR set to: 0
  3404                           ;incstack = 0
  3405                           ;___xxtofl@sign stored from wreg
  3406  0024C2  0100               	movlb	0	; () banked
  3407  0024C4  6F68               	movwf	___xxtofl@sign& (0+255),b
  3408  0024C6  0100               	movlb	0	; () banked
  3409  0024C8  5168               	movf	___xxtofl@sign& (0+255),w,b
  3410  0024CA  B4D8               	btfsc	status,2,c
  3411  0024CC  EF6A  F012         	goto	u3071
  3412  0024D0  EF6C  F012         	goto	u3070
  3413  0024D4                     u3071:
  3414  0024D4  EF8E  F012         	goto	l1361
  3415  0024D8                     u3070:
  3416  0024D8                     
  3417                           ; BSR set to: 0
  3418  0024D8  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  3419  0024DA  EF73  F012         	goto	u3080
  3420  0024DE  EF71  F012         	goto	u3081
  3421  0024E2                     u3081:
  3422  0024E2  EF8E  F012         	goto	l1361
  3423  0024E6                     u3080:
  3424  0024E6                     
  3425                           ; BSR set to: 0
  3426  0024E6  C060  F064         	movff	___xxtofl@val,??___xxtofl
  3427  0024EA  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
  3428  0024EE  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
  3429  0024F2  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
  3430  0024F6  1F64               	comf	??___xxtofl& (0+255),f,b
  3431  0024F8  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
  3432  0024FA  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
  3433  0024FC  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
  3434  0024FE  2B64               	incf	??___xxtofl& (0+255),f,b
  3435  002500  0E00               	movlw	0
  3436  002502  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
  3437  002504  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
  3438  002506  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
  3439  002508  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
  3440  00250C  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
  3441  002510  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
  3442  002514  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
  3443  002518  EF96  F012         	goto	l3609
  3444  00251C                     l1361:
  3445                           
  3446                           ; BSR set to: 0
  3447  00251C  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
  3448  002520  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3449  002524  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3450  002528  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3451  00252C                     l3609:
  3452                           
  3453                           ; BSR set to: 0
  3454  00252C  5160               	movf	___xxtofl@val& (0+255),w,b
  3455  00252E  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  3456  002530  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  3457  002532  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  3458  002534  A4D8               	btfss	status,2,c
  3459  002536  EF9F  F012         	goto	u3091
  3460  00253A  EFA1  F012         	goto	u3090
  3461  00253E                     u3091:
  3462  00253E  EFAB  F012         	goto	l3615
  3463  002542                     u3090:
  3464  002542                     
  3465                           ; BSR set to: 0
  3466  002542  0E00               	movlw	0
  3467  002544  6F60               	movwf	?___xxtofl& (0+255),b
  3468  002546  0E00               	movlw	0
  3469  002548  6F61               	movwf	(?___xxtofl+1)& (0+255),b
  3470  00254A  0E00               	movlw	0
  3471  00254C  6F62               	movwf	(?___xxtofl+2)& (0+255),b
  3472  00254E  0E00               	movlw	0
  3473  002550  6F63               	movwf	(?___xxtofl+3)& (0+255),b
  3474  002552  EF3C  F013         	goto	l1364
  3475  002556                     l3615:
  3476                           
  3477                           ; BSR set to: 0
  3478  002556  0E96               	movlw	150
  3479  002558  6F69               	movwf	___xxtofl@exp& (0+255),b
  3480  00255A  EFB5  F012         	goto	l3619
  3481  00255E                     l3617:
  3482                           
  3483                           ; BSR set to: 0
  3484  00255E  2B69               	incf	___xxtofl@exp& (0+255),f,b
  3485  002560  90D8               	bcf	status,0,c
  3486  002562  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  3487  002564  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  3488  002566  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  3489  002568  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  3490  00256A                     l3619:
  3491                           
  3492                           ; BSR set to: 0
  3493  00256A  0E00               	movlw	0
  3494  00256C  156A               	andwf	___xxtofl@arg& (0+255),w,b
  3495  00256E  6F64               	movwf	??___xxtofl& (0+255),b
  3496  002570  0E00               	movlw	0
  3497  002572  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  3498  002574  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  3499  002576  0E00               	movlw	0
  3500  002578  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  3501  00257A  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  3502  00257C  0EFE               	movlw	254
  3503  00257E  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  3504  002580  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  3505  002582  5164               	movf	??___xxtofl& (0+255),w,b
  3506  002584  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  3507  002586  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  3508  002588  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  3509  00258A  A4D8               	btfss	status,2,c
  3510  00258C  EFCA  F012         	goto	u3101
  3511  002590  EFCC  F012         	goto	u3100
  3512  002594                     u3101:
  3513  002594  EFAF  F012         	goto	l3617
  3514  002598                     u3100:
  3515  002598  EFDA  F012         	goto	l1368
  3516  00259C                     l3621:
  3517                           
  3518                           ; BSR set to: 0
  3519  00259C  2B69               	incf	___xxtofl@exp& (0+255),f,b
  3520  00259E                     
  3521                           ; BSR set to: 0
  3522  00259E  0E01               	movlw	1
  3523  0025A0  276A               	addwf	___xxtofl@arg& (0+255),f,b
  3524  0025A2  0E00               	movlw	0
  3525  0025A4  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  3526  0025A6  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  3527  0025A8  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  3528  0025AA                     
  3529                           ; BSR set to: 0
  3530  0025AA  90D8               	bcf	status,0,c
  3531  0025AC  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  3532  0025AE  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  3533  0025B0  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  3534  0025B2  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  3535  0025B4                     l1368:
  3536                           
  3537                           ; BSR set to: 0
  3538  0025B4  0E00               	movlw	0
  3539  0025B6  156A               	andwf	___xxtofl@arg& (0+255),w,b
  3540  0025B8  6F64               	movwf	??___xxtofl& (0+255),b
  3541  0025BA  0E00               	movlw	0
  3542  0025BC  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  3543  0025BE  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  3544  0025C0  0E00               	movlw	0
  3545  0025C2  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  3546  0025C4  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  3547  0025C6  0EFF               	movlw	255
  3548  0025C8  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  3549  0025CA  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  3550  0025CC  5164               	movf	??___xxtofl& (0+255),w,b
  3551  0025CE  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  3552  0025D0  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  3553  0025D2  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  3554  0025D4  A4D8               	btfss	status,2,c
  3555  0025D6  EFEF  F012         	goto	u3111
  3556  0025DA  EFF1  F012         	goto	u3110
  3557  0025DE                     u3111:
  3558  0025DE  EFCE  F012         	goto	l3621
  3559  0025E2                     u3110:
  3560  0025E2  EFF9  F012         	goto	l3629
  3561  0025E6                     l3627:
  3562                           
  3563                           ; BSR set to: 0
  3564  0025E6  0769               	decf	___xxtofl@exp& (0+255),f,b
  3565  0025E8  90D8               	bcf	status,0,c
  3566  0025EA  376A               	rlcf	___xxtofl@arg& (0+255),f,b
  3567  0025EC  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  3568  0025EE  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  3569  0025F0  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  3570  0025F2                     l3629:
  3571                           
  3572                           ; BSR set to: 0
  3573  0025F2  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  3574  0025F4  EFFE  F012         	goto	u3121
  3575  0025F8  EF00  F013         	goto	u3120
  3576  0025FC                     u3121:
  3577  0025FC  EF08  F013         	goto	l1375
  3578  002600                     u3120:
  3579  002600                     
  3580                           ; BSR set to: 0
  3581  002600  0E02               	movlw	2
  3582  002602  6169               	cpfslt	___xxtofl@exp& (0+255),b
  3583  002604  EF06  F013         	goto	u3131
  3584  002608  EF08  F013         	goto	u3130
  3585  00260C                     u3131:
  3586  00260C  EFF3  F012         	goto	l3627
  3587  002610                     u3130:
  3588  002610                     l1375:
  3589                           
  3590                           ; BSR set to: 0
  3591  002610  B169               	btfsc	___xxtofl@exp& (0+255),0,b
  3592  002612  EF0D  F013         	goto	u3141
  3593  002616  EF0F  F013         	goto	u3140
  3594  00261A                     u3141:
  3595  00261A  EF10  F013         	goto	l3635
  3596  00261E                     u3140:
  3597  00261E                     
  3598                           ; BSR set to: 0
  3599  00261E  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  3600  002620                     l3635:
  3601                           
  3602                           ; BSR set to: 0
  3603  002620  90D8               	bcf	status,0,c
  3604  002622  3369               	rrcf	___xxtofl@exp& (0+255),f,b
  3605  002624                     
  3606                           ; BSR set to: 0
  3607  002624  C069  F064         	movff	___xxtofl@exp,??___xxtofl
  3608  002628  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  3609  00262A  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  3610  00262C  6B67               	clrf	(??___xxtofl+3)& (0+255),b
  3611  00262E  C064  F067         	movff	??___xxtofl,??___xxtofl+3
  3612  002632  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  3613  002634  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  3614  002636  6B64               	clrf	??___xxtofl& (0+255),b
  3615  002638  5164               	movf	??___xxtofl& (0+255),w,b
  3616  00263A  136A               	iorwf	___xxtofl@arg& (0+255),f,b
  3617  00263C  5165               	movf	(??___xxtofl+1)& (0+255),w,b
  3618  00263E  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  3619  002640  5166               	movf	(??___xxtofl+2)& (0+255),w,b
  3620  002642  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  3621  002644  5167               	movf	(??___xxtofl+3)& (0+255),w,b
  3622  002646  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  3623  002648                     
  3624                           ; BSR set to: 0
  3625  002648  5168               	movf	___xxtofl@sign& (0+255),w,b
  3626  00264A  B4D8               	btfsc	status,2,c
  3627  00264C  EF2A  F013         	goto	u3151
  3628  002650  EF2C  F013         	goto	u3150
  3629  002654                     u3151:
  3630  002654  EF34  F013         	goto	l3645
  3631  002658                     u3150:
  3632  002658                     
  3633                           ; BSR set to: 0
  3634  002658  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  3635  00265A  EF33  F013         	goto	u3160
  3636  00265E  EF31  F013         	goto	u3161
  3637  002662                     u3161:
  3638  002662  EF34  F013         	goto	l3645
  3639  002666                     u3160:
  3640  002666                     
  3641                           ; BSR set to: 0
  3642  002666  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  3643  002668                     l3645:
  3644                           
  3645                           ; BSR set to: 0
  3646  002668  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
  3647  00266C  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
  3648  002670  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
  3649  002674  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
  3650  002678                     l1364:
  3651                           
  3652                           ; BSR set to: 0
  3653  002678  0012               	return		;funcret
  3654  00267A                     __end_of___xxtofl:
  3655                           	opt callstack 0
  3656                           
  3657 ;; *************** function ___flsub *****************
  3658 ;; Defined at:
  3659 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;  b               4   55[BANK0 ] unsigned char 
  3662 ;;  a               4   59[BANK0 ] unsigned char 
  3663 ;; Auto vars:     Size  Location     Type
  3664 ;;		None
  3665 ;; Return value:  Size  Location     Type
  3666 ;;                  4   55[BANK0 ] unsigned char 
  3667 ;; Registers used:
  3668 ;;		wreg, status,2, status,0, cstack
  3669 ;; Tracked objects:
  3670 ;;		On entry : 0/0
  3671 ;;		On exit  : 0/0
  3672 ;;		Unchanged: 0/0
  3673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3674 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3677 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3678 ;;Total ram usage:        8 bytes
  3679 ;; Hardware stack levels used:    1
  3680 ;; Hardware stack levels required when called:    6
  3681 ;; This function calls:
  3682 ;;		___fladd
  3683 ;; This function is called by:
  3684 ;;		_readTempAndHumid
  3685 ;; This function uses a non-reentrant model
  3686 ;;
  3687                           
  3688                           	psect	text20
  3689  00386A                     __ptext20:
  3690                           	opt callstack 0
  3691  00386A                     ___flsub:
  3692                           	opt callstack 22
  3693  00386A  0E00               	movlw	0
  3694  00386C  0100               	movlb	0	; () banked
  3695  00386E  1B9B               	xorwf	___flsub@a& (0+255),f,b
  3696  003870  0E00               	movlw	0
  3697  003872  1B9C               	xorwf	(___flsub@a+1)& (0+255),f,b
  3698  003874  0E00               	movlw	0
  3699  003876  1B9D               	xorwf	(___flsub@a+2)& (0+255),f,b
  3700  003878  0E80               	movlw	128
  3701  00387A  1B9E               	xorwf	(___flsub@a+3)& (0+255),f,b
  3702  00387C                     
  3703                           ; BSR set to: 0
  3704  00387C  C097  F087         	movff	___flsub@b,___fladd@b
  3705  003880  C098  F088         	movff	___flsub@b+1,___fladd@b+1
  3706  003884  C099  F089         	movff	___flsub@b+2,___fladd@b+2
  3707  003888  C09A  F08A         	movff	___flsub@b+3,___fladd@b+3
  3708  00388C  C09B  F08B         	movff	___flsub@a,___fladd@a
  3709  003890  C09C  F08C         	movff	___flsub@a+1,___fladd@a+1
  3710  003894  C09D  F08D         	movff	___flsub@a+2,___fladd@a+2
  3711  003898  C09E  F08E         	movff	___flsub@a+3,___fladd@a+3
  3712  00389C  ECC5  F00A         	call	___fladd	;wreg free
  3713  0038A0  C087  F097         	movff	?___fladd,?___flsub
  3714  0038A4  C088  F098         	movff	?___fladd+1,?___flsub+1
  3715  0038A8  C089  F099         	movff	?___fladd+2,?___flsub+2
  3716  0038AC  C08A  F09A         	movff	?___fladd+3,?___flsub+3
  3717  0038B0  0012               	return		;funcret
  3718  0038B2                     __end_of___flsub:
  3719                           	opt callstack 0
  3720                           
  3721 ;; *************** function ___fladd *****************
  3722 ;; Defined at:
  3723 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;  b               4   39[BANK0 ] unsigned char 
  3726 ;;  a               4   43[BANK0 ] unsigned char 
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;  grs             1   54[BANK0 ] unsigned char 
  3729 ;;  bexp            1   53[BANK0 ] unsigned char 
  3730 ;;  aexp            1   52[BANK0 ] unsigned char 
  3731 ;;  signs           1   51[BANK0 ] unsigned char 
  3732 ;; Return value:  Size  Location     Type
  3733 ;;                  4   39[BANK0 ] unsigned char 
  3734 ;; Registers used:
  3735 ;;		wreg, status,2, status,0
  3736 ;; Tracked objects:
  3737 ;;		On entry : 0/0
  3738 ;;		On exit  : 0/0
  3739 ;;		Unchanged: 0/0
  3740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3741 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3742 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3743 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3744 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3745 ;;Total ram usage:       16 bytes
  3746 ;; Hardware stack levels used:    1
  3747 ;; Hardware stack levels required when called:    5
  3748 ;; This function calls:
  3749 ;;		Nothing
  3750 ;; This function is called by:
  3751 ;;		_readTempAndHumid
  3752 ;;		___flsub
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           	psect	text21
  3757  00158A                     __ptext21:
  3758                           	opt callstack 0
  3759  00158A                     ___fladd:
  3760                           	opt callstack 22
  3761  00158A  0100               	movlb	0	; () banked
  3762  00158C  518A               	movf	(___fladd@b+3)& (0+255),w,b
  3763  00158E  0B80               	andlw	128
  3764  001590  6F93               	movwf	___fladd@signs& (0+255),b
  3765  001592  518A               	movf	(___fladd@b+3)& (0+255),w,b
  3766  001594  258A               	addwf	(___fladd@b+3)& (0+255),w,b
  3767  001596  6F95               	movwf	___fladd@bexp& (0+255),b
  3768  001598                     
  3769                           ; BSR set to: 0
  3770  001598  AF89               	btfss	(___fladd@b+2)& (0+255),7,b
  3771  00159A  EFD1  F00A         	goto	u2081
  3772  00159E  EFD3  F00A         	goto	u2080
  3773  0015A2                     u2081:
  3774  0015A2  EFD4  F00A         	goto	l3005
  3775  0015A6                     u2080:
  3776  0015A6                     
  3777                           ; BSR set to: 0
  3778  0015A6  8195               	bsf	___fladd@bexp& (0+255),0,b
  3779  0015A8                     l3005:
  3780                           
  3781                           ; BSR set to: 0
  3782  0015A8  5195               	movf	___fladd@bexp& (0+255),w,b
  3783  0015AA  B4D8               	btfsc	status,2,c
  3784  0015AC  EFDA  F00A         	goto	u2091
  3785  0015B0  EFDC  F00A         	goto	u2090
  3786  0015B4                     u2091:
  3787  0015B4  EFF1  F00A         	goto	l3015
  3788  0015B8                     u2090:
  3789  0015B8                     
  3790                           ; BSR set to: 0
  3791  0015B8  2995               	incf	___fladd@bexp& (0+255),w,b
  3792  0015BA  A4D8               	btfss	status,2,c
  3793  0015BC  EFE2  F00A         	goto	u2101
  3794  0015C0  EFE4  F00A         	goto	u2100
  3795  0015C4                     u2101:
  3796  0015C4  EFEC  F00A         	goto	l3011
  3797  0015C8                     u2100:
  3798  0015C8                     
  3799                           ; BSR set to: 0
  3800  0015C8  0E00               	movlw	0
  3801  0015CA  6F87               	movwf	___fladd@b& (0+255),b
  3802  0015CC  0E00               	movlw	0
  3803  0015CE  6F88               	movwf	(___fladd@b+1)& (0+255),b
  3804  0015D0  0E00               	movlw	0
  3805  0015D2  6F89               	movwf	(___fladd@b+2)& (0+255),b
  3806  0015D4  0E00               	movlw	0
  3807  0015D6  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  3808  0015D8                     l3011:
  3809                           
  3810                           ; BSR set to: 0
  3811  0015D8  8F89               	bsf	(___fladd@b+2)& (0+255),7,b
  3812  0015DA                     
  3813                           ; BSR set to: 0
  3814  0015DA  0E00               	movlw	0
  3815  0015DC  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  3816  0015DE  EFF9  F00A         	goto	l3017
  3817  0015E2                     l3015:
  3818                           
  3819                           ; BSR set to: 0
  3820  0015E2  0E00               	movlw	0
  3821  0015E4  6F87               	movwf	___fladd@b& (0+255),b
  3822  0015E6  0E00               	movlw	0
  3823  0015E8  6F88               	movwf	(___fladd@b+1)& (0+255),b
  3824  0015EA  0E00               	movlw	0
  3825  0015EC  6F89               	movwf	(___fladd@b+2)& (0+255),b
  3826  0015EE  0E00               	movlw	0
  3827  0015F0  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  3828  0015F2                     l3017:
  3829                           
  3830                           ; BSR set to: 0
  3831  0015F2  518E               	movf	(___fladd@a+3)& (0+255),w,b
  3832  0015F4  0B80               	andlw	128
  3833  0015F6  6F94               	movwf	___fladd@aexp& (0+255),b
  3834  0015F8                     
  3835                           ; BSR set to: 0
  3836  0015F8  5193               	movf	___fladd@signs& (0+255),w,b
  3837  0015FA  1994               	xorwf	___fladd@aexp& (0+255),w,b
  3838  0015FC  B4D8               	btfsc	status,2,c
  3839  0015FE  EF03  F00B         	goto	u2111
  3840  001602  EF05  F00B         	goto	u2110
  3841  001606                     u2111:
  3842  001606  EF06  F00B         	goto	l3023
  3843  00160A                     u2110:
  3844  00160A                     
  3845                           ; BSR set to: 0
  3846  00160A  8D93               	bsf	___fladd@signs& (0+255),6,b
  3847  00160C                     l3023:
  3848                           
  3849                           ; BSR set to: 0
  3850  00160C  518E               	movf	(___fladd@a+3)& (0+255),w,b
  3851  00160E  258E               	addwf	(___fladd@a+3)& (0+255),w,b
  3852  001610  6F94               	movwf	___fladd@aexp& (0+255),b
  3853  001612                     
  3854                           ; BSR set to: 0
  3855  001612  AF8D               	btfss	(___fladd@a+2)& (0+255),7,b
  3856  001614  EF0E  F00B         	goto	u2121
  3857  001618  EF10  F00B         	goto	u2120
  3858  00161C                     u2121:
  3859  00161C  EF11  F00B         	goto	l3029
  3860  001620                     u2120:
  3861  001620                     
  3862                           ; BSR set to: 0
  3863  001620  8194               	bsf	___fladd@aexp& (0+255),0,b
  3864  001622                     l3029:
  3865                           
  3866                           ; BSR set to: 0
  3867  001622  5194               	movf	___fladd@aexp& (0+255),w,b
  3868  001624  B4D8               	btfsc	status,2,c
  3869  001626  EF17  F00B         	goto	u2131
  3870  00162A  EF19  F00B         	goto	u2130
  3871  00162E                     u2131:
  3872  00162E  EF2E  F00B         	goto	l3039
  3873  001632                     u2130:
  3874  001632                     
  3875                           ; BSR set to: 0
  3876  001632  2994               	incf	___fladd@aexp& (0+255),w,b
  3877  001634  A4D8               	btfss	status,2,c
  3878  001636  EF1F  F00B         	goto	u2141
  3879  00163A  EF21  F00B         	goto	u2140
  3880  00163E                     u2141:
  3881  00163E  EF29  F00B         	goto	l3035
  3882  001642                     u2140:
  3883  001642                     
  3884                           ; BSR set to: 0
  3885  001642  0E00               	movlw	0
  3886  001644  6F8B               	movwf	___fladd@a& (0+255),b
  3887  001646  0E00               	movlw	0
  3888  001648  6F8C               	movwf	(___fladd@a+1)& (0+255),b
  3889  00164A  0E00               	movlw	0
  3890  00164C  6F8D               	movwf	(___fladd@a+2)& (0+255),b
  3891  00164E  0E00               	movlw	0
  3892  001650  6F8E               	movwf	(___fladd@a+3)& (0+255),b
  3893  001652                     l3035:
  3894                           
  3895                           ; BSR set to: 0
  3896  001652  8F8D               	bsf	(___fladd@a+2)& (0+255),7,b
  3897  001654                     
  3898                           ; BSR set to: 0
  3899  001654  0E00               	movlw	0
  3900  001656  6F8E               	movwf	(___fladd@a+3)& (0+255),b
  3901  001658  EF36  F00B         	goto	l3041
  3902  00165C                     l3039:
  3903                           
  3904                           ; BSR set to: 0
  3905  00165C  0E00               	movlw	0
  3906  00165E  6F8B               	movwf	___fladd@a& (0+255),b
  3907  001660  0E00               	movlw	0
  3908  001662  6F8C               	movwf	(___fladd@a+1)& (0+255),b
  3909  001664  0E00               	movlw	0
  3910  001666  6F8D               	movwf	(___fladd@a+2)& (0+255),b
  3911  001668  0E00               	movlw	0
  3912  00166A  6F8E               	movwf	(___fladd@a+3)& (0+255),b
  3913  00166C                     l3041:
  3914                           
  3915                           ; BSR set to: 0
  3916  00166C  5195               	movf	___fladd@bexp& (0+255),w,b
  3917  00166E  5D94               	subwf	___fladd@aexp& (0+255),w,b
  3918  001670  B0D8               	btfsc	status,0,c
  3919  001672  EF3D  F00B         	goto	u2151
  3920  001676  EF3F  F00B         	goto	u2150
  3921  00167A                     u2151:
  3922  00167A  EF66  F00B         	goto	l3077
  3923  00167E                     u2150:
  3924  00167E                     
  3925                           ; BSR set to: 0
  3926  00167E  AD93               	btfss	___fladd@signs& (0+255),6,b
  3927  001680  EF44  F00B         	goto	u2161
  3928  001684  EF46  F00B         	goto	u2160
  3929  001688                     u2161:
  3930  001688  EF48  F00B         	goto	l3047
  3931  00168C                     u2160:
  3932  00168C                     
  3933                           ; BSR set to: 0
  3934  00168C  0E80               	movlw	128
  3935  00168E  1B93               	xorwf	___fladd@signs& (0+255),f,b
  3936  001690                     l3047:
  3937                           
  3938                           ; BSR set to: 0
  3939  001690  C095  F096         	movff	___fladd@bexp,___fladd@grs
  3940  001694                     
  3941                           ; BSR set to: 0
  3942  001694  C094  F095         	movff	___fladd@aexp,___fladd@bexp
  3943  001698                     
  3944                           ; BSR set to: 0
  3945  001698  C096  F094         	movff	___fladd@grs,___fladd@aexp
  3946  00169C                     
  3947                           ; BSR set to: 0
  3948  00169C  C087  F096         	movff	___fladd@b,___fladd@grs
  3949  0016A0                     
  3950                           ; BSR set to: 0
  3951  0016A0  C08B  F087         	movff	___fladd@a,___fladd@b
  3952  0016A4                     
  3953                           ; BSR set to: 0
  3954  0016A4  C096  F08B         	movff	___fladd@grs,___fladd@a
  3955  0016A8                     
  3956                           ; BSR set to: 0
  3957  0016A8  C088  F096         	movff	___fladd@b+1,___fladd@grs
  3958  0016AC                     
  3959                           ; BSR set to: 0
  3960  0016AC  C08C  F088         	movff	___fladd@a+1,___fladd@b+1
  3961  0016B0                     
  3962                           ; BSR set to: 0
  3963  0016B0  C096  F08C         	movff	___fladd@grs,___fladd@a+1
  3964  0016B4                     
  3965                           ; BSR set to: 0
  3966  0016B4  C089  F096         	movff	___fladd@b+2,___fladd@grs
  3967  0016B8                     
  3968                           ; BSR set to: 0
  3969  0016B8  C08D  F089         	movff	___fladd@a+2,___fladd@b+2
  3970  0016BC                     
  3971                           ; BSR set to: 0
  3972  0016BC  C096  F08D         	movff	___fladd@grs,___fladd@a+2
  3973  0016C0                     
  3974                           ; BSR set to: 0
  3975  0016C0  C08A  F096         	movff	___fladd@b+3,___fladd@grs
  3976  0016C4                     
  3977                           ; BSR set to: 0
  3978  0016C4  C08E  F08A         	movff	___fladd@a+3,___fladd@b+3
  3979  0016C8                     
  3980                           ; BSR set to: 0
  3981  0016C8  C096  F08E         	movff	___fladd@grs,___fladd@a+3
  3982  0016CC                     l3077:
  3983                           
  3984                           ; BSR set to: 0
  3985  0016CC  0E00               	movlw	0
  3986  0016CE  6F96               	movwf	___fladd@grs& (0+255),b
  3987  0016D0                     
  3988                           ; BSR set to: 0
  3989  0016D0  5195               	movf	___fladd@bexp& (0+255),w,b
  3990  0016D2  C094  F08F         	movff	___fladd@aexp,??___fladd
  3991  0016D6  6B90               	clrf	(??___fladd+1)& (0+255),b
  3992  0016D8  5F8F               	subwf	??___fladd& (0+255),f,b
  3993  0016DA  0E00               	movlw	0
  3994  0016DC  5B90               	subwfb	(??___fladd+1)& (0+255),f,b
  3995  0016DE  BF90               	btfsc	(??___fladd+1)& (0+255),7,b
  3996  0016E0  EF7B  F00B         	goto	u2171
  3997  0016E4  5190               	movf	(??___fladd+1)& (0+255),w,b
  3998  0016E6  E109               	bnz	u2170
  3999  0016E8  0E1A               	movlw	26
  4000  0016EA  5D8F               	subwf	??___fladd& (0+255),w,b
  4001  0016EC  A0D8               	btfss	status,0,c
  4002  0016EE  EF7B  F00B         	goto	u2171
  4003  0016F2  EF7D  F00B         	goto	u2170
  4004  0016F6                     u2171:
  4005  0016F6  EFB4  F00B         	goto	l1235
  4006  0016FA                     u2170:
  4007  0016FA                     
  4008                           ; BSR set to: 0
  4009  0016FA  5187               	movf	___fladd@b& (0+255),w,b
  4010  0016FC  1188               	iorwf	(___fladd@b+1)& (0+255),w,b
  4011  0016FE  1189               	iorwf	(___fladd@b+2)& (0+255),w,b
  4012  001700  118A               	iorwf	(___fladd@b+3)& (0+255),w,b
  4013  001702  A4D8               	btfss	status,2,c
  4014  001704  EF86  F00B         	goto	u2181
  4015  001708  EF89  F00B         	goto	u2180
  4016  00170C                     u2181:
  4017  00170C  0E01               	movlw	1
  4018  00170E  EF8A  F00B         	goto	u2190
  4019  001712                     u2180:
  4020  001712  0E00               	movlw	0
  4021  001714                     u2190:
  4022  001714  6F96               	movwf	___fladd@grs& (0+255),b
  4023  001716                     
  4024                           ; BSR set to: 0
  4025  001716  0E00               	movlw	0
  4026  001718  6F87               	movwf	___fladd@b& (0+255),b
  4027  00171A  0E00               	movlw	0
  4028  00171C  6F88               	movwf	(___fladd@b+1)& (0+255),b
  4029  00171E  0E00               	movlw	0
  4030  001720  6F89               	movwf	(___fladd@b+2)& (0+255),b
  4031  001722  0E00               	movlw	0
  4032  001724  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  4033  001726                     
  4034                           ; BSR set to: 0
  4035  001726  C094  F095         	movff	___fladd@aexp,___fladd@bexp
  4036  00172A  EFBD  F00B         	goto	l1234
  4037  00172E                     l1236:
  4038                           
  4039                           ; BSR set to: 0
  4040  00172E  A196               	btfss	___fladd@grs& (0+255),0,b
  4041  001730  EF9C  F00B         	goto	u2201
  4042  001734  EF9E  F00B         	goto	u2200
  4043  001738                     u2201:
  4044  001738  EFA4  F00B         	goto	l3089
  4045  00173C                     u2200:
  4046  00173C                     
  4047                           ; BSR set to: 0
  4048  00173C  90D8               	bcf	status,0,c
  4049  00173E  3196               	rrcf	___fladd@grs& (0+255),w,b
  4050  001740  0901               	iorlw	1
  4051  001742  6F96               	movwf	___fladd@grs& (0+255),b
  4052  001744  EFA6  F00B         	goto	l3091
  4053  001748                     l3089:
  4054                           
  4055                           ; BSR set to: 0
  4056  001748  90D8               	bcf	status,0,c
  4057  00174A  3396               	rrcf	___fladd@grs& (0+255),f,b
  4058  00174C                     l3091:
  4059                           
  4060                           ; BSR set to: 0
  4061  00174C  A187               	btfss	___fladd@b& (0+255),0,b
  4062  00174E  EFAB  F00B         	goto	u2211
  4063  001752  EFAD  F00B         	goto	u2210
  4064  001756                     u2211:
  4065  001756  EFAE  F00B         	goto	l3095
  4066  00175A                     u2210:
  4067  00175A                     
  4068                           ; BSR set to: 0
  4069  00175A  8F96               	bsf	___fladd@grs& (0+255),7,b
  4070  00175C                     l3095:
  4071                           
  4072                           ; BSR set to: 0
  4073  00175C  358A               	rlcf	(___fladd@b+3)& (0+255),w,b
  4074  00175E  338A               	rrcf	(___fladd@b+3)& (0+255),f,b
  4075  001760  3389               	rrcf	(___fladd@b+2)& (0+255),f,b
  4076  001762  3388               	rrcf	(___fladd@b+1)& (0+255),f,b
  4077  001764  3387               	rrcf	___fladd@b& (0+255),f,b
  4078  001766                     
  4079                           ; BSR set to: 0
  4080  001766  2B95               	incf	___fladd@bexp& (0+255),f,b
  4081  001768                     l1235:
  4082                           
  4083                           ; BSR set to: 0
  4084  001768  5194               	movf	___fladd@aexp& (0+255),w,b
  4085  00176A  5D95               	subwf	___fladd@bexp& (0+255),w,b
  4086  00176C  A0D8               	btfss	status,0,c
  4087  00176E  EFBB  F00B         	goto	u2221
  4088  001772  EFBD  F00B         	goto	u2220
  4089  001776                     u2221:
  4090  001776  EF97  F00B         	goto	l1236
  4091  00177A                     u2220:
  4092  00177A                     l1234:
  4093                           
  4094                           ; BSR set to: 0
  4095  00177A  BD93               	btfsc	___fladd@signs& (0+255),6,b
  4096  00177C  EFC2  F00B         	goto	u2231
  4097  001780  EFC4  F00B         	goto	u2230
  4098  001784                     u2231:
  4099  001784  EF04  F00C         	goto	l3123
  4100  001788                     u2230:
  4101  001788                     
  4102                           ; BSR set to: 0
  4103  001788  5195               	movf	___fladd@bexp& (0+255),w,b
  4104  00178A  A4D8               	btfss	status,2,c
  4105  00178C  EFCA  F00B         	goto	u2241
  4106  001790  EFCC  F00B         	goto	u2240
  4107  001794                     u2241:
  4108  001794  EFD6  F00B         	goto	l3105
  4109  001798                     u2240:
  4110  001798                     
  4111                           ; BSR set to: 0
  4112  001798  0E00               	movlw	0
  4113  00179A  6F87               	movwf	?___fladd& (0+255),b
  4114  00179C  0E00               	movlw	0
  4115  00179E  6F88               	movwf	(?___fladd+1)& (0+255),b
  4116  0017A0  0E00               	movlw	0
  4117  0017A2  6F89               	movwf	(?___fladd+2)& (0+255),b
  4118  0017A4  0E00               	movlw	0
  4119  0017A6  6F8A               	movwf	(?___fladd+3)& (0+255),b
  4120  0017A8  EF25  F00D         	goto	l1243
  4121  0017AC                     l3105:
  4122                           
  4123                           ; BSR set to: 0
  4124  0017AC  518B               	movf	___fladd@a& (0+255),w,b
  4125  0017AE  2787               	addwf	___fladd@b& (0+255),f,b
  4126  0017B0  518C               	movf	(___fladd@a+1)& (0+255),w,b
  4127  0017B2  2388               	addwfc	(___fladd@b+1)& (0+255),f,b
  4128  0017B4  518D               	movf	(___fladd@a+2)& (0+255),w,b
  4129  0017B6  2389               	addwfc	(___fladd@b+2)& (0+255),f,b
  4130  0017B8  518E               	movf	(___fladd@a+3)& (0+255),w,b
  4131  0017BA  238A               	addwfc	(___fladd@b+3)& (0+255),f,b
  4132  0017BC                     
  4133                           ; BSR set to: 0
  4134  0017BC  A18A               	btfss	(___fladd@b+3)& (0+255),0,b
  4135  0017BE  EFE3  F00B         	goto	u2251
  4136  0017C2  EFE5  F00B         	goto	u2250
  4137  0017C6                     u2251:
  4138  0017C6  EF91  F00C         	goto	l3159
  4139  0017CA                     u2250:
  4140  0017CA                     
  4141                           ; BSR set to: 0
  4142  0017CA  A196               	btfss	___fladd@grs& (0+255),0,b
  4143  0017CC  EFEA  F00B         	goto	u2261
  4144  0017D0  EFEC  F00B         	goto	u2260
  4145  0017D4                     u2261:
  4146  0017D4  EFF2  F00B         	goto	l3113
  4147  0017D8                     u2260:
  4148  0017D8                     
  4149                           ; BSR set to: 0
  4150  0017D8  90D8               	bcf	status,0,c
  4151  0017DA  3196               	rrcf	___fladd@grs& (0+255),w,b
  4152  0017DC  0901               	iorlw	1
  4153  0017DE  6F96               	movwf	___fladd@grs& (0+255),b
  4154  0017E0  EFF4  F00B         	goto	l3115
  4155  0017E4                     l3113:
  4156                           
  4157                           ; BSR set to: 0
  4158  0017E4  90D8               	bcf	status,0,c
  4159  0017E6  3396               	rrcf	___fladd@grs& (0+255),f,b
  4160  0017E8                     l3115:
  4161                           
  4162                           ; BSR set to: 0
  4163  0017E8  A187               	btfss	___fladd@b& (0+255),0,b
  4164  0017EA  EFF9  F00B         	goto	u2271
  4165  0017EE  EFFB  F00B         	goto	u2270
  4166  0017F2                     u2271:
  4167  0017F2  EFFC  F00B         	goto	l3119
  4168  0017F6                     u2270:
  4169  0017F6                     
  4170                           ; BSR set to: 0
  4171  0017F6  8F96               	bsf	___fladd@grs& (0+255),7,b
  4172  0017F8                     l3119:
  4173                           
  4174                           ; BSR set to: 0
  4175  0017F8  358A               	rlcf	(___fladd@b+3)& (0+255),w,b
  4176  0017FA  338A               	rrcf	(___fladd@b+3)& (0+255),f,b
  4177  0017FC  3389               	rrcf	(___fladd@b+2)& (0+255),f,b
  4178  0017FE  3388               	rrcf	(___fladd@b+1)& (0+255),f,b
  4179  001800  3387               	rrcf	___fladd@b& (0+255),f,b
  4180  001802                     
  4181                           ; BSR set to: 0
  4182  001802  2B95               	incf	___fladd@bexp& (0+255),f,b
  4183  001804  EF91  F00C         	goto	l3159
  4184  001808                     l3123:
  4185                           
  4186                           ; BSR set to: 0
  4187  001808  518B               	movf	___fladd@a& (0+255),w,b
  4188  00180A  5D87               	subwf	___fladd@b& (0+255),w,b
  4189  00180C  518C               	movf	(___fladd@a+1)& (0+255),w,b
  4190  00180E  5988               	subwfb	(___fladd@b+1)& (0+255),w,b
  4191  001810  518D               	movf	(___fladd@a+2)& (0+255),w,b
  4192  001812  5989               	subwfb	(___fladd@b+2)& (0+255),w,b
  4193  001814  518A               	movf	(___fladd@b+3)& (0+255),w,b
  4194  001816  0A80               	xorlw	128
  4195  001818  6F8F               	movwf	??___fladd& (0+255),b
  4196  00181A  518E               	movf	(___fladd@a+3)& (0+255),w,b
  4197  00181C  0A80               	xorlw	128
  4198  00181E  598F               	subwfb	??___fladd& (0+255),w,b
  4199  001820  B0D8               	btfsc	status,0,c
  4200  001822  EF15  F00C         	goto	u2281
  4201  001826  EF17  F00C         	goto	u2280
  4202  00182A                     u2281:
  4203  00182A  EF42  F00C         	goto	l3133
  4204  00182E                     u2280:
  4205  00182E                     
  4206                           ; BSR set to: 0
  4207  00182E  5187               	movf	___fladd@b& (0+255),w,b
  4208  001830  5D8B               	subwf	___fladd@a& (0+255),w,b
  4209  001832  6F8F               	movwf	??___fladd& (0+255),b
  4210  001834  5188               	movf	(___fladd@b+1)& (0+255),w,b
  4211  001836  598C               	subwfb	(___fladd@a+1)& (0+255),w,b
  4212  001838  6F90               	movwf	(??___fladd+1)& (0+255),b
  4213  00183A  5189               	movf	(___fladd@b+2)& (0+255),w,b
  4214  00183C  598D               	subwfb	(___fladd@a+2)& (0+255),w,b
  4215  00183E  6F91               	movwf	(??___fladd+2)& (0+255),b
  4216  001840  518A               	movf	(___fladd@b+3)& (0+255),w,b
  4217  001842  598E               	subwfb	(___fladd@a+3)& (0+255),w,b
  4218  001844  6F92               	movwf	(??___fladd+3)& (0+255),b
  4219  001846  0EFF               	movlw	255
  4220  001848  258F               	addwf	??___fladd& (0+255),w,b
  4221  00184A  6F87               	movwf	___fladd@b& (0+255),b
  4222  00184C  0EFF               	movlw	255
  4223  00184E  2190               	addwfc	(??___fladd+1)& (0+255),w,b
  4224  001850  6F88               	movwf	(___fladd@b+1)& (0+255),b
  4225  001852  0EFF               	movlw	255
  4226  001854  2191               	addwfc	(??___fladd+2)& (0+255),w,b
  4227  001856  6F89               	movwf	(___fladd@b+2)& (0+255),b
  4228  001858  0EFF               	movlw	255
  4229  00185A  2192               	addwfc	(??___fladd+3)& (0+255),w,b
  4230  00185C  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  4231  00185E  0E80               	movlw	128
  4232  001860  1B93               	xorwf	___fladd@signs& (0+255),f,b
  4233  001862                     
  4234                           ; BSR set to: 0
  4235  001862  6D96               	negf	___fladd@grs& (0+255),b
  4236  001864                     
  4237                           ; BSR set to: 0
  4238  001864  5196               	movf	___fladd@grs& (0+255),w,b
  4239  001866  A4D8               	btfss	status,2,c
  4240  001868  EF38  F00C         	goto	u2291
  4241  00186C  EF3A  F00C         	goto	u2290
  4242  001870                     u2291:
  4243  001870  EF4A  F00C         	goto	l1251
  4244  001874                     u2290:
  4245  001874                     
  4246                           ; BSR set to: 0
  4247  001874  0E01               	movlw	1
  4248  001876  2787               	addwf	___fladd@b& (0+255),f,b
  4249  001878  0E00               	movlw	0
  4250  00187A  2388               	addwfc	(___fladd@b+1)& (0+255),f,b
  4251  00187C  2389               	addwfc	(___fladd@b+2)& (0+255),f,b
  4252  00187E  238A               	addwfc	(___fladd@b+3)& (0+255),f,b
  4253  001880  EF4A  F00C         	goto	l1251
  4254  001884                     l3133:
  4255                           
  4256                           ; BSR set to: 0
  4257  001884  518B               	movf	___fladd@a& (0+255),w,b
  4258  001886  5F87               	subwf	___fladd@b& (0+255),f,b
  4259  001888  518C               	movf	(___fladd@a+1)& (0+255),w,b
  4260  00188A  5B88               	subwfb	(___fladd@b+1)& (0+255),f,b
  4261  00188C  518D               	movf	(___fladd@a+2)& (0+255),w,b
  4262  00188E  5B89               	subwfb	(___fladd@b+2)& (0+255),f,b
  4263  001890  518E               	movf	(___fladd@a+3)& (0+255),w,b
  4264  001892  5B8A               	subwfb	(___fladd@b+3)& (0+255),f,b
  4265  001894                     l1251:
  4266                           
  4267                           ; BSR set to: 0
  4268  001894  5187               	movf	___fladd@b& (0+255),w,b
  4269  001896  1188               	iorwf	(___fladd@b+1)& (0+255),w,b
  4270  001898  1189               	iorwf	(___fladd@b+2)& (0+255),w,b
  4271  00189A  118A               	iorwf	(___fladd@b+3)& (0+255),w,b
  4272  00189C  A4D8               	btfss	status,2,c
  4273  00189E  EF53  F00C         	goto	u2301
  4274  0018A2  EF55  F00C         	goto	u2300
  4275  0018A6                     u2301:
  4276  0018A6  EF8A  F00C         	goto	l3157
  4277  0018AA                     u2300:
  4278  0018AA                     
  4279                           ; BSR set to: 0
  4280  0018AA  5196               	movf	___fladd@grs& (0+255),w,b
  4281  0018AC  A4D8               	btfss	status,2,c
  4282  0018AE  EF5B  F00C         	goto	u2311
  4283  0018B2  EF5D  F00C         	goto	u2310
  4284  0018B6                     u2311:
  4285  0018B6  EF8A  F00C         	goto	l3157
  4286  0018BA                     u2310:
  4287  0018BA                     
  4288                           ; BSR set to: 0
  4289  0018BA  0E00               	movlw	0
  4290  0018BC  6F87               	movwf	?___fladd& (0+255),b
  4291  0018BE  0E00               	movlw	0
  4292  0018C0  6F88               	movwf	(?___fladd+1)& (0+255),b
  4293  0018C2  0E00               	movlw	0
  4294  0018C4  6F89               	movwf	(?___fladd+2)& (0+255),b
  4295  0018C6  0E00               	movlw	0
  4296  0018C8  6F8A               	movwf	(?___fladd+3)& (0+255),b
  4297  0018CA  EF25  F00D         	goto	l1243
  4298  0018CE                     l3141:
  4299                           
  4300                           ; BSR set to: 0
  4301  0018CE  90D8               	bcf	status,0,c
  4302  0018D0  3787               	rlcf	___fladd@b& (0+255),f,b
  4303  0018D2  3788               	rlcf	(___fladd@b+1)& (0+255),f,b
  4304  0018D4  3789               	rlcf	(___fladd@b+2)& (0+255),f,b
  4305  0018D6  378A               	rlcf	(___fladd@b+3)& (0+255),f,b
  4306  0018D8                     
  4307                           ; BSR set to: 0
  4308  0018D8  AF96               	btfss	___fladd@grs& (0+255),7,b
  4309  0018DA  EF71  F00C         	goto	u2321
  4310  0018DE  EF73  F00C         	goto	u2320
  4311  0018E2                     u2321:
  4312  0018E2  EF74  F00C         	goto	l3147
  4313  0018E6                     u2320:
  4314  0018E6                     
  4315                           ; BSR set to: 0
  4316  0018E6  8187               	bsf	___fladd@b& (0+255),0,b
  4317  0018E8                     l3147:
  4318                           
  4319                           ; BSR set to: 0
  4320  0018E8  A196               	btfss	___fladd@grs& (0+255),0,b
  4321  0018EA  EF79  F00C         	goto	u2331
  4322  0018EE  EF7B  F00C         	goto	u2330
  4323  0018F2                     u2331:
  4324  0018F2  EF7F  F00C         	goto	l3151
  4325  0018F6                     u2330:
  4326  0018F6                     
  4327                           ; BSR set to: 0
  4328  0018F6  80D8               	bsf	status,0,c
  4329  0018F8  3796               	rlcf	___fladd@grs& (0+255),f,b
  4330  0018FA  EF81  F00C         	goto	l3153
  4331  0018FE                     l3151:
  4332                           
  4333                           ; BSR set to: 0
  4334  0018FE  90D8               	bcf	status,0,c
  4335  001900  3796               	rlcf	___fladd@grs& (0+255),f,b
  4336  001902                     l3153:
  4337                           
  4338                           ; BSR set to: 0
  4339  001902  5195               	movf	___fladd@bexp& (0+255),w,b
  4340  001904  B4D8               	btfsc	status,2,c
  4341  001906  EF87  F00C         	goto	u2341
  4342  00190A  EF89  F00C         	goto	u2340
  4343  00190E                     u2341:
  4344  00190E  EF8A  F00C         	goto	l3157
  4345  001912                     u2340:
  4346  001912                     
  4347                           ; BSR set to: 0
  4348  001912  0795               	decf	___fladd@bexp& (0+255),f,b
  4349  001914                     l3157:
  4350                           
  4351                           ; BSR set to: 0
  4352  001914  AF89               	btfss	(___fladd@b+2)& (0+255),7,b
  4353  001916  EF8F  F00C         	goto	u2351
  4354  00191A  EF91  F00C         	goto	u2350
  4355  00191E                     u2351:
  4356  00191E  EF67  F00C         	goto	l3141
  4357  001922                     u2350:
  4358  001922                     l3159:
  4359                           
  4360                           ; BSR set to: 0
  4361  001922  0E00               	movlw	0
  4362  001924  6F94               	movwf	___fladd@aexp& (0+255),b
  4363  001926                     
  4364                           ; BSR set to: 0
  4365  001926  AF96               	btfss	___fladd@grs& (0+255),7,b
  4366  001928  EF98  F00C         	goto	u2361
  4367  00192C  EF9A  F00C         	goto	u2360
  4368  001930                     u2361:
  4369  001930  EFB2  F00C         	goto	l1260
  4370  001934                     u2360:
  4371  001934                     
  4372                           ; BSR set to: 0
  4373  001934  C096  F08F         	movff	___fladd@grs,??___fladd
  4374  001938  0E7F               	movlw	127
  4375  00193A  178F               	andwf	??___fladd& (0+255),f,b
  4376  00193C  B4D8               	btfsc	status,2,c
  4377  00193E  EFA3  F00C         	goto	u2371
  4378  001942  EFA5  F00C         	goto	u2370
  4379  001946                     u2371:
  4380  001946  EFA9  F00C         	goto	l1261
  4381  00194A                     u2370:
  4382  00194A                     l3165:
  4383                           
  4384                           ; BSR set to: 0
  4385  00194A  0E01               	movlw	1
  4386  00194C  6F94               	movwf	___fladd@aexp& (0+255),b
  4387  00194E  EFB2  F00C         	goto	l1260
  4388  001952                     l1261:
  4389                           
  4390                           ; BSR set to: 0
  4391  001952  A187               	btfss	___fladd@b& (0+255),0,b
  4392  001954  EFAE  F00C         	goto	u2381
  4393  001958  EFB0  F00C         	goto	u2380
  4394  00195C                     u2381:
  4395  00195C  EFB2  F00C         	goto	l1260
  4396  001960                     u2380:
  4397  001960  EFA5  F00C         	goto	l3165
  4398  001964                     l1260:
  4399                           
  4400                           ; BSR set to: 0
  4401  001964  5194               	movf	___fladd@aexp& (0+255),w,b
  4402  001966  B4D8               	btfsc	status,2,c
  4403  001968  EFB8  F00C         	goto	u2391
  4404  00196C  EFBA  F00C         	goto	u2390
  4405  001970                     u2391:
  4406  001970  EFE5  F00C         	goto	l3177
  4407  001974                     u2390:
  4408  001974                     
  4409                           ; BSR set to: 0
  4410  001974  0E01               	movlw	1
  4411  001976  2787               	addwf	___fladd@b& (0+255),f,b
  4412  001978  0E00               	movlw	0
  4413  00197A  2388               	addwfc	(___fladd@b+1)& (0+255),f,b
  4414  00197C  2389               	addwfc	(___fladd@b+2)& (0+255),f,b
  4415  00197E  238A               	addwfc	(___fladd@b+3)& (0+255),f,b
  4416  001980                     
  4417                           ; BSR set to: 0
  4418  001980  A18A               	btfss	(___fladd@b+3)& (0+255),0,b
  4419  001982  EFC5  F00C         	goto	u2401
  4420  001986  EFC7  F00C         	goto	u2400
  4421  00198A                     u2401:
  4422  00198A  EFE5  F00C         	goto	l3177
  4423  00198E                     u2400:
  4424  00198E                     
  4425                           ; BSR set to: 0
  4426  00198E  C087  F08F         	movff	___fladd@b,??___fladd
  4427  001992  C088  F090         	movff	___fladd@b+1,??___fladd+1
  4428  001996  C089  F091         	movff	___fladd@b+2,??___fladd+2
  4429  00199A  C08A  F092         	movff	___fladd@b+3,??___fladd+3
  4430  00199E  3592               	rlcf	(??___fladd+3)& (0+255),w,b
  4431  0019A0  3392               	rrcf	(??___fladd+3)& (0+255),f,b
  4432  0019A2  3391               	rrcf	(??___fladd+2)& (0+255),f,b
  4433  0019A4  3390               	rrcf	(??___fladd+1)& (0+255),f,b
  4434  0019A6  338F               	rrcf	??___fladd& (0+255),f,b
  4435  0019A8  C08F  F087         	movff	??___fladd,___fladd@b
  4436  0019AC  C090  F088         	movff	??___fladd+1,___fladd@b+1
  4437  0019B0  C091  F089         	movff	??___fladd+2,___fladd@b+2
  4438  0019B4  C092  F08A         	movff	??___fladd+3,___fladd@b+3
  4439  0019B8  2995               	incf	___fladd@bexp& (0+255),w,b
  4440  0019BA  B4D8               	btfsc	status,2,c
  4441  0019BC  EFE2  F00C         	goto	u2411
  4442  0019C0  EFE4  F00C         	goto	u2410
  4443  0019C4                     u2411:
  4444  0019C4  EFE5  F00C         	goto	l3177
  4445  0019C8                     u2410:
  4446  0019C8                     
  4447                           ; BSR set to: 0
  4448  0019C8  2B95               	incf	___fladd@bexp& (0+255),f,b
  4449  0019CA                     l3177:
  4450                           
  4451                           ; BSR set to: 0
  4452  0019CA  2995               	incf	___fladd@bexp& (0+255),w,b
  4453  0019CC  B4D8               	btfsc	status,2,c
  4454  0019CE  EFEB  F00C         	goto	u2421
  4455  0019D2  EFED  F00C         	goto	u2420
  4456  0019D6                     u2421:
  4457  0019D6  EFF5  F00C         	goto	l3181
  4458  0019DA                     u2420:
  4459  0019DA                     
  4460                           ; BSR set to: 0
  4461  0019DA  5195               	movf	___fladd@bexp& (0+255),w,b
  4462  0019DC  A4D8               	btfss	status,2,c
  4463  0019DE  EFF3  F00C         	goto	u2431
  4464  0019E2  EFF5  F00C         	goto	u2430
  4465  0019E6                     u2431:
  4466  0019E6  EF07  F00D         	goto	l3185
  4467  0019EA                     u2430:
  4468  0019EA                     l3181:
  4469                           
  4470                           ; BSR set to: 0
  4471  0019EA  0E00               	movlw	0
  4472  0019EC  6F87               	movwf	___fladd@b& (0+255),b
  4473  0019EE  0E00               	movlw	0
  4474  0019F0  6F88               	movwf	(___fladd@b+1)& (0+255),b
  4475  0019F2  0E00               	movlw	0
  4476  0019F4  6F89               	movwf	(___fladd@b+2)& (0+255),b
  4477  0019F6  0E00               	movlw	0
  4478  0019F8  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  4479  0019FA  5195               	movf	___fladd@bexp& (0+255),w,b
  4480  0019FC  A4D8               	btfss	status,2,c
  4481  0019FE  EF03  F00D         	goto	u2441
  4482  001A02  EF05  F00D         	goto	u2440
  4483  001A06                     u2441:
  4484  001A06  EF07  F00D         	goto	l3185
  4485  001A0A                     u2440:
  4486  001A0A                     
  4487                           ; BSR set to: 0
  4488  001A0A  0E00               	movlw	0
  4489  001A0C  6F93               	movwf	___fladd@signs& (0+255),b
  4490  001A0E                     l3185:
  4491                           
  4492                           ; BSR set to: 0
  4493  001A0E  A195               	btfss	___fladd@bexp& (0+255),0,b
  4494  001A10  EF0C  F00D         	goto	u2451
  4495  001A14  EF0E  F00D         	goto	u2450
  4496  001A18                     u2451:
  4497  001A18  EF11  F00D         	goto	l3189
  4498  001A1C                     u2450:
  4499  001A1C                     
  4500                           ; BSR set to: 0
  4501  001A1C  8F89               	bsf	(___fladd@b+2)& (0+255),7,b
  4502  001A1E  EF12  F00D         	goto	l3191
  4503  001A22                     l3189:
  4504                           
  4505                           ; BSR set to: 0
  4506  001A22  9F89               	bcf	(___fladd@b+2)& (0+255),7,b
  4507  001A24                     l3191:
  4508                           
  4509                           ; BSR set to: 0
  4510  001A24  90D8               	bcf	status,0,c
  4511  001A26  3195               	rrcf	___fladd@bexp& (0+255),w,b
  4512  001A28  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  4513  001A2A                     
  4514                           ; BSR set to: 0
  4515  001A2A  AF93               	btfss	___fladd@signs& (0+255),7,b
  4516  001A2C  EF1A  F00D         	goto	u2461
  4517  001A30  EF1C  F00D         	goto	u2460
  4518  001A34                     u2461:
  4519  001A34  EF1D  F00D         	goto	l3197
  4520  001A38                     u2460:
  4521  001A38                     
  4522                           ; BSR set to: 0
  4523  001A38  8F8A               	bsf	(___fladd@b+3)& (0+255),7,b
  4524  001A3A                     l3197:
  4525                           
  4526                           ; BSR set to: 0
  4527  001A3A  C087  F087         	movff	___fladd@b,?___fladd
  4528  001A3E  C088  F088         	movff	___fladd@b+1,?___fladd+1
  4529  001A42  C089  F089         	movff	___fladd@b+2,?___fladd+2
  4530  001A46  C08A  F08A         	movff	___fladd@b+3,?___fladd+3
  4531  001A4A                     l1243:
  4532                           
  4533                           ; BSR set to: 0
  4534  001A4A  0012               	return		;funcret
  4535  001A4C                     __end_of___fladd:
  4536                           	opt callstack 0
  4537                           
  4538 ;; *************** function _printTempAndHumid *****************
  4539 ;; Defined at:
  4540 ;;		line 52 in file "main.c"
  4541 ;; Parameters:    Size  Location     Type
  4542 ;;		None
  4543 ;; Auto vars:     Size  Location     Type
  4544 ;;  humid           2   49[BANK0 ] int 
  4545 ;;  temp            2   47[BANK0 ] int 
  4546 ;; Return value:  Size  Location     Type
  4547 ;;                  1    wreg      void 
  4548 ;; Registers used:
  4549 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4550 ;; Tracked objects:
  4551 ;;		On entry : 0/0
  4552 ;;		On exit  : 0/0
  4553 ;;		Unchanged: 0/0
  4554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4556 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4558 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4559 ;;Total ram usage:       12 bytes
  4560 ;; Hardware stack levels used:    1
  4561 ;; Hardware stack levels required when called:   10
  4562 ;; This function calls:
  4563 ;;		_LCDPrint
  4564 ;;		_LCDPrintChar
  4565 ;;		___awdiv
  4566 ;;		___awmod
  4567 ;;		___fleq
  4568 ;;		___flmul
  4569 ;;		___fltol
  4570 ;; This function is called by:
  4571 ;;		_system_setup
  4572 ;;		_dispatch
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           	psect	text22
  4577  002218                     __ptext22:
  4578                           	opt callstack 0
  4579  002218                     _printTempAndHumid:
  4580                           	opt callstack 19
  4581  002218                     
  4582                           ;main.c: 53:     LCDPrint(1, 0, "T:");
  4583  002218  0E00               	movlw	0
  4584  00221A  0100               	movlb	0	; () banked
  4585  00221C  6F6B               	movwf	LCDPrint@pos& (0+255),b
  4586  00221E  0E46               	movlw	low STR_1
  4587  002220  6F6C               	movwf	LCDPrint@ptr& (0+255),b
  4588  002222  0E10               	movlw	high STR_1
  4589  002224  6F6D               	movwf	(LCDPrint@ptr+1)& (0+255),b
  4590  002226  0E01               	movlw	1
  4591  002228  EC59  F01C         	call	_LCDPrint
  4592                           
  4593                           ;main.c: 54:     LCDPrint(1, 8, "H:");
  4594  00222C  0E08               	movlw	8
  4595  00222E  0100               	movlb	0	; () banked
  4596  002230  6F6B               	movwf	LCDPrint@pos& (0+255),b
  4597  002232  0E43               	movlw	low STR_2
  4598  002234  6F6C               	movwf	LCDPrint@ptr& (0+255),b
  4599  002236  0E10               	movlw	high STR_2
  4600  002238  6F6D               	movwf	(LCDPrint@ptr+1)& (0+255),b
  4601  00223A  0E01               	movlw	1
  4602  00223C  EC59  F01C         	call	_LCDPrint
  4603  002240                     
  4604                           ;main.c: 55:     int temp = (temperature_value == 399) ? 0 : 10 * temperature_value;
  4605  002240  C0CD  F060         	movff	_temperature_value,___fleq@ff1
  4606  002244  C0CE  F061         	movff	_temperature_value+1,___fleq@ff1+1
  4607  002248  C0CF  F062         	movff	_temperature_value+2,___fleq@ff1+2
  4608  00224C  C0D0  F063         	movff	_temperature_value+3,___fleq@ff1+3
  4609  002250  0E00               	movlw	0
  4610  002252  0100               	movlb	0	; () banked
  4611  002254  6F64               	movwf	___fleq@ff2& (0+255),b
  4612  002256  0E80               	movlw	128
  4613  002258  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  4614  00225A  0EC7               	movlw	199
  4615  00225C  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  4616  00225E  0E43               	movlw	67
  4617  002260  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  4618  002262  EC3A  F019         	call	___fleq	;wreg free
  4619  002266  0100               	movlb	0	; () banked
  4620  002268  B0D8               	btfsc	status,0,c
  4621  00226A  EF39  F011         	goto	u3171
  4622  00226E  EF3B  F011         	goto	u3170
  4623  002272                     u3171:
  4624  002272  EF57  F011         	goto	l3659
  4625  002276                     u3170:
  4626  002276                     
  4627                           ; BSR set to: 0
  4628  002276  C0CD  F06E         	movff	_temperature_value,___flmul@b
  4629  00227A  C0CE  F06F         	movff	_temperature_value+1,___flmul@b+1
  4630  00227E  C0CF  F070         	movff	_temperature_value+2,___flmul@b+2
  4631  002282  C0D0  F071         	movff	_temperature_value+3,___flmul@b+3
  4632  002286  0E00               	movlw	0
  4633  002288  6F72               	movwf	___flmul@a& (0+255),b
  4634  00228A  0E00               	movlw	0
  4635  00228C  6F73               	movwf	(___flmul@a+1)& (0+255),b
  4636  00228E  0E20               	movlw	32
  4637  002290  6F74               	movwf	(___flmul@a+2)& (0+255),b
  4638  002292  0E41               	movlw	65
  4639  002294  6F75               	movwf	(___flmul@a+3)& (0+255),b
  4640  002296  EC26  F00D         	call	___flmul	;wreg free
  4641  00229A  C06E  F087         	movff	?___flmul,_printTempAndHumid$104
  4642  00229E  C06F  F088         	movff	?___flmul+1,_printTempAndHumid$104+1
  4643  0022A2  C070  F089         	movff	?___flmul+2,_printTempAndHumid$104+2
  4644  0022A6  C071  F08A         	movff	?___flmul+3,_printTempAndHumid$104+3
  4645  0022AA  EF5F  F011         	goto	l3661
  4646  0022AE                     l3659:
  4647                           
  4648                           ; BSR set to: 0
  4649  0022AE  0E00               	movlw	0
  4650  0022B0  6F87               	movwf	_printTempAndHumid$104& (0+255),b
  4651  0022B2  0E00               	movlw	0
  4652  0022B4  6F88               	movwf	(_printTempAndHumid$104+1)& (0+255),b
  4653  0022B6  0E00               	movlw	0
  4654  0022B8  6F89               	movwf	(_printTempAndHumid$104+2)& (0+255),b
  4655  0022BA  0E00               	movlw	0
  4656  0022BC  6F8A               	movwf	(_printTempAndHumid$104+3)& (0+255),b
  4657  0022BE                     l3661:
  4658  0022BE  C087  F060         	movff	_printTempAndHumid$104,___fltol@f1
  4659  0022C2  C088  F061         	movff	_printTempAndHumid$104+1,___fltol@f1+1
  4660  0022C6  C089  F062         	movff	_printTempAndHumid$104+2,___fltol@f1+2
  4661  0022CA  C08A  F063         	movff	_printTempAndHumid$104+3,___fltol@f1+3
  4662  0022CE  EC6D  F016         	call	___fltol	;wreg free
  4663  0022D2  C060  F08F         	movff	?___fltol,printTempAndHumid@temp
  4664  0022D6  C061  F090         	movff	?___fltol+1,printTempAndHumid@temp+1
  4665  0022DA                     
  4666                           ;main.c: 56:     int humid = (humidity_value == 399) ? 0 : 10 * humidity_value;
  4667  0022DA  C0D1  F060         	movff	_humidity_value,___fleq@ff1
  4668  0022DE  C0D2  F061         	movff	_humidity_value+1,___fleq@ff1+1
  4669  0022E2  C0D3  F062         	movff	_humidity_value+2,___fleq@ff1+2
  4670  0022E6  C0D4  F063         	movff	_humidity_value+3,___fleq@ff1+3
  4671  0022EA  0E00               	movlw	0
  4672  0022EC  0100               	movlb	0	; () banked
  4673  0022EE  6F64               	movwf	___fleq@ff2& (0+255),b
  4674  0022F0  0E80               	movlw	128
  4675  0022F2  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  4676  0022F4  0EC7               	movlw	199
  4677  0022F6  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  4678  0022F8  0E43               	movlw	67
  4679  0022FA  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  4680  0022FC  EC3A  F019         	call	___fleq	;wreg free
  4681  002300  0100               	movlb	0	; () banked
  4682  002302  B0D8               	btfsc	status,0,c
  4683  002304  EF86  F011         	goto	u3181
  4684  002308  EF88  F011         	goto	u3180
  4685  00230C                     u3181:
  4686  00230C  EFA4  F011         	goto	l3667
  4687  002310                     u3180:
  4688  002310                     
  4689                           ; BSR set to: 0
  4690  002310  C0D1  F06E         	movff	_humidity_value,___flmul@b
  4691  002314  C0D2  F06F         	movff	_humidity_value+1,___flmul@b+1
  4692  002318  C0D3  F070         	movff	_humidity_value+2,___flmul@b+2
  4693  00231C  C0D4  F071         	movff	_humidity_value+3,___flmul@b+3
  4694  002320  0E00               	movlw	0
  4695  002322  6F72               	movwf	___flmul@a& (0+255),b
  4696  002324  0E00               	movlw	0
  4697  002326  6F73               	movwf	(___flmul@a+1)& (0+255),b
  4698  002328  0E20               	movlw	32
  4699  00232A  6F74               	movwf	(___flmul@a+2)& (0+255),b
  4700  00232C  0E41               	movlw	65
  4701  00232E  6F75               	movwf	(___flmul@a+3)& (0+255),b
  4702  002330  EC26  F00D         	call	___flmul	;wreg free
  4703  002334  C06E  F08B         	movff	?___flmul,_printTempAndHumid$106
  4704  002338  C06F  F08C         	movff	?___flmul+1,_printTempAndHumid$106+1
  4705  00233C  C070  F08D         	movff	?___flmul+2,_printTempAndHumid$106+2
  4706  002340  C071  F08E         	movff	?___flmul+3,_printTempAndHumid$106+3
  4707  002344  EFAC  F011         	goto	l3669
  4708  002348                     l3667:
  4709                           
  4710                           ; BSR set to: 0
  4711  002348  0E00               	movlw	0
  4712  00234A  6F8B               	movwf	_printTempAndHumid$106& (0+255),b
  4713  00234C  0E00               	movlw	0
  4714  00234E  6F8C               	movwf	(_printTempAndHumid$106+1)& (0+255),b
  4715  002350  0E00               	movlw	0
  4716  002352  6F8D               	movwf	(_printTempAndHumid$106+2)& (0+255),b
  4717  002354  0E00               	movlw	0
  4718  002356  6F8E               	movwf	(_printTempAndHumid$106+3)& (0+255),b
  4719  002358                     l3669:
  4720  002358  C08B  F060         	movff	_printTempAndHumid$106,___fltol@f1
  4721  00235C  C08C  F061         	movff	_printTempAndHumid$106+1,___fltol@f1+1
  4722  002360  C08D  F062         	movff	_printTempAndHumid$106+2,___fltol@f1+2
  4723  002364  C08E  F063         	movff	_printTempAndHumid$106+3,___fltol@f1+3
  4724  002368  EC6D  F016         	call	___fltol	;wreg free
  4725  00236C  C060  F091         	movff	?___fltol,printTempAndHumid@humid
  4726  002370  C061  F092         	movff	?___fltol+1,printTempAndHumid@humid+1
  4727  002374                     
  4728                           ;main.c: 57:     LCDPrintChar(1, 2, temp / 100 + '0');
  4729  002374  0E02               	movlw	2
  4730  002376  0100               	movlb	0	; () banked
  4731  002378  6F6B               	movwf	LCDPrintChar@pos& (0+255),b
  4732  00237A  C08F  F060         	movff	printTempAndHumid@temp,___awdiv@dividend
  4733  00237E  C090  F061         	movff	printTempAndHumid@temp+1,___awdiv@dividend+1
  4734  002382  0E00               	movlw	0
  4735  002384  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4736  002386  0E64               	movlw	100
  4737  002388  6F62               	movwf	___awdiv@divisor& (0+255),b
  4738  00238A  ECCF  F017         	call	___awdiv	;wreg free
  4739  00238E  0100               	movlb	0	; () banked
  4740  002390  5160               	movf	?___awdiv& (0+255),w,b
  4741  002392  0F30               	addlw	48
  4742  002394  6F6C               	movwf	LCDPrintChar@ch& (0+255),b
  4743  002396  0E01               	movlw	1
  4744  002398  EC1C  F01D         	call	_LCDPrintChar
  4745  00239C                     
  4746                           ;main.c: 58:     temp /= 10;
  4747  00239C  C08F  F060         	movff	printTempAndHumid@temp,___awdiv@dividend
  4748  0023A0  C090  F061         	movff	printTempAndHumid@temp+1,___awdiv@dividend+1
  4749  0023A4  0E00               	movlw	0
  4750  0023A6  0100               	movlb	0	; () banked
  4751  0023A8  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4752  0023AA  0E0A               	movlw	10
  4753  0023AC  6F62               	movwf	___awdiv@divisor& (0+255),b
  4754  0023AE  ECCF  F017         	call	___awdiv	;wreg free
  4755  0023B2  C060  F08F         	movff	?___awdiv,printTempAndHumid@temp
  4756  0023B6  C061  F090         	movff	?___awdiv+1,printTempAndHumid@temp+1
  4757  0023BA                     
  4758                           ;main.c: 59:     LCDPrintChar(1, 3, ",");
  4759  0023BA  0E03               	movlw	3
  4760  0023BC  0100               	movlb	0	; () banked
  4761  0023BE  6F6B               	movwf	LCDPrintChar@pos& (0+255),b
  4762  0023C0  0E49               	movlw	low (low STR_3)
  4763  0023C2  6F6C               	movwf	LCDPrintChar@ch& (0+255),b
  4764  0023C4  0E01               	movlw	1
  4765  0023C6  EC1C  F01D         	call	_LCDPrintChar
  4766  0023CA                     
  4767                           ;main.c: 60:     LCDPrintChar(1, 4, temp / 10 + '0');
  4768  0023CA  0E04               	movlw	4
  4769  0023CC  0100               	movlb	0	; () banked
  4770  0023CE  6F6B               	movwf	LCDPrintChar@pos& (0+255),b
  4771  0023D0  C08F  F060         	movff	printTempAndHumid@temp,___awdiv@dividend
  4772  0023D4  C090  F061         	movff	printTempAndHumid@temp+1,___awdiv@dividend+1
  4773  0023D8  0E00               	movlw	0
  4774  0023DA  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4775  0023DC  0E0A               	movlw	10
  4776  0023DE  6F62               	movwf	___awdiv@divisor& (0+255),b
  4777  0023E0  ECCF  F017         	call	___awdiv	;wreg free
  4778  0023E4  0100               	movlb	0	; () banked
  4779  0023E6  5160               	movf	?___awdiv& (0+255),w,b
  4780  0023E8  0F30               	addlw	48
  4781  0023EA  6F6C               	movwf	LCDPrintChar@ch& (0+255),b
  4782  0023EC  0E01               	movlw	1
  4783  0023EE  EC1C  F01D         	call	_LCDPrintChar
  4784  0023F2                     
  4785                           ;main.c: 61:     LCDPrintChar(1, 5, temp % 10 + '0');
  4786  0023F2  0E05               	movlw	5
  4787  0023F4  0100               	movlb	0	; () banked
  4788  0023F6  6F6B               	movwf	LCDPrintChar@pos& (0+255),b
  4789  0023F8  C08F  F060         	movff	printTempAndHumid@temp,___awmod@dividend
  4790  0023FC  C090  F061         	movff	printTempAndHumid@temp+1,___awmod@dividend+1
  4791  002400  0E00               	movlw	0
  4792  002402  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  4793  002404  0E0A               	movlw	10
  4794  002406  6F62               	movwf	___awmod@divisor& (0+255),b
  4795  002408  EC32  F018         	call	___awmod	;wreg free
  4796  00240C  0100               	movlb	0	; () banked
  4797  00240E  5160               	movf	?___awmod& (0+255),w,b
  4798  002410  0F30               	addlw	48
  4799  002412  6F6C               	movwf	LCDPrintChar@ch& (0+255),b
  4800  002414  0E01               	movlw	1
  4801  002416  EC1C  F01D         	call	_LCDPrintChar
  4802  00241A                     
  4803                           ;main.c: 63:     LCDPrintChar(1, 2, humid / 100 + '0');
  4804  00241A  0E02               	movlw	2
  4805  00241C  0100               	movlb	0	; () banked
  4806  00241E  6F6B               	movwf	LCDPrintChar@pos& (0+255),b
  4807  002420  C091  F060         	movff	printTempAndHumid@humid,___awdiv@dividend
  4808  002424  C092  F061         	movff	printTempAndHumid@humid+1,___awdiv@dividend+1
  4809  002428  0E00               	movlw	0
  4810  00242A  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4811  00242C  0E64               	movlw	100
  4812  00242E  6F62               	movwf	___awdiv@divisor& (0+255),b
  4813  002430  ECCF  F017         	call	___awdiv	;wreg free
  4814  002434  0100               	movlb	0	; () banked
  4815  002436  5160               	movf	?___awdiv& (0+255),w,b
  4816  002438  0F30               	addlw	48
  4817  00243A  6F6C               	movwf	LCDPrintChar@ch& (0+255),b
  4818  00243C  0E01               	movlw	1
  4819  00243E  EC1C  F01D         	call	_LCDPrintChar
  4820  002442                     
  4821                           ;main.c: 64:     humid /= 10;
  4822  002442  C091  F060         	movff	printTempAndHumid@humid,___awdiv@dividend
  4823  002446  C092  F061         	movff	printTempAndHumid@humid+1,___awdiv@dividend+1
  4824  00244A  0E00               	movlw	0
  4825  00244C  0100               	movlb	0	; () banked
  4826  00244E  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4827  002450  0E0A               	movlw	10
  4828  002452  6F62               	movwf	___awdiv@divisor& (0+255),b
  4829  002454  ECCF  F017         	call	___awdiv	;wreg free
  4830  002458  C060  F091         	movff	?___awdiv,printTempAndHumid@humid
  4831  00245C  C061  F092         	movff	?___awdiv+1,printTempAndHumid@humid+1
  4832  002460                     
  4833                           ;main.c: 65:     LCDPrintChar(1, 3, ".");
  4834  002460  0E03               	movlw	3
  4835  002462  0100               	movlb	0	; () banked
  4836  002464  6F6B               	movwf	LCDPrintChar@pos& (0+255),b
  4837  002466  0E4B               	movlw	low (low STR_4)
  4838  002468  6F6C               	movwf	LCDPrintChar@ch& (0+255),b
  4839  00246A  0E01               	movlw	1
  4840  00246C  EC1C  F01D         	call	_LCDPrintChar
  4841  002470                     
  4842                           ;main.c: 66:     LCDPrintChar(1, 4, humid / 10 + '0');
  4843  002470  0E04               	movlw	4
  4844  002472  0100               	movlb	0	; () banked
  4845  002474  6F6B               	movwf	LCDPrintChar@pos& (0+255),b
  4846  002476  C091  F060         	movff	printTempAndHumid@humid,___awdiv@dividend
  4847  00247A  C092  F061         	movff	printTempAndHumid@humid+1,___awdiv@dividend+1
  4848  00247E  0E00               	movlw	0
  4849  002480  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4850  002482  0E0A               	movlw	10
  4851  002484  6F62               	movwf	___awdiv@divisor& (0+255),b
  4852  002486  ECCF  F017         	call	___awdiv	;wreg free
  4853  00248A  0100               	movlb	0	; () banked
  4854  00248C  5160               	movf	?___awdiv& (0+255),w,b
  4855  00248E  0F30               	addlw	48
  4856  002490  6F6C               	movwf	LCDPrintChar@ch& (0+255),b
  4857  002492  0E01               	movlw	1
  4858  002494  EC1C  F01D         	call	_LCDPrintChar
  4859  002498                     
  4860                           ;main.c: 67:     LCDPrintChar(1, 5, humid % 10 + '0');
  4861  002498  0E05               	movlw	5
  4862  00249A  0100               	movlb	0	; () banked
  4863  00249C  6F6B               	movwf	LCDPrintChar@pos& (0+255),b
  4864  00249E  C091  F060         	movff	printTempAndHumid@humid,___awmod@dividend
  4865  0024A2  C092  F061         	movff	printTempAndHumid@humid+1,___awmod@dividend+1
  4866  0024A6  0E00               	movlw	0
  4867  0024A8  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  4868  0024AA  0E0A               	movlw	10
  4869  0024AC  6F62               	movwf	___awmod@divisor& (0+255),b
  4870  0024AE  EC32  F018         	call	___awmod	;wreg free
  4871  0024B2  0100               	movlb	0	; () banked
  4872  0024B4  5160               	movf	?___awmod& (0+255),w,b
  4873  0024B6  0F30               	addlw	48
  4874  0024B8  6F6C               	movwf	LCDPrintChar@ch& (0+255),b
  4875  0024BA  0E01               	movlw	1
  4876  0024BC  EC1C  F01D         	call	_LCDPrintChar
  4877  0024C0  0012               	return		;funcret
  4878  0024C2                     __end_of_printTempAndHumid:
  4879                           	opt callstack 0
  4880                           
  4881 ;; *************** function ___flmul *****************
  4882 ;; Defined at:
  4883 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  4884 ;; Parameters:    Size  Location     Type
  4885 ;;  b               4   14[BANK0 ] void 
  4886 ;;  a               4   18[BANK0 ] void 
  4887 ;; Auto vars:     Size  Location     Type
  4888 ;;  prod            4   33[BANK0 ] struct .
  4889 ;;  grs             4   27[BANK0 ] unsigned long 
  4890 ;;  temp            2   37[BANK0 ] struct .
  4891 ;;  bexp            1   32[BANK0 ] unsigned char 
  4892 ;;  aexp            1   31[BANK0 ] unsigned char 
  4893 ;;  sign            1   26[BANK0 ] unsigned char 
  4894 ;; Return value:  Size  Location     Type
  4895 ;;                  4   14[BANK0 ] unsigned char 
  4896 ;; Registers used:
  4897 ;;		wreg, status,2, status,0, prodl, prodh
  4898 ;; Tracked objects:
  4899 ;;		On entry : 0/0
  4900 ;;		On exit  : 0/0
  4901 ;;		Unchanged: 0/0
  4902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4903 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4904 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4905 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4906 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4907 ;;Total ram usage:       25 bytes
  4908 ;; Hardware stack levels used:    1
  4909 ;; Hardware stack levels required when called:    5
  4910 ;; This function calls:
  4911 ;;		Nothing
  4912 ;; This function is called by:
  4913 ;;		_printTempAndHumid
  4914 ;;		_readTempAndHumid
  4915 ;; This function uses a non-reentrant model
  4916 ;;
  4917                           
  4918                           	psect	text23
  4919  001A4C                     __ptext23:
  4920                           	opt callstack 0
  4921  001A4C                     ___flmul:
  4922                           	opt callstack 23
  4923  001A4C  0100               	movlb	0	; () banked
  4924  001A4E  5171               	movf	(___flmul@b+3)& (0+255),w,b
  4925  001A50  0B80               	andlw	128
  4926  001A52  6F7A               	movwf	___flmul@sign& (0+255),b
  4927  001A54  5171               	movf	(___flmul@b+3)& (0+255),w,b
  4928  001A56  2571               	addwf	(___flmul@b+3)& (0+255),w,b
  4929  001A58  6F80               	movwf	___flmul@bexp& (0+255),b
  4930  001A5A                     
  4931                           ; BSR set to: 0
  4932  001A5A  AF70               	btfss	(___flmul@b+2)& (0+255),7,b
  4933  001A5C  EF32  F00D         	goto	u2721
  4934  001A60  EF34  F00D         	goto	u2720
  4935  001A64                     u2721:
  4936  001A64  EF35  F00D         	goto	l3369
  4937  001A68                     u2720:
  4938  001A68                     
  4939                           ; BSR set to: 0
  4940  001A68  8180               	bsf	___flmul@bexp& (0+255),0,b
  4941  001A6A                     l3369:
  4942                           
  4943                           ; BSR set to: 0
  4944  001A6A  5180               	movf	___flmul@bexp& (0+255),w,b
  4945  001A6C  B4D8               	btfsc	status,2,c
  4946  001A6E  EF3B  F00D         	goto	u2731
  4947  001A72  EF3D  F00D         	goto	u2730
  4948  001A76                     u2731:
  4949  001A76  EF50  F00D         	goto	l3377
  4950  001A7A                     u2730:
  4951  001A7A                     
  4952                           ; BSR set to: 0
  4953  001A7A  2980               	incf	___flmul@bexp& (0+255),w,b
  4954  001A7C  A4D8               	btfss	status,2,c
  4955  001A7E  EF43  F00D         	goto	u2741
  4956  001A82  EF45  F00D         	goto	u2740
  4957  001A86                     u2741:
  4958  001A86  EF4D  F00D         	goto	l3375
  4959  001A8A                     u2740:
  4960  001A8A                     
  4961                           ; BSR set to: 0
  4962  001A8A  0E00               	movlw	0
  4963  001A8C  6F6E               	movwf	___flmul@b& (0+255),b
  4964  001A8E  0E00               	movlw	0
  4965  001A90  6F6F               	movwf	(___flmul@b+1)& (0+255),b
  4966  001A92  0E00               	movlw	0
  4967  001A94  6F70               	movwf	(___flmul@b+2)& (0+255),b
  4968  001A96  0E00               	movlw	0
  4969  001A98  6F71               	movwf	(___flmul@b+3)& (0+255),b
  4970  001A9A                     l3375:
  4971                           
  4972                           ; BSR set to: 0
  4973  001A9A  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
  4974  001A9C  EF58  F00D         	goto	l3379
  4975  001AA0                     l3377:
  4976                           
  4977                           ; BSR set to: 0
  4978  001AA0  0E00               	movlw	0
  4979  001AA2  6F6E               	movwf	___flmul@b& (0+255),b
  4980  001AA4  0E00               	movlw	0
  4981  001AA6  6F6F               	movwf	(___flmul@b+1)& (0+255),b
  4982  001AA8  0E00               	movlw	0
  4983  001AAA  6F70               	movwf	(___flmul@b+2)& (0+255),b
  4984  001AAC  0E00               	movlw	0
  4985  001AAE  6F71               	movwf	(___flmul@b+3)& (0+255),b
  4986  001AB0                     l3379:
  4987                           
  4988                           ; BSR set to: 0
  4989  001AB0  5175               	movf	(___flmul@a+3)& (0+255),w,b
  4990  001AB2  0B80               	andlw	128
  4991  001AB4  1B7A               	xorwf	___flmul@sign& (0+255),f,b
  4992  001AB6                     
  4993                           ; BSR set to: 0
  4994  001AB6  5175               	movf	(___flmul@a+3)& (0+255),w,b
  4995  001AB8  2575               	addwf	(___flmul@a+3)& (0+255),w,b
  4996  001ABA  6F7F               	movwf	___flmul@aexp& (0+255),b
  4997  001ABC                     
  4998                           ; BSR set to: 0
  4999  001ABC  AF74               	btfss	(___flmul@a+2)& (0+255),7,b
  5000  001ABE  EF63  F00D         	goto	u2751
  5001  001AC2  EF65  F00D         	goto	u2750
  5002  001AC6                     u2751:
  5003  001AC6  EF66  F00D         	goto	l3387
  5004  001ACA                     u2750:
  5005  001ACA                     
  5006                           ; BSR set to: 0
  5007  001ACA  817F               	bsf	___flmul@aexp& (0+255),0,b
  5008  001ACC                     l3387:
  5009                           
  5010                           ; BSR set to: 0
  5011  001ACC  517F               	movf	___flmul@aexp& (0+255),w,b
  5012  001ACE  B4D8               	btfsc	status,2,c
  5013  001AD0  EF6C  F00D         	goto	u2761
  5014  001AD4  EF6E  F00D         	goto	u2760
  5015  001AD8                     u2761:
  5016  001AD8  EF81  F00D         	goto	l3395
  5017  001ADC                     u2760:
  5018  001ADC                     
  5019                           ; BSR set to: 0
  5020  001ADC  297F               	incf	___flmul@aexp& (0+255),w,b
  5021  001ADE  A4D8               	btfss	status,2,c
  5022  001AE0  EF74  F00D         	goto	u2771
  5023  001AE4  EF76  F00D         	goto	u2770
  5024  001AE8                     u2771:
  5025  001AE8  EF7E  F00D         	goto	l3393
  5026  001AEC                     u2770:
  5027  001AEC                     
  5028                           ; BSR set to: 0
  5029  001AEC  0E00               	movlw	0
  5030  001AEE  6F72               	movwf	___flmul@a& (0+255),b
  5031  001AF0  0E00               	movlw	0
  5032  001AF2  6F73               	movwf	(___flmul@a+1)& (0+255),b
  5033  001AF4  0E00               	movlw	0
  5034  001AF6  6F74               	movwf	(___flmul@a+2)& (0+255),b
  5035  001AF8  0E00               	movlw	0
  5036  001AFA  6F75               	movwf	(___flmul@a+3)& (0+255),b
  5037  001AFC                     l3393:
  5038                           
  5039                           ; BSR set to: 0
  5040  001AFC  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
  5041  001AFE  EF89  F00D         	goto	l1320
  5042  001B02                     l3395:
  5043                           
  5044                           ; BSR set to: 0
  5045  001B02  0E00               	movlw	0
  5046  001B04  6F72               	movwf	___flmul@a& (0+255),b
  5047  001B06  0E00               	movlw	0
  5048  001B08  6F73               	movwf	(___flmul@a+1)& (0+255),b
  5049  001B0A  0E00               	movlw	0
  5050  001B0C  6F74               	movwf	(___flmul@a+2)& (0+255),b
  5051  001B0E  0E00               	movlw	0
  5052  001B10  6F75               	movwf	(___flmul@a+3)& (0+255),b
  5053  001B12                     l1320:
  5054                           
  5055                           ; BSR set to: 0
  5056  001B12  517F               	movf	___flmul@aexp& (0+255),w,b
  5057  001B14  B4D8               	btfsc	status,2,c
  5058  001B16  EF8F  F00D         	goto	u2781
  5059  001B1A  EF91  F00D         	goto	u2780
  5060  001B1E                     u2781:
  5061  001B1E  EF99  F00D         	goto	l3399
  5062  001B22                     u2780:
  5063  001B22                     
  5064                           ; BSR set to: 0
  5065  001B22  5180               	movf	___flmul@bexp& (0+255),w,b
  5066  001B24  A4D8               	btfss	status,2,c
  5067  001B26  EF97  F00D         	goto	u2791
  5068  001B2A  EF99  F00D         	goto	u2790
  5069  001B2E                     u2791:
  5070  001B2E  EFA3  F00D         	goto	l3403
  5071  001B32                     u2790:
  5072  001B32                     l3399:
  5073                           
  5074                           ; BSR set to: 0
  5075  001B32  0E00               	movlw	0
  5076  001B34  6F6E               	movwf	?___flmul& (0+255),b
  5077  001B36  0E00               	movlw	0
  5078  001B38  6F6F               	movwf	(?___flmul+1)& (0+255),b
  5079  001B3A  0E00               	movlw	0
  5080  001B3C  6F70               	movwf	(?___flmul+2)& (0+255),b
  5081  001B3E  0E00               	movlw	0
  5082  001B40  6F71               	movwf	(?___flmul+3)& (0+255),b
  5083  001B42  EF3B  F00F         	goto	l1324
  5084  001B46                     l3403:
  5085                           
  5086                           ; BSR set to: 0
  5087  001B46  5174               	movf	(___flmul@a+2)& (0+255),w,b
  5088  001B48  036E               	mulwf	___flmul@b& (0+255),b
  5089  001B4A  CFF3 F085          	movff	prodl,___flmul@temp
  5090  001B4E  CFF4 F086          	movff	prodh,___flmul@temp+1
  5091  001B52                     
  5092                           ; BSR set to: 0
  5093  001B52  5185               	movf	___flmul@temp& (0+255),w,b
  5094  001B54  6F7B               	movwf	___flmul@grs& (0+255),b
  5095  001B56  6B7C               	clrf	(___flmul@grs+1)& (0+255),b
  5096  001B58  6B7D               	clrf	(___flmul@grs+2)& (0+255),b
  5097  001B5A  6B7E               	clrf	(___flmul@grs+3)& (0+255),b
  5098  001B5C                     
  5099                           ; BSR set to: 0
  5100  001B5C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5101  001B5E  6F81               	movwf	___flmul@prod& (0+255),b
  5102  001B60  6B82               	clrf	(___flmul@prod+1)& (0+255),b
  5103  001B62  6B83               	clrf	(___flmul@prod+2)& (0+255),b
  5104  001B64  6B84               	clrf	(___flmul@prod+3)& (0+255),b
  5105  001B66  5173               	movf	(___flmul@a+1)& (0+255),w,b
  5106  001B68  036F               	mulwf	(___flmul@b+1)& (0+255),b
  5107  001B6A  CFF3 F085          	movff	prodl,___flmul@temp
  5108  001B6E  CFF4 F086          	movff	prodh,___flmul@temp+1
  5109  001B72                     
  5110                           ; BSR set to: 0
  5111  001B72  5185               	movf	___flmul@temp& (0+255),w,b
  5112  001B74  277B               	addwf	___flmul@grs& (0+255),f,b
  5113  001B76  0E00               	movlw	0
  5114  001B78  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5115  001B7A  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5116  001B7C  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5117  001B7E                     
  5118                           ; BSR set to: 0
  5119  001B7E  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5120  001B80  2781               	addwf	___flmul@prod& (0+255),f,b
  5121  001B82  0E00               	movlw	0
  5122  001B84  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5123  001B86  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5124  001B88  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5125  001B8A  5172               	movf	___flmul@a& (0+255),w,b
  5126  001B8C  0370               	mulwf	(___flmul@b+2)& (0+255),b
  5127  001B8E  CFF3 F085          	movff	prodl,___flmul@temp
  5128  001B92  CFF4 F086          	movff	prodh,___flmul@temp+1
  5129  001B96                     
  5130                           ; BSR set to: 0
  5131  001B96  5185               	movf	___flmul@temp& (0+255),w,b
  5132  001B98  277B               	addwf	___flmul@grs& (0+255),f,b
  5133  001B9A  0E00               	movlw	0
  5134  001B9C  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5135  001B9E  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5136  001BA0  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5137  001BA2                     
  5138                           ; BSR set to: 0
  5139  001BA2  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5140  001BA4  2781               	addwf	___flmul@prod& (0+255),f,b
  5141  001BA6  0E00               	movlw	0
  5142  001BA8  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5143  001BAA  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5144  001BAC  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5145  001BAE                     
  5146                           ; BSR set to: 0
  5147  001BAE  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
  5148  001BB2  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
  5149  001BB6  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
  5150  001BBA  6B7B               	clrf	___flmul@grs& (0+255),b
  5151  001BBC                     
  5152                           ; BSR set to: 0
  5153  001BBC  5172               	movf	___flmul@a& (0+255),w,b
  5154  001BBE  036F               	mulwf	(___flmul@b+1)& (0+255),b
  5155  001BC0  CFF3 F085          	movff	prodl,___flmul@temp
  5156  001BC4  CFF4 F086          	movff	prodh,___flmul@temp+1
  5157  001BC8                     
  5158                           ; BSR set to: 0
  5159  001BC8  5185               	movf	___flmul@temp& (0+255),w,b
  5160  001BCA  277B               	addwf	___flmul@grs& (0+255),f,b
  5161  001BCC  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5162  001BCE  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5163  001BD0  0E00               	movlw	0
  5164  001BD2  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5165  001BD4  0E00               	movlw	0
  5166  001BD6  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5167  001BD8                     
  5168                           ; BSR set to: 0
  5169  001BD8  5173               	movf	(___flmul@a+1)& (0+255),w,b
  5170  001BDA  036E               	mulwf	___flmul@b& (0+255),b
  5171  001BDC  CFF3 F085          	movff	prodl,___flmul@temp
  5172  001BE0  CFF4 F086          	movff	prodh,___flmul@temp+1
  5173  001BE4                     
  5174                           ; BSR set to: 0
  5175  001BE4  5185               	movf	___flmul@temp& (0+255),w,b
  5176  001BE6  277B               	addwf	___flmul@grs& (0+255),f,b
  5177  001BE8  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5178  001BEA  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5179  001BEC  0E00               	movlw	0
  5180  001BEE  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5181  001BF0  0E00               	movlw	0
  5182  001BF2  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5183  001BF4                     
  5184                           ; BSR set to: 0
  5185  001BF4  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
  5186  001BF8  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
  5187  001BFC  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
  5188  001C00  6B7B               	clrf	___flmul@grs& (0+255),b
  5189  001C02  5172               	movf	___flmul@a& (0+255),w,b
  5190  001C04  036E               	mulwf	___flmul@b& (0+255),b
  5191  001C06  CFF3 F085          	movff	prodl,___flmul@temp
  5192  001C0A  CFF4 F086          	movff	prodh,___flmul@temp+1
  5193  001C0E                     
  5194                           ; BSR set to: 0
  5195  001C0E  5185               	movf	___flmul@temp& (0+255),w,b
  5196  001C10  277B               	addwf	___flmul@grs& (0+255),f,b
  5197  001C12  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5198  001C14  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5199  001C16  0E00               	movlw	0
  5200  001C18  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5201  001C1A  0E00               	movlw	0
  5202  001C1C  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5203  001C1E                     
  5204                           ; BSR set to: 0
  5205  001C1E  5174               	movf	(___flmul@a+2)& (0+255),w,b
  5206  001C20  036F               	mulwf	(___flmul@b+1)& (0+255),b
  5207  001C22  CFF3 F085          	movff	prodl,___flmul@temp
  5208  001C26  CFF4 F086          	movff	prodh,___flmul@temp+1
  5209  001C2A  5185               	movf	___flmul@temp& (0+255),w,b
  5210  001C2C  2781               	addwf	___flmul@prod& (0+255),f,b
  5211  001C2E  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5212  001C30  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5213  001C32  0E00               	movlw	0
  5214  001C34  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5215  001C36  0E00               	movlw	0
  5216  001C38  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5217  001C3A                     
  5218                           ; BSR set to: 0
  5219  001C3A  5173               	movf	(___flmul@a+1)& (0+255),w,b
  5220  001C3C  0370               	mulwf	(___flmul@b+2)& (0+255),b
  5221  001C3E  CFF3 F085          	movff	prodl,___flmul@temp
  5222  001C42  CFF4 F086          	movff	prodh,___flmul@temp+1
  5223  001C46                     
  5224                           ; BSR set to: 0
  5225  001C46  5185               	movf	___flmul@temp& (0+255),w,b
  5226  001C48  2781               	addwf	___flmul@prod& (0+255),f,b
  5227  001C4A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5228  001C4C  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5229  001C4E  0E00               	movlw	0
  5230  001C50  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5231  001C52  0E00               	movlw	0
  5232  001C54  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5233  001C56  5174               	movf	(___flmul@a+2)& (0+255),w,b
  5234  001C58  0370               	mulwf	(___flmul@b+2)& (0+255),b
  5235  001C5A  CFF3 F085          	movff	prodl,___flmul@temp
  5236  001C5E  CFF4 F086          	movff	prodh,___flmul@temp+1
  5237  001C62                     
  5238                           ; BSR set to: 0
  5239  001C62  5185               	movf	___flmul@temp& (0+255),w,b
  5240  001C64  6F76               	movwf	??___flmul& (0+255),b
  5241  001C66  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5242  001C68  6F77               	movwf	(??___flmul+1)& (0+255),b
  5243  001C6A  6B78               	clrf	(??___flmul+2)& (0+255),b
  5244  001C6C  6B79               	clrf	(??___flmul+3)& (0+255),b
  5245  001C6E  C078  F079         	movff	??___flmul+2,??___flmul+3
  5246  001C72  C077  F078         	movff	??___flmul+1,??___flmul+2
  5247  001C76  C076  F077         	movff	??___flmul,??___flmul+1
  5248  001C7A  6B76               	clrf	??___flmul& (0+255),b
  5249  001C7C  5176               	movf	??___flmul& (0+255),w,b
  5250  001C7E  2781               	addwf	___flmul@prod& (0+255),f,b
  5251  001C80  5177               	movf	(??___flmul+1)& (0+255),w,b
  5252  001C82  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5253  001C84  5178               	movf	(??___flmul+2)& (0+255),w,b
  5254  001C86  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5255  001C88  5179               	movf	(??___flmul+3)& (0+255),w,b
  5256  001C8A  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5257  001C8C                     
  5258                           ; BSR set to: 0
  5259  001C8C  C07B  F076         	movff	___flmul@grs,??___flmul
  5260  001C90  C07C  F077         	movff	___flmul@grs+1,??___flmul+1
  5261  001C94  C07D  F078         	movff	___flmul@grs+2,??___flmul+2
  5262  001C98  C07E  F079         	movff	___flmul@grs+3,??___flmul+3
  5263  001C9C  0E19               	movlw	25
  5264  001C9E  EF56  F00E         	goto	u2800
  5265  001CA2                     u2805:
  5266  001CA2  90D8               	bcf	status,0,c
  5267  001CA4  3379               	rrcf	(??___flmul+3)& (0+255),f,b
  5268  001CA6  3378               	rrcf	(??___flmul+2)& (0+255),f,b
  5269  001CA8  3377               	rrcf	(??___flmul+1)& (0+255),f,b
  5270  001CAA  3376               	rrcf	??___flmul& (0+255),f,b
  5271  001CAC                     u2800:
  5272  001CAC  2EE8               	decfsz	wreg,f,c
  5273  001CAE  EF51  F00E         	goto	u2805
  5274  001CB2  5176               	movf	??___flmul& (0+255),w,b
  5275  001CB4  2781               	addwf	___flmul@prod& (0+255),f,b
  5276  001CB6  5177               	movf	(??___flmul+1)& (0+255),w,b
  5277  001CB8  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5278  001CBA  5178               	movf	(??___flmul+2)& (0+255),w,b
  5279  001CBC  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5280  001CBE  5179               	movf	(??___flmul+3)& (0+255),w,b
  5281  001CC0  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5282  001CC2                     
  5283                           ; BSR set to: 0
  5284  001CC2  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
  5285  001CC6  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
  5286  001CCA  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
  5287  001CCE  6B7B               	clrf	___flmul@grs& (0+255),b
  5288  001CD0                     
  5289                           ; BSR set to: 0
  5290  001CD0  517F               	movf	___flmul@aexp& (0+255),w,b
  5291  001CD2  C080  F076         	movff	___flmul@bexp,??___flmul
  5292  001CD6  6B77               	clrf	(??___flmul+1)& (0+255),b
  5293  001CD8  2776               	addwf	??___flmul& (0+255),f,b
  5294  001CDA  0E00               	movlw	0
  5295  001CDC  2377               	addwfc	(??___flmul+1)& (0+255),f,b
  5296  001CDE  0E82               	movlw	130
  5297  001CE0  2576               	addwf	??___flmul& (0+255),w,b
  5298  001CE2  6F85               	movwf	___flmul@temp& (0+255),b
  5299  001CE4  0EFF               	movlw	255
  5300  001CE6  2177               	addwfc	(??___flmul+1)& (0+255),w,b
  5301  001CE8  6F86               	movwf	(___flmul@temp+1)& (0+255),b
  5302  001CEA  EF8C  F00E         	goto	l3451
  5303  001CEE                     l3445:
  5304                           
  5305                           ; BSR set to: 0
  5306  001CEE  90D8               	bcf	status,0,c
  5307  001CF0  3781               	rlcf	___flmul@prod& (0+255),f,b
  5308  001CF2  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
  5309  001CF4  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
  5310  001CF6  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
  5311  001CF8                     
  5312                           ; BSR set to: 0
  5313  001CF8  AF7E               	btfss	(___flmul@grs+3)& (0+255),7,b
  5314  001CFA  EF81  F00E         	goto	u2811
  5315  001CFE  EF83  F00E         	goto	u2810
  5316  001D02                     u2811:
  5317  001D02  EF84  F00E         	goto	l1327
  5318  001D06                     u2810:
  5319  001D06                     
  5320                           ; BSR set to: 0
  5321  001D06  8181               	bsf	___flmul@prod& (0+255),0,b
  5322  001D08                     l1327:
  5323                           
  5324                           ; BSR set to: 0
  5325  001D08  90D8               	bcf	status,0,c
  5326  001D0A  377B               	rlcf	___flmul@grs& (0+255),f,b
  5327  001D0C  377C               	rlcf	(___flmul@grs+1)& (0+255),f,b
  5328  001D0E  377D               	rlcf	(___flmul@grs+2)& (0+255),f,b
  5329  001D10  377E               	rlcf	(___flmul@grs+3)& (0+255),f,b
  5330  001D12  0785               	decf	___flmul@temp& (0+255),f,b
  5331  001D14  A0D8               	btfss	status,0,c
  5332  001D16  0786               	decf	(___flmul@temp+1)& (0+255),f,b
  5333  001D18                     l3451:
  5334                           
  5335                           ; BSR set to: 0
  5336  001D18  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
  5337  001D1A  EF91  F00E         	goto	u2821
  5338  001D1E  EF93  F00E         	goto	u2820
  5339  001D22                     u2821:
  5340  001D22  EF77  F00E         	goto	l3445
  5341  001D26                     u2820:
  5342  001D26                     
  5343                           ; BSR set to: 0
  5344  001D26  0E00               	movlw	0
  5345  001D28  6F7F               	movwf	___flmul@aexp& (0+255),b
  5346  001D2A                     
  5347                           ; BSR set to: 0
  5348  001D2A  AF7E               	btfss	(___flmul@grs+3)& (0+255),7,b
  5349  001D2C  EF9A  F00E         	goto	u2831
  5350  001D30  EF9C  F00E         	goto	u2830
  5351  001D34                     u2831:
  5352  001D34  EFC0  F00E         	goto	l1329
  5353  001D38                     u2830:
  5354  001D38                     
  5355                           ; BSR set to: 0
  5356  001D38  0EFF               	movlw	255
  5357  001D3A  157B               	andwf	___flmul@grs& (0+255),w,b
  5358  001D3C  6F76               	movwf	??___flmul& (0+255),b
  5359  001D3E  0EFF               	movlw	255
  5360  001D40  157C               	andwf	(___flmul@grs+1)& (0+255),w,b
  5361  001D42  6F77               	movwf	(??___flmul+1)& (0+255),b
  5362  001D44  0EFF               	movlw	255
  5363  001D46  157D               	andwf	(___flmul@grs+2)& (0+255),w,b
  5364  001D48  6F78               	movwf	(??___flmul+2)& (0+255),b
  5365  001D4A  0E7F               	movlw	127
  5366  001D4C  157E               	andwf	(___flmul@grs+3)& (0+255),w,b
  5367  001D4E  6F79               	movwf	(??___flmul+3)& (0+255),b
  5368  001D50  5176               	movf	??___flmul& (0+255),w,b
  5369  001D52  1177               	iorwf	(??___flmul+1)& (0+255),w,b
  5370  001D54  1178               	iorwf	(??___flmul+2)& (0+255),w,b
  5371  001D56  1179               	iorwf	(??___flmul+3)& (0+255),w,b
  5372  001D58  B4D8               	btfsc	status,2,c
  5373  001D5A  EFB1  F00E         	goto	u2841
  5374  001D5E  EFB3  F00E         	goto	u2840
  5375  001D62                     u2841:
  5376  001D62  EFB7  F00E         	goto	l1330
  5377  001D66                     u2840:
  5378  001D66                     l3459:
  5379                           
  5380                           ; BSR set to: 0
  5381  001D66  0E01               	movlw	1
  5382  001D68  6F7F               	movwf	___flmul@aexp& (0+255),b
  5383  001D6A  EFC0  F00E         	goto	l1329
  5384  001D6E                     l1330:
  5385                           
  5386                           ; BSR set to: 0
  5387  001D6E  A181               	btfss	___flmul@prod& (0+255),0,b
  5388  001D70  EFBC  F00E         	goto	u2851
  5389  001D74  EFBE  F00E         	goto	u2850
  5390  001D78                     u2851:
  5391  001D78  EFC0  F00E         	goto	l1329
  5392  001D7C                     u2850:
  5393  001D7C  EFB3  F00E         	goto	l3459
  5394  001D80                     l1329:
  5395                           
  5396                           ; BSR set to: 0
  5397  001D80  517F               	movf	___flmul@aexp& (0+255),w,b
  5398  001D82  B4D8               	btfsc	status,2,c
  5399  001D84  EFC6  F00E         	goto	u2861
  5400  001D88  EFC8  F00E         	goto	u2860
  5401  001D8C                     u2861:
  5402  001D8C  EFEC  F00E         	goto	l3471
  5403  001D90                     u2860:
  5404  001D90                     
  5405                           ; BSR set to: 0
  5406  001D90  0E01               	movlw	1
  5407  001D92  2781               	addwf	___flmul@prod& (0+255),f,b
  5408  001D94  0E00               	movlw	0
  5409  001D96  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5410  001D98  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5411  001D9A  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5412  001D9C                     
  5413                           ; BSR set to: 0
  5414  001D9C  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
  5415  001D9E  EFD3  F00E         	goto	u2871
  5416  001DA2  EFD5  F00E         	goto	u2870
  5417  001DA6                     u2871:
  5418  001DA6  EFEC  F00E         	goto	l3471
  5419  001DAA                     u2870:
  5420  001DAA                     
  5421                           ; BSR set to: 0
  5422  001DAA  C081  F076         	movff	___flmul@prod,??___flmul
  5423  001DAE  C082  F077         	movff	___flmul@prod+1,??___flmul+1
  5424  001DB2  C083  F078         	movff	___flmul@prod+2,??___flmul+2
  5425  001DB6  C084  F079         	movff	___flmul@prod+3,??___flmul+3
  5426  001DBA  3579               	rlcf	(??___flmul+3)& (0+255),w,b
  5427  001DBC  3379               	rrcf	(??___flmul+3)& (0+255),f,b
  5428  001DBE  3378               	rrcf	(??___flmul+2)& (0+255),f,b
  5429  001DC0  3377               	rrcf	(??___flmul+1)& (0+255),f,b
  5430  001DC2  3376               	rrcf	??___flmul& (0+255),f,b
  5431  001DC4  C076  F081         	movff	??___flmul,___flmul@prod
  5432  001DC8  C077  F082         	movff	??___flmul+1,___flmul@prod+1
  5433  001DCC  C078  F083         	movff	??___flmul+2,___flmul@prod+2
  5434  001DD0  C079  F084         	movff	??___flmul+3,___flmul@prod+3
  5435  001DD4                     
  5436                           ; BSR set to: 0
  5437  001DD4  4B85               	infsnz	___flmul@temp& (0+255),f,b
  5438  001DD6  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
  5439  001DD8                     l3471:
  5440                           
  5441                           ; BSR set to: 0
  5442  001DD8  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5443  001DDA  EFF7  F00E         	goto	u2881
  5444  001DDE  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5445  001DE0  E108               	bnz	u2880
  5446  001DE2  2985               	incf	___flmul@temp& (0+255),w,b
  5447  001DE4  A0D8               	btfss	status,0,c
  5448  001DE6  EFF7  F00E         	goto	u2881
  5449  001DEA  EFF9  F00E         	goto	u2880
  5450  001DEE                     u2881:
  5451  001DEE  EF03  F00F         	goto	l3475
  5452  001DF2                     u2880:
  5453  001DF2                     
  5454                           ; BSR set to: 0
  5455  001DF2  0E00               	movlw	0
  5456  001DF4  6F81               	movwf	___flmul@prod& (0+255),b
  5457  001DF6  0E00               	movlw	0
  5458  001DF8  6F82               	movwf	(___flmul@prod+1)& (0+255),b
  5459  001DFA  0E80               	movlw	128
  5460  001DFC  6F83               	movwf	(___flmul@prod+2)& (0+255),b
  5461  001DFE  0E7F               	movlw	127
  5462  001E00  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  5463  001E02  EF31  F00F         	goto	l3487
  5464  001E06                     l3475:
  5465                           
  5466                           ; BSR set to: 0
  5467  001E06  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5468  001E08  EF10  F00F         	goto	u2890
  5469  001E0C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5470  001E0E  E106               	bnz	u2891
  5471  001E10  0585               	decf	___flmul@temp& (0+255),w,b
  5472  001E12  B0D8               	btfsc	status,0,c
  5473  001E14  EF0E  F00F         	goto	u2891
  5474  001E18  EF10  F00F         	goto	u2890
  5475  001E1C                     u2891:
  5476  001E1C  EF1C  F00F         	goto	l1337
  5477  001E20                     u2890:
  5478  001E20                     
  5479                           ; BSR set to: 0
  5480  001E20  0E00               	movlw	0
  5481  001E22  6F81               	movwf	___flmul@prod& (0+255),b
  5482  001E24  0E00               	movlw	0
  5483  001E26  6F82               	movwf	(___flmul@prod+1)& (0+255),b
  5484  001E28  0E00               	movlw	0
  5485  001E2A  6F83               	movwf	(___flmul@prod+2)& (0+255),b
  5486  001E2C  0E00               	movlw	0
  5487  001E2E  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  5488  001E30  0E00               	movlw	0
  5489  001E32  6F7A               	movwf	___flmul@sign& (0+255),b
  5490  001E34  EF31  F00F         	goto	l3487
  5491  001E38                     l1337:
  5492                           
  5493                           ; BSR set to: 0
  5494  001E38  C085  F080         	movff	___flmul@temp,___flmul@bexp
  5495  001E3C                     
  5496                           ; BSR set to: 0
  5497  001E3C  0EFF               	movlw	255
  5498  001E3E  1781               	andwf	___flmul@prod& (0+255),f,b
  5499  001E40  0EFF               	movlw	255
  5500  001E42  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
  5501  001E44  0E7F               	movlw	127
  5502  001E46  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
  5503  001E48  0E00               	movlw	0
  5504  001E4A  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
  5505  001E4C                     
  5506                           ; BSR set to: 0
  5507  001E4C  A180               	btfss	___flmul@bexp& (0+255),0,b
  5508  001E4E  EF2B  F00F         	goto	u2901
  5509  001E52  EF2D  F00F         	goto	u2900
  5510  001E56                     u2901:
  5511  001E56  EF2E  F00F         	goto	l3485
  5512  001E5A                     u2900:
  5513  001E5A                     
  5514                           ; BSR set to: 0
  5515  001E5A  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
  5516  001E5C                     l3485:
  5517                           
  5518                           ; BSR set to: 0
  5519  001E5C  90D8               	bcf	status,0,c
  5520  001E5E  3180               	rrcf	___flmul@bexp& (0+255),w,b
  5521  001E60  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  5522  001E62                     l3487:
  5523                           
  5524                           ; BSR set to: 0
  5525  001E62  517A               	movf	___flmul@sign& (0+255),w,b
  5526  001E64  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
  5527  001E66                     
  5528                           ; BSR set to: 0
  5529  001E66  C081  F06E         	movff	___flmul@prod,?___flmul
  5530  001E6A  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
  5531  001E6E  C083  F070         	movff	___flmul@prod+2,?___flmul+2
  5532  001E72  C084  F071         	movff	___flmul@prod+3,?___flmul+3
  5533  001E76                     l1324:
  5534                           
  5535                           ; BSR set to: 0
  5536  001E76  0012               	return		;funcret
  5537  001E78                     __end_of___flmul:
  5538                           	opt callstack 0
  5539                           
  5540 ;; *************** function ___fleq *****************
  5541 ;; Defined at:
  5542 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;  ff1             4    0[BANK0 ] unsigned char 
  5545 ;;  ff2             4    4[BANK0 ] unsigned char 
  5546 ;; Auto vars:     Size  Location     Type
  5547 ;;		None
  5548 ;; Return value:  Size  Location     Type
  5549 ;;		None               void
  5550 ;; Registers used:
  5551 ;;		wreg, status,2, status,0
  5552 ;; Tracked objects:
  5553 ;;		On entry : 0/0
  5554 ;;		On exit  : 0/0
  5555 ;;		Unchanged: 0/0
  5556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5557 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5559 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5560 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5561 ;;Total ram usage:       12 bytes
  5562 ;; Hardware stack levels used:    1
  5563 ;; Hardware stack levels required when called:    5
  5564 ;; This function calls:
  5565 ;;		Nothing
  5566 ;; This function is called by:
  5567 ;;		_printTempAndHumid
  5568 ;; This function uses a non-reentrant model
  5569 ;;
  5570                           
  5571                           	psect	text24
  5572  003274                     __ptext24:
  5573                           	opt callstack 0
  5574  003274                     ___fleq:
  5575                           	opt callstack 23
  5576  003274  0E00               	movlw	0
  5577  003276  0100               	movlb	0	; () banked
  5578  003278  1560               	andwf	___fleq@ff1& (0+255),w,b
  5579  00327A  6F68               	movwf	??___fleq& (0+255),b
  5580  00327C  0E00               	movlw	0
  5581  00327E  1561               	andwf	(___fleq@ff1+1)& (0+255),w,b
  5582  003280  6F69               	movwf	(??___fleq+1)& (0+255),b
  5583  003282  0E80               	movlw	128
  5584  003284  1562               	andwf	(___fleq@ff1+2)& (0+255),w,b
  5585  003286  6F6A               	movwf	(??___fleq+2)& (0+255),b
  5586  003288  0E7F               	movlw	127
  5587  00328A  1563               	andwf	(___fleq@ff1+3)& (0+255),w,b
  5588  00328C  6F6B               	movwf	(??___fleq+3)& (0+255),b
  5589  00328E  5168               	movf	??___fleq& (0+255),w,b
  5590  003290  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  5591  003292  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  5592  003294  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  5593  003296  A4D8               	btfss	status,2,c
  5594  003298  EF50  F019         	goto	u2971
  5595  00329C  EF52  F019         	goto	u2970
  5596  0032A0                     u2971:
  5597  0032A0  EF5A  F019         	goto	l3547
  5598  0032A4                     u2970:
  5599  0032A4                     
  5600                           ; BSR set to: 0
  5601  0032A4  0E00               	movlw	0
  5602  0032A6  6F60               	movwf	___fleq@ff1& (0+255),b
  5603  0032A8  0E00               	movlw	0
  5604  0032AA  6F61               	movwf	(___fleq@ff1+1)& (0+255),b
  5605  0032AC  0E00               	movlw	0
  5606  0032AE  6F62               	movwf	(___fleq@ff1+2)& (0+255),b
  5607  0032B0  0E00               	movlw	0
  5608  0032B2  6F63               	movwf	(___fleq@ff1+3)& (0+255),b
  5609  0032B4                     l3547:
  5610                           
  5611                           ; BSR set to: 0
  5612  0032B4  0E00               	movlw	0
  5613  0032B6  1564               	andwf	___fleq@ff2& (0+255),w,b
  5614  0032B8  6F68               	movwf	??___fleq& (0+255),b
  5615  0032BA  0E00               	movlw	0
  5616  0032BC  1565               	andwf	(___fleq@ff2+1)& (0+255),w,b
  5617  0032BE  6F69               	movwf	(??___fleq+1)& (0+255),b
  5618  0032C0  0E80               	movlw	128
  5619  0032C2  1566               	andwf	(___fleq@ff2+2)& (0+255),w,b
  5620  0032C4  6F6A               	movwf	(??___fleq+2)& (0+255),b
  5621  0032C6  0E7F               	movlw	127
  5622  0032C8  1567               	andwf	(___fleq@ff2+3)& (0+255),w,b
  5623  0032CA  6F6B               	movwf	(??___fleq+3)& (0+255),b
  5624  0032CC  5168               	movf	??___fleq& (0+255),w,b
  5625  0032CE  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  5626  0032D0  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  5627  0032D2  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  5628  0032D4  A4D8               	btfss	status,2,c
  5629  0032D6  EF6F  F019         	goto	u2981
  5630  0032DA  EF71  F019         	goto	u2980
  5631  0032DE                     u2981:
  5632  0032DE  EF79  F019         	goto	l3551
  5633  0032E2                     u2980:
  5634  0032E2                     
  5635                           ; BSR set to: 0
  5636  0032E2  0E00               	movlw	0
  5637  0032E4  6F64               	movwf	___fleq@ff2& (0+255),b
  5638  0032E6  0E00               	movlw	0
  5639  0032E8  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  5640  0032EA  0E00               	movlw	0
  5641  0032EC  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  5642  0032EE  0E00               	movlw	0
  5643  0032F0  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  5644  0032F2                     l3551:
  5645                           
  5646                           ; BSR set to: 0
  5647  0032F2  5164               	movf	___fleq@ff2& (0+255),w,b
  5648  0032F4  1960               	xorwf	___fleq@ff1& (0+255),w,b
  5649  0032F6  E10F               	bnz	u2990
  5650  0032F8  5165               	movf	(___fleq@ff2+1)& (0+255),w,b
  5651  0032FA  1961               	xorwf	(___fleq@ff1+1)& (0+255),w,b
  5652  0032FC  E10C               	bnz	u2990
  5653  0032FE  5166               	movf	(___fleq@ff2+2)& (0+255),w,b
  5654  003300  1962               	xorwf	(___fleq@ff1+2)& (0+255),w,b
  5655  003302  E109               	bnz	u2990
  5656  003304  5167               	movf	(___fleq@ff2+3)& (0+255),w,b
  5657  003306  1963               	xorwf	(___fleq@ff1+3)& (0+255),w,b
  5658  003308  B4D8               	btfsc	status,2,c
  5659  00330A  EF89  F019         	goto	u2991
  5660  00330E  EF8B  F019         	goto	u2990
  5661  003312                     u2991:
  5662  003312  EF8E  F019         	goto	l3555
  5663  003316                     u2990:
  5664  003316                     
  5665                           ; BSR set to: 0
  5666  003316  90D8               	bcf	status,0,c
  5667  003318  EF8F  F019         	goto	l965
  5668  00331C                     l3555:
  5669                           
  5670                           ; BSR set to: 0
  5671  00331C  80D8               	bsf	status,0,c
  5672  00331E                     l965:
  5673                           
  5674                           ; BSR set to: 0
  5675  00331E  0012               	return		;funcret
  5676  003320                     __end_of___fleq:
  5677                           	opt callstack 0
  5678                           
  5679 ;; *************** function _handleButton *****************
  5680 ;; Defined at:
  5681 ;;		line 38 in file "buttons.c"
  5682 ;; Parameters:    Size  Location     Type
  5683 ;;  data_ptr        2    2[BANK0 ] PTR void 
  5684 ;;		 -> NULL(0), 
  5685 ;; Auto vars:     Size  Location     Type
  5686 ;;  checkRB0        2    8[BANK0 ] int 
  5687 ;;  checkRA5        2    6[BANK0 ] int 
  5688 ;; Return value:  Size  Location     Type
  5689 ;;                  1    wreg      void 
  5690 ;; Registers used:
  5691 ;;		wreg, status,2, status,0, cstack
  5692 ;; Tracked objects:
  5693 ;;		On entry : 0/0
  5694 ;;		On exit  : 0/0
  5695 ;;		Unchanged: 0/0
  5696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5697 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5698 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5699 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5700 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5701 ;;Total ram usage:        8 bytes
  5702 ;; Hardware stack levels used:    1
  5703 ;; Hardware stack levels required when called:    6
  5704 ;; This function calls:
  5705 ;;		_readButtonRA5
  5706 ;;		_readButtonRB0
  5707 ;; This function is called by:
  5708 ;;		_system_setup
  5709 ;;		_dispatch
  5710 ;; This function uses a non-reentrant model
  5711 ;;
  5712                           
  5713                           	psect	text25
  5714  002DE2                     __ptext25:
  5715                           	opt callstack 0
  5716  002DE2                     _handleButton:
  5717                           	opt callstack 23
  5718  002DE2                     
  5719                           ;buttons.c: 39:     int checkRA5 = readButtonRA5();
  5720  002DE2  EC0C  F01C         	call	_readButtonRA5	;wreg free
  5721  002DE6  C060  F066         	movff	?_readButtonRA5,handleButton@checkRA5
  5722  002DEA  C061  F067         	movff	?_readButtonRA5+1,handleButton@checkRA5+1
  5723                           
  5724                           ;buttons.c: 40:     int checkRB0 = readButtonRB0();
  5725  002DEE  ECE3  F01B         	call	_readButtonRB0	;wreg free
  5726  002DF2  C060  F068         	movff	?_readButtonRB0,handleButton@checkRB0
  5727  002DF6  C061  F069         	movff	?_readButtonRB0+1,handleButton@checkRB0+1
  5728                           
  5729                           ;buttons.c: 41:     switch(stateRA5) {
  5730  002DFA  EF1C  F017         	goto	l3879
  5731  002DFE                     l3869:
  5732                           
  5733                           ; BSR set to: 0
  5734                           ;buttons.c: 43:             if(checkRA5 == 2) {
  5735  002DFE  0E02               	movlw	2
  5736  002E00  1966               	xorwf	handleButton@checkRA5& (0+255),w,b
  5737  002E02  1167               	iorwf	(handleButton@checkRA5+1)& (0+255),w,b
  5738  002E04  A4D8               	btfss	status,2,c
  5739  002E06  EF07  F017         	goto	u3391
  5740  002E0A  EF09  F017         	goto	u3390
  5741  002E0E                     u3391:
  5742  002E0E  EF4F  F017         	goto	l3891
  5743  002E12                     u3390:
  5744  002E12                     
  5745                           ; BSR set to: 0
  5746                           ;buttons.c: 44:                 stateRA5 = 1;
  5747  002E12  0E01               	movlw	1
  5748  002E14  6FC6               	movwf	_stateRA5& (0+255),b
  5749                           
  5750                           ;buttons.c: 45:                 RA5_pressed = 1;
  5751  002E16  0E01               	movlw	1
  5752  002E18  6FCC               	movwf	_RA5_pressed& (0+255),b
  5753  002E1A  EF4F  F017         	goto	l3891
  5754  002E1E                     l3873:
  5755                           
  5756                           ; BSR set to: 0
  5757                           ;buttons.c: 49:             if(checkRA5 == 1)
  5758  002E1E  0566               	decf	handleButton@checkRA5& (0+255),w,b
  5759  002E20  1167               	iorwf	(handleButton@checkRA5+1)& (0+255),w,b
  5760  002E22  A4D8               	btfss	status,2,c
  5761  002E24  EF16  F017         	goto	u3401
  5762  002E28  EF18  F017         	goto	u3400
  5763  002E2C                     u3401:
  5764  002E2C  EF4F  F017         	goto	l3891
  5765  002E30                     u3400:
  5766  002E30                     
  5767                           ; BSR set to: 0
  5768                           ;buttons.c: 50:                 stateRA5 = 0;
  5769  002E30  0E00               	movlw	0
  5770  002E32  6FC6               	movwf	_stateRA5& (0+255),b
  5771  002E34  EF4F  F017         	goto	l3891
  5772  002E38                     l3879:
  5773  002E38  0100               	movlb	0	; () banked
  5774  002E3A  51C6               	movf	_stateRA5& (0+255),w,b
  5775  002E3C  6F64               	movwf	??_handleButton& (0+255),b
  5776  002E3E  6B65               	clrf	(??_handleButton+1)& (0+255),b
  5777                           
  5778                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5779                           ; Switch size 1, requested type "simple"
  5780                           ; Number of cases is 1, Range of values is 0 to 0
  5781                           ; switch strategies available:
  5782                           ; Name         Instructions Cycles
  5783                           ; simple_byte            4     3 (average)
  5784                           ;	Chosen strategy is simple_byte
  5785  002E40  5165               	movf	(??_handleButton+1)& (0+255),w,b
  5786  002E42  0A00               	xorlw	0	; case 0
  5787  002E44  B4D8               	btfsc	status,2,c
  5788  002E46  EF27  F017         	goto	l4351
  5789  002E4A  EF4F  F017         	goto	l3891
  5790  002E4E                     l4351:
  5791                           
  5792                           ; BSR set to: 0
  5793                           ; Switch size 1, requested type "simple"
  5794                           ; Number of cases is 2, Range of values is 0 to 1
  5795                           ; switch strategies available:
  5796                           ; Name         Instructions Cycles
  5797                           ; simple_byte            7     4 (average)
  5798                           ;	Chosen strategy is simple_byte
  5799  002E4E  5164               	movf	??_handleButton& (0+255),w,b
  5800  002E50  0A00               	xorlw	0	; case 0
  5801  002E52  B4D8               	btfsc	status,2,c
  5802  002E54  EFFF  F016         	goto	l3869
  5803  002E58  0A01               	xorlw	1	; case 1
  5804  002E5A  B4D8               	btfsc	status,2,c
  5805  002E5C  EF0F  F017         	goto	l3873
  5806  002E60  EF4F  F017         	goto	l3891
  5807  002E64                     l3881:
  5808                           
  5809                           ; BSR set to: 0
  5810                           ;buttons.c: 55:             if(checkRB0 == 2) {
  5811  002E64  0E02               	movlw	2
  5812  002E66  1968               	xorwf	handleButton@checkRB0& (0+255),w,b
  5813  002E68  1169               	iorwf	(handleButton@checkRB0+1)& (0+255),w,b
  5814  002E6A  A4D8               	btfss	status,2,c
  5815  002E6C  EF3A  F017         	goto	u3411
  5816  002E70  EF3C  F017         	goto	u3410
  5817  002E74                     u3411:
  5818  002E74  EF64  F017         	goto	l552
  5819  002E78                     u3410:
  5820  002E78                     
  5821                           ; BSR set to: 0
  5822                           ;buttons.c: 56:                 stateRB0 = 1;
  5823  002E78  0E01               	movlw	1
  5824  002E7A  6FC5               	movwf	_stateRB0& (0+255),b
  5825                           
  5826                           ;buttons.c: 57:                 RB0_pressed = 1;
  5827  002E7C  0E01               	movlw	1
  5828  002E7E  6FCB               	movwf	_RB0_pressed& (0+255),b
  5829  002E80  EF64  F017         	goto	l552
  5830  002E84                     l3885:
  5831                           
  5832                           ; BSR set to: 0
  5833                           ;buttons.c: 61:             if(checkRB0 == 1)
  5834  002E84  0568               	decf	handleButton@checkRB0& (0+255),w,b
  5835  002E86  1169               	iorwf	(handleButton@checkRB0+1)& (0+255),w,b
  5836  002E88  A4D8               	btfss	status,2,c
  5837  002E8A  EF49  F017         	goto	u3421
  5838  002E8E  EF4B  F017         	goto	u3420
  5839  002E92                     u3421:
  5840  002E92  EF64  F017         	goto	l552
  5841  002E96                     u3420:
  5842  002E96                     
  5843                           ; BSR set to: 0
  5844                           ;buttons.c: 62:                 stateRB0 = 0;
  5845  002E96  0E00               	movlw	0
  5846  002E98  6FC5               	movwf	_stateRB0& (0+255),b
  5847  002E9A  EF64  F017         	goto	l552
  5848  002E9E                     l3891:
  5849                           
  5850                           ; BSR set to: 0
  5851  002E9E  51C5               	movf	_stateRB0& (0+255),w,b
  5852  002EA0  6F64               	movwf	??_handleButton& (0+255),b
  5853  002EA2  6B65               	clrf	(??_handleButton+1)& (0+255),b
  5854                           
  5855                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5856                           ; Switch size 1, requested type "simple"
  5857                           ; Number of cases is 1, Range of values is 0 to 0
  5858                           ; switch strategies available:
  5859                           ; Name         Instructions Cycles
  5860                           ; simple_byte            4     3 (average)
  5861                           ;	Chosen strategy is simple_byte
  5862  002EA4  5165               	movf	(??_handleButton+1)& (0+255),w,b
  5863  002EA6  0A00               	xorlw	0	; case 0
  5864  002EA8  B4D8               	btfsc	status,2,c
  5865  002EAA  EF59  F017         	goto	l4353
  5866  002EAE  EF64  F017         	goto	l552
  5867  002EB2                     l4353:
  5868                           
  5869                           ; BSR set to: 0
  5870                           ; Switch size 1, requested type "simple"
  5871                           ; Number of cases is 2, Range of values is 0 to 1
  5872                           ; switch strategies available:
  5873                           ; Name         Instructions Cycles
  5874                           ; simple_byte            7     4 (average)
  5875                           ;	Chosen strategy is simple_byte
  5876  002EB2  5164               	movf	??_handleButton& (0+255),w,b
  5877  002EB4  0A00               	xorlw	0	; case 0
  5878  002EB6  B4D8               	btfsc	status,2,c
  5879  002EB8  EF32  F017         	goto	l3881
  5880  002EBC  0A01               	xorlw	1	; case 1
  5881  002EBE  B4D8               	btfsc	status,2,c
  5882  002EC0  EF42  F017         	goto	l3885
  5883  002EC4  EF64  F017         	goto	l552
  5884  002EC8                     l552:
  5885                           
  5886                           ; BSR set to: 0
  5887  002EC8  0012               	return		;funcret
  5888  002ECA                     __end_of_handleButton:
  5889                           	opt callstack 0
  5890                           
  5891 ;; *************** function _readButtonRB0 *****************
  5892 ;; Defined at:
  5893 ;;		line 29 in file "buttons.c"
  5894 ;; Parameters:    Size  Location     Type
  5895 ;;		None
  5896 ;; Auto vars:     Size  Location     Type
  5897 ;;		None
  5898 ;; Return value:  Size  Location     Type
  5899 ;;                  2    0[BANK0 ] int 
  5900 ;; Registers used:
  5901 ;;		wreg, status,2, status,0
  5902 ;; Tracked objects:
  5903 ;;		On entry : 0/0
  5904 ;;		On exit  : 0/0
  5905 ;;		Unchanged: 0/0
  5906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5907 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5910 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5911 ;;Total ram usage:        2 bytes
  5912 ;; Hardware stack levels used:    1
  5913 ;; Hardware stack levels required when called:    5
  5914 ;; This function calls:
  5915 ;;		Nothing
  5916 ;; This function is called by:
  5917 ;;		_handleButton
  5918 ;; This function uses a non-reentrant model
  5919 ;;
  5920                           
  5921                           	psect	text26
  5922  0037C6                     __ptext26:
  5923                           	opt callstack 0
  5924  0037C6                     _readButtonRB0:
  5925                           	opt callstack 23
  5926  0037C6                     
  5927                           ;buttons.c: 30:     firstReadRB0 = secondReadRB0;
  5928  0037C6  C0DB  F0DC         	movff	_secondReadRB0,_firstReadRB0
  5929  0037CA                     
  5930                           ;buttons.c: 31:     secondReadRB0 = PORTBbits.RB0;
  5931  0037CA  0E00               	movlw	0
  5932  0037CC  B081               	btfsc	129,0,c	;volatile
  5933  0037CE  0E01               	movlw	1
  5934  0037D0  0100               	movlb	0	; () banked
  5935  0037D2  6FDB               	movwf	_secondReadRB0& (0+255),b
  5936  0037D4                     
  5937                           ; BSR set to: 0
  5938                           ;buttons.c: 32:     if(secondReadRB0 == firstReadRB0) {
  5939  0037D4  51DC               	movf	_firstReadRB0& (0+255),w,b
  5940  0037D6  19DB               	xorwf	_secondReadRB0& (0+255),w,b
  5941  0037D8  A4D8               	btfss	status,2,c
  5942  0037DA  EFF1  F01B         	goto	u2701
  5943  0037DE  EFF3  F01B         	goto	u2700
  5944  0037E2                     u2701:
  5945  0037E2  EF07  F01C         	goto	l3357
  5946  0037E6                     u2700:
  5947  0037E6                     
  5948                           ; BSR set to: 0
  5949                           ;buttons.c: 33:         return (secondReadRB0 == 0) ? 2 : 1;
  5950  0037E6  51DB               	movf	_secondReadRB0& (0+255),w,b
  5951  0037E8  B4D8               	btfsc	status,2,c
  5952  0037EA  EFF9  F01B         	goto	u2711
  5953  0037EE  EFFB  F01B         	goto	u2710
  5954  0037F2                     u2711:
  5955  0037F2  EF01  F01C         	goto	l3353
  5956  0037F6                     u2710:
  5957  0037F6                     
  5958                           ; BSR set to: 0
  5959  0037F6  0E00               	movlw	0
  5960  0037F8  6F61               	movwf	(?_readButtonRB0+1)& (0+255),b
  5961  0037FA  0E01               	movlw	1
  5962  0037FC  6F60               	movwf	?_readButtonRB0& (0+255),b
  5963  0037FE  EF0B  F01C         	goto	l537
  5964  003802                     l3353:
  5965                           
  5966                           ; BSR set to: 0
  5967  003802  0E00               	movlw	0
  5968  003804  6F61               	movwf	(?_readButtonRB0+1)& (0+255),b
  5969  003806  0E02               	movlw	2
  5970  003808  6F60               	movwf	?_readButtonRB0& (0+255),b
  5971  00380A  EF0B  F01C         	goto	l537
  5972  00380E                     l3357:
  5973                           
  5974                           ; BSR set to: 0
  5975                           ;buttons.c: 35:     return 0;
  5976  00380E  0E00               	movlw	0
  5977  003810  6F61               	movwf	(?_readButtonRB0+1)& (0+255),b
  5978  003812  0E00               	movlw	0
  5979  003814  6F60               	movwf	?_readButtonRB0& (0+255),b
  5980  003816                     l537:
  5981                           
  5982                           ; BSR set to: 0
  5983  003816  0012               	return		;funcret
  5984  003818                     __end_of_readButtonRB0:
  5985                           	opt callstack 0
  5986                           
  5987 ;; *************** function _readButtonRA5 *****************
  5988 ;; Defined at:
  5989 ;;		line 20 in file "buttons.c"
  5990 ;; Parameters:    Size  Location     Type
  5991 ;;		None
  5992 ;; Auto vars:     Size  Location     Type
  5993 ;;		None
  5994 ;; Return value:  Size  Location     Type
  5995 ;;                  2    0[BANK0 ] int 
  5996 ;; Registers used:
  5997 ;;		wreg, status,2, status,0
  5998 ;; Tracked objects:
  5999 ;;		On entry : 0/0
  6000 ;;		On exit  : 0/0
  6001 ;;		Unchanged: 0/0
  6002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6003 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6006 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6007 ;;Total ram usage:        2 bytes
  6008 ;; Hardware stack levels used:    1
  6009 ;; Hardware stack levels required when called:    5
  6010 ;; This function calls:
  6011 ;;		Nothing
  6012 ;; This function is called by:
  6013 ;;		_handleButton
  6014 ;; This function uses a non-reentrant model
  6015 ;;
  6016                           
  6017                           	psect	text27
  6018  003818                     __ptext27:
  6019                           	opt callstack 0
  6020  003818                     _readButtonRA5:
  6021                           	opt callstack 23
  6022  003818                     
  6023                           ;buttons.c: 21:     firstReadRA5 = secondReadRA5;
  6024  003818  C0DD  F0DE         	movff	_secondReadRA5,_firstReadRA5
  6025  00381C                     
  6026                           ;buttons.c: 22:     secondReadRA5 = PORTAbits.RA5;
  6027  00381C  0E00               	movlw	0
  6028  00381E  BA80               	btfsc	128,5,c	;volatile
  6029  003820  0E01               	movlw	1
  6030  003822  0100               	movlb	0	; () banked
  6031  003824  6FDD               	movwf	_secondReadRA5& (0+255),b
  6032  003826                     
  6033                           ; BSR set to: 0
  6034                           ;buttons.c: 23:     if(secondReadRA5 == firstReadRA5) {
  6035  003826  51DE               	movf	_firstReadRA5& (0+255),w,b
  6036  003828  19DD               	xorwf	_secondReadRA5& (0+255),w,b
  6037  00382A  A4D8               	btfss	status,2,c
  6038  00382C  EF1A  F01C         	goto	u2681
  6039  003830  EF1C  F01C         	goto	u2680
  6040  003834                     u2681:
  6041  003834  EF30  F01C         	goto	l3339
  6042  003838                     u2680:
  6043  003838                     
  6044                           ; BSR set to: 0
  6045                           ;buttons.c: 24:         return (secondReadRA5 == 0) ? 2 : 1;
  6046  003838  51DD               	movf	_secondReadRA5& (0+255),w,b
  6047  00383A  B4D8               	btfsc	status,2,c
  6048  00383C  EF22  F01C         	goto	u2691
  6049  003840  EF24  F01C         	goto	u2690
  6050  003844                     u2691:
  6051  003844  EF2A  F01C         	goto	l3335
  6052  003848                     u2690:
  6053  003848                     
  6054                           ; BSR set to: 0
  6055  003848  0E00               	movlw	0
  6056  00384A  6F61               	movwf	(?_readButtonRA5+1)& (0+255),b
  6057  00384C  0E01               	movlw	1
  6058  00384E  6F60               	movwf	?_readButtonRA5& (0+255),b
  6059  003850  EF34  F01C         	goto	l529
  6060  003854                     l3335:
  6061                           
  6062                           ; BSR set to: 0
  6063  003854  0E00               	movlw	0
  6064  003856  6F61               	movwf	(?_readButtonRA5+1)& (0+255),b
  6065  003858  0E02               	movlw	2
  6066  00385A  6F60               	movwf	?_readButtonRA5& (0+255),b
  6067  00385C  EF34  F01C         	goto	l529
  6068  003860                     l3339:
  6069                           
  6070                           ; BSR set to: 0
  6071                           ;buttons.c: 26:     return 0;
  6072  003860  0E00               	movlw	0
  6073  003862  6F61               	movwf	(?_readButtonRA5+1)& (0+255),b
  6074  003864  0E00               	movlw	0
  6075  003866  6F60               	movwf	?_readButtonRA5& (0+255),b
  6076  003868                     l529:
  6077                           
  6078                           ; BSR set to: 0
  6079  003868  0012               	return		;funcret
  6080  00386A                     __end_of_readButtonRA5:
  6081                           	opt callstack 0
  6082                           
  6083 ;; *************** function _dequeue *****************
  6084 ;; Defined at:
  6085 ;;		line 40 in file "clock.c"
  6086 ;; Parameters:    Size  Location     Type
  6087 ;;		None
  6088 ;; Auto vars:     Size  Location     Type
  6089 ;;  temp            5   15[BANK0 ] struct .
  6090 ;;  idx             2   13[BANK0 ] int 
  6091 ;; Return value:  Size  Location     Type
  6092 ;;                  5    8[BANK0 ] struct .
  6093 ;; Registers used:
  6094 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6095 ;; Tracked objects:
  6096 ;;		On entry : 0/0
  6097 ;;		On exit  : 0/0
  6098 ;;		Unchanged: 0/0
  6099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6100 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6101 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6103 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6104 ;;Total ram usage:       12 bytes
  6105 ;; Hardware stack levels used:    1
  6106 ;; Hardware stack levels required when called:    8
  6107 ;; This function calls:
  6108 ;;		___awmod
  6109 ;;		___wmul
  6110 ;;		_isEmptyQueue
  6111 ;; This function is called by:
  6112 ;;		_dispatch
  6113 ;; This function uses a non-reentrant model
  6114 ;;
  6115                           
  6116                           	psect	text28
  6117  003476                     __ptext28:
  6118                           	opt callstack 0
  6119  003476                     _dequeue:
  6120                           	opt callstack 21
  6121  003476                     
  6122                           ;clock.c: 41:     queue_node temp;;clock.c: 42:     temp.func_ptr = ((void*)0);
  6123  003476  0E00               	movlw	0
  6124  003478  0100               	movlb	0	; () banked
  6125  00347A  6F6F               	movwf	dequeue@temp& (0+255),b
  6126  00347C  0E00               	movlw	0
  6127  00347E  6F70               	movwf	(dequeue@temp+1)& (0+255),b
  6128  003480  0E00               	movlw	0
  6129  003482  6F71               	movwf	(dequeue@temp+2)& (0+255),b
  6130                           
  6131                           ;clock.c: 43:     temp.data_p = ((void*)0);
  6132  003484  0E00               	movlw	0
  6133  003486  6F72               	movwf	(dequeue@temp+3)& (0+255),b
  6134  003488  0E00               	movlw	0
  6135  00348A  6F73               	movwf	(dequeue@temp+4)& (0+255),b
  6136  00348C                     
  6137                           ; BSR set to: 0
  6138                           ;clock.c: 44:     if(isEmptyQueue())
  6139  00348C  EC5A  F01D         	call	_isEmptyQueue	;wreg free
  6140  003490  0900               	iorlw	0
  6141  003492  B4D8               	btfsc	status,2,c
  6142  003494  EF4E  F01A         	goto	u3341
  6143  003498  EF50  F01A         	goto	u3340
  6144  00349C                     u3341:
  6145  00349C  EF5B  F01A         	goto	l381
  6146  0034A0                     u3340:
  6147  0034A0                     l3849:
  6148                           
  6149                           ;clock.c: 45:         return temp;
  6150  0034A0  EE20  F06F         	lfsr	2,dequeue@temp
  6151  0034A4  EE00  F068         	lfsr	0,?_dequeue
  6152  0034A8  0E04               	movlw	4
  6153  0034AA                     u3351:
  6154  0034AA  CFDB FFEB          	movff	plusw2,plusw0
  6155  0034AE  06E8               	decf	wreg,f,c
  6156  0034B0  E2FC               	bc	u3351
  6157  0034B2  EF8B  F01A         	goto	l382
  6158  0034B6                     l381:
  6159                           
  6160                           ;clock.c: 46:     int idx = front;
  6161  0034B6  C0D7  F06D         	movff	_front,dequeue@idx
  6162  0034BA  C0D8  F06E         	movff	_front+1,dequeue@idx+1
  6163  0034BE                     
  6164                           ;clock.c: 47:     front = (front + 1) % 20;
  6165  0034BE  0E01               	movlw	1
  6166  0034C0  0100               	movlb	0	; () banked
  6167  0034C2  25D7               	addwf	_front& (0+255),w,b
  6168  0034C4  6F60               	movwf	___awmod@dividend& (0+255),b
  6169  0034C6  0E00               	movlw	0
  6170  0034C8  21D8               	addwfc	(_front+1)& (0+255),w,b
  6171  0034CA  6F61               	movwf	(___awmod@dividend+1)& (0+255),b
  6172  0034CC  0E00               	movlw	0
  6173  0034CE  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  6174  0034D0  0E14               	movlw	20
  6175  0034D2  6F62               	movwf	___awmod@divisor& (0+255),b
  6176  0034D4  EC32  F018         	call	___awmod	;wreg free
  6177  0034D8  C060  F0D7         	movff	?___awmod,_front
  6178  0034DC  C061  F0D8         	movff	?___awmod+1,_front+1
  6179  0034E0                     
  6180                           ;clock.c: 48:     temp = ready_queue[idx];
  6181  0034E0  C06D  F060         	movff	dequeue@idx,___wmul@multiplier
  6182  0034E4  C06E  F061         	movff	dequeue@idx+1,___wmul@multiplier+1
  6183  0034E8  0E00               	movlw	0
  6184  0034EA  0100               	movlb	0	; () banked
  6185  0034EC  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6186  0034EE  0E05               	movlw	5
  6187  0034F0  6F62               	movwf	___wmul@multiplicand& (0+255),b
  6188  0034F2  ECB7  F01D         	call	___wmul	;wreg free
  6189  0034F6  0E00               	movlw	low _ready_queue
  6190  0034F8  0100               	movlb	0	; () banked
  6191  0034FA  2560               	addwf	?___wmul& (0+255),w,b
  6192  0034FC  6ED9               	movwf	fsr2l,c
  6193  0034FE  0E01               	movlw	high _ready_queue
  6194  003500  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  6195  003502  6EDA               	movwf	fsr2h,c
  6196  003504  EE10  F06F         	lfsr	1,dequeue@temp
  6197  003508  0E04               	movlw	4
  6198  00350A                     u3361:
  6199  00350A  CFDB FFE3          	movff	plusw2,plusw1
  6200  00350E  06E8               	decf	wreg,f,c
  6201  003510  E2FC               	bc	u3361
  6202  003512  EF50  F01A         	goto	l3849
  6203  003516                     l382:
  6204  003516  0012               	return		;funcret
  6205  003518                     __end_of_dequeue:
  6206                           	opt callstack 0
  6207                           
  6208 ;; *************** function _isEmptyQueue *****************
  6209 ;; Defined at:
  6210 ;;		line 23 in file "clock.c"
  6211 ;; Parameters:    Size  Location     Type
  6212 ;;		None
  6213 ;; Auto vars:     Size  Location     Type
  6214 ;;		None
  6215 ;; Return value:  Size  Location     Type
  6216 ;;                  1    wreg      unsigned char 
  6217 ;; Registers used:
  6218 ;;		wreg, status,2, status,0, cstack
  6219 ;; Tracked objects:
  6220 ;;		On entry : 0/0
  6221 ;;		On exit  : 0/0
  6222 ;;		Unchanged: 0/0
  6223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6228 ;;Total ram usage:        0 bytes
  6229 ;; Hardware stack levels used:    1
  6230 ;; Hardware stack levels required when called:    7
  6231 ;; This function calls:
  6232 ;;		_getSizeQueue
  6233 ;; This function is called by:
  6234 ;;		_dequeue
  6235 ;;		_dispatch
  6236 ;; This function uses a non-reentrant model
  6237 ;;
  6238                           
  6239                           	psect	text29
  6240  003AB4                     __ptext29:
  6241                           	opt callstack 0
  6242  003AB4                     _isEmptyQueue:
  6243                           	opt callstack 22
  6244  003AB4                     
  6245                           ;clock.c: 24:     if(front == -1)
  6246  003AB4  0100               	movlb	0	; () banked
  6247  003AB6  29D7               	incf	_front& (0+255),w,b
  6248  003AB8  E106               	bnz	u2621
  6249  003ABA  29D8               	incf	(_front+1)& (0+255),w,b
  6250  003ABC  A4D8               	btfss	status,2,c
  6251  003ABE  EF63  F01D         	goto	u2621
  6252  003AC2  EF65  F01D         	goto	u2620
  6253  003AC6                     u2621:
  6254  003AC6  EF68  F01D         	goto	l3301
  6255  003ACA                     u2620:
  6256  003ACA                     
  6257                           ; BSR set to: 0
  6258                           ;clock.c: 25:         return 0;
  6259  003ACA  0E00               	movlw	0
  6260  003ACC  EF74  F01D         	goto	l373
  6261  003AD0                     l3301:
  6262                           
  6263                           ; BSR set to: 0
  6264                           ;clock.c: 26:     return getSizeQueue() == 0 ? 1 : 0;
  6265  003AD0  EC8C  F01D         	call	_getSizeQueue	;wreg free
  6266  003AD4  0900               	iorlw	0
  6267  003AD6  B4D8               	btfsc	status,2,c
  6268  003AD8  EF70  F01D         	goto	u2631
  6269  003ADC  EF73  F01D         	goto	u2630
  6270  003AE0                     u2631:
  6271  003AE0  0E01               	movlw	1
  6272  003AE2  EF74  F01D         	goto	u2640
  6273  003AE6                     u2630:
  6274  003AE6  0E00               	movlw	0
  6275  003AE8                     u2640:
  6276  003AE8                     l373:
  6277  003AE8  0012               	return		;funcret
  6278  003AEA                     __end_of_isEmptyQueue:
  6279                           	opt callstack 0
  6280                           
  6281 ;; *************** function _getSizeQueue *****************
  6282 ;; Defined at:
  6283 ;;		line 15 in file "clock.c"
  6284 ;; Parameters:    Size  Location     Type
  6285 ;;		None
  6286 ;; Auto vars:     Size  Location     Type
  6287 ;;		None
  6288 ;; Return value:  Size  Location     Type
  6289 ;;                  1    wreg      unsigned char 
  6290 ;; Registers used:
  6291 ;;		wreg, status,2, status,0, cstack
  6292 ;; Tracked objects:
  6293 ;;		On entry : 0/0
  6294 ;;		On exit  : 0/0
  6295 ;;		Unchanged: 0/0
  6296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6299 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6300 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6301 ;;Total ram usage:        2 bytes
  6302 ;; Hardware stack levels used:    1
  6303 ;; Hardware stack levels required when called:    6
  6304 ;; This function calls:
  6305 ;;		___awmod
  6306 ;; This function is called by:
  6307 ;;		_isEmptyQueue
  6308 ;; This function uses a non-reentrant model
  6309 ;;
  6310                           
  6311                           	psect	text30
  6312  003B18                     __ptext30:
  6313                           	opt callstack 0
  6314  003B18                     _getSizeQueue:
  6315                           	opt callstack 22
  6316  003B18                     
  6317                           ;clock.c: 16:     return (rear - front + 1 + 20) % 20;
  6318  003B18  0100               	movlb	0	; () banked
  6319  003B1A  51D7               	movf	_front& (0+255),w,b
  6320  003B1C  5DD5               	subwf	_rear& (0+255),w,b
  6321  003B1E  6F66               	movwf	??_getSizeQueue& (0+255),b
  6322  003B20  51D8               	movf	(_front+1)& (0+255),w,b
  6323  003B22  59D6               	subwfb	(_rear+1)& (0+255),w,b
  6324  003B24  6F67               	movwf	(??_getSizeQueue+1)& (0+255),b
  6325  003B26  0E15               	movlw	21
  6326  003B28  2566               	addwf	??_getSizeQueue& (0+255),w,b
  6327  003B2A  6F60               	movwf	___awmod@dividend& (0+255),b
  6328  003B2C  0E00               	movlw	0
  6329  003B2E  2167               	addwfc	(??_getSizeQueue+1)& (0+255),w,b
  6330  003B30  6F61               	movwf	(___awmod@dividend+1)& (0+255),b
  6331  003B32  0E00               	movlw	0
  6332  003B34  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  6333  003B36  0E14               	movlw	20
  6334  003B38  6F62               	movwf	___awmod@divisor& (0+255),b
  6335  003B3A  EC32  F018         	call	___awmod	;wreg free
  6336  003B3E  0100               	movlb	0	; () banked
  6337  003B40  5160               	movf	?___awmod& (0+255),w,b
  6338  003B42                     
  6339                           ; BSR set to: 0
  6340  003B42  0012               	return		;funcret
  6341  003B44                     __end_of_getSizeQueue:
  6342                           	opt callstack 0
  6343                           
  6344 ;; *************** function ___wmul *****************
  6345 ;; Defined at:
  6346 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  6347 ;; Parameters:    Size  Location     Type
  6348 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6349 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6350 ;; Auto vars:     Size  Location     Type
  6351 ;;  product         2    4[BANK0 ] unsigned int 
  6352 ;; Return value:  Size  Location     Type
  6353 ;;                  2    0[BANK0 ] unsigned int 
  6354 ;; Registers used:
  6355 ;;		wreg, status,2, status,0, prodl, prodh
  6356 ;; Tracked objects:
  6357 ;;		On entry : 0/0
  6358 ;;		On exit  : 0/0
  6359 ;;		Unchanged: 0/0
  6360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6361 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6362 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6364 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6365 ;;Total ram usage:        6 bytes
  6366 ;; Hardware stack levels used:    1
  6367 ;; Hardware stack levels required when called:    5
  6368 ;; This function calls:
  6369 ;;		Nothing
  6370 ;; This function is called by:
  6371 ;;		_queueInitialize
  6372 ;;		_dequeue
  6373 ;;		_initializeTaskList
  6374 ;;		_register_timer
  6375 ;; This function uses a non-reentrant model
  6376 ;;
  6377                           
  6378                           	psect	text31
  6379  003B6E                     __ptext31:
  6380                           	opt callstack 0
  6381  003B6E                     ___wmul:
  6382                           	opt callstack 23
  6383  003B6E  0100               	movlb	0	; () banked
  6384  003B70  5160               	movf	___wmul@multiplier& (0+255),w,b
  6385  003B72  0362               	mulwf	___wmul@multiplicand& (0+255),b
  6386  003B74  CFF3 F064          	movff	prodl,___wmul@product
  6387  003B78  CFF4 F065          	movff	prodh,___wmul@product+1
  6388  003B7C  5160               	movf	___wmul@multiplier& (0+255),w,b
  6389  003B7E  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  6390  003B80  50F3               	movf	243,w,c
  6391  003B82  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  6392  003B84  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  6393  003B86  0362               	mulwf	___wmul@multiplicand& (0+255),b
  6394  003B88  50F3               	movf	243,w,c
  6395  003B8A  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  6396  003B8C                     
  6397                           ; BSR set to: 0
  6398  003B8C  C064  F060         	movff	___wmul@product,?___wmul
  6399  003B90  C065  F061         	movff	___wmul@product+1,?___wmul+1
  6400  003B94                     
  6401                           ; BSR set to: 0
  6402  003B94  0012               	return		;funcret
  6403  003B96                     __end_of___wmul:
  6404                           	opt callstack 0
  6405                           
  6406 ;; *************** function _check_humid_to_turn_fan *****************
  6407 ;; Defined at:
  6408 ;;		line 71 in file "FSM.c"
  6409 ;; Parameters:    Size  Location     Type
  6410 ;;		None
  6411 ;; Auto vars:     Size  Location     Type
  6412 ;;  humid           2   15[BANK0 ] int 
  6413 ;; Return value:  Size  Location     Type
  6414 ;;                  1    wreg      void 
  6415 ;; Registers used:
  6416 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/0
  6419 ;;		On exit  : 0/0
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6423 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6425 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6426 ;;Total ram usage:        2 bytes
  6427 ;; Hardware stack levels used:    1
  6428 ;; Hardware stack levels required when called:   10
  6429 ;; This function calls:
  6430 ;;		_LCDPrint
  6431 ;;		_LCDPrintChar
  6432 ;;		___awdiv
  6433 ;;		___awmod
  6434 ;;		___fltol
  6435 ;;		_set_speed_fan3
  6436 ;; This function is called by:
  6437 ;;		_system_setup
  6438 ;;		_dispatch
  6439 ;; This function uses a non-reentrant model
  6440 ;;
  6441                           
  6442                           	psect	text32
  6443  0031C6                     __ptext32:
  6444                           	opt callstack 0
  6445  0031C6                     _check_humid_to_turn_fan:
  6446                           	opt callstack 19
  6447  0031C6                     
  6448                           ;FSM.c: 72:     if(state == HEATER || state == HEAT_PUMP) {
  6449  0031C6  0100               	movlb	0	; () banked
  6450  0031C8  05CA               	decf	_state& (0+255),w,b	;volatile
  6451  0031CA  B4D8               	btfsc	status,2,c
  6452  0031CC  EFEA  F018         	goto	u3451
  6453  0031D0  EFEC  F018         	goto	u3450
  6454  0031D4                     u3451:
  6455  0031D4  EFF5  F018         	goto	l3941
  6456  0031D8                     u3450:
  6457  0031D8                     
  6458                           ; BSR set to: 0
  6459  0031D8  0E02               	movlw	2
  6460  0031DA  19CA               	xorwf	_state& (0+255),w,b	;volatile
  6461  0031DC  A4D8               	btfss	status,2,c
  6462  0031DE  EFF3  F018         	goto	u3461
  6463  0031E2  EFF5  F018         	goto	u3460
  6464  0031E6                     u3461:
  6465  0031E6  EF39  F019         	goto	l691
  6466  0031EA                     u3460:
  6467  0031EA                     l3941:
  6468                           
  6469                           ; BSR set to: 0
  6470                           ;FSM.c: 73:         int humid = humidity_value;
  6471  0031EA  C0D1  F060         	movff	_humidity_value,___fltol@f1
  6472  0031EE  C0D2  F061         	movff	_humidity_value+1,___fltol@f1+1
  6473  0031F2  C0D3  F062         	movff	_humidity_value+2,___fltol@f1+2
  6474  0031F6  C0D4  F063         	movff	_humidity_value+3,___fltol@f1+3
  6475  0031FA  EC6D  F016         	call	___fltol	;wreg free
  6476  0031FE  C060  F06F         	movff	?___fltol,check_humid_to_turn_fan@humid
  6477  003202  C061  F070         	movff	?___fltol+1,check_humid_to_turn_fan@humid+1
  6478  003206                     
  6479                           ;FSM.c: 74:         set_speed_fan3(humid);
  6480  003206  C06F  F060         	movff	check_humid_to_turn_fan@humid,set_speed_fan3@dutyCycle
  6481  00320A  C070  F061         	movff	check_humid_to_turn_fan@humid+1,set_speed_fan3@dutyCycle+1
  6482  00320E  EC59  F01E         	call	_set_speed_fan3	;wreg free
  6483  003212                     
  6484                           ;FSM.c: 75:         LCDPrint(0, 8, "Fan3:");
  6485  003212  0E08               	movlw	8
  6486  003214  0100               	movlb	0	; () banked
  6487  003216  6F6B               	movwf	LCDPrint@pos& (0+255),b
  6488  003218  0E3D               	movlw	low STR_12
  6489  00321A  6F6C               	movwf	LCDPrint@ptr& (0+255),b
  6490  00321C  0E10               	movlw	high STR_12
  6491  00321E  6F6D               	movwf	(LCDPrint@ptr+1)& (0+255),b
  6492  003220  0E00               	movlw	0
  6493  003222  EC59  F01C         	call	_LCDPrint
  6494  003226                     
  6495                           ;FSM.c: 76:         LCDPrintChar(0, 13, humid / 10);
  6496  003226  0E0D               	movlw	13
  6497  003228  0100               	movlb	0	; () banked
  6498  00322A  6F6B               	movwf	LCDPrintChar@pos& (0+255),b
  6499  00322C  C06F  F060         	movff	check_humid_to_turn_fan@humid,___awdiv@dividend
  6500  003230  C070  F061         	movff	check_humid_to_turn_fan@humid+1,___awdiv@dividend+1
  6501  003234  0E00               	movlw	0
  6502  003236  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  6503  003238  0E0A               	movlw	10
  6504  00323A  6F62               	movwf	___awdiv@divisor& (0+255),b
  6505  00323C  ECCF  F017         	call	___awdiv	;wreg free
  6506  003240  0100               	movlb	0	; () banked
  6507  003242  5160               	movf	?___awdiv& (0+255),w,b
  6508  003244  6F6C               	movwf	LCDPrintChar@ch& (0+255),b
  6509  003246  0E00               	movlw	0
  6510  003248  EC1C  F01D         	call	_LCDPrintChar
  6511  00324C                     
  6512                           ;FSM.c: 77:         LCDPrintChar(0, 14, humid % 10);
  6513  00324C  0E0E               	movlw	14
  6514  00324E  0100               	movlb	0	; () banked
  6515  003250  6F6B               	movwf	LCDPrintChar@pos& (0+255),b
  6516  003252  C06F  F060         	movff	check_humid_to_turn_fan@humid,___awmod@dividend
  6517  003256  C070  F061         	movff	check_humid_to_turn_fan@humid+1,___awmod@dividend+1
  6518  00325A  0E00               	movlw	0
  6519  00325C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  6520  00325E  0E0A               	movlw	10
  6521  003260  6F62               	movwf	___awmod@divisor& (0+255),b
  6522  003262  EC32  F018         	call	___awmod	;wreg free
  6523  003266  0100               	movlb	0	; () banked
  6524  003268  5160               	movf	?___awmod& (0+255),w,b
  6525  00326A  6F6C               	movwf	LCDPrintChar@ch& (0+255),b
  6526  00326C  0E00               	movlw	0
  6527  00326E  EC1C  F01D         	call	_LCDPrintChar
  6528  003272                     l691:
  6529  003272  0012               	return		;funcret
  6530  003274                     __end_of_check_humid_to_turn_fan:
  6531                           	opt callstack 0
  6532                           
  6533 ;; *************** function _set_speed_fan3 *****************
  6534 ;; Defined at:
  6535 ;;		line 50 in file "LTDtask.c"
  6536 ;; Parameters:    Size  Location     Type
  6537 ;;  dutyCycle       2    0[BANK0 ] int 
  6538 ;; Auto vars:     Size  Location     Type
  6539 ;;		None
  6540 ;; Return value:  Size  Location     Type
  6541 ;;                  1    wreg      void 
  6542 ;; Registers used:
  6543 ;;		wreg, status,2, status,0, prodl, prodh
  6544 ;; Tracked objects:
  6545 ;;		On entry : 0/0
  6546 ;;		On exit  : 0/0
  6547 ;;		Unchanged: 0/0
  6548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6549 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6552 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6553 ;;Total ram usage:        2 bytes
  6554 ;; Hardware stack levels used:    1
  6555 ;; Hardware stack levels required when called:    5
  6556 ;; This function calls:
  6557 ;;		Nothing
  6558 ;; This function is called by:
  6559 ;;		_check_humid_to_turn_fan
  6560 ;;		_force_turn_off
  6561 ;; This function uses a non-reentrant model
  6562 ;;
  6563                           
  6564                           	psect	text33
  6565  003CB2                     __ptext33:
  6566                           	opt callstack 0
  6567  003CB2                     _set_speed_fan3:
  6568                           	opt callstack 23
  6569  003CB2                     
  6570                           ;LTDtask.c: 51:     CCPR4L = 24 * dutyCycle;
  6571  003CB2  0100               	movlb	0	; () banked
  6572  003CB4  5160               	movf	set_speed_fan3@dutyCycle& (0+255),w,b
  6573  003CB6  0D18               	mullw	24
  6574  003CB8  CFF3 FF74          	movff	prodl,3956	;volatile
  6575  003CBC                     
  6576                           ; BSR set to: 0
  6577  003CBC  0012               	return		;funcret
  6578  003CBE                     __end_of_set_speed_fan3:
  6579                           	opt callstack 0
  6580                           
  6581 ;; *************** function ___fltol *****************
  6582 ;; Defined at:
  6583 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  6584 ;; Parameters:    Size  Location     Type
  6585 ;;  f1              4    0[BANK0 ] void 
  6586 ;; Auto vars:     Size  Location     Type
  6587 ;;  exp1            1    9[BANK0 ] unsigned char 
  6588 ;;  sign1           1    8[BANK0 ] unsigned char 
  6589 ;; Return value:  Size  Location     Type
  6590 ;;                  4    0[BANK0 ] long 
  6591 ;; Registers used:
  6592 ;;		wreg, status,2, status,0
  6593 ;; Tracked objects:
  6594 ;;		On entry : 0/0
  6595 ;;		On exit  : 0/0
  6596 ;;		Unchanged: 0/0
  6597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6598 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6599 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6600 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6601 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6602 ;;Total ram usage:       10 bytes
  6603 ;; Hardware stack levels used:    1
  6604 ;; Hardware stack levels required when called:    5
  6605 ;; This function calls:
  6606 ;;		Nothing
  6607 ;; This function is called by:
  6608 ;;		_printTempAndHumid
  6609 ;;		_check_humid_to_turn_fan
  6610 ;; This function uses a non-reentrant model
  6611 ;;
  6612                           
  6613                           	psect	text34
  6614  002CDA                     __ptext34:
  6615                           	opt callstack 0
  6616  002CDA                     ___fltol:
  6617                           	opt callstack 23
  6618  002CDA  0100               	movlb	0	; () banked
  6619  002CDC  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
  6620  002CDE  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
  6621  002CE0  6F69               	movwf	___fltol@exp1& (0+255),b
  6622  002CE2  5169               	movf	___fltol@exp1& (0+255),w,b
  6623  002CE4  A4D8               	btfss	status,2,c
  6624  002CE6  EF77  F016         	goto	u3001
  6625  002CEA  EF79  F016         	goto	u3000
  6626  002CEE                     u3001:
  6627  002CEE  EF83  F016         	goto	l3565
  6628  002CF2                     u3000:
  6629  002CF2                     l3561:
  6630                           
  6631                           ; BSR set to: 0
  6632  002CF2  0E00               	movlw	0
  6633  002CF4  6F60               	movwf	?___fltol& (0+255),b
  6634  002CF6  0E00               	movlw	0
  6635  002CF8  6F61               	movwf	(?___fltol+1)& (0+255),b
  6636  002CFA  0E00               	movlw	0
  6637  002CFC  6F62               	movwf	(?___fltol+2)& (0+255),b
  6638  002CFE  0E00               	movlw	0
  6639  002D00  6F63               	movwf	(?___fltol+3)& (0+255),b
  6640  002D02  EFF0  F016         	goto	l1003
  6641  002D06                     l3565:
  6642                           
  6643                           ; BSR set to: 0
  6644  002D06  C060  F064         	movff	___fltol@f1,??___fltol
  6645  002D0A  C061  F065         	movff	___fltol@f1+1,??___fltol+1
  6646  002D0E  C062  F066         	movff	___fltol@f1+2,??___fltol+2
  6647  002D12  C063  F067         	movff	___fltol@f1+3,??___fltol+3
  6648  002D16  0E20               	movlw	32
  6649  002D18  EF93  F016         	goto	u3010
  6650  002D1C                     u3015:
  6651  002D1C  90D8               	bcf	status,0,c
  6652  002D1E  3367               	rrcf	(??___fltol+3)& (0+255),f,b
  6653  002D20  3366               	rrcf	(??___fltol+2)& (0+255),f,b
  6654  002D22  3365               	rrcf	(??___fltol+1)& (0+255),f,b
  6655  002D24  3364               	rrcf	??___fltol& (0+255),f,b
  6656  002D26                     u3010:
  6657  002D26  2EE8               	decfsz	wreg,f,c
  6658  002D28  EF8E  F016         	goto	u3015
  6659  002D2C  5164               	movf	??___fltol& (0+255),w,b
  6660  002D2E  6F68               	movwf	___fltol@sign1& (0+255),b
  6661  002D30                     
  6662                           ; BSR set to: 0
  6663  002D30  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
  6664  002D32                     
  6665                           ; BSR set to: 0
  6666  002D32  0EFF               	movlw	255
  6667  002D34  1760               	andwf	___fltol@f1& (0+255),f,b
  6668  002D36  0EFF               	movlw	255
  6669  002D38  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
  6670  002D3A  0EFF               	movlw	255
  6671  002D3C  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
  6672  002D3E  0E00               	movlw	0
  6673  002D40  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
  6674  002D42                     
  6675                           ; BSR set to: 0
  6676  002D42  0E96               	movlw	150
  6677  002D44  5F69               	subwf	___fltol@exp1& (0+255),f,b
  6678  002D46                     
  6679                           ; BSR set to: 0
  6680  002D46  BF69               	btfsc	___fltol@exp1& (0+255),7,b
  6681  002D48  EFAA  F016         	goto	u3020
  6682  002D4C  EFA8  F016         	goto	u3021
  6683  002D50                     u3021:
  6684  002D50  EFC0  F016         	goto	l3585
  6685  002D54                     u3020:
  6686  002D54                     
  6687                           ; BSR set to: 0
  6688  002D54  5169               	movf	___fltol@exp1& (0+255),w,b
  6689  002D56  0A80               	xorlw	128
  6690  002D58  0F97               	addlw	151
  6691  002D5A  B0D8               	btfsc	status,0,c
  6692  002D5C  EFB2  F016         	goto	u3031
  6693  002D60  EFB4  F016         	goto	u3030
  6694  002D64                     u3031:
  6695  002D64  EFB6  F016         	goto	l3581
  6696  002D68                     u3030:
  6697  002D68  EF79  F016         	goto	l3561
  6698  002D6C                     l3581:
  6699                           
  6700                           ; BSR set to: 0
  6701  002D6C  90D8               	bcf	status,0,c
  6702  002D6E  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
  6703  002D70  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
  6704  002D72  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6705  002D74  3360               	rrcf	___fltol@f1& (0+255),f,b
  6706  002D76                     
  6707                           ; BSR set to: 0
  6708  002D76  3F69               	incfsz	___fltol@exp1& (0+255),f,b
  6709  002D78  EFB6  F016         	goto	l3581
  6710  002D7C  EFD8  F016         	goto	l3595
  6711  002D80                     l3585:
  6712                           
  6713                           ; BSR set to: 0
  6714  002D80  0E1F               	movlw	31
  6715  002D82  6569               	cpfsgt	___fltol@exp1& (0+255),b
  6716  002D84  EFC6  F016         	goto	u3041
  6717  002D88  EFC8  F016         	goto	u3040
  6718  002D8C                     u3041:
  6719  002D8C  EFD0  F016         	goto	l3593
  6720  002D90                     u3040:
  6721  002D90  EF79  F016         	goto	l3561
  6722  002D94                     l3591:
  6723                           
  6724                           ; BSR set to: 0
  6725  002D94  90D8               	bcf	status,0,c
  6726  002D96  3760               	rlcf	___fltol@f1& (0+255),f,b
  6727  002D98  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6728  002D9A  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6729  002D9C  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6730  002D9E  0769               	decf	___fltol@exp1& (0+255),f,b
  6731  002DA0                     l3593:
  6732                           
  6733                           ; BSR set to: 0
  6734  002DA0  5169               	movf	___fltol@exp1& (0+255),w,b
  6735  002DA2  A4D8               	btfss	status,2,c
  6736  002DA4  EFD6  F016         	goto	u3051
  6737  002DA8  EFD8  F016         	goto	u3050
  6738  002DAC                     u3051:
  6739  002DAC  EFCA  F016         	goto	l3591
  6740  002DB0                     u3050:
  6741  002DB0                     l3595:
  6742                           
  6743                           ; BSR set to: 0
  6744  002DB0  5168               	movf	___fltol@sign1& (0+255),w,b
  6745  002DB2  B4D8               	btfsc	status,2,c
  6746  002DB4  EFDE  F016         	goto	u3061
  6747  002DB8  EFE0  F016         	goto	u3060
  6748  002DBC                     u3061:
  6749  002DBC  EFE8  F016         	goto	l3599
  6750  002DC0                     u3060:
  6751  002DC0                     
  6752                           ; BSR set to: 0
  6753  002DC0  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
  6754  002DC2  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
  6755  002DC4  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
  6756  002DC6  6D60               	negf	___fltol@f1& (0+255),b
  6757  002DC8  0E00               	movlw	0
  6758  002DCA  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6759  002DCC  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6760  002DCE  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6761  002DD0                     l3599:
  6762                           
  6763                           ; BSR set to: 0
  6764  002DD0  C060  F060         	movff	___fltol@f1,?___fltol
  6765  002DD4  C061  F061         	movff	___fltol@f1+1,?___fltol+1
  6766  002DD8  C062  F062         	movff	___fltol@f1+2,?___fltol+2
  6767  002DDC  C063  F063         	movff	___fltol@f1+3,?___fltol+3
  6768  002DE0                     l1003:
  6769                           
  6770                           ; BSR set to: 0
  6771  002DE0  0012               	return		;funcret
  6772  002DE2                     __end_of___fltol:
  6773                           	opt callstack 0
  6774                           
  6775 ;; *************** function ___awmod *****************
  6776 ;; Defined at:
  6777 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  6778 ;; Parameters:    Size  Location     Type
  6779 ;;  dividend        2    0[BANK0 ] int 
  6780 ;;  divisor         2    2[BANK0 ] int 
  6781 ;; Auto vars:     Size  Location     Type
  6782 ;;  sign            1    5[BANK0 ] unsigned char 
  6783 ;;  counter         1    4[BANK0 ] unsigned char 
  6784 ;; Return value:  Size  Location     Type
  6785 ;;                  2    0[BANK0 ] int 
  6786 ;; Registers used:
  6787 ;;		wreg, status,2, status,0
  6788 ;; Tracked objects:
  6789 ;;		On entry : 0/0
  6790 ;;		On exit  : 0/0
  6791 ;;		Unchanged: 0/0
  6792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6793 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6794 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6796 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6797 ;;Total ram usage:        6 bytes
  6798 ;; Hardware stack levels used:    1
  6799 ;; Hardware stack levels required when called:    5
  6800 ;; This function calls:
  6801 ;;		Nothing
  6802 ;; This function is called by:
  6803 ;;		_printTempAndHumid
  6804 ;;		_getSizeQueue
  6805 ;;		_dequeue
  6806 ;;		_check_humid_to_turn_fan
  6807 ;; This function uses a non-reentrant model
  6808 ;;
  6809                           
  6810                           	psect	text35
  6811  003064                     __ptext35:
  6812                           	opt callstack 0
  6813  003064                     ___awmod:
  6814                           	opt callstack 23
  6815  003064  0E00               	movlw	0
  6816  003066  0100               	movlb	0	; () banked
  6817  003068  6F65               	movwf	___awmod@sign& (0+255),b
  6818  00306A                     
  6819                           ; BSR set to: 0
  6820  00306A  BF61               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  6821  00306C  EF3C  F018         	goto	u1930
  6822  003070  EF3A  F018         	goto	u1931
  6823  003074                     u1931:
  6824  003074  EF42  F018         	goto	l2901
  6825  003078                     u1930:
  6826  003078                     
  6827                           ; BSR set to: 0
  6828  003078  6D60               	negf	___awmod@dividend& (0+255),b
  6829  00307A  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  6830  00307C  B0D8               	btfsc	status,0,c
  6831  00307E  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  6832  003080                     
  6833                           ; BSR set to: 0
  6834  003080  0E01               	movlw	1
  6835  003082  6F65               	movwf	___awmod@sign& (0+255),b
  6836  003084                     l2901:
  6837                           
  6838                           ; BSR set to: 0
  6839  003084  BF63               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  6840  003086  EF49  F018         	goto	u1940
  6841  00308A  EF47  F018         	goto	u1941
  6842  00308E                     u1941:
  6843  00308E  EF4D  F018         	goto	l2905
  6844  003092                     u1940:
  6845  003092                     
  6846                           ; BSR set to: 0
  6847  003092  6D62               	negf	___awmod@divisor& (0+255),b
  6848  003094  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  6849  003096  B0D8               	btfsc	status,0,c
  6850  003098  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  6851  00309A                     l2905:
  6852                           
  6853                           ; BSR set to: 0
  6854  00309A  5162               	movf	___awmod@divisor& (0+255),w,b
  6855  00309C  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  6856  00309E  B4D8               	btfsc	status,2,c
  6857  0030A0  EF54  F018         	goto	u1951
  6858  0030A4  EF56  F018         	goto	u1950
  6859  0030A8                     u1951:
  6860  0030A8  EF7A  F018         	goto	l2921
  6861  0030AC                     u1950:
  6862  0030AC                     
  6863                           ; BSR set to: 0
  6864  0030AC  0E01               	movlw	1
  6865  0030AE  6F64               	movwf	___awmod@counter& (0+255),b
  6866  0030B0  EF5E  F018         	goto	l2911
  6867  0030B4                     l2909:
  6868                           
  6869                           ; BSR set to: 0
  6870  0030B4  90D8               	bcf	status,0,c
  6871  0030B6  3762               	rlcf	___awmod@divisor& (0+255),f,b
  6872  0030B8  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  6873  0030BA  2B64               	incf	___awmod@counter& (0+255),f,b
  6874  0030BC                     l2911:
  6875                           
  6876                           ; BSR set to: 0
  6877  0030BC  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6878  0030BE  EF63  F018         	goto	u1961
  6879  0030C2  EF65  F018         	goto	u1960
  6880  0030C6                     u1961:
  6881  0030C6  EF5A  F018         	goto	l2909
  6882  0030CA                     u1960:
  6883  0030CA                     l2913:
  6884                           
  6885                           ; BSR set to: 0
  6886  0030CA  5162               	movf	___awmod@divisor& (0+255),w,b
  6887  0030CC  5D60               	subwf	___awmod@dividend& (0+255),w,b
  6888  0030CE  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  6889  0030D0  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  6890  0030D2  A0D8               	btfss	status,0,c
  6891  0030D4  EF6E  F018         	goto	u1971
  6892  0030D8  EF70  F018         	goto	u1970
  6893  0030DC                     u1971:
  6894  0030DC  EF74  F018         	goto	l2917
  6895  0030E0                     u1970:
  6896  0030E0                     
  6897                           ; BSR set to: 0
  6898  0030E0  5162               	movf	___awmod@divisor& (0+255),w,b
  6899  0030E2  5F60               	subwf	___awmod@dividend& (0+255),f,b
  6900  0030E4  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  6901  0030E6  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  6902  0030E8                     l2917:
  6903                           
  6904                           ; BSR set to: 0
  6905  0030E8  90D8               	bcf	status,0,c
  6906  0030EA  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  6907  0030EC  3362               	rrcf	___awmod@divisor& (0+255),f,b
  6908  0030EE                     
  6909                           ; BSR set to: 0
  6910  0030EE  2F64               	decfsz	___awmod@counter& (0+255),f,b
  6911  0030F0  EF65  F018         	goto	l2913
  6912  0030F4                     l2921:
  6913                           
  6914                           ; BSR set to: 0
  6915  0030F4  5165               	movf	___awmod@sign& (0+255),w,b
  6916  0030F6  B4D8               	btfsc	status,2,c
  6917  0030F8  EF80  F018         	goto	u1981
  6918  0030FC  EF82  F018         	goto	u1980
  6919  003100                     u1981:
  6920  003100  EF86  F018         	goto	l2925
  6921  003104                     u1980:
  6922  003104                     
  6923                           ; BSR set to: 0
  6924  003104  6D60               	negf	___awmod@dividend& (0+255),b
  6925  003106  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  6926  003108  B0D8               	btfsc	status,0,c
  6927  00310A  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  6928  00310C                     l2925:
  6929                           
  6930                           ; BSR set to: 0
  6931  00310C  C060  F060         	movff	___awmod@dividend,?___awmod
  6932  003110  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  6933  003114                     
  6934                           ; BSR set to: 0
  6935  003114  0012               	return		;funcret
  6936  003116                     __end_of___awmod:
  6937                           	opt callstack 0
  6938                           
  6939 ;; *************** function ___awdiv *****************
  6940 ;; Defined at:
  6941 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  6942 ;; Parameters:    Size  Location     Type
  6943 ;;  dividend        2    0[BANK0 ] int 
  6944 ;;  divisor         2    2[BANK0 ] int 
  6945 ;; Auto vars:     Size  Location     Type
  6946 ;;  quotient        2    6[BANK0 ] int 
  6947 ;;  sign            1    5[BANK0 ] unsigned char 
  6948 ;;  counter         1    4[BANK0 ] unsigned char 
  6949 ;; Return value:  Size  Location     Type
  6950 ;;                  2    0[BANK0 ] int 
  6951 ;; Registers used:
  6952 ;;		wreg, status,2, status,0
  6953 ;; Tracked objects:
  6954 ;;		On entry : 0/0
  6955 ;;		On exit  : 0/0
  6956 ;;		Unchanged: 0/0
  6957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6958 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6959 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6961 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6962 ;;Total ram usage:        8 bytes
  6963 ;; Hardware stack levels used:    1
  6964 ;; Hardware stack levels required when called:    5
  6965 ;; This function calls:
  6966 ;;		Nothing
  6967 ;; This function is called by:
  6968 ;;		_printTempAndHumid
  6969 ;;		_check_humid_to_turn_fan
  6970 ;; This function uses a non-reentrant model
  6971 ;;
  6972                           
  6973                           	psect	text36
  6974  002F9E                     __ptext36:
  6975                           	opt callstack 0
  6976  002F9E                     ___awdiv:
  6977                           	opt callstack 23
  6978  002F9E  0E00               	movlw	0
  6979  002FA0  0100               	movlb	0	; () banked
  6980  002FA2  6F65               	movwf	___awdiv@sign& (0+255),b
  6981  002FA4                     
  6982                           ; BSR set to: 0
  6983  002FA4  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  6984  002FA6  EFD9  F017         	goto	u2910
  6985  002FAA  EFD7  F017         	goto	u2911
  6986  002FAE                     u2911:
  6987  002FAE  EFDF  F017         	goto	l3507
  6988  002FB2                     u2910:
  6989  002FB2                     
  6990                           ; BSR set to: 0
  6991  002FB2  6D62               	negf	___awdiv@divisor& (0+255),b
  6992  002FB4  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6993  002FB6  B0D8               	btfsc	status,0,c
  6994  002FB8  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6995  002FBA                     
  6996                           ; BSR set to: 0
  6997  002FBA  0E01               	movlw	1
  6998  002FBC  6F65               	movwf	___awdiv@sign& (0+255),b
  6999  002FBE                     l3507:
  7000                           
  7001                           ; BSR set to: 0
  7002  002FBE  BF61               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  7003  002FC0  EFE6  F017         	goto	u2920
  7004  002FC4  EFE4  F017         	goto	u2921
  7005  002FC8                     u2921:
  7006  002FC8  EFEC  F017         	goto	l3513
  7007  002FCC                     u2920:
  7008  002FCC                     
  7009                           ; BSR set to: 0
  7010  002FCC  6D60               	negf	___awdiv@dividend& (0+255),b
  7011  002FCE  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7012  002FD0  B0D8               	btfsc	status,0,c
  7013  002FD2  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7014  002FD4                     
  7015                           ; BSR set to: 0
  7016  002FD4  0E01               	movlw	1
  7017  002FD6  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  7018  002FD8                     l3513:
  7019                           
  7020                           ; BSR set to: 0
  7021  002FD8  0E00               	movlw	0
  7022  002FDA  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  7023  002FDC  0E00               	movlw	0
  7024  002FDE  6F66               	movwf	___awdiv@quotient& (0+255),b
  7025  002FE0                     
  7026                           ; BSR set to: 0
  7027  002FE0  5162               	movf	___awdiv@divisor& (0+255),w,b
  7028  002FE2  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7029  002FE4  B4D8               	btfsc	status,2,c
  7030  002FE6  EFF7  F017         	goto	u2931
  7031  002FEA  EFF9  F017         	goto	u2930
  7032  002FEE                     u2931:
  7033  002FEE  EF21  F018         	goto	l3535
  7034  002FF2                     u2930:
  7035  002FF2                     
  7036                           ; BSR set to: 0
  7037  002FF2  0E01               	movlw	1
  7038  002FF4  6F64               	movwf	___awdiv@counter& (0+255),b
  7039  002FF6  EF01  F018         	goto	l3521
  7040  002FFA                     l3519:
  7041                           
  7042                           ; BSR set to: 0
  7043  002FFA  90D8               	bcf	status,0,c
  7044  002FFC  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  7045  002FFE  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7046  003000  2B64               	incf	___awdiv@counter& (0+255),f,b
  7047  003002                     l3521:
  7048                           
  7049                           ; BSR set to: 0
  7050  003002  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7051  003004  EF06  F018         	goto	u2941
  7052  003008  EF08  F018         	goto	u2940
  7053  00300C                     u2941:
  7054  00300C  EFFD  F017         	goto	l3519
  7055  003010                     u2940:
  7056  003010                     l3523:
  7057                           
  7058                           ; BSR set to: 0
  7059  003010  90D8               	bcf	status,0,c
  7060  003012  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  7061  003014  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7062  003016                     
  7063                           ; BSR set to: 0
  7064  003016  5162               	movf	___awdiv@divisor& (0+255),w,b
  7065  003018  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  7066  00301A  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7067  00301C  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7068  00301E  A0D8               	btfss	status,0,c
  7069  003020  EF14  F018         	goto	u2951
  7070  003024  EF16  F018         	goto	u2950
  7071  003028                     u2951:
  7072  003028  EF1B  F018         	goto	l3531
  7073  00302C                     u2950:
  7074  00302C                     
  7075                           ; BSR set to: 0
  7076  00302C  5162               	movf	___awdiv@divisor& (0+255),w,b
  7077  00302E  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  7078  003030  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7079  003032  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7080  003034                     
  7081                           ; BSR set to: 0
  7082  003034  8166               	bsf	___awdiv@quotient& (0+255),0,b
  7083  003036                     l3531:
  7084                           
  7085                           ; BSR set to: 0
  7086  003036  90D8               	bcf	status,0,c
  7087  003038  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7088  00303A  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  7089  00303C                     
  7090                           ; BSR set to: 0
  7091  00303C  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  7092  00303E  EF08  F018         	goto	l3523
  7093  003042                     l3535:
  7094                           
  7095                           ; BSR set to: 0
  7096  003042  5165               	movf	___awdiv@sign& (0+255),w,b
  7097  003044  B4D8               	btfsc	status,2,c
  7098  003046  EF27  F018         	goto	u2961
  7099  00304A  EF29  F018         	goto	u2960
  7100  00304E                     u2961:
  7101  00304E  EF2D  F018         	goto	l3539
  7102  003052                     u2960:
  7103  003052                     
  7104                           ; BSR set to: 0
  7105  003052  6D66               	negf	___awdiv@quotient& (0+255),b
  7106  003054  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7107  003056  B0D8               	btfsc	status,0,c
  7108  003058  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7109  00305A                     l3539:
  7110                           
  7111                           ; BSR set to: 0
  7112  00305A  C066  F060         	movff	___awdiv@quotient,?___awdiv
  7113  00305E  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  7114  003062                     
  7115                           ; BSR set to: 0
  7116  003062  0012               	return		;funcret
  7117  003064                     __end_of___awdiv:
  7118                           	opt callstack 0
  7119                           
  7120 ;; *************** function _LCDPrintChar *****************
  7121 ;; Defined at:
  7122 ;;		line 239 in file "lcd.c"
  7123 ;; Parameters:    Size  Location     Type
  7124 ;;  line            1    wreg     unsigned char 
  7125 ;;  pos             1   11[BANK0 ] unsigned char 
  7126 ;;  ch              1   12[BANK0 ] unsigned char 
  7127 ;; Auto vars:     Size  Location     Type
  7128 ;;  line            1   13[BANK0 ] unsigned char 
  7129 ;; Return value:  Size  Location     Type
  7130 ;;                  1    wreg      void 
  7131 ;; Registers used:
  7132 ;;		wreg, status,2, status,0, cstack
  7133 ;; Tracked objects:
  7134 ;;		On entry : 0/0
  7135 ;;		On exit  : 0/0
  7136 ;;		Unchanged: 0/0
  7137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7138 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7139 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7141 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7142 ;;Total ram usage:        3 bytes
  7143 ;; Hardware stack levels used:    1
  7144 ;; Hardware stack levels required when called:    9
  7145 ;; This function calls:
  7146 ;;		_LCDMoveCursor
  7147 ;;		_LCDPutChar
  7148 ;; This function is called by:
  7149 ;;		_printTempAndHumid
  7150 ;;		_check_humid_to_turn_fan
  7151 ;; This function uses a non-reentrant model
  7152 ;;
  7153                           
  7154                           	psect	text37
  7155  003A38                     __ptext37:
  7156                           	opt callstack 0
  7157  003A38                     _LCDPrintChar:
  7158                           	opt callstack 19
  7159                           
  7160                           ; BSR set to: 0
  7161                           ;incstack = 0
  7162                           ;LCDPrintChar@line stored from wreg
  7163  003A38  0100               	movlb	0	; () banked
  7164  003A3A  6F6D               	movwf	LCDPrintChar@line& (0+255),b
  7165  003A3C                     
  7166                           ;lcd.c: 240:     if(line <0 || line > 2 || pos < 0 || pos > 15)
  7167  003A3C  0E03               	movlw	3
  7168  003A3E  0100               	movlb	0	; () banked
  7169  003A40  616D               	cpfslt	LCDPrintChar@line& (0+255),b
  7170  003A42  EF25  F01D         	goto	u2551
  7171  003A46  EF27  F01D         	goto	u2550
  7172  003A4A                     u2551:
  7173  003A4A  EF3A  F01D         	goto	l253
  7174  003A4E                     u2550:
  7175  003A4E                     
  7176                           ; BSR set to: 0
  7177  003A4E  0E0F               	movlw	15
  7178  003A50  656B               	cpfsgt	LCDPrintChar@pos& (0+255),b
  7179  003A52  EF2D  F01D         	goto	u2561
  7180  003A56  EF2F  F01D         	goto	u2560
  7181  003A5A                     u2561:
  7182  003A5A  EF31  F01D         	goto	l3249
  7183  003A5E                     u2560:
  7184  003A5E  EF3A  F01D         	goto	l253
  7185  003A62                     l3249:
  7186                           
  7187                           ; BSR set to: 0
  7188                           ;lcd.c: 242:     LCDMoveCursor(line, pos);
  7189  003A62  C06B  F066         	movff	LCDPrintChar@pos,LCDMoveCursor@pos
  7190  003A66  516D               	movf	LCDPrintChar@line& (0+255),w,b
  7191  003A68  EC3B  F01D         	call	_LCDMoveCursor
  7192                           
  7193                           ;lcd.c: 243:     LCDPutChar(ch);
  7194  003A6C  0100               	movlb	0	; () banked
  7195  003A6E  516C               	movf	LCDPrintChar@ch& (0+255),w,b
  7196  003A70  EC7A  F01C         	call	_LCDPutChar
  7197  003A74                     l253:
  7198  003A74  0012               	return		;funcret
  7199  003A76                     __end_of_LCDPrintChar:
  7200                           	opt callstack 0
  7201                           
  7202 ;; *************** function _changeState *****************
  7203 ;; Defined at:
  7204 ;;		line 63 in file "FSM.c"
  7205 ;; Parameters:    Size  Location     Type
  7206 ;;		None
  7207 ;; Auto vars:     Size  Location     Type
  7208 ;;		None
  7209 ;; Return value:  Size  Location     Type
  7210 ;;                  1    wreg      void 
  7211 ;; Registers used:
  7212 ;;		wreg, status,2, status,0
  7213 ;; Tracked objects:
  7214 ;;		On entry : 0/0
  7215 ;;		On exit  : 0/0
  7216 ;;		Unchanged: 0/0
  7217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7222 ;;Total ram usage:        0 bytes
  7223 ;; Hardware stack levels used:    1
  7224 ;; Hardware stack levels required when called:    5
  7225 ;; This function calls:
  7226 ;;		Nothing
  7227 ;; This function is called by:
  7228 ;;		_system_setup
  7229 ;;		_dispatch
  7230 ;; This function uses a non-reentrant model
  7231 ;;
  7232                           
  7233                           	psect	text38
  7234  003AEA                     __ptext38:
  7235                           	opt callstack 0
  7236  003AEA                     _changeState:
  7237                           	opt callstack 24
  7238  003AEA                     
  7239                           ;FSM.c: 64:     if(state != HEATER || state != HEAT_PUMP)
  7240  003AEA  0100               	movlb	0	; () banked
  7241  003AEC  05CA               	decf	_state& (0+255),w,b	;volatile
  7242  003AEE  A4D8               	btfss	status,2,c
  7243  003AF0  EF7C  F01D         	goto	u3431
  7244  003AF4  EF7E  F01D         	goto	u3430
  7245  003AF8                     u3431:
  7246  003AF8  EF8B  F01D         	goto	l685
  7247  003AFC                     u3430:
  7248  003AFC                     
  7249                           ; BSR set to: 0
  7250  003AFC  0E02               	movlw	2
  7251  003AFE  19CA               	xorwf	_state& (0+255),w,b	;volatile
  7252  003B00  B4D8               	btfsc	status,2,c
  7253  003B02  EF85  F01D         	goto	u3441
  7254  003B06  EF87  F01D         	goto	u3440
  7255  003B0A                     u3441:
  7256  003B0A  EF89  F01D         	goto	l3935
  7257  003B0E                     u3440:
  7258  003B0E  EF8B  F01D         	goto	l685
  7259  003B12                     l3935:
  7260                           
  7261                           ; BSR set to: 0
  7262                           ;FSM.c: 68:     flag_switch_state = 1;
  7263  003B12  0E01               	movlw	1
  7264  003B14  6FC9               	movwf	_flag_switch_state& (0+255),b
  7265  003B16                     l685:
  7266                           
  7267                           ; BSR set to: 0
  7268  003B16  0012               	return		;funcret
  7269  003B18                     __end_of_changeState:
  7270                           	opt callstack 0
  7271                           
  7272 ;; *************** function _FSM *****************
  7273 ;; Defined at:
  7274 ;;		line 82 in file "FSM.c"
  7275 ;; Parameters:    Size  Location     Type
  7276 ;;		None
  7277 ;; Auto vars:     Size  Location     Type
  7278 ;;		None
  7279 ;; Return value:  Size  Location     Type
  7280 ;;                  1    wreg      void 
  7281 ;; Registers used:
  7282 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7283 ;; Tracked objects:
  7284 ;;		On entry : 0/0
  7285 ;;		On exit  : 0/0
  7286 ;;		Unchanged: 0/0
  7287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7290 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7291 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7292 ;;Total ram usage:        2 bytes
  7293 ;; Hardware stack levels used:    1
  7294 ;; Hardware stack levels required when called:   10
  7295 ;; This function calls:
  7296 ;;		_LCDPrint
  7297 ;;		_SET_TIMER_state
  7298 ;;		_get_time
  7299 ;;		_turn_off_heat_pump
  7300 ;;		_turn_off_heater
  7301 ;;		_turn_on_fan
  7302 ;;		_turn_on_heat_pump
  7303 ;;		_turn_on_heater
  7304 ;; This function is called by:
  7305 ;;		_main
  7306 ;; This function uses a non-reentrant model
  7307 ;;
  7308                           
  7309                           	psect	text39
  7310  002812                     __ptext39:
  7311                           	opt callstack 0
  7312  002812                     _FSM:
  7313                           	opt callstack 20
  7314  002812                     
  7315                           ;FSM.c: 83:     switch(state) {
  7316  002812  EF94  F014         	goto	l4031
  7317  002816                     l3983:
  7318                           
  7319                           ; BSR set to: 0
  7320                           ;FSM.c: 85:             if(RA5_pressed) {
  7321  002816  51CC               	movf	_RA5_pressed& (0+255),w,b
  7322  002818  B4D8               	btfsc	status,2,c
  7323  00281A  EF11  F014         	goto	u3511
  7324  00281E  EF13  F014         	goto	u3510
  7325  002822                     u3511:
  7326  002822  EFB2  F014         	goto	l703
  7327  002826                     u3510:
  7328  002826                     
  7329                           ; BSR set to: 0
  7330                           ;FSM.c: 86:                 RA5_pressed = 0;
  7331  002826  0E00               	movlw	0
  7332  002828  6FCC               	movwf	_RA5_pressed& (0+255),b
  7333                           
  7334                           ;FSM.c: 88:                 state = HEATER;
  7335  00282A  0E01               	movlw	1
  7336  00282C  6FCA               	movwf	_state& (0+255),b	;volatile
  7337  00282E                     
  7338                           ; BSR set to: 0
  7339                           ;FSM.c: 89:                 turn_on_heater();
  7340  00282E  EC6F  F01E         	call	_turn_on_heater	;wreg free
  7341  002832                     
  7342                           ;FSM.c: 90:                 turn_on_fan(1);
  7343  002832  0E00               	movlw	0
  7344  002834  0100               	movlb	0	; () banked
  7345  002836  6F61               	movwf	(turn_on_fan@idx+1)& (0+255),b
  7346  002838  0E01               	movlw	1
  7347  00283A  6F60               	movwf	turn_on_fan@idx& (0+255),b
  7348  00283C  ECDC  F01C         	call	_turn_on_fan	;wreg free
  7349  002840                     
  7350                           ;FSM.c: 92:                 LCDPrint(0, 0, "Heater");
  7351  002840  0E00               	movlw	0
  7352  002842  0100               	movlb	0	; () banked
  7353  002844  6F6B               	movwf	LCDPrint@pos& (0+255),b
  7354  002846  0E36               	movlw	low STR_7
  7355  002848  6F6C               	movwf	LCDPrint@ptr& (0+255),b
  7356  00284A  0E10               	movlw	high STR_7
  7357  00284C  6F6D               	movwf	(LCDPrint@ptr+1)& (0+255),b
  7358  00284E  0E00               	movlw	0
  7359  002850  EC59  F01C         	call	_LCDPrint
  7360  002854                     
  7361                           ;FSM.c: 93:                 count_timeout = get_time();
  7362  002854  EC50  F01E         	call	_get_time	;wreg free
  7363  002858  C060  F0B9         	movff	?_get_time,_count_timeout
  7364  00285C  C061  F0BA         	movff	?_get_time+1,_count_timeout+1
  7365  002860  C062  F0BB         	movff	?_get_time+2,_count_timeout+2
  7366  002864  C063  F0BC         	movff	?_get_time+3,_count_timeout+3
  7367  002868  EFB2  F014         	goto	l703
  7368  00286C                     l3995:
  7369                           
  7370                           ; BSR set to: 0
  7371                           ;FSM.c: 97:             if(flag_switch_state) {
  7372  00286C  51C9               	movf	_flag_switch_state& (0+255),w,b
  7373  00286E  B4D8               	btfsc	status,2,c
  7374  002870  EF3C  F014         	goto	u3521
  7375  002874  EF3E  F014         	goto	u3520
  7376  002878                     u3521:
  7377  002878  EFB2  F014         	goto	l703
  7378  00287C                     u3520:
  7379  00287C                     
  7380                           ; BSR set to: 0
  7381                           ;FSM.c: 98:                 flag_switch_state = 0;
  7382  00287C  0E00               	movlw	0
  7383  00287E  6FC9               	movwf	_flag_switch_state& (0+255),b
  7384  002880                     
  7385                           ; BSR set to: 0
  7386                           ;FSM.c: 101:                 LCDPrint(0, 0, "Heat Pump");
  7387  002880  0E00               	movlw	0
  7388  002882  6F6B               	movwf	LCDPrint@pos& (0+255),b
  7389  002884  0E23               	movlw	low STR_9
  7390  002886  6F6C               	movwf	LCDPrint@ptr& (0+255),b
  7391  002888  0E10               	movlw	high STR_9
  7392  00288A  6F6D               	movwf	(LCDPrint@ptr+1)& (0+255),b
  7393  00288C  0E00               	movlw	0
  7394  00288E  EC59  F01C         	call	_LCDPrint
  7395  002892                     
  7396                           ;FSM.c: 102:                 state = HEAT_PUMP;
  7397  002892  0E02               	movlw	2
  7398  002894  0100               	movlb	0	; () banked
  7399  002896  6FCA               	movwf	_state& (0+255),b	;volatile
  7400  002898                     
  7401                           ; BSR set to: 0
  7402                           ;FSM.c: 103:                 count_timeout = get_time();
  7403  002898  EC50  F01E         	call	_get_time	;wreg free
  7404  00289C  C060  F0B9         	movff	?_get_time,_count_timeout
  7405  0028A0  C061  F0BA         	movff	?_get_time+1,_count_timeout+1
  7406  0028A4  C062  F0BB         	movff	?_get_time+2,_count_timeout+2
  7407  0028A8  C063  F0BC         	movff	?_get_time+3,_count_timeout+3
  7408  0028AC                     
  7409                           ;FSM.c: 104:                 turn_off_heater();
  7410  0028AC  EC73  F01E         	call	_turn_off_heater	;wreg free
  7411  0028B0                     
  7412                           ;FSM.c: 105:                 turn_on_heat_pump();
  7413  0028B0  EC71  F01E         	call	_turn_on_heat_pump	;wreg free
  7414  0028B4                     
  7415                           ;FSM.c: 106:                 turn_on_fan(2);
  7416  0028B4  0E00               	movlw	0
  7417  0028B6  0100               	movlb	0	; () banked
  7418  0028B8  6F61               	movwf	(turn_on_fan@idx+1)& (0+255),b
  7419  0028BA  0E02               	movlw	2
  7420  0028BC  6F60               	movwf	turn_on_fan@idx& (0+255),b
  7421  0028BE  ECDC  F01C         	call	_turn_on_fan	;wreg free
  7422  0028C2  EFB2  F014         	goto	l703
  7423  0028C6                     l4011:
  7424                           
  7425                           ; BSR set to: 0
  7426                           ;FSM.c: 110:             if(flag_switch_state) {
  7427  0028C6  51C9               	movf	_flag_switch_state& (0+255),w,b
  7428  0028C8  B4D8               	btfsc	status,2,c
  7429  0028CA  EF69  F014         	goto	u3531
  7430  0028CE  EF6B  F014         	goto	u3530
  7431  0028D2                     u3531:
  7432  0028D2  EFB2  F014         	goto	l703
  7433  0028D6                     u3530:
  7434  0028D6                     
  7435                           ; BSR set to: 0
  7436                           ;FSM.c: 111:                 flag_switch_state = 0;
  7437  0028D6  0E00               	movlw	0
  7438  0028D8  6FC9               	movwf	_flag_switch_state& (0+255),b
  7439  0028DA                     
  7440                           ; BSR set to: 0
  7441                           ;FSM.c: 114:                 LCDPrint(0, 0, "Heater");
  7442  0028DA  0E00               	movlw	0
  7443  0028DC  6F6B               	movwf	LCDPrint@pos& (0+255),b
  7444  0028DE  0E36               	movlw	low STR_7
  7445  0028E0  6F6C               	movwf	LCDPrint@ptr& (0+255),b
  7446  0028E2  0E10               	movlw	high STR_7
  7447  0028E4  6F6D               	movwf	(LCDPrint@ptr+1)& (0+255),b
  7448  0028E6  0E00               	movlw	0
  7449  0028E8  EC59  F01C         	call	_LCDPrint
  7450  0028EC                     
  7451                           ;FSM.c: 115:                 count_timeout = get_time();
  7452  0028EC  EC50  F01E         	call	_get_time	;wreg free
  7453  0028F0  C060  F0B9         	movff	?_get_time,_count_timeout
  7454  0028F4  C061  F0BA         	movff	?_get_time+1,_count_timeout+1
  7455  0028F8  C062  F0BB         	movff	?_get_time+2,_count_timeout+2
  7456  0028FC  C063  F0BC         	movff	?_get_time+3,_count_timeout+3
  7457  002900                     
  7458                           ;FSM.c: 116:                 state = HEATER;
  7459  002900  0E01               	movlw	1
  7460  002902  0100               	movlb	0	; () banked
  7461  002904  6FCA               	movwf	_state& (0+255),b	;volatile
  7462  002906                     
  7463                           ; BSR set to: 0
  7464                           ;FSM.c: 117:                 turn_off_heat_pump();
  7465  002906  EC75  F01E         	call	_turn_off_heat_pump	;wreg free
  7466  00290A                     
  7467                           ;FSM.c: 118:                 turn_on_heater();
  7468  00290A  EC6F  F01E         	call	_turn_on_heater	;wreg free
  7469  00290E                     
  7470                           ;FSM.c: 119:                 turn_on_fan(1);
  7471  00290E  0E00               	movlw	0
  7472  002910  0100               	movlb	0	; () banked
  7473  002912  6F61               	movwf	(turn_on_fan@idx+1)& (0+255),b
  7474  002914  0E01               	movlw	1
  7475  002916  6F60               	movwf	turn_on_fan@idx& (0+255),b
  7476  002918  ECDC  F01C         	call	_turn_on_fan	;wreg free
  7477  00291C  EFB2  F014         	goto	l703
  7478  002920                     l4027:
  7479                           
  7480                           ; BSR set to: 0
  7481                           ;FSM.c: 123:             SET_TIMER_state();
  7482  002920  EC77  F01E         	call	_SET_TIMER_state	;wreg free
  7483                           
  7484                           ;FSM.c: 124:             break;
  7485  002924  EFB2  F014         	goto	l703
  7486  002928                     l4031:
  7487  002928  0100               	movlb	0	; () banked
  7488  00292A  51CA               	movf	_state& (0+255),w,b	;volatile
  7489  00292C  6F6F               	movwf	??_FSM& (0+255),b
  7490  00292E  6B70               	clrf	(??_FSM+1)& (0+255),b
  7491                           
  7492                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7493                           ; Switch size 1, requested type "simple"
  7494                           ; Number of cases is 1, Range of values is 0 to 0
  7495                           ; switch strategies available:
  7496                           ; Name         Instructions Cycles
  7497                           ; simple_byte            4     3 (average)
  7498                           ;	Chosen strategy is simple_byte
  7499  002930  5170               	movf	(??_FSM+1)& (0+255),w,b
  7500  002932  0A00               	xorlw	0	; case 0
  7501  002934  B4D8               	btfsc	status,2,c
  7502  002936  EF9F  F014         	goto	l4355
  7503  00293A  EFB2  F014         	goto	l703
  7504  00293E                     l4355:
  7505                           
  7506                           ; BSR set to: 0
  7507                           ; Switch size 1, requested type "simple"
  7508                           ; Number of cases is 4, Range of values is 0 to 3
  7509                           ; switch strategies available:
  7510                           ; Name         Instructions Cycles
  7511                           ; simple_byte           13     7 (average)
  7512                           ;	Chosen strategy is simple_byte
  7513  00293E  516F               	movf	??_FSM& (0+255),w,b
  7514  002940  0A00               	xorlw	0	; case 0
  7515  002942  B4D8               	btfsc	status,2,c
  7516  002944  EF0B  F014         	goto	l3983
  7517  002948  0A01               	xorlw	1	; case 1
  7518  00294A  B4D8               	btfsc	status,2,c
  7519  00294C  EF36  F014         	goto	l3995
  7520  002950  0A03               	xorlw	3	; case 2
  7521  002952  B4D8               	btfsc	status,2,c
  7522  002954  EF63  F014         	goto	l4011
  7523  002958  0A01               	xorlw	1	; case 3
  7524  00295A  B4D8               	btfsc	status,2,c
  7525  00295C  EF90  F014         	goto	l4027
  7526  002960  EFB2  F014         	goto	l703
  7527  002964                     l703:
  7528  002964  0012               	return		;funcret
  7529  002966                     __end_of_FSM:
  7530                           	opt callstack 0
  7531                           
  7532 ;; *************** function _turn_on_heater *****************
  7533 ;; Defined at:
  7534 ;;		line 9 in file "LTDtask.c"
  7535 ;; Parameters:    Size  Location     Type
  7536 ;;		None
  7537 ;; Auto vars:     Size  Location     Type
  7538 ;;		None
  7539 ;; Return value:  Size  Location     Type
  7540 ;;                  1    wreg      void 
  7541 ;; Registers used:
  7542 ;;		None
  7543 ;; Tracked objects:
  7544 ;;		On entry : 0/0
  7545 ;;		On exit  : 0/0
  7546 ;;		Unchanged: 0/0
  7547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7552 ;;Total ram usage:        0 bytes
  7553 ;; Hardware stack levels used:    1
  7554 ;; Hardware stack levels required when called:    5
  7555 ;; This function calls:
  7556 ;;		Nothing
  7557 ;; This function is called by:
  7558 ;;		_FSM
  7559 ;;		_IDLE_state
  7560 ;;		_HEAT_PUMP_state
  7561 ;; This function uses a non-reentrant model
  7562 ;;
  7563                           
  7564                           	psect	text40
  7565  003CDE                     __ptext40:
  7566                           	opt callstack 0
  7567  003CDE                     _turn_on_heater:
  7568                           	opt callstack 24
  7569  003CDE                     
  7570                           ;LTDtask.c: 10:     LATDbits.LATD0 = 1;
  7571  003CDE  808C               	bsf	140,0,c	;volatile
  7572  003CE0  0012               	return		;funcret
  7573  003CE2                     __end_of_turn_on_heater:
  7574                           	opt callstack 0
  7575                           
  7576 ;; *************** function _turn_on_heat_pump *****************
  7577 ;; Defined at:
  7578 ;;		line 17 in file "LTDtask.c"
  7579 ;; Parameters:    Size  Location     Type
  7580 ;;		None
  7581 ;; Auto vars:     Size  Location     Type
  7582 ;;		None
  7583 ;; Return value:  Size  Location     Type
  7584 ;;                  1    wreg      void 
  7585 ;; Registers used:
  7586 ;;		None
  7587 ;; Tracked objects:
  7588 ;;		On entry : 0/0
  7589 ;;		On exit  : 0/0
  7590 ;;		Unchanged: 0/0
  7591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7596 ;;Total ram usage:        0 bytes
  7597 ;; Hardware stack levels used:    1
  7598 ;; Hardware stack levels required when called:    5
  7599 ;; This function calls:
  7600 ;;		Nothing
  7601 ;; This function is called by:
  7602 ;;		_FSM
  7603 ;;		_HEATER_state
  7604 ;; This function uses a non-reentrant model
  7605 ;;
  7606                           
  7607                           	psect	text41
  7608  003CE2                     __ptext41:
  7609                           	opt callstack 0
  7610  003CE2                     _turn_on_heat_pump:
  7611                           	opt callstack 24
  7612  003CE2                     
  7613                           ;LTDtask.c: 18:     LATDbits.LATD1 = 1;
  7614  003CE2  828C               	bsf	140,1,c	;volatile
  7615  003CE4  0012               	return		;funcret
  7616  003CE6                     __end_of_turn_on_heat_pump:
  7617                           	opt callstack 0
  7618                           
  7619 ;; *************** function _turn_on_fan *****************
  7620 ;; Defined at:
  7621 ;;		line 25 in file "LTDtask.c"
  7622 ;; Parameters:    Size  Location     Type
  7623 ;;  idx             2    0[BANK0 ] int 
  7624 ;; Auto vars:     Size  Location     Type
  7625 ;;		None
  7626 ;; Return value:  Size  Location     Type
  7627 ;;                  1    wreg      void 
  7628 ;; Registers used:
  7629 ;;		wreg, status,2, status,0
  7630 ;; Tracked objects:
  7631 ;;		On entry : 0/0
  7632 ;;		On exit  : 0/0
  7633 ;;		Unchanged: 0/0
  7634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7635 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7637 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7638 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7639 ;;Total ram usage:        4 bytes
  7640 ;; Hardware stack levels used:    1
  7641 ;; Hardware stack levels required when called:    5
  7642 ;; This function calls:
  7643 ;;		Nothing
  7644 ;; This function is called by:
  7645 ;;		_FSM
  7646 ;;		_IDLE_state
  7647 ;;		_HEATER_state
  7648 ;;		_HEAT_PUMP_state
  7649 ;; This function uses a non-reentrant model
  7650 ;;
  7651                           
  7652                           	psect	text42
  7653  0039B8                     __ptext42:
  7654                           	opt callstack 0
  7655  0039B8                     _turn_on_fan:
  7656                           	opt callstack 24
  7657  0039B8                     
  7658                           ;LTDtask.c: 26:     switch (idx) {
  7659  0039B8  EFE4  F01C         	goto	l3913
  7660  0039BC                     l597:
  7661                           
  7662                           ; BSR set to: 0
  7663                           ;LTDtask.c: 28:             LATDbits.LATD7 = 1;
  7664  0039BC  8E8C               	bsf	140,7,c	;volatile
  7665                           
  7666                           ;LTDtask.c: 29:             break;
  7667  0039BE  EFFB  F01C         	goto	l600
  7668  0039C2                     l599:
  7669                           
  7670                           ; BSR set to: 0
  7671                           ;LTDtask.c: 31:             LATDbits.LATD6 = 1;
  7672  0039C2  8C8C               	bsf	140,6,c	;volatile
  7673                           
  7674                           ;LTDtask.c: 32:             break;
  7675  0039C4  EFFB  F01C         	goto	l600
  7676  0039C8                     l3913:
  7677  0039C8  C060  F062         	movff	turn_on_fan@idx,??_turn_on_fan
  7678  0039CC  C061  F063         	movff	turn_on_fan@idx+1,??_turn_on_fan+1
  7679                           
  7680                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7681                           ; Switch size 1, requested type "simple"
  7682                           ; Number of cases is 1, Range of values is 0 to 0
  7683                           ; switch strategies available:
  7684                           ; Name         Instructions Cycles
  7685                           ; simple_byte            4     3 (average)
  7686                           ;	Chosen strategy is simple_byte
  7687  0039D0  0100               	movlb	0	; () banked
  7688  0039D2  5163               	movf	(??_turn_on_fan+1)& (0+255),w,b
  7689  0039D4  0A00               	xorlw	0	; case 0
  7690  0039D6  B4D8               	btfsc	status,2,c
  7691  0039D8  EFF0  F01C         	goto	l4357
  7692  0039DC  EFFB  F01C         	goto	l600
  7693  0039E0                     l4357:
  7694                           
  7695                           ; BSR set to: 0
  7696                           ; Switch size 1, requested type "simple"
  7697                           ; Number of cases is 2, Range of values is 1 to 2
  7698                           ; switch strategies available:
  7699                           ; Name         Instructions Cycles
  7700                           ; simple_byte            7     4 (average)
  7701                           ;	Chosen strategy is simple_byte
  7702  0039E0  5162               	movf	??_turn_on_fan& (0+255),w,b
  7703  0039E2  0A01               	xorlw	1	; case 1
  7704  0039E4  B4D8               	btfsc	status,2,c
  7705  0039E6  EFDE  F01C         	goto	l597
  7706  0039EA  0A03               	xorlw	3	; case 2
  7707  0039EC  B4D8               	btfsc	status,2,c
  7708  0039EE  EFE1  F01C         	goto	l599
  7709  0039F2  EFFB  F01C         	goto	l600
  7710  0039F6                     l600:
  7711                           
  7712                           ; BSR set to: 0
  7713  0039F6  0012               	return		;funcret
  7714  0039F8                     __end_of_turn_on_fan:
  7715                           	opt callstack 0
  7716                           
  7717 ;; *************** function _turn_off_heater *****************
  7718 ;; Defined at:
  7719 ;;		line 13 in file "LTDtask.c"
  7720 ;; Parameters:    Size  Location     Type
  7721 ;;		None
  7722 ;; Auto vars:     Size  Location     Type
  7723 ;;		None
  7724 ;; Return value:  Size  Location     Type
  7725 ;;                  1    wreg      void 
  7726 ;; Registers used:
  7727 ;;		None
  7728 ;; Tracked objects:
  7729 ;;		On entry : 0/0
  7730 ;;		On exit  : 0/0
  7731 ;;		Unchanged: 0/0
  7732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7737 ;;Total ram usage:        0 bytes
  7738 ;; Hardware stack levels used:    1
  7739 ;; Hardware stack levels required when called:    5
  7740 ;; This function calls:
  7741 ;;		Nothing
  7742 ;; This function is called by:
  7743 ;;		_FSM
  7744 ;;		_force_turn_off
  7745 ;;		_HEATER_state
  7746 ;; This function uses a non-reentrant model
  7747 ;;
  7748                           
  7749                           	psect	text43
  7750  003CE6                     __ptext43:
  7751                           	opt callstack 0
  7752  003CE6                     _turn_off_heater:
  7753                           	opt callstack 24
  7754  003CE6                     
  7755                           ;LTDtask.c: 14:     LATDbits.LATD0 = 0;
  7756  003CE6  908C               	bcf	140,0,c	;volatile
  7757  003CE8  0012               	return		;funcret
  7758  003CEA                     __end_of_turn_off_heater:
  7759                           	opt callstack 0
  7760                           
  7761 ;; *************** function _turn_off_heat_pump *****************
  7762 ;; Defined at:
  7763 ;;		line 21 in file "LTDtask.c"
  7764 ;; Parameters:    Size  Location     Type
  7765 ;;		None
  7766 ;; Auto vars:     Size  Location     Type
  7767 ;;		None
  7768 ;; Return value:  Size  Location     Type
  7769 ;;                  1    wreg      void 
  7770 ;; Registers used:
  7771 ;;		None
  7772 ;; Tracked objects:
  7773 ;;		On entry : 0/0
  7774 ;;		On exit  : 0/0
  7775 ;;		Unchanged: 0/0
  7776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7781 ;;Total ram usage:        0 bytes
  7782 ;; Hardware stack levels used:    1
  7783 ;; Hardware stack levels required when called:    5
  7784 ;; This function calls:
  7785 ;;		Nothing
  7786 ;; This function is called by:
  7787 ;;		_FSM
  7788 ;;		_force_turn_off
  7789 ;;		_HEAT_PUMP_state
  7790 ;; This function uses a non-reentrant model
  7791 ;;
  7792                           
  7793                           	psect	text44
  7794  003CEA                     __ptext44:
  7795                           	opt callstack 0
  7796  003CEA                     _turn_off_heat_pump:
  7797                           	opt callstack 24
  7798  003CEA                     
  7799                           ;LTDtask.c: 22:     LATDbits.LATD1 = 0;
  7800  003CEA  928C               	bcf	140,1,c	;volatile
  7801  003CEC  0012               	return		;funcret
  7802  003CEE                     __end_of_turn_off_heat_pump:
  7803                           	opt callstack 0
  7804                           
  7805 ;; *************** function _get_time *****************
  7806 ;; Defined at:
  7807 ;;		line 112 in file "clock.c"
  7808 ;; Parameters:    Size  Location     Type
  7809 ;;		None
  7810 ;; Auto vars:     Size  Location     Type
  7811 ;;		None
  7812 ;; Return value:  Size  Location     Type
  7813 ;;                  4    0[BANK0 ] unsigned long 
  7814 ;; Registers used:
  7815 ;;		None
  7816 ;; Tracked objects:
  7817 ;;		On entry : 0/0
  7818 ;;		On exit  : 0/0
  7819 ;;		Unchanged: 0/0
  7820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7821 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7824 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7825 ;;Total ram usage:        4 bytes
  7826 ;; Hardware stack levels used:    1
  7827 ;; Hardware stack levels required when called:    5
  7828 ;; This function calls:
  7829 ;;		Nothing
  7830 ;; This function is called by:
  7831 ;;		_FSM
  7832 ;;		_IDLE_state
  7833 ;;		_HEATER_state
  7834 ;;		_HEAT_PUMP_state
  7835 ;; This function uses a non-reentrant model
  7836 ;;
  7837                           
  7838                           	psect	text45
  7839  003CA0                     __ptext45:
  7840                           	opt callstack 0
  7841  003CA0                     _get_time:
  7842                           	opt callstack 24
  7843  003CA0                     
  7844                           ;clock.c: 113:     return time_ms;
  7845  003CA0  C0BD  F060         	movff	_time_ms,?_get_time
  7846  003CA4  C0BE  F061         	movff	_time_ms+1,?_get_time+1
  7847  003CA8  C0BF  F062         	movff	_time_ms+2,?_get_time+2
  7848  003CAC  C0C0  F063         	movff	_time_ms+3,?_get_time+3
  7849  003CB0  0012               	return		;funcret
  7850  003CB2                     __end_of_get_time:
  7851                           	opt callstack 0
  7852                           
  7853 ;; *************** function _SET_TIMER_state *****************
  7854 ;; Defined at:
  7855 ;;		line 59 in file "FSM.c"
  7856 ;; Parameters:    Size  Location     Type
  7857 ;;		None
  7858 ;; Auto vars:     Size  Location     Type
  7859 ;;		None
  7860 ;; Return value:  Size  Location     Type
  7861 ;;                  1    wreg      void 
  7862 ;; Registers used:
  7863 ;;		None
  7864 ;; Tracked objects:
  7865 ;;		On entry : 0/0
  7866 ;;		On exit  : 0/0
  7867 ;;		Unchanged: 0/0
  7868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7873 ;;Total ram usage:        0 bytes
  7874 ;; Hardware stack levels used:    1
  7875 ;; Hardware stack levels required when called:    5
  7876 ;; This function calls:
  7877 ;;		Nothing
  7878 ;; This function is called by:
  7879 ;;		_FSM
  7880 ;; This function uses a non-reentrant model
  7881 ;;
  7882                           
  7883                           	psect	text46
  7884  003CEE                     __ptext46:
  7885                           	opt callstack 0
  7886  003CEE                     _SET_TIMER_state:
  7887                           	opt callstack 24
  7888  003CEE  0012               	return		;funcret
  7889  003CF0                     __end_of_SET_TIMER_state:
  7890                           	opt callstack 0
  7891                           
  7892 ;; *************** function _LCDPrint *****************
  7893 ;; Defined at:
  7894 ;;		line 232 in file "lcd.c"
  7895 ;; Parameters:    Size  Location     Type
  7896 ;;  line            1    wreg     unsigned char 
  7897 ;;  pos             1   11[BANK0 ] unsigned char 
  7898 ;;  ptr             2   12[BANK0 ] PTR const unsigned char 
  7899 ;;		 -> STR_15(7), STR_14(10), STR_13(7), STR_12(6), 
  7900 ;;		 -> STR_11(7), STR_10(9), STR_9(10), STR_8(9), 
  7901 ;;		 -> STR_7(7), STR_6(17), STR_5(17), STR_2(3), 
  7902 ;;		 -> STR_1(3), 
  7903 ;; Auto vars:     Size  Location     Type
  7904 ;;  line            1   14[BANK0 ] unsigned char 
  7905 ;; Return value:  Size  Location     Type
  7906 ;;                  1    wreg      void 
  7907 ;; Registers used:
  7908 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7909 ;; Tracked objects:
  7910 ;;		On entry : 0/0
  7911 ;;		On exit  : 0/0
  7912 ;;		Unchanged: 0/0
  7913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7914 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7915 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7917 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7918 ;;Total ram usage:        4 bytes
  7919 ;; Hardware stack levels used:    1
  7920 ;; Hardware stack levels required when called:    9
  7921 ;; This function calls:
  7922 ;;		_LCDMoveCursor
  7923 ;;		_LCDPutStr
  7924 ;; This function is called by:
  7925 ;;		_printTempAndHumid
  7926 ;;		_main
  7927 ;;		_check_humid_to_turn_fan
  7928 ;;		_FSM
  7929 ;;		_IDLE_state
  7930 ;;		_HEATER_state
  7931 ;;		_HEAT_PUMP_state
  7932 ;; This function uses a non-reentrant model
  7933 ;;
  7934                           
  7935                           	psect	text47
  7936  0038B2                     __ptext47:
  7937                           	opt callstack 0
  7938  0038B2                     _LCDPrint:
  7939                           	opt callstack 19
  7940                           
  7941                           ;incstack = 0
  7942                           ;LCDPrint@line stored from wreg
  7943  0038B2  0100               	movlb	0	; () banked
  7944  0038B4  6F6E               	movwf	LCDPrint@line& (0+255),b
  7945  0038B6                     
  7946                           ;lcd.c: 233:     if(line < 0 || line > 2 || pos < 0 || pos > 15)
  7947  0038B6  0E03               	movlw	3
  7948  0038B8  0100               	movlb	0	; () banked
  7949  0038BA  616E               	cpfslt	LCDPrint@line& (0+255),b
  7950  0038BC  EF62  F01C         	goto	u2531
  7951  0038C0  EF64  F01C         	goto	u2530
  7952  0038C4                     u2531:
  7953  0038C4  EF79  F01C         	goto	l247
  7954  0038C8                     u2530:
  7955  0038C8                     
  7956                           ; BSR set to: 0
  7957  0038C8  0E0F               	movlw	15
  7958  0038CA  656B               	cpfsgt	LCDPrint@pos& (0+255),b
  7959  0038CC  EF6A  F01C         	goto	u2541
  7960  0038D0  EF6C  F01C         	goto	u2540
  7961  0038D4                     u2541:
  7962  0038D4  EF6E  F01C         	goto	l3241
  7963  0038D8                     u2540:
  7964  0038D8  EF79  F01C         	goto	l247
  7965  0038DC                     l3241:
  7966                           
  7967                           ; BSR set to: 0
  7968                           ;lcd.c: 235:     LCDMoveCursor(line, pos);
  7969  0038DC  C06B  F066         	movff	LCDPrint@pos,LCDMoveCursor@pos
  7970  0038E0  516E               	movf	LCDPrint@line& (0+255),w,b
  7971  0038E2  EC3B  F01D         	call	_LCDMoveCursor
  7972  0038E6                     
  7973                           ;lcd.c: 236:     LCDPutStr(ptr);
  7974  0038E6  C06C  F066         	movff	LCDPrint@ptr,LCDPutStr@ptr
  7975  0038EA  C06D  F067         	movff	LCDPrint@ptr+1,LCDPutStr@ptr+1
  7976  0038EE  ECFC  F01C         	call	_LCDPutStr	;wreg free
  7977  0038F2                     l247:
  7978  0038F2  0012               	return		;funcret
  7979  0038F4                     __end_of_LCDPrint:
  7980                           	opt callstack 0
  7981                           
  7982 ;; *************** function _LCDPutStr *****************
  7983 ;; Defined at:
  7984 ;;		line 222 in file "lcd.c"
  7985 ;; Parameters:    Size  Location     Type
  7986 ;;  ptr             2    6[BANK0 ] PTR const unsigned char 
  7987 ;;		 -> STR_15(7), STR_14(10), STR_13(7), STR_12(6), 
  7988 ;;		 -> STR_11(7), STR_10(9), STR_9(10), STR_8(9), 
  7989 ;;		 -> STR_7(7), STR_6(17), STR_5(17), STR_2(3), 
  7990 ;;		 -> STR_1(3), 
  7991 ;; Auto vars:     Size  Location     Type
  7992 ;;		None
  7993 ;; Return value:  Size  Location     Type
  7994 ;;                  1    wreg      void 
  7995 ;; Registers used:
  7996 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7997 ;; Tracked objects:
  7998 ;;		On entry : 0/0
  7999 ;;		On exit  : 0/0
  8000 ;;		Unchanged: 0/0
  8001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8002 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8005 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8006 ;;Total ram usage:        2 bytes
  8007 ;; Hardware stack levels used:    1
  8008 ;; Hardware stack levels required when called:    8
  8009 ;; This function calls:
  8010 ;;		_LCDPutChar
  8011 ;; This function is called by:
  8012 ;;		_LCDPrint
  8013 ;; This function uses a non-reentrant model
  8014 ;;
  8015                           
  8016                           	psect	text48
  8017  0039F8                     __ptext48:
  8018                           	opt callstack 0
  8019  0039F8                     _LCDPutStr:
  8020                           	opt callstack 19
  8021  0039F8                     
  8022                           ;lcd.c: 222: void LCDPutStr (const char *ptr);lcd.c: 223: {;lcd.c: 224:     while(*ptr) 
      +                          LCDPutChar(*(ptr++));
  8023  0039F8  EF0B  F01D         	goto	l2935
  8024  0039FC                     l2931:
  8025  0039FC  C066  FFF6         	movff	LCDPutStr@ptr,tblptrl
  8026  003A00  C067  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
  8027  003A04                     	if	0	;tblptru may be non-zero
  8028  003A04                     	endif
  8029  003A04                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8030  003A04  0E00               	movlw	low (__mediumconst shr (0+16))
  8031  003A06  6EF8               	movwf	tblptru,c
  8032  003A08                     	endif
  8033  003A08  0008               	tblrd		*
  8034  003A0A  50F5               	movf	tablat,w,c
  8035  003A0C  EC7A  F01C         	call	_LCDPutChar
  8036  003A10  0100               	movlb	0	; () banked
  8037  003A12  4B66               	infsnz	LCDPutStr@ptr& (0+255),f,b
  8038  003A14  2B67               	incf	(LCDPutStr@ptr+1)& (0+255),f,b
  8039  003A16                     l2935:
  8040  003A16  C066  FFF6         	movff	LCDPutStr@ptr,tblptrl
  8041  003A1A  C067  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
  8042  003A1E                     	if	0	;tblptru may be non-zero
  8043  003A1E                     	endif
  8044  003A1E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8045  003A1E  0E00               	movlw	low (__mediumconst shr (0+16))
  8046  003A20  6EF8               	movwf	tblptru,c
  8047  003A22                     	endif
  8048  003A22  0008               	tblrd		*
  8049  003A24  50F5               	movf	tablat,w,c
  8050  003A26  0900               	iorlw	0
  8051  003A28  A4D8               	btfss	status,2,c
  8052  003A2A  EF19  F01D         	goto	u1991
  8053  003A2E  EF1B  F01D         	goto	u1990
  8054  003A32                     u1991:
  8055  003A32  EFFE  F01C         	goto	l2931
  8056  003A36                     u1990:
  8057  003A36  0012               	return		;funcret
  8058  003A38                     __end_of_LCDPutStr:
  8059                           	opt callstack 0
  8060                           
  8061 ;; *************** function _LCDPutChar *****************
  8062 ;; Defined at:
  8063 ;;		line 172 in file "lcd.c"
  8064 ;; Parameters:    Size  Location     Type
  8065 ;;  ch              1    wreg     unsigned char 
  8066 ;; Auto vars:     Size  Location     Type
  8067 ;;  ch              1    5[BANK0 ] unsigned char 
  8068 ;; Return value:  Size  Location     Type
  8069 ;;                  1    wreg      void 
  8070 ;; Registers used:
  8071 ;;		wreg, status,2, status,0, cstack
  8072 ;; Tracked objects:
  8073 ;;		On entry : 0/0
  8074 ;;		On exit  : 0/0
  8075 ;;		Unchanged: 0/0
  8076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8078 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8080 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8081 ;;Total ram usage:        1 bytes
  8082 ;; Hardware stack levels used:    1
  8083 ;; Hardware stack levels required when called:    7
  8084 ;; This function calls:
  8085 ;;		_WritePort_BBSPI
  8086 ;; This function is called by:
  8087 ;;		_LCDPutStr
  8088 ;;		_LCDPrintChar
  8089 ;; This function uses a non-reentrant model
  8090 ;;
  8091                           
  8092                           	psect	text49
  8093  0038F4                     __ptext49:
  8094                           	opt callstack 0
  8095  0038F4                     _LCDPutChar:
  8096                           	opt callstack 20
  8097                           
  8098                           ;incstack = 0
  8099                           ;LCDPutChar@ch stored from wreg
  8100  0038F4  0100               	movlb	0	; () banked
  8101  0038F6  6F65               	movwf	LCDPutChar@ch& (0+255),b
  8102  0038F8                     
  8103                           ;lcd.c: 172: void LCDPutChar (unsigned char ch);lcd.c: 173: {;lcd.c: 174:     _delay((un
      +                          signed long)((10)*(8000000/4000000.0)));
  8104  0038F8  0E06               	movlw	6
  8105  0038FA                     u3847:
  8106  0038FA  2EE8               	decfsz	wreg,f,c
  8107  0038FC  D7FE               	bra	u3847
  8108  0038FE  D000               	nop2	
  8109  003900                     
  8110                           ;lcd.c: 175:     WritePort_BBSPI (0x12, 0x80);
  8111  003900  0E80               	movlw	128
  8112  003902  0100               	movlb	0	; () banked
  8113  003904  6F63               	movwf	WritePort_BBSPI@a& (0+255),b
  8114  003906  0E12               	movlw	18
  8115  003908  EC01  F01E         	call	_WritePort_BBSPI
  8116  00390C                     
  8117                           ;lcd.c: 176:     _delay((unsigned long)((1)*(8000000/4000000.0)));
  8118  00390C  D000               	nop2		;2 cycle nop
  8119  00390E                     
  8120                           ;lcd.c: 177:     WritePort_BBSPI (0x13, ch);
  8121  00390E  C065  F063         	movff	LCDPutChar@ch,WritePort_BBSPI@a
  8122  003912  0E13               	movlw	19
  8123  003914  EC01  F01E         	call	_WritePort_BBSPI
  8124  003918                     
  8125                           ;lcd.c: 178:     _delay((unsigned long)((1)*(8000000/4000000.0)));
  8126  003918  D000               	nop2		;2 cycle nop
  8127  00391A                     
  8128                           ;lcd.c: 179:     WritePort_BBSPI (0x12, 0xC0);
  8129  00391A  0EC0               	movlw	192
  8130  00391C  0100               	movlb	0	; () banked
  8131  00391E  6F63               	movwf	WritePort_BBSPI@a& (0+255),b
  8132  003920  0E12               	movlw	18
  8133  003922  EC01  F01E         	call	_WritePort_BBSPI
  8134  003926                     
  8135                           ;lcd.c: 180:     _delay((unsigned long)((1)*(8000000/4000000.0)));
  8136  003926  D000               	nop2		;2 cycle nop
  8137  003928                     
  8138                           ;lcd.c: 181:     WritePort_BBSPI (0x12, 0x00);
  8139  003928  0E00               	movlw	0
  8140  00392A  0100               	movlb	0	; () banked
  8141  00392C  6F63               	movwf	WritePort_BBSPI@a& (0+255),b
  8142  00392E  0E12               	movlw	18
  8143  003930  EC01  F01E         	call	_WritePort_BBSPI
  8144  003934  0012               	return		;funcret
  8145  003936                     __end_of_LCDPutChar:
  8146                           	opt callstack 0
  8147                           
  8148 ;; *************** function _LCDMoveCursor *****************
  8149 ;; Defined at:
  8150 ;;		line 227 in file "lcd.c"
  8151 ;; Parameters:    Size  Location     Type
  8152 ;;  line            1    wreg     unsigned char 
  8153 ;;  pos             1    6[BANK0 ] unsigned char 
  8154 ;; Auto vars:     Size  Location     Type
  8155 ;;  line            1    7[BANK0 ] unsigned char 
  8156 ;;  position        1   10[BANK0 ] unsigned char 
  8157 ;; Return value:  Size  Location     Type
  8158 ;;                  1    wreg      void 
  8159 ;; Registers used:
  8160 ;;		wreg, status,2, status,0, cstack
  8161 ;; Tracked objects:
  8162 ;;		On entry : 0/0
  8163 ;;		On exit  : 0/0
  8164 ;;		Unchanged: 0/0
  8165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8166 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8167 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8169 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8170 ;;Total ram usage:        5 bytes
  8171 ;; Hardware stack levels used:    1
  8172 ;; Hardware stack levels required when called:    8
  8173 ;; This function calls:
  8174 ;;		_LCDPutInst
  8175 ;; This function is called by:
  8176 ;;		_LCDPrint
  8177 ;;		_LCDPrintChar
  8178 ;; This function uses a non-reentrant model
  8179 ;;
  8180                           
  8181                           	psect	text50
  8182  003A76                     __ptext50:
  8183                           	opt callstack 0
  8184  003A76                     _LCDMoveCursor:
  8185                           	opt callstack 19
  8186                           
  8187                           ;incstack = 0
  8188                           ;LCDMoveCursor@line stored from wreg
  8189  003A76  0100               	movlb	0	; () banked
  8190  003A78  6F67               	movwf	LCDMoveCursor@line& (0+255),b
  8191  003A7A                     
  8192                           ;lcd.c: 228:     unsigned char position = (line == 0) ? (128 + pos) : (192 + pos);
  8193  003A7A  0100               	movlb	0	; () banked
  8194  003A7C  5167               	movf	LCDMoveCursor@line& (0+255),w,b
  8195  003A7E  B4D8               	btfsc	status,2,c
  8196  003A80  EF44  F01D         	goto	u2001
  8197  003A84  EF46  F01D         	goto	u2000
  8198  003A88                     u2001:
  8199  003A88  EF4E  F01D         	goto	l2941
  8200  003A8C                     u2000:
  8201  003A8C                     
  8202                           ; BSR set to: 0
  8203  003A8C  0EC0               	movlw	192
  8204  003A8E  2566               	addwf	LCDMoveCursor@pos& (0+255),w,b
  8205  003A90  6F68               	movwf	_LCDMoveCursor$651& (0+255),b
  8206  003A92  6B69               	clrf	(_LCDMoveCursor$651+1)& (0+255),b
  8207  003A94  0E00               	movlw	0
  8208  003A96  2369               	addwfc	(_LCDMoveCursor$651+1)& (0+255),f,b
  8209  003A98  EF54  F01D         	goto	l2943
  8210  003A9C                     l2941:
  8211                           
  8212                           ; BSR set to: 0
  8213  003A9C  0E80               	movlw	128
  8214  003A9E  2566               	addwf	LCDMoveCursor@pos& (0+255),w,b
  8215  003AA0  6F68               	movwf	_LCDMoveCursor$651& (0+255),b
  8216  003AA2  6B69               	clrf	(_LCDMoveCursor$651+1)& (0+255),b
  8217  003AA4  0E00               	movlw	0
  8218  003AA6  2369               	addwfc	(_LCDMoveCursor$651+1)& (0+255),f,b
  8219  003AA8                     l2943:
  8220                           
  8221                           ; BSR set to: 0
  8222  003AA8  C068  F06A         	movff	_LCDMoveCursor$651,LCDMoveCursor@position
  8223  003AAC                     
  8224                           ; BSR set to: 0
  8225                           ;lcd.c: 229:     LCDPutInst(position);
  8226  003AAC  516A               	movf	LCDMoveCursor@position& (0+255),w,b
  8227  003AAE  EC9B  F01C         	call	_LCDPutInst
  8228  003AB2  0012               	return		;funcret
  8229  003AB4                     __end_of_LCDMoveCursor:
  8230                           	opt callstack 0
  8231                           
  8232 ;; *************** function _LCDPutInst *****************
  8233 ;; Defined at:
  8234 ;;		line 203 in file "lcd.c"
  8235 ;; Parameters:    Size  Location     Type
  8236 ;;  ch              1    wreg     unsigned char 
  8237 ;; Auto vars:     Size  Location     Type
  8238 ;;  ch              1    5[BANK0 ] unsigned char 
  8239 ;; Return value:  Size  Location     Type
  8240 ;;                  1    wreg      void 
  8241 ;; Registers used:
  8242 ;;		wreg, status,2, status,0, cstack
  8243 ;; Tracked objects:
  8244 ;;		On entry : 0/0
  8245 ;;		On exit  : 0/0
  8246 ;;		Unchanged: 0/0
  8247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8249 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8251 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8252 ;;Total ram usage:        1 bytes
  8253 ;; Hardware stack levels used:    1
  8254 ;; Hardware stack levels required when called:    7
  8255 ;; This function calls:
  8256 ;;		_WritePort_BBSPI
  8257 ;; This function is called by:
  8258 ;;		_LCDInit
  8259 ;;		_LCDMoveCursor
  8260 ;;		_IDLE_state
  8261 ;; This function uses a non-reentrant model
  8262 ;;
  8263                           
  8264                           	psect	text51
  8265  003936                     __ptext51:
  8266                           	opt callstack 0
  8267  003936                     _LCDPutInst:
  8268                           	opt callstack 21
  8269                           
  8270                           ;incstack = 0
  8271                           ;LCDPutInst@ch stored from wreg
  8272  003936  0100               	movlb	0	; () banked
  8273  003938  6F65               	movwf	LCDPutInst@ch& (0+255),b
  8274  00393A                     
  8275                           ;lcd.c: 203: void LCDPutInst (unsigned char ch);lcd.c: 204: {;lcd.c: 205:     _delay((un
      +                          signed long)((10)*(8000000/4000000.0)));
  8276  00393A  0E06               	movlw	6
  8277  00393C                     u3857:
  8278  00393C  2EE8               	decfsz	wreg,f,c
  8279  00393E  D7FE               	bra	u3857
  8280  003940  D000               	nop2	
  8281  003942                     
  8282                           ;lcd.c: 206:     WritePort_BBSPI (0x12, 0x00);
  8283  003942  0E00               	movlw	0
  8284  003944  0100               	movlb	0	; () banked
  8285  003946  6F63               	movwf	WritePort_BBSPI@a& (0+255),b
  8286  003948  0E12               	movlw	18
  8287  00394A  EC01  F01E         	call	_WritePort_BBSPI
  8288  00394E                     
  8289                           ;lcd.c: 207:     _delay((unsigned long)((1)*(8000000/4000000.0)));
  8290  00394E  D000               	nop2		;2 cycle nop
  8291  003950                     
  8292                           ;lcd.c: 208:     WritePort_BBSPI (0x13, ch);
  8293  003950  C065  F063         	movff	LCDPutInst@ch,WritePort_BBSPI@a
  8294  003954  0E13               	movlw	19
  8295  003956  EC01  F01E         	call	_WritePort_BBSPI
  8296  00395A                     
  8297                           ;lcd.c: 209:     _delay((unsigned long)((1)*(8000000/4000000.0)));
  8298  00395A  D000               	nop2		;2 cycle nop
  8299  00395C                     
  8300                           ;lcd.c: 210:     WritePort_BBSPI (0x12,0x40);
  8301  00395C  0E40               	movlw	64
  8302  00395E  0100               	movlb	0	; () banked
  8303  003960  6F63               	movwf	WritePort_BBSPI@a& (0+255),b
  8304  003962  0E12               	movlw	18
  8305  003964  EC01  F01E         	call	_WritePort_BBSPI
  8306  003968                     
  8307                           ;lcd.c: 211:     _delay((unsigned long)((1)*(8000000/4000000.0)));
  8308  003968  D000               	nop2		;2 cycle nop
  8309  00396A                     
  8310                           ;lcd.c: 212:     WritePort_BBSPI (0x12, 0x00);
  8311  00396A  0E00               	movlw	0
  8312  00396C  0100               	movlb	0	; () banked
  8313  00396E  6F63               	movwf	WritePort_BBSPI@a& (0+255),b
  8314  003970  0E12               	movlw	18
  8315  003972  EC01  F01E         	call	_WritePort_BBSPI
  8316  003976  0012               	return		;funcret
  8317  003978                     __end_of_LCDPutInst:
  8318                           	opt callstack 0
  8319                           
  8320 ;; *************** function _WritePort_BBSPI *****************
  8321 ;; Defined at:
  8322 ;;		line 144 in file "lcd.c"
  8323 ;; Parameters:    Size  Location     Type
  8324 ;;  port_add        1    wreg     unsigned char 
  8325 ;;  a               1    3[BANK0 ] unsigned char 
  8326 ;; Auto vars:     Size  Location     Type
  8327 ;;  port_add        1    4[BANK0 ] unsigned char 
  8328 ;; Return value:  Size  Location     Type
  8329 ;;                  1    wreg      void 
  8330 ;; Registers used:
  8331 ;;		wreg, status,2, status,0, cstack
  8332 ;; Tracked objects:
  8333 ;;		On entry : 0/0
  8334 ;;		On exit  : 0/0
  8335 ;;		Unchanged: 0/0
  8336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8337 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8338 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8340 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8341 ;;Total ram usage:        2 bytes
  8342 ;; Hardware stack levels used:    1
  8343 ;; Hardware stack levels required when called:    6
  8344 ;; This function calls:
  8345 ;;		_SendByteBBSPI
  8346 ;; This function is called by:
  8347 ;;		_LCDInit
  8348 ;;		_LCDPutChar
  8349 ;;		_LCDPutInst
  8350 ;; This function uses a non-reentrant model
  8351 ;;
  8352                           
  8353                           	psect	text52
  8354  003C02                     __ptext52:
  8355                           	opt callstack 0
  8356  003C02                     _WritePort_BBSPI:
  8357                           	opt callstack 22
  8358                           
  8359                           ;incstack = 0
  8360                           ;WritePort_BBSPI@port_add stored from wreg
  8361  003C02  0100               	movlb	0	; () banked
  8362  003C04  6F64               	movwf	WritePort_BBSPI@port_add& (0+255),b
  8363  003C06                     
  8364                           ;lcd.c: 144: void WritePort_BBSPI (unsigned char port_add, unsigned char a);lcd.c: 145: 
      +                          {;lcd.c: 146:     LATAbits.LATA2 = 0;
  8365  003C06  9489               	bcf	137,2,c	;volatile
  8366  003C08                     
  8367                           ;lcd.c: 147:     SendByteBBSPI(0x40);
  8368  003C08  0E40               	movlw	64
  8369  003C0A  EC19  F01B         	call	_SendByteBBSPI
  8370                           
  8371                           ;lcd.c: 148:     SendByteBBSPI(port_add);
  8372  003C0E  0100               	movlb	0	; () banked
  8373  003C10  5164               	movf	WritePort_BBSPI@port_add& (0+255),w,b
  8374  003C12  EC19  F01B         	call	_SendByteBBSPI
  8375                           
  8376                           ;lcd.c: 149:     SendByteBBSPI(a);
  8377  003C16  0100               	movlb	0	; () banked
  8378  003C18  5163               	movf	WritePort_BBSPI@a& (0+255),w,b
  8379  003C1A  EC19  F01B         	call	_SendByteBBSPI
  8380  003C1E                     
  8381                           ;lcd.c: 150:     LATAbits.LATA2 = 1;
  8382  003C1E  8489               	bsf	137,2,c	;volatile
  8383  003C20  0012               	return		;funcret
  8384  003C22                     __end_of_WritePort_BBSPI:
  8385                           	opt callstack 0
  8386                           
  8387 ;; *************** function _SendByteBBSPI *****************
  8388 ;; Defined at:
  8389 ;;		line 91 in file "lcd.c"
  8390 ;; Parameters:    Size  Location     Type
  8391 ;;  output          1    wreg     unsigned char 
  8392 ;; Auto vars:     Size  Location     Type
  8393 ;;  output          1    0[BANK0 ] unsigned char 
  8394 ;;  input           1    2[BANK0 ] unsigned char 
  8395 ;;  bitcount        1    1[BANK0 ] unsigned char 
  8396 ;; Return value:  Size  Location     Type
  8397 ;;                  1    wreg      void 
  8398 ;; Registers used:
  8399 ;;		wreg, status,2, status,0
  8400 ;; Tracked objects:
  8401 ;;		On entry : 0/0
  8402 ;;		On exit  : 0/0
  8403 ;;		Unchanged: 0/0
  8404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8406 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8408 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8409 ;;Total ram usage:        3 bytes
  8410 ;; Hardware stack levels used:    1
  8411 ;; Hardware stack levels required when called:    5
  8412 ;; This function calls:
  8413 ;;		Nothing
  8414 ;; This function is called by:
  8415 ;;		_Port_BBSPIInit
  8416 ;;		_WritePort_BBSPI
  8417 ;; This function uses a non-reentrant model
  8418 ;;
  8419                           
  8420                           	psect	text53
  8421  003632                     __ptext53:
  8422                           	opt callstack 0
  8423  003632                     _SendByteBBSPI:
  8424                           	opt callstack 22
  8425                           
  8426                           ;incstack = 0
  8427                           ;SendByteBBSPI@output stored from wreg
  8428  003632  0100               	movlb	0	; () banked
  8429  003634  6F60               	movwf	SendByteBBSPI@output& (0+255),b
  8430  003636                     
  8431                           ;lcd.c: 91: void SendByteBBSPI (unsigned char output);lcd.c: 92: {;lcd.c: 93:     unsign
      +                          ed char bitcount;;lcd.c: 94:     unsigned char input = output;
  8432  003636  C060  F062         	movff	SendByteBBSPI@output,SendByteBBSPI@input
  8433  00363A                     
  8434                           ;lcd.c: 96:     for(bitcount=0;bitcount<8;bitcount++)
  8435  00363A  0E00               	movlw	0
  8436  00363C  0100               	movlb	0	; () banked
  8437  00363E  6F61               	movwf	SendByteBBSPI@bitcount& (0+255),b
  8438  003640                     l210:
  8439                           
  8440                           ; BSR set to: 0
  8441                           ;lcd.c: 97:     {;lcd.c: 99:         if(output & 0x80)
  8442  003640  AF60               	btfss	SendByteBBSPI@output& (0+255),7,b
  8443  003642  EF25  F01B         	goto	u1901
  8444  003646  EF27  F01B         	goto	u1900
  8445  00364A                     u1901:
  8446  00364A  EF2A  F01B         	goto	l212
  8447  00364E                     u1900:
  8448  00364E                     
  8449                           ; BSR set to: 0
  8450                           ;lcd.c: 100:             LATCbits.LATC5 = 1;
  8451  00364E  8A8B               	bsf	139,5,c	;volatile
  8452  003650  EF2B  F01B         	goto	l213
  8453  003654                     l212:
  8454                           
  8455                           ; BSR set to: 0
  8456                           ;lcd.c: 102:             LATCbits.LATC5 = 0;
  8457  003654  9A8B               	bcf	139,5,c	;volatile
  8458  003656                     l213:
  8459                           
  8460                           ; BSR set to: 0
  8461                           ;lcd.c: 104:         if (LATCbits.LATC4)
  8462  003656  A88B               	btfss	139,4,c	;volatile
  8463  003658  EF30  F01B         	goto	u1911
  8464  00365C  EF32  F01B         	goto	u1910
  8465  003660                     u1911:
  8466  003660  EF36  F01B         	goto	l2827
  8467  003664                     u1910:
  8468  003664                     
  8469                           ; BSR set to: 0
  8470                           ;lcd.c: 105:             input = (input << 1) | 0x1;
  8471  003664  80D8               	bsf	status,0,c
  8472  003666  3762               	rlcf	SendByteBBSPI@input& (0+255),f,b
  8473  003668  EF39  F01B         	goto	l2829
  8474  00366C                     l2827:
  8475                           
  8476                           ; BSR set to: 0
  8477                           ;lcd.c: 107:             input = input << 1;
  8478  00366C  5162               	movf	SendByteBBSPI@input& (0+255),w,b
  8479  00366E  2562               	addwf	SendByteBBSPI@input& (0+255),w,b
  8480  003670  6F62               	movwf	SendByteBBSPI@input& (0+255),b
  8481  003672                     l2829:
  8482                           
  8483                           ; BSR set to: 0
  8484                           ;lcd.c: 108:         LATCbits.LATC3 = 1;
  8485  003672  868B               	bsf	139,3,c	;volatile
  8486  003674                     
  8487                           ; BSR set to: 0
  8488                           ;lcd.c: 109:         __nop();__nop();__nop();__nop();__nop();__nop();
  8489  003674  F000               	nop	
  8490  003676  F000               	nop	
  8491  003678  F000               	nop	
  8492  00367A  F000               	nop	
  8493  00367C  F000               	nop	
  8494  00367E  F000               	nop	
  8495  003680                     
  8496                           ;lcd.c: 111:         LATCbits.LATC3 = 0;
  8497  003680  968B               	bcf	139,3,c	;volatile
  8498                           
  8499                           ;lcd.c: 112:         output <<= 1;
  8500  003682  0100               	movlb	0	; () banked
  8501  003684  90D8               	bcf	status,0,c
  8502  003686  3760               	rlcf	SendByteBBSPI@output& (0+255),f,b
  8503  003688                     
  8504                           ; BSR set to: 0
  8505                           ;lcd.c: 113:     }
  8506  003688  2B61               	incf	SendByteBBSPI@bitcount& (0+255),f,b
  8507  00368A                     
  8508                           ; BSR set to: 0
  8509  00368A  0E07               	movlw	7
  8510  00368C  6561               	cpfsgt	SendByteBBSPI@bitcount& (0+255),b
  8511  00368E  EF4B  F01B         	goto	u1921
  8512  003692  EF4D  F01B         	goto	u1920
  8513  003696                     u1921:
  8514  003696  EF20  F01B         	goto	l210
  8515  00369A                     u1920:
  8516  00369A                     
  8517                           ; BSR set to: 0
  8518  00369A  0012               	return		;funcret
  8519  00369C                     __end_of_SendByteBBSPI:
  8520                           	opt callstack 0
  8521                           
  8522 ;; *************** function _timer_interrupt *****************
  8523 ;; Defined at:
  8524 ;;		line 187 in file "clock.c"
  8525 ;; Parameters:    Size  Location     Type
  8526 ;;		None
  8527 ;; Auto vars:     Size  Location     Type
  8528 ;;  cur             2   47[COMRAM] int 
  8529 ;;  prev            2   43[COMRAM] int 
  8530 ;;  sum             2   45[COMRAM] int 
  8531 ;;  pos             2   49[COMRAM] int 
  8532 ;; Return value:  Size  Location     Type
  8533 ;;                  1    wreg      void 
  8534 ;; Registers used:
  8535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8536 ;; Tracked objects:
  8537 ;;		On entry : 0/0
  8538 ;;		On exit  : 0/0
  8539 ;;		Unchanged: 0/0
  8540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8542 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8543 ;;      Temps:         22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8544 ;;      Totals:        37       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8545 ;;Total ram usage:       37 bytes
  8546 ;; Hardware stack levels used:    1
  8547 ;; Hardware stack levels required when called:    4
  8548 ;; This function calls:
  8549 ;;		_enqueue
  8550 ;;		_remove_timer
  8551 ;;		i2___wmul
  8552 ;; This function is called by:
  8553 ;;		Interrupt level 2
  8554 ;; This function uses a non-reentrant model
  8555 ;;
  8556                           
  8557                           	psect	intcode
  8558  000008                     __pintcode:
  8559                           	opt callstack 0
  8560  000008                     _timer_interrupt:
  8561                           	opt callstack 19
  8562                           
  8563                           ; BSR set to: 0
  8564                           ;incstack = 0
  8565  000008  824C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8566  00000A  ED27  F008         	call	int_func,f	;refresh shadow registers
  8567                           
  8568                           	psect	intcode_body
  8569  00104E                     __pintcode_body:
  8570                           	opt callstack 19
  8571  00104E                     int_func:
  8572                           	opt callstack 19
  8573  00104E  0006               	pop		; remove dummy address from shadow register refresh
  8574  001050  CFE1 F01F          	movff	fsr1l,??_timer_interrupt+16
  8575  001054  CFE2 F020          	movff	fsr1h,??_timer_interrupt+17
  8576  001058  CFD9 F021          	movff	fsr2l,??_timer_interrupt+18
  8577  00105C  CFDA F022          	movff	fsr2h,??_timer_interrupt+19
  8578  001060  CFF3 F023          	movff	prodl,??_timer_interrupt+20
  8579  001064  CFF4 F024          	movff	prodh,??_timer_interrupt+21
  8580  001068                     
  8581                           ;clock.c: 188:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF) {
  8582  001068  AAF2               	btfss	242,5,c	;volatile
  8583  00106A  EF39  F008         	goto	i2u361_41
  8584  00106E  EF3B  F008         	goto	i2u361_40
  8585  001072                     i2u361_41:
  8586  001072  EF4C  F008         	goto	i2l4109
  8587  001076                     i2u361_40:
  8588  001076  A4F2               	btfss	242,2,c	;volatile
  8589  001078  EF40  F008         	goto	i2u362_41
  8590  00107C  EF42  F008         	goto	i2u362_40
  8591  001080                     i2u362_41:
  8592  001080  EF4C  F008         	goto	i2l4109
  8593  001084                     i2u362_40:
  8594  001084                     
  8595                           ;clock.c: 189:         INTCONbits.TMR0IF = 0;
  8596  001084  94F2               	bcf	242,2,c	;volatile
  8597  001086                     
  8598                           ;clock.c: 190:         TMR0L = 131;
  8599  001086  0E83               	movlw	131
  8600  001088  6ED6               	movwf	214,c	;volatile
  8601  00108A                     
  8602                           ;clock.c: 191:         time_ms++;
  8603  00108A  0E01               	movlw	1
  8604  00108C  0100               	movlb	0	; () banked
  8605  00108E  27BD               	addwf	_time_ms& (0+255),f,b
  8606  001090  0E00               	movlw	0
  8607  001092  23BE               	addwfc	(_time_ms+1)& (0+255),f,b
  8608  001094  23BF               	addwfc	(_time_ms+2)& (0+255),f,b
  8609  001096  23C0               	addwfc	(_time_ms+3)& (0+255),f,b
  8610  001098                     i2l4109:
  8611                           
  8612                           ;clock.c: 193:     if(PIE1bits.TMR1IE && PIR1bits.TMR1IF) {
  8613  001098  A09D               	btfss	157,0,c	;volatile
  8614  00109A  EF51  F008         	goto	i2u363_41
  8615  00109E  EF53  F008         	goto	i2u363_40
  8616  0010A2                     i2u363_41:
  8617  0010A2  EFB7  F00A         	goto	i2l457
  8618  0010A6                     i2u363_40:
  8619  0010A6  A09E               	btfss	158,0,c	;volatile
  8620  0010A8  EF58  F008         	goto	i2u364_41
  8621  0010AC  EF5A  F008         	goto	i2u364_40
  8622  0010B0                     i2u364_41:
  8623  0010B0  EFB7  F00A         	goto	i2l457
  8624  0010B4                     i2u364_40:
  8625  0010B4                     
  8626                           ;clock.c: 194:         PIR1bits.TMR1IF = 0;
  8627  0010B4  909E               	bcf	158,0,c	;volatile
  8628  0010B6                     
  8629                           ;clock.c: 195:         TMR1H = 0xB1;
  8630  0010B6  0EB1               	movlw	177
  8631  0010B8  6ECF               	movwf	207,c	;volatile
  8632                           
  8633                           ;clock.c: 196:         TMR1L = 0xE0;
  8634  0010BA  0EE0               	movlw	224
  8635  0010BC  6ECE               	movwf	206,c	;volatile
  8636  0010BE                     
  8637                           ;clock.c: 197:         if(head == 105)
  8638  0010BE  0E69               	movlw	105
  8639  0010C0  0100               	movlb	0	; () banked
  8640  0010C2  19C7               	xorwf	_head& (0+255),w,b
  8641  0010C4  A4D8               	btfss	status,2,c
  8642  0010C6  EF67  F008         	goto	i2u365_41
  8643  0010CA  EF69  F008         	goto	i2u365_40
  8644  0010CE                     i2u365_41:
  8645  0010CE  EF95  F00A         	goto	i2l4155
  8646  0010D2                     i2u365_40:
  8647  0010D2  EFB7  F00A         	goto	i2l457
  8648  0010D6                     i2l459:
  8649                           
  8650                           ; BSR set to: 0
  8651                           ;clock.c: 200:             int pos = head;
  8652  0010D6  C0C7  F032         	movff	_head,timer_interrupt@pos
  8653  0010DA  6A33               	clrf	(timer_interrupt@pos+1)^0,c
  8654  0010DC                     
  8655                           ; BSR set to: 0
  8656                           ;clock.c: 201:             enqueue(task_list[pos].func_ptr, task_list[pos].data_p);
  8657  0010DC  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  8658  0010E0  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  8659  0010E4  0E00               	movlw	0
  8660  0010E6  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8661  0010E8  0E0F               	movlw	15
  8662  0010EA  6E03               	movwf	i2___wmul@multiplicand^0,c
  8663  0010EC  ECCB  F01D         	call	i2___wmul	;wreg free
  8664  0010F0  0E6C               	movlw	low (_task_list+8)
  8665  0010F2  2401               	addwf	?i2___wmul^0,w,c
  8666  0010F4  6ED9               	movwf	fsr2l,c
  8667  0010F6  0E01               	movlw	high (_task_list+8)
  8668  0010F8  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8669  0010FA  6EDA               	movwf	fsr2h,c
  8670  0010FC  CFDE F025          	movff	postinc2,_timer_interrupt$2141
  8671  001100  CFDE F026          	movff	postinc2,_timer_interrupt$2141+1
  8672  001104  CFDD F027          	movff	postdec2,_timer_interrupt$2141+2
  8673                           
  8674                           ;clock.c: 201:             enqueue(task_list[pos].func_ptr, task_list[pos].data_p);
  8675  001108  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  8676  00110C  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  8677  001110  0E00               	movlw	0
  8678  001112  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8679  001114  0E0F               	movlw	15
  8680  001116  6E03               	movwf	i2___wmul@multiplicand^0,c
  8681  001118  ECCB  F01D         	call	i2___wmul	;wreg free
  8682  00111C  0E71               	movlw	low (_task_list+13)
  8683  00111E  2401               	addwf	?i2___wmul^0,w,c
  8684  001120  6ED9               	movwf	fsr2l,c
  8685  001122  0E01               	movlw	high (_task_list+13)
  8686  001124  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8687  001126  6EDA               	movwf	fsr2h,c
  8688  001128  CFDE F028          	movff	postinc2,_timer_interrupt$2146
  8689  00112C  CFDD F029          	movff	postdec2,_timer_interrupt$2146+1
  8690                           
  8691                           ;clock.c: 201:             enqueue(task_list[pos].func_ptr, task_list[pos].data_p);
  8692  001130  C025  F00A         	movff	_timer_interrupt$2141,enqueue@ptr
  8693  001134  C026  F00B         	movff	_timer_interrupt$2141+1,enqueue@ptr+1
  8694  001138  C027  F00C         	movff	_timer_interrupt$2141+2,enqueue@ptr+2
  8695  00113C  C028  F00D         	movff	_timer_interrupt$2146,enqueue@data_ptr
  8696  001140  C029  F00E         	movff	_timer_interrupt$2146+1,enqueue@data_ptr+1
  8697  001144  EC90  F019         	call	_enqueue	;wreg free
  8698                           
  8699                           ;clock.c: 202:             head = task_list[pos].next;
  8700  001148  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  8701  00114C  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  8702  001150  0E00               	movlw	0
  8703  001152  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8704  001154  0E0F               	movlw	15
  8705  001156  6E03               	movwf	i2___wmul@multiplicand^0,c
  8706  001158  ECCB  F01D         	call	i2___wmul	;wreg free
  8707  00115C  0E6F               	movlw	low (_task_list+11)
  8708  00115E  2401               	addwf	?i2___wmul^0,w,c
  8709  001160  6ED9               	movwf	fsr2l,c
  8710  001162  0E01               	movlw	high (_task_list+11)
  8711  001164  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8712  001166  6EDA               	movwf	fsr2h,c
  8713  001168  50DF               	movf	indf2,w,c
  8714  00116A  0100               	movlb	0	; () banked
  8715  00116C  6FC7               	movwf	_head& (0+255),b
  8716                           
  8717                           ;clock.c: 203:             if(task_list[pos].period_t == 0) {
  8718  00116E  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  8719  001172  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  8720  001176  0E00               	movlw	0
  8721  001178  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8722  00117A  0E0F               	movlw	15
  8723  00117C  6E03               	movwf	i2___wmul@multiplicand^0,c
  8724  00117E  ECCB  F01D         	call	i2___wmul	;wreg free
  8725  001182  0E68               	movlw	low (_task_list+4)
  8726  001184  2401               	addwf	?i2___wmul^0,w,c
  8727  001186  6ED9               	movwf	fsr2l,c
  8728  001188  0E01               	movlw	high (_task_list+4)
  8729  00118A  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8730  00118C  6EDA               	movwf	fsr2h,c
  8731  00118E  50DE               	movf	postinc2,w,c
  8732  001190  10DE               	iorwf	postinc2,w,c
  8733  001192  10DE               	iorwf	postinc2,w,c
  8734  001194  10DE               	iorwf	postinc2,w,c
  8735  001196  A4D8               	btfss	status,2,c
  8736  001198  EFD0  F008         	goto	i2u366_41
  8737  00119C  EFD2  F008         	goto	i2u366_40
  8738  0011A0                     i2u366_41:
  8739  0011A0  EFD7  F008         	goto	i2l4125
  8740  0011A4                     i2u366_40:
  8741  0011A4                     
  8742                           ;clock.c: 204:                 remove_timer(pos);
  8743  0011A4  5032               	movf	timer_interrupt@pos^0,w,c
  8744  0011A6  EC3D  F013         	call	_remove_timer
  8745                           
  8746                           ;clock.c: 205:             }
  8747  0011AA  EF95  F00A         	goto	i2l4155
  8748  0011AE                     i2l4125:
  8749                           
  8750                           ;clock.c: 207:                 task_list[pos].delay_t = task_list[pos].period_t;
  8751  0011AE  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  8752  0011B2  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  8753  0011B6  0E00               	movlw	0
  8754  0011B8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8755  0011BA  0E0F               	movlw	15
  8756  0011BC  6E03               	movwf	i2___wmul@multiplicand^0,c
  8757  0011BE  ECCB  F01D         	call	i2___wmul	;wreg free
  8758  0011C2  0E68               	movlw	low (_task_list+4)
  8759  0011C4  2401               	addwf	?i2___wmul^0,w,c
  8760  0011C6  6ED9               	movwf	fsr2l,c
  8761  0011C8  0E01               	movlw	high (_task_list+4)
  8762  0011CA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8763  0011CC  6EDA               	movwf	fsr2h,c
  8764  0011CE  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  8765  0011D2  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  8766  0011D6  0E00               	movlw	0
  8767  0011D8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8768  0011DA  0E0F               	movlw	15
  8769  0011DC  6E03               	movwf	i2___wmul@multiplicand^0,c
  8770  0011DE  ECCB  F01D         	call	i2___wmul	;wreg free
  8771  0011E2  0E64               	movlw	low _task_list
  8772  0011E4  2401               	addwf	?i2___wmul^0,w,c
  8773  0011E6  6EE1               	movwf	fsr1l,c
  8774  0011E8  0E01               	movlw	high _task_list
  8775  0011EA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8776  0011EC  6EE2               	movwf	fsr1h,c
  8777  0011EE  CFDE FFE6          	movff	postinc2,postinc1
  8778  0011F2  CFDE FFE6          	movff	postinc2,postinc1
  8779  0011F6  CFDE FFE6          	movff	postinc2,postinc1
  8780  0011FA  CFDE FFE6          	movff	postinc2,postinc1
  8781  0011FE                     
  8782                           ;clock.c: 208:                 int sum = task_list[head].delay_t;
  8783  0011FE  0100               	movlb	0	; () banked
  8784  001200  51C7               	movf	_head& (0+255),w,b
  8785  001202  0D0F               	mullw	15
  8786  001204  0E64               	movlw	low _task_list
  8787  001206  24F3               	addwf	243,w,c
  8788  001208  6ED9               	movwf	fsr2l,c
  8789  00120A  0E01               	movlw	high _task_list
  8790  00120C  20F4               	addwfc	prodh,w,c
  8791  00120E  6EDA               	movwf	fsr2h,c
  8792  001210  CFDE F02E          	movff	postinc2,timer_interrupt@sum
  8793  001214  CFDD F02F          	movff	postdec2,timer_interrupt@sum+1
  8794  001218                     
  8795                           ; BSR set to: 0
  8796                           ;clock.c: 209:                 if(head == 105 || (head != 105 && sum > task_list[pos].de
      +                          lay_t)) {
  8797  001218  0E69               	movlw	105
  8798  00121A  19C7               	xorwf	_head& (0+255),w,b
  8799  00121C  B4D8               	btfsc	status,2,c
  8800  00121E  EF13  F009         	goto	i2u367_41
  8801  001222  EF15  F009         	goto	i2u367_40
  8802  001226                     i2u367_41:
  8803  001226  EF46  F009         	goto	i2l4135
  8804  00122A                     i2u367_40:
  8805  00122A                     
  8806                           ; BSR set to: 0
  8807  00122A  0E69               	movlw	105
  8808  00122C  19C7               	xorwf	_head& (0+255),w,b
  8809  00122E  B4D8               	btfsc	status,2,c
  8810  001230  EF1C  F009         	goto	i2u368_41
  8811  001234  EF1E  F009         	goto	i2u368_40
  8812  001238                     i2u368_41:
  8813  001238  EF62  F009         	goto	i2l4139
  8814  00123C                     i2u368_40:
  8815  00123C                     
  8816                           ; BSR set to: 0
  8817  00123C  C02E  F00F         	movff	timer_interrupt@sum,??_timer_interrupt
  8818  001240  C02F  F010         	movff	timer_interrupt@sum+1,??_timer_interrupt+1
  8819  001244  0E00               	movlw	0
  8820  001246  BE10               	btfsc	(??_timer_interrupt+1)^0,7,c
  8821  001248  0EFF               	movlw	255
  8822  00124A  6E11               	movwf	(??_timer_interrupt+2)^0,c
  8823  00124C  6E12               	movwf	(??_timer_interrupt+3)^0,c
  8824  00124E  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  8825  001252  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  8826  001256  0E00               	movlw	0
  8827  001258  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8828  00125A  0E0F               	movlw	15
  8829  00125C  6E03               	movwf	i2___wmul@multiplicand^0,c
  8830  00125E  ECCB  F01D         	call	i2___wmul	;wreg free
  8831  001262  0E64               	movlw	low _task_list
  8832  001264  2401               	addwf	?i2___wmul^0,w,c
  8833  001266  6ED9               	movwf	fsr2l,c
  8834  001268  0E01               	movlw	high _task_list
  8835  00126A  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8836  00126C  6EDA               	movwf	fsr2h,c
  8837  00126E  500F               	movf	??_timer_interrupt^0,w,c
  8838  001270  5CDE               	subwf	postinc2,w,c
  8839  001272  5010               	movf	(??_timer_interrupt+1)^0,w,c
  8840  001274  58DE               	subwfb	postinc2,w,c
  8841  001276  5011               	movf	(??_timer_interrupt+2)^0,w,c
  8842  001278  58DE               	subwfb	postinc2,w,c
  8843  00127A  5012               	movf	(??_timer_interrupt+3)^0,w,c
  8844  00127C  58DE               	subwfb	postinc2,w,c
  8845  00127E  B0D8               	btfsc	status,0,c
  8846  001280  EF44  F009         	goto	i2u369_41
  8847  001284  EF46  F009         	goto	i2u369_40
  8848  001288                     i2u369_41:
  8849  001288  EF62  F009         	goto	i2l4139
  8850  00128C                     i2u369_40:
  8851  00128C                     i2l4135:
  8852                           
  8853                           ;clock.c: 210:                     task_list[pos].next = head;
  8854  00128C  0100               	movlb	0	; () banked
  8855  00128E  51C7               	movf	_head& (0+255),w,b
  8856  001290  6E0F               	movwf	??_timer_interrupt^0,c
  8857  001292  6A10               	clrf	(??_timer_interrupt+1)^0,c
  8858  001294  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  8859  001298  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  8860  00129C  0E00               	movlw	0
  8861  00129E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8862  0012A0  0E0F               	movlw	15
  8863  0012A2  6E03               	movwf	i2___wmul@multiplicand^0,c
  8864  0012A4  ECCB  F01D         	call	i2___wmul	;wreg free
  8865  0012A8  0E6F               	movlw	low (_task_list+11)
  8866  0012AA  2401               	addwf	?i2___wmul^0,w,c
  8867  0012AC  6ED9               	movwf	fsr2l,c
  8868  0012AE  0E01               	movlw	high (_task_list+11)
  8869  0012B0  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8870  0012B2  6EDA               	movwf	fsr2h,c
  8871  0012B4  C00F  FFDE         	movff	??_timer_interrupt,postinc2
  8872  0012B8  C010  FFDD         	movff	??_timer_interrupt+1,postdec2
  8873  0012BC                     
  8874                           ;clock.c: 211:                     head = pos;
  8875  0012BC  C032  F0C7         	movff	timer_interrupt@pos,_head
  8876                           
  8877                           ;clock.c: 212:                 } else {
  8878  0012C0  EF37  F00A         	goto	i2l465
  8879  0012C4                     i2l4139:
  8880                           
  8881                           ;clock.c: 214:                     int cur = task_list[head].next;
  8882  0012C4  0100               	movlb	0	; () banked
  8883  0012C6  51C7               	movf	_head& (0+255),w,b
  8884  0012C8  0D0F               	mullw	15
  8885  0012CA  0E6F               	movlw	low (_task_list+11)
  8886  0012CC  24F3               	addwf	243,w,c
  8887  0012CE  6ED9               	movwf	fsr2l,c
  8888  0012D0  0E01               	movlw	high (_task_list+11)
  8889  0012D2  20F4               	addwfc	prodh,w,c
  8890  0012D4  6EDA               	movwf	fsr2h,c
  8891  0012D6  CFDE F030          	movff	postinc2,timer_interrupt@cur
  8892  0012DA  CFDD F031          	movff	postdec2,timer_interrupt@cur+1
  8893  0012DE                     
  8894                           ; BSR set to: 0
  8895                           ;clock.c: 215:                     int prev = head;
  8896  0012DE  C0C7  F02C         	movff	_head,timer_interrupt@prev
  8897  0012E2  6A2D               	clrf	(timer_interrupt@prev+1)^0,c
  8898                           
  8899                           ;clock.c: 216:                     while(cur != 105 && sum + task_list[cur].delay_t <= t
      +                          ask_list[pos].delay_t) {
  8900  0012E4  EFA0  F009         	goto	i2l4147
  8901  0012E8                     i2l4143:
  8902                           
  8903                           ;clock.c: 218:                         sum+= task_list[cur].delay_t;
  8904  0012E8  C030  F001         	movff	timer_interrupt@cur,i2___wmul@multiplier
  8905  0012EC  C031  F002         	movff	timer_interrupt@cur+1,i2___wmul@multiplier+1
  8906  0012F0  0E00               	movlw	0
  8907  0012F2  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8908  0012F4  0E0F               	movlw	15
  8909  0012F6  6E03               	movwf	i2___wmul@multiplicand^0,c
  8910  0012F8  ECCB  F01D         	call	i2___wmul	;wreg free
  8911  0012FC  0E64               	movlw	low _task_list
  8912  0012FE  2401               	addwf	?i2___wmul^0,w,c
  8913  001300  6ED9               	movwf	fsr2l,c
  8914  001302  0E01               	movlw	high _task_list
  8915  001304  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8916  001306  6EDA               	movwf	fsr2h,c
  8917  001308  50DE               	movf	postinc2,w,c
  8918  00130A  262E               	addwf	timer_interrupt@sum^0,f,c
  8919  00130C  50DD               	movf	postdec2,w,c
  8920  00130E  222F               	addwfc	(timer_interrupt@sum+1)^0,f,c
  8921  001310                     
  8922                           ;clock.c: 219:                         prev = cur;
  8923  001310  C030  F02C         	movff	timer_interrupt@cur,timer_interrupt@prev
  8924  001314  C031  F02D         	movff	timer_interrupt@cur+1,timer_interrupt@prev+1
  8925                           
  8926                           ;clock.c: 220:                         cur = task_list[cur].next;
  8927  001318  C030  F001         	movff	timer_interrupt@cur,i2___wmul@multiplier
  8928  00131C  C031  F002         	movff	timer_interrupt@cur+1,i2___wmul@multiplier+1
  8929  001320  0E00               	movlw	0
  8930  001322  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8931  001324  0E0F               	movlw	15
  8932  001326  6E03               	movwf	i2___wmul@multiplicand^0,c
  8933  001328  ECCB  F01D         	call	i2___wmul	;wreg free
  8934  00132C  0E6F               	movlw	low (_task_list+11)
  8935  00132E  2401               	addwf	?i2___wmul^0,w,c
  8936  001330  6ED9               	movwf	fsr2l,c
  8937  001332  0E01               	movlw	high (_task_list+11)
  8938  001334  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8939  001336  6EDA               	movwf	fsr2h,c
  8940  001338  CFDE F030          	movff	postinc2,timer_interrupt@cur
  8941  00133C  CFDD F031          	movff	postdec2,timer_interrupt@cur+1
  8942  001340                     i2l4147:
  8943                           
  8944                           ;clock.c: 216:                     while(cur != 105 && sum + task_list[cur].delay_t <= t
      +                          ask_list[pos].delay_t) {
  8945  001340  0E69               	movlw	105
  8946  001342  1830               	xorwf	timer_interrupt@cur^0,w,c
  8947  001344  1031               	iorwf	(timer_interrupt@cur+1)^0,w,c
  8948  001346  B4D8               	btfsc	status,2,c
  8949  001348  EFA8  F009         	goto	i2u370_41
  8950  00134C  EFAA  F009         	goto	i2u370_40
  8951  001350                     i2u370_41:
  8952  001350  EFF6  F009         	goto	i2l4151
  8953  001354                     i2u370_40:
  8954  001354  C030  F001         	movff	timer_interrupt@cur,i2___wmul@multiplier
  8955  001358  C031  F002         	movff	timer_interrupt@cur+1,i2___wmul@multiplier+1
  8956  00135C  0E00               	movlw	0
  8957  00135E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8958  001360  0E0F               	movlw	15
  8959  001362  6E03               	movwf	i2___wmul@multiplicand^0,c
  8960  001364  ECCB  F01D         	call	i2___wmul	;wreg free
  8961  001368  0E64               	movlw	low _task_list
  8962  00136A  2401               	addwf	?i2___wmul^0,w,c
  8963  00136C  6ED9               	movwf	fsr2l,c
  8964  00136E  0E01               	movlw	high _task_list
  8965  001370  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8966  001372  6EDA               	movwf	fsr2h,c
  8967  001374  CFDE F00F          	movff	postinc2,??_timer_interrupt
  8968  001378  CFDE F010          	movff	postinc2,??_timer_interrupt+1
  8969  00137C  CFDE F011          	movff	postinc2,??_timer_interrupt+2
  8970  001380  CFDE F012          	movff	postinc2,??_timer_interrupt+3
  8971  001384  C02E  F013         	movff	timer_interrupt@sum,??_timer_interrupt+4
  8972  001388  C02F  F014         	movff	timer_interrupt@sum+1,??_timer_interrupt+5
  8973  00138C  0E00               	movlw	0
  8974  00138E  BE14               	btfsc	(??_timer_interrupt+5)^0,7,c
  8975  001390  0EFF               	movlw	255
  8976  001392  6E15               	movwf	(??_timer_interrupt+6)^0,c
  8977  001394  6E16               	movwf	(??_timer_interrupt+7)^0,c
  8978  001396  500F               	movf	??_timer_interrupt^0,w,c
  8979  001398  2413               	addwf	(??_timer_interrupt+4)^0,w,c
  8980  00139A  6E17               	movwf	(??_timer_interrupt+8)^0,c
  8981  00139C  5010               	movf	(??_timer_interrupt+1)^0,w,c
  8982  00139E  2014               	addwfc	(??_timer_interrupt+5)^0,w,c
  8983  0013A0  6E18               	movwf	(??_timer_interrupt+9)^0,c
  8984  0013A2  5011               	movf	(??_timer_interrupt+2)^0,w,c
  8985  0013A4  2015               	addwfc	(??_timer_interrupt+6)^0,w,c
  8986  0013A6  6E19               	movwf	(??_timer_interrupt+10)^0,c
  8987  0013A8  5012               	movf	(??_timer_interrupt+3)^0,w,c
  8988  0013AA  2016               	addwfc	(??_timer_interrupt+7)^0,w,c
  8989  0013AC  6E1A               	movwf	(??_timer_interrupt+11)^0,c
  8990  0013AE  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  8991  0013B2  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  8992  0013B6  0E00               	movlw	0
  8993  0013B8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8994  0013BA  0E0F               	movlw	15
  8995  0013BC  6E03               	movwf	i2___wmul@multiplicand^0,c
  8996  0013BE  ECCB  F01D         	call	i2___wmul	;wreg free
  8997  0013C2  0E64               	movlw	low _task_list
  8998  0013C4  2401               	addwf	?i2___wmul^0,w,c
  8999  0013C6  6ED9               	movwf	fsr2l,c
  9000  0013C8  0E01               	movlw	high _task_list
  9001  0013CA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9002  0013CC  6EDA               	movwf	fsr2h,c
  9003  0013CE  5017               	movf	(??_timer_interrupt+8)^0,w,c
  9004  0013D0  5CDE               	subwf	postinc2,w,c
  9005  0013D2  5018               	movf	(??_timer_interrupt+9)^0,w,c
  9006  0013D4  58DE               	subwfb	postinc2,w,c
  9007  0013D6  5019               	movf	(??_timer_interrupt+10)^0,w,c
  9008  0013D8  58DE               	subwfb	postinc2,w,c
  9009  0013DA  501A               	movf	(??_timer_interrupt+11)^0,w,c
  9010  0013DC  58DE               	subwfb	postinc2,w,c
  9011  0013DE  B0D8               	btfsc	status,0,c
  9012  0013E0  EFF4  F009         	goto	i2u371_41
  9013  0013E4  EFF6  F009         	goto	i2u371_40
  9014  0013E8                     i2u371_41:
  9015  0013E8  EF74  F009         	goto	i2l4143
  9016  0013EC                     i2u371_40:
  9017  0013EC                     i2l4151:
  9018                           
  9019                           ;clock.c: 222:                     task_list[prev].next = pos;
  9020  0013EC  C02C  F001         	movff	timer_interrupt@prev,i2___wmul@multiplier
  9021  0013F0  C02D  F002         	movff	timer_interrupt@prev+1,i2___wmul@multiplier+1
  9022  0013F4  0E00               	movlw	0
  9023  0013F6  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9024  0013F8  0E0F               	movlw	15
  9025  0013FA  6E03               	movwf	i2___wmul@multiplicand^0,c
  9026  0013FC  ECCB  F01D         	call	i2___wmul	;wreg free
  9027  001400  0E6F               	movlw	low (_task_list+11)
  9028  001402  2401               	addwf	?i2___wmul^0,w,c
  9029  001404  6ED9               	movwf	fsr2l,c
  9030  001406  0E01               	movlw	high (_task_list+11)
  9031  001408  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9032  00140A  6EDA               	movwf	fsr2h,c
  9033  00140C  C032  FFDE         	movff	timer_interrupt@pos,postinc2
  9034  001410  C033  FFDD         	movff	timer_interrupt@pos+1,postdec2
  9035                           
  9036                           ;clock.c: 223:                     task_list[pos].next = cur;
  9037  001414  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  9038  001418  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  9039  00141C  0E00               	movlw	0
  9040  00141E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9041  001420  0E0F               	movlw	15
  9042  001422  6E03               	movwf	i2___wmul@multiplicand^0,c
  9043  001424  ECCB  F01D         	call	i2___wmul	;wreg free
  9044  001428  0E6F               	movlw	low (_task_list+11)
  9045  00142A  2401               	addwf	?i2___wmul^0,w,c
  9046  00142C  6ED9               	movwf	fsr2l,c
  9047  00142E  0E01               	movlw	high (_task_list+11)
  9048  001430  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9049  001432  6EDA               	movwf	fsr2h,c
  9050  001434  C030  FFDE         	movff	timer_interrupt@cur,postinc2
  9051  001438  C031  FFDD         	movff	timer_interrupt@cur+1,postdec2
  9052                           
  9053                           ;clock.c: 224:                     task_list[pos].delay_t-= sum;
  9054  00143C  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  9055  001440  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  9056  001444  0E00               	movlw	0
  9057  001446  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9058  001448  0E0F               	movlw	15
  9059  00144A  6E03               	movwf	i2___wmul@multiplicand^0,c
  9060  00144C  ECCB  F01D         	call	i2___wmul	;wreg free
  9061  001450  0E64               	movlw	low _task_list
  9062  001452  2401               	addwf	?i2___wmul^0,w,c
  9063  001454  6ED9               	movwf	fsr2l,c
  9064  001456  0E01               	movlw	high _task_list
  9065  001458  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9066  00145A  6EDA               	movwf	fsr2h,c
  9067  00145C  502E               	movf	timer_interrupt@sum^0,w,c
  9068  00145E  5EDE               	subwf	postinc2,f,c
  9069  001460  502F               	movf	(timer_interrupt@sum+1)^0,w,c
  9070  001462  5ADE               	subwfb	postinc2,f,c
  9071  001464  0E00               	movlw	0
  9072  001466  BE2F               	btfsc	(timer_interrupt@sum+1)^0,7,c
  9073  001468  0EFF               	movlw	255
  9074  00146A  5ADE               	subwfb	postinc2,f,c
  9075  00146C  5ADE               	subwfb	postinc2,f,c
  9076  00146E                     i2l465:
  9077                           
  9078                           ;clock.c: 226:                 if(task_list[pos].next != 105)
  9079  00146E  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  9080  001472  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  9081  001476  0E00               	movlw	0
  9082  001478  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9083  00147A  0E0F               	movlw	15
  9084  00147C  6E03               	movwf	i2___wmul@multiplicand^0,c
  9085  00147E  ECCB  F01D         	call	i2___wmul	;wreg free
  9086  001482  0E6F               	movlw	low (_task_list+11)
  9087  001484  2401               	addwf	?i2___wmul^0,w,c
  9088  001486  6ED9               	movwf	fsr2l,c
  9089  001488  0E01               	movlw	high (_task_list+11)
  9090  00148A  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9091  00148C  6EDA               	movwf	fsr2h,c
  9092  00148E  0E69               	movlw	105
  9093  001490  18DE               	xorwf	postinc2,w,c
  9094  001492  10DE               	iorwf	postinc2,w,c
  9095  001494  B4D8               	btfsc	status,2,c
  9096  001496  EF4F  F00A         	goto	i2u372_41
  9097  00149A  EF51  F00A         	goto	i2u372_40
  9098  00149E                     i2u372_41:
  9099  00149E  EF95  F00A         	goto	i2l4155
  9100  0014A2                     i2u372_40:
  9101  0014A2                     
  9102                           ;clock.c: 227:                     task_list[task_list[pos].next].delay_t -= task_list[p
      +                          os].delay_t;
  9103  0014A2  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  9104  0014A6  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  9105  0014AA  0E00               	movlw	0
  9106  0014AC  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9107  0014AE  0E0F               	movlw	15
  9108  0014B0  6E03               	movwf	i2___wmul@multiplicand^0,c
  9109  0014B2  ECCB  F01D         	call	i2___wmul	;wreg free
  9110  0014B6  0E6F               	movlw	low (_task_list+11)
  9111  0014B8  2401               	addwf	?i2___wmul^0,w,c
  9112  0014BA  6ED9               	movwf	fsr2l,c
  9113  0014BC  0E01               	movlw	high (_task_list+11)
  9114  0014BE  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9115  0014C0  6EDA               	movwf	fsr2h,c
  9116  0014C2  CFDE F02A          	movff	postinc2,_timer_interrupt$2147
  9117  0014C6  CFDD F02B          	movff	postdec2,_timer_interrupt$2147+1
  9118                           
  9119                           ;clock.c: 227:                     task_list[task_list[pos].next].delay_t -= task_list[p
      +                          os].delay_t;
  9120  0014CA  C032  F001         	movff	timer_interrupt@pos,i2___wmul@multiplier
  9121  0014CE  C033  F002         	movff	timer_interrupt@pos+1,i2___wmul@multiplier+1
  9122  0014D2  0E00               	movlw	0
  9123  0014D4  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9124  0014D6  0E0F               	movlw	15
  9125  0014D8  6E03               	movwf	i2___wmul@multiplicand^0,c
  9126  0014DA  ECCB  F01D         	call	i2___wmul	;wreg free
  9127  0014DE  0E64               	movlw	low _task_list
  9128  0014E0  2401               	addwf	?i2___wmul^0,w,c
  9129  0014E2  6ED9               	movwf	fsr2l,c
  9130  0014E4  0E01               	movlw	high _task_list
  9131  0014E6  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9132  0014E8  6EDA               	movwf	fsr2h,c
  9133  0014EA  CFDE F00F          	movff	postinc2,??_timer_interrupt
  9134  0014EE  CFDE F010          	movff	postinc2,??_timer_interrupt+1
  9135  0014F2  CFDE F011          	movff	postinc2,??_timer_interrupt+2
  9136  0014F6  CFDE F012          	movff	postinc2,??_timer_interrupt+3
  9137  0014FA  C02A  F001         	movff	_timer_interrupt$2147,i2___wmul@multiplier
  9138  0014FE  C02B  F002         	movff	_timer_interrupt$2147+1,i2___wmul@multiplier+1
  9139  001502  0E00               	movlw	0
  9140  001504  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9141  001506  0E0F               	movlw	15
  9142  001508  6E03               	movwf	i2___wmul@multiplicand^0,c
  9143  00150A  ECCB  F01D         	call	i2___wmul	;wreg free
  9144  00150E  0E64               	movlw	low _task_list
  9145  001510  2401               	addwf	?i2___wmul^0,w,c
  9146  001512  6ED9               	movwf	fsr2l,c
  9147  001514  0E01               	movlw	high _task_list
  9148  001516  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9149  001518  6EDA               	movwf	fsr2h,c
  9150  00151A  500F               	movf	??_timer_interrupt^0,w,c
  9151  00151C  5EDE               	subwf	postinc2,f,c
  9152  00151E  5010               	movf	(??_timer_interrupt+1)^0,w,c
  9153  001520  5ADE               	subwfb	postinc2,f,c
  9154  001522  5011               	movf	(??_timer_interrupt+2)^0,w,c
  9155  001524  5ADE               	subwfb	postinc2,f,c
  9156  001526  5012               	movf	(??_timer_interrupt+3)^0,w,c
  9157  001528  5ADE               	subwfb	postinc2,f,c
  9158  00152A                     i2l4155:
  9159                           
  9160                           ;clock.c: 199:         while(task_list[head].delay_t == 0) {
  9161  00152A  0100               	movlb	0	; () banked
  9162  00152C  51C7               	movf	_head& (0+255),w,b
  9163  00152E  0D0F               	mullw	15
  9164  001530  0E64               	movlw	low _task_list
  9165  001532  24F3               	addwf	243,w,c
  9166  001534  6ED9               	movwf	fsr2l,c
  9167  001536  0E01               	movlw	high _task_list
  9168  001538  20F4               	addwfc	prodh,w,c
  9169  00153A  6EDA               	movwf	fsr2h,c
  9170  00153C  50DE               	movf	postinc2,w,c
  9171  00153E  10DE               	iorwf	postinc2,w,c
  9172  001540  10DE               	iorwf	postinc2,w,c
  9173  001542  10DE               	iorwf	postinc2,w,c
  9174  001544  B4D8               	btfsc	status,2,c
  9175  001546  EFA7  F00A         	goto	i2u373_41
  9176  00154A  EFA9  F00A         	goto	i2u373_40
  9177  00154E                     i2u373_41:
  9178  00154E  EF6B  F008         	goto	i2l459
  9179  001552                     i2u373_40:
  9180  001552                     
  9181                           ; BSR set to: 0
  9182                           ;clock.c: 230:         task_list[head].delay_t-= 10;
  9183  001552  51C7               	movf	_head& (0+255),w,b
  9184  001554  0D0F               	mullw	15
  9185  001556  0E64               	movlw	low _task_list
  9186  001558  24F3               	addwf	243,w,c
  9187  00155A  6ED9               	movwf	fsr2l,c
  9188  00155C  0E01               	movlw	high _task_list
  9189  00155E  20F4               	addwfc	prodh,w,c
  9190  001560  6EDA               	movwf	fsr2h,c
  9191  001562  0E0A               	movlw	10
  9192  001564  5EDE               	subwf	postinc2,f,c
  9193  001566  0E00               	movlw	0
  9194  001568  5ADE               	subwfb	postinc2,f,c
  9195  00156A  5ADE               	subwfb	postinc2,f,c
  9196  00156C  5ADE               	subwfb	postinc2,f,c
  9197  00156E                     i2l457:
  9198  00156E  C024  FFF4         	movff	??_timer_interrupt+21,prodh
  9199  001572  C023  FFF3         	movff	??_timer_interrupt+20,prodl
  9200  001576  C022  FFDA         	movff	??_timer_interrupt+19,fsr2h
  9201  00157A  C021  FFD9         	movff	??_timer_interrupt+18,fsr2l
  9202  00157E  C020  FFE2         	movff	??_timer_interrupt+17,fsr1h
  9203  001582  C01F  FFE1         	movff	??_timer_interrupt+16,fsr1l
  9204  001586  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9205  001588  0011               	retfie		f
  9206  00158A                     __end_of_timer_interrupt:
  9207                           	opt callstack 0
  9208                           
  9209 ;; *************** function _remove_timer *****************
  9210 ;; Defined at:
  9211 ;;		line 155 in file "clock.c"
  9212 ;; Parameters:    Size  Location     Type
  9213 ;;  id              1    wreg     unsigned char 
  9214 ;; Auto vars:     Size  Location     Type
  9215 ;;  id              1    5[COMRAM] unsigned char 
  9216 ;;  pos             1    4[COMRAM] unsigned char 
  9217 ;; Return value:  Size  Location     Type
  9218 ;;                  2  435[None  ] int 
  9219 ;; Registers used:
  9220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9221 ;; Tracked objects:
  9222 ;;		On entry : 0/0
  9223 ;;		On exit  : 0/0
  9224 ;;		Unchanged: 0/0
  9225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9227 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9228 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9229 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9230 ;;Total ram usage:        6 bytes
  9231 ;; Hardware stack levels used:    1
  9232 ;; Hardware stack levels required when called:    1
  9233 ;; This function calls:
  9234 ;;		_isEmptyList
  9235 ;; This function is called by:
  9236 ;;		_timer_interrupt
  9237 ;; This function uses a non-reentrant model
  9238 ;;
  9239                           
  9240                           	psect	text55
  9241  00267A                     __ptext55:
  9242                           	opt callstack 0
  9243  00267A                     _remove_timer:
  9244                           	opt callstack 21
  9245                           
  9246                           ;incstack = 0
  9247                           ;remove_timer@id stored from wreg
  9248  00267A  6E06               	movwf	remove_timer@id^0,c
  9249  00267C                     
  9250                           ;clock.c: 156:     if(isEmptyList() || task_list[id].func_ptr == ((void*)0))
  9251  00267C  EC3B  F01E         	call	_isEmptyList	;wreg free
  9252  002680  0900               	iorlw	0
  9253  002682  A4D8               	btfss	status,2,c
  9254  002684  EF46  F013         	goto	i2u356_41
  9255  002688  EF48  F013         	goto	i2u356_40
  9256  00268C                     i2u356_41:
  9257  00268C  EF08  F014         	goto	i2l439
  9258  002690                     i2u356_40:
  9259  002690  5006               	movf	remove_timer@id^0,w,c
  9260  002692  0D0F               	mullw	15
  9261  002694  0E6C               	movlw	low (_task_list+8)
  9262  002696  24F3               	addwf	243,w,c
  9263  002698  6ED9               	movwf	fsr2l,c
  9264  00269A  0E01               	movlw	high (_task_list+8)
  9265  00269C  20F4               	addwfc	prodh,w,c
  9266  00269E  6EDA               	movwf	fsr2h,c
  9267  0026A0  50DE               	movf	postinc2,w,c
  9268  0026A2  10DE               	iorwf	postinc2,w,c
  9269  0026A4  10DE               	iorwf	postinc2,w,c
  9270  0026A6  A4D8               	btfss	status,2,c
  9271  0026A8  EF58  F013         	goto	i2u357_41
  9272  0026AC  EF5A  F013         	goto	i2u357_40
  9273  0026B0                     i2u357_41:
  9274  0026B0  EF5C  F013         	goto	i2l4057
  9275  0026B4                     i2u357_40:
  9276  0026B4  EF08  F014         	goto	i2l439
  9277  0026B8                     i2l4057:
  9278                           
  9279                           ;clock.c: 158:     task_list[id].delay_t = 0;
  9280  0026B8  5006               	movf	remove_timer@id^0,w,c
  9281  0026BA  0D0F               	mullw	15
  9282  0026BC  0E64               	movlw	low _task_list
  9283  0026BE  24F3               	addwf	243,w,c
  9284  0026C0  6ED9               	movwf	fsr2l,c
  9285  0026C2  0E01               	movlw	high _task_list
  9286  0026C4  20F4               	addwfc	prodh,w,c
  9287  0026C6  6EDA               	movwf	fsr2h,c
  9288  0026C8  6ADE               	clrf	postinc2,c
  9289  0026CA  6ADE               	clrf	postinc2,c
  9290  0026CC  6ADE               	clrf	postinc2,c
  9291  0026CE  6ADD               	clrf	postdec2,c
  9292                           
  9293                           ;clock.c: 159:     task_list[id].period_t = 0;
  9294  0026D0  5006               	movf	remove_timer@id^0,w,c
  9295  0026D2  0D0F               	mullw	15
  9296  0026D4  0E68               	movlw	low (_task_list+4)
  9297  0026D6  24F3               	addwf	243,w,c
  9298  0026D8  6ED9               	movwf	fsr2l,c
  9299  0026DA  0E01               	movlw	high (_task_list+4)
  9300  0026DC  20F4               	addwfc	prodh,w,c
  9301  0026DE  6EDA               	movwf	fsr2h,c
  9302  0026E0  6ADE               	clrf	postinc2,c
  9303  0026E2  6ADE               	clrf	postinc2,c
  9304  0026E4  6ADE               	clrf	postinc2,c
  9305  0026E6  6ADD               	clrf	postdec2,c
  9306                           
  9307                           ;clock.c: 160:     task_list[id].func_ptr = ((void*)0);
  9308  0026E8  5006               	movf	remove_timer@id^0,w,c
  9309  0026EA  0D0F               	mullw	15
  9310  0026EC  0E6C               	movlw	low (_task_list+8)
  9311  0026EE  24F3               	addwf	243,w,c
  9312  0026F0  6ED9               	movwf	fsr2l,c
  9313  0026F2  0E01               	movlw	high (_task_list+8)
  9314  0026F4  20F4               	addwfc	prodh,w,c
  9315  0026F6  6EDA               	movwf	fsr2h,c
  9316  0026F8  0E00               	movlw	0
  9317  0026FA  6EDE               	movwf	postinc2,c
  9318  0026FC  0E00               	movlw	0
  9319  0026FE  6EDE               	movwf	postinc2,c
  9320  002700  0E00               	movlw	0
  9321  002702  6EDE               	movwf	postinc2,c
  9322                           
  9323                           ;clock.c: 161:     task_list[id].data_p = ((void*)0);
  9324  002704  5006               	movf	remove_timer@id^0,w,c
  9325  002706  0D0F               	mullw	15
  9326  002708  0E71               	movlw	low (_task_list+13)
  9327  00270A  24F3               	addwf	243,w,c
  9328  00270C  6ED9               	movwf	fsr2l,c
  9329  00270E  0E01               	movlw	high (_task_list+13)
  9330  002710  20F4               	addwfc	prodh,w,c
  9331  002712  6EDA               	movwf	fsr2h,c
  9332  002714  0E00               	movlw	0
  9333  002716  6EDE               	movwf	postinc2,c
  9334  002718  0E00               	movlw	0
  9335  00271A  6EDD               	movwf	postdec2,c
  9336  00271C                     
  9337                           ;clock.c: 162:     num_task--;
  9338  00271C  0100               	movlb	0	; () banked
  9339  00271E  07C8               	decf	_num_task& (0+255),f,b
  9340  002720                     
  9341                           ; BSR set to: 0
  9342                           ;clock.c: 163:     if(id == head) {
  9343  002720  51C7               	movf	_head& (0+255),w,b
  9344  002722  1806               	xorwf	remove_timer@id^0,w,c
  9345  002724  A4D8               	btfss	status,2,c
  9346  002726  EF97  F013         	goto	i2u358_41
  9347  00272A  EF99  F013         	goto	i2u358_40
  9348  00272E                     i2u358_41:
  9349  00272E  EFB1  F013         	goto	i2l440
  9350  002732                     i2u358_40:
  9351  002732                     
  9352                           ; BSR set to: 0
  9353                           ;clock.c: 164:         head = task_list[id].next;
  9354  002732  5006               	movf	remove_timer@id^0,w,c
  9355  002734  0D0F               	mullw	15
  9356  002736  0E6F               	movlw	low (_task_list+11)
  9357  002738  24F3               	addwf	243,w,c
  9358  00273A  6ED9               	movwf	fsr2l,c
  9359  00273C  0E01               	movlw	high (_task_list+11)
  9360  00273E  20F4               	addwfc	prodh,w,c
  9361  002740  6EDA               	movwf	fsr2h,c
  9362  002742  50DF               	movf	indf2,w,c
  9363  002744  6FC7               	movwf	_head& (0+255),b
  9364                           
  9365                           ;clock.c: 165:         task_list[id].next = 105;
  9366  002746  5006               	movf	remove_timer@id^0,w,c
  9367  002748  0D0F               	mullw	15
  9368  00274A  0E6F               	movlw	low (_task_list+11)
  9369  00274C  24F3               	addwf	243,w,c
  9370  00274E  6ED9               	movwf	fsr2l,c
  9371  002750  0E01               	movlw	high (_task_list+11)
  9372  002752  20F4               	addwfc	prodh,w,c
  9373  002754  6EDA               	movwf	fsr2h,c
  9374  002756  0E69               	movlw	105
  9375  002758  6EDE               	movwf	postinc2,c
  9376  00275A  0E00               	movlw	0
  9377  00275C  6EDD               	movwf	postdec2,c
  9378                           
  9379                           ;clock.c: 166:     }
  9380  00275E  EF08  F014         	goto	i2l439
  9381  002762                     i2l440:
  9382                           
  9383                           ; BSR set to: 0
  9384                           ;clock.c: 168:         char pos = head;
  9385  002762  C0C7  F005         	movff	_head,remove_timer@pos
  9386                           
  9387                           ;clock.c: 169:         while(task_list[pos].next != 105 && task_list[pos].next != id) {
  9388  002766  EFBF  F013         	goto	i2l442
  9389  00276A                     i2l4065:
  9390                           
  9391                           ;clock.c: 170:             pos = task_list[pos].next;
  9392  00276A  5005               	movf	remove_timer@pos^0,w,c
  9393  00276C  0D0F               	mullw	15
  9394  00276E  0E6F               	movlw	low (_task_list+11)
  9395  002770  24F3               	addwf	243,w,c
  9396  002772  6ED9               	movwf	fsr2l,c
  9397  002774  0E01               	movlw	high (_task_list+11)
  9398  002776  20F4               	addwfc	prodh,w,c
  9399  002778  6EDA               	movwf	fsr2h,c
  9400  00277A  50DF               	movf	indf2,w,c
  9401  00277C  6E05               	movwf	remove_timer@pos^0,c
  9402  00277E                     i2l442:
  9403                           
  9404                           ;clock.c: 169:         while(task_list[pos].next != 105 && task_list[pos].next != id) {
  9405  00277E  5005               	movf	remove_timer@pos^0,w,c
  9406  002780  0D0F               	mullw	15
  9407  002782  0E6F               	movlw	low (_task_list+11)
  9408  002784  24F3               	addwf	243,w,c
  9409  002786  6ED9               	movwf	fsr2l,c
  9410  002788  0E01               	movlw	high (_task_list+11)
  9411  00278A  20F4               	addwfc	prodh,w,c
  9412  00278C  6EDA               	movwf	fsr2h,c
  9413  00278E  0E69               	movlw	105
  9414  002790  18DE               	xorwf	postinc2,w,c
  9415  002792  10DE               	iorwf	postinc2,w,c
  9416  002794  B4D8               	btfsc	status,2,c
  9417  002796  EFCF  F013         	goto	i2u359_41
  9418  00279A  EFD1  F013         	goto	i2u359_40
  9419  00279E                     i2u359_41:
  9420  00279E  EFE8  F013         	goto	i2l4069
  9421  0027A2                     i2u359_40:
  9422  0027A2  5005               	movf	remove_timer@pos^0,w,c
  9423  0027A4  0D0F               	mullw	15
  9424  0027A6  0E6F               	movlw	low (_task_list+11)
  9425  0027A8  24F3               	addwf	243,w,c
  9426  0027AA  6ED9               	movwf	fsr2l,c
  9427  0027AC  0E01               	movlw	high (_task_list+11)
  9428  0027AE  20F4               	addwfc	prodh,w,c
  9429  0027B0  6EDA               	movwf	fsr2h,c
  9430  0027B2  5006               	movf	remove_timer@id^0,w,c
  9431  0027B4  6E03               	movwf	(??_remove_timer+2)^0,c
  9432  0027B6  6A04               	clrf	(??_remove_timer+3)^0,c
  9433  0027B8  50DE               	movf	postinc2,w,c
  9434  0027BA  1803               	xorwf	(??_remove_timer+2)^0,w,c
  9435  0027BC  E107               	bnz	i2u360_41
  9436  0027BE  50DE               	movf	postinc2,w,c
  9437  0027C0  1804               	xorwf	(??_remove_timer+3)^0,w,c
  9438  0027C2  A4D8               	btfss	status,2,c
  9439  0027C4  EFE6  F013         	goto	i2u360_41
  9440  0027C8  EFE8  F013         	goto	i2u360_40
  9441  0027CC                     i2u360_41:
  9442  0027CC  EFB5  F013         	goto	i2l4065
  9443  0027D0                     i2u360_40:
  9444  0027D0                     i2l4069:
  9445                           
  9446                           ;clock.c: 172:         task_list[pos].next = task_list[id].next;
  9447  0027D0  5006               	movf	remove_timer@id^0,w,c
  9448  0027D2  0D0F               	mullw	15
  9449  0027D4  0E6F               	movlw	low (_task_list+11)
  9450  0027D6  24F3               	addwf	243,w,c
  9451  0027D8  6ED9               	movwf	fsr2l,c
  9452  0027DA  0E01               	movlw	high (_task_list+11)
  9453  0027DC  20F4               	addwfc	prodh,w,c
  9454  0027DE  6EDA               	movwf	fsr2h,c
  9455  0027E0  5005               	movf	remove_timer@pos^0,w,c
  9456  0027E2  0D0F               	mullw	15
  9457  0027E4  0E6F               	movlw	low (_task_list+11)
  9458  0027E6  24F3               	addwf	243,w,c
  9459  0027E8  6EE1               	movwf	fsr1l,c
  9460  0027EA  0E01               	movlw	high (_task_list+11)
  9461  0027EC  20F4               	addwfc	prodh,w,c
  9462  0027EE  6EE2               	movwf	fsr1h,c
  9463  0027F0  CFDE FFE6          	movff	postinc2,postinc1
  9464  0027F4  CFDD FFE5          	movff	postdec2,postdec1
  9465  0027F8                     
  9466                           ;clock.c: 173:         task_list[id].next = 105;
  9467  0027F8  5006               	movf	remove_timer@id^0,w,c
  9468  0027FA  0D0F               	mullw	15
  9469  0027FC  0E6F               	movlw	low (_task_list+11)
  9470  0027FE  24F3               	addwf	243,w,c
  9471  002800  6ED9               	movwf	fsr2l,c
  9472  002802  0E01               	movlw	high (_task_list+11)
  9473  002804  20F4               	addwfc	prodh,w,c
  9474  002806  6EDA               	movwf	fsr2h,c
  9475  002808  0E69               	movlw	105
  9476  00280A  6EDE               	movwf	postinc2,c
  9477  00280C  0E00               	movlw	0
  9478  00280E  6EDD               	movwf	postdec2,c
  9479  002810                     i2l439:
  9480  002810  0012               	return		;funcret
  9481  002812                     __end_of_remove_timer:
  9482                           	opt callstack 0
  9483                           
  9484 ;; *************** function _isEmptyList *****************
  9485 ;; Defined at:
  9486 ;;		line 73 in file "clock.c"
  9487 ;; Parameters:    Size  Location     Type
  9488 ;;		None
  9489 ;; Auto vars:     Size  Location     Type
  9490 ;;		None
  9491 ;; Return value:  Size  Location     Type
  9492 ;;                  1    wreg      unsigned char 
  9493 ;; Registers used:
  9494 ;;		wreg, status,2
  9495 ;; Tracked objects:
  9496 ;;		On entry : 0/0
  9497 ;;		On exit  : 0/0
  9498 ;;		Unchanged: 0/0
  9499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9504 ;;Total ram usage:        0 bytes
  9505 ;; Hardware stack levels used:    1
  9506 ;; This function calls:
  9507 ;;		Nothing
  9508 ;; This function is called by:
  9509 ;;		_remove_timer
  9510 ;; This function uses a non-reentrant model
  9511 ;;
  9512                           
  9513                           	psect	text56
  9514  003C76                     __ptext56:
  9515                           	opt callstack 0
  9516  003C76                     _isEmptyList:
  9517                           	opt callstack 21
  9518  003C76                     
  9519                           ;clock.c: 74:     return num_task == 0 ? 1 : 0;
  9520  003C76  0100               	movlb	0	; () banked
  9521  003C78  51C8               	movf	_num_task& (0+255),w,b
  9522  003C7A  B4D8               	btfsc	status,2,c
  9523  003C7C  EF42  F01E         	goto	i2u337_41
  9524  003C80  EF45  F01E         	goto	i2u337_40
  9525  003C84                     i2u337_41:
  9526  003C84  0E01               	movlw	1
  9527  003C86  EF46  F01E         	goto	i2u338_40
  9528  003C8A                     i2u337_40:
  9529  003C8A  0E00               	movlw	0
  9530  003C8C                     i2u338_40:
  9531  003C8C                     
  9532                           ; BSR set to: 0
  9533  003C8C  0012               	return		;funcret
  9534  003C8E                     __end_of_isEmptyList:
  9535                           	opt callstack 0
  9536                           
  9537 ;; *************** function _enqueue *****************
  9538 ;; Defined at:
  9539 ;;		line 29 in file "clock.c"
  9540 ;; Parameters:    Size  Location     Type
  9541 ;;  ptr             3    9[COMRAM] PTR FTN(PTR void ,)void 
  9542 ;;		 -> changeState(1), check_humid_to_turn_fan(1), readTempAndHumid(1), NULL(0), 
  9543 ;;		 -> handleButton(1), printTempAndHumid(1), 
  9544 ;;  data_ptr        2   12[COMRAM] PTR void 
  9545 ;;		 -> NULL(0), 
  9546 ;; Auto vars:     Size  Location     Type
  9547 ;;		None
  9548 ;; Return value:  Size  Location     Type
  9549 ;;                  1    wreg      unsigned char 
  9550 ;; Registers used:
  9551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9552 ;; Tracked objects:
  9553 ;;		On entry : 0/0
  9554 ;;		On exit  : 0/0
  9555 ;;		Unchanged: 0/0
  9556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9557 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9560 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9561 ;;Total ram usage:        5 bytes
  9562 ;; Hardware stack levels used:    1
  9563 ;; Hardware stack levels required when called:    3
  9564 ;; This function calls:
  9565 ;;		_isFullQueue
  9566 ;;		i2___awmod
  9567 ;;		i2___wmul
  9568 ;; This function is called by:
  9569 ;;		_timer_interrupt
  9570 ;; This function uses a non-reentrant model
  9571 ;;
  9572                           
  9573                           	psect	text57
  9574  003320                     __ptext57:
  9575                           	opt callstack 0
  9576  003320                     _enqueue:
  9577                           	opt callstack 19
  9578  003320                     
  9579                           ;clock.c: 30:     if(isFullQueue())
  9580  003320  EC20  F01E         	call	_isFullQueue	;wreg free
  9581  003324  0900               	iorlw	0
  9582  003326  B4D8               	btfsc	status,2,c
  9583  003328  EF98  F019         	goto	i2u354_41
  9584  00332C  EF9A  F019         	goto	i2u354_40
  9585  003330                     i2u354_41:
  9586  003330  EF9C  F019         	goto	i2l4041
  9587  003334                     i2u354_40:
  9588  003334  EFE5  F019         	goto	i2l377
  9589  003338                     i2l4041:
  9590                           
  9591                           ;clock.c: 32:     if(front == -1)
  9592  003338  0100               	movlb	0	; () banked
  9593  00333A  29D7               	incf	_front& (0+255),w,b
  9594  00333C  E106               	bnz	i2u355_41
  9595  00333E  29D8               	incf	(_front+1)& (0+255),w,b
  9596  003340  A4D8               	btfss	status,2,c
  9597  003342  EFA5  F019         	goto	i2u355_41
  9598  003346  EFA7  F019         	goto	i2u355_40
  9599  00334A                     i2u355_41:
  9600  00334A  EFAB  F019         	goto	i2l4045
  9601  00334E                     i2u355_40:
  9602  00334E                     
  9603                           ; BSR set to: 0
  9604                           ;clock.c: 33:         front = 0;
  9605  00334E  0E00               	movlw	0
  9606  003350  6FD8               	movwf	(_front+1)& (0+255),b
  9607  003352  0E00               	movlw	0
  9608  003354  6FD7               	movwf	_front& (0+255),b
  9609  003356                     i2l4045:
  9610                           
  9611                           ; BSR set to: 0
  9612                           ;clock.c: 34:     rear = (rear + 1) % 20;
  9613  003356  0E01               	movlw	1
  9614  003358  25D5               	addwf	_rear& (0+255),w,b
  9615  00335A  6E01               	movwf	i2___awmod@dividend^0,c
  9616  00335C  0E00               	movlw	0
  9617  00335E  21D6               	addwfc	(_rear+1)& (0+255),w,b
  9618  003360  6E02               	movwf	(i2___awmod@dividend+1)^0,c
  9619  003362  0E00               	movlw	0
  9620  003364  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  9621  003366  0E14               	movlw	20
  9622  003368  6E03               	movwf	i2___awmod@divisor^0,c
  9623  00336A  EC8B  F018         	call	i2___awmod	;wreg free
  9624  00336E  C001  F0D5         	movff	?i2___awmod,_rear
  9625  003372  C002  F0D6         	movff	?i2___awmod+1,_rear+1
  9626  003376                     
  9627                           ;clock.c: 35:     ready_queue[rear].func_ptr = ptr;
  9628  003376  C0D5  F001         	movff	_rear,i2___wmul@multiplier
  9629  00337A  C0D6  F002         	movff	_rear+1,i2___wmul@multiplier+1
  9630  00337E  0E00               	movlw	0
  9631  003380  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9632  003382  0E05               	movlw	5
  9633  003384  6E03               	movwf	i2___wmul@multiplicand^0,c
  9634  003386  ECCB  F01D         	call	i2___wmul	;wreg free
  9635  00338A  0E00               	movlw	low _ready_queue
  9636  00338C  2401               	addwf	?i2___wmul^0,w,c
  9637  00338E  6ED9               	movwf	fsr2l,c
  9638  003390  0E01               	movlw	high _ready_queue
  9639  003392  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9640  003394  6EDA               	movwf	fsr2h,c
  9641  003396  C00A  FFDE         	movff	enqueue@ptr,postinc2
  9642  00339A  C00B  FFDE         	movff	enqueue@ptr+1,postinc2
  9643  00339E  C00C  FFDE         	movff	enqueue@ptr+2,postinc2
  9644  0033A2                     
  9645                           ;clock.c: 36:     ready_queue[rear].data_p = data_ptr;
  9646  0033A2  C0D5  F001         	movff	_rear,i2___wmul@multiplier
  9647  0033A6  C0D6  F002         	movff	_rear+1,i2___wmul@multiplier+1
  9648  0033AA  0E00               	movlw	0
  9649  0033AC  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9650  0033AE  0E05               	movlw	5
  9651  0033B0  6E03               	movwf	i2___wmul@multiplicand^0,c
  9652  0033B2  ECCB  F01D         	call	i2___wmul	;wreg free
  9653  0033B6  0E03               	movlw	low (_ready_queue+3)
  9654  0033B8  2401               	addwf	?i2___wmul^0,w,c
  9655  0033BA  6ED9               	movwf	fsr2l,c
  9656  0033BC  0E01               	movlw	high (_ready_queue+3)
  9657  0033BE  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9658  0033C0  6EDA               	movwf	fsr2h,c
  9659  0033C2  C00D  FFDE         	movff	enqueue@data_ptr,postinc2
  9660  0033C6  C00E  FFDD         	movff	enqueue@data_ptr+1,postdec2
  9661  0033CA                     i2l377:
  9662  0033CA  0012               	return		;funcret
  9663  0033CC                     __end_of_enqueue:
  9664                           	opt callstack 0
  9665                           
  9666 ;; *************** function i2___wmul *****************
  9667 ;; Defined at:
  9668 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  9669 ;; Parameters:    Size  Location     Type
  9670 ;;  multiplier      2    0[COMRAM] unsigned int 
  9671 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9672 ;; Auto vars:     Size  Location     Type
  9673 ;;  __wmul          2    4[COMRAM] unsigned int 
  9674 ;; Return value:  Size  Location     Type
  9675 ;;                  2    0[COMRAM] unsigned int 
  9676 ;; Registers used:
  9677 ;;		wreg, status,2, status,0, prodl, prodh
  9678 ;; Tracked objects:
  9679 ;;		On entry : 0/0
  9680 ;;		On exit  : 0/0
  9681 ;;		Unchanged: 0/0
  9682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9683 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9684 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9686 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9687 ;;Total ram usage:        6 bytes
  9688 ;; Hardware stack levels used:    1
  9689 ;; This function calls:
  9690 ;;		Nothing
  9691 ;; This function is called by:
  9692 ;;		_enqueue
  9693 ;;		_timer_interrupt
  9694 ;; This function uses a non-reentrant model
  9695 ;;
  9696                           
  9697                           	psect	text58
  9698  003B96                     __ptext58:
  9699                           	opt callstack 0
  9700  003B96                     i2___wmul:
  9701                           	opt callstack 22
  9702  003B96  5001               	movf	i2___wmul@multiplier^0,w,c
  9703  003B98  0203               	mulwf	i2___wmul@multiplicand^0,c
  9704  003B9A  CFF3 F005          	movff	prodl,i2___wmul@product
  9705  003B9E  CFF4 F006          	movff	prodh,i2___wmul@product+1
  9706  003BA2  5001               	movf	i2___wmul@multiplier^0,w,c
  9707  003BA4  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
  9708  003BA6  50F3               	movf	243,w,c
  9709  003BA8  2606               	addwf	(i2___wmul@product+1)^0,f,c
  9710  003BAA  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
  9711  003BAC  0203               	mulwf	i2___wmul@multiplicand^0,c
  9712  003BAE  50F3               	movf	243,w,c
  9713  003BB0  2606               	addwf	(i2___wmul@product+1)^0,f,c
  9714  003BB2  C005  F001         	movff	i2___wmul@product,?i2___wmul
  9715  003BB6  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  9716  003BBA  0012               	return		;funcret
  9717  003BBC                     __end_ofi2___wmul:
  9718                           	opt callstack 0
  9719                           
  9720 ;; *************** function _isFullQueue *****************
  9721 ;; Defined at:
  9722 ;;		line 19 in file "clock.c"
  9723 ;; Parameters:    Size  Location     Type
  9724 ;;		None
  9725 ;; Auto vars:     Size  Location     Type
  9726 ;;		None
  9727 ;; Return value:  Size  Location     Type
  9728 ;;                  1    wreg      unsigned char 
  9729 ;; Registers used:
  9730 ;;		wreg, status,2, status,0, cstack
  9731 ;; Tracked objects:
  9732 ;;		On entry : 0/0
  9733 ;;		On exit  : 0/0
  9734 ;;		Unchanged: 0/0
  9735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9738 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9739 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9740 ;;Total ram usage:        1 bytes
  9741 ;; Hardware stack levels used:    1
  9742 ;; Hardware stack levels required when called:    2
  9743 ;; This function calls:
  9744 ;;		i2_getSizeQueue
  9745 ;; This function is called by:
  9746 ;;		_enqueue
  9747 ;; This function uses a non-reentrant model
  9748 ;;
  9749                           
  9750                           	psect	text59
  9751  003C40                     __ptext59:
  9752                           	opt callstack 0
  9753  003C40                     _isFullQueue:
  9754                           	opt callstack 19
  9755  003C40                     
  9756                           ;clock.c: 20:     return getSizeQueue() >= 20 ? 1 : 0;
  9757  003C40  ECA2  F01D         	call	i2_getSizeQueue	;wreg free
  9758  003C44  6E09               	movwf	??_isFullQueue^0,c
  9759  003C46  0E14               	movlw	20
  9760  003C48  6009               	cpfslt	??_isFullQueue^0,c
  9761  003C4A  EF29  F01E         	goto	i2u332_41
  9762  003C4E  EF2C  F01E         	goto	i2u332_40
  9763  003C52                     i2u332_41:
  9764  003C52  0E01               	movlw	1
  9765  003C54  EF2D  F01E         	goto	i2u333_40
  9766  003C58                     i2u332_40:
  9767  003C58  0E00               	movlw	0
  9768  003C5A                     i2u333_40:
  9769  003C5A  0012               	return		;funcret
  9770  003C5C                     __end_of_isFullQueue:
  9771                           	opt callstack 0
  9772                           
  9773 ;; *************** function i2_getSizeQueue *****************
  9774 ;; Defined at:
  9775 ;;		line 15 in file "clock.c"
  9776 ;; Parameters:    Size  Location     Type
  9777 ;;		None
  9778 ;; Auto vars:     Size  Location     Type
  9779 ;;		None
  9780 ;; Return value:  Size  Location     Type
  9781 ;;                  1    wreg      unsigned char 
  9782 ;; Registers used:
  9783 ;;		wreg, status,2, status,0, cstack
  9784 ;; Tracked objects:
  9785 ;;		On entry : 0/0
  9786 ;;		On exit  : 0/0
  9787 ;;		Unchanged: 0/0
  9788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9791 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9792 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9793 ;;Total ram usage:        2 bytes
  9794 ;; Hardware stack levels used:    1
  9795 ;; Hardware stack levels required when called:    1
  9796 ;; This function calls:
  9797 ;;		i2___awmod
  9798 ;; This function is called by:
  9799 ;;		_isFullQueue
  9800 ;; This function uses a non-reentrant model
  9801 ;;
  9802                           
  9803                           	psect	text60
  9804  003B44                     __ptext60:
  9805                           	opt callstack 0
  9806  003B44                     i2_getSizeQueue:
  9807                           	opt callstack 19
  9808  003B44                     
  9809                           ;clock.c: 16:     return (rear - front + 1 + 20) % 20;
  9810  003B44  0100               	movlb	0	; () banked
  9811  003B46  51D7               	movf	_front& (0+255),w,b
  9812  003B48  5DD5               	subwf	_rear& (0+255),w,b
  9813  003B4A  6E07               	movwf	??i2_getSizeQueue^0,c
  9814  003B4C  51D8               	movf	(_front+1)& (0+255),w,b
  9815  003B4E  59D6               	subwfb	(_rear+1)& (0+255),w,b
  9816  003B50  6E08               	movwf	(??i2_getSizeQueue+1)^0,c
  9817  003B52  0E15               	movlw	21
  9818  003B54  2407               	addwf	??i2_getSizeQueue^0,w,c
  9819  003B56  6E01               	movwf	i2___awmod@dividend^0,c
  9820  003B58  0E00               	movlw	0
  9821  003B5A  2008               	addwfc	(??i2_getSizeQueue+1)^0,w,c
  9822  003B5C  6E02               	movwf	(i2___awmod@dividend+1)^0,c
  9823  003B5E  0E00               	movlw	0
  9824  003B60  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  9825  003B62  0E14               	movlw	20
  9826  003B64  6E03               	movwf	i2___awmod@divisor^0,c
  9827  003B66  EC8B  F018         	call	i2___awmod	;wreg free
  9828  003B6A  5001               	movf	?i2___awmod^0,w,c
  9829  003B6C  0012               	return		;funcret
  9830  003B6E                     __end_ofi2_getSizeQueue:
  9831                           	opt callstack 0
  9832                           
  9833 ;; *************** function i2___awmod *****************
  9834 ;; Defined at:
  9835 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  9836 ;; Parameters:    Size  Location     Type
  9837 ;;  dividend        2    0[COMRAM] int 
  9838 ;;  divisor         2    2[COMRAM] int 
  9839 ;; Auto vars:     Size  Location     Type
  9840 ;;  __awmod         1    5[COMRAM] unsigned char 
  9841 ;;  __awmod         1    4[COMRAM] unsigned char 
  9842 ;; Return value:  Size  Location     Type
  9843 ;;                  2    0[COMRAM] int 
  9844 ;; Registers used:
  9845 ;;		wreg, status,2, status,0
  9846 ;; Tracked objects:
  9847 ;;		On entry : 0/0
  9848 ;;		On exit  : 0/0
  9849 ;;		Unchanged: 0/0
  9850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9851 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9852 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9854 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9855 ;;Total ram usage:        6 bytes
  9856 ;; Hardware stack levels used:    1
  9857 ;; This function calls:
  9858 ;;		Nothing
  9859 ;; This function is called by:
  9860 ;;		_enqueue
  9861 ;;		i2_getSizeQueue
  9862 ;; This function uses a non-reentrant model
  9863 ;;
  9864                           
  9865                           	psect	text61
  9866  003116                     __ptext61:
  9867                           	opt callstack 0
  9868  003116                     i2___awmod:
  9869                           	opt callstack 21
  9870  003116  0E00               	movlw	0
  9871  003118  6E06               	movwf	i2___awmod@sign^0,c
  9872  00311A  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
  9873  00311C  EF94  F018         	goto	i2u247_40
  9874  003120  EF92  F018         	goto	i2u247_41
  9875  003124                     i2u247_41:
  9876  003124  EF9A  F018         	goto	i2l3209
  9877  003128                     i2u247_40:
  9878  003128  6C01               	negf	i2___awmod@dividend^0,c
  9879  00312A  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  9880  00312C  B0D8               	btfsc	status,0,c
  9881  00312E  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  9882  003130  0E01               	movlw	1
  9883  003132  6E06               	movwf	i2___awmod@sign^0,c
  9884  003134                     i2l3209:
  9885  003134  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
  9886  003136  EFA1  F018         	goto	i2u248_40
  9887  00313A  EF9F  F018         	goto	i2u248_41
  9888  00313E                     i2u248_41:
  9889  00313E  EFA5  F018         	goto	i2l3213
  9890  003142                     i2u248_40:
  9891  003142  6C03               	negf	i2___awmod@divisor^0,c
  9892  003144  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  9893  003146  B0D8               	btfsc	status,0,c
  9894  003148  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  9895  00314A                     i2l3213:
  9896  00314A  5003               	movf	i2___awmod@divisor^0,w,c
  9897  00314C  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  9898  00314E  B4D8               	btfsc	status,2,c
  9899  003150  EFAC  F018         	goto	i2u249_41
  9900  003154  EFAE  F018         	goto	i2u249_40
  9901  003158                     i2u249_41:
  9902  003158  EFD2  F018         	goto	i2l3229
  9903  00315C                     i2u249_40:
  9904  00315C  0E01               	movlw	1
  9905  00315E  6E05               	movwf	i2___awmod@counter^0,c
  9906  003160  EFB6  F018         	goto	i2l3219
  9907  003164                     i2l3217:
  9908  003164  90D8               	bcf	status,0,c
  9909  003166  3603               	rlcf	i2___awmod@divisor^0,f,c
  9910  003168  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  9911  00316A  2A05               	incf	i2___awmod@counter^0,f,c
  9912  00316C                     i2l3219:
  9913  00316C  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  9914  00316E  EFBB  F018         	goto	i2u250_41
  9915  003172  EFBD  F018         	goto	i2u250_40
  9916  003176                     i2u250_41:
  9917  003176  EFB2  F018         	goto	i2l3217
  9918  00317A                     i2u250_40:
  9919  00317A                     i2l3221:
  9920  00317A  5003               	movf	i2___awmod@divisor^0,w,c
  9921  00317C  5C01               	subwf	i2___awmod@dividend^0,w,c
  9922  00317E  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  9923  003180  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  9924  003182  A0D8               	btfss	status,0,c
  9925  003184  EFC6  F018         	goto	i2u251_41
  9926  003188  EFC8  F018         	goto	i2u251_40
  9927  00318C                     i2u251_41:
  9928  00318C  EFCC  F018         	goto	i2l3225
  9929  003190                     i2u251_40:
  9930  003190  5003               	movf	i2___awmod@divisor^0,w,c
  9931  003192  5E01               	subwf	i2___awmod@dividend^0,f,c
  9932  003194  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  9933  003196  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  9934  003198                     i2l3225:
  9935  003198  90D8               	bcf	status,0,c
  9936  00319A  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  9937  00319C  3203               	rrcf	i2___awmod@divisor^0,f,c
  9938  00319E  2E05               	decfsz	i2___awmod@counter^0,f,c
  9939  0031A0  EFBD  F018         	goto	i2l3221
  9940  0031A4                     i2l3229:
  9941  0031A4  5006               	movf	i2___awmod@sign^0,w,c
  9942  0031A6  B4D8               	btfsc	status,2,c
  9943  0031A8  EFD8  F018         	goto	i2u252_41
  9944  0031AC  EFDA  F018         	goto	i2u252_40
  9945  0031B0                     i2u252_41:
  9946  0031B0  EFDE  F018         	goto	i2l3233
  9947  0031B4                     i2u252_40:
  9948  0031B4  6C01               	negf	i2___awmod@dividend^0,c
  9949  0031B6  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  9950  0031B8  B0D8               	btfsc	status,0,c
  9951  0031BA  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  9952  0031BC                     i2l3233:
  9953  0031BC  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  9954  0031C0  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  9955  0031C4  0012               	return		;funcret
  9956  0031C6                     __end_ofi2___awmod:
  9957                           	opt callstack 0
  9958                           
  9959                           	psect	text62
  9960  000000                     __ptext62:
  9961                           	opt callstack 0
  9962  000000                     
  9963                           	psect	rparam
  9964  0000                     
  9965                           	psect	temp
  9966  00004C                     btemp:
  9967                           	opt callstack 0
  9968  00004C                     	ds	1
  9969  0000                     int$flags	set	btemp
  9970  0000                     wtemp8	set	btemp+1
  9971  0000                     ttemp5	set	btemp+1
  9972  0000                     ttemp6	set	btemp+4
  9973  0000                     ttemp7	set	btemp+8
  9974                           tosu	equ	0xFFF
  9975                           tosh	equ	0xFFE
  9976                           tosl	equ	0xFFD
  9977                           stkptr	equ	0xFFC
  9978                           pclatu	equ	0xFFB
  9979                           pclath	equ	0xFFA
  9980                           pcl	equ	0xFF9
  9981                           tblptru	equ	0xFF8
  9982                           tblptrh	equ	0xFF7
  9983                           tblptrl	equ	0xFF6
  9984                           tablat	equ	0xFF5
  9985                           prodh	equ	0xFF4
  9986                           prodl	equ	0xFF3
  9987                           indf0	equ	0xFEF
  9988                           postinc0	equ	0xFEE
  9989                           postdec0	equ	0xFED
  9990                           preinc0	equ	0xFEC
  9991                           plusw0	equ	0xFEB
  9992                           fsr0h	equ	0xFEA
  9993                           fsr0l	equ	0xFE9
  9994                           wreg	equ	0xFE8
  9995                           indf1	equ	0xFE7
  9996                           postinc1	equ	0xFE6
  9997                           postdec1	equ	0xFE5
  9998                           preinc1	equ	0xFE4
  9999                           plusw1	equ	0xFE3
 10000                           fsr1h	equ	0xFE2
 10001                           fsr1l	equ	0xFE1
 10002                           bsr	equ	0xFE0
 10003                           indf2	equ	0xFDF
 10004                           postinc2	equ	0xFDE
 10005                           postdec2	equ	0xFDD
 10006                           preinc2	equ	0xFDC
 10007                           plusw2	equ	0xFDB
 10008                           fsr2h	equ	0xFDA
 10009                           fsr2l	equ	0xFD9
 10010                           status	equ	0xFD8


Data Sizes:
    Strings     76
    Constant    0
    Data        10
    BSS         472
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     51      75
    BANK0           160     69     127
    BANK1           256      0     100
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    timer_interrupt$2146	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    timer_interrupt$2141	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> changeState(), check_humid_to_turn_fan(), readTempAndHumid(), NULL(NULL[0]), 
		 -> handleButton(), printTempAndHumid(), 

    ptr$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S882$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    callback$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    handleButton@data_ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S870$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ?_dequeue.data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ?_dequeue.func_ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> changeState(), check_humid_to_turn_fan(), readTempAndHumid(), NULL(NULL[0]), 
		 -> handleButton(), printTempAndHumid(), 

    node.data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    node.func_ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> changeState(), check_humid_to_turn_fan(), readTempAndHumid(), NULL(NULL[0]), 
		 -> handleButton(), printTempAndHumid(), 

    register_timer@data_ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    register_timer@callback	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> changeState(), check_humid_to_turn_fan(), readTempAndHumid(), handleButton(), 
		 -> printTempAndHumid(), 

    S882$data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    task_list.data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S882$func_ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> changeState(), check_humid_to_turn_fan(), readTempAndHumid(), NULL(NULL[0]), 
		 -> handleButton(), printTempAndHumid(), 

    task_list.func_ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> changeState(), check_humid_to_turn_fan(), readTempAndHumid(), NULL(NULL[0]), 
		 -> handleButton(), printTempAndHumid(), 

    temp.data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    temp.func_ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> changeState(), check_humid_to_turn_fan(), readTempAndHumid(), NULL(NULL[0]), 
		 -> handleButton(), printTempAndHumid(), 

    enqueue@data_ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    enqueue@ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> changeState(), check_humid_to_turn_fan(), readTempAndHumid(), NULL(NULL[0]), 
		 -> handleButton(), printTempAndHumid(), 

    S870$data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ready_queue.data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S870$func_ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> changeState(), check_humid_to_turn_fan(), readTempAndHumid(), NULL(NULL[0]), 
		 -> handleButton(), printTempAndHumid(), 

    ready_queue.func_ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> changeState(), check_humid_to_turn_fan(), readTempAndHumid(), NULL(NULL[0]), 
		 -> handleButton(), printTempAndHumid(), 

    LCDPrint@ptr	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_15(CODE[7]), STR_14(CODE[10]), STR_13(CODE[7]), STR_12(CODE[6]), 
		 -> STR_11(CODE[7]), STR_10(CODE[9]), STR_9(CODE[10]), STR_8(CODE[9]), 
		 -> STR_7(CODE[7]), STR_6(CODE[17]), STR_5(CODE[17]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 

    LCDPutStr@ptr	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_15(CODE[7]), STR_14(CODE[10]), STR_13(CODE[7]), STR_12(CODE[6]), 
		 -> STR_11(CODE[7]), STR_10(CODE[9]), STR_9(CODE[10]), STR_8(CODE[9]), 
		 -> STR_7(CODE[7]), STR_6(CODE[17]), STR_5(CODE[17]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _timer_interrupt in COMRAM

    _timer_interrupt->_enqueue
    _enqueue->_isFullQueue
    _isFullQueue->i2_getSizeQueue
    i2_getSizeQueue->i2___awmod

Critical Paths under _main in BANK0

    _main->_dispatch
    _system_setup->_register_timer
    _register_timer->___wmul
    _system_initialize->_start_timer
    _start_timer->_initializeTaskList
    _initializeTaskList->_queueInitialize
    _queueInitialize->___wmul
    _LCDInit->_LCDPutInst
    _Port_BBSPIInit->_SendByteBBSPI
    _dispatch->_readTempAndHumid
    _readTempAndHumid->___flsub
    _readDHT->_getByte
    ___flsub->___fladd
    ___fladd->___flmul
    _printTempAndHumid->___flmul
    ___flmul->___xxtofl
    _handleButton->_readButtonRA5
    _handleButton->_readButtonRB0
    _isEmptyQueue->_getSizeQueue
    _getSizeQueue->___awmod
    _check_humid_to_turn_fan->_LCDPrint
    _LCDPrintChar->_LCDMoveCursor
    _FSM->_LCDPrint
    _LCDPrint->_LCDMoveCursor
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_WritePort_BBSPI
    _LCDMoveCursor->_LCDPutInst
    _LCDPutInst->_WritePort_BBSPI
    _WritePort_BBSPI->_SendByteBBSPI

Critical Paths under _timer_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer_interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer_interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer_interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timer_interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timer_interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _timer_interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _timer_interrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _timer_interrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _timer_interrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _timer_interrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _timer_interrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _timer_interrupt in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _timer_interrupt in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _timer_interrupt in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _timer_interrupt in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   53765
                                _FSM
                           _LCDPrint
                           _dispatch
                  _system_initialize
                       _system_setup
 ---------------------------------------------------------------------------------
 (1) _system_setup                                         0     0      0    3171
                     _register_timer
 ---------------------------------------------------------------------------------
 (2) _register_timer                                      32    19     13    3171
                                              6 BANK0     32    19     13
                             ___wmul
                         _isFullList
 ---------------------------------------------------------------------------------
 (3) _isFullList                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_initialize                                    0     0      0    3994
                            _LCDInit
                     _LTD_initialize
               _interrupt_initialize
                     _osc_initialize
                     _pin_initialize
                        _start_timer
 ---------------------------------------------------------------------------------
 (2) _start_timer                                          3     3      0    2080
                                             10 BANK0      3     3      0
                 _initializeTaskList
 ---------------------------------------------------------------------------------
 (3) _initializeTaskList                                   2     2      0    2036
                                              8 BANK0      2     2      0
                             ___wmul
                    _queueInitialize
 ---------------------------------------------------------------------------------
 (4) _queueInitialize                                      2     2      0     985
                                              6 BANK0      2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _pin_initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _osc_initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _interrupt_initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LTD_initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0    1914
                                              6 BANK0      1     1      0
                          _InitBBSPI
                         _LCDPutInst
                     _Port_BBSPIInit
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (3) _Port_BBSPIInit                                       1     1      0     160
                                              3 BANK0      1     1      0
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (3) _InitBBSPI                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dispatch                                             5     5      0   37626
                                             64 BANK0      5     5      0
                        _changeState *
            _check_humid_to_turn_fan *
                            _dequeue
                       _handleButton *
                       _isEmptyQueue
                  _printTempAndHumid *
                   _readTempAndHumid *
 ---------------------------------------------------------------------------------
 (2) _readTempAndHumid                                     1     1      0    8004
                                             63 BANK0      1     1      0
                            ___fladd
                            ___flmul
                            ___flsub
                           ___xxtofl
                            _readDHT
 ---------------------------------------------------------------------------------
 (3) _readDHT                                              4     4      0     255
                                              4 BANK0      4     4      0
                            _getByte
 ---------------------------------------------------------------------------------
 (4) _getByte                                              4     4      0     184
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     550
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2737
                                             55 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    2414
                                             39 BANK0     16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _printTempAndHumid                                   12    12      0   13818
                                             39 BANK0     12    12      0
                           _LCDPrint
                       _LCDPrintChar
                            ___awdiv
                            ___awmod
                             ___fleq
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2048
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     646
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _handleButton                                         8     6      2     143
                                              2 BANK0      8     6      2
                      _readButtonRA5
                      _readButtonRB0
 ---------------------------------------------------------------------------------
 (3) _readButtonRB0                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _readButtonRA5                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _dequeue                                             12     7      5    3300
                                              8 BANK0     12     7      5
                            ___awmod
                             ___wmul
                       _isEmptyQueue
 ---------------------------------------------------------------------------------
 (2) _isEmptyQueue                                         0     0      0    1156
                       _getSizeQueue
 ---------------------------------------------------------------------------------
 (3) _getSizeQueue                                         2     2      0    1156
                                              6 BANK0      2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     895
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _check_humid_to_turn_fan                              2     2      0   11137
                                             15 BANK0      2     2      0
                           _LCDPrint
                       _LCDPrintChar
                            ___awdiv
                            ___awmod
                            ___fltol
                     _set_speed_fan3
 ---------------------------------------------------------------------------------
 (3) _set_speed_fan3                                       2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     457
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1156
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1364
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _LCDPrintChar                                         3     1      2    3671
                                             11 BANK0      3     1      2
                      _LCDMoveCursor
                         _LCDPutChar
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _changeState                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FSM                                                  2     2      0    4726
                                             15 BANK0      2     2      0
                           _LCDPrint
                    _SET_TIMER_state
                           _get_time
                 _turn_off_heat_pump
                    _turn_off_heater
                        _turn_on_fan
                  _turn_on_heat_pump
                     _turn_on_heater
 ---------------------------------------------------------------------------------
 (2) _turn_on_heater                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _turn_on_heat_pump                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _turn_on_fan                                          4     2      2     478
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _turn_off_heater                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _turn_off_heat_pump                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _get_time                                             4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _SET_TIMER_state                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LCDPrint                                             4     1      3    4248
                                             11 BANK0      4     1      3
                      _LCDMoveCursor
                          _LCDPutStr
 ---------------------------------------------------------------------------------
 (4) _LCDPutStr                                            2     0      2    1009
                                              6 BANK0      2     0      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (4) _LCDPutChar                                           1     1      0     888
                                              5 BANK0      1     1      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (4) _LCDMoveCursor                                        5     4      1    1153
                                              6 BANK0      5     4      1
                         _LCDPutInst
 ---------------------------------------------------------------------------------
 (3) _LCDPutInst                                           1     1      0     888
                                              5 BANK0      1     1      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (3) _WritePort_BBSPI                                      2     1      1     866
                                              3 BANK0      2     1      1
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (4) _SendByteBBSPI                                        3     3      0     138
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _timer_interrupt                                     37    37      0    2774
                                             14 COMRAM    37    37      0
                            _enqueue
                       _remove_timer
                           i2___wmul
 ---------------------------------------------------------------------------------
 (9) _remove_timer                                         6     6      0     332
                                              0 COMRAM     6     6      0
                        _isEmptyList
 ---------------------------------------------------------------------------------
 (10) _isEmptyList                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _enqueue                                              5     0      5    1411
                                              9 COMRAM     5     0      5
                        _isFullQueue
                          i2___awmod
                           i2___wmul
 ---------------------------------------------------------------------------------
 (9) i2___wmul                                             6     2      4     415
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) _isFullQueue                                         1     1      0     400
                                              8 COMRAM     1     1      0
                     i2_getSizeQueue
 ---------------------------------------------------------------------------------
 (11) i2_getSizeQueue                                      2     2      0     400
                                              6 COMRAM     2     2      0
                          i2___awmod
 ---------------------------------------------------------------------------------
 (10) i2___awmod                                           6     2      4     400
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FSM
     _LCDPrint
       _LCDMoveCursor
         _LCDPutInst
           _WritePort_BBSPI
             _SendByteBBSPI
       _LCDPutStr
         _LCDPutChar
           _WritePort_BBSPI
             _SendByteBBSPI
     _SET_TIMER_state
     _get_time
     _turn_off_heat_pump
     _turn_off_heater
     _turn_on_fan
     _turn_on_heat_pump
     _turn_on_heater
   _LCDPrint
     _LCDMoveCursor
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
     _LCDPutStr
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
   _dispatch
     _changeState *
     _check_humid_to_turn_fan *
       _LCDPrint
         _LCDMoveCursor
           _LCDPutInst
             _WritePort_BBSPI
               _SendByteBBSPI
         _LCDPutStr
           _LCDPutChar
             _WritePort_BBSPI
               _SendByteBBSPI
       _LCDPrintChar
         _LCDMoveCursor
           _LCDPutInst
             _WritePort_BBSPI
               _SendByteBBSPI
         _LCDPutChar
           _WritePort_BBSPI
             _SendByteBBSPI
         ___awdiv (ARG)
         ___awmod (ARG)
       ___awdiv
       ___awmod
       ___fltol
       _set_speed_fan3
     _dequeue *
       ___awmod
       ___wmul
       _isEmptyQueue
         _getSizeQueue
           ___awmod
     _handleButton *
       _readButtonRA5
       _readButtonRB0
     _isEmptyQueue *
       _getSizeQueue
         ___awmod
     _printTempAndHumid *
       _LCDPrint
         _LCDMoveCursor
           _LCDPutInst
             _WritePort_BBSPI
               _SendByteBBSPI
         _LCDPutStr
           _LCDPutChar
             _WritePort_BBSPI
               _SendByteBBSPI
       _LCDPrintChar
         _LCDMoveCursor
           _LCDPutInst
             _WritePort_BBSPI
               _SendByteBBSPI
         _LCDPutChar
           _WritePort_BBSPI
             _SendByteBBSPI
         ___awdiv (ARG)
         ___awmod (ARG)
       ___awdiv
       ___awmod
       ___fleq
       ___flmul
         ___xxtofl (ARG)
       ___fltol
     _readTempAndHumid *
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       ___xxtofl
       _readDHT
         _getByte
   _system_initialize
     _LCDInit
       _InitBBSPI
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
       _Port_BBSPIInit
         _SendByteBBSPI
       _WritePort_BBSPI
         _SendByteBBSPI
     _LTD_initialize
     _interrupt_initialize
     _osc_initialize
     _pin_initialize
     _start_timer
       _initializeTaskList
         ___wmul
         _queueInitialize
           ___wmul
   _system_setup
     _register_timer
       ___wmul
       _isFullList

 _timer_interrupt (ROOT)
   _enqueue
     _isFullQueue
       i2_getSizeQueue
         i2___awmod
     i2___awmod
     i2___wmul
   _remove_timer
     _isEmptyList
   i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0     12C      37        7.6%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      64       7       39.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     45      7F       5       79.4%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     33      4B       1       79.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12E      32        0.0%
DATA                 0      0     25A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Nov 18 10:07:58 2019

                   _LCDMoveCursor 3A76                  ??i2_getSizeQueue 0007  
                     ?_LCDPutChar 0001                                l61 24C0  
                              l64 2BCA                    ??_getSizeQueue 0066  
                    ___awdiv@sign 0065           __end_of_SET_TIMER_state 3CF0  
                     ?_LCDPutInst 0001               ___wmul@multiplicand 0062  
           SendByteBBSPI@bitcount 0061                               l210 3640  
                             l212 3654                               l300 2F14  
                             l204 36FE                               l213 3656  
                             l222 3C20                               l150 3BDE  
                             l303 2F9C                               l207 3C9E  
                             l216 369A                               l304 2F22  
                             l241 3AB2                               l225 3934  
                             l305 2F48                               l313 2A9A  
                             l401 3C74                               l234 3A36  
                             l219 3C3E                               l147 3CD6  
                             l228 3976                               l156 3CDC  
                             l253 3A74                               l405 35AC  
                             l247 38F2                               l415 3CB0  
                             l407 3532                               l159 3C00  
                             l600 39F6                               l611 3CBC  
                             l291 3474                               l363 3630  
                             l419 2216                               l373 3AE8  
                             l381 34B6                               l366 3B42  
                             l382 3516                               l294 344C  
                             l286 33D6                               l703 2964  
                             l552 2EC8                               l288 33FC  
                             l529 3868                               l537 3816  
                             l706 3B94                               l395 2CD8  
                             l581 3CD0                               l590 3CE4  
                             l479 3762                               l584 3CE0  
                             l593 3CEC                               l587 3CE8  
                             l691 3272                               l597 39BC  
                             l685 3B16                               l950 3114  
                             l679 3CEE                               l599 39C2  
                             l937 3062                               l965 331E  
                             _FSM 2812                               _PR2 000FCB  
                     _start_timer 3518                      ___awmod@sign 0065  
                             prod 000FF3                               tosl 000FFD  
                             wreg 000FE8                      ___flmul@aexp 007F  
                    ___flmul@bexp 0080                      ___flmul@sign 007A  
                    ___flmul@temp 0085                      ___flmul@prod 0081  
                 __end_of_LCDInit 3700                      __CFG_LVP$OFF 000000  
       __size_of_readTempAndHumid 0136                              ?_FSM 0001  
            __end_of_system_setup 2BCC                      ___fltol@exp1 0069  
                    __CFG_WDT$OFF 000000                              l1003 2DE0  
                            l1320 1B12                              l3001 1598  
                            l1330 1D6E                              l1234 177A  
                            l1251 1894                              l1243 1A4A  
                            l1235 1768                              l3011 15D8  
                            l3003 15A6                              l1324 1E76  
                            l1260 1964                              l1236 172E  
                            l1261 1952                              l3101 1798  
                            l3021 160A                              l3013 15DA  
                            l3005 15A8                              l1327 1D08  
                            l3111 17D8                              l3031 1632  
                            l3023 160C                              l3007 15B8  
                            l3015 15E2                              l4001 2892  
                            l1337 1E38                              l1329 1D80  
                            l3121 1802                              l3113 17E4  
                            l3105 17AC                              l3041 166C  
                            l3033 1642                              l3025 1612  
                            l3017 15F2                              l3009 15C8  
                            l1361 251C                              l4011 28C6  
                            l4003 2898                              l3131 1874  
                            l3115 17E8                              l3107 17BC  
                            l3123 1808                              l3051 1698  
                            l3043 167E                              l3035 1652  
                            l3027 1620                              l3019 15F8  
                            l1276 38B0                              l1364 2678  
                            l4021 2906                              l4013 28D6  
                            l4005 28AC                              l3301 3AD0  
                            l3141 18CE                              l3125 182E  
                            l3133 1884                              l3117 17F6  
                            l3109 17CA                              l3061 16AC  
                            l3053 169C                              l3045 168C  
                            l3037 1654                              l3029 1622  
                            l4023 290A                              l4015 28DA  
                            l4007 28B0                              l4031 2928  
                            l3151 18FE                              l3143 18D8  
                            l3135 18AA                              l3127 1862  
                            l3119 17F8                              l3071 16C0  
                            l3063 16B0                              l3055 16A0  
                            l3047 1690                              l3039 165C  
                            l1375 2610                              l1368 25B4  
                            l3241 38DC                              l4025 290E  
                            l4017 28EC                              l4009 28B4  
                            l3161 1926                              l3153 1902  
                            l3145 18E6                              l3137 18BA  
                            l3129 1864                              l3081 16FA  
                            l3073 16C4                              l3065 16B4  
                            l3057 16A4                              l3049 1694  
                            l3313 2BDA                              l3305 2BCC  
                            l3321 3C5C                              l3243 38E6  
                            l4027 2920                              l4019 2900  
                            l3331 3838                              l3411 1B7E  
                            l3403 1B46                              l3171 1980  
                            l3163 1934                              l3155 1912  
                            l3147 18E8                              l3091 174C  
                            l3083 1716                              l3075 16C8  
                            l3067 16B8                              l3059 16A8  
                            l3251 3C8E                              l3315 2CB0  
                            l3307 2BD0                              l3237 38B6  
                            l3245 3A3C                              l3501 2FA4  
                            l3333 3848                              l3325 3818  
                            l3421 1BC8                              l3413 1B96  
                            l3405 1B52                              l3181 19EA  
                            l3173 198E                              l3165 194A  
                            l3149 18F6                              l3157 1914  
                            l3093 175A                              l3085 1726  
                            l3069 16BC                              l3077 16CC  
                            l3261 2ED4                              l3253 3C26  
                            l3317 2CB4                              l3239 38C8  
                            l3247 3A4E                              l3511 2FD4  
                            l3503 2FB2                              l3335 3854  
                            l3327 381C                              l3351 37F6  
                            l3343 37C6                              l3431 1C1E  
                            l3423 1BD8                              l3415 1BA2  
                            l3407 1B5C                              l3191 1A24  
                            l3183 1A0A                              l3175 19C8  
                            l3159 1922                              l3095 175C  
                            l3087 173C                              l3079 16D0  
                            l3271 2F0E                              l3263 2EE6  
                            l3255 3C28                              l3319 2CD0  
                            l3249 3A62                              l3521 3002  
                            l3513 2FD8                              l3505 2FBA  
                            l3361 3CB2                              l3329 3826  
                            l3353 3802                              l3345 37CA  
                            l3441 1CC2                              l3433 1C3A  
                            l3425 1BE4                              l3417 1BAE  
                            l3409 1B72                              l3193 1A2A  
                            l3185 1A0E                              l3169 1974  
                            l3177 19CA                              l3097 1766  
                            l3089 1748                              l3265 2EEE  
                            l3257 3C3C                              l3531 3036  
                            l3523 3010                              l3515 2FE0  
                            l3507 2FBE                              l3339 3860  
                            l3347 37D4                              l3451 1D18  
                            l3443 1CD0                              l3435 1C46  
                            l3427 1BF4                              l3419 1BBC  
                            l3371 1A7A                              l3363 1A4C  
                            l3195 1A38                              l3187 1A1C  
                            l3179 19DA                              l3099 1788  
                            l3611 2542                              l3603 24C6  
                            l3291 2F9A                              l3283 2F56  
                            l3275 2F2C                              l3267 2EF4  
                            l3259 2ECA                              l4091 39AC  
                            l4083 3978                              l3533 303C  
                            l3525 3016                              l3517 2FF2  
                            l3509 2FCC                              l2901 3084  
                            l3349 37E6                              l3357 380E  
                            l3453 1D26                              l3445 1CEE  
                            l3437 1C62                              l3429 1C0E  
                            l3381 1AB6                              l3373 1A8A  
                            l3365 1A5A                              l3197 1A3A  
                            l3189 1A22                              l3621 259C  
                            l3605 24D8                              l3285 2F7E  
                            l3277 2F32                              l3269 2EFC  
                            l4085 3980                              l2831 3674  
                            l2823 364E                              l2815 3636  
                            l3527 302C                              l3519 2FFA  
                            l3535 3042                              l2911 30BC  
                            l2903 3092                              l3295 3AB4  
                            l4351 2E4E                              l3551 32F2  
                            l3543 3274                              l3463 1D90  
                            l3471 1DD8                              l3455 1D2A  
                            l3447 1CF8                              l3439 1C8C  
                            l3391 1AEC                              l3383 1ABC  
                            l3375 1A9A                              l3367 1A68  
                            l3631 2600                              l3623 259E  
                            l3615 2556                              l3607 24E6  
                            l3711 1ED2                              l3703 1E98  
                            l4087 3994                              l2841 367E  
                            l2833 3676                              l2825 3664  
                            l2817 363A                              l3537 3052  
                            l3529 3034                              l2913 30CA  
                            l2921 30F4                              l2905 309A  
                            l3561 2CF2                              l3297 3ACA  
                            l4353 2EB2                              l3553 3316  
                            l3545 32A4                              l3481 1E4C  
                            l3473 1DF2                              l3465 1D9C  
                            l3457 1D38                              l3449 1D06  
                            l3393 1AFC                              l3385 1ACA  
                            l3377 1AA0                              l3369 1A6A  
                            l3641 2658                              l3633 261E  
                            l3625 25AA                              l3617 255E  
                            l3609 252C                              l3801 3536  
                            l3721 1F5E                              l4089 39A8  
                            l2843 3680                              l2835 3678  
                            l2827 366C                              l2851 3C08  
                            l2931 39FC                              l4355 293E  
                            l3539 305A                              l2923 3104  
                            l2915 30E0                              l2907 30AC  
                            l3571 2D42                              l3555 331C  
                            l3547 32B4                              l3483 1E5A  
                            l3475 1E06                              l3467 1DAA  
                            l3459 1D66                              l3395 1B02  
                            l3387 1ACC                              l3379 1AB0  
                            l3643 2666                              l3635 2620  
                            l3627 25E6                              l3619 256A  
                            l3811 355E                              l3803 3552  
                            l3731 1FE8                              l3723 1F76  
                            l3707 1EC0                              l2845 3688  
                            l2837 367A                              l2829 3672  
                            l2853 3C1E                              l2861 3950  
                            l2941 3A9C                              l2933 3A10  
                            l4357 39E0                              l3901 3CDE  
                            l2925 310C                              l2917 30E8  
                            l2909 30B4                              l3581 2D6C  
                            l3573 2D46                              l3565 2D06  
                            l3549 32E2                              l3485 1E5C  
                            l3477 1E20                              l3469 1DD4  
                            l3397 1B22                              l3389 1ADC  
                            l3661 22BE                              l3653 2218  
                            l3493 386A                              l3645 2668  
                            l3637 2624                              l3629 25F2  
                            l4349 357E                              l3813 3562  
                            l3805 3556                              l3741 206E  
                            l3733 1FF0                              l3725 1F88  
                            l3717 1EE8                              l3709 1EC2  
                            l2847 368A                              l2839 367C  
                            l2863 395A                              l2855 393A  
                            l2943 3AA8                              l2871 38F8  
                            l2935 3A16                              l3903 3CE6  
                            l2919 30EE                              l3591 2D94  
                            l3583 2D76                              l3575 2D54  
                            l3567 2D30                              l3559 2CDA  
                            l3479 1E3C                              l3487 1E62  
                            l3399 1B32                              l3671 2374  
                            l3663 22DA                              l3655 2240  
                            l3495 387C                              l3639 2648  
                            l2951 33DE                              l3831 29A0  
                            l3807 3558                              l3743 2082  
                            l3735 2008                              l3751 218E  
                            l3727 1F9A                              l3719 1F5C  
                            l2849 3C06                              l2865 395C  
                            l2857 3942                              l2945 3AAC  
                            l2937 3A7A                              l2881 391A  
                            l2873 3900                              l2929 39F8  
                            l3913 39C8                              l3905 3CE2  
                            l3593 2DA0                              l3585 2D80  
                            l3569 2D32                              l3489 1E66  
                            l3681 241A                              l3673 239C  
                            l3665 2310                              l3657 2276  
                            l2961 3412                              l2953 33E4  
                            l3833 29C2                              l3825 2966  
                            l3761 3BBC                              l3809 355A  
                            l3817 356A                              l3753 21B2  
                            l3745 20FC                              l3737 2012  
                            l3729 1FCA                              l2867 3968  
                            l2859 394E                              l2939 3A8C  
                            l2883 3926                              l2875 390C  
                            l3907 3CEA                              l3931 3AEA  
                            l3499 2F9E                              l3595 2DB0  
                            l3683 2442                              l3675 23BA  
                            l3667 2348                              l3659 22AE  
                            l2963 3420                              l2955 33F6  
                            l2947 33CC                              l3835 29D2  
                            l3827 297A                              l3771 36A0  
                            l3763 3BD4                              l3755 2214  
                            l3747 212C                              l3739 203C  
                            l3691 1E78                              l2869 396A  
                            l2885 3928                              l2877 390E  
                            l3909 39B8                              l3933 3AFC  
                            l2893 3064                              l3597 2DC0  
                            l3941 31EA                              l3853 34BE  
                            l3845 3476                              l3685 2460  
                            l3677 23CA                              l3669 2358  
                            l2965 3428                              l3837 2A06  
                            l3781 36BE                              l3773 36A2  
                            l3765 3CD8                              l3749 2144  
                            l3693 1E8C                              l2879 3918  
                            l3935 3B12                              l2895 306A  
                            l3599 2DD0                              l3943 3206  
                            l2887 3B6E                              l3855 34E0  
                            l3847 348C                              l3871 2E12  
                            l3687 2470                              l3679 23F2  
                            l2967 3430                              l2975 345A  
                            l2959 340A                              l3839 2A78  
                            l3791 36EC                              l3783 36C4  
                            l3775 36A4                              l3767 3CC8  
                            l3759 3CD2                              l2991 3610  
                            l2983 35AE                              l3865 3CA0  
                            l2897 3078                              l3945 3212  
                            l3937 31C6                              l2889 3B8C  
                            l3849 34A0                              l3881 2E64  
                            l3873 2E1E                              l3689 2498  
                            l2977 3462                              l2969 3436  
                            l3793 36F2                              l3785 36D0  
                            l3777 36B6                              l3769 369C  
                            l2993 3614                              l3961 3BE8  
                            l3697 1E92                              l2899 3080  
                            l3947 3226                              l3939 31D8  
                            l2995 3B18                              l3883 2E78  
                            l3875 2E30                              l3891 2E9E  
                            l3867 2DE2                              l2979 3472  
                            l3971 3700                              l3795 36F8  
                            l3787 36E0                              l3779 36B8  
                            l3963 3BEC                              l3981 2812  
                            l3949 324C                              l3885 2E84  
                            l3869 2DFE                              l3973 3704  
                            l3789 36E6                              l2989 35B8  
                            l3797 351C                              l3965 3BF0  
                            l3957 2A9C                              l3991 2840  
                            l3983 2816                              l3887 2E96  
                            l3879 2E38                              l2999 158A  
                            l3975 3716                              l3967 3BF4  
                            l3959 3BE0                              l3993 2854  
                            l3985 2826                              l3977 372C  
                            l3969 3BFA                              l3995 286C  
                            l3987 282E                              l3979 374E  
                            l3997 287C                              l3989 2832  
                            l3999 2880                              STR_1 1046  
                            STR_2 1043                              STR_3 1049  
                            STR_4 104B                              STR_5 1012  
                            STR_6 1001                              STR_7 1036  
                            STR_8 102D                              STR_9 1023  
                            u2000 3A8C                              u2001 3A88  
                            u2010 33F6                              u2011 33F2  
                            u2100 15C8                              u2020 340A  
                            u2101 15C4                              u2021 3406  
                            u2110 160A                              u2030 3420  
                            u2111 1606                              u2031 341C  
                            u3000 2CF2                              u2200 173C  
                            u2120 1620                              u2040 3448  
                            u3001 2CEE                              u2201 1738  
                            u2121 161C                              u2041 3444  
                            u3010 2D26                              u2210 175A  
                            u2130 1632                              u2050 345A  
                            u2211 1756                              u2131 162E  
                            u2051 3456                              u3020 2D54  
                            u2300 18AA                              u2220 177A  
                            u2140 1642                              u3100 2598  
                            u2060 3472                              u3021 2D50  
                            u2301 18A6                              u2221 1776  
                            u2141 163E                              u3101 2594  
                            u2061 346E                              _LATA 000F89  
                            u3030 2D68                              u2310 18BA  
                            u2230 1788                              u2150 167E  
                            u3110 25E2                              u2070 3630  
                            _LATB 000F8A                              u3031 2D64  
                            u3015 2D1C                              u2311 18B6  
                            u2231 1784                              u2151 167A  
                            u3111 25DE                              u2071 362C  
                            _LATC 000F8B                              u3040 2D90  
                            u2400 198E                              u2320 18E6  
                            u2240 1798                              u2160 168C  
                            u2080 15A6                              u3120 2600  
                            u3200 1EBC                              _LATD 000F8C  
                            u3041 2D8C                              u2401 198A  
                            u2321 18E2                              u2241 1794  
                            u2161 1688                              u2081 15A2  
                            u3121 25FC                              u3201 1EB8  
                            u3050 2DB0                              u2410 19C8  
                            u2330 18F6                              u2250 17CA  
                            u2170 16FA                              u2090 15B8  
                            u3130 2610                              u3210 1ED2  
                            u3051 2DAC                              u2411 19C4  
                            u2331 18F2                              u2251 17C6  
                            u2171 16F6                              u2091 15B4  
                            u3131 260C                              u3211 1ECE  
                            u3060 2DC0                              u2420 19DA  
                            u2340 1912                              u2260 17D8  
                            u2180 1712                              u3140 261E  
                            u3300 297A                              u3220 1EE4  
                            u3061 2DBC                              u2421 19D6  
                            u2341 190E                              u2261 17D4  
                            u2181 170C                              u3141 261A  
                            u3301 2976                              u3221 1EE0  
                            u2430 19EA                              u2350 1922  
                            u2270 17F6                              u2190 1714  
                            u3150 2658                              u3070 24D8  
                            u3310 29D2                              u3230 1F88  
                            u2431 19E6                              u2351 191E  
                            u2271 17F2                              u3151 2654  
                            u3071 24D4                              u3311 29CE  
                            u3231 1F84                              u3400 2E30  
                            u2440 1A0A                              u2360 1934  
                            u2280 182E                              u3160 2666  
                            u3080 24E6                              u2600 2F56  
                            u3240 1F9A                              u3401 2E2C  
                            u2441 1A06                              u2361 1930  
                            u2281 182A                              u3161 2662  
                            u3081 24E2                              u2601 2F52  
                            u3241 1F96                              u2530 38C8  
                            u3410 2E78                              u3170 2276  
                            u2450 1A1C                              u2370 194A  
                            u2290 1874                              u3090 2542  
                            u2610 2F96                              u3250 1FCA  
                            u2531 38C4                              u3411 2E74  
                            u3171 2272                              u2451 1A18  
                            u2371 1946                              u2291 1870  
                            u3091 253E                              u2611 2F92  
                            u3251 1FC6                              u1900 364E  
                            u2540 38D8                              u2620 3ACA  
                            u3340 34A0                              u2700 37E6  
                            u3420 2E96                              u3180 2310  
                            u2460 1A38                              u2380 1960  
                            u3500 3762                              u3260 2082  
                            u1901 364A                              u2541 38D4  
                            u2621 3AC6                              u3341 349C  
                            u2701 37E2                              u3421 2E92  
                            u3181 230C                              u2461 1A34  
                            u2381 195C                              u3501 375E  
                            u3261 207E                              u1910 3664  
                            u3510 2826                              u3430 3AFC  
                            u2550 3A4E                              u2630 3AE6  
                            u2710 37F6                              u2390 1974  
                            u3270 20FC                              u3190 1E8C  
                            u1911 3660                              u3511 2822  
                            u3431 3AF8                              u2551 3A4A  
                            u2631 3AE0                              u3351 34AA  
                            u2711 37F2                              u2391 1970  
                            u3271 20F8                              u3191 1E88  
                            u1920 369A                              u3520 287C  
                            u3440 3B0E                              u2560 3A5E  
                            u2640 3AE8                              u2800 1CAC  
                            u2720 1A68                              u3280 21B2  
                            u1921 3696                              u3521 2878  
                            u3441 3B0A                              u2561 3A5A  
                            u3361 350A                              u2721 1A64  
                            u3281 21AE                              u3530 28D6  
                            u1930 3078                              u3450 31D8  
                            u2810 1D06                              u2730 1A7A  
                            u2570 2F0E                              u2650 2CD0  
                            u3290 352E                              u3531 28D2  
                            u1931 3074                              u3451 31D4  
                            u2811 1D02                              u2731 1A76  
                            u2571 2F0A                              u2651 2CCC  
                            u3291 352A                              u1940 3092  
                            u3460 31EA                              u2900 1E5A  
                            u2820 1D26                              u2740 1A8A  
                            u2580 2F22                              u2660 3C72  
                            u1941 308E                              u3461 31E6  
                            u2901 1E56                              u2821 1D22  
                            u2805 1CA2                              u2741 1A86  
                            u2581 2F1E                              u2661 3C6C  
                            u2910 2FB2                              u1950 30AC  
                            u3390 2E12                              u2830 1D38  
                            u2750 1ACA                              u2590 2F44  
                            u2670 3C74                              u2911 2FAE  
                            u1951 30A8                              u3391 2E0E  
                            u2831 1D34                              u2751 1AC6  
                            u2591 2F40                              u3471 370E  
                            u2920 2FCC                              u1960 30CA  
                            u2680 3838                              u2840 1D66  
                            u2760 1ADC                              u3480 372C  
                            u2921 2FC8                              u1961 30C6  
                            u2681 3834                              u2841 1D62  
                            u2761 1AD8                              u3481 3728  
                            u2930 2FF2                              u1970 30E0  
                            u2690 3848                              u2850 1D7C  
                            u2770 1AEC                              u2931 2FEE  
                            u1971 30DC                              u2691 3844  
                            u2851 1D78                              u2771 1AE8  
                            u2940 3010                              u1980 3104  
                            u2860 1D90                              u2780 1B22  
                            u2941 300C                              u1981 3100  
                            u2861 1D8C                              u2781 1B1E  
                            u1990 3A36                              u2950 302C  
                            u2870 1DAA                              u2790 1B32  
                            u1991 3A32                              u2951 3028  
                            u2871 1DA6                              u2791 1B2E  
                            u3807 36D8                              u2960 3052  
                            u2880 1DF2                              u2961 304E  
                            u2881 1DEE                              u3817 2EDC  
                            u2970 32A4                              u2890 1E20  
                            u3498 373A                              u2971 32A0  
                            u2891 1E1C                              u3827 2EEA  
                            u3499 374E                              u2980 32E2  
                            u2981 32DE                              u3837 340C  
                            u2990 3316                              u3847 38FA  
                            u2991 3312                              u3857 393C  
                            u3797 36AC                              _TMR2 000FCC  
                  ??_isEmptyQueue 0068                     ?_LCDPrintChar 006B  
                            _head 00C7                              _main 3978  
                            _rear 00D5                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf2 000FDF  
                            fsr1l 000FE1                              fsr2l 000FD9  
                            btemp 004C                  ?_WritePort_BBSPI 0063  
                            prodh 000FF4                              prodl 000FF3  
               _LCDMoveCursor$651 0068                              start 000E  
              __size_of_LCDPutStr 0040                     __CFG_IESO$OFF 000000  
                   __CFG_MCLRE$ON 000000                    ?_LCDMoveCursor 0066  
                    ___param_bank 000000                             ??_FSM 006F  
         __end_of_queueInitialize 3632                  __end_of_LCDPrint 38F4  
                    dispatch@node 00A0                     ___fltol@sign1 0068  
                     LCDPrint@pos 006B                       LCDPrint@ptr 006C  
                 __end_of___fladd 1A4C                             ?_main 0001  
                 __end_of___awdiv 3064                             STR_12 103D  
                           STR_13 1036                             STR_14 1023  
                           STR_15 1036                   __end_of___awmod 3116  
                 __end_of___flmul 1E78                   __end_of___flsub 38B2  
                 __end_of___fltol 2DE2                             _T0CON 000FD5  
                 ___awdiv@divisor 0062                             _T1CON 000FCD  
                           _T2CON 000FCA                             i2l440 2762  
                           i2l442 277E                             i2l366 3B6C  
                           i2l439 2810                             i2l369 3C5A  
                           i2l377 33CA                             i2l465 146E  
                           i2l457 156E                             i2l706 3BBA  
                           i2l459 10D6                             i2l398 3C8C  
                           i2l950 31C4                   ___awdiv@counter 0064  
                           _TMR1H 000FCF                             _TMR0L 000FD6  
                           _TMR1L 000FCE                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                     __CFG_PWRT$OFF 000000  
                 __end_of_getByte 3476                    __CFG_FCMEN$OFF 000000  
                     _turn_on_fan 39B8                   __end_of_dequeue 3518  
         __size_of_Port_BBSPIInit 001E                   __end_of_readDHT 2F9E  
            __size_of_changeState 002E                   __end_of_enqueue 33CC  
                           _count 0048                             _front 00D7  
     __size_of_initializeTaskList 010E                             _value 004B  
                           _state 00CA                    ??_LCDPrintChar 006D  
                  __CFG_BOREN$OFF 000000                             pclath 000FFA  
                           tablat 000FF5     __size_of_interrupt_initialize 0006  
             __size_of_LCDPutChar 0042                  __end_ofi2___wmul 3BBC  
                           plusw0 000FEB                             plusw1 000FE3  
                           plusw2 000FDB               __size_of_LCDPutInst 0042  
                           ttemp5 004D                             ttemp6 0050  
                           ttemp7 0054                             status 000FD8  
         __size_of_osc_initialize 0006                             wtemp8 004D  
              __size_ofi2___awmod 00B0                    turn_on_fan@idx 0060  
                 __initialization 3764                      __end_of_main 39B8  
            __end_of_handleButton 2ECA                  ?_SET_TIMER_state 0001  
                  _pin_initialize 3BBC          __size_of_timer_interrupt 1582  
                          ??_main 00A5                     __activetblptr 000003  
          __size_of_readButtonRB0 0052            __size_of_readButtonRA5 0052  
                       ??_LCDInit 0066                      LCDPutChar@ch 0065  
               __end_of_LCDPutStr 3A38                     _count_timeout 00B9  
                    LCDPrint@line 006E                            _ADCON1 000FC1  
               register_timer@idx 0085                 register_timer@cur 0083  
              __size_of_InitBBSPI 0012                            _CCPR4L 000F74  
        __size_of_turn_off_heater 0004                  ___awdiv@dividend 0060  
               register_timer@sum 0081                      LCDPutInst@ch 0065  
               _temperature_dht11 00C3                  ??_turn_on_heater 0060  
                  _register_timer 1E78                            i2l3201 3116  
                          i2l3211 3142                            i2l3203 311A  
                          i2l3221 317A                            i2l3213 314A  
                          i2l3205 3128                            i2l4101 1076  
                          i2l3231 31B4                            i2l3223 3190  
                          i2l3215 315C                            i2l3207 3130  
                          i2l4111 10A6                            i2l4103 1084  
                          i2l3233 31BC                            i2l3225 3198  
                          i2l3217 3164                            i2l3209 3134  
                          i2l4041 3338                            i2l4121 10DC  
                          i2l4113 10B4                            i2l4105 1086  
                          i2l3227 319E                            i2l3219 316C  
                          i2l4043 334E                            i2l4131 122A  
                          i2l4123 11A4                            i2l4115 10B6  
                          i2l4107 108A                            i2l3229 31A4  
                          i2l4045 3356                            i2l4037 3320  
                          i2l4061 2720                            i2l4053 267C  
                          i2l4141 12DE                            i2l4133 123C  
                          i2l4125 11AE                            i2l4117 10BE  
                          i2l4109 1098                            i2l4047 3376  
                          i2l4071 27F8                            i2l4063 2732  
                          i2l4055 2690                            i2l4151 13EC  
                          i2l4143 12E8                            i2l4135 128C  
                          i2l4127 11FE                            i2l4049 33A2  
                          i2l4065 276A                            i2l4057 26B8  
                          i2l4153 14A2                            i2l4145 1310  
                          i2l4137 12BC                            i2l4129 1218  
                          i2l4067 27A2                            i2l4059 271C  
                          i2l4147 1340                            i2l4139 12C4  
                          i2l4155 152A                            i2l4069 27D0  
                          i2l4157 1552                            i2l4149 1354  
                          i2l4099 1068                            i2l3649 3B44  
                          i2l3841 3C40                            i2l3861 3C76  
                          i2l3951 3B96                            i2l3953 3BB2  
             initializeTaskList@i 0068                 _temperature_value 00CD  
            __end_of_getSizeQueue 3B44                            _OSCCON 000FD3  
         _check_humid_to_turn_fan 31C6                      LCDPutStr@ptr 0066  
      fp__check_humid_to_turn_fan 0000                  __end_of___xxtofl 267A  
                 ??_LCDMoveCursor 0067                    __CFG_XINST$OFF 000000  
            __size_of_isEmptyList 0018                  __end_of_dispatch 3764  
                __end_of_get_time 3CB2                            ___fleq 3274  
                       ??___fladd 008F                            ___wmul 3B6E  
          __end_of_pin_initialize 3BE0                         ??___awdiv 0064  
                       ??___awmod 0064                         ??___flmul 0076  
                       ??___flsub 009F                         ??___fltol 0064  
            __size_of_isFullQueue 001C                  ?_queueInitialize 0001  
                          _ledVal 004A                 _flag_switch_state 00C9  
                          clear_0 378C                            clear_1 379E  
                          clear_2 37AA                            clear_3 37B6  
                ___awdiv@quotient 0066                            _period 00D9  
                 ___awmod@divisor 0062                         ??_getByte 0060  
                 ___awmod@counter 0064              __end_of_isEmptyQueue 3AEA  
                       ??_dequeue 006D                         ??_readDHT 0064  
                       ??_enqueue 000F             __size_of_system_setup 0130  
          Port_BBSPIInit@port_dir 0063                 __end_ofi2___awmod 31C6  
                LCDMoveCursor@pos 0066                      __mediumconst 0000  
         __size_of_LTD_initialize 000A                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
          __end_of_register_timer 2218                    i2___awmod@sign 0006  
                _readTempAndHumid 2966                      ___xxtofl@arg 006A  
                    ___xxtofl@exp 0069                      ___xxtofl@val 0060  
                      ___fleq@ff1 0060                        ___fleq@ff2 0064  
                      __accesstop 0060           __end_of__initialization 37BC  
                       ?_LCDPrint 006B                     _readButtonRB0 37C6  
                   _readButtonRA5 3818                     ___rparam_used 000001  
                      ___fltol@f1 0060        __end_of_turn_off_heat_pump 3CEE  
          __size_of_SendByteBBSPI 006A                    __pcstackCOMRAM 0001  
                    __pidataBANK0 3CBE                   ?_pin_initialize 0001  
               __end_of_InitBBSPI 3CA0                      _system_setup 2A9C  
                    ??_LCDPutChar 0065                      ??_LCDPutInst 0065  
            __end_of_LCDPrintChar 3A76                         ?i2___wmul 0001  
                    ?_start_timer 0001                   __CFG_OSC$INTIO7 000000  
                  _Port_BBSPIInit 3C22                 ??_timer_interrupt 000F  
          printTempAndHumid@humid 0091                   ?_register_timer 0066  
       ??_check_humid_to_turn_fan 006F                        __pbssBANK0 00A5  
                      __pbssBANK1 0100                    _osc_initialize 3CD2  
                  ?_readButtonRB0 0060                    ?_readButtonRA5 0060  
              __end_of_LCDPutChar 3936                        ??_LCDPrint 006E  
              __end_of_LCDPutInst 3978                 ??_turn_off_heater 0060  
           __size_of_handleButton 00E8                           ?___fleq 0060  
          start_timer@timer_vaddr 006C                timer_interrupt@cur 0030  
              timer_interrupt@pos 0032                timer_interrupt@sum 002E  
                         ?___wmul 0060                           _CCP4CON 000F73  
              register_timer@prev 007F               getByte@byteReceived 0060  
         __size_of_set_speed_fan3 000C                   LCDPrintChar@pos 006B  
                      ??i2___wmul 0005            __end_of_Port_BBSPIInit 3C40  
                         _LCDInit 369C                     _SendByteBBSPI 3632  
                       ?___xxtofl 0060                      ?_turn_on_fan 0060  
                      _isFullList 3C5C             __size_of_getSizeQueue 002C  
            _timer_interrupt$2141 0025              _timer_interrupt$2146 0028  
            _timer_interrupt$2147 002A            __end_of_osc_initialize 3CD8  
                       ?_dispatch 0001                         ?_get_time 0060  
                      _countRB0_1 0034                        _countRA5_1 003C  
                    _handleButton 2DE2                  WritePort_BBSPI@a 0063  
           LCDMoveCursor@position 006A                 _turn_on_heat_pump 3CE2  
                   ?_remove_timer 0001              register_timer@period 0066  
              ?_turn_on_heat_pump 0001                           __Hparam 0000  
                         __Lparam 0000             __size_of_isEmptyQueue 0036  
                 __size_of___fleq 00AC                           ___fladd 158A  
 __end_of_check_humid_to_turn_fan 3274                           ___awdiv 2F9E  
                         ___awmod 3064                           ___flmul 1A4C  
                         ___flsub 386A                           ___fltol 2CDA  
                 __size_of___wmul 0028          __size_of_WritePort_BBSPI 0020  
    __end_of_interrupt_initialize 3CDE                      __psmallconst 1000  
             ??_turn_on_heat_pump 0060                    remove_timer@id 0006  
                         __pcinit 3764                           __ramtop 1000  
                    _getSizeQueue 3B18                           _getByte 33CC  
                         __ptext0 3978                           __ptext1 2A9C  
                         __ptext2 1E78                           __ptext3 3C5C  
                         __ptext4 3BE0                           __ptext5 3518  
                         __ptext6 2BCC                           __ptext7 35AE  
                         __ptext8 3BBC                           __ptext9 3CD2  
                         _dequeue 3476                 _printTempAndHumid 2218  
                    __size_of_FSM 0154                           _readDHT 2ECA  
                  ?_SendByteBBSPI 0001                   ?_Port_BBSPIInit 0001  
                         _enqueue 3320                         _T2CONbits 000FCA  
                   ??_changeState 0060                        ??___xxtofl 0064  
                  _LTD_initialize 3CC8                  ___awmod@dividend 0060  
         __size_ofi2_getSizeQueue 002A                ?_printTempAndHumid 0001  
      __end_of_initializeTaskList 2CDA                           _task_id 00A5  
                         _time_ms 00BD                         _LCDPutStr 39F8  
                      ??_dispatch 00A0                        ??_get_time 0064  
                  __pintcode_body 104E                   ?_osc_initialize 0001  
            end_of_initialization 37BC                   ??_readButtonRB0 0062  
                 ??_readButtonRA5 0062         __end_of_turn_on_heat_pump 3CE6  
             ??_printTempAndHumid 0087               fp__readTempAndHumid 0000  
                         int_func 104E               i2___wmul@multiplier 0001  
                    _isEmptyQueue 3AB4                    ??_remove_timer 0001  
               LCDMoveCursor@line 0067             __size_of_LCDPrintChar 003E  
                         postdec1 000FE5                           postdec2 000FDD  
        __end_of_readTempAndHumid 2A9C                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
       __end_of_printTempAndHumid 24C2              handleButton@checkRB0 0068  
            handleButton@checkRA5 0066                         _PORTAbits 000F80  
                       _PORTBbits 000F81                         _PORTCbits 000F82  
          __end_of_LTD_initialize 3CD2              handleButton@data_ptr 0062  
                  getByte@timeOut 0061                        dequeue@idx 006D  
                     ___fladd@grs 0096                     ___xxtofl@sign 0068  
                     ?_isFullList 0001                         _TRISAbits 000F92  
                       _TRISCbits 000F94                         _TRISFbits 000F97  
                       _TRISGbits 000F98          __size_of_SET_TIMER_state 0002  
            __size_of_start_timer 0096                        ?_LCDPutStr 0066  
                       i2___awmod 3116               __end_of_changeState 3B18  
             SendByteBBSPI@output 0060                       ___flmul@grs 007B  
                    _LCDPrintChar 3A38                     ??_isEmptyList 0001  
                ??_pin_initialize 0060                 __size_of_LCDPrint 0042  
                   ??_isFullQueue 0009             __end_of_LCDMoveCursor 3AB4  
                  __end_of___fleq 3320                   _timer_interrupt 0008  
                  __end_of___wmul 3B96            register_timer@callback 006E  
                    _firstReadRB0 00DC                      _firstReadRA5 00DE  
                  _set_speed_fan3 3CB2                   ??_SendByteBBSPI 0060  
          register_timer@data_ptr 0071                     _secondReadRB0 00DB  
                   _secondReadRA5 00DD                   ?_LTD_initialize 0001  
              _turn_off_heat_pump 3CEA                         _InitBBSPI 3C8E  
                ??_register_timer 0073                  i2___wmul@product 0005  
               ??_WritePort_BBSPI 0064          __size_of_queueInitialize 0084  
             start_initialization 3764                       __end_of_FSM 2966  
               __size_ofi2___wmul 0026                   _turn_off_heater 3CE6  
             ?_turn_off_heat_pump 0001                        ?i2___awmod 0001  
            __size_of_turn_on_fan 0040        __size_of_turn_on_heat_pump 0004  
            _interrupt_initialize 3CD8                        enqueue@ptr 000A  
         __size_of_turn_on_heater 0004              ??_turn_off_heat_pump 0060  
             __size_of_isFullList 001A                          ??___fleq 0068  
                        ??___wmul 0064            __end_of_set_speed_fan3 3CBE  
             __end_of_isEmptyList 3C8E                       __pdataBANK0 00D5  
      __size_of_printTempAndHumid 02AA               __end_of_isFullQueue 3C5C  
                      ?_InitBBSPI 0001                         ___fladd@a 008B  
                       ___fladd@b 0087              __end_of_remove_timer 2812  
                        ?_LCDInit 0001                       __pbssBIGRAM 0164  
                  i2_getSizeQueue 3B44                       _changeState 3AEA  
                       ___flmul@a 0072                         ___flmul@b 006E  
                     __pbssCOMRAM 0034                         ___flsub@a 009B  
                       ___flsub@b 0097                     __pcstackBANK0 0060  
               __size_of___xxtofl 01B8                       ??_LCDPutStr 0068  
           ?_interrupt_initialize 0001             printTempAndHumid@temp 008F  
               ??_SET_TIMER_state 0060                 __size_of_dispatch 0064  
               __size_of_get_time 0012           __end_of_timer_interrupt 158A  
                       __pintcode 0008                          ?___fladd 0087  
                        ?___awdiv 0060                          ?___awmod 0060  
                        ?___flmul 006E                          ?___flsub 0097  
                        ?___fltol 0060                   ?_set_speed_fan3 0060  
             timer_interrupt@prev 002C                    LCDPrintChar@ch 006C  
                ??_Port_BBSPIInit 0063                   enqueue@data_ptr 000D  
                        ?_getByte 0001            __end_ofi2_getSizeQueue 3B6E  
                        ?_dequeue 0068           __end_of_turn_off_heater 3CEA  
                        ?_readDHT 0001                       __smallconst 1000  
                        ?_enqueue 000A               register_timer@delay 006A  
                ??_osc_initialize 0060          ?_check_humid_to_turn_fan 0001  
                     ??i2___awmod 0005                  LCDPrintChar@line 006D  
               ??_queueInitialize 0066                    ___wmul@product 0064  
                        _LCDPrint 38B2                          _LATAbits 000F89  
                        _LATCbits 000F8B                          _LATDbits 000F8C  
                        _LATFbits 000F8E                _initializeTaskList 2BCC  
                        _PIE1bits 000F9D                       _isEmptyList 3C76  
                        i2u250_40 317A                          i2u250_41 3176  
                        i2u251_40 3190                          i2u251_41 318C  
                        i2u252_40 31B4                          i2u332_40 3C58  
                        i2u252_41 31B0                          i2u332_41 3C52  
                        i2u333_40 3C5A                          i2u247_40 3128  
                        i2u247_41 3124                          i2u248_40 3142  
                        i2u360_40 27D0                          i2u248_41 313E  
                        i2u360_41 27CC                          i2u249_40 315C  
                        i2u337_40 3C8A                          i2u361_40 1076  
                        i2u249_41 3158                          i2u337_41 3C84  
                        i2u361_41 1072                          _PIR1bits 000F9E  
                       _task_list 0164                          i2u354_40 3334  
                        i2u338_40 3C8C                          i2u370_40 1354  
                        i2u362_40 1084                          i2u354_41 3330  
                        i2u370_41 1350                          i2u362_41 1080  
                        i2u355_40 334E                          i2u371_40 13EC  
                        i2u363_40 10A6                          i2u355_41 334A  
                        i2u371_41 13E8                          i2u363_41 10A2  
                        i2u356_40 2690                          i2u372_40 14A2  
                        i2u364_40 10B4                          i2u356_41 268C  
                        i2u372_41 149E                          i2u364_41 10B0  
                        i2u357_40 26B4                          i2u373_40 1552  
                        i2u365_40 10D2                          i2u357_41 26B0  
                        i2u373_41 154E                          i2u365_41 10CE  
                        i2u358_40 2732                          i2u366_40 11A4  
                        i2u358_41 272E                          i2u366_41 11A0  
                        i2u359_40 27A2                          i2u367_40 122A  
                        i2u359_41 279E                          i2u367_41 1226  
                     _isFullQueue 3C40                          i2u368_40 123C  
                        i2u368_41 1238                          i2u369_40 128C  
                        i2u369_41 1288               ?_initializeTaskList 0001  
               ?_readTempAndHumid 0001             _printTempAndHumid$104 0087  
           _printTempAndHumid$106 008B                ??_readTempAndHumid 009F  
                 ?i2_getSizeQueue 0001                 ___wmul@multiplier 0060  
                     ??_InitBBSPI 0060                SendByteBBSPI@input 0062  
                        i2___wmul 3B96                  __size_of_LCDInit 0064  
                    ??_isFullList 0060                 _system_initialize 3BE0  
            ??_initializeTaskList 0068            ??_interrupt_initialize 0060  
                       copy_data0 3778                i2___awmod@dividend 0001  
              ?_system_initialize 0001             __end_of_readButtonRB0 3818  
           __end_of_readButtonRA5 386A           set_speed_fan3@dutyCycle 0060  
             ??_system_initialize 006D                  ?_timer_interrupt 0001  
                        __Hrparam 0000                    _turn_on_heater 3CDE  
                        __Lrparam 0000                       _RB0_pressed 00CB  
                 _WritePort_BBSPI 3C02                __end_of_isFullList 3C76  
                ??_LTD_initialize 0060                     ?_system_setup 0001  
           __size_of_remove_timer 0198                  __size_of___fladd 04C2  
                __size_of___awdiv 00C6                  __size_of___awmod 00B2  
                __size_of___flmul 042C                  __size_of___flsub 0048  
                __size_of___fltol 0108             i2___wmul@multiplicand 0003  
                     _RA5_pressed 00CC                  ?_turn_off_heater 0001  
                __size_of_getByte 00AA                  __size_of_dequeue 00A2  
                   ??_start_timer 006A                   remove_timer@pos 0005  
                        ___xxtofl 24C2                  __size_of_readDHT 00D4  
       __end_of_system_initialize 3C02                  __size_of_enqueue 00AC  
                 fp__handleButton 0000                          __ptext10 3CD8  
                        __ptext11 3CC8                          __ptext20 386A  
                        __ptext12 369C                          __ptext21 158A  
                        __ptext13 3C22                          __ptext30 3B18  
                        __ptext22 2218                          __ptext14 3C8E  
                        __ptext31 3B6E                          __ptext23 1A4C  
                        __ptext15 3700                          __ptext40 3CDE  
                        __ptext32 31C6                          __ptext24 3274  
                        __ptext16 2966                          __ptext41 3CE2  
                        __ptext33 3CB2                          __ptext25 2DE2  
                        __ptext17 2ECA                          __ptext50 3A76  
                        __ptext42 39B8                          __ptext34 2CDA  
                        __ptext26 37C6                          __ptext18 33CC  
                        __ptext51 3936                          __ptext43 3CE6  
                        __ptext35 3064                          __ptext27 3818  
                        __ptext19 24C2                          __ptext60 3B44  
                        __ptext52 3C02                          __ptext44 3CEA  
                        __ptext36 2F9E                          __ptext28 3476  
                        __ptext61 3116                          __ptext53 3632  
                        __ptext45 3CA0                          __ptext37 3A38  
                        __ptext29 3AB4                          __ptext62 0000  
                        __ptext46 3CEE                          __ptext38 3AEA  
                        __ptext55 267A                          __ptext47 38B2  
                        __ptext39 2812                          __ptext56 3C76  
                        __ptext48 39F8                          __ptext57 3320  
                        __ptext49 38F4                          __ptext58 3B96  
                        __ptext59 3C40                          _dispatch 3700  
                        _get_time 3CA0                          _countRB0 0038  
                        _countRA5 0040              fp__printTempAndHumid 0000  
                   __size_of_main 0040                    fp__changeState 0000  
          __end_of_turn_on_heater 3CE2                      _remove_timer 267A  
                     _ready_queue 0100                          getByte@i 0063  
                        _num_task 00C8                    ??_system_setup 0086  
                        _stateRB0 00C5                          int$flags 004C  
                        _stateRA5 00C6                        _LCDPutChar 38F4  
                      _LCDPutInst 3936             __end_of_SendByteBBSPI 369C  
               i2___awmod@divisor 0003                 i2___awmod@counter 0005  
                      _INTCONbits 000FF2                      ?_changeState 0001  
                 _SET_TIMER_state 3CEE                     ??_turn_on_fan 0062  
          __size_of_LCDMoveCursor 003E               __end_of_start_timer 35AE  
                        intlevel2 0000                     ?_handleButton 0062  
         __end_of_WritePort_BBSPI 3C22                   ?_turn_on_heater 0001  
                ??_set_speed_fan3 0062       __size_of_turn_off_heat_pump 0004  
    check_humid_to_turn_fan@humid 006F                   readDHT@checkSum 0065  
                    _prev_time_ms 0044                     ?_getSizeQueue 0001  
         __size_of_pin_initialize 0024                   _queueInitialize 35AE  
         WritePort_BBSPI@port_add 0064        __size_of_system_initialize 0022  
                  _humidity_dht11 00C1                     ___fladd@signs 0093  
                  ??_handleButton 0064                    _humidity_value 00D1  
         __size_of_register_timer 03A0               __end_of_turn_on_fan 39F8  
                     dequeue@temp 006F                      ___fladd@aexp 0094  
                    ___fladd@bexp 0095                     ?_isEmptyQueue 0001  
                queueInitialize@i 0066  __size_of_check_humid_to_turn_fan 00AE  
                  readDHT@timeOut 0066                      ?_isEmptyList 0001  
                    ?_isFullQueue 0001  
