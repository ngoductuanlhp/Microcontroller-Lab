

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Nov 18 09:54:42 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    84                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    85  0000                     
    86                           ; Version 2.10
    87                           ; Generated 31/07/2019 GMT
    88                           ; 
    89                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    90                           ; All rights reserved.
    91                           ; 
    92                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    93                           ; 
    94                           ; Redistribution and use in source and binary forms, with or without modification, are
    95                           ; permitted provided that the following conditions are met:
    96                           ; 
    97                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    98                           ;        conditions and the following disclaimer.
    99                           ; 
   100                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   101                           ;        of conditions and the following disclaimer in the documentation and/or other
   102                           ;        materials provided with the distribution.
   103                           ; 
   104                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   105                           ;        software without specific prior written permission.
   106                           ; 
   107                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   108                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   109                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   110                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   111                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   112                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   113                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   114                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   115                           ; 
   116                           ; 
   117                           ; Code-generator required, PIC18F8722 Definitions
   118                           ; 
   119                           ; SFR Addresses
   120  0000                     
   121                           	psect	idataBANK0
   122  003D02                     __pidataBANK0:
   123                           	opt callstack 0
   124                           
   125                           ;initializer for _rear
   126  003D02  FFFF               	dw	65535
   127                           
   128                           ;initializer for _front
   129  003D04  FFFF               	dw	65535
   130                           
   131                           ;initializer for _period
   132  003D06  2710               	dw	10000
   133                           
   134                           ;initializer for _secondReadRB0
   135  003D08  01                 	db	1
   136                           
   137                           ;initializer for _firstReadRB0
   138  003D09  01                 	db	1
   139                           
   140                           ;initializer for _secondReadRA5
   141  003D0A  01                 	db	1
   142                           
   143                           ;initializer for _firstReadRA5
   144  003D0B  01                 	db	1
   145  0000                     _LATDbits	set	3980
   146  0000                     _PORTBbits	set	3969
   147  0000                     _PORTAbits	set	3968
   148  0000                     _TMR1L	set	4046
   149  0000                     _TMR1H	set	4047
   150  0000                     _T1CON	set	4045
   151  0000                     _PIR1bits	set	3998
   152  0000                     _PIE1bits	set	3997
   153  0000                     _TMR0L	set	4054
   154  0000                     _T0CON	set	4053
   155  0000                     _PORTCbits	set	3970
   156  0000                     _LATCbits	set	3979
   157  0000                     _LATAbits	set	3977
   158  0000                     _TRISCbits	set	3988
   159  0000                     _TRISAbits	set	3986
   160  0000                     _LATFbits	set	3982
   161  0000                     _TRISFbits	set	3991
   162  0000                     _INTCONbits	set	4082
   163  0000                     _T2CONbits	set	4042
   164  0000                     _TMR2	set	4044
   165  0000                     _CCPR4L	set	3956
   166  0000                     _CCP4CON	set	3955
   167  0000                     _T2CON	set	4042
   168  0000                     _PR2	set	4043
   169  0000                     _TRISGbits	set	3992
   170  0000                     _TRISD	set	3989
   171  0000                     _LATD	set	3980
   172  0000                     _TRISB	set	3987
   173  0000                     _LATB	set	3978
   174  0000                     _TRISA	set	3986
   175  0000                     _LATA	set	3977
   176  0000                     _ADCON1	set	4033
   177  0000                     _TRISC	set	3988
   178  0000                     _LATC	set	3979
   179  0000                     _OSCCON	set	4051
   180                           
   181                           	psect	smallconst
   182  001000                     __psmallconst:
   183                           	opt callstack 0
   184  001000  00                 	db	0
   185  001001                     STR_6:
   186  001001  49                 	db	73	;'I'
   187  001002  44                 	db	68	;'D'
   188  001003  3A                 	db	58	;':'
   189  001004  20                 	db	32
   190  001005  31                 	db	49	;'1'
   191  001006  37                 	db	55	;'7'
   192  001007  31                 	db	49	;'1'
   193  001008  30                 	db	48	;'0'
   194  001009  33                 	db	51	;'3'
   195  00100A  36                 	db	54	;'6'
   196  00100B  34                 	db	52	;'4'
   197  00100C  20                 	db	32
   198  00100D  20                 	db	32
   199  00100E  20                 	db	32
   200  00100F  20                 	db	32
   201  001010  20                 	db	32
   202  001011  00                 	db	0
   203  001012                     STR_5:
   204  001012  4C                 	db	76	;'L'
   205  001013  54                 	db	84	;'T'
   206  001014  44                 	db	68	;'D'
   207  001015  20                 	db	32
   208  001016  63                 	db	99	;'c'
   209  001017  6F                 	db	111	;'o'
   210  001018  6E                 	db	110	;'n'
   211  001019  74                 	db	116	;'t'
   212  00101A  72                 	db	114	;'r'
   213  00101B  6F                 	db	111	;'o'
   214  00101C  6C                 	db	108	;'l'
   215  00101D  6C                 	db	108	;'l'
   216  00101E  65                 	db	101	;'e'
   217  00101F  72                 	db	114	;'r'
   218  001020  20                 	db	32
   219  001021  20                 	db	32
   220  001022  00                 	db	0
   221  001023                     STR_9:
   222  001023  48                 	db	72	;'H'
   223  001024  65                 	db	101	;'e'
   224  001025  61                 	db	97	;'a'
   225  001026  74                 	db	116	;'t'
   226  001027  20                 	db	32
   227  001028  50                 	db	80	;'P'
   228  001029  75                 	db	117	;'u'
   229  00102A  6D                 	db	109	;'m'
   230  00102B  70                 	db	112	;'p'
   231  00102C  00                 	db	0
   232  00102D                     STR_8:
   233  00102D  53                 	db	83	;'S'
   234  00102E  68                 	db	104	;'h'
   235  00102F  75                 	db	117	;'u'
   236  001030  74                 	db	116	;'t'
   237  001031  64                 	db	100	;'d'
   238  001032  6F                 	db	111	;'o'
   239  001033  77                 	db	119	;'w'
   240  001034  6E                 	db	110	;'n'
   241  001035  00                 	db	0
   242  001036                     STR_7:
   243  001036  48                 	db	72	;'H'
   244  001037  65                 	db	101	;'e'
   245  001038  61                 	db	97	;'a'
   246  001039  74                 	db	116	;'t'
   247  00103A  65                 	db	101	;'e'
   248  00103B  72                 	db	114	;'r'
   249  00103C  00                 	db	0
   250  00103D                     STR_12:
   251  00103D  46                 	db	70	;'F'
   252  00103E  61                 	db	97	;'a'
   253  00103F  6E                 	db	110	;'n'
   254  001040  33                 	db	51	;'3'
   255  001041  3A                 	db	58	;':'
   256  001042  00                 	db	0
   257  001043                     STR_2:
   258  001043  48                 	db	72	;'H'
   259  001044  3A                 	db	58	;':'
   260  001045  00                 	db	0
   261  001046                     STR_1:
   262  001046  54                 	db	84	;'T'
   263  001047  3A                 	db	58	;':'
   264  001048  00                 	db	0
   265  001049                     STR_3:
   266  001049  2C                 	db	44
   267  00104A  00                 	db	0
   268  00104B                     STR_4:
   269  00104B  2E                 	db	46
   270  00104C  00                 	db	0
   271  0000                     
   272                           ; #config settings
   273  00104D  00                 	db	0	; dummy byte at the end
   274  0000                     
   275                           	psect	cinit
   276  00376E                     __pcinit:
   277                           	opt callstack 0
   278  00376E                     start_initialization:
   279                           	opt callstack 0
   280  00376E                     __initialization:
   281                           	opt callstack 0
   282                           
   283                           ; Initialize objects allocated to BANK0 (10 bytes)
   284                           ; load TBLPTR registers with __pidataBANK0
   285  00376E  0E02               	movlw	low __pidataBANK0
   286  003770  6EF6               	movwf	tblptrl,c
   287  003772  0E3D               	movlw	high __pidataBANK0
   288  003774  6EF7               	movwf	tblptrh,c
   289  003776  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   290  003778  6EF8               	movwf	tblptru,c
   291  00377A  EE00  F0D5         	lfsr	0,__pdataBANK0
   292  00377E  EE10 F00A          	lfsr	1,10
   293  003782                     copy_data0:
   294  003782  0009               	tblrd		*+
   295  003784  CFF5 FFEE          	movff	tablat,postinc0
   296  003788  50E5               	movf	postdec1,w,c
   297  00378A  50E1               	movf	fsr1l,w,c
   298  00378C  E1FA               	bnz	copy_data0
   299                           
   300                           ; Clear objects allocated to BIGRAM (300 bytes)
   301  00378E  EE01  F064         	lfsr	0,__pbssBIGRAM
   302  003792  EE11 F02C          	lfsr	1,300
   303  003796                     clear_0:
   304  003796  6AEE               	clrf	postinc0,c
   305  003798  50E5               	movf	postdec1,w,c
   306  00379A  50E1               	movf	fsr1l,w,c
   307  00379C  E1FC               	bnz	clear_0
   308  00379E  50E2               	movf	fsr1h,w,c
   309  0037A0  E1FA               	bnz	clear_0
   310                           
   311                           ; Clear objects allocated to BANK1 (100 bytes)
   312  0037A2  EE01  F000         	lfsr	0,__pbssBANK1
   313  0037A6  0E64               	movlw	100
   314  0037A8                     clear_1:
   315  0037A8  6AEE               	clrf	postinc0,c
   316  0037AA  06E8               	decf	wreg,f,c
   317  0037AC  E1FD               	bnz	clear_1
   318                           
   319                           ; Clear objects allocated to BANK0 (48 bytes)
   320  0037AE  EE00  F0A5         	lfsr	0,__pbssBANK0
   321  0037B2  0E30               	movlw	48
   322  0037B4                     clear_2:
   323  0037B4  6AEE               	clrf	postinc0,c
   324  0037B6  06E8               	decf	wreg,f,c
   325  0037B8  E1FD               	bnz	clear_2
   326                           
   327                           ; Clear objects allocated to COMRAM (24 bytes)
   328  0037BA  EE00  F034         	lfsr	0,__pbssCOMRAM
   329  0037BE  0E18               	movlw	24
   330  0037C0                     clear_3:
   331  0037C0  6AEE               	clrf	postinc0,c
   332  0037C2  06E8               	decf	wreg,f,c
   333  0037C4  E1FD               	bnz	clear_3
   334  0037C6                     end_of_initialization:
   335                           	opt callstack 0
   336  0037C6                     __end_of__initialization:
   337                           	opt callstack 0
   338  0037C6  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   339  0037C8  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   340  0037CA  0100               	movlb	0
   341  0037CC  EFC1  F01C         	goto	_main	;jump to C main() function
   342                           
   343                           	psect	bssCOMRAM
   344  000034                     __pbssCOMRAM:
   345                           	opt callstack 0
   346  000034                     _countRB0_1:
   347                           	opt callstack 0
   348  000034                     	ds	4
   349  000038                     _countRB0:
   350                           	opt callstack 0
   351  000038                     	ds	4
   352  00003C                     _countRA5_1:
   353                           	opt callstack 0
   354  00003C                     	ds	4
   355  000040                     _countRA5:
   356                           	opt callstack 0
   357  000040                     	ds	4
   358  000044                     _prev_time_ms:
   359                           	opt callstack 0
   360  000044                     	ds	4
   361  000048                     _count:
   362                           	opt callstack 0
   363  000048                     	ds	2
   364  00004A                     _ledVal:
   365                           	opt callstack 0
   366  00004A                     	ds	1
   367  00004B                     _value:
   368                           	opt callstack 0
   369  00004B                     	ds	1
   370                           
   371                           	psect	bssBANK0
   372  0000A5                     __pbssBANK0:
   373                           	opt callstack 0
   374  0000A5                     _task_id:
   375                           	opt callstack 0
   376  0000A5                     	ds	20
   377  0000B9                     _count_timeout:
   378                           	opt callstack 0
   379  0000B9                     	ds	4
   380  0000BD                     _time_ms:
   381                           	opt callstack 0
   382  0000BD                     	ds	4
   383  0000C1                     _humidity_dht11:
   384                           	opt callstack 0
   385  0000C1                     	ds	2
   386  0000C3                     _temperature_dht11:
   387                           	opt callstack 0
   388  0000C3                     	ds	2
   389  0000C5                     _stateRB0:
   390                           	opt callstack 0
   391  0000C5                     	ds	1
   392  0000C6                     _stateRA5:
   393                           	opt callstack 0
   394  0000C6                     	ds	1
   395  0000C7                     _flag_switch_state:
   396                           	opt callstack 0
   397  0000C7                     	ds	1
   398  0000C8                     _head:
   399                           	opt callstack 0
   400  0000C8                     	ds	1
   401  0000C9                     _num_task:
   402                           	opt callstack 0
   403  0000C9                     	ds	1
   404  0000CA                     _state:
   405                           	opt callstack 0
   406  0000CA                     	ds	1
   407  0000CB                     _RB0_pressed:
   408                           	opt callstack 0
   409  0000CB                     	ds	1
   410  0000CC                     _RA5_pressed:
   411                           	opt callstack 0
   412  0000CC                     	ds	1
   413  0000CD                     _temperature_value:
   414                           	opt callstack 0
   415  0000CD                     	ds	4
   416  0000D1                     _humidity_value:
   417                           	opt callstack 0
   418  0000D1                     	ds	4
   419                           
   420                           	psect	dataBANK0
   421  0000D5                     __pdataBANK0:
   422                           	opt callstack 0
   423  0000D5                     _rear:
   424                           	opt callstack 0
   425  0000D5                     	ds	2
   426  0000D7                     _front:
   427                           	opt callstack 0
   428  0000D7                     	ds	2
   429  0000D9                     _period:
   430                           	opt callstack 0
   431  0000D9                     	ds	2
   432  0000DB                     _secondReadRB0:
   433                           	opt callstack 0
   434  0000DB                     	ds	1
   435  0000DC                     _firstReadRB0:
   436                           	opt callstack 0
   437  0000DC                     	ds	1
   438  0000DD                     _secondReadRA5:
   439                           	opt callstack 0
   440  0000DD                     	ds	1
   441  0000DE                     _firstReadRA5:
   442                           	opt callstack 0
   443  0000DE                     	ds	1
   444                           
   445                           	psect	bssBANK1
   446  000100                     __pbssBANK1:
   447                           	opt callstack 0
   448  000100                     _ready_queue:
   449                           	opt callstack 0
   450  000100                     	ds	100
   451                           
   452                           	psect	bssBIGRAM
   453  000164                     __pbssBIGRAM:
   454                           	opt callstack 0
   455  000164                     _task_list:
   456                           	opt callstack 0
   457  000164                     	ds	300
   458                           
   459                           	psect	cstackBANK0
   460  000060                     __pcstackBANK0:
   461                           	opt callstack 0
   462  000060                     ?_readButtonRA5:
   463                           	opt callstack 0
   464  000060                     ?_readButtonRB0:
   465                           	opt callstack 0
   466  000060                     ?___wmul:
   467                           	opt callstack 0
   468  000060                     ?___awdiv:
   469                           	opt callstack 0
   470  000060                     ?___awmod:
   471                           	opt callstack 0
   472  000060                     ?_get_time:
   473                           	opt callstack 0
   474  000060                     ?___fltol:
   475                           	opt callstack 0
   476  000060                     ?___xxtofl:
   477                           	opt callstack 0
   478  000060                     SendByteBBSPI@output:
   479                           	opt callstack 0
   480  000060                     getByte@byteReceived:
   481                           	opt callstack 0
   482  000060                     turn_on_fan@idx:
   483                           	opt callstack 0
   484  000060                     set_speed_fan3@dutyCycle:
   485                           	opt callstack 0
   486  000060                     ___wmul@multiplier:
   487                           	opt callstack 0
   488  000060                     ___awdiv@dividend:
   489                           	opt callstack 0
   490  000060                     ___awmod@dividend:
   491                           	opt callstack 0
   492  000060                     ___fleq@ff1:
   493                           	opt callstack 0
   494  000060                     ___fltol@f1:
   495                           	opt callstack 0
   496  000060                     ___xxtofl@val:
   497                           	opt callstack 0
   498                           
   499                           ; 4 bytes @ 0x0
   500  000060                     	ds	1
   501  000061                     SendByteBBSPI@bitcount:
   502                           	opt callstack 0
   503  000061                     getByte@timeOut:
   504                           	opt callstack 0
   505                           
   506                           ; 2 bytes @ 0x1
   507  000061                     	ds	1
   508  000062                     ??_turn_on_fan:
   509  000062                     SendByteBBSPI@input:
   510                           	opt callstack 0
   511  000062                     handleButton@data_ptr:
   512                           	opt callstack 0
   513  000062                     ___wmul@multiplicand:
   514                           	opt callstack 0
   515  000062                     ___awdiv@divisor:
   516                           	opt callstack 0
   517  000062                     ___awmod@divisor:
   518                           	opt callstack 0
   519                           
   520                           ; 2 bytes @ 0x2
   521  000062                     	ds	1
   522  000063                     Port_BBSPIInit@port_dir:
   523                           	opt callstack 0
   524  000063                     WritePort_BBSPI@a:
   525                           	opt callstack 0
   526  000063                     getByte@i:
   527                           	opt callstack 0
   528                           
   529                           ; 1 bytes @ 0x3
   530  000063                     	ds	1
   531  000064                     ??_handleButton:
   532  000064                     ??_readDHT:
   533  000064                     ??___fltol:
   534  000064                     ??___xxtofl:
   535  000064                     WritePort_BBSPI@port_add:
   536                           	opt callstack 0
   537  000064                     ___awdiv@counter:
   538                           	opt callstack 0
   539  000064                     ___awmod@counter:
   540                           	opt callstack 0
   541  000064                     ___wmul@product:
   542                           	opt callstack 0
   543  000064                     ___fleq@ff2:
   544                           	opt callstack 0
   545                           
   546                           ; 4 bytes @ 0x4
   547  000064                     	ds	1
   548  000065                     LCDPutChar@ch:
   549                           	opt callstack 0
   550  000065                     LCDPutInst@ch:
   551                           	opt callstack 0
   552  000065                     readDHT@checkSum:
   553                           	opt callstack 0
   554  000065                     ___awdiv@sign:
   555                           	opt callstack 0
   556  000065                     ___awmod@sign:
   557                           	opt callstack 0
   558                           
   559                           ; 1 bytes @ 0x5
   560  000065                     	ds	1
   561  000066                     ??_LCDInit:
   562  000066                     ??_getSizeQueue:
   563  000066                     LCDMoveCursor@pos:
   564                           	opt callstack 0
   565  000066                     LCDPutStr@ptr:
   566                           	opt callstack 0
   567  000066                     readDHT@timeOut:
   568                           	opt callstack 0
   569  000066                     queueInitialize@i:
   570                           	opt callstack 0
   571  000066                     handleButton@checkRA5:
   572                           	opt callstack 0
   573  000066                     ___awdiv@quotient:
   574                           	opt callstack 0
   575  000066                     addTask@period:
   576                           	opt callstack 0
   577                           
   578                           ; 4 bytes @ 0x6
   579  000066                     	ds	1
   580  000067                     LCDMoveCursor@line:
   581                           	opt callstack 0
   582                           
   583                           ; 1 bytes @ 0x7
   584  000067                     	ds	1
   585  000068                     ??___fleq:
   586  000068                     ?_dequeue:
   587                           	opt callstack 0
   588  000068                     ___fltol@sign1:
   589                           	opt callstack 0
   590  000068                     ___xxtofl@sign:
   591                           	opt callstack 0
   592  000068                     _LCDMoveCursor$701:
   593                           	opt callstack 0
   594  000068                     initializeTaskList@i:
   595                           	opt callstack 0
   596  000068                     handleButton@checkRB0:
   597                           	opt callstack 0
   598                           
   599                           ; 2 bytes @ 0x8
   600  000068                     	ds	1
   601  000069                     ___fltol@exp1:
   602                           	opt callstack 0
   603  000069                     ___xxtofl@exp:
   604                           	opt callstack 0
   605                           
   606                           ; 1 bytes @ 0x9
   607  000069                     	ds	1
   608  00006A                     ??_start_timer:
   609  00006A                     LCDMoveCursor@position:
   610                           	opt callstack 0
   611  00006A                     addTask@delay:
   612                           	opt callstack 0
   613  00006A                     ___xxtofl@arg:
   614                           	opt callstack 0
   615                           
   616                           ; 4 bytes @ 0xA
   617  00006A                     	ds	1
   618  00006B                     LCDPrint@pos:
   619                           	opt callstack 0
   620  00006B                     LCDPrintChar@pos:
   621                           	opt callstack 0
   622                           
   623                           ; 1 bytes @ 0xB
   624  00006B                     	ds	1
   625  00006C                     LCDPrintChar@ch:
   626                           	opt callstack 0
   627  00006C                     start_timer@timer_vaddr:
   628                           	opt callstack 0
   629  00006C                     LCDPrint@ptr:
   630                           	opt callstack 0
   631                           
   632                           ; 2 bytes @ 0xC
   633  00006C                     	ds	1
   634  00006D                     LCDPrintChar@line:
   635                           	opt callstack 0
   636  00006D                     dequeue@idx:
   637                           	opt callstack 0
   638                           
   639                           ; 2 bytes @ 0xD
   640  00006D                     	ds	1
   641  00006E                     ?___flmul:
   642                           	opt callstack 0
   643  00006E                     LCDPrint@line:
   644                           	opt callstack 0
   645  00006E                     addTask@ptr:
   646                           	opt callstack 0
   647  00006E                     ___flmul@b:
   648                           	opt callstack 0
   649                           
   650                           ; 4 bytes @ 0xE
   651  00006E                     	ds	1
   652  00006F                     ??_FSM:
   653  00006F                     check_humid_to_turn_fan@humid:
   654                           	opt callstack 0
   655  00006F                     dequeue@temp:
   656                           	opt callstack 0
   657                           
   658                           ; 5 bytes @ 0xF
   659  00006F                     	ds	2
   660  000071                     addTask@data:
   661                           	opt callstack 0
   662                           
   663                           ; 2 bytes @ 0x11
   664  000071                     	ds	1
   665  000072                     ___flmul@a:
   666                           	opt callstack 0
   667                           
   668                           ; 4 bytes @ 0x12
   669  000072                     	ds	1
   670  000073                     ??_addTask:
   671                           
   672                           ; 1 bytes @ 0x13
   673  000073                     	ds	3
   674  000076                     ??___flmul:
   675                           
   676                           ; 1 bytes @ 0x16
   677  000076                     	ds	4
   678  00007A                     ___flmul@sign:
   679                           	opt callstack 0
   680                           
   681                           ; 1 bytes @ 0x1A
   682  00007A                     	ds	1
   683  00007B                     ___flmul@grs:
   684                           	opt callstack 0
   685                           
   686                           ; 4 bytes @ 0x1B
   687  00007B                     	ds	4
   688  00007F                     ___flmul@aexp:
   689                           	opt callstack 0
   690  00007F                     addTask@prev:
   691                           	opt callstack 0
   692                           
   693                           ; 2 bytes @ 0x1F
   694  00007F                     	ds	1
   695  000080                     ___flmul@bexp:
   696                           	opt callstack 0
   697                           
   698                           ; 1 bytes @ 0x20
   699  000080                     	ds	1
   700  000081                     addTask@sum:
   701                           	opt callstack 0
   702  000081                     ___flmul@prod:
   703                           	opt callstack 0
   704                           
   705                           ; 4 bytes @ 0x21
   706  000081                     	ds	2
   707  000083                     addTask@cur:
   708                           	opt callstack 0
   709                           
   710                           ; 2 bytes @ 0x23
   711  000083                     	ds	2
   712  000085                     addTask@idx:
   713                           	opt callstack 0
   714  000085                     ___flmul@temp:
   715                           	opt callstack 0
   716                           
   717                           ; 2 bytes @ 0x25
   718  000085                     	ds	1
   719  000086                     register_timer@period:
   720                           	opt callstack 0
   721                           
   722                           ; 4 bytes @ 0x26
   723  000086                     	ds	1
   724  000087                     ?___fladd:
   725                           	opt callstack 0
   726  000087                     _printTempAndHumid$129:
   727                           	opt callstack 0
   728  000087                     ___fladd@b:
   729                           	opt callstack 0
   730                           
   731                           ; 4 bytes @ 0x27
   732  000087                     	ds	3
   733  00008A                     register_timer@delay:
   734                           	opt callstack 0
   735                           
   736                           ; 4 bytes @ 0x2A
   737  00008A                     	ds	1
   738  00008B                     _printTempAndHumid$131:
   739                           	opt callstack 0
   740  00008B                     ___fladd@a:
   741                           	opt callstack 0
   742                           
   743                           ; 4 bytes @ 0x2B
   744  00008B                     	ds	3
   745  00008E                     register_timer@callback:
   746                           	opt callstack 0
   747                           
   748                           ; 3 bytes @ 0x2E
   749  00008E                     	ds	1
   750  00008F                     ??___fladd:
   751  00008F                     printTempAndHumid@temp:
   752                           	opt callstack 0
   753                           
   754                           ; 2 bytes @ 0x2F
   755  00008F                     	ds	2
   756  000091                     printTempAndHumid@humid:
   757                           	opt callstack 0
   758  000091                     register_timer@data_ptr:
   759                           	opt callstack 0
   760                           
   761                           ; 2 bytes @ 0x31
   762  000091                     	ds	2
   763  000093                     ___fladd@signs:
   764                           	opt callstack 0
   765                           
   766                           ; 1 bytes @ 0x33
   767  000093                     	ds	1
   768  000094                     ___fladd@aexp:
   769                           	opt callstack 0
   770                           
   771                           ; 1 bytes @ 0x34
   772  000094                     	ds	1
   773  000095                     ___fladd@bexp:
   774                           	opt callstack 0
   775                           
   776                           ; 1 bytes @ 0x35
   777  000095                     	ds	1
   778  000096                     ___fladd@grs:
   779                           	opt callstack 0
   780                           
   781                           ; 1 bytes @ 0x36
   782  000096                     	ds	1
   783  000097                     ?___flsub:
   784                           	opt callstack 0
   785  000097                     ___flsub@b:
   786                           	opt callstack 0
   787                           
   788                           ; 4 bytes @ 0x37
   789  000097                     	ds	4
   790  00009B                     ___flsub@a:
   791                           	opt callstack 0
   792                           
   793                           ; 4 bytes @ 0x3B
   794  00009B                     	ds	4
   795  00009F                     ??_readTempAndHumid:
   796  00009F                     
   797                           ; 1 bytes @ 0x3F
   798  00009F                     	ds	1
   799  0000A0                     selectReadyTask@node:
   800                           	opt callstack 0
   801                           
   802                           ; 5 bytes @ 0x40
   803  0000A0                     	ds	5
   804  0000A5                     
   805                           ; 1 bytes @ 0x45
   806                           
   807                           	psect	cstackCOMRAM
   808  000001                     __pcstackCOMRAM:
   809                           	opt callstack 0
   810  000001                     ??_removeTask:
   811  000001                     ?i2___wmul:
   812                           	opt callstack 0
   813  000001                     ?i2___awmod:
   814                           	opt callstack 0
   815  000001                     i2___wmul@multiplier:
   816                           	opt callstack 0
   817  000001                     i2___awmod@dividend:
   818                           	opt callstack 0
   819                           
   820                           ; 2 bytes @ 0x0
   821  000001                     	ds	2
   822  000003                     i2___wmul@multiplicand:
   823                           	opt callstack 0
   824  000003                     i2___awmod@divisor:
   825                           	opt callstack 0
   826                           
   827                           ; 2 bytes @ 0x2
   828  000003                     	ds	2
   829  000005                     removeTask@pos:
   830                           	opt callstack 0
   831  000005                     i2___awmod@counter:
   832                           	opt callstack 0
   833  000005                     i2___wmul@product:
   834                           	opt callstack 0
   835                           
   836                           ; 2 bytes @ 0x4
   837  000005                     	ds	1
   838  000006                     removeTask@idx:
   839                           	opt callstack 0
   840  000006                     i2___awmod@sign:
   841                           	opt callstack 0
   842                           
   843                           ; 1 bytes @ 0x5
   844  000006                     	ds	1
   845  000007                     ??i2_getSizeQueue:
   846                           
   847                           ; 1 bytes @ 0x6
   848  000007                     	ds	2
   849  000009                     ??_isFullQueue:
   850                           
   851                           ; 1 bytes @ 0x8
   852  000009                     	ds	1
   853  00000A                     enqueue@ptr:
   854                           	opt callstack 0
   855                           
   856                           ; 3 bytes @ 0x9
   857  00000A                     	ds	3
   858  00000D                     enqueue@data_ptr:
   859                           	opt callstack 0
   860                           
   861                           ; 2 bytes @ 0xC
   862  00000D                     	ds	2
   863  00000F                     ??_handleListHead:
   864  00000F                     
   865                           ; 1 bytes @ 0xE
   866  00000F                     	ds	16
   867  00001F                     _handleListHead$2325:
   868                           	opt callstack 0
   869                           
   870                           ; 3 bytes @ 0x1E
   871  00001F                     	ds	3
   872  000022                     _handleListHead$2330:
   873                           	opt callstack 0
   874                           
   875                           ; 2 bytes @ 0x21
   876  000022                     	ds	2
   877  000024                     _handleListHead$2331:
   878                           	opt callstack 0
   879                           
   880                           ; 2 bytes @ 0x23
   881  000024                     	ds	2
   882  000026                     handleListHead@prev:
   883                           	opt callstack 0
   884                           
   885                           ; 2 bytes @ 0x25
   886  000026                     	ds	2
   887  000028                     handleListHead@sum:
   888                           	opt callstack 0
   889                           
   890                           ; 2 bytes @ 0x27
   891  000028                     	ds	2
   892  00002A                     handleListHead@cur:
   893                           	opt callstack 0
   894                           
   895                           ; 2 bytes @ 0x29
   896  00002A                     	ds	2
   897  00002C                     handleListHead@pos:
   898                           	opt callstack 0
   899                           
   900                           ; 2 bytes @ 0x2B
   901  00002C                     	ds	2
   902  00002E                     ??_timer_interrupt:
   903                           
   904                           ; 1 bytes @ 0x2D
   905  00002E                     	ds	6
   906                           
   907 ;;
   908 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   909 ;;
   910 ;; *************** function _main *****************
   911 ;; Defined at:
   912 ;;		line 78 in file "main.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;		None
   915 ;; Auto vars:     Size  Location     Type
   916 ;;		None
   917 ;; Return value:  Size  Location     Type
   918 ;;                  1    wreg      void 
   919 ;; Registers used:
   920 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
   921 ;; Tracked objects:
   922 ;;		On entry : 0/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   930 ;;Total ram usage:        0 bytes
   931 ;; Hardware stack levels required when called:   14
   932 ;; This function calls:
   933 ;;		_FSM
   934 ;;		_LCDPrint
   935 ;;		_dispatch
   936 ;;		_system_initialize
   937 ;;		_system_setup
   938 ;; This function is called by:
   939 ;;		Startup code after reset
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           	psect	text0
   944  003982                     __ptext0:
   945                           	opt callstack 0
   946  003982                     _main:
   947                           	opt callstack 17
   948  003982                     
   949                           ;main.c: 80:     system_initialize();
   950  003982  EC12  F01E         	call	_system_initialize	;wreg free
   951                           
   952                           ;main.c: 82:     system_setup();
   953  003986  EC0B  F015         	call	_system_setup	;wreg free
   954  00398A                     
   955                           ;main.c: 85:     LCDPrint(0, 0, "LTD controller  ");
   956  00398A  0E00               	movlw	0
   957  00398C  0100               	movlb	0	; () banked
   958  00398E  6F6B               	movwf	LCDPrint@pos& (0+255),b
   959  003990  0E12               	movlw	low STR_5
   960  003992  6F6C               	movwf	LCDPrint@ptr& (0+255),b
   961  003994  0E10               	movlw	high STR_5
   962  003996  6F6D               	movwf	(LCDPrint@ptr+1)& (0+255),b
   963  003998  0E00               	movlw	0
   964  00399A  EC5E  F01C         	call	_LCDPrint
   965  00399E                     
   966                           ;main.c: 86:     LCDPrint(1, 0, "ID: 1710364     ");
   967  00399E  0E00               	movlw	0
   968  0039A0  0100               	movlb	0	; () banked
   969  0039A2  6F6B               	movwf	LCDPrint@pos& (0+255),b
   970  0039A4  0E01               	movlw	low STR_6
   971  0039A6  6F6C               	movwf	LCDPrint@ptr& (0+255),b
   972  0039A8  0E10               	movlw	high STR_6
   973  0039AA  6F6D               	movwf	(LCDPrint@ptr+1)& (0+255),b
   974  0039AC  0E01               	movlw	1
   975  0039AE  EC5E  F01C         	call	_LCDPrint
   976  0039B2                     l4281:
   977                           
   978                           ;main.c: 90:         dispatch();
   979  0039B2  EC91  F01E         	call	_dispatch	;wreg free
   980  0039B6                     
   981                           ;main.c: 91:         FSM();
   982  0039B6  ECC6  F013         	call	_FSM	;wreg free
   983  0039BA  EFD9  F01C         	goto	l4281
   984  0039BE  EF07  F000         	goto	start
   985  0039C2                     __end_of_main:
   986                           	opt callstack 0
   987                           
   988 ;; *************** function _system_setup *****************
   989 ;; Defined at:
   990 ;;		line 70 in file "main.c"
   991 ;; Parameters:    Size  Location     Type
   992 ;;		None
   993 ;; Auto vars:     Size  Location     Type
   994 ;;		None
   995 ;; Return value:  Size  Location     Type
   996 ;;                  1    wreg      void 
   997 ;; Registers used:
   998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   999 ;; Tracked objects:
  1000 ;;		On entry : 0/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1008 ;;Total ram usage:        0 bytes
  1009 ;; Hardware stack levels used:    1
  1010 ;; Hardware stack levels required when called:    9
  1011 ;; This function calls:
  1012 ;;		_register_timer
  1013 ;; This function is called by:
  1014 ;;		_main
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018                           	psect	text1
  1019  002A16                     __ptext1:
  1020                           	opt callstack 0
  1021  002A16                     _system_setup:
  1022                           	opt callstack 21
  1023  002A16                     
  1024                           ;main.c: 71:     task_id[0] = register_timer(100, 1000, handleButton, 0);
  1025  002A16  0E64               	movlw	100
  1026  002A18  0100               	movlb	0	; () banked
  1027  002A1A  6F86               	movwf	register_timer@period& (0+255),b
  1028  002A1C  0E00               	movlw	0
  1029  002A1E  6F87               	movwf	(register_timer@period+1)& (0+255),b
  1030  002A20  0E00               	movlw	0
  1031  002A22  6F88               	movwf	(register_timer@period+2)& (0+255),b
  1032  002A24  0E00               	movlw	0
  1033  002A26  6F89               	movwf	(register_timer@period+3)& (0+255),b
  1034  002A28  0EE8               	movlw	232
  1035  002A2A  6F8A               	movwf	register_timer@delay& (0+255),b
  1036  002A2C  0E03               	movlw	3
  1037  002A2E  6F8B               	movwf	(register_timer@delay+1)& (0+255),b
  1038  002A30  0E00               	movlw	0
  1039  002A32  6F8C               	movwf	(register_timer@delay+2)& (0+255),b
  1040  002A34  0E00               	movlw	0
  1041  002A36  6F8D               	movwf	(register_timer@delay+3)& (0+255),b
  1042  002A38  0E5C               	movlw	low _handleButton
  1043  002A3A  6F8E               	movwf	register_timer@callback& (0+255),b
  1044  002A3C  0E2D               	movlw	high _handleButton
  1045  002A3E  6F8F               	movwf	(register_timer@callback+1)& (0+255),b
  1046  002A40  0E00               	movlw	low (_handleButton shr (0+16))
  1047  002A42  6F90               	movwf	(register_timer@callback+2)& (0+255),b
  1048  002A44  0E00               	movlw	0
  1049  002A46  6F91               	movwf	register_timer@data_ptr& (0+255),b
  1050  002A48  0E00               	movlw	0
  1051  002A4A  6F92               	movwf	(register_timer@data_ptr+1)& (0+255),b
  1052  002A4C  EC5F  F01D         	call	_register_timer	;wreg free
  1053  002A50  0100               	movlb	0	; () banked
  1054  002A52  6FA5               	movwf	_task_id& (0+255),b
  1055                           
  1056                           ;main.c: 72:     task_id[1] = register_timer(5000, 1000, readTempAndHumid, 0);
  1057  002A54  0E88               	movlw	136
  1058  002A56  6F86               	movwf	register_timer@period& (0+255),b
  1059  002A58  0E13               	movlw	19
  1060  002A5A  6F87               	movwf	(register_timer@period+1)& (0+255),b
  1061  002A5C  0E00               	movlw	0
  1062  002A5E  6F88               	movwf	(register_timer@period+2)& (0+255),b
  1063  002A60  0E00               	movlw	0
  1064  002A62  6F89               	movwf	(register_timer@period+3)& (0+255),b
  1065  002A64  0EE8               	movlw	232
  1066  002A66  6F8A               	movwf	register_timer@delay& (0+255),b
  1067  002A68  0E03               	movlw	3
  1068  002A6A  6F8B               	movwf	(register_timer@delay+1)& (0+255),b
  1069  002A6C  0E00               	movlw	0
  1070  002A6E  6F8C               	movwf	(register_timer@delay+2)& (0+255),b
  1071  002A70  0E00               	movlw	0
  1072  002A72  6F8D               	movwf	(register_timer@delay+3)& (0+255),b
  1073  002A74  0EE0               	movlw	low _readTempAndHumid
  1074  002A76  6F8E               	movwf	register_timer@callback& (0+255),b
  1075  002A78  0E28               	movlw	high _readTempAndHumid
  1076  002A7A  6F8F               	movwf	(register_timer@callback+1)& (0+255),b
  1077  002A7C  0E00               	movlw	low (_readTempAndHumid shr (0+16))
  1078  002A7E  6F90               	movwf	(register_timer@callback+2)& (0+255),b
  1079  002A80  0E00               	movlw	0
  1080  002A82  6F91               	movwf	register_timer@data_ptr& (0+255),b
  1081  002A84  0E00               	movlw	0
  1082  002A86  6F92               	movwf	(register_timer@data_ptr+1)& (0+255),b
  1083  002A88  EC5F  F01D         	call	_register_timer	;wreg free
  1084  002A8C  0100               	movlb	0	; () banked
  1085  002A8E  6FA6               	movwf	(_task_id+1)& (0+255),b
  1086                           
  1087                           ;main.c: 73:     task_id[2] = register_timer(5000, 0, check_humid_to_turn_fan, 0);
  1088  002A90  0E88               	movlw	136
  1089  002A92  6F86               	movwf	register_timer@period& (0+255),b
  1090  002A94  0E13               	movlw	19
  1091  002A96  6F87               	movwf	(register_timer@period+1)& (0+255),b
  1092  002A98  0E00               	movlw	0
  1093  002A9A  6F88               	movwf	(register_timer@period+2)& (0+255),b
  1094  002A9C  0E00               	movlw	0
  1095  002A9E  6F89               	movwf	(register_timer@period+3)& (0+255),b
  1096  002AA0  0E00               	movlw	0
  1097  002AA2  6F8A               	movwf	register_timer@delay& (0+255),b
  1098  002AA4  0E00               	movlw	0
  1099  002AA6  6F8B               	movwf	(register_timer@delay+1)& (0+255),b
  1100  002AA8  0E00               	movlw	0
  1101  002AAA  6F8C               	movwf	(register_timer@delay+2)& (0+255),b
  1102  002AAC  0E00               	movlw	0
  1103  002AAE  6F8D               	movwf	(register_timer@delay+3)& (0+255),b
  1104  002AB0  0E40               	movlw	low _check_humid_to_turn_fan
  1105  002AB2  6F8E               	movwf	register_timer@callback& (0+255),b
  1106  002AB4  0E31               	movlw	high _check_humid_to_turn_fan
  1107  002AB6  6F8F               	movwf	(register_timer@callback+1)& (0+255),b
  1108  002AB8  0E00               	movlw	low (_check_humid_to_turn_fan shr (0+16))
  1109  002ABA  6F90               	movwf	(register_timer@callback+2)& (0+255),b
  1110  002ABC  0E00               	movlw	0
  1111  002ABE  6F91               	movwf	register_timer@data_ptr& (0+255),b
  1112  002AC0  0E00               	movlw	0
  1113  002AC2  6F92               	movwf	(register_timer@data_ptr+1)& (0+255),b
  1114  002AC4  EC5F  F01D         	call	_register_timer	;wreg free
  1115  002AC8  0100               	movlb	0	; () banked
  1116  002ACA  6FA7               	movwf	(_task_id+2)& (0+255),b
  1117  002ACC  0E10               	movlw	16
  1118  002ACE  6F86               	movwf	register_timer@period& (0+255),b
  1119  002AD0  0E27               	movlw	39
  1120  002AD2  6F87               	movwf	(register_timer@period+1)& (0+255),b
  1121  002AD4  0E00               	movlw	0
  1122  002AD6  6F88               	movwf	(register_timer@period+2)& (0+255),b
  1123  002AD8  0E00               	movlw	0
  1124  002ADA  6F89               	movwf	(register_timer@period+3)& (0+255),b
  1125  002ADC  0E10               	movlw	16
  1126  002ADE  6F8A               	movwf	register_timer@delay& (0+255),b
  1127  002AE0  0E27               	movlw	39
  1128  002AE2  6F8B               	movwf	(register_timer@delay+1)& (0+255),b
  1129  002AE4  0E00               	movlw	0
  1130  002AE6  6F8C               	movwf	(register_timer@delay+2)& (0+255),b
  1131  002AE8  0E00               	movlw	0
  1132  002AEA  6F8D               	movwf	(register_timer@delay+3)& (0+255),b
  1133  002AEC  0E2E               	movlw	low _changeState
  1134  002AEE  6F8E               	movwf	register_timer@callback& (0+255),b
  1135  002AF0  0E3B               	movlw	high _changeState
  1136  002AF2  6F8F               	movwf	(register_timer@callback+1)& (0+255),b
  1137  002AF4  0E00               	movlw	low (_changeState shr (0+16))
  1138  002AF6  6F90               	movwf	(register_timer@callback+2)& (0+255),b
  1139  002AF8  0E00               	movlw	0
  1140  002AFA  6F91               	movwf	register_timer@data_ptr& (0+255),b
  1141  002AFC  0E00               	movlw	0
  1142  002AFE  6F92               	movwf	(register_timer@data_ptr+1)& (0+255),b
  1143  002B00  EC5F  F01D         	call	_register_timer	;wreg free
  1144  002B04  0100               	movlb	0	; () banked
  1145  002B06  6FA8               	movwf	(_task_id+3)& (0+255),b
  1146                           
  1147                           ;main.c: 75:     task_id[4] = register_timer(10000, 3000, printTempAndHumid, 0);
  1148  002B08  0E10               	movlw	16
  1149  002B0A  6F86               	movwf	register_timer@period& (0+255),b
  1150  002B0C  0E27               	movlw	39
  1151  002B0E  6F87               	movwf	(register_timer@period+1)& (0+255),b
  1152  002B10  0E00               	movlw	0
  1153  002B12  6F88               	movwf	(register_timer@period+2)& (0+255),b
  1154  002B14  0E00               	movlw	0
  1155  002B16  6F89               	movwf	(register_timer@period+3)& (0+255),b
  1156  002B18  0EB8               	movlw	184
  1157  002B1A  6F8A               	movwf	register_timer@delay& (0+255),b
  1158  002B1C  0E0B               	movlw	11
  1159  002B1E  6F8B               	movwf	(register_timer@delay+1)& (0+255),b
  1160  002B20  0E00               	movlw	0
  1161  002B22  6F8C               	movwf	(register_timer@delay+2)& (0+255),b
  1162  002B24  0E00               	movlw	0
  1163  002B26  6F8D               	movwf	(register_timer@delay+3)& (0+255),b
  1164  002B28  0E8E               	movlw	low _printTempAndHumid
  1165  002B2A  6F8E               	movwf	register_timer@callback& (0+255),b
  1166  002B2C  0E21               	movlw	high _printTempAndHumid
  1167  002B2E  6F8F               	movwf	(register_timer@callback+1)& (0+255),b
  1168  002B30  0E00               	movlw	low (_printTempAndHumid shr (0+16))
  1169  002B32  6F90               	movwf	(register_timer@callback+2)& (0+255),b
  1170  002B34  0E00               	movlw	0
  1171  002B36  6F91               	movwf	register_timer@data_ptr& (0+255),b
  1172  002B38  0E00               	movlw	0
  1173  002B3A  6F92               	movwf	(register_timer@data_ptr+1)& (0+255),b
  1174  002B3C  EC5F  F01D         	call	_register_timer	;wreg free
  1175  002B40  0100               	movlb	0	; () banked
  1176  002B42  6FA9               	movwf	(_task_id+4)& (0+255),b
  1177  002B44                     
  1178                           ; BSR set to: 0
  1179  002B44  0012               	return		;funcret
  1180  002B46                     __end_of_system_setup:
  1181                           	opt callstack 0
  1182                           
  1183 ;; *************** function _register_timer *****************
  1184 ;; Defined at:
  1185 ;;		line 38 in file "clock.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;  period          4   38[BANK0 ] unsigned long 
  1188 ;;  delay           4   42[BANK0 ] unsigned long 
  1189 ;;  callback        3   46[BANK0 ] PTR FTN(PTR void ,)void 
  1190 ;;		 -> changeState(1), check_humid_to_turn_fan(1), readTempAndHumid(1), handleButton(1), 
  1191 ;;		 -> printTempAndHumid(1), 
  1192 ;;  data_ptr        2   49[BANK0 ] PTR void 
  1193 ;;		 -> NULL(0), 
  1194 ;; Auto vars:     Size  Location     Type
  1195 ;;		None
  1196 ;; Return value:  Size  Location     Type
  1197 ;;                  1    wreg      unsigned char 
  1198 ;; Registers used:
  1199 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1200 ;; Tracked objects:
  1201 ;;		On entry : 0/0
  1202 ;;		On exit  : 0/0
  1203 ;;		Unchanged: 0/0
  1204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1205 ;;      Params:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1208 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1209 ;;Total ram usage:       13 bytes
  1210 ;; Hardware stack levels used:    1
  1211 ;; Hardware stack levels required when called:    8
  1212 ;; This function calls:
  1213 ;;		_addTask
  1214 ;; This function is called by:
  1215 ;;		_system_setup
  1216 ;; This function uses a non-reentrant model
  1217 ;;
  1218                           
  1219                           	psect	text2
  1220  003ABE                     __ptext2:
  1221                           	opt callstack 0
  1222  003ABE                     _register_timer:
  1223                           	opt callstack 21
  1224  003ABE                     
  1225                           ;clock.c: 39:     return addTask(period, delay, callback, data_ptr);
  1226  003ABE  C086  F066         	movff	register_timer@period,addTask@period
  1227  003AC2  C087  F067         	movff	register_timer@period+1,addTask@period+1
  1228  003AC6  C088  F068         	movff	register_timer@period+2,addTask@period+2
  1229  003ACA  C089  F069         	movff	register_timer@period+3,addTask@period+3
  1230  003ACE  C08A  F06A         	movff	register_timer@delay,addTask@delay
  1231  003AD2  C08B  F06B         	movff	register_timer@delay+1,addTask@delay+1
  1232  003AD6  C08C  F06C         	movff	register_timer@delay+2,addTask@delay+2
  1233  003ADA  C08D  F06D         	movff	register_timer@delay+3,addTask@delay+3
  1234  003ADE  C08E  F06E         	movff	register_timer@callback,addTask@ptr
  1235  003AE2  C08F  F06F         	movff	register_timer@callback+1,addTask@ptr+1
  1236  003AE6  C090  F070         	movff	register_timer@callback+2,addTask@ptr+2
  1237  003AEA  C091  F071         	movff	register_timer@data_ptr,addTask@data
  1238  003AEE  C092  F072         	movff	register_timer@data_ptr+1,addTask@data+1
  1239  003AF2  ECF7  F00E         	call	_addTask	;wreg free
  1240  003AF6  0012               	return		;funcret
  1241  003AF8                     __end_of_register_timer:
  1242                           	opt callstack 0
  1243                           
  1244 ;; *************** function _addTask *****************
  1245 ;; Defined at:
  1246 ;;		line 24 in file "task.c"
  1247 ;; Parameters:    Size  Location     Type
  1248 ;;  period          4    6[BANK0 ] unsigned long 
  1249 ;;  delay           4   10[BANK0 ] unsigned long 
  1250 ;;  ptr             3   14[BANK0 ] PTR FTN(PTR void ,)void 
  1251 ;;		 -> changeState(1), check_humid_to_turn_fan(1), readTempAndHumid(1), handleButton(1), 
  1252 ;;		 -> printTempAndHumid(1), 
  1253 ;;  data            2   17[BANK0 ] PTR void 
  1254 ;;		 -> NULL(0), 
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;  cur             2   35[BANK0 ] int 
  1257 ;;  prev            2   31[BANK0 ] int 
  1258 ;;  sum             2   33[BANK0 ] int 
  1259 ;;  idx             1   37[BANK0 ] unsigned char 
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      unsigned char 
  1262 ;; Registers used:
  1263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1269 ;;      Params:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1270 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1271 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1272 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1273 ;;Total ram usage:       32 bytes
  1274 ;; Hardware stack levels used:    1
  1275 ;; Hardware stack levels required when called:    7
  1276 ;; This function calls:
  1277 ;;		___wmul
  1278 ;;		_isFullList
  1279 ;; This function is called by:
  1280 ;;		_register_timer
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           	psect	text3
  1285  001DEE                     __ptext3:
  1286                           	opt callstack 0
  1287  001DEE                     _addTask:
  1288                           	opt callstack 21
  1289  001DEE                     
  1290                           ;task.c: 25:     if(isFullList())
  1291  001DEE  EC50  F01E         	call	_isFullList	;wreg free
  1292  001DF2  0900               	iorlw	0
  1293  001DF4  B4D8               	btfsc	status,2,c
  1294  001DF6  EFFF  F00E         	goto	u3211
  1295  001DFA  EF01  F00F         	goto	u3210
  1296  001DFE                     u3211:
  1297  001DFE  EF04  F00F         	goto	l3851
  1298  001E02                     u3210:
  1299  001E02                     l3847:
  1300                           
  1301                           ;task.c: 26:         return 109;
  1302  001E02  0E6D               	movlw	109
  1303  001E04  EFC6  F010         	goto	l486
  1304  001E08                     l3851:
  1305                           
  1306                           ;task.c: 27:     char idx;;task.c: 28:     for(idx = 0; idx < 20; idx++) {
  1307  001E08  0E00               	movlw	0
  1308  001E0A  0100               	movlb	0	; () banked
  1309  001E0C  6F85               	movwf	addTask@idx& (0+255),b
  1310  001E0E                     l3857:
  1311                           
  1312                           ; BSR set to: 0
  1313                           ;task.c: 29:         if(task_list[idx].func_ptr == ((void*)0))
  1314  001E0E  5185               	movf	addTask@idx& (0+255),w,b
  1315  001E10  0D0F               	mullw	15
  1316  001E12  0E6C               	movlw	low (_task_list+8)
  1317  001E14  24F3               	addwf	243,w,c
  1318  001E16  6ED9               	movwf	fsr2l,c
  1319  001E18  0E01               	movlw	high (_task_list+8)
  1320  001E1A  20F4               	addwfc	prodh,w,c
  1321  001E1C  6EDA               	movwf	fsr2h,c
  1322  001E1E  50DE               	movf	postinc2,w,c
  1323  001E20  10DE               	iorwf	postinc2,w,c
  1324  001E22  10DE               	iorwf	postinc2,w,c
  1325  001E24  A4D8               	btfss	status,2,c
  1326  001E26  EF17  F00F         	goto	u3221
  1327  001E2A  EF19  F00F         	goto	u3220
  1328  001E2E                     u3221:
  1329  001E2E  EF1B  F00F         	goto	l3861
  1330  001E32                     u3220:
  1331  001E32  EF24  F00F         	goto	l3865
  1332  001E36                     l3861:
  1333                           
  1334                           ; BSR set to: 0
  1335                           ;task.c: 31:     }
  1336  001E36  2B85               	incf	addTask@idx& (0+255),f,b
  1337  001E38                     
  1338                           ; BSR set to: 0
  1339  001E38  0E13               	movlw	19
  1340  001E3A  6585               	cpfsgt	addTask@idx& (0+255),b
  1341  001E3C  EF22  F00F         	goto	u3231
  1342  001E40  EF24  F00F         	goto	u3230
  1343  001E44                     u3231:
  1344  001E44  EF07  F00F         	goto	l3857
  1345  001E48                     u3230:
  1346  001E48                     l3865:
  1347                           
  1348                           ; BSR set to: 0
  1349                           ;task.c: 32:     if(idx == 20)
  1350  001E48  0E14               	movlw	20
  1351  001E4A  1985               	xorwf	addTask@idx& (0+255),w,b
  1352  001E4C  A4D8               	btfss	status,2,c
  1353  001E4E  EF2B  F00F         	goto	u3241
  1354  001E52  EF2D  F00F         	goto	u3240
  1355  001E56                     u3241:
  1356  001E56  EF2F  F00F         	goto	l3871
  1357  001E5A                     u3240:
  1358  001E5A  EF01  F00F         	goto	l3847
  1359  001E5E                     l3871:
  1360                           
  1361                           ; BSR set to: 0
  1362                           ;task.c: 34:     task_list[idx].delay_t = delay;
  1363  001E5E  5185               	movf	addTask@idx& (0+255),w,b
  1364  001E60  0D0F               	mullw	15
  1365  001E62  0E64               	movlw	low _task_list
  1366  001E64  24F3               	addwf	243,w,c
  1367  001E66  6ED9               	movwf	fsr2l,c
  1368  001E68  0E01               	movlw	high _task_list
  1369  001E6A  20F4               	addwfc	prodh,w,c
  1370  001E6C  6EDA               	movwf	fsr2h,c
  1371  001E6E  C06A  FFDE         	movff	addTask@delay,postinc2
  1372  001E72  C06B  FFDE         	movff	addTask@delay+1,postinc2
  1373  001E76  C06C  FFDE         	movff	addTask@delay+2,postinc2
  1374  001E7A  C06D  FFDE         	movff	addTask@delay+3,postinc2
  1375                           
  1376                           ;task.c: 35:     task_list[idx].period_t = period;
  1377  001E7E  5185               	movf	addTask@idx& (0+255),w,b
  1378  001E80  0D0F               	mullw	15
  1379  001E82  0E68               	movlw	low (_task_list+4)
  1380  001E84  24F3               	addwf	243,w,c
  1381  001E86  6ED9               	movwf	fsr2l,c
  1382  001E88  0E01               	movlw	high (_task_list+4)
  1383  001E8A  20F4               	addwfc	prodh,w,c
  1384  001E8C  6EDA               	movwf	fsr2h,c
  1385  001E8E  C066  FFDE         	movff	addTask@period,postinc2
  1386  001E92  C067  FFDE         	movff	addTask@period+1,postinc2
  1387  001E96  C068  FFDE         	movff	addTask@period+2,postinc2
  1388  001E9A  C069  FFDE         	movff	addTask@period+3,postinc2
  1389                           
  1390                           ;task.c: 36:     task_list[idx].func_ptr = ptr;
  1391  001E9E  5185               	movf	addTask@idx& (0+255),w,b
  1392  001EA0  0D0F               	mullw	15
  1393  001EA2  0E6C               	movlw	low (_task_list+8)
  1394  001EA4  24F3               	addwf	243,w,c
  1395  001EA6  6ED9               	movwf	fsr2l,c
  1396  001EA8  0E01               	movlw	high (_task_list+8)
  1397  001EAA  20F4               	addwfc	prodh,w,c
  1398  001EAC  6EDA               	movwf	fsr2h,c
  1399  001EAE  C06E  FFDE         	movff	addTask@ptr,postinc2
  1400  001EB2  C06F  FFDE         	movff	addTask@ptr+1,postinc2
  1401  001EB6  C070  FFDE         	movff	addTask@ptr+2,postinc2
  1402                           
  1403                           ;task.c: 37:     task_list[idx].data_p = data;
  1404  001EBA  5185               	movf	addTask@idx& (0+255),w,b
  1405  001EBC  0D0F               	mullw	15
  1406  001EBE  0E71               	movlw	low (_task_list+13)
  1407  001EC0  24F3               	addwf	243,w,c
  1408  001EC2  6ED9               	movwf	fsr2l,c
  1409  001EC4  0E01               	movlw	high (_task_list+13)
  1410  001EC6  20F4               	addwfc	prodh,w,c
  1411  001EC8  6EDA               	movwf	fsr2h,c
  1412  001ECA  C071  FFDE         	movff	addTask@data,postinc2
  1413  001ECE  C072  FFDD         	movff	addTask@data+1,postdec2
  1414  001ED2                     
  1415                           ; BSR set to: 0
  1416                           ;task.c: 38:     num_task++;
  1417  001ED2  2BC9               	incf	_num_task& (0+255),f,b
  1418  001ED4                     
  1419                           ; BSR set to: 0
  1420                           ;task.c: 39:     int sum = task_list[head].delay_t;
  1421  001ED4  51C8               	movf	_head& (0+255),w,b
  1422  001ED6  0D0F               	mullw	15
  1423  001ED8  0E64               	movlw	low _task_list
  1424  001EDA  24F3               	addwf	243,w,c
  1425  001EDC  6ED9               	movwf	fsr2l,c
  1426  001EDE  0E01               	movlw	high _task_list
  1427  001EE0  20F4               	addwfc	prodh,w,c
  1428  001EE2  6EDA               	movwf	fsr2h,c
  1429  001EE4  CFDE F081          	movff	postinc2,addTask@sum
  1430  001EE8  CFDD F082          	movff	postdec2,addTask@sum+1
  1431  001EEC                     
  1432                           ; BSR set to: 0
  1433                           ;task.c: 40:     if(head == 105 || (head != 105 && sum > delay)) {
  1434  001EEC  0E69               	movlw	105
  1435  001EEE  19C8               	xorwf	_head& (0+255),w,b
  1436  001EF0  B4D8               	btfsc	status,2,c
  1437  001EF2  EF7D  F00F         	goto	u3251
  1438  001EF6  EF7F  F00F         	goto	u3250
  1439  001EFA                     u3251:
  1440  001EFA  EFA0  F00F         	goto	l3883
  1441  001EFE                     u3250:
  1442  001EFE                     
  1443                           ; BSR set to: 0
  1444  001EFE  0E69               	movlw	105
  1445  001F00  19C8               	xorwf	_head& (0+255),w,b
  1446  001F02  B4D8               	btfsc	status,2,c
  1447  001F04  EF86  F00F         	goto	u3261
  1448  001F08  EF88  F00F         	goto	u3260
  1449  001F0C                     u3261:
  1450  001F0C  EFB3  F00F         	goto	l3887
  1451  001F10                     u3260:
  1452  001F10                     
  1453                           ; BSR set to: 0
  1454  001F10  C081  F073         	movff	addTask@sum,??_addTask
  1455  001F14  C082  F074         	movff	addTask@sum+1,??_addTask+1
  1456  001F18  0E00               	movlw	0
  1457  001F1A  BF74               	btfsc	(??_addTask+1)& (0+255),7,b
  1458  001F1C  0EFF               	movlw	255
  1459  001F1E  6F75               	movwf	(??_addTask+2)& (0+255),b
  1460  001F20  6F76               	movwf	(??_addTask+3)& (0+255),b
  1461  001F22  5173               	movf	??_addTask& (0+255),w,b
  1462  001F24  5D6A               	subwf	addTask@delay& (0+255),w,b
  1463  001F26  5174               	movf	(??_addTask+1)& (0+255),w,b
  1464  001F28  596B               	subwfb	(addTask@delay+1)& (0+255),w,b
  1465  001F2A  5175               	movf	(??_addTask+2)& (0+255),w,b
  1466  001F2C  596C               	subwfb	(addTask@delay+2)& (0+255),w,b
  1467  001F2E  5176               	movf	(??_addTask+3)& (0+255),w,b
  1468  001F30  596D               	subwfb	(addTask@delay+3)& (0+255),w,b
  1469  001F32  B0D8               	btfsc	status,0,c
  1470  001F34  EF9E  F00F         	goto	u3271
  1471  001F38  EFA0  F00F         	goto	u3270
  1472  001F3C                     u3271:
  1473  001F3C  EFB3  F00F         	goto	l3887
  1474  001F40                     u3270:
  1475  001F40                     l3883:
  1476                           
  1477                           ; BSR set to: 0
  1478                           ;task.c: 41:         task_list[idx].next = head;
  1479  001F40  51C8               	movf	_head& (0+255),w,b
  1480  001F42  6F73               	movwf	??_addTask& (0+255),b
  1481  001F44  6B74               	clrf	(??_addTask+1)& (0+255),b
  1482  001F46  5185               	movf	addTask@idx& (0+255),w,b
  1483  001F48  0D0F               	mullw	15
  1484  001F4A  0E6F               	movlw	low (_task_list+11)
  1485  001F4C  24F3               	addwf	243,w,c
  1486  001F4E  6ED9               	movwf	fsr2l,c
  1487  001F50  0E01               	movlw	high (_task_list+11)
  1488  001F52  20F4               	addwfc	prodh,w,c
  1489  001F54  6EDA               	movwf	fsr2h,c
  1490  001F56  C073  FFDE         	movff	??_addTask,postinc2
  1491  001F5A  C074  FFDD         	movff	??_addTask+1,postdec2
  1492  001F5E                     
  1493                           ; BSR set to: 0
  1494                           ;task.c: 42:         head = idx;
  1495  001F5E  C085  F0C8         	movff	addTask@idx,_head
  1496                           
  1497                           ;task.c: 43:     }
  1498  001F62  EF82  F010         	goto	l3905
  1499  001F66                     l3887:
  1500                           
  1501                           ; BSR set to: 0
  1502                           ;task.c: 46:         int cur = task_list[head].next;
  1503  001F66  51C8               	movf	_head& (0+255),w,b
  1504  001F68  0D0F               	mullw	15
  1505  001F6A  0E6F               	movlw	low (_task_list+11)
  1506  001F6C  24F3               	addwf	243,w,c
  1507  001F6E  6ED9               	movwf	fsr2l,c
  1508  001F70  0E01               	movlw	high (_task_list+11)
  1509  001F72  20F4               	addwfc	prodh,w,c
  1510  001F74  6EDA               	movwf	fsr2h,c
  1511  001F76  CFDE F083          	movff	postinc2,addTask@cur
  1512  001F7A  CFDD F084          	movff	postdec2,addTask@cur+1
  1513  001F7E                     
  1514                           ; BSR set to: 0
  1515                           ;task.c: 47:         int prev = head;
  1516  001F7E  C0C8  F07F         	movff	_head,addTask@prev
  1517  001F82  6B80               	clrf	(addTask@prev+1)& (0+255),b
  1518                           
  1519                           ;task.c: 48:         while(cur != 105 && sum + task_list[cur].delay_t <= delay) {
  1520  001F84  EFF2  F00F         	goto	l3895
  1521  001F88                     l3891:
  1522                           
  1523                           ; BSR set to: 0
  1524                           ;task.c: 50:             sum+= task_list[cur].delay_t;
  1525  001F88  C083  F060         	movff	addTask@cur,___wmul@multiplier
  1526  001F8C  C084  F061         	movff	addTask@cur+1,___wmul@multiplier+1
  1527  001F90  0E00               	movlw	0
  1528  001F92  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1529  001F94  0E0F               	movlw	15
  1530  001F96  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1531  001F98  ECD9  F01D         	call	___wmul	;wreg free
  1532  001F9C  0E64               	movlw	low _task_list
  1533  001F9E  0100               	movlb	0	; () banked
  1534  001FA0  2560               	addwf	?___wmul& (0+255),w,b
  1535  001FA2  6ED9               	movwf	fsr2l,c
  1536  001FA4  0E01               	movlw	high _task_list
  1537  001FA6  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1538  001FA8  6EDA               	movwf	fsr2h,c
  1539  001FAA  50DE               	movf	postinc2,w,c
  1540  001FAC  2781               	addwf	addTask@sum& (0+255),f,b
  1541  001FAE  50DD               	movf	postdec2,w,c
  1542  001FB0  2382               	addwfc	(addTask@sum+1)& (0+255),f,b
  1543  001FB2                     
  1544                           ; BSR set to: 0
  1545                           ;task.c: 51:             prev = cur;
  1546  001FB2  C083  F07F         	movff	addTask@cur,addTask@prev
  1547  001FB6  C084  F080         	movff	addTask@cur+1,addTask@prev+1
  1548                           
  1549                           ;task.c: 52:             cur = task_list[cur].next;
  1550  001FBA  C083  F060         	movff	addTask@cur,___wmul@multiplier
  1551  001FBE  C084  F061         	movff	addTask@cur+1,___wmul@multiplier+1
  1552  001FC2  0E00               	movlw	0
  1553  001FC4  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1554  001FC6  0E0F               	movlw	15
  1555  001FC8  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1556  001FCA  ECD9  F01D         	call	___wmul	;wreg free
  1557  001FCE  0E6F               	movlw	low (_task_list+11)
  1558  001FD0  0100               	movlb	0	; () banked
  1559  001FD2  2560               	addwf	?___wmul& (0+255),w,b
  1560  001FD4  6ED9               	movwf	fsr2l,c
  1561  001FD6  0E01               	movlw	high (_task_list+11)
  1562  001FD8  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1563  001FDA  6EDA               	movwf	fsr2h,c
  1564  001FDC  CFDE F083          	movff	postinc2,addTask@cur
  1565  001FE0  CFDD F084          	movff	postdec2,addTask@cur+1
  1566  001FE4                     l3895:
  1567                           
  1568                           ; BSR set to: 0
  1569                           ;task.c: 48:         while(cur != 105 && sum + task_list[cur].delay_t <= delay) {
  1570  001FE4  0E69               	movlw	105
  1571  001FE6  1983               	xorwf	addTask@cur& (0+255),w,b
  1572  001FE8  1184               	iorwf	(addTask@cur+1)& (0+255),w,b
  1573  001FEA  B4D8               	btfsc	status,2,c
  1574  001FEC  EFFA  F00F         	goto	u3281
  1575  001FF0  EFFC  F00F         	goto	u3280
  1576  001FF4                     u3281:
  1577  001FF4  EF39  F010         	goto	l3899
  1578  001FF8                     u3280:
  1579  001FF8                     
  1580                           ; BSR set to: 0
  1581  001FF8  C083  F060         	movff	addTask@cur,___wmul@multiplier
  1582  001FFC  C084  F061         	movff	addTask@cur+1,___wmul@multiplier+1
  1583  002000  0E00               	movlw	0
  1584  002002  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1585  002004  0E0F               	movlw	15
  1586  002006  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1587  002008  ECD9  F01D         	call	___wmul	;wreg free
  1588  00200C  0E64               	movlw	low _task_list
  1589  00200E  0100               	movlb	0	; () banked
  1590  002010  2560               	addwf	?___wmul& (0+255),w,b
  1591  002012  6ED9               	movwf	fsr2l,c
  1592  002014  0E01               	movlw	high _task_list
  1593  002016  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1594  002018  6EDA               	movwf	fsr2h,c
  1595  00201A  CFDE F073          	movff	postinc2,??_addTask
  1596  00201E  CFDE F074          	movff	postinc2,??_addTask+1
  1597  002022  CFDE F075          	movff	postinc2,??_addTask+2
  1598  002026  CFDE F076          	movff	postinc2,??_addTask+3
  1599  00202A  C081  F077         	movff	addTask@sum,??_addTask+4
  1600  00202E  C082  F078         	movff	addTask@sum+1,??_addTask+5
  1601  002032  0E00               	movlw	0
  1602  002034  BF78               	btfsc	(??_addTask+5)& (0+255),7,b
  1603  002036  0EFF               	movlw	255
  1604  002038  6F79               	movwf	(??_addTask+6)& (0+255),b
  1605  00203A  6F7A               	movwf	(??_addTask+7)& (0+255),b
  1606  00203C  5173               	movf	??_addTask& (0+255),w,b
  1607  00203E  2577               	addwf	(??_addTask+4)& (0+255),w,b
  1608  002040  6F7B               	movwf	(??_addTask+8)& (0+255),b
  1609  002042  5174               	movf	(??_addTask+1)& (0+255),w,b
  1610  002044  2178               	addwfc	(??_addTask+5)& (0+255),w,b
  1611  002046  6F7C               	movwf	(??_addTask+9)& (0+255),b
  1612  002048  5175               	movf	(??_addTask+2)& (0+255),w,b
  1613  00204A  2179               	addwfc	(??_addTask+6)& (0+255),w,b
  1614  00204C  6F7D               	movwf	(??_addTask+10)& (0+255),b
  1615  00204E  5176               	movf	(??_addTask+3)& (0+255),w,b
  1616  002050  217A               	addwfc	(??_addTask+7)& (0+255),w,b
  1617  002052  6F7E               	movwf	(??_addTask+11)& (0+255),b
  1618  002054  517B               	movf	(??_addTask+8)& (0+255),w,b
  1619  002056  5D6A               	subwf	addTask@delay& (0+255),w,b
  1620  002058  517C               	movf	(??_addTask+9)& (0+255),w,b
  1621  00205A  596B               	subwfb	(addTask@delay+1)& (0+255),w,b
  1622  00205C  517D               	movf	(??_addTask+10)& (0+255),w,b
  1623  00205E  596C               	subwfb	(addTask@delay+2)& (0+255),w,b
  1624  002060  517E               	movf	(??_addTask+11)& (0+255),w,b
  1625  002062  596D               	subwfb	(addTask@delay+3)& (0+255),w,b
  1626  002064  B0D8               	btfsc	status,0,c
  1627  002066  EF37  F010         	goto	u3291
  1628  00206A  EF39  F010         	goto	u3290
  1629  00206E                     u3291:
  1630  00206E  EFC4  F00F         	goto	l3891
  1631  002072                     u3290:
  1632  002072                     l3899:
  1633                           
  1634                           ; BSR set to: 0
  1635                           ;task.c: 54:         task_list[prev].next = idx;
  1636  002072  5185               	movf	addTask@idx& (0+255),w,b
  1637  002074  6F73               	movwf	??_addTask& (0+255),b
  1638  002076  6B74               	clrf	(??_addTask+1)& (0+255),b
  1639  002078  C07F  F060         	movff	addTask@prev,___wmul@multiplier
  1640  00207C  C080  F061         	movff	addTask@prev+1,___wmul@multiplier+1
  1641  002080  0E00               	movlw	0
  1642  002082  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1643  002084  0E0F               	movlw	15
  1644  002086  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1645  002088  ECD9  F01D         	call	___wmul	;wreg free
  1646  00208C  0E6F               	movlw	low (_task_list+11)
  1647  00208E  0100               	movlb	0	; () banked
  1648  002090  2560               	addwf	?___wmul& (0+255),w,b
  1649  002092  6ED9               	movwf	fsr2l,c
  1650  002094  0E01               	movlw	high (_task_list+11)
  1651  002096  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1652  002098  6EDA               	movwf	fsr2h,c
  1653  00209A  C073  FFDE         	movff	??_addTask,postinc2
  1654  00209E  C074  FFDD         	movff	??_addTask+1,postdec2
  1655  0020A2                     
  1656                           ; BSR set to: 0
  1657                           ;task.c: 55:         task_list[idx].next = cur;
  1658  0020A2  5185               	movf	addTask@idx& (0+255),w,b
  1659  0020A4  0D0F               	mullw	15
  1660  0020A6  0E6F               	movlw	low (_task_list+11)
  1661  0020A8  24F3               	addwf	243,w,c
  1662  0020AA  6ED9               	movwf	fsr2l,c
  1663  0020AC  0E01               	movlw	high (_task_list+11)
  1664  0020AE  20F4               	addwfc	prodh,w,c
  1665  0020B0  6EDA               	movwf	fsr2h,c
  1666  0020B2  C083  FFDE         	movff	addTask@cur,postinc2
  1667  0020B6  C084  FFDD         	movff	addTask@cur+1,postdec2
  1668  0020BA                     
  1669                           ; BSR set to: 0
  1670                           ;task.c: 56:         task_list[idx].delay_t = delay - sum;
  1671  0020BA  C081  F073         	movff	addTask@sum,??_addTask
  1672  0020BE  C082  F074         	movff	addTask@sum+1,??_addTask+1
  1673  0020C2  0E00               	movlw	0
  1674  0020C4  BF74               	btfsc	(??_addTask+1)& (0+255),7,b
  1675  0020C6  0EFF               	movlw	255
  1676  0020C8  6F75               	movwf	(??_addTask+2)& (0+255),b
  1677  0020CA  6F76               	movwf	(??_addTask+3)& (0+255),b
  1678  0020CC  5173               	movf	??_addTask& (0+255),w,b
  1679  0020CE  5D6A               	subwf	addTask@delay& (0+255),w,b
  1680  0020D0  6F77               	movwf	(??_addTask+4)& (0+255),b
  1681  0020D2  5174               	movf	(??_addTask+1)& (0+255),w,b
  1682  0020D4  596B               	subwfb	(addTask@delay+1)& (0+255),w,b
  1683  0020D6  6F78               	movwf	(??_addTask+5)& (0+255),b
  1684  0020D8  5175               	movf	(??_addTask+2)& (0+255),w,b
  1685  0020DA  596C               	subwfb	(addTask@delay+2)& (0+255),w,b
  1686  0020DC  6F79               	movwf	(??_addTask+6)& (0+255),b
  1687  0020DE  5176               	movf	(??_addTask+3)& (0+255),w,b
  1688  0020E0  596D               	subwfb	(addTask@delay+3)& (0+255),w,b
  1689  0020E2  6F7A               	movwf	(??_addTask+7)& (0+255),b
  1690  0020E4  5185               	movf	addTask@idx& (0+255),w,b
  1691  0020E6  0D0F               	mullw	15
  1692  0020E8  0E64               	movlw	low _task_list
  1693  0020EA  24F3               	addwf	243,w,c
  1694  0020EC  6ED9               	movwf	fsr2l,c
  1695  0020EE  0E01               	movlw	high _task_list
  1696  0020F0  20F4               	addwfc	prodh,w,c
  1697  0020F2  6EDA               	movwf	fsr2h,c
  1698  0020F4  C077  FFDE         	movff	??_addTask+4,postinc2
  1699  0020F8  C078  FFDE         	movff	??_addTask+5,postinc2
  1700  0020FC  C079  FFDE         	movff	??_addTask+6,postinc2
  1701  002100  C07A  FFDE         	movff	??_addTask+7,postinc2
  1702  002104                     l3905:
  1703                           
  1704                           ; BSR set to: 0
  1705                           ;task.c: 58:     if(task_list[idx].next != 105)
  1706  002104  5185               	movf	addTask@idx& (0+255),w,b
  1707  002106  0D0F               	mullw	15
  1708  002108  0E6F               	movlw	low (_task_list+11)
  1709  00210A  24F3               	addwf	243,w,c
  1710  00210C  6ED9               	movwf	fsr2l,c
  1711  00210E  0E01               	movlw	high (_task_list+11)
  1712  002110  20F4               	addwfc	prodh,w,c
  1713  002112  6EDA               	movwf	fsr2h,c
  1714  002114  0E69               	movlw	105
  1715  002116  18DE               	xorwf	postinc2,w,c
  1716  002118  10DE               	iorwf	postinc2,w,c
  1717  00211A  B4D8               	btfsc	status,2,c
  1718  00211C  EF92  F010         	goto	u3301
  1719  002120  EF94  F010         	goto	u3300
  1720  002124                     u3301:
  1721  002124  EFC5  F010         	goto	l3909
  1722  002128                     u3300:
  1723  002128                     
  1724                           ; BSR set to: 0
  1725                           ;task.c: 59:         task_list[task_list[idx].next].delay_t-= task_list[idx].delay_t;
  1726  002128  5185               	movf	addTask@idx& (0+255),w,b
  1727  00212A  0D0F               	mullw	15
  1728  00212C  0E64               	movlw	low _task_list
  1729  00212E  24F3               	addwf	243,w,c
  1730  002130  6ED9               	movwf	fsr2l,c
  1731  002132  0E01               	movlw	high _task_list
  1732  002134  20F4               	addwfc	prodh,w,c
  1733  002136  6EDA               	movwf	fsr2h,c
  1734  002138  CFDE F073          	movff	postinc2,??_addTask
  1735  00213C  CFDE F074          	movff	postinc2,??_addTask+1
  1736  002140  CFDE F075          	movff	postinc2,??_addTask+2
  1737  002144  CFDE F076          	movff	postinc2,??_addTask+3
  1738  002148  5185               	movf	addTask@idx& (0+255),w,b
  1739  00214A  0D0F               	mullw	15
  1740  00214C  0E6F               	movlw	low (_task_list+11)
  1741  00214E  24F3               	addwf	243,w,c
  1742  002150  6ED9               	movwf	fsr2l,c
  1743  002152  0E01               	movlw	high (_task_list+11)
  1744  002154  20F4               	addwfc	prodh,w,c
  1745  002156  6EDA               	movwf	fsr2h,c
  1746  002158  CFDE F060          	movff	postinc2,___wmul@multiplier
  1747  00215C  CFDD F061          	movff	postdec2,___wmul@multiplier+1
  1748  002160  0E00               	movlw	0
  1749  002162  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1750  002164  0E0F               	movlw	15
  1751  002166  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1752  002168  ECD9  F01D         	call	___wmul	;wreg free
  1753  00216C  0E64               	movlw	low _task_list
  1754  00216E  0100               	movlb	0	; () banked
  1755  002170  2560               	addwf	?___wmul& (0+255),w,b
  1756  002172  6ED9               	movwf	fsr2l,c
  1757  002174  0E01               	movlw	high _task_list
  1758  002176  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1759  002178  6EDA               	movwf	fsr2h,c
  1760  00217A  5173               	movf	??_addTask& (0+255),w,b
  1761  00217C  5EDE               	subwf	postinc2,f,c
  1762  00217E  5174               	movf	(??_addTask+1)& (0+255),w,b
  1763  002180  5ADE               	subwfb	postinc2,f,c
  1764  002182  5175               	movf	(??_addTask+2)& (0+255),w,b
  1765  002184  5ADE               	subwfb	postinc2,f,c
  1766  002186  5176               	movf	(??_addTask+3)& (0+255),w,b
  1767  002188  5ADE               	subwfb	postinc2,f,c
  1768  00218A                     l3909:
  1769                           
  1770                           ; BSR set to: 0
  1771                           ;task.c: 60:     return idx;
  1772  00218A  5185               	movf	addTask@idx& (0+255),w,b
  1773  00218C                     l486:
  1774  00218C  0012               	return		;funcret
  1775  00218E                     __end_of_addTask:
  1776                           	opt callstack 0
  1777                           
  1778 ;; *************** function _isFullList *****************
  1779 ;; Defined at:
  1780 ;;		line 7 in file "task.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;		None
  1783 ;; Auto vars:     Size  Location     Type
  1784 ;;		None
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  1    wreg      unsigned char 
  1787 ;; Registers used:
  1788 ;;		wreg, status,2, status,0
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1798 ;;Total ram usage:        0 bytes
  1799 ;; Hardware stack levels used:    1
  1800 ;; Hardware stack levels required when called:    6
  1801 ;; This function calls:
  1802 ;;		Nothing
  1803 ;; This function is called by:
  1804 ;;		_addTask
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808                           	psect	text4
  1809  003CA0                     __ptext4:
  1810                           	opt callstack 0
  1811  003CA0                     _isFullList:
  1812                           	opt callstack 21
  1813  003CA0                     
  1814                           ;task.c: 8:     return num_task == 20 ? 1 : 0;
  1815  003CA0  0E14               	movlw	20
  1816  003CA2  0100               	movlb	0	; () banked
  1817  003CA4  19C9               	xorwf	_num_task& (0+255),w,b
  1818  003CA6  B4D8               	btfsc	status,2,c
  1819  003CA8  EF58  F01E         	goto	u2611
  1820  003CAC  EF5B  F01E         	goto	u2610
  1821  003CB0                     u2611:
  1822  003CB0  0E01               	movlw	1
  1823  003CB2  EF5C  F01E         	goto	u2620
  1824  003CB6                     u2610:
  1825  003CB6  0E00               	movlw	0
  1826  003CB8                     u2620:
  1827  003CB8                     
  1828                           ; BSR set to: 0
  1829  003CB8  0012               	return		;funcret
  1830  003CBA                     __end_of_isFullList:
  1831                           	opt callstack 0
  1832                           
  1833 ;; *************** function _system_initialize *****************
  1834 ;; Defined at:
  1835 ;;		line 41 in file "mcc.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;		None
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;		None
  1840 ;; Return value:  Size  Location     Type
  1841 ;;                  1    wreg      void 
  1842 ;; Registers used:
  1843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1844 ;; Tracked objects:
  1845 ;;		On entry : 0/0
  1846 ;;		On exit  : 0/0
  1847 ;;		Unchanged: 0/0
  1848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1853 ;;Total ram usage:        0 bytes
  1854 ;; Hardware stack levels used:    1
  1855 ;; Hardware stack levels required when called:   10
  1856 ;; This function calls:
  1857 ;;		_LCDInit
  1858 ;;		_LTD_initialize
  1859 ;;		_interrupt_initialize
  1860 ;;		_osc_initialize
  1861 ;;		_pin_initialize
  1862 ;;		_start_timer
  1863 ;; This function is called by:
  1864 ;;		_main
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           	psect	text5
  1869  003C24                     __ptext5:
  1870                           	opt callstack 0
  1871  003C24                     _system_initialize:
  1872                           	opt callstack 20
  1873  003C24                     
  1874                           ;mcc.c: 42:     osc_initialize();
  1875  003C24  EC8B  F01E         	call	_osc_initialize	;wreg free
  1876                           
  1877                           ;mcc.c: 43:     pin_initialize();
  1878  003C28  EC00  F01E         	call	_pin_initialize	;wreg free
  1879  003C2C                     
  1880                           ;mcc.c: 44:     interrupt_initialize();
  1881  003C2C  EC8E  F01E         	call	_interrupt_initialize	;wreg free
  1882  003C30                     
  1883                           ;mcc.c: 45:     LTD_initialize();
  1884  003C30  EC86  F01E         	call	_LTD_initialize	;wreg free
  1885  003C34                     
  1886                           ;mcc.c: 46:     LCDInit();
  1887  003C34  EC53  F01B         	call	_LCDInit	;wreg free
  1888  003C38                     
  1889                           ;mcc.c: 47:     start_timer(0);
  1890  003C38  0E00               	movlw	0
  1891  003C3A  EC49  F01A         	call	_start_timer
  1892  003C3E                     
  1893                           ;mcc.c: 48:     start_timer(1);
  1894  003C3E  0E01               	movlw	1
  1895  003C40  EC49  F01A         	call	_start_timer
  1896  003C44  0012               	return		;funcret
  1897  003C46                     __end_of_system_initialize:
  1898                           	opt callstack 0
  1899                           
  1900 ;; *************** function _start_timer *****************
  1901 ;; Defined at:
  1902 ;;		line 5 in file "clock.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;  timer_vaddr     1    wreg     unsigned char 
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;  timer_vaddr     1   12[BANK0 ] unsigned char 
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  2  126[None  ] int 
  1909 ;; Registers used:
  1910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1917 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1918 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1919 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1920 ;;Total ram usage:        3 bytes
  1921 ;; Hardware stack levels used:    1
  1922 ;; Hardware stack levels required when called:    9
  1923 ;; This function calls:
  1924 ;;		_initializeTaskList
  1925 ;; This function is called by:
  1926 ;;		_system_initialize
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           	psect	text6
  1931  003492                     __ptext6:
  1932                           	opt callstack 0
  1933  003492                     _start_timer:
  1934                           	opt callstack 20
  1935                           
  1936                           ;incstack = 0
  1937                           ;start_timer@timer_vaddr stored from wreg
  1938  003492  0100               	movlb	0	; () banked
  1939  003494  6F6C               	movwf	start_timer@timer_vaddr& (0+255),b
  1940  003496                     
  1941                           ;clock.c: 6:     if(timer_vaddr > 4)
  1942  003496  0E04               	movlw	4
  1943  003498  0100               	movlb	0	; () banked
  1944  00349A  656C               	cpfsgt	start_timer@timer_vaddr& (0+255),b
  1945  00349C  EF52  F01A         	goto	u3461
  1946  0034A0  EF54  F01A         	goto	u3460
  1947  0034A4                     u3461:
  1948  0034A4  EF72  F01A         	goto	l4059
  1949  0034A8                     u3460:
  1950  0034A8  EF93  F01A         	goto	l404
  1951  0034AC                     l406:
  1952                           
  1953                           ; BSR set to: 0
  1954                           ;clock.c: 10:             INTCONbits.TMR0IE = 1;
  1955  0034AC  8AF2               	bsf	242,5,c	;volatile
  1956                           
  1957                           ;clock.c: 11:             INTCONbits.TMR0IF = 0;
  1958  0034AE  94F2               	bcf	242,2,c	;volatile
  1959  0034B0                     
  1960                           ; BSR set to: 0
  1961                           ;clock.c: 12:             T0CON = 0xC3;
  1962  0034B0  0EC3               	movlw	195
  1963  0034B2  6ED5               	movwf	213,c	;volatile
  1964                           
  1965                           ;clock.c: 13:             TMR0L = 131;
  1966  0034B4  0E83               	movlw	131
  1967  0034B6  6ED6               	movwf	214,c	;volatile
  1968                           
  1969                           ;clock.c: 14:             time_ms = 0;
  1970  0034B8  0E00               	movlw	0
  1971  0034BA  6FBD               	movwf	_time_ms& (0+255),b
  1972  0034BC  0E00               	movlw	0
  1973  0034BE  6FBE               	movwf	(_time_ms+1)& (0+255),b
  1974  0034C0  0E00               	movlw	0
  1975  0034C2  6FBF               	movwf	(_time_ms+2)& (0+255),b
  1976  0034C4  0E00               	movlw	0
  1977  0034C6  6FC0               	movwf	(_time_ms+3)& (0+255),b
  1978                           
  1979                           ;clock.c: 15:             break;
  1980  0034C8  EF93  F01A         	goto	l404
  1981  0034CC                     l4045:
  1982                           
  1983                           ; BSR set to: 0
  1984                           ;clock.c: 17:             initializeTaskList();
  1985  0034CC  ECA3  F015         	call	_initializeTaskList	;wreg free
  1986  0034D0                     
  1987                           ;clock.c: 18:             PIE1bits.TMR1IE = 1;
  1988  0034D0  809D               	bsf	157,0,c	;volatile
  1989  0034D2                     
  1990                           ;clock.c: 19:             PIR1bits.TMR1IF = 0;
  1991  0034D2  909E               	bcf	158,0,c	;volatile
  1992  0034D4                     
  1993                           ;clock.c: 20:             T1CON = 0b10000001;
  1994  0034D4  0E81               	movlw	129
  1995  0034D6  6ECD               	movwf	205,c	;volatile
  1996  0034D8                     
  1997                           ;clock.c: 21:             TMR1H = 0xB1;
  1998  0034D8  0EB1               	movlw	177
  1999  0034DA  6ECF               	movwf	207,c	;volatile
  2000  0034DC                     
  2001                           ;clock.c: 22:             TMR1L = 0xE0;
  2002  0034DC  0EE0               	movlw	224
  2003  0034DE  6ECE               	movwf	206,c	;volatile
  2004                           
  2005                           ;clock.c: 23:             break;
  2006  0034E0  EF93  F01A         	goto	l404
  2007  0034E4                     l4059:
  2008                           
  2009                           ; BSR set to: 0
  2010  0034E4  516C               	movf	start_timer@timer_vaddr& (0+255),w,b
  2011  0034E6  6F6A               	movwf	??_start_timer& (0+255),b
  2012  0034E8  6B6B               	clrf	(??_start_timer+1)& (0+255),b
  2013                           
  2014                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2015                           ; Switch size 1, requested type "simple"
  2016                           ; Number of cases is 1, Range of values is 0 to 0
  2017                           ; switch strategies available:
  2018                           ; Name         Instructions Cycles
  2019                           ; simple_byte            4     3 (average)
  2020                           ;	Chosen strategy is simple_byte
  2021  0034EA  516B               	movf	(??_start_timer+1)& (0+255),w,b
  2022  0034EC  0A00               	xorlw	0	; case 0
  2023  0034EE  B4D8               	btfsc	status,2,c
  2024  0034F0  EF7C  F01A         	goto	l4505
  2025  0034F4  EF93  F01A         	goto	l404
  2026  0034F8                     l4505:
  2027                           
  2028                           ; BSR set to: 0
  2029                           ; Switch size 1, requested type "simple"
  2030                           ; Number of cases is 5, Range of values is 0 to 4
  2031                           ; switch strategies available:
  2032                           ; Name         Instructions Cycles
  2033                           ; simple_byte           16     9 (average)
  2034                           ;	Chosen strategy is simple_byte
  2035  0034F8  516A               	movf	??_start_timer& (0+255),w,b
  2036  0034FA  0A00               	xorlw	0	; case 0
  2037  0034FC  B4D8               	btfsc	status,2,c
  2038  0034FE  EF56  F01A         	goto	l406
  2039  003502  0A01               	xorlw	1	; case 1
  2040  003504  B4D8               	btfsc	status,2,c
  2041  003506  EF66  F01A         	goto	l4045
  2042  00350A  0A03               	xorlw	3	; case 2
  2043  00350C  B4D8               	btfsc	status,2,c
  2044  00350E  EF93  F01A         	goto	l404
  2045  003512  0A01               	xorlw	1	; case 3
  2046  003514  B4D8               	btfsc	status,2,c
  2047  003516  EF93  F01A         	goto	l404
  2048  00351A  0A07               	xorlw	7	; case 4
  2049  00351C  B4D8               	btfsc	status,2,c
  2050  00351E  EF93  F01A         	goto	l404
  2051  003522  EF93  F01A         	goto	l404
  2052  003526                     l404:
  2053  003526  0012               	return		;funcret
  2054  003528                     __end_of_start_timer:
  2055                           	opt callstack 0
  2056                           
  2057 ;; *************** function _initializeTaskList *****************
  2058 ;; Defined at:
  2059 ;;		line 11 in file "task.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;		None
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;  i               2    8[BANK0 ] int 
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  1    wreg      void 
  2066 ;; Registers used:
  2067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2074 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2076 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2077 ;;Total ram usage:        2 bytes
  2078 ;; Hardware stack levels used:    1
  2079 ;; Hardware stack levels required when called:    8
  2080 ;; This function calls:
  2081 ;;		___wmul
  2082 ;;		_queueInitialize
  2083 ;; This function is called by:
  2084 ;;		_start_timer
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           	psect	text7
  2089  002B46                     __ptext7:
  2090                           	opt callstack 0
  2091  002B46                     _initializeTaskList:
  2092                           	opt callstack 20
  2093  002B46                     
  2094                           ;task.c: 12:     queueInitialize();
  2095  002B46  ECDC  F01A         	call	_queueInitialize	;wreg free
  2096  002B4A                     
  2097                           ;task.c: 13:     for(int i = 0; i < 20; i++) {
  2098  002B4A  0E00               	movlw	0
  2099  002B4C  0100               	movlb	0	; () banked
  2100  002B4E  6F69               	movwf	(initializeTaskList@i+1)& (0+255),b
  2101  002B50  0E00               	movlw	0
  2102  002B52  6F68               	movwf	initializeTaskList@i& (0+255),b
  2103  002B54                     l3837:
  2104                           
  2105                           ; BSR set to: 0
  2106                           ;task.c: 14:         task_list[i].delay_t = 0;
  2107  002B54  C068  F060         	movff	initializeTaskList@i,___wmul@multiplier
  2108  002B58  C069  F061         	movff	initializeTaskList@i+1,___wmul@multiplier+1
  2109  002B5C  0E00               	movlw	0
  2110  002B5E  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2111  002B60  0E0F               	movlw	15
  2112  002B62  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2113  002B64  ECD9  F01D         	call	___wmul	;wreg free
  2114  002B68  0E64               	movlw	low _task_list
  2115  002B6A  0100               	movlb	0	; () banked
  2116  002B6C  2560               	addwf	?___wmul& (0+255),w,b
  2117  002B6E  6ED9               	movwf	fsr2l,c
  2118  002B70  0E01               	movlw	high _task_list
  2119  002B72  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2120  002B74  6EDA               	movwf	fsr2h,c
  2121  002B76  6ADE               	clrf	postinc2,c
  2122  002B78  6ADE               	clrf	postinc2,c
  2123  002B7A  6ADE               	clrf	postinc2,c
  2124  002B7C  6ADD               	clrf	postdec2,c
  2125                           
  2126                           ;task.c: 15:         task_list[i].period_t = 0;
  2127  002B7E  C068  F060         	movff	initializeTaskList@i,___wmul@multiplier
  2128  002B82  C069  F061         	movff	initializeTaskList@i+1,___wmul@multiplier+1
  2129  002B86  0E00               	movlw	0
  2130  002B88  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2131  002B8A  0E0F               	movlw	15
  2132  002B8C  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2133  002B8E  ECD9  F01D         	call	___wmul	;wreg free
  2134  002B92  0E68               	movlw	low (_task_list+4)
  2135  002B94  0100               	movlb	0	; () banked
  2136  002B96  2560               	addwf	?___wmul& (0+255),w,b
  2137  002B98  6ED9               	movwf	fsr2l,c
  2138  002B9A  0E01               	movlw	high (_task_list+4)
  2139  002B9C  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2140  002B9E  6EDA               	movwf	fsr2h,c
  2141  002BA0  6ADE               	clrf	postinc2,c
  2142  002BA2  6ADE               	clrf	postinc2,c
  2143  002BA4  6ADE               	clrf	postinc2,c
  2144  002BA6  6ADD               	clrf	postdec2,c
  2145                           
  2146                           ;task.c: 16:         task_list[i].func_ptr = ((void*)0);
  2147  002BA8  C068  F060         	movff	initializeTaskList@i,___wmul@multiplier
  2148  002BAC  C069  F061         	movff	initializeTaskList@i+1,___wmul@multiplier+1
  2149  002BB0  0E00               	movlw	0
  2150  002BB2  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2151  002BB4  0E0F               	movlw	15
  2152  002BB6  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2153  002BB8  ECD9  F01D         	call	___wmul	;wreg free
  2154  002BBC  0E6C               	movlw	low (_task_list+8)
  2155  002BBE  0100               	movlb	0	; () banked
  2156  002BC0  2560               	addwf	?___wmul& (0+255),w,b
  2157  002BC2  6ED9               	movwf	fsr2l,c
  2158  002BC4  0E01               	movlw	high (_task_list+8)
  2159  002BC6  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2160  002BC8  6EDA               	movwf	fsr2h,c
  2161  002BCA  0E00               	movlw	0
  2162  002BCC  6EDE               	movwf	postinc2,c
  2163  002BCE  0E00               	movlw	0
  2164  002BD0  6EDE               	movwf	postinc2,c
  2165  002BD2  0E00               	movlw	0
  2166  002BD4  6EDE               	movwf	postinc2,c
  2167                           
  2168                           ;task.c: 17:         task_list[i].data_p = ((void*)0);
  2169  002BD6  C068  F060         	movff	initializeTaskList@i,___wmul@multiplier
  2170  002BDA  C069  F061         	movff	initializeTaskList@i+1,___wmul@multiplier+1
  2171  002BDE  0E00               	movlw	0
  2172  002BE0  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2173  002BE2  0E0F               	movlw	15
  2174  002BE4  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2175  002BE6  ECD9  F01D         	call	___wmul	;wreg free
  2176  002BEA  0E71               	movlw	low (_task_list+13)
  2177  002BEC  0100               	movlb	0	; () banked
  2178  002BEE  2560               	addwf	?___wmul& (0+255),w,b
  2179  002BF0  6ED9               	movwf	fsr2l,c
  2180  002BF2  0E01               	movlw	high (_task_list+13)
  2181  002BF4  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2182  002BF6  6EDA               	movwf	fsr2h,c
  2183  002BF8  0E00               	movlw	0
  2184  002BFA  6EDE               	movwf	postinc2,c
  2185  002BFC  0E00               	movlw	0
  2186  002BFE  6EDD               	movwf	postdec2,c
  2187                           
  2188                           ;task.c: 18:         task_list[i].next = 105;
  2189  002C00  C068  F060         	movff	initializeTaskList@i,___wmul@multiplier
  2190  002C04  C069  F061         	movff	initializeTaskList@i+1,___wmul@multiplier+1
  2191  002C08  0E00               	movlw	0
  2192  002C0A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2193  002C0C  0E0F               	movlw	15
  2194  002C0E  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2195  002C10  ECD9  F01D         	call	___wmul	;wreg free
  2196  002C14  0E6F               	movlw	low (_task_list+11)
  2197  002C16  0100               	movlb	0	; () banked
  2198  002C18  2560               	addwf	?___wmul& (0+255),w,b
  2199  002C1A  6ED9               	movwf	fsr2l,c
  2200  002C1C  0E01               	movlw	high (_task_list+11)
  2201  002C1E  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2202  002C20  6EDA               	movwf	fsr2h,c
  2203  002C22  0E69               	movlw	105
  2204  002C24  6EDE               	movwf	postinc2,c
  2205  002C26  0E00               	movlw	0
  2206  002C28  6EDD               	movwf	postdec2,c
  2207  002C2A                     
  2208                           ; BSR set to: 0
  2209                           ;task.c: 19:     }
  2210  002C2A  4B68               	infsnz	initializeTaskList@i& (0+255),f,b
  2211  002C2C  2B69               	incf	(initializeTaskList@i+1)& (0+255),f,b
  2212  002C2E                     
  2213                           ; BSR set to: 0
  2214  002C2E  BF69               	btfsc	(initializeTaskList@i+1)& (0+255),7,b
  2215  002C30  EF23  F016         	goto	u3201
  2216  002C34  5169               	movf	(initializeTaskList@i+1)& (0+255),w,b
  2217  002C36  E109               	bnz	u3200
  2218  002C38  0E14               	movlw	20
  2219  002C3A  5D68               	subwf	initializeTaskList@i& (0+255),w,b
  2220  002C3C  A0D8               	btfss	status,0,c
  2221  002C3E  EF23  F016         	goto	u3201
  2222  002C42  EF25  F016         	goto	u3200
  2223  002C46                     u3201:
  2224  002C46  EFAA  F015         	goto	l3837
  2225  002C4A                     u3200:
  2226  002C4A                     
  2227                           ; BSR set to: 0
  2228                           ;task.c: 20:     num_task = 0;
  2229  002C4A  0E00               	movlw	0
  2230  002C4C  6FC9               	movwf	_num_task& (0+255),b
  2231                           
  2232                           ;task.c: 21:     head = 105;
  2233  002C4E  0E69               	movlw	105
  2234  002C50  6FC8               	movwf	_head& (0+255),b
  2235  002C52                     
  2236                           ; BSR set to: 0
  2237  002C52  0012               	return		;funcret
  2238  002C54                     __end_of_initializeTaskList:
  2239                           	opt callstack 0
  2240                           
  2241 ;; *************** function _queueInitialize *****************
  2242 ;; Defined at:
  2243 ;;		line 3 in file "ready_queue.c"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;		None
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;  i               2    6[BANK0 ] int 
  2248 ;; Return value:  Size  Location     Type
  2249 ;;                  1    wreg      void 
  2250 ;; Registers used:
  2251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2258 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2260 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2261 ;;Total ram usage:        2 bytes
  2262 ;; Hardware stack levels used:    1
  2263 ;; Hardware stack levels required when called:    7
  2264 ;; This function calls:
  2265 ;;		___wmul
  2266 ;; This function is called by:
  2267 ;;		_initializeTaskList
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           	psect	text8
  2272  0035B8                     __ptext8:
  2273                           	opt callstack 0
  2274  0035B8                     _queueInitialize:
  2275                           	opt callstack 20
  2276  0035B8                     
  2277                           ;ready_queue.c: 4:     for(int i = 0; i< 20; i++) {
  2278  0035B8  0E00               	movlw	0
  2279  0035BA  0100               	movlb	0	; () banked
  2280  0035BC  6F67               	movwf	(queueInitialize@i+1)& (0+255),b
  2281  0035BE  0E00               	movlw	0
  2282  0035C0  6F66               	movwf	queueInitialize@i& (0+255),b
  2283  0035C2                     l3423:
  2284                           
  2285                           ; BSR set to: 0
  2286                           ;ready_queue.c: 5:         ready_queue[i].data_p = ((void*)0);
  2287  0035C2  C066  F060         	movff	queueInitialize@i,___wmul@multiplier
  2288  0035C6  C067  F061         	movff	queueInitialize@i+1,___wmul@multiplier+1
  2289  0035CA  0E00               	movlw	0
  2290  0035CC  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2291  0035CE  0E05               	movlw	5
  2292  0035D0  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2293  0035D2  ECD9  F01D         	call	___wmul	;wreg free
  2294  0035D6  0E03               	movlw	low (_ready_queue+3)
  2295  0035D8  0100               	movlb	0	; () banked
  2296  0035DA  2560               	addwf	?___wmul& (0+255),w,b
  2297  0035DC  6ED9               	movwf	fsr2l,c
  2298  0035DE  0E01               	movlw	high (_ready_queue+3)
  2299  0035E0  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2300  0035E2  6EDA               	movwf	fsr2h,c
  2301  0035E4  0E00               	movlw	0
  2302  0035E6  6EDE               	movwf	postinc2,c
  2303  0035E8  0E00               	movlw	0
  2304  0035EA  6EDD               	movwf	postdec2,c
  2305                           
  2306                           ;ready_queue.c: 6:         ready_queue[i].func_ptr = ((void*)0);
  2307  0035EC  C066  F060         	movff	queueInitialize@i,___wmul@multiplier
  2308  0035F0  C067  F061         	movff	queueInitialize@i+1,___wmul@multiplier+1
  2309  0035F4  0E00               	movlw	0
  2310  0035F6  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2311  0035F8  0E05               	movlw	5
  2312  0035FA  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2313  0035FC  ECD9  F01D         	call	___wmul	;wreg free
  2314  003600  0E00               	movlw	low _ready_queue
  2315  003602  0100               	movlb	0	; () banked
  2316  003604  2560               	addwf	?___wmul& (0+255),w,b
  2317  003606  6ED9               	movwf	fsr2l,c
  2318  003608  0E01               	movlw	high _ready_queue
  2319  00360A  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2320  00360C  6EDA               	movwf	fsr2h,c
  2321  00360E  0E00               	movlw	0
  2322  003610  6EDE               	movwf	postinc2,c
  2323  003612  0E00               	movlw	0
  2324  003614  6EDE               	movwf	postinc2,c
  2325  003616  0E00               	movlw	0
  2326  003618  6EDE               	movwf	postinc2,c
  2327  00361A                     
  2328                           ; BSR set to: 0
  2329                           ;ready_queue.c: 7:     }
  2330  00361A  4B66               	infsnz	queueInitialize@i& (0+255),f,b
  2331  00361C  2B67               	incf	(queueInitialize@i+1)& (0+255),f,b
  2332  00361E                     
  2333                           ; BSR set to: 0
  2334  00361E  BF67               	btfsc	(queueInitialize@i+1)& (0+255),7,b
  2335  003620  EF1B  F01B         	goto	u2631
  2336  003624  5167               	movf	(queueInitialize@i+1)& (0+255),w,b
  2337  003626  E109               	bnz	u2630
  2338  003628  0E14               	movlw	20
  2339  00362A  5D66               	subwf	queueInitialize@i& (0+255),w,b
  2340  00362C  A0D8               	btfss	status,0,c
  2341  00362E  EF1B  F01B         	goto	u2631
  2342  003632  EF1D  F01B         	goto	u2630
  2343  003636                     u2631:
  2344  003636  EFE1  F01A         	goto	l3423
  2345  00363A                     u2630:
  2346  00363A                     
  2347                           ; BSR set to: 0
  2348  00363A  0012               	return		;funcret
  2349  00363C                     __end_of_queueInitialize:
  2350                           	opt callstack 0
  2351                           
  2352 ;; *************** function _pin_initialize *****************
  2353 ;; Defined at:
  2354 ;;		line 7 in file "mcc.c"
  2355 ;; Parameters:    Size  Location     Type
  2356 ;;		None
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;		None
  2359 ;; Return value:  Size  Location     Type
  2360 ;;                  1    wreg      void 
  2361 ;; Registers used:
  2362 ;;		wreg, status,2
  2363 ;; Tracked objects:
  2364 ;;		On entry : 0/0
  2365 ;;		On exit  : 0/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2372 ;;Total ram usage:        0 bytes
  2373 ;; Hardware stack levels used:    1
  2374 ;; Hardware stack levels required when called:    6
  2375 ;; This function calls:
  2376 ;;		Nothing
  2377 ;; This function is called by:
  2378 ;;		_system_initialize
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           	psect	text9
  2383  003C00                     __ptext9:
  2384                           	opt callstack 0
  2385  003C00                     _pin_initialize:
  2386                           	opt callstack 23
  2387  003C00                     
  2388                           ;mcc.c: 8:     LATC = 0x00;
  2389  003C00  0E00               	movlw	0
  2390  003C02  6E8B               	movwf	139,c	;volatile
  2391                           
  2392                           ;mcc.c: 9:     TRISC = 0xD7;
  2393  003C04  0ED7               	movlw	215
  2394  003C06  6E94               	movwf	148,c	;volatile
  2395                           
  2396                           ;mcc.c: 10:     ADCON1 = 0b00001111;
  2397  003C08  0E0F               	movlw	15
  2398  003C0A  6EC1               	movwf	193,c	;volatile
  2399                           
  2400                           ;mcc.c: 12:     LATA = 0x00;
  2401  003C0C  0E00               	movlw	0
  2402  003C0E  6E89               	movwf	137,c	;volatile
  2403                           
  2404                           ;mcc.c: 13:     TRISA = 0xF3;
  2405  003C10  0EF3               	movlw	243
  2406  003C12  6E92               	movwf	146,c	;volatile
  2407                           
  2408                           ;mcc.c: 16:     LATB = 0x00;
  2409  003C14  0E00               	movlw	0
  2410  003C16  6E8A               	movwf	138,c	;volatile
  2411  003C18                     
  2412                           ;mcc.c: 17:     TRISB = 0xFF;
  2413  003C18  6893               	setf	147,c	;volatile
  2414                           
  2415                           ;mcc.c: 20:     LATD = 0x00;
  2416  003C1A  0E00               	movlw	0
  2417  003C1C  6E8C               	movwf	140,c	;volatile
  2418                           
  2419                           ;mcc.c: 21:     TRISD = 0x00;
  2420  003C1E  0E00               	movlw	0
  2421  003C20  6E95               	movwf	149,c	;volatile
  2422  003C22  0012               	return		;funcret
  2423  003C24                     __end_of_pin_initialize:
  2424                           	opt callstack 0
  2425                           
  2426 ;; *************** function _osc_initialize *****************
  2427 ;; Defined at:
  2428 ;;		line 3 in file "mcc.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;		None
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;		None
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  1    wreg      void 
  2435 ;; Registers used:
  2436 ;;		wreg, status,2
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2446 ;;Total ram usage:        0 bytes
  2447 ;; Hardware stack levels used:    1
  2448 ;; Hardware stack levels required when called:    6
  2449 ;; This function calls:
  2450 ;;		Nothing
  2451 ;; This function is called by:
  2452 ;;		_system_initialize
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           	psect	text10
  2457  003D16                     __ptext10:
  2458                           	opt callstack 0
  2459  003D16                     _osc_initialize:
  2460                           	opt callstack 23
  2461  003D16                     
  2462                           ;mcc.c: 4:     OSCCON = 0x70;
  2463  003D16  0E70               	movlw	112
  2464  003D18  6ED3               	movwf	211,c	;volatile
  2465  003D1A  0012               	return		;funcret
  2466  003D1C                     __end_of_osc_initialize:
  2467                           	opt callstack 0
  2468                           
  2469 ;; *************** function _interrupt_initialize *****************
  2470 ;; Defined at:
  2471 ;;		line 35 in file "mcc.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;		None
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;		None
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  1    wreg      void 
  2478 ;; Registers used:
  2479 ;;		None
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2489 ;;Total ram usage:        0 bytes
  2490 ;; Hardware stack levels used:    1
  2491 ;; Hardware stack levels required when called:    6
  2492 ;; This function calls:
  2493 ;;		Nothing
  2494 ;; This function is called by:
  2495 ;;		_system_initialize
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           	psect	text11
  2500  003D1C                     __ptext11:
  2501                           	opt callstack 0
  2502  003D1C                     _interrupt_initialize:
  2503                           	opt callstack 23
  2504  003D1C                     
  2505                           ;mcc.c: 36:     INTCONbits.GIE = 1;
  2506  003D1C  8EF2               	bsf	242,7,c	;volatile
  2507                           
  2508                           ;mcc.c: 37:     INTCONbits.PEIE = 1;
  2509  003D1E  8CF2               	bsf	242,6,c	;volatile
  2510  003D20  0012               	return		;funcret
  2511  003D22                     __end_of_interrupt_initialize:
  2512                           	opt callstack 0
  2513                           
  2514 ;; *************** function _LTD_initialize *****************
  2515 ;; Defined at:
  2516 ;;		line 3 in file "LTDtask.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;		None
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;		None
  2521 ;; Return value:  Size  Location     Type
  2522 ;;                  1    wreg      void 
  2523 ;; Registers used:
  2524 ;;		wreg, status,2
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2534 ;;Total ram usage:        0 bytes
  2535 ;; Hardware stack levels used:    1
  2536 ;; Hardware stack levels required when called:    6
  2537 ;; This function calls:
  2538 ;;		Nothing
  2539 ;; This function is called by:
  2540 ;;		_system_initialize
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           	psect	text12
  2545  003D0C                     __ptext12:
  2546                           	opt callstack 0
  2547  003D0C                     _LTD_initialize:
  2548                           	opt callstack 23
  2549  003D0C                     
  2550                           ;LTDtask.c: 5:     LATD = 0x00;
  2551  003D0C  0E00               	movlw	0
  2552  003D0E  6E8C               	movwf	140,c	;volatile
  2553                           
  2554                           ;LTDtask.c: 6:     TRISD = 0x00;
  2555  003D10  0E00               	movlw	0
  2556  003D12  6E95               	movwf	149,c	;volatile
  2557  003D14  0012               	return		;funcret
  2558  003D16                     __end_of_LTD_initialize:
  2559                           	opt callstack 0
  2560                           
  2561 ;; *************** function _LCDInit *****************
  2562 ;; Defined at:
  2563 ;;		line 45 in file "lcd.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;		None
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;		None
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1    wreg      void 
  2570 ;; Registers used:
  2571 ;;		wreg, status,2, status,0, cstack
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2579 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2580 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2581 ;;Total ram usage:        1 bytes
  2582 ;; Hardware stack levels used:    1
  2583 ;; Hardware stack levels required when called:    9
  2584 ;; This function calls:
  2585 ;;		_InitBBSPI
  2586 ;;		_LCDPutInst
  2587 ;;		_Port_BBSPIInit
  2588 ;;		_WritePort_BBSPI
  2589 ;; This function is called by:
  2590 ;;		_system_initialize
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           	psect	text13
  2595  0036A6                     __ptext13:
  2596                           	opt callstack 0
  2597  0036A6                     _LCDInit:
  2598                           	opt callstack 20
  2599  0036A6                     
  2600                           ;lcd.c: 47:     InitBBSPI();
  2601  0036A6  EC69  F01E         	call	_InitBBSPI	;wreg free
  2602  0036AA                     
  2603                           ;lcd.c: 48:     TRISFbits.TRISF6 = 0;
  2604  0036AA  9C97               	bcf	151,6,c	;volatile
  2605  0036AC                     
  2606                           ;lcd.c: 49:     LATFbits.LATF6 = 0;
  2607  0036AC  9C8E               	bcf	142,6,c	;volatile
  2608  0036AE                     
  2609                           ;lcd.c: 50:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2610  0036AE  0E0D               	movlw	13
  2611  0036B0  0100               	movlb	0	; () banked
  2612  0036B2  6F66               	movwf	??_LCDInit& (0+255),b
  2613  0036B4  0EFB               	movlw	251
  2614  0036B6                     u3797:
  2615  0036B6  2EE8               	decfsz	wreg,f,c
  2616  0036B8  D7FE               	bra	u3797
  2617  0036BA  2F66               	decfsz	??_LCDInit& (0+255),f,b
  2618  0036BC  D7FC               	bra	u3797
  2619  0036BE  D000               	nop2	
  2620  0036C0                     
  2621                           ;lcd.c: 51:     LATFbits.LATF6 = 1;
  2622  0036C0  8C8E               	bsf	142,6,c	;volatile
  2623  0036C2                     
  2624                           ;lcd.c: 52:     Port_BBSPIInit (0x00);
  2625  0036C2  0E00               	movlw	0
  2626  0036C4  EC33  F01E         	call	_Port_BBSPIInit
  2627  0036C8                     
  2628                           ;lcd.c: 53:     Port_BBSPIInit (0x01);
  2629  0036C8  0E01               	movlw	1
  2630  0036CA  EC33  F01E         	call	_Port_BBSPIInit
  2631  0036CE                     
  2632                           ;lcd.c: 54:     WritePort_BBSPI (0x12, 0);
  2633  0036CE  0E00               	movlw	0
  2634  0036D0  0100               	movlb	0	; () banked
  2635  0036D2  6F63               	movwf	WritePort_BBSPI@a& (0+255),b
  2636  0036D4  0E12               	movlw	18
  2637  0036D6  EC23  F01E         	call	_WritePort_BBSPI
  2638  0036DA                     
  2639                           ;lcd.c: 55:     _delay((unsigned long)((15)*(8000000/4000.0)));
  2640  0036DA  0E27               	movlw	39
  2641  0036DC  0100               	movlb	0	; () banked
  2642  0036DE  6F66               	movwf	??_LCDInit& (0+255),b
  2643  0036E0  0EF5               	movlw	245
  2644  0036E2                     u3807:
  2645  0036E2  2EE8               	decfsz	wreg,f,c
  2646  0036E4  D7FE               	bra	u3807
  2647  0036E6  2F66               	decfsz	??_LCDInit& (0+255),f,b
  2648  0036E8  D7FC               	bra	u3807
  2649  0036EA                     
  2650                           ;lcd.c: 56:     LCDPutInst(0x32);
  2651  0036EA  0E32               	movlw	50
  2652  0036EC  ECA0  F01C         	call	_LCDPutInst
  2653  0036F0                     
  2654                           ;lcd.c: 57:     LCDPutInst(0x3C);
  2655  0036F0  0E3C               	movlw	60
  2656  0036F2  ECA0  F01C         	call	_LCDPutInst
  2657  0036F6                     
  2658                           ;lcd.c: 58:     LCDPutInst(0x0C);
  2659  0036F6  0E0C               	movlw	12
  2660  0036F8  ECA0  F01C         	call	_LCDPutInst
  2661  0036FC                     
  2662                           ;lcd.c: 59:     LCDPutInst(0x01);
  2663  0036FC  0E01               	movlw	1
  2664  0036FE  ECA0  F01C         	call	_LCDPutInst
  2665  003702                     
  2666                           ;lcd.c: 60:     LCDPutInst(0x06);
  2667  003702  0E06               	movlw	6
  2668  003704  ECA0  F01C         	call	_LCDPutInst
  2669  003708  0012               	return		;funcret
  2670  00370A                     __end_of_LCDInit:
  2671                           	opt callstack 0
  2672                           
  2673 ;; *************** function _Port_BBSPIInit *****************
  2674 ;; Defined at:
  2675 ;;		line 123 in file "lcd.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;  port_dir        1    wreg     unsigned char 
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;  port_dir        1    3[BANK0 ] unsigned char 
  2680 ;; Return value:  Size  Location     Type
  2681 ;;                  1    wreg      void 
  2682 ;; Registers used:
  2683 ;;		wreg, status,2, status,0, cstack
  2684 ;; Tracked objects:
  2685 ;;		On entry : 0/0
  2686 ;;		On exit  : 0/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2690 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2692 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2693 ;;Total ram usage:        1 bytes
  2694 ;; Hardware stack levels used:    1
  2695 ;; Hardware stack levels required when called:    7
  2696 ;; This function calls:
  2697 ;;		_SendByteBBSPI
  2698 ;; This function is called by:
  2699 ;;		_LCDInit
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           	psect	text14
  2704  003C66                     __ptext14:
  2705                           	opt callstack 0
  2706  003C66                     _Port_BBSPIInit:
  2707                           	opt callstack 21
  2708                           
  2709                           ;incstack = 0
  2710                           ;Port_BBSPIInit@port_dir stored from wreg
  2711  003C66  0100               	movlb	0	; () banked
  2712  003C68  6F63               	movwf	Port_BBSPIInit@port_dir& (0+255),b
  2713  003C6A                     
  2714                           ;lcd.c: 123: void Port_BBSPIInit (unsigned char port_dir);lcd.c: 124: {;lcd.c: 128:     
      +                          LATAbits.LATA2 = 0;
  2715  003C6A  9489               	bcf	137,2,c	;volatile
  2716  003C6C                     
  2717                           ;lcd.c: 129:     SendByteBBSPI(0x40);
  2718  003C6C  0E40               	movlw	64
  2719  003C6E  EC1E  F01B         	call	_SendByteBBSPI
  2720                           
  2721                           ;lcd.c: 130:     SendByteBBSPI(port_dir);
  2722  003C72  0100               	movlb	0	; () banked
  2723  003C74  5163               	movf	Port_BBSPIInit@port_dir& (0+255),w,b
  2724  003C76  EC1E  F01B         	call	_SendByteBBSPI
  2725                           
  2726                           ;lcd.c: 131:     SendByteBBSPI(0x00);
  2727  003C7A  0E00               	movlw	0
  2728  003C7C  EC1E  F01B         	call	_SendByteBBSPI
  2729  003C80                     
  2730                           ;lcd.c: 132:     LATAbits.LATA2 = 1;
  2731  003C80  8489               	bsf	137,2,c	;volatile
  2732  003C82  0012               	return		;funcret
  2733  003C84                     __end_of_Port_BBSPIInit:
  2734                           	opt callstack 0
  2735                           
  2736 ;; *************** function _InitBBSPI *****************
  2737 ;; Defined at:
  2738 ;;		line 70 in file "lcd.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;		None
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;		None
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  1    wreg      void 
  2745 ;; Registers used:
  2746 ;;		None
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2756 ;;Total ram usage:        0 bytes
  2757 ;; Hardware stack levels used:    1
  2758 ;; Hardware stack levels required when called:    6
  2759 ;; This function calls:
  2760 ;;		Nothing
  2761 ;; This function is called by:
  2762 ;;		_LCDInit
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766                           	psect	text15
  2767  003CD2                     __ptext15:
  2768                           	opt callstack 0
  2769  003CD2                     _InitBBSPI:
  2770                           	opt callstack 22
  2771  003CD2                     
  2772                           ;lcd.c: 72:     TRISAbits.TRISA2 = 0;
  2773  003CD2  9492               	bcf	146,2,c	;volatile
  2774                           
  2775                           ;lcd.c: 73:     TRISCbits.TRISC4 = 1;
  2776  003CD4  8894               	bsf	148,4,c	;volatile
  2777                           
  2778                           ;lcd.c: 74:     TRISCbits.TRISC5 = 0;
  2779  003CD6  9A94               	bcf	148,5,c	;volatile
  2780                           
  2781                           ;lcd.c: 75:     TRISCbits.TRISC3 = 0;
  2782  003CD8  9694               	bcf	148,3,c	;volatile
  2783                           
  2784                           ;lcd.c: 77:     LATAbits.LATA2 = 1;
  2785  003CDA  8489               	bsf	137,2,c	;volatile
  2786                           
  2787                           ;lcd.c: 78:     LATCbits.LATC4 = 1;
  2788  003CDC  888B               	bsf	139,4,c	;volatile
  2789                           
  2790                           ;lcd.c: 79:     LATCbits.LATC5 = 0;
  2791  003CDE  9A8B               	bcf	139,5,c	;volatile
  2792                           
  2793                           ;lcd.c: 80:     LATCbits.LATC3 = 0;
  2794  003CE0  968B               	bcf	139,3,c	;volatile
  2795  003CE2  0012               	return		;funcret
  2796  003CE4                     __end_of_InitBBSPI:
  2797                           	opt callstack 0
  2798                           
  2799 ;; *************** function _dispatch *****************
  2800 ;; Defined at:
  2801 ;;		line 69 in file "clock.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;		None
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;		None
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  1    wreg      void 
  2808 ;; Registers used:
  2809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2819 ;;Total ram usage:        0 bytes
  2820 ;; Hardware stack levels used:    1
  2821 ;; Hardware stack levels required when called:   13
  2822 ;; This function calls:
  2823 ;;		_selectReadyTask
  2824 ;; This function is called by:
  2825 ;;		_main
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829                           	psect	text16
  2830  003D22                     __ptext16:
  2831                           	opt callstack 0
  2832  003D22                     _dispatch:
  2833                           	opt callstack 17
  2834  003D22                     
  2835                           ;clock.c: 70:     selectReadyTask();
  2836  003D22  EC85  F01B         	call	_selectReadyTask	;wreg free
  2837  003D26  0012               	return		;funcret
  2838  003D28                     __end_of_dispatch:
  2839                           	opt callstack 0
  2840                           
  2841 ;; *************** function _selectReadyTask *****************
  2842 ;; Defined at:
  2843 ;;		line 123 in file "task.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;		None
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;  node            5   64[BANK0 ] struct .
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  1    wreg      void 
  2850 ;; Registers used:
  2851 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2858 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2860 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2861 ;;Total ram usage:        5 bytes
  2862 ;; Hardware stack levels used:    1
  2863 ;; Hardware stack levels required when called:   12
  2864 ;; This function calls:
  2865 ;;		_changeState
  2866 ;;		_check_humid_to_turn_fan
  2867 ;;		_dequeue
  2868 ;;		_handleButton
  2869 ;;		_isEmptyQueue
  2870 ;;		_printTempAndHumid
  2871 ;;		_readTempAndHumid
  2872 ;; This function is called by:
  2873 ;;		_dispatch
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           	psect	text17
  2878  00370A                     __ptext17:
  2879                           	opt callstack 0
  2880  00370A                     _selectReadyTask:
  2881                           	opt callstack 17
  2882  00370A                     
  2883                           ;task.c: 124:     while(!isEmptyQueue()) {
  2884  00370A  EFAC  F01B         	goto	l4105
  2885  00370E                     l4099:
  2886                           
  2887                           ;task.c: 125:         queue_node node = dequeue();
  2888  00370E  ECF8  F019         	call	_dequeue	;wreg free
  2889  003712  EE20  F0A0         	lfsr	2,selectReadyTask@node
  2890  003716  0E04               	movlw	4
  2891  003718                     u3521:
  2892  003718  CFEB FFDB          	movff	plusw0,plusw2
  2893  00371C  06E8               	decf	wreg,f,c
  2894  00371E  E2FC               	bc	u3521
  2895  003720                     
  2896                           ;task.c: 126:         if(node.func_ptr != ((void*)0))
  2897  003720  0100               	movlb	0	; () banked
  2898  003722  51A0               	movf	selectReadyTask@node& (0+255),w,b
  2899  003724  11A1               	iorwf	(selectReadyTask@node+1)& (0+255),w,b
  2900  003726  11A2               	iorwf	(selectReadyTask@node+2)& (0+255),w,b
  2901  003728  B4D8               	btfsc	status,2,c
  2902  00372A  EF99  F01B         	goto	u3531
  2903  00372E  EF9B  F01B         	goto	u3530
  2904  003732                     u3531:
  2905  003732  EFAC  F01B         	goto	l4105
  2906  003736                     u3530:
  2907  003736                     
  2908                           ; BSR set to: 0
  2909                           ;task.c: 127:             (node.func_ptr)(node.data_p);
  2910  003736  C0A3  F062         	movff	selectReadyTask@node+3,handleButton@data_ptr
  2911  00373A  C0A4  F063         	movff	selectReadyTask@node+4,handleButton@data_ptr+1
  2912  00373E  D802               	call	u3548
  2913  003740  EFAC  F01B         	goto	u3549
  2914  003744                     u3548:
  2915  003744  0005               	push	
  2916  003746  6EFA               	movwf	pclath,c
  2917  003748  51A0               	movf	selectReadyTask@node& (0+255),w,b
  2918  00374A  6EFD               	movwf	tosl,c
  2919  00374C  51A1               	movf	(selectReadyTask@node+1)& (0+255),w,b
  2920  00374E  6EFE               	movwf	tosh,c
  2921  003750  51A2               	movf	(selectReadyTask@node+2)& (0+255),w,b
  2922  003752  6EFF               	movwf	tosu,c
  2923  003754  50FA               	movf	pclath,w,c
  2924  003756  0012               	return		;indir
  2925  003758                     u3549:
  2926  003758                     l4105:
  2927                           
  2928                           ;task.c: 124:     while(!isEmptyQueue()) {
  2929  003758  EC7C  F01D         	call	_isEmptyQueue	;wreg free
  2930  00375C  0900               	iorlw	0
  2931  00375E  B4D8               	btfsc	status,2,c
  2932  003760  EFB4  F01B         	goto	u3551
  2933  003764  EFB6  F01B         	goto	u3550
  2934  003768                     u3551:
  2935  003768  EF87  F01B         	goto	l4099
  2936  00376C                     u3550:
  2937  00376C  0012               	return		;funcret
  2938  00376E                     __end_of_selectReadyTask:
  2939                           	opt callstack 0
  2940                           
  2941 ;; *************** function _readTempAndHumid *****************
  2942 ;; Defined at:
  2943 ;;		line 67 in file "dht11.c"
  2944 ;; Parameters:    Size  Location     Type
  2945 ;;		None
  2946 ;; Auto vars:     Size  Location     Type
  2947 ;;		None
  2948 ;; Return value:  Size  Location     Type
  2949 ;;                  1    wreg      void 
  2950 ;; Registers used:
  2951 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2952 ;; Tracked objects:
  2953 ;;		On entry : 0/0
  2954 ;;		On exit  : 0/0
  2955 ;;		Unchanged: 0/0
  2956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2959 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2960 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2961 ;;Total ram usage:        1 bytes
  2962 ;; Hardware stack levels used:    1
  2963 ;; Hardware stack levels required when called:    8
  2964 ;; This function calls:
  2965 ;;		___fladd
  2966 ;;		___flmul
  2967 ;;		___flsub
  2968 ;;		___xxtofl
  2969 ;;		_readDHT
  2970 ;; This function is called by:
  2971 ;;		_system_setup
  2972 ;;		_selectReadyTask
  2973 ;; This function uses a non-reentrant model
  2974 ;;
  2975                           
  2976                           	psect	text18
  2977  0028E0                     __ptext18:
  2978                           	opt callstack 0
  2979  0028E0                     _readTempAndHumid:
  2980                           	opt callstack 20
  2981  0028E0                     
  2982                           ;dht11.c: 68:     if(!readDHT()) {
  2983  0028E0  EC22  F017         	call	_readDHT	;wreg free
  2984  0028E4  0900               	iorlw	0
  2985  0028E6  A4D8               	btfss	status,2,c
  2986  0028E8  EF78  F014         	goto	u3181
  2987  0028EC  EF7A  F014         	goto	u3180
  2988  0028F0                     u3181:
  2989  0028F0  EF8D  F014         	goto	l3819
  2990  0028F4                     u3180:
  2991  0028F4                     
  2992                           ;dht11.c: 69:         temperature_value = 399;
  2993  0028F4  0E00               	movlw	0
  2994  0028F6  0100               	movlb	0	; () banked
  2995  0028F8  6FCD               	movwf	_temperature_value& (0+255),b
  2996  0028FA  0E80               	movlw	128
  2997  0028FC  6FCE               	movwf	(_temperature_value+1)& (0+255),b
  2998  0028FE  0EC7               	movlw	199
  2999  002900  6FCF               	movwf	(_temperature_value+2)& (0+255),b
  3000  002902  0E43               	movlw	67
  3001  002904  6FD0               	movwf	(_temperature_value+3)& (0+255),b
  3002                           
  3003                           ;dht11.c: 70:         humidity_value = 399;
  3004  002906  0E00               	movlw	0
  3005  002908  6FD1               	movwf	_humidity_value& (0+255),b
  3006  00290A  0E80               	movlw	128
  3007  00290C  6FD2               	movwf	(_humidity_value+1)& (0+255),b
  3008  00290E  0EC7               	movlw	199
  3009  002910  6FD3               	movwf	(_humidity_value+2)& (0+255),b
  3010  002912  0E43               	movlw	67
  3011  002914  6FD4               	movwf	(_humidity_value+3)& (0+255),b
  3012  002916  EF0A  F015         	goto	l337
  3013  00291A                     l3819:
  3014                           
  3015                           ;dht11.c: 74:     temperature_value = temperature_dht11[0];
  3016  00291A  0100               	movlb	0	; () banked
  3017  00291C  51C3               	movf	_temperature_dht11& (0+255),w,b
  3018  00291E  6F60               	movwf	___xxtofl@val& (0+255),b
  3019  002920  6B61               	clrf	(___xxtofl@val+1)& (0+255),b
  3020  002922  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  3021  002924  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  3022  002926  0E00               	movlw	0
  3023  002928  EC1C  F012         	call	___xxtofl
  3024  00292C  C060  F0CD         	movff	?___xxtofl,_temperature_value
  3025  002930  C061  F0CE         	movff	?___xxtofl+1,_temperature_value+1
  3026  002934  C062  F0CF         	movff	?___xxtofl+2,_temperature_value+2
  3027  002938  C063  F0D0         	movff	?___xxtofl+3,_temperature_value+3
  3028  00293C                     
  3029                           ;dht11.c: 75:     if (temperature_dht11[1] & 0x80) {
  3030  00293C  0100               	movlb	0	; () banked
  3031  00293E  AFC4               	btfss	(_temperature_dht11+1)& (0+255),7,b
  3032  002940  EFA4  F014         	goto	u3191
  3033  002944  EFA6  F014         	goto	u3190
  3034  002948                     u3191:
  3035  002948  EFC0  F014         	goto	l3825
  3036  00294C                     u3190:
  3037  00294C                     
  3038                           ; BSR set to: 0
  3039                           ;dht11.c: 76:         temperature_value = -1 - temperature_value;
  3040  00294C  0E00               	movlw	0
  3041  00294E  6F97               	movwf	___flsub@b& (0+255),b
  3042  002950  0E00               	movlw	0
  3043  002952  6F98               	movwf	(___flsub@b+1)& (0+255),b
  3044  002954  0E80               	movlw	128
  3045  002956  6F99               	movwf	(___flsub@b+2)& (0+255),b
  3046  002958  0EBF               	movlw	191
  3047  00295A  6F9A               	movwf	(___flsub@b+3)& (0+255),b
  3048  00295C  C0CD  F09B         	movff	_temperature_value,___flsub@a
  3049  002960  C0CE  F09C         	movff	_temperature_value+1,___flsub@a+1
  3050  002964  C0CF  F09D         	movff	_temperature_value+2,___flsub@a+2
  3051  002968  C0D0  F09E         	movff	_temperature_value+3,___flsub@a+3
  3052  00296C  EC3A  F01C         	call	___flsub	;wreg free
  3053  002970  C097  F0CD         	movff	?___flsub,_temperature_value
  3054  002974  C098  F0CE         	movff	?___flsub+1,_temperature_value+1
  3055  002978  C099  F0CF         	movff	?___flsub+2,_temperature_value+2
  3056  00297C  C09A  F0D0         	movff	?___flsub+3,_temperature_value+3
  3057  002980                     l3825:
  3058                           
  3059                           ;dht11.c: 78:     temperature_value += (temperature_dht11[3] & 0x0f) * 0.1;
  3060  002980  C0CD  F087         	movff	_temperature_value,___fladd@b
  3061  002984  C0CE  F088         	movff	_temperature_value+1,___fladd@b+1
  3062  002988  C0CF  F089         	movff	_temperature_value+2,___fladd@b+2
  3063  00298C  C0D0  F08A         	movff	_temperature_value+3,___fladd@b+3
  3064  002990  0ECD               	movlw	205
  3065  002992  0100               	movlb	0	; () banked
  3066  002994  6F72               	movwf	___flmul@a& (0+255),b
  3067  002996  0ECC               	movlw	204
  3068  002998  6F73               	movwf	(___flmul@a+1)& (0+255),b
  3069  00299A  0ECC               	movlw	204
  3070  00299C  6F74               	movwf	(___flmul@a+2)& (0+255),b
  3071  00299E  0E3D               	movlw	61
  3072  0029A0  6F75               	movwf	(___flmul@a+3)& (0+255),b
  3073  0029A2  C0C6  F09F         	movff	_temperature_dht11+3,??_readTempAndHumid
  3074  0029A6  0E0F               	movlw	15
  3075  0029A8  179F               	andwf	??_readTempAndHumid& (0+255),f,b
  3076  0029AA  519F               	movf	??_readTempAndHumid& (0+255),w,b
  3077  0029AC  6F60               	movwf	___xxtofl@val& (0+255),b
  3078  0029AE  6B61               	clrf	(___xxtofl@val+1)& (0+255),b
  3079  0029B0  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  3080  0029B2  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  3081  0029B4  0E01               	movlw	1
  3082  0029B6  EC1C  F012         	call	___xxtofl
  3083  0029BA  C060  F06E         	movff	?___xxtofl,___flmul@b
  3084  0029BE  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
  3085  0029C2  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
  3086  0029C6  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
  3087  0029CA  ECE1  F00C         	call	___flmul	;wreg free
  3088  0029CE  C06E  F08B         	movff	?___flmul,___fladd@a
  3089  0029D2  C06F  F08C         	movff	?___flmul+1,___fladd@a+1
  3090  0029D6  C070  F08D         	movff	?___flmul+2,___fladd@a+2
  3091  0029DA  C071  F08E         	movff	?___flmul+3,___fladd@a+3
  3092  0029DE  EC27  F008         	call	___fladd	;wreg free
  3093  0029E2  C087  F0CD         	movff	?___fladd,_temperature_value
  3094  0029E6  C088  F0CE         	movff	?___fladd+1,_temperature_value+1
  3095  0029EA  C089  F0CF         	movff	?___fladd+2,_temperature_value+2
  3096  0029EE  C08A  F0D0         	movff	?___fladd+3,_temperature_value+3
  3097  0029F2                     
  3098                           ;dht11.c: 80:     humidity_value = humidity_dht11[0];
  3099  0029F2  0100               	movlb	0	; () banked
  3100  0029F4  51C1               	movf	_humidity_dht11& (0+255),w,b
  3101  0029F6  6F60               	movwf	___xxtofl@val& (0+255),b
  3102  0029F8  6B61               	clrf	(___xxtofl@val+1)& (0+255),b
  3103  0029FA  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  3104  0029FC  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  3105  0029FE  0E00               	movlw	0
  3106  002A00  EC1C  F012         	call	___xxtofl
  3107  002A04  C060  F0D1         	movff	?___xxtofl,_humidity_value
  3108  002A08  C061  F0D2         	movff	?___xxtofl+1,_humidity_value+1
  3109  002A0C  C062  F0D3         	movff	?___xxtofl+2,_humidity_value+2
  3110  002A10  C063  F0D4         	movff	?___xxtofl+3,_humidity_value+3
  3111  002A14                     l337:
  3112  002A14  0012               	return		;funcret
  3113  002A16                     __end_of_readTempAndHumid:
  3114                           	opt callstack 0
  3115                           
  3116 ;; *************** function _readDHT *****************
  3117 ;; Defined at:
  3118 ;;		line 28 in file "dht11.c"
  3119 ;; Parameters:    Size  Location     Type
  3120 ;;		None
  3121 ;; Auto vars:     Size  Location     Type
  3122 ;;  timeOut         2    6[BANK0 ] unsigned int 
  3123 ;;  checkSum        1    5[BANK0 ] unsigned char 
  3124 ;; Return value:  Size  Location     Type
  3125 ;;                  1    wreg      unsigned char 
  3126 ;; Registers used:
  3127 ;;		wreg, status,2, status,0, cstack
  3128 ;; Tracked objects:
  3129 ;;		On entry : 0/0
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3134 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3135 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3136 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3137 ;;Total ram usage:        4 bytes
  3138 ;; Hardware stack levels used:    1
  3139 ;; Hardware stack levels required when called:    7
  3140 ;; This function calls:
  3141 ;;		_getByte
  3142 ;; This function is called by:
  3143 ;;		_readTempAndHumid
  3144 ;; This function uses a non-reentrant model
  3145 ;;
  3146                           
  3147                           	psect	text19
  3148  002E44                     __ptext19:
  3149                           	opt callstack 0
  3150  002E44                     _readDHT:
  3151                           	opt callstack 20
  3152  002E44                     
  3153                           ;dht11.c: 29:     char checkSum;;dht11.c: 30:     unsigned int timeOut = 0xFFFF;
  3154  002E44  0100               	movlb	0	; () banked
  3155  002E46  6966               	setf	readDHT@timeOut& (0+255),b
  3156  002E48  6967               	setf	(readDHT@timeOut+1)& (0+255),b
  3157                           
  3158                           ;dht11.c: 31:     TRISCbits.RC3 = 0;
  3159  002E4A  9694               	bcf	148,3,c	;volatile
  3160                           
  3161                           ;dht11.c: 32:     LATCbits.LC3 = 1;
  3162  002E4C  868B               	bsf	139,3,c	;volatile
  3163  002E4E                     
  3164                           ; BSR set to: 0
  3165                           ;dht11.c: 33:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3166  002E4E  0E34               	movlw	52
  3167  002E50  0100               	movlb	0	; () banked
  3168  002E52  6F64               	movwf	??_readDHT& (0+255),b
  3169  002E54  0EF1               	movlw	241
  3170  002E56                     u3817:
  3171  002E56  2EE8               	decfsz	wreg,f,c
  3172  002E58  D7FE               	bra	u3817
  3173  002E5A  2F64               	decfsz	??_readDHT& (0+255),f,b
  3174  002E5C  D7FC               	bra	u3817
  3175  002E5E  D000               	nop2	
  3176  002E60                     
  3177                           ;dht11.c: 35:     LATCbits.LC3 = 0;
  3178  002E60  968B               	bcf	139,3,c	;volatile
  3179                           
  3180                           ;dht11.c: 36:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  3181  002E62  0E28               	movlw	40
  3182  002E64                     u3827:
  3183  002E64  2EE8               	decfsz	wreg,f,c
  3184  002E66  D7FE               	bra	u3827
  3185  002E68                     
  3186                           ;dht11.c: 37:     TRISCbits.RC3 = 1;
  3187  002E68  8694               	bsf	148,3,c	;volatile
  3188                           
  3189                           ;dht11.c: 40:     while(!PORTCbits.RC3) {
  3190  002E6A  EF47  F017         	goto	l324
  3191  002E6E                     l3385:
  3192                           
  3193                           ;dht11.c: 41:         timeOut--;
  3194  002E6E  0100               	movlb	0	; () banked
  3195  002E70  0766               	decf	readDHT@timeOut& (0+255),f,b
  3196  002E72  A0D8               	btfss	status,0,c
  3197  002E74  0767               	decf	(readDHT@timeOut+1)& (0+255),f,b
  3198  002E76                     
  3199                           ; BSR set to: 0
  3200                           ;dht11.c: 42:         if(!timeOut)
  3201  002E76  5166               	movf	readDHT@timeOut& (0+255),w,b
  3202  002E78  1167               	iorwf	(readDHT@timeOut+1)& (0+255),w,b
  3203  002E7A  A4D8               	btfss	status,2,c
  3204  002E7C  EF42  F017         	goto	u2561
  3205  002E80  EF44  F017         	goto	u2560
  3206  002E84                     u2561:
  3207  002E84  EF47  F017         	goto	l324
  3208  002E88                     u2560:
  3209  002E88                     l3389:
  3210                           
  3211                           ; BSR set to: 0
  3212                           ;dht11.c: 43:             return 0;
  3213  002E88  0E00               	movlw	0
  3214  002E8A  EF8B  F017         	goto	l327
  3215  002E8E                     l324:
  3216                           
  3217                           ;dht11.c: 40:     while(!PORTCbits.RC3) {
  3218  002E8E  A682               	btfss	130,3,c	;volatile
  3219  002E90  EF4C  F017         	goto	u2571
  3220  002E94  EF4E  F017         	goto	u2570
  3221  002E98                     u2571:
  3222  002E98  EF37  F017         	goto	l3385
  3223  002E9C                     u2570:
  3224  002E9C                     
  3225                           ;dht11.c: 46:     timeOut = 0xFFFF;
  3226  002E9C  0100               	movlb	0	; () banked
  3227  002E9E  6966               	setf	readDHT@timeOut& (0+255),b
  3228  002EA0  6967               	setf	(readDHT@timeOut+1)& (0+255),b
  3229                           
  3230                           ;dht11.c: 49:     while(PORTCbits.RC3) {
  3231  002EA2  EF61  F017         	goto	l329
  3232  002EA6                     l3393:
  3233                           
  3234                           ; BSR set to: 0
  3235                           ;dht11.c: 50:         timeOut--;
  3236  002EA6  0766               	decf	readDHT@timeOut& (0+255),f,b
  3237  002EA8  A0D8               	btfss	status,0,c
  3238  002EAA  0767               	decf	(readDHT@timeOut+1)& (0+255),f,b
  3239  002EAC                     
  3240                           ; BSR set to: 0
  3241                           ;dht11.c: 51:         if(!timeOut)
  3242  002EAC  5166               	movf	readDHT@timeOut& (0+255),w,b
  3243  002EAE  1167               	iorwf	(readDHT@timeOut+1)& (0+255),w,b
  3244  002EB0  A4D8               	btfss	status,2,c
  3245  002EB2  EF5D  F017         	goto	u2581
  3246  002EB6  EF5F  F017         	goto	u2580
  3247  002EBA                     u2581:
  3248  002EBA  EF61  F017         	goto	l329
  3249  002EBE                     u2580:
  3250  002EBE  EF44  F017         	goto	l3389
  3251  002EC2                     l329:
  3252                           
  3253                           ; BSR set to: 0
  3254                           ;dht11.c: 49:     while(PORTCbits.RC3) {
  3255  002EC2  B682               	btfsc	130,3,c	;volatile
  3256  002EC4  EF66  F017         	goto	u2591
  3257  002EC8  EF68  F017         	goto	u2590
  3258  002ECC                     u2591:
  3259  002ECC  EF53  F017         	goto	l3393
  3260  002ED0                     u2590:
  3261  002ED0                     
  3262                           ; BSR set to: 0
  3263                           ;dht11.c: 55:     humidity_dht11[0] = getByte();
  3264  002ED0  ECA3  F019         	call	_getByte	;wreg free
  3265  002ED4  0100               	movlb	0	; () banked
  3266  002ED6  6FC1               	movwf	_humidity_dht11& (0+255),b
  3267                           
  3268                           ;dht11.c: 56:     humidity_dht11[1] = getByte();
  3269  002ED8  ECA3  F019         	call	_getByte	;wreg free
  3270  002EDC  0100               	movlb	0	; () banked
  3271  002EDE  6FC2               	movwf	(_humidity_dht11+1)& (0+255),b
  3272                           
  3273                           ;dht11.c: 57:     temperature_dht11[0] = getByte();
  3274  002EE0  ECA3  F019         	call	_getByte	;wreg free
  3275  002EE4  0100               	movlb	0	; () banked
  3276  002EE6  6FC3               	movwf	_temperature_dht11& (0+255),b
  3277                           
  3278                           ;dht11.c: 58:     temperature_dht11[1] = getByte();
  3279  002EE8  ECA3  F019         	call	_getByte	;wreg free
  3280  002EEC  0100               	movlb	0	; () banked
  3281  002EEE  6FC4               	movwf	(_temperature_dht11+1)& (0+255),b
  3282                           
  3283                           ;dht11.c: 59:     checkSum = getByte();
  3284  002EF0  ECA3  F019         	call	_getByte	;wreg free
  3285  002EF4  0100               	movlb	0	; () banked
  3286  002EF6  6F65               	movwf	readDHT@checkSum& (0+255),b
  3287  002EF8                     
  3288                           ; BSR set to: 0
  3289                           ;dht11.c: 61:     if( (char)( humidity_dht11[0] + humidity_dht11[1] + temperature_dht11[
      +                          0] + temperature_dht11[1] ) != checkSum )
  3290  002EF8  51C2               	movf	(_humidity_dht11+1)& (0+255),w,b
  3291  002EFA  25C4               	addwf	(_temperature_dht11+1)& (0+255),w,b
  3292  002EFC  25C1               	addwf	_humidity_dht11& (0+255),w,b
  3293  002EFE  25C3               	addwf	_temperature_dht11& (0+255),w,b
  3294  002F00  1965               	xorwf	readDHT@checkSum& (0+255),w,b
  3295  002F02  B4D8               	btfsc	status,2,c
  3296  002F04  EF86  F017         	goto	u2601
  3297  002F08  EF88  F017         	goto	u2600
  3298  002F0C                     u2601:
  3299  002F0C  EF8A  F017         	goto	l3409
  3300  002F10                     u2600:
  3301  002F10  EF44  F017         	goto	l3389
  3302  002F14                     l3409:
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;dht11.c: 64:     return 1;
  3306  002F14  0E01               	movlw	1
  3307  002F16                     l327:
  3308                           
  3309                           ; BSR set to: 0
  3310  002F16  0012               	return		;funcret
  3311  002F18                     __end_of_readDHT:
  3312                           	opt callstack 0
  3313                           
  3314 ;; *************** function _getByte *****************
  3315 ;; Defined at:
  3316 ;;		line 3 in file "dht11.c"
  3317 ;; Parameters:    Size  Location     Type
  3318 ;;		None
  3319 ;; Auto vars:     Size  Location     Type
  3320 ;;  timeOut         2    1[BANK0 ] unsigned int 
  3321 ;;  i               1    3[BANK0 ] unsigned char 
  3322 ;;  byteReceived    1    0[BANK0 ] unsigned char 
  3323 ;; Return value:  Size  Location     Type
  3324 ;;                  1    wreg      unsigned char 
  3325 ;; Registers used:
  3326 ;;		wreg, status,2, status,0
  3327 ;; Tracked objects:
  3328 ;;		On entry : 0/0
  3329 ;;		On exit  : 0/0
  3330 ;;		Unchanged: 0/0
  3331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3333 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3335 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3336 ;;Total ram usage:        4 bytes
  3337 ;; Hardware stack levels used:    1
  3338 ;; Hardware stack levels required when called:    6
  3339 ;; This function calls:
  3340 ;;		Nothing
  3341 ;; This function is called by:
  3342 ;;		_readDHT
  3343 ;; This function uses a non-reentrant model
  3344 ;;
  3345                           
  3346                           	psect	text20
  3347  003346                     __ptext20:
  3348                           	opt callstack 0
  3349  003346                     _getByte:
  3350                           	opt callstack 20
  3351  003346                     
  3352                           ;dht11.c: 4:     char i;;dht11.c: 5:     char byteReceived = 0;
  3353  003346  0E00               	movlw	0
  3354  003348  0100               	movlb	0	; () banked
  3355  00334A  6F60               	movwf	getByte@byteReceived& (0+255),b
  3356                           
  3357                           ;dht11.c: 6:     unsigned int timeOut;;dht11.c: 8:     for(i = 0b1000000; i != 0x00; i =
      +                           i >> 1) {
  3358  00334C  0E40               	movlw	64
  3359  00334E  6F63               	movwf	getByte@i& (0+255),b
  3360  003350                     l310:
  3361                           
  3362                           ; BSR set to: 0
  3363                           ;dht11.c: 9:         timeOut = 0xFFFF;
  3364  003350  6961               	setf	getByte@timeOut& (0+255),b
  3365  003352  6962               	setf	(getByte@timeOut+1)& (0+255),b
  3366                           
  3367                           ;dht11.c: 10:         while(!PORTCbits.RC3) {
  3368  003354  EFBB  F019         	goto	l312
  3369  003358                     l3083:
  3370                           
  3371                           ; BSR set to: 0
  3372                           ;dht11.c: 11:             timeOut--;
  3373  003358  0761               	decf	getByte@timeOut& (0+255),f,b
  3374  00335A  A0D8               	btfss	status,0,c
  3375  00335C  0762               	decf	(getByte@timeOut+1)& (0+255),f,b
  3376  00335E                     
  3377                           ; BSR set to: 0
  3378                           ;dht11.c: 12:             if(!timeOut) return 0;
  3379  00335E  5161               	movf	getByte@timeOut& (0+255),w,b
  3380  003360  1162               	iorwf	(getByte@timeOut+1)& (0+255),w,b
  3381  003362  A4D8               	btfss	status,2,c
  3382  003364  EFB6  F019         	goto	u2011
  3383  003368  EFB8  F019         	goto	u2010
  3384  00336C                     u2011:
  3385  00336C  EFBB  F019         	goto	l312
  3386  003370                     u2010:
  3387  003370                     l3087:
  3388                           
  3389                           ; BSR set to: 0
  3390  003370  0E00               	movlw	0
  3391  003372  EFF7  F019         	goto	l315
  3392  003376                     l312:
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;dht11.c: 10:         while(!PORTCbits.RC3) {
  3396  003376  A682               	btfss	130,3,c	;volatile
  3397  003378  EFC0  F019         	goto	u2021
  3398  00337C  EFC2  F019         	goto	u2020
  3399  003380                     u2021:
  3400  003380  EFAC  F019         	goto	l3083
  3401  003384                     u2020:
  3402  003384                     
  3403                           ; BSR set to: 0
  3404                           ;dht11.c: 14:         _delay((unsigned long)((40)*(8000000/4000000.0)));
  3405  003384  0E1A               	movlw	26
  3406  003386                     u3837:
  3407  003386  2EE8               	decfsz	wreg,f,c
  3408  003388  D7FE               	bra	u3837
  3409  00338A  D000               	nop2	
  3410  00338C                     
  3411                           ;dht11.c: 15:         if(PORTCbits.RC3) {
  3412  00338C  A682               	btfss	130,3,c	;volatile
  3413  00338E  EFCB  F019         	goto	u2031
  3414  003392  EFCD  F019         	goto	u2030
  3415  003396                     u2031:
  3416  003396  EFEA  F019         	goto	l3107
  3417  00339A                     u2030:
  3418  00339A                     
  3419                           ;dht11.c: 16:             byteReceived = byteReceived | i;
  3420  00339A  0100               	movlb	0	; () banked
  3421  00339C  5160               	movf	getByte@byteReceived& (0+255),w,b
  3422  00339E  1163               	iorwf	getByte@i& (0+255),w,b
  3423  0033A0  6F60               	movwf	getByte@byteReceived& (0+255),b
  3424  0033A2                     
  3425                           ; BSR set to: 0
  3426                           ;dht11.c: 17:             timeOut = 0xFFFF;
  3427  0033A2  6961               	setf	getByte@timeOut& (0+255),b
  3428  0033A4  6962               	setf	(getByte@timeOut+1)& (0+255),b
  3429                           
  3430                           ;dht11.c: 18:             while(PORTCbits.RC3) {
  3431  0033A6  EFE3  F019         	goto	l318
  3432  0033AA                     l3099:
  3433                           
  3434                           ; BSR set to: 0
  3435                           ;dht11.c: 19:                 timeOut--;
  3436  0033AA  0761               	decf	getByte@timeOut& (0+255),f,b
  3437  0033AC  A0D8               	btfss	status,0,c
  3438  0033AE  0762               	decf	(getByte@timeOut+1)& (0+255),f,b
  3439  0033B0                     
  3440                           ; BSR set to: 0
  3441                           ;dht11.c: 20:                 if(!timeOut) return 0;
  3442  0033B0  5161               	movf	getByte@timeOut& (0+255),w,b
  3443  0033B2  1162               	iorwf	(getByte@timeOut+1)& (0+255),w,b
  3444  0033B4  A4D8               	btfss	status,2,c
  3445  0033B6  EFDF  F019         	goto	u2041
  3446  0033BA  EFE1  F019         	goto	u2040
  3447  0033BE                     u2041:
  3448  0033BE  EFE3  F019         	goto	l318
  3449  0033C2                     u2040:
  3450  0033C2  EFB8  F019         	goto	l3087
  3451  0033C6                     l318:
  3452                           
  3453                           ; BSR set to: 0
  3454                           ;dht11.c: 18:             while(PORTCbits.RC3) {
  3455  0033C6  B682               	btfsc	130,3,c	;volatile
  3456  0033C8  EFE8  F019         	goto	u2051
  3457  0033CC  EFEA  F019         	goto	u2050
  3458  0033D0                     u2051:
  3459  0033D0  EFD5  F019         	goto	l3099
  3460  0033D4                     u2050:
  3461  0033D4                     l3107:
  3462                           
  3463                           ;dht11.c: 23:     }
  3464  0033D4  0100               	movlb	0	; () banked
  3465  0033D6  90D8               	bcf	status,0,c
  3466  0033D8  3163               	rrcf	getByte@i& (0+255),w,b
  3467  0033DA  6F63               	movwf	getByte@i& (0+255),b
  3468  0033DC                     
  3469                           ; BSR set to: 0
  3470  0033DC  5163               	movf	getByte@i& (0+255),w,b
  3471  0033DE  A4D8               	btfss	status,2,c
  3472  0033E0  EFF4  F019         	goto	u2061
  3473  0033E4  EFF6  F019         	goto	u2060
  3474  0033E8                     u2061:
  3475  0033E8  EFA8  F019         	goto	l310
  3476  0033EC                     u2060:
  3477  0033EC                     
  3478                           ; BSR set to: 0
  3479                           ;dht11.c: 25:     return byteReceived;
  3480  0033EC  5160               	movf	getByte@byteReceived& (0+255),w,b
  3481  0033EE                     l315:
  3482                           
  3483                           ; BSR set to: 0
  3484  0033EE  0012               	return		;funcret
  3485  0033F0                     __end_of_getByte:
  3486                           	opt callstack 0
  3487                           
  3488 ;; *************** function ___xxtofl *****************
  3489 ;; Defined at:
  3490 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  3491 ;; Parameters:    Size  Location     Type
  3492 ;;  sign            1    wreg     unsigned char 
  3493 ;;  val             4    0[BANK0 ] long 
  3494 ;; Auto vars:     Size  Location     Type
  3495 ;;  sign            1    8[BANK0 ] unsigned char 
  3496 ;;  arg             4   10[BANK0 ] unsigned long 
  3497 ;;  exp             1    9[BANK0 ] unsigned char 
  3498 ;; Return value:  Size  Location     Type
  3499 ;;                  4    0[BANK0 ] unsigned char 
  3500 ;; Registers used:
  3501 ;;		wreg, status,2, status,0
  3502 ;; Tracked objects:
  3503 ;;		On entry : 0/0
  3504 ;;		On exit  : 0/0
  3505 ;;		Unchanged: 0/0
  3506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3507 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3508 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3509 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3510 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3511 ;;Total ram usage:       14 bytes
  3512 ;; Hardware stack levels used:    1
  3513 ;; Hardware stack levels required when called:    6
  3514 ;; This function calls:
  3515 ;;		Nothing
  3516 ;; This function is called by:
  3517 ;;		_readTempAndHumid
  3518 ;; This function uses a non-reentrant model
  3519 ;;
  3520                           
  3521                           	psect	text21
  3522  002438                     __ptext21:
  3523                           	opt callstack 0
  3524  002438                     ___xxtofl:
  3525                           	opt callstack 21
  3526                           
  3527                           ; BSR set to: 0
  3528                           ;incstack = 0
  3529                           ;___xxtofl@sign stored from wreg
  3530  002438  0100               	movlb	0	; () banked
  3531  00243A  6F68               	movwf	___xxtofl@sign& (0+255),b
  3532  00243C  0100               	movlb	0	; () banked
  3533  00243E  5168               	movf	___xxtofl@sign& (0+255),w,b
  3534  002440  B4D8               	btfsc	status,2,c
  3535  002442  EF25  F012         	goto	u3061
  3536  002446  EF27  F012         	goto	u3060
  3537  00244A                     u3061:
  3538  00244A  EF49  F012         	goto	l1481
  3539  00244E                     u3060:
  3540  00244E                     
  3541                           ; BSR set to: 0
  3542  00244E  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  3543  002450  EF2E  F012         	goto	u3070
  3544  002454  EF2C  F012         	goto	u3071
  3545  002458                     u3071:
  3546  002458  EF49  F012         	goto	l1481
  3547  00245C                     u3070:
  3548  00245C                     
  3549                           ; BSR set to: 0
  3550  00245C  C060  F064         	movff	___xxtofl@val,??___xxtofl
  3551  002460  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
  3552  002464  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
  3553  002468  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
  3554  00246C  1F64               	comf	??___xxtofl& (0+255),f,b
  3555  00246E  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
  3556  002470  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
  3557  002472  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
  3558  002474  2B64               	incf	??___xxtofl& (0+255),f,b
  3559  002476  0E00               	movlw	0
  3560  002478  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
  3561  00247A  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
  3562  00247C  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
  3563  00247E  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
  3564  002482  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
  3565  002486  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
  3566  00248A  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
  3567  00248E  EF51  F012         	goto	l3723
  3568  002492                     l1481:
  3569                           
  3570                           ; BSR set to: 0
  3571  002492  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
  3572  002496  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3573  00249A  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3574  00249E  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3575  0024A2                     l3723:
  3576                           
  3577                           ; BSR set to: 0
  3578  0024A2  5160               	movf	___xxtofl@val& (0+255),w,b
  3579  0024A4  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  3580  0024A6  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  3581  0024A8  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  3582  0024AA  A4D8               	btfss	status,2,c
  3583  0024AC  EF5A  F012         	goto	u3081
  3584  0024B0  EF5C  F012         	goto	u3080
  3585  0024B4                     u3081:
  3586  0024B4  EF66  F012         	goto	l3729
  3587  0024B8                     u3080:
  3588  0024B8                     
  3589                           ; BSR set to: 0
  3590  0024B8  0E00               	movlw	0
  3591  0024BA  6F60               	movwf	?___xxtofl& (0+255),b
  3592  0024BC  0E00               	movlw	0
  3593  0024BE  6F61               	movwf	(?___xxtofl+1)& (0+255),b
  3594  0024C0  0E00               	movlw	0
  3595  0024C2  6F62               	movwf	(?___xxtofl+2)& (0+255),b
  3596  0024C4  0E00               	movlw	0
  3597  0024C6  6F63               	movwf	(?___xxtofl+3)& (0+255),b
  3598  0024C8  EFF7  F012         	goto	l1484
  3599  0024CC                     l3729:
  3600                           
  3601                           ; BSR set to: 0
  3602  0024CC  0E96               	movlw	150
  3603  0024CE  6F69               	movwf	___xxtofl@exp& (0+255),b
  3604  0024D0  EF70  F012         	goto	l3733
  3605  0024D4                     l3731:
  3606                           
  3607                           ; BSR set to: 0
  3608  0024D4  2B69               	incf	___xxtofl@exp& (0+255),f,b
  3609  0024D6  90D8               	bcf	status,0,c
  3610  0024D8  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  3611  0024DA  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  3612  0024DC  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  3613  0024DE  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  3614  0024E0                     l3733:
  3615                           
  3616                           ; BSR set to: 0
  3617  0024E0  0E00               	movlw	0
  3618  0024E2  156A               	andwf	___xxtofl@arg& (0+255),w,b
  3619  0024E4  6F64               	movwf	??___xxtofl& (0+255),b
  3620  0024E6  0E00               	movlw	0
  3621  0024E8  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  3622  0024EA  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  3623  0024EC  0E00               	movlw	0
  3624  0024EE  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  3625  0024F0  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  3626  0024F2  0EFE               	movlw	254
  3627  0024F4  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  3628  0024F6  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  3629  0024F8  5164               	movf	??___xxtofl& (0+255),w,b
  3630  0024FA  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  3631  0024FC  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  3632  0024FE  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  3633  002500  A4D8               	btfss	status,2,c
  3634  002502  EF85  F012         	goto	u3091
  3635  002506  EF87  F012         	goto	u3090
  3636  00250A                     u3091:
  3637  00250A  EF6A  F012         	goto	l3731
  3638  00250E                     u3090:
  3639  00250E  EF95  F012         	goto	l1488
  3640  002512                     l3735:
  3641                           
  3642                           ; BSR set to: 0
  3643  002512  2B69               	incf	___xxtofl@exp& (0+255),f,b
  3644  002514                     
  3645                           ; BSR set to: 0
  3646  002514  0E01               	movlw	1
  3647  002516  276A               	addwf	___xxtofl@arg& (0+255),f,b
  3648  002518  0E00               	movlw	0
  3649  00251A  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  3650  00251C  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  3651  00251E  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  3652  002520                     
  3653                           ; BSR set to: 0
  3654  002520  90D8               	bcf	status,0,c
  3655  002522  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  3656  002524  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  3657  002526  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  3658  002528  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  3659  00252A                     l1488:
  3660                           
  3661                           ; BSR set to: 0
  3662  00252A  0E00               	movlw	0
  3663  00252C  156A               	andwf	___xxtofl@arg& (0+255),w,b
  3664  00252E  6F64               	movwf	??___xxtofl& (0+255),b
  3665  002530  0E00               	movlw	0
  3666  002532  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  3667  002534  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  3668  002536  0E00               	movlw	0
  3669  002538  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  3670  00253A  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  3671  00253C  0EFF               	movlw	255
  3672  00253E  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  3673  002540  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  3674  002542  5164               	movf	??___xxtofl& (0+255),w,b
  3675  002544  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  3676  002546  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  3677  002548  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  3678  00254A  A4D8               	btfss	status,2,c
  3679  00254C  EFAA  F012         	goto	u3101
  3680  002550  EFAC  F012         	goto	u3100
  3681  002554                     u3101:
  3682  002554  EF89  F012         	goto	l3735
  3683  002558                     u3100:
  3684  002558  EFB4  F012         	goto	l3743
  3685  00255C                     l3741:
  3686                           
  3687                           ; BSR set to: 0
  3688  00255C  0769               	decf	___xxtofl@exp& (0+255),f,b
  3689  00255E  90D8               	bcf	status,0,c
  3690  002560  376A               	rlcf	___xxtofl@arg& (0+255),f,b
  3691  002562  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  3692  002564  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  3693  002566  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  3694  002568                     l3743:
  3695                           
  3696                           ; BSR set to: 0
  3697  002568  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  3698  00256A  EFB9  F012         	goto	u3111
  3699  00256E  EFBB  F012         	goto	u3110
  3700  002572                     u3111:
  3701  002572  EFC3  F012         	goto	l1495
  3702  002576                     u3110:
  3703  002576                     
  3704                           ; BSR set to: 0
  3705  002576  0E02               	movlw	2
  3706  002578  6169               	cpfslt	___xxtofl@exp& (0+255),b
  3707  00257A  EFC1  F012         	goto	u3121
  3708  00257E  EFC3  F012         	goto	u3120
  3709  002582                     u3121:
  3710  002582  EFAE  F012         	goto	l3741
  3711  002586                     u3120:
  3712  002586                     l1495:
  3713                           
  3714                           ; BSR set to: 0
  3715  002586  B169               	btfsc	___xxtofl@exp& (0+255),0,b
  3716  002588  EFC8  F012         	goto	u3131
  3717  00258C  EFCA  F012         	goto	u3130
  3718  002590                     u3131:
  3719  002590  EFCB  F012         	goto	l3749
  3720  002594                     u3130:
  3721  002594                     
  3722                           ; BSR set to: 0
  3723  002594  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  3724  002596                     l3749:
  3725                           
  3726                           ; BSR set to: 0
  3727  002596  90D8               	bcf	status,0,c
  3728  002598  3369               	rrcf	___xxtofl@exp& (0+255),f,b
  3729  00259A                     
  3730                           ; BSR set to: 0
  3731  00259A  C069  F064         	movff	___xxtofl@exp,??___xxtofl
  3732  00259E  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  3733  0025A0  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  3734  0025A2  6B67               	clrf	(??___xxtofl+3)& (0+255),b
  3735  0025A4  C064  F067         	movff	??___xxtofl,??___xxtofl+3
  3736  0025A8  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  3737  0025AA  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  3738  0025AC  6B64               	clrf	??___xxtofl& (0+255),b
  3739  0025AE  5164               	movf	??___xxtofl& (0+255),w,b
  3740  0025B0  136A               	iorwf	___xxtofl@arg& (0+255),f,b
  3741  0025B2  5165               	movf	(??___xxtofl+1)& (0+255),w,b
  3742  0025B4  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  3743  0025B6  5166               	movf	(??___xxtofl+2)& (0+255),w,b
  3744  0025B8  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  3745  0025BA  5167               	movf	(??___xxtofl+3)& (0+255),w,b
  3746  0025BC  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  3747  0025BE                     
  3748                           ; BSR set to: 0
  3749  0025BE  5168               	movf	___xxtofl@sign& (0+255),w,b
  3750  0025C0  B4D8               	btfsc	status,2,c
  3751  0025C2  EFE5  F012         	goto	u3141
  3752  0025C6  EFE7  F012         	goto	u3140
  3753  0025CA                     u3141:
  3754  0025CA  EFEF  F012         	goto	l3759
  3755  0025CE                     u3140:
  3756  0025CE                     
  3757                           ; BSR set to: 0
  3758  0025CE  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  3759  0025D0  EFEE  F012         	goto	u3150
  3760  0025D4  EFEC  F012         	goto	u3151
  3761  0025D8                     u3151:
  3762  0025D8  EFEF  F012         	goto	l3759
  3763  0025DC                     u3150:
  3764  0025DC                     
  3765                           ; BSR set to: 0
  3766  0025DC  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  3767  0025DE                     l3759:
  3768                           
  3769                           ; BSR set to: 0
  3770  0025DE  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
  3771  0025E2  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
  3772  0025E6  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
  3773  0025EA  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
  3774  0025EE                     l1484:
  3775                           
  3776                           ; BSR set to: 0
  3777  0025EE  0012               	return		;funcret
  3778  0025F0                     __end_of___xxtofl:
  3779                           	opt callstack 0
  3780                           
  3781 ;; *************** function ___flsub *****************
  3782 ;; Defined at:
  3783 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  3784 ;; Parameters:    Size  Location     Type
  3785 ;;  b               4   55[BANK0 ] unsigned char 
  3786 ;;  a               4   59[BANK0 ] unsigned char 
  3787 ;; Auto vars:     Size  Location     Type
  3788 ;;		None
  3789 ;; Return value:  Size  Location     Type
  3790 ;;                  4   55[BANK0 ] unsigned char 
  3791 ;; Registers used:
  3792 ;;		wreg, status,2, status,0, cstack
  3793 ;; Tracked objects:
  3794 ;;		On entry : 0/0
  3795 ;;		On exit  : 0/0
  3796 ;;		Unchanged: 0/0
  3797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3798 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3801 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3802 ;;Total ram usage:        8 bytes
  3803 ;; Hardware stack levels used:    1
  3804 ;; Hardware stack levels required when called:    7
  3805 ;; This function calls:
  3806 ;;		___fladd
  3807 ;; This function is called by:
  3808 ;;		_readTempAndHumid
  3809 ;; This function uses a non-reentrant model
  3810 ;;
  3811                           
  3812                           	psect	text22
  3813  003874                     __ptext22:
  3814                           	opt callstack 0
  3815  003874                     ___flsub:
  3816                           	opt callstack 20
  3817  003874  0E00               	movlw	0
  3818  003876  0100               	movlb	0	; () banked
  3819  003878  1B9B               	xorwf	___flsub@a& (0+255),f,b
  3820  00387A  0E00               	movlw	0
  3821  00387C  1B9C               	xorwf	(___flsub@a+1)& (0+255),f,b
  3822  00387E  0E00               	movlw	0
  3823  003880  1B9D               	xorwf	(___flsub@a+2)& (0+255),f,b
  3824  003882  0E80               	movlw	128
  3825  003884  1B9E               	xorwf	(___flsub@a+3)& (0+255),f,b
  3826  003886                     
  3827                           ; BSR set to: 0
  3828  003886  C097  F087         	movff	___flsub@b,___fladd@b
  3829  00388A  C098  F088         	movff	___flsub@b+1,___fladd@b+1
  3830  00388E  C099  F089         	movff	___flsub@b+2,___fladd@b+2
  3831  003892  C09A  F08A         	movff	___flsub@b+3,___fladd@b+3
  3832  003896  C09B  F08B         	movff	___flsub@a,___fladd@a
  3833  00389A  C09C  F08C         	movff	___flsub@a+1,___fladd@a+1
  3834  00389E  C09D  F08D         	movff	___flsub@a+2,___fladd@a+2
  3835  0038A2  C09E  F08E         	movff	___flsub@a+3,___fladd@a+3
  3836  0038A6  EC27  F008         	call	___fladd	;wreg free
  3837  0038AA  C087  F097         	movff	?___fladd,?___flsub
  3838  0038AE  C088  F098         	movff	?___fladd+1,?___flsub+1
  3839  0038B2  C089  F099         	movff	?___fladd+2,?___flsub+2
  3840  0038B6  C08A  F09A         	movff	?___fladd+3,?___flsub+3
  3841  0038BA  0012               	return		;funcret
  3842  0038BC                     __end_of___flsub:
  3843                           	opt callstack 0
  3844                           
  3845 ;; *************** function ___fladd *****************
  3846 ;; Defined at:
  3847 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;  b               4   39[BANK0 ] unsigned char 
  3850 ;;  a               4   43[BANK0 ] unsigned char 
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;  grs             1   54[BANK0 ] unsigned char 
  3853 ;;  bexp            1   53[BANK0 ] unsigned char 
  3854 ;;  aexp            1   52[BANK0 ] unsigned char 
  3855 ;;  signs           1   51[BANK0 ] unsigned char 
  3856 ;; Return value:  Size  Location     Type
  3857 ;;                  4   39[BANK0 ] unsigned char 
  3858 ;; Registers used:
  3859 ;;		wreg, status,2, status,0
  3860 ;; Tracked objects:
  3861 ;;		On entry : 0/0
  3862 ;;		On exit  : 0/0
  3863 ;;		Unchanged: 0/0
  3864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3865 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3866 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3867 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3868 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3869 ;;Total ram usage:       16 bytes
  3870 ;; Hardware stack levels used:    1
  3871 ;; Hardware stack levels required when called:    6
  3872 ;; This function calls:
  3873 ;;		Nothing
  3874 ;; This function is called by:
  3875 ;;		_readTempAndHumid
  3876 ;;		___flsub
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880                           	psect	text23
  3881  00104E                     __ptext23:
  3882                           	opt callstack 0
  3883  00104E                     ___fladd:
  3884                           	opt callstack 20
  3885  00104E  0100               	movlb	0	; () banked
  3886  001050  518A               	movf	(___fladd@b+3)& (0+255),w,b
  3887  001052  0B80               	andlw	128
  3888  001054  6F93               	movwf	___fladd@signs& (0+255),b
  3889  001056  518A               	movf	(___fladd@b+3)& (0+255),w,b
  3890  001058  258A               	addwf	(___fladd@b+3)& (0+255),w,b
  3891  00105A  6F95               	movwf	___fladd@bexp& (0+255),b
  3892  00105C                     
  3893                           ; BSR set to: 0
  3894  00105C  AF89               	btfss	(___fladd@b+2)& (0+255),7,b
  3895  00105E  EF33  F008         	goto	u2071
  3896  001062  EF35  F008         	goto	u2070
  3897  001066                     u2071:
  3898  001066  EF36  F008         	goto	l3131
  3899  00106A                     u2070:
  3900  00106A                     
  3901                           ; BSR set to: 0
  3902  00106A  8195               	bsf	___fladd@bexp& (0+255),0,b
  3903  00106C                     l3131:
  3904                           
  3905                           ; BSR set to: 0
  3906  00106C  5195               	movf	___fladd@bexp& (0+255),w,b
  3907  00106E  B4D8               	btfsc	status,2,c
  3908  001070  EF3C  F008         	goto	u2081
  3909  001074  EF3E  F008         	goto	u2080
  3910  001078                     u2081:
  3911  001078  EF53  F008         	goto	l3141
  3912  00107C                     u2080:
  3913  00107C                     
  3914                           ; BSR set to: 0
  3915  00107C  2995               	incf	___fladd@bexp& (0+255),w,b
  3916  00107E  A4D8               	btfss	status,2,c
  3917  001080  EF44  F008         	goto	u2091
  3918  001084  EF46  F008         	goto	u2090
  3919  001088                     u2091:
  3920  001088  EF4E  F008         	goto	l3137
  3921  00108C                     u2090:
  3922  00108C                     
  3923                           ; BSR set to: 0
  3924  00108C  0E00               	movlw	0
  3925  00108E  6F87               	movwf	___fladd@b& (0+255),b
  3926  001090  0E00               	movlw	0
  3927  001092  6F88               	movwf	(___fladd@b+1)& (0+255),b
  3928  001094  0E00               	movlw	0
  3929  001096  6F89               	movwf	(___fladd@b+2)& (0+255),b
  3930  001098  0E00               	movlw	0
  3931  00109A  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  3932  00109C                     l3137:
  3933                           
  3934                           ; BSR set to: 0
  3935  00109C  8F89               	bsf	(___fladd@b+2)& (0+255),7,b
  3936  00109E                     
  3937                           ; BSR set to: 0
  3938  00109E  0E00               	movlw	0
  3939  0010A0  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  3940  0010A2  EF5B  F008         	goto	l3143
  3941  0010A6                     l3141:
  3942                           
  3943                           ; BSR set to: 0
  3944  0010A6  0E00               	movlw	0
  3945  0010A8  6F87               	movwf	___fladd@b& (0+255),b
  3946  0010AA  0E00               	movlw	0
  3947  0010AC  6F88               	movwf	(___fladd@b+1)& (0+255),b
  3948  0010AE  0E00               	movlw	0
  3949  0010B0  6F89               	movwf	(___fladd@b+2)& (0+255),b
  3950  0010B2  0E00               	movlw	0
  3951  0010B4  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  3952  0010B6                     l3143:
  3953                           
  3954                           ; BSR set to: 0
  3955  0010B6  518E               	movf	(___fladd@a+3)& (0+255),w,b
  3956  0010B8  0B80               	andlw	128
  3957  0010BA  6F94               	movwf	___fladd@aexp& (0+255),b
  3958  0010BC                     
  3959                           ; BSR set to: 0
  3960  0010BC  5193               	movf	___fladd@signs& (0+255),w,b
  3961  0010BE  1994               	xorwf	___fladd@aexp& (0+255),w,b
  3962  0010C0  B4D8               	btfsc	status,2,c
  3963  0010C2  EF65  F008         	goto	u2101
  3964  0010C6  EF67  F008         	goto	u2100
  3965  0010CA                     u2101:
  3966  0010CA  EF68  F008         	goto	l3149
  3967  0010CE                     u2100:
  3968  0010CE                     
  3969                           ; BSR set to: 0
  3970  0010CE  8D93               	bsf	___fladd@signs& (0+255),6,b
  3971  0010D0                     l3149:
  3972                           
  3973                           ; BSR set to: 0
  3974  0010D0  518E               	movf	(___fladd@a+3)& (0+255),w,b
  3975  0010D2  258E               	addwf	(___fladd@a+3)& (0+255),w,b
  3976  0010D4  6F94               	movwf	___fladd@aexp& (0+255),b
  3977  0010D6                     
  3978                           ; BSR set to: 0
  3979  0010D6  AF8D               	btfss	(___fladd@a+2)& (0+255),7,b
  3980  0010D8  EF70  F008         	goto	u2111
  3981  0010DC  EF72  F008         	goto	u2110
  3982  0010E0                     u2111:
  3983  0010E0  EF73  F008         	goto	l3155
  3984  0010E4                     u2110:
  3985  0010E4                     
  3986                           ; BSR set to: 0
  3987  0010E4  8194               	bsf	___fladd@aexp& (0+255),0,b
  3988  0010E6                     l3155:
  3989                           
  3990                           ; BSR set to: 0
  3991  0010E6  5194               	movf	___fladd@aexp& (0+255),w,b
  3992  0010E8  B4D8               	btfsc	status,2,c
  3993  0010EA  EF79  F008         	goto	u2121
  3994  0010EE  EF7B  F008         	goto	u2120
  3995  0010F2                     u2121:
  3996  0010F2  EF90  F008         	goto	l3165
  3997  0010F6                     u2120:
  3998  0010F6                     
  3999                           ; BSR set to: 0
  4000  0010F6  2994               	incf	___fladd@aexp& (0+255),w,b
  4001  0010F8  A4D8               	btfss	status,2,c
  4002  0010FA  EF81  F008         	goto	u2131
  4003  0010FE  EF83  F008         	goto	u2130
  4004  001102                     u2131:
  4005  001102  EF8B  F008         	goto	l3161
  4006  001106                     u2130:
  4007  001106                     
  4008                           ; BSR set to: 0
  4009  001106  0E00               	movlw	0
  4010  001108  6F8B               	movwf	___fladd@a& (0+255),b
  4011  00110A  0E00               	movlw	0
  4012  00110C  6F8C               	movwf	(___fladd@a+1)& (0+255),b
  4013  00110E  0E00               	movlw	0
  4014  001110  6F8D               	movwf	(___fladd@a+2)& (0+255),b
  4015  001112  0E00               	movlw	0
  4016  001114  6F8E               	movwf	(___fladd@a+3)& (0+255),b
  4017  001116                     l3161:
  4018                           
  4019                           ; BSR set to: 0
  4020  001116  8F8D               	bsf	(___fladd@a+2)& (0+255),7,b
  4021  001118                     
  4022                           ; BSR set to: 0
  4023  001118  0E00               	movlw	0
  4024  00111A  6F8E               	movwf	(___fladd@a+3)& (0+255),b
  4025  00111C  EF98  F008         	goto	l3167
  4026  001120                     l3165:
  4027                           
  4028                           ; BSR set to: 0
  4029  001120  0E00               	movlw	0
  4030  001122  6F8B               	movwf	___fladd@a& (0+255),b
  4031  001124  0E00               	movlw	0
  4032  001126  6F8C               	movwf	(___fladd@a+1)& (0+255),b
  4033  001128  0E00               	movlw	0
  4034  00112A  6F8D               	movwf	(___fladd@a+2)& (0+255),b
  4035  00112C  0E00               	movlw	0
  4036  00112E  6F8E               	movwf	(___fladd@a+3)& (0+255),b
  4037  001130                     l3167:
  4038                           
  4039                           ; BSR set to: 0
  4040  001130  5195               	movf	___fladd@bexp& (0+255),w,b
  4041  001132  5D94               	subwf	___fladd@aexp& (0+255),w,b
  4042  001134  B0D8               	btfsc	status,0,c
  4043  001136  EF9F  F008         	goto	u2141
  4044  00113A  EFA1  F008         	goto	u2140
  4045  00113E                     u2141:
  4046  00113E  EFC8  F008         	goto	l3203
  4047  001142                     u2140:
  4048  001142                     
  4049                           ; BSR set to: 0
  4050  001142  AD93               	btfss	___fladd@signs& (0+255),6,b
  4051  001144  EFA6  F008         	goto	u2151
  4052  001148  EFA8  F008         	goto	u2150
  4053  00114C                     u2151:
  4054  00114C  EFAA  F008         	goto	l3173
  4055  001150                     u2150:
  4056  001150                     
  4057                           ; BSR set to: 0
  4058  001150  0E80               	movlw	128
  4059  001152  1B93               	xorwf	___fladd@signs& (0+255),f,b
  4060  001154                     l3173:
  4061                           
  4062                           ; BSR set to: 0
  4063  001154  C095  F096         	movff	___fladd@bexp,___fladd@grs
  4064  001158                     
  4065                           ; BSR set to: 0
  4066  001158  C094  F095         	movff	___fladd@aexp,___fladd@bexp
  4067  00115C                     
  4068                           ; BSR set to: 0
  4069  00115C  C096  F094         	movff	___fladd@grs,___fladd@aexp
  4070  001160                     
  4071                           ; BSR set to: 0
  4072  001160  C087  F096         	movff	___fladd@b,___fladd@grs
  4073  001164                     
  4074                           ; BSR set to: 0
  4075  001164  C08B  F087         	movff	___fladd@a,___fladd@b
  4076  001168                     
  4077                           ; BSR set to: 0
  4078  001168  C096  F08B         	movff	___fladd@grs,___fladd@a
  4079  00116C                     
  4080                           ; BSR set to: 0
  4081  00116C  C088  F096         	movff	___fladd@b+1,___fladd@grs
  4082  001170                     
  4083                           ; BSR set to: 0
  4084  001170  C08C  F088         	movff	___fladd@a+1,___fladd@b+1
  4085  001174                     
  4086                           ; BSR set to: 0
  4087  001174  C096  F08C         	movff	___fladd@grs,___fladd@a+1
  4088  001178                     
  4089                           ; BSR set to: 0
  4090  001178  C089  F096         	movff	___fladd@b+2,___fladd@grs
  4091  00117C                     
  4092                           ; BSR set to: 0
  4093  00117C  C08D  F089         	movff	___fladd@a+2,___fladd@b+2
  4094  001180                     
  4095                           ; BSR set to: 0
  4096  001180  C096  F08D         	movff	___fladd@grs,___fladd@a+2
  4097  001184                     
  4098                           ; BSR set to: 0
  4099  001184  C08A  F096         	movff	___fladd@b+3,___fladd@grs
  4100  001188                     
  4101                           ; BSR set to: 0
  4102  001188  C08E  F08A         	movff	___fladd@a+3,___fladd@b+3
  4103  00118C                     
  4104                           ; BSR set to: 0
  4105  00118C  C096  F08E         	movff	___fladd@grs,___fladd@a+3
  4106  001190                     l3203:
  4107                           
  4108                           ; BSR set to: 0
  4109  001190  0E00               	movlw	0
  4110  001192  6F96               	movwf	___fladd@grs& (0+255),b
  4111  001194                     
  4112                           ; BSR set to: 0
  4113  001194  5195               	movf	___fladd@bexp& (0+255),w,b
  4114  001196  C094  F08F         	movff	___fladd@aexp,??___fladd
  4115  00119A  6B90               	clrf	(??___fladd+1)& (0+255),b
  4116  00119C  5F8F               	subwf	??___fladd& (0+255),f,b
  4117  00119E  0E00               	movlw	0
  4118  0011A0  5B90               	subwfb	(??___fladd+1)& (0+255),f,b
  4119  0011A2  BF90               	btfsc	(??___fladd+1)& (0+255),7,b
  4120  0011A4  EFDD  F008         	goto	u2161
  4121  0011A8  5190               	movf	(??___fladd+1)& (0+255),w,b
  4122  0011AA  E109               	bnz	u2160
  4123  0011AC  0E1A               	movlw	26
  4124  0011AE  5D8F               	subwf	??___fladd& (0+255),w,b
  4125  0011B0  A0D8               	btfss	status,0,c
  4126  0011B2  EFDD  F008         	goto	u2161
  4127  0011B6  EFDF  F008         	goto	u2160
  4128  0011BA                     u2161:
  4129  0011BA  EF16  F009         	goto	l1355
  4130  0011BE                     u2160:
  4131  0011BE                     
  4132                           ; BSR set to: 0
  4133  0011BE  5187               	movf	___fladd@b& (0+255),w,b
  4134  0011C0  1188               	iorwf	(___fladd@b+1)& (0+255),w,b
  4135  0011C2  1189               	iorwf	(___fladd@b+2)& (0+255),w,b
  4136  0011C4  118A               	iorwf	(___fladd@b+3)& (0+255),w,b
  4137  0011C6  A4D8               	btfss	status,2,c
  4138  0011C8  EFE8  F008         	goto	u2171
  4139  0011CC  EFEB  F008         	goto	u2170
  4140  0011D0                     u2171:
  4141  0011D0  0E01               	movlw	1
  4142  0011D2  EFEC  F008         	goto	u2180
  4143  0011D6                     u2170:
  4144  0011D6  0E00               	movlw	0
  4145  0011D8                     u2180:
  4146  0011D8  6F96               	movwf	___fladd@grs& (0+255),b
  4147  0011DA                     
  4148                           ; BSR set to: 0
  4149  0011DA  0E00               	movlw	0
  4150  0011DC  6F87               	movwf	___fladd@b& (0+255),b
  4151  0011DE  0E00               	movlw	0
  4152  0011E0  6F88               	movwf	(___fladd@b+1)& (0+255),b
  4153  0011E2  0E00               	movlw	0
  4154  0011E4  6F89               	movwf	(___fladd@b+2)& (0+255),b
  4155  0011E6  0E00               	movlw	0
  4156  0011E8  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  4157  0011EA                     
  4158                           ; BSR set to: 0
  4159  0011EA  C094  F095         	movff	___fladd@aexp,___fladd@bexp
  4160  0011EE  EF1F  F009         	goto	l1354
  4161  0011F2                     l1356:
  4162                           
  4163                           ; BSR set to: 0
  4164  0011F2  A196               	btfss	___fladd@grs& (0+255),0,b
  4165  0011F4  EFFE  F008         	goto	u2191
  4166  0011F8  EF00  F009         	goto	u2190
  4167  0011FC                     u2191:
  4168  0011FC  EF06  F009         	goto	l3215
  4169  001200                     u2190:
  4170  001200                     
  4171                           ; BSR set to: 0
  4172  001200  90D8               	bcf	status,0,c
  4173  001202  3196               	rrcf	___fladd@grs& (0+255),w,b
  4174  001204  0901               	iorlw	1
  4175  001206  6F96               	movwf	___fladd@grs& (0+255),b
  4176  001208  EF08  F009         	goto	l3217
  4177  00120C                     l3215:
  4178                           
  4179                           ; BSR set to: 0
  4180  00120C  90D8               	bcf	status,0,c
  4181  00120E  3396               	rrcf	___fladd@grs& (0+255),f,b
  4182  001210                     l3217:
  4183                           
  4184                           ; BSR set to: 0
  4185  001210  A187               	btfss	___fladd@b& (0+255),0,b
  4186  001212  EF0D  F009         	goto	u2201
  4187  001216  EF0F  F009         	goto	u2200
  4188  00121A                     u2201:
  4189  00121A  EF10  F009         	goto	l3221
  4190  00121E                     u2200:
  4191  00121E                     
  4192                           ; BSR set to: 0
  4193  00121E  8F96               	bsf	___fladd@grs& (0+255),7,b
  4194  001220                     l3221:
  4195                           
  4196                           ; BSR set to: 0
  4197  001220  358A               	rlcf	(___fladd@b+3)& (0+255),w,b
  4198  001222  338A               	rrcf	(___fladd@b+3)& (0+255),f,b
  4199  001224  3389               	rrcf	(___fladd@b+2)& (0+255),f,b
  4200  001226  3388               	rrcf	(___fladd@b+1)& (0+255),f,b
  4201  001228  3387               	rrcf	___fladd@b& (0+255),f,b
  4202  00122A                     
  4203                           ; BSR set to: 0
  4204  00122A  2B95               	incf	___fladd@bexp& (0+255),f,b
  4205  00122C                     l1355:
  4206                           
  4207                           ; BSR set to: 0
  4208  00122C  5194               	movf	___fladd@aexp& (0+255),w,b
  4209  00122E  5D95               	subwf	___fladd@bexp& (0+255),w,b
  4210  001230  A0D8               	btfss	status,0,c
  4211  001232  EF1D  F009         	goto	u2211
  4212  001236  EF1F  F009         	goto	u2210
  4213  00123A                     u2211:
  4214  00123A  EFF9  F008         	goto	l1356
  4215  00123E                     u2210:
  4216  00123E                     l1354:
  4217                           
  4218                           ; BSR set to: 0
  4219  00123E  BD93               	btfsc	___fladd@signs& (0+255),6,b
  4220  001240  EF24  F009         	goto	u2221
  4221  001244  EF26  F009         	goto	u2220
  4222  001248                     u2221:
  4223  001248  EF66  F009         	goto	l3249
  4224  00124C                     u2220:
  4225  00124C                     
  4226                           ; BSR set to: 0
  4227  00124C  5195               	movf	___fladd@bexp& (0+255),w,b
  4228  00124E  A4D8               	btfss	status,2,c
  4229  001250  EF2C  F009         	goto	u2231
  4230  001254  EF2E  F009         	goto	u2230
  4231  001258                     u2231:
  4232  001258  EF38  F009         	goto	l3231
  4233  00125C                     u2230:
  4234  00125C                     
  4235                           ; BSR set to: 0
  4236  00125C  0E00               	movlw	0
  4237  00125E  6F87               	movwf	?___fladd& (0+255),b
  4238  001260  0E00               	movlw	0
  4239  001262  6F88               	movwf	(?___fladd+1)& (0+255),b
  4240  001264  0E00               	movlw	0
  4241  001266  6F89               	movwf	(?___fladd+2)& (0+255),b
  4242  001268  0E00               	movlw	0
  4243  00126A  6F8A               	movwf	(?___fladd+3)& (0+255),b
  4244  00126C  EF87  F00A         	goto	l1363
  4245  001270                     l3231:
  4246                           
  4247                           ; BSR set to: 0
  4248  001270  518B               	movf	___fladd@a& (0+255),w,b
  4249  001272  2787               	addwf	___fladd@b& (0+255),f,b
  4250  001274  518C               	movf	(___fladd@a+1)& (0+255),w,b
  4251  001276  2388               	addwfc	(___fladd@b+1)& (0+255),f,b
  4252  001278  518D               	movf	(___fladd@a+2)& (0+255),w,b
  4253  00127A  2389               	addwfc	(___fladd@b+2)& (0+255),f,b
  4254  00127C  518E               	movf	(___fladd@a+3)& (0+255),w,b
  4255  00127E  238A               	addwfc	(___fladd@b+3)& (0+255),f,b
  4256  001280                     
  4257                           ; BSR set to: 0
  4258  001280  A18A               	btfss	(___fladd@b+3)& (0+255),0,b
  4259  001282  EF45  F009         	goto	u2241
  4260  001286  EF47  F009         	goto	u2240
  4261  00128A                     u2241:
  4262  00128A  EFF3  F009         	goto	l3285
  4263  00128E                     u2240:
  4264  00128E                     
  4265                           ; BSR set to: 0
  4266  00128E  A196               	btfss	___fladd@grs& (0+255),0,b
  4267  001290  EF4C  F009         	goto	u2251
  4268  001294  EF4E  F009         	goto	u2250
  4269  001298                     u2251:
  4270  001298  EF54  F009         	goto	l3239
  4271  00129C                     u2250:
  4272  00129C                     
  4273                           ; BSR set to: 0
  4274  00129C  90D8               	bcf	status,0,c
  4275  00129E  3196               	rrcf	___fladd@grs& (0+255),w,b
  4276  0012A0  0901               	iorlw	1
  4277  0012A2  6F96               	movwf	___fladd@grs& (0+255),b
  4278  0012A4  EF56  F009         	goto	l3241
  4279  0012A8                     l3239:
  4280                           
  4281                           ; BSR set to: 0
  4282  0012A8  90D8               	bcf	status,0,c
  4283  0012AA  3396               	rrcf	___fladd@grs& (0+255),f,b
  4284  0012AC                     l3241:
  4285                           
  4286                           ; BSR set to: 0
  4287  0012AC  A187               	btfss	___fladd@b& (0+255),0,b
  4288  0012AE  EF5B  F009         	goto	u2261
  4289  0012B2  EF5D  F009         	goto	u2260
  4290  0012B6                     u2261:
  4291  0012B6  EF5E  F009         	goto	l3245
  4292  0012BA                     u2260:
  4293  0012BA                     
  4294                           ; BSR set to: 0
  4295  0012BA  8F96               	bsf	___fladd@grs& (0+255),7,b
  4296  0012BC                     l3245:
  4297                           
  4298                           ; BSR set to: 0
  4299  0012BC  358A               	rlcf	(___fladd@b+3)& (0+255),w,b
  4300  0012BE  338A               	rrcf	(___fladd@b+3)& (0+255),f,b
  4301  0012C0  3389               	rrcf	(___fladd@b+2)& (0+255),f,b
  4302  0012C2  3388               	rrcf	(___fladd@b+1)& (0+255),f,b
  4303  0012C4  3387               	rrcf	___fladd@b& (0+255),f,b
  4304  0012C6                     
  4305                           ; BSR set to: 0
  4306  0012C6  2B95               	incf	___fladd@bexp& (0+255),f,b
  4307  0012C8  EFF3  F009         	goto	l3285
  4308  0012CC                     l3249:
  4309                           
  4310                           ; BSR set to: 0
  4311  0012CC  518B               	movf	___fladd@a& (0+255),w,b
  4312  0012CE  5D87               	subwf	___fladd@b& (0+255),w,b
  4313  0012D0  518C               	movf	(___fladd@a+1)& (0+255),w,b
  4314  0012D2  5988               	subwfb	(___fladd@b+1)& (0+255),w,b
  4315  0012D4  518D               	movf	(___fladd@a+2)& (0+255),w,b
  4316  0012D6  5989               	subwfb	(___fladd@b+2)& (0+255),w,b
  4317  0012D8  518A               	movf	(___fladd@b+3)& (0+255),w,b
  4318  0012DA  0A80               	xorlw	128
  4319  0012DC  6F8F               	movwf	??___fladd& (0+255),b
  4320  0012DE  518E               	movf	(___fladd@a+3)& (0+255),w,b
  4321  0012E0  0A80               	xorlw	128
  4322  0012E2  598F               	subwfb	??___fladd& (0+255),w,b
  4323  0012E4  B0D8               	btfsc	status,0,c
  4324  0012E6  EF77  F009         	goto	u2271
  4325  0012EA  EF79  F009         	goto	u2270
  4326  0012EE                     u2271:
  4327  0012EE  EFA4  F009         	goto	l3259
  4328  0012F2                     u2270:
  4329  0012F2                     
  4330                           ; BSR set to: 0
  4331  0012F2  5187               	movf	___fladd@b& (0+255),w,b
  4332  0012F4  5D8B               	subwf	___fladd@a& (0+255),w,b
  4333  0012F6  6F8F               	movwf	??___fladd& (0+255),b
  4334  0012F8  5188               	movf	(___fladd@b+1)& (0+255),w,b
  4335  0012FA  598C               	subwfb	(___fladd@a+1)& (0+255),w,b
  4336  0012FC  6F90               	movwf	(??___fladd+1)& (0+255),b
  4337  0012FE  5189               	movf	(___fladd@b+2)& (0+255),w,b
  4338  001300  598D               	subwfb	(___fladd@a+2)& (0+255),w,b
  4339  001302  6F91               	movwf	(??___fladd+2)& (0+255),b
  4340  001304  518A               	movf	(___fladd@b+3)& (0+255),w,b
  4341  001306  598E               	subwfb	(___fladd@a+3)& (0+255),w,b
  4342  001308  6F92               	movwf	(??___fladd+3)& (0+255),b
  4343  00130A  0EFF               	movlw	255
  4344  00130C  258F               	addwf	??___fladd& (0+255),w,b
  4345  00130E  6F87               	movwf	___fladd@b& (0+255),b
  4346  001310  0EFF               	movlw	255
  4347  001312  2190               	addwfc	(??___fladd+1)& (0+255),w,b
  4348  001314  6F88               	movwf	(___fladd@b+1)& (0+255),b
  4349  001316  0EFF               	movlw	255
  4350  001318  2191               	addwfc	(??___fladd+2)& (0+255),w,b
  4351  00131A  6F89               	movwf	(___fladd@b+2)& (0+255),b
  4352  00131C  0EFF               	movlw	255
  4353  00131E  2192               	addwfc	(??___fladd+3)& (0+255),w,b
  4354  001320  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  4355  001322  0E80               	movlw	128
  4356  001324  1B93               	xorwf	___fladd@signs& (0+255),f,b
  4357  001326                     
  4358                           ; BSR set to: 0
  4359  001326  6D96               	negf	___fladd@grs& (0+255),b
  4360  001328                     
  4361                           ; BSR set to: 0
  4362  001328  5196               	movf	___fladd@grs& (0+255),w,b
  4363  00132A  A4D8               	btfss	status,2,c
  4364  00132C  EF9A  F009         	goto	u2281
  4365  001330  EF9C  F009         	goto	u2280
  4366  001334                     u2281:
  4367  001334  EFAC  F009         	goto	l1371
  4368  001338                     u2280:
  4369  001338                     
  4370                           ; BSR set to: 0
  4371  001338  0E01               	movlw	1
  4372  00133A  2787               	addwf	___fladd@b& (0+255),f,b
  4373  00133C  0E00               	movlw	0
  4374  00133E  2388               	addwfc	(___fladd@b+1)& (0+255),f,b
  4375  001340  2389               	addwfc	(___fladd@b+2)& (0+255),f,b
  4376  001342  238A               	addwfc	(___fladd@b+3)& (0+255),f,b
  4377  001344  EFAC  F009         	goto	l1371
  4378  001348                     l3259:
  4379                           
  4380                           ; BSR set to: 0
  4381  001348  518B               	movf	___fladd@a& (0+255),w,b
  4382  00134A  5F87               	subwf	___fladd@b& (0+255),f,b
  4383  00134C  518C               	movf	(___fladd@a+1)& (0+255),w,b
  4384  00134E  5B88               	subwfb	(___fladd@b+1)& (0+255),f,b
  4385  001350  518D               	movf	(___fladd@a+2)& (0+255),w,b
  4386  001352  5B89               	subwfb	(___fladd@b+2)& (0+255),f,b
  4387  001354  518E               	movf	(___fladd@a+3)& (0+255),w,b
  4388  001356  5B8A               	subwfb	(___fladd@b+3)& (0+255),f,b
  4389  001358                     l1371:
  4390                           
  4391                           ; BSR set to: 0
  4392  001358  5187               	movf	___fladd@b& (0+255),w,b
  4393  00135A  1188               	iorwf	(___fladd@b+1)& (0+255),w,b
  4394  00135C  1189               	iorwf	(___fladd@b+2)& (0+255),w,b
  4395  00135E  118A               	iorwf	(___fladd@b+3)& (0+255),w,b
  4396  001360  A4D8               	btfss	status,2,c
  4397  001362  EFB5  F009         	goto	u2291
  4398  001366  EFB7  F009         	goto	u2290
  4399  00136A                     u2291:
  4400  00136A  EFEC  F009         	goto	l3283
  4401  00136E                     u2290:
  4402  00136E                     
  4403                           ; BSR set to: 0
  4404  00136E  5196               	movf	___fladd@grs& (0+255),w,b
  4405  001370  A4D8               	btfss	status,2,c
  4406  001372  EFBD  F009         	goto	u2301
  4407  001376  EFBF  F009         	goto	u2300
  4408  00137A                     u2301:
  4409  00137A  EFEC  F009         	goto	l3283
  4410  00137E                     u2300:
  4411  00137E                     
  4412                           ; BSR set to: 0
  4413  00137E  0E00               	movlw	0
  4414  001380  6F87               	movwf	?___fladd& (0+255),b
  4415  001382  0E00               	movlw	0
  4416  001384  6F88               	movwf	(?___fladd+1)& (0+255),b
  4417  001386  0E00               	movlw	0
  4418  001388  6F89               	movwf	(?___fladd+2)& (0+255),b
  4419  00138A  0E00               	movlw	0
  4420  00138C  6F8A               	movwf	(?___fladd+3)& (0+255),b
  4421  00138E  EF87  F00A         	goto	l1363
  4422  001392                     l3267:
  4423                           
  4424                           ; BSR set to: 0
  4425  001392  90D8               	bcf	status,0,c
  4426  001394  3787               	rlcf	___fladd@b& (0+255),f,b
  4427  001396  3788               	rlcf	(___fladd@b+1)& (0+255),f,b
  4428  001398  3789               	rlcf	(___fladd@b+2)& (0+255),f,b
  4429  00139A  378A               	rlcf	(___fladd@b+3)& (0+255),f,b
  4430  00139C                     
  4431                           ; BSR set to: 0
  4432  00139C  AF96               	btfss	___fladd@grs& (0+255),7,b
  4433  00139E  EFD3  F009         	goto	u2311
  4434  0013A2  EFD5  F009         	goto	u2310
  4435  0013A6                     u2311:
  4436  0013A6  EFD6  F009         	goto	l3273
  4437  0013AA                     u2310:
  4438  0013AA                     
  4439                           ; BSR set to: 0
  4440  0013AA  8187               	bsf	___fladd@b& (0+255),0,b
  4441  0013AC                     l3273:
  4442                           
  4443                           ; BSR set to: 0
  4444  0013AC  A196               	btfss	___fladd@grs& (0+255),0,b
  4445  0013AE  EFDB  F009         	goto	u2321
  4446  0013B2  EFDD  F009         	goto	u2320
  4447  0013B6                     u2321:
  4448  0013B6  EFE1  F009         	goto	l3277
  4449  0013BA                     u2320:
  4450  0013BA                     
  4451                           ; BSR set to: 0
  4452  0013BA  80D8               	bsf	status,0,c
  4453  0013BC  3796               	rlcf	___fladd@grs& (0+255),f,b
  4454  0013BE  EFE3  F009         	goto	l3279
  4455  0013C2                     l3277:
  4456                           
  4457                           ; BSR set to: 0
  4458  0013C2  90D8               	bcf	status,0,c
  4459  0013C4  3796               	rlcf	___fladd@grs& (0+255),f,b
  4460  0013C6                     l3279:
  4461                           
  4462                           ; BSR set to: 0
  4463  0013C6  5195               	movf	___fladd@bexp& (0+255),w,b
  4464  0013C8  B4D8               	btfsc	status,2,c
  4465  0013CA  EFE9  F009         	goto	u2331
  4466  0013CE  EFEB  F009         	goto	u2330
  4467  0013D2                     u2331:
  4468  0013D2  EFEC  F009         	goto	l3283
  4469  0013D6                     u2330:
  4470  0013D6                     
  4471                           ; BSR set to: 0
  4472  0013D6  0795               	decf	___fladd@bexp& (0+255),f,b
  4473  0013D8                     l3283:
  4474                           
  4475                           ; BSR set to: 0
  4476  0013D8  AF89               	btfss	(___fladd@b+2)& (0+255),7,b
  4477  0013DA  EFF1  F009         	goto	u2341
  4478  0013DE  EFF3  F009         	goto	u2340
  4479  0013E2                     u2341:
  4480  0013E2  EFC9  F009         	goto	l3267
  4481  0013E6                     u2340:
  4482  0013E6                     l3285:
  4483                           
  4484                           ; BSR set to: 0
  4485  0013E6  0E00               	movlw	0
  4486  0013E8  6F94               	movwf	___fladd@aexp& (0+255),b
  4487  0013EA                     
  4488                           ; BSR set to: 0
  4489  0013EA  AF96               	btfss	___fladd@grs& (0+255),7,b
  4490  0013EC  EFFA  F009         	goto	u2351
  4491  0013F0  EFFC  F009         	goto	u2350
  4492  0013F4                     u2351:
  4493  0013F4  EF14  F00A         	goto	l1380
  4494  0013F8                     u2350:
  4495  0013F8                     
  4496                           ; BSR set to: 0
  4497  0013F8  C096  F08F         	movff	___fladd@grs,??___fladd
  4498  0013FC  0E7F               	movlw	127
  4499  0013FE  178F               	andwf	??___fladd& (0+255),f,b
  4500  001400  B4D8               	btfsc	status,2,c
  4501  001402  EF05  F00A         	goto	u2361
  4502  001406  EF07  F00A         	goto	u2360
  4503  00140A                     u2361:
  4504  00140A  EF0B  F00A         	goto	l1381
  4505  00140E                     u2360:
  4506  00140E                     l3291:
  4507                           
  4508                           ; BSR set to: 0
  4509  00140E  0E01               	movlw	1
  4510  001410  6F94               	movwf	___fladd@aexp& (0+255),b
  4511  001412  EF14  F00A         	goto	l1380
  4512  001416                     l1381:
  4513                           
  4514                           ; BSR set to: 0
  4515  001416  A187               	btfss	___fladd@b& (0+255),0,b
  4516  001418  EF10  F00A         	goto	u2371
  4517  00141C  EF12  F00A         	goto	u2370
  4518  001420                     u2371:
  4519  001420  EF14  F00A         	goto	l1380
  4520  001424                     u2370:
  4521  001424  EF07  F00A         	goto	l3291
  4522  001428                     l1380:
  4523                           
  4524                           ; BSR set to: 0
  4525  001428  5194               	movf	___fladd@aexp& (0+255),w,b
  4526  00142A  B4D8               	btfsc	status,2,c
  4527  00142C  EF1A  F00A         	goto	u2381
  4528  001430  EF1C  F00A         	goto	u2380
  4529  001434                     u2381:
  4530  001434  EF47  F00A         	goto	l3303
  4531  001438                     u2380:
  4532  001438                     
  4533                           ; BSR set to: 0
  4534  001438  0E01               	movlw	1
  4535  00143A  2787               	addwf	___fladd@b& (0+255),f,b
  4536  00143C  0E00               	movlw	0
  4537  00143E  2388               	addwfc	(___fladd@b+1)& (0+255),f,b
  4538  001440  2389               	addwfc	(___fladd@b+2)& (0+255),f,b
  4539  001442  238A               	addwfc	(___fladd@b+3)& (0+255),f,b
  4540  001444                     
  4541                           ; BSR set to: 0
  4542  001444  A18A               	btfss	(___fladd@b+3)& (0+255),0,b
  4543  001446  EF27  F00A         	goto	u2391
  4544  00144A  EF29  F00A         	goto	u2390
  4545  00144E                     u2391:
  4546  00144E  EF47  F00A         	goto	l3303
  4547  001452                     u2390:
  4548  001452                     
  4549                           ; BSR set to: 0
  4550  001452  C087  F08F         	movff	___fladd@b,??___fladd
  4551  001456  C088  F090         	movff	___fladd@b+1,??___fladd+1
  4552  00145A  C089  F091         	movff	___fladd@b+2,??___fladd+2
  4553  00145E  C08A  F092         	movff	___fladd@b+3,??___fladd+3
  4554  001462  3592               	rlcf	(??___fladd+3)& (0+255),w,b
  4555  001464  3392               	rrcf	(??___fladd+3)& (0+255),f,b
  4556  001466  3391               	rrcf	(??___fladd+2)& (0+255),f,b
  4557  001468  3390               	rrcf	(??___fladd+1)& (0+255),f,b
  4558  00146A  338F               	rrcf	??___fladd& (0+255),f,b
  4559  00146C  C08F  F087         	movff	??___fladd,___fladd@b
  4560  001470  C090  F088         	movff	??___fladd+1,___fladd@b+1
  4561  001474  C091  F089         	movff	??___fladd+2,___fladd@b+2
  4562  001478  C092  F08A         	movff	??___fladd+3,___fladd@b+3
  4563  00147C  2995               	incf	___fladd@bexp& (0+255),w,b
  4564  00147E  B4D8               	btfsc	status,2,c
  4565  001480  EF44  F00A         	goto	u2401
  4566  001484  EF46  F00A         	goto	u2400
  4567  001488                     u2401:
  4568  001488  EF47  F00A         	goto	l3303
  4569  00148C                     u2400:
  4570  00148C                     
  4571                           ; BSR set to: 0
  4572  00148C  2B95               	incf	___fladd@bexp& (0+255),f,b
  4573  00148E                     l3303:
  4574                           
  4575                           ; BSR set to: 0
  4576  00148E  2995               	incf	___fladd@bexp& (0+255),w,b
  4577  001490  B4D8               	btfsc	status,2,c
  4578  001492  EF4D  F00A         	goto	u2411
  4579  001496  EF4F  F00A         	goto	u2410
  4580  00149A                     u2411:
  4581  00149A  EF57  F00A         	goto	l3307
  4582  00149E                     u2410:
  4583  00149E                     
  4584                           ; BSR set to: 0
  4585  00149E  5195               	movf	___fladd@bexp& (0+255),w,b
  4586  0014A0  A4D8               	btfss	status,2,c
  4587  0014A2  EF55  F00A         	goto	u2421
  4588  0014A6  EF57  F00A         	goto	u2420
  4589  0014AA                     u2421:
  4590  0014AA  EF69  F00A         	goto	l3311
  4591  0014AE                     u2420:
  4592  0014AE                     l3307:
  4593                           
  4594                           ; BSR set to: 0
  4595  0014AE  0E00               	movlw	0
  4596  0014B0  6F87               	movwf	___fladd@b& (0+255),b
  4597  0014B2  0E00               	movlw	0
  4598  0014B4  6F88               	movwf	(___fladd@b+1)& (0+255),b
  4599  0014B6  0E00               	movlw	0
  4600  0014B8  6F89               	movwf	(___fladd@b+2)& (0+255),b
  4601  0014BA  0E00               	movlw	0
  4602  0014BC  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  4603  0014BE  5195               	movf	___fladd@bexp& (0+255),w,b
  4604  0014C0  A4D8               	btfss	status,2,c
  4605  0014C2  EF65  F00A         	goto	u2431
  4606  0014C6  EF67  F00A         	goto	u2430
  4607  0014CA                     u2431:
  4608  0014CA  EF69  F00A         	goto	l3311
  4609  0014CE                     u2430:
  4610  0014CE                     
  4611                           ; BSR set to: 0
  4612  0014CE  0E00               	movlw	0
  4613  0014D0  6F93               	movwf	___fladd@signs& (0+255),b
  4614  0014D2                     l3311:
  4615                           
  4616                           ; BSR set to: 0
  4617  0014D2  A195               	btfss	___fladd@bexp& (0+255),0,b
  4618  0014D4  EF6E  F00A         	goto	u2441
  4619  0014D8  EF70  F00A         	goto	u2440
  4620  0014DC                     u2441:
  4621  0014DC  EF73  F00A         	goto	l3315
  4622  0014E0                     u2440:
  4623  0014E0                     
  4624                           ; BSR set to: 0
  4625  0014E0  8F89               	bsf	(___fladd@b+2)& (0+255),7,b
  4626  0014E2  EF74  F00A         	goto	l3317
  4627  0014E6                     l3315:
  4628                           
  4629                           ; BSR set to: 0
  4630  0014E6  9F89               	bcf	(___fladd@b+2)& (0+255),7,b
  4631  0014E8                     l3317:
  4632                           
  4633                           ; BSR set to: 0
  4634  0014E8  90D8               	bcf	status,0,c
  4635  0014EA  3195               	rrcf	___fladd@bexp& (0+255),w,b
  4636  0014EC  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  4637  0014EE                     
  4638                           ; BSR set to: 0
  4639  0014EE  AF93               	btfss	___fladd@signs& (0+255),7,b
  4640  0014F0  EF7C  F00A         	goto	u2451
  4641  0014F4  EF7E  F00A         	goto	u2450
  4642  0014F8                     u2451:
  4643  0014F8  EF7F  F00A         	goto	l3323
  4644  0014FC                     u2450:
  4645  0014FC                     
  4646                           ; BSR set to: 0
  4647  0014FC  8F8A               	bsf	(___fladd@b+3)& (0+255),7,b
  4648  0014FE                     l3323:
  4649                           
  4650                           ; BSR set to: 0
  4651  0014FE  C087  F087         	movff	___fladd@b,?___fladd
  4652  001502  C088  F088         	movff	___fladd@b+1,?___fladd+1
  4653  001506  C089  F089         	movff	___fladd@b+2,?___fladd+2
  4654  00150A  C08A  F08A         	movff	___fladd@b+3,?___fladd+3
  4655  00150E                     l1363:
  4656                           
  4657                           ; BSR set to: 0
  4658  00150E  0012               	return		;funcret
  4659  001510                     __end_of___fladd:
  4660                           	opt callstack 0
  4661                           
  4662 ;; *************** function _printTempAndHumid *****************
  4663 ;; Defined at:
  4664 ;;		line 52 in file "main.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;		None
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;  humid           2   49[BANK0 ] int 
  4669 ;;  temp            2   47[BANK0 ] int 
  4670 ;; Return value:  Size  Location     Type
  4671 ;;                  1    wreg      void 
  4672 ;; Registers used:
  4673 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4674 ;; Tracked objects:
  4675 ;;		On entry : 0/0
  4676 ;;		On exit  : 0/0
  4677 ;;		Unchanged: 0/0
  4678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4680 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4682 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4683 ;;Total ram usage:       12 bytes
  4684 ;; Hardware stack levels used:    1
  4685 ;; Hardware stack levels required when called:   11
  4686 ;; This function calls:
  4687 ;;		_LCDPrint
  4688 ;;		_LCDPrintChar
  4689 ;;		___awdiv
  4690 ;;		___awmod
  4691 ;;		___fleq
  4692 ;;		___flmul
  4693 ;;		___fltol
  4694 ;; This function is called by:
  4695 ;;		_system_setup
  4696 ;;		_selectReadyTask
  4697 ;; This function uses a non-reentrant model
  4698 ;;
  4699                           
  4700                           	psect	text24
  4701  00218E                     __ptext24:
  4702                           	opt callstack 0
  4703  00218E                     _printTempAndHumid:
  4704                           	opt callstack 17
  4705  00218E                     
  4706                           ;main.c: 53:     LCDPrint(1, 0, "T:");
  4707  00218E  0E00               	movlw	0
  4708  002190  0100               	movlb	0	; () banked
  4709  002192  6F6B               	movwf	LCDPrint@pos& (0+255),b
  4710  002194  0E46               	movlw	low STR_1
  4711  002196  6F6C               	movwf	LCDPrint@ptr& (0+255),b
  4712  002198  0E10               	movlw	high STR_1
  4713  00219A  6F6D               	movwf	(LCDPrint@ptr+1)& (0+255),b
  4714  00219C  0E01               	movlw	1
  4715  00219E  EC5E  F01C         	call	_LCDPrint
  4716                           
  4717                           ;main.c: 54:     LCDPrint(1, 8, "H:");
  4718  0021A2  0E08               	movlw	8
  4719  0021A4  0100               	movlb	0	; () banked
  4720  0021A6  6F6B               	movwf	LCDPrint@pos& (0+255),b
  4721  0021A8  0E43               	movlw	low STR_2
  4722  0021AA  6F6C               	movwf	LCDPrint@ptr& (0+255),b
  4723  0021AC  0E10               	movlw	high STR_2
  4724  0021AE  6F6D               	movwf	(LCDPrint@ptr+1)& (0+255),b
  4725  0021B0  0E01               	movlw	1
  4726  0021B2  EC5E  F01C         	call	_LCDPrint
  4727  0021B6                     
  4728                           ;main.c: 55:     int temp = (temperature_value == 399) ? 0 : 10 * temperature_value;
  4729  0021B6  C0CD  F060         	movff	_temperature_value,___fleq@ff1
  4730  0021BA  C0CE  F061         	movff	_temperature_value+1,___fleq@ff1+1
  4731  0021BE  C0CF  F062         	movff	_temperature_value+2,___fleq@ff1+2
  4732  0021C2  C0D0  F063         	movff	_temperature_value+3,___fleq@ff1+3
  4733  0021C6  0E00               	movlw	0
  4734  0021C8  0100               	movlb	0	; () banked
  4735  0021CA  6F64               	movwf	___fleq@ff2& (0+255),b
  4736  0021CC  0E80               	movlw	128
  4737  0021CE  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  4738  0021D0  0EC7               	movlw	199
  4739  0021D2  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  4740  0021D4  0E43               	movlw	67
  4741  0021D6  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  4742  0021D8  ECF7  F018         	call	___fleq	;wreg free
  4743  0021DC  0100               	movlb	0	; () banked
  4744  0021DE  B0D8               	btfsc	status,0,c
  4745  0021E0  EFF4  F010         	goto	u3161
  4746  0021E4  EFF6  F010         	goto	u3160
  4747  0021E8                     u3161:
  4748  0021E8  EF12  F011         	goto	l3773
  4749  0021EC                     u3160:
  4750  0021EC                     
  4751                           ; BSR set to: 0
  4752  0021EC  C0CD  F06E         	movff	_temperature_value,___flmul@b
  4753  0021F0  C0CE  F06F         	movff	_temperature_value+1,___flmul@b+1
  4754  0021F4  C0CF  F070         	movff	_temperature_value+2,___flmul@b+2
  4755  0021F8  C0D0  F071         	movff	_temperature_value+3,___flmul@b+3
  4756  0021FC  0E00               	movlw	0
  4757  0021FE  6F72               	movwf	___flmul@a& (0+255),b
  4758  002200  0E00               	movlw	0
  4759  002202  6F73               	movwf	(___flmul@a+1)& (0+255),b
  4760  002204  0E20               	movlw	32
  4761  002206  6F74               	movwf	(___flmul@a+2)& (0+255),b
  4762  002208  0E41               	movlw	65
  4763  00220A  6F75               	movwf	(___flmul@a+3)& (0+255),b
  4764  00220C  ECE1  F00C         	call	___flmul	;wreg free
  4765  002210  C06E  F087         	movff	?___flmul,_printTempAndHumid$129
  4766  002214  C06F  F088         	movff	?___flmul+1,_printTempAndHumid$129+1
  4767  002218  C070  F089         	movff	?___flmul+2,_printTempAndHumid$129+2
  4768  00221C  C071  F08A         	movff	?___flmul+3,_printTempAndHumid$129+3
  4769  002220  EF1A  F011         	goto	l3775
  4770  002224                     l3773:
  4771                           
  4772                           ; BSR set to: 0
  4773  002224  0E00               	movlw	0
  4774  002226  6F87               	movwf	_printTempAndHumid$129& (0+255),b
  4775  002228  0E00               	movlw	0
  4776  00222A  6F88               	movwf	(_printTempAndHumid$129+1)& (0+255),b
  4777  00222C  0E00               	movlw	0
  4778  00222E  6F89               	movwf	(_printTempAndHumid$129+2)& (0+255),b
  4779  002230  0E00               	movlw	0
  4780  002232  6F8A               	movwf	(_printTempAndHumid$129+3)& (0+255),b
  4781  002234                     l3775:
  4782  002234  C087  F060         	movff	_printTempAndHumid$129,___fltol@f1
  4783  002238  C088  F061         	movff	_printTempAndHumid$129+1,___fltol@f1+1
  4784  00223C  C089  F062         	movff	_printTempAndHumid$129+2,___fltol@f1+2
  4785  002240  C08A  F063         	movff	_printTempAndHumid$129+3,___fltol@f1+3
  4786  002244  EC2A  F016         	call	___fltol	;wreg free
  4787  002248  C060  F08F         	movff	?___fltol,printTempAndHumid@temp
  4788  00224C  C061  F090         	movff	?___fltol+1,printTempAndHumid@temp+1
  4789  002250                     
  4790                           ;main.c: 56:     int humid = (humidity_value == 399) ? 0 : 10 * humidity_value;
  4791  002250  C0D1  F060         	movff	_humidity_value,___fleq@ff1
  4792  002254  C0D2  F061         	movff	_humidity_value+1,___fleq@ff1+1
  4793  002258  C0D3  F062         	movff	_humidity_value+2,___fleq@ff1+2
  4794  00225C  C0D4  F063         	movff	_humidity_value+3,___fleq@ff1+3
  4795  002260  0E00               	movlw	0
  4796  002262  0100               	movlb	0	; () banked
  4797  002264  6F64               	movwf	___fleq@ff2& (0+255),b
  4798  002266  0E80               	movlw	128
  4799  002268  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  4800  00226A  0EC7               	movlw	199
  4801  00226C  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  4802  00226E  0E43               	movlw	67
  4803  002270  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  4804  002272  ECF7  F018         	call	___fleq	;wreg free
  4805  002276  0100               	movlb	0	; () banked
  4806  002278  B0D8               	btfsc	status,0,c
  4807  00227A  EF41  F011         	goto	u3171
  4808  00227E  EF43  F011         	goto	u3170
  4809  002282                     u3171:
  4810  002282  EF5F  F011         	goto	l3781
  4811  002286                     u3170:
  4812  002286                     
  4813                           ; BSR set to: 0
  4814  002286  C0D1  F06E         	movff	_humidity_value,___flmul@b
  4815  00228A  C0D2  F06F         	movff	_humidity_value+1,___flmul@b+1
  4816  00228E  C0D3  F070         	movff	_humidity_value+2,___flmul@b+2
  4817  002292  C0D4  F071         	movff	_humidity_value+3,___flmul@b+3
  4818  002296  0E00               	movlw	0
  4819  002298  6F72               	movwf	___flmul@a& (0+255),b
  4820  00229A  0E00               	movlw	0
  4821  00229C  6F73               	movwf	(___flmul@a+1)& (0+255),b
  4822  00229E  0E20               	movlw	32
  4823  0022A0  6F74               	movwf	(___flmul@a+2)& (0+255),b
  4824  0022A2  0E41               	movlw	65
  4825  0022A4  6F75               	movwf	(___flmul@a+3)& (0+255),b
  4826  0022A6  ECE1  F00C         	call	___flmul	;wreg free
  4827  0022AA  C06E  F08B         	movff	?___flmul,_printTempAndHumid$131
  4828  0022AE  C06F  F08C         	movff	?___flmul+1,_printTempAndHumid$131+1
  4829  0022B2  C070  F08D         	movff	?___flmul+2,_printTempAndHumid$131+2
  4830  0022B6  C071  F08E         	movff	?___flmul+3,_printTempAndHumid$131+3
  4831  0022BA  EF67  F011         	goto	l3783
  4832  0022BE                     l3781:
  4833                           
  4834                           ; BSR set to: 0
  4835  0022BE  0E00               	movlw	0
  4836  0022C0  6F8B               	movwf	_printTempAndHumid$131& (0+255),b
  4837  0022C2  0E00               	movlw	0
  4838  0022C4  6F8C               	movwf	(_printTempAndHumid$131+1)& (0+255),b
  4839  0022C6  0E00               	movlw	0
  4840  0022C8  6F8D               	movwf	(_printTempAndHumid$131+2)& (0+255),b
  4841  0022CA  0E00               	movlw	0
  4842  0022CC  6F8E               	movwf	(_printTempAndHumid$131+3)& (0+255),b
  4843  0022CE                     l3783:
  4844  0022CE  C08B  F060         	movff	_printTempAndHumid$131,___fltol@f1
  4845  0022D2  C08C  F061         	movff	_printTempAndHumid$131+1,___fltol@f1+1
  4846  0022D6  C08D  F062         	movff	_printTempAndHumid$131+2,___fltol@f1+2
  4847  0022DA  C08E  F063         	movff	_printTempAndHumid$131+3,___fltol@f1+3
  4848  0022DE  EC2A  F016         	call	___fltol	;wreg free
  4849  0022E2  C060  F091         	movff	?___fltol,printTempAndHumid@humid
  4850  0022E6  C061  F092         	movff	?___fltol+1,printTempAndHumid@humid+1
  4851  0022EA                     
  4852                           ;main.c: 57:     LCDPrintChar(1, 2, temp / 100 + '0');
  4853  0022EA  0E02               	movlw	2
  4854  0022EC  0100               	movlb	0	; () banked
  4855  0022EE  6F6B               	movwf	LCDPrintChar@pos& (0+255),b
  4856  0022F0  C08F  F060         	movff	printTempAndHumid@temp,___awdiv@dividend
  4857  0022F4  C090  F061         	movff	printTempAndHumid@temp+1,___awdiv@dividend+1
  4858  0022F8  0E00               	movlw	0
  4859  0022FA  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4860  0022FC  0E64               	movlw	100
  4861  0022FE  6F62               	movwf	___awdiv@divisor& (0+255),b
  4862  002300  EC8C  F017         	call	___awdiv	;wreg free
  4863  002304  0100               	movlb	0	; () banked
  4864  002306  5160               	movf	?___awdiv& (0+255),w,b
  4865  002308  0F30               	addlw	48
  4866  00230A  6F6C               	movwf	LCDPrintChar@ch& (0+255),b
  4867  00230C  0E01               	movlw	1
  4868  00230E  EC21  F01D         	call	_LCDPrintChar
  4869  002312                     
  4870                           ;main.c: 58:     temp /= 10;
  4871  002312  C08F  F060         	movff	printTempAndHumid@temp,___awdiv@dividend
  4872  002316  C090  F061         	movff	printTempAndHumid@temp+1,___awdiv@dividend+1
  4873  00231A  0E00               	movlw	0
  4874  00231C  0100               	movlb	0	; () banked
  4875  00231E  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4876  002320  0E0A               	movlw	10
  4877  002322  6F62               	movwf	___awdiv@divisor& (0+255),b
  4878  002324  EC8C  F017         	call	___awdiv	;wreg free
  4879  002328  C060  F08F         	movff	?___awdiv,printTempAndHumid@temp
  4880  00232C  C061  F090         	movff	?___awdiv+1,printTempAndHumid@temp+1
  4881  002330                     
  4882                           ;main.c: 59:     LCDPrintChar(1, 3, ",");
  4883  002330  0E03               	movlw	3
  4884  002332  0100               	movlb	0	; () banked
  4885  002334  6F6B               	movwf	LCDPrintChar@pos& (0+255),b
  4886  002336  0E49               	movlw	low (low STR_3)
  4887  002338  6F6C               	movwf	LCDPrintChar@ch& (0+255),b
  4888  00233A  0E01               	movlw	1
  4889  00233C  EC21  F01D         	call	_LCDPrintChar
  4890  002340                     
  4891                           ;main.c: 60:     LCDPrintChar(1, 4, temp / 10 + '0');
  4892  002340  0E04               	movlw	4
  4893  002342  0100               	movlb	0	; () banked
  4894  002344  6F6B               	movwf	LCDPrintChar@pos& (0+255),b
  4895  002346  C08F  F060         	movff	printTempAndHumid@temp,___awdiv@dividend
  4896  00234A  C090  F061         	movff	printTempAndHumid@temp+1,___awdiv@dividend+1
  4897  00234E  0E00               	movlw	0
  4898  002350  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4899  002352  0E0A               	movlw	10
  4900  002354  6F62               	movwf	___awdiv@divisor& (0+255),b
  4901  002356  EC8C  F017         	call	___awdiv	;wreg free
  4902  00235A  0100               	movlb	0	; () banked
  4903  00235C  5160               	movf	?___awdiv& (0+255),w,b
  4904  00235E  0F30               	addlw	48
  4905  002360  6F6C               	movwf	LCDPrintChar@ch& (0+255),b
  4906  002362  0E01               	movlw	1
  4907  002364  EC21  F01D         	call	_LCDPrintChar
  4908  002368                     
  4909                           ;main.c: 61:     LCDPrintChar(1, 5, temp % 10 + '0');
  4910  002368  0E05               	movlw	5
  4911  00236A  0100               	movlb	0	; () banked
  4912  00236C  6F6B               	movwf	LCDPrintChar@pos& (0+255),b
  4913  00236E  C08F  F060         	movff	printTempAndHumid@temp,___awmod@dividend
  4914  002372  C090  F061         	movff	printTempAndHumid@temp+1,___awmod@dividend+1
  4915  002376  0E00               	movlw	0
  4916  002378  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  4917  00237A  0E0A               	movlw	10
  4918  00237C  6F62               	movwf	___awmod@divisor& (0+255),b
  4919  00237E  ECEF  F017         	call	___awmod	;wreg free
  4920  002382  0100               	movlb	0	; () banked
  4921  002384  5160               	movf	?___awmod& (0+255),w,b
  4922  002386  0F30               	addlw	48
  4923  002388  6F6C               	movwf	LCDPrintChar@ch& (0+255),b
  4924  00238A  0E01               	movlw	1
  4925  00238C  EC21  F01D         	call	_LCDPrintChar
  4926  002390                     
  4927                           ;main.c: 63:     LCDPrintChar(1, 2, humid / 100 + '0');
  4928  002390  0E02               	movlw	2
  4929  002392  0100               	movlb	0	; () banked
  4930  002394  6F6B               	movwf	LCDPrintChar@pos& (0+255),b
  4931  002396  C091  F060         	movff	printTempAndHumid@humid,___awdiv@dividend
  4932  00239A  C092  F061         	movff	printTempAndHumid@humid+1,___awdiv@dividend+1
  4933  00239E  0E00               	movlw	0
  4934  0023A0  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4935  0023A2  0E64               	movlw	100
  4936  0023A4  6F62               	movwf	___awdiv@divisor& (0+255),b
  4937  0023A6  EC8C  F017         	call	___awdiv	;wreg free
  4938  0023AA  0100               	movlb	0	; () banked
  4939  0023AC  5160               	movf	?___awdiv& (0+255),w,b
  4940  0023AE  0F30               	addlw	48
  4941  0023B0  6F6C               	movwf	LCDPrintChar@ch& (0+255),b
  4942  0023B2  0E01               	movlw	1
  4943  0023B4  EC21  F01D         	call	_LCDPrintChar
  4944  0023B8                     
  4945                           ;main.c: 64:     humid /= 10;
  4946  0023B8  C091  F060         	movff	printTempAndHumid@humid,___awdiv@dividend
  4947  0023BC  C092  F061         	movff	printTempAndHumid@humid+1,___awdiv@dividend+1
  4948  0023C0  0E00               	movlw	0
  4949  0023C2  0100               	movlb	0	; () banked
  4950  0023C4  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4951  0023C6  0E0A               	movlw	10
  4952  0023C8  6F62               	movwf	___awdiv@divisor& (0+255),b
  4953  0023CA  EC8C  F017         	call	___awdiv	;wreg free
  4954  0023CE  C060  F091         	movff	?___awdiv,printTempAndHumid@humid
  4955  0023D2  C061  F092         	movff	?___awdiv+1,printTempAndHumid@humid+1
  4956  0023D6                     
  4957                           ;main.c: 65:     LCDPrintChar(1, 3, ".");
  4958  0023D6  0E03               	movlw	3
  4959  0023D8  0100               	movlb	0	; () banked
  4960  0023DA  6F6B               	movwf	LCDPrintChar@pos& (0+255),b
  4961  0023DC  0E4B               	movlw	low (low STR_4)
  4962  0023DE  6F6C               	movwf	LCDPrintChar@ch& (0+255),b
  4963  0023E0  0E01               	movlw	1
  4964  0023E2  EC21  F01D         	call	_LCDPrintChar
  4965  0023E6                     
  4966                           ;main.c: 66:     LCDPrintChar(1, 4, humid / 10 + '0');
  4967  0023E6  0E04               	movlw	4
  4968  0023E8  0100               	movlb	0	; () banked
  4969  0023EA  6F6B               	movwf	LCDPrintChar@pos& (0+255),b
  4970  0023EC  C091  F060         	movff	printTempAndHumid@humid,___awdiv@dividend
  4971  0023F0  C092  F061         	movff	printTempAndHumid@humid+1,___awdiv@dividend+1
  4972  0023F4  0E00               	movlw	0
  4973  0023F6  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4974  0023F8  0E0A               	movlw	10
  4975  0023FA  6F62               	movwf	___awdiv@divisor& (0+255),b
  4976  0023FC  EC8C  F017         	call	___awdiv	;wreg free
  4977  002400  0100               	movlb	0	; () banked
  4978  002402  5160               	movf	?___awdiv& (0+255),w,b
  4979  002404  0F30               	addlw	48
  4980  002406  6F6C               	movwf	LCDPrintChar@ch& (0+255),b
  4981  002408  0E01               	movlw	1
  4982  00240A  EC21  F01D         	call	_LCDPrintChar
  4983  00240E                     
  4984                           ;main.c: 67:     LCDPrintChar(1, 5, humid % 10 + '0');
  4985  00240E  0E05               	movlw	5
  4986  002410  0100               	movlb	0	; () banked
  4987  002412  6F6B               	movwf	LCDPrintChar@pos& (0+255),b
  4988  002414  C091  F060         	movff	printTempAndHumid@humid,___awmod@dividend
  4989  002418  C092  F061         	movff	printTempAndHumid@humid+1,___awmod@dividend+1
  4990  00241C  0E00               	movlw	0
  4991  00241E  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  4992  002420  0E0A               	movlw	10
  4993  002422  6F62               	movwf	___awmod@divisor& (0+255),b
  4994  002424  ECEF  F017         	call	___awmod	;wreg free
  4995  002428  0100               	movlb	0	; () banked
  4996  00242A  5160               	movf	?___awmod& (0+255),w,b
  4997  00242C  0F30               	addlw	48
  4998  00242E  6F6C               	movwf	LCDPrintChar@ch& (0+255),b
  4999  002430  0E01               	movlw	1
  5000  002432  EC21  F01D         	call	_LCDPrintChar
  5001  002436  0012               	return		;funcret
  5002  002438                     __end_of_printTempAndHumid:
  5003                           	opt callstack 0
  5004                           
  5005 ;; *************** function ___flmul *****************
  5006 ;; Defined at:
  5007 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  5008 ;; Parameters:    Size  Location     Type
  5009 ;;  b               4   14[BANK0 ] void 
  5010 ;;  a               4   18[BANK0 ] void 
  5011 ;; Auto vars:     Size  Location     Type
  5012 ;;  prod            4   33[BANK0 ] struct .
  5013 ;;  grs             4   27[BANK0 ] unsigned long 
  5014 ;;  temp            2   37[BANK0 ] struct .
  5015 ;;  bexp            1   32[BANK0 ] unsigned char 
  5016 ;;  aexp            1   31[BANK0 ] unsigned char 
  5017 ;;  sign            1   26[BANK0 ] unsigned char 
  5018 ;; Return value:  Size  Location     Type
  5019 ;;                  4   14[BANK0 ] unsigned char 
  5020 ;; Registers used:
  5021 ;;		wreg, status,2, status,0, prodl, prodh
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5027 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5028 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5029 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5030 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5031 ;;Total ram usage:       25 bytes
  5032 ;; Hardware stack levels used:    1
  5033 ;; Hardware stack levels required when called:    6
  5034 ;; This function calls:
  5035 ;;		Nothing
  5036 ;; This function is called by:
  5037 ;;		_printTempAndHumid
  5038 ;;		_readTempAndHumid
  5039 ;; This function uses a non-reentrant model
  5040 ;;
  5041                           
  5042                           	psect	text25
  5043  0019C2                     __ptext25:
  5044                           	opt callstack 0
  5045  0019C2                     ___flmul:
  5046                           	opt callstack 21
  5047  0019C2  0100               	movlb	0	; () banked
  5048  0019C4  5171               	movf	(___flmul@b+3)& (0+255),w,b
  5049  0019C6  0B80               	andlw	128
  5050  0019C8  6F7A               	movwf	___flmul@sign& (0+255),b
  5051  0019CA  5171               	movf	(___flmul@b+3)& (0+255),w,b
  5052  0019CC  2571               	addwf	(___flmul@b+3)& (0+255),w,b
  5053  0019CE  6F80               	movwf	___flmul@bexp& (0+255),b
  5054  0019D0                     
  5055                           ; BSR set to: 0
  5056  0019D0  AF70               	btfss	(___flmul@b+2)& (0+255),7,b
  5057  0019D2  EFED  F00C         	goto	u2711
  5058  0019D6  EFEF  F00C         	goto	u2710
  5059  0019DA                     u2711:
  5060  0019DA  EFF0  F00C         	goto	l3483
  5061  0019DE                     u2710:
  5062  0019DE                     
  5063                           ; BSR set to: 0
  5064  0019DE  8180               	bsf	___flmul@bexp& (0+255),0,b
  5065  0019E0                     l3483:
  5066                           
  5067                           ; BSR set to: 0
  5068  0019E0  5180               	movf	___flmul@bexp& (0+255),w,b
  5069  0019E2  B4D8               	btfsc	status,2,c
  5070  0019E4  EFF6  F00C         	goto	u2721
  5071  0019E8  EFF8  F00C         	goto	u2720
  5072  0019EC                     u2721:
  5073  0019EC  EF0B  F00D         	goto	l3491
  5074  0019F0                     u2720:
  5075  0019F0                     
  5076                           ; BSR set to: 0
  5077  0019F0  2980               	incf	___flmul@bexp& (0+255),w,b
  5078  0019F2  A4D8               	btfss	status,2,c
  5079  0019F4  EFFE  F00C         	goto	u2731
  5080  0019F8  EF00  F00D         	goto	u2730
  5081  0019FC                     u2731:
  5082  0019FC  EF08  F00D         	goto	l3489
  5083  001A00                     u2730:
  5084  001A00                     
  5085                           ; BSR set to: 0
  5086  001A00  0E00               	movlw	0
  5087  001A02  6F6E               	movwf	___flmul@b& (0+255),b
  5088  001A04  0E00               	movlw	0
  5089  001A06  6F6F               	movwf	(___flmul@b+1)& (0+255),b
  5090  001A08  0E00               	movlw	0
  5091  001A0A  6F70               	movwf	(___flmul@b+2)& (0+255),b
  5092  001A0C  0E00               	movlw	0
  5093  001A0E  6F71               	movwf	(___flmul@b+3)& (0+255),b
  5094  001A10                     l3489:
  5095                           
  5096                           ; BSR set to: 0
  5097  001A10  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
  5098  001A12  EF13  F00D         	goto	l3493
  5099  001A16                     l3491:
  5100                           
  5101                           ; BSR set to: 0
  5102  001A16  0E00               	movlw	0
  5103  001A18  6F6E               	movwf	___flmul@b& (0+255),b
  5104  001A1A  0E00               	movlw	0
  5105  001A1C  6F6F               	movwf	(___flmul@b+1)& (0+255),b
  5106  001A1E  0E00               	movlw	0
  5107  001A20  6F70               	movwf	(___flmul@b+2)& (0+255),b
  5108  001A22  0E00               	movlw	0
  5109  001A24  6F71               	movwf	(___flmul@b+3)& (0+255),b
  5110  001A26                     l3493:
  5111                           
  5112                           ; BSR set to: 0
  5113  001A26  5175               	movf	(___flmul@a+3)& (0+255),w,b
  5114  001A28  0B80               	andlw	128
  5115  001A2A  1B7A               	xorwf	___flmul@sign& (0+255),f,b
  5116  001A2C                     
  5117                           ; BSR set to: 0
  5118  001A2C  5175               	movf	(___flmul@a+3)& (0+255),w,b
  5119  001A2E  2575               	addwf	(___flmul@a+3)& (0+255),w,b
  5120  001A30  6F7F               	movwf	___flmul@aexp& (0+255),b
  5121  001A32                     
  5122                           ; BSR set to: 0
  5123  001A32  AF74               	btfss	(___flmul@a+2)& (0+255),7,b
  5124  001A34  EF1E  F00D         	goto	u2741
  5125  001A38  EF20  F00D         	goto	u2740
  5126  001A3C                     u2741:
  5127  001A3C  EF21  F00D         	goto	l3501
  5128  001A40                     u2740:
  5129  001A40                     
  5130                           ; BSR set to: 0
  5131  001A40  817F               	bsf	___flmul@aexp& (0+255),0,b
  5132  001A42                     l3501:
  5133                           
  5134                           ; BSR set to: 0
  5135  001A42  517F               	movf	___flmul@aexp& (0+255),w,b
  5136  001A44  B4D8               	btfsc	status,2,c
  5137  001A46  EF27  F00D         	goto	u2751
  5138  001A4A  EF29  F00D         	goto	u2750
  5139  001A4E                     u2751:
  5140  001A4E  EF3C  F00D         	goto	l3509
  5141  001A52                     u2750:
  5142  001A52                     
  5143                           ; BSR set to: 0
  5144  001A52  297F               	incf	___flmul@aexp& (0+255),w,b
  5145  001A54  A4D8               	btfss	status,2,c
  5146  001A56  EF2F  F00D         	goto	u2761
  5147  001A5A  EF31  F00D         	goto	u2760
  5148  001A5E                     u2761:
  5149  001A5E  EF39  F00D         	goto	l3507
  5150  001A62                     u2760:
  5151  001A62                     
  5152                           ; BSR set to: 0
  5153  001A62  0E00               	movlw	0
  5154  001A64  6F72               	movwf	___flmul@a& (0+255),b
  5155  001A66  0E00               	movlw	0
  5156  001A68  6F73               	movwf	(___flmul@a+1)& (0+255),b
  5157  001A6A  0E00               	movlw	0
  5158  001A6C  6F74               	movwf	(___flmul@a+2)& (0+255),b
  5159  001A6E  0E00               	movlw	0
  5160  001A70  6F75               	movwf	(___flmul@a+3)& (0+255),b
  5161  001A72                     l3507:
  5162                           
  5163                           ; BSR set to: 0
  5164  001A72  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
  5165  001A74  EF44  F00D         	goto	l1440
  5166  001A78                     l3509:
  5167                           
  5168                           ; BSR set to: 0
  5169  001A78  0E00               	movlw	0
  5170  001A7A  6F72               	movwf	___flmul@a& (0+255),b
  5171  001A7C  0E00               	movlw	0
  5172  001A7E  6F73               	movwf	(___flmul@a+1)& (0+255),b
  5173  001A80  0E00               	movlw	0
  5174  001A82  6F74               	movwf	(___flmul@a+2)& (0+255),b
  5175  001A84  0E00               	movlw	0
  5176  001A86  6F75               	movwf	(___flmul@a+3)& (0+255),b
  5177  001A88                     l1440:
  5178                           
  5179                           ; BSR set to: 0
  5180  001A88  517F               	movf	___flmul@aexp& (0+255),w,b
  5181  001A8A  B4D8               	btfsc	status,2,c
  5182  001A8C  EF4A  F00D         	goto	u2771
  5183  001A90  EF4C  F00D         	goto	u2770
  5184  001A94                     u2771:
  5185  001A94  EF54  F00D         	goto	l3513
  5186  001A98                     u2770:
  5187  001A98                     
  5188                           ; BSR set to: 0
  5189  001A98  5180               	movf	___flmul@bexp& (0+255),w,b
  5190  001A9A  A4D8               	btfss	status,2,c
  5191  001A9C  EF52  F00D         	goto	u2781
  5192  001AA0  EF54  F00D         	goto	u2780
  5193  001AA4                     u2781:
  5194  001AA4  EF5E  F00D         	goto	l3517
  5195  001AA8                     u2780:
  5196  001AA8                     l3513:
  5197                           
  5198                           ; BSR set to: 0
  5199  001AA8  0E00               	movlw	0
  5200  001AAA  6F6E               	movwf	?___flmul& (0+255),b
  5201  001AAC  0E00               	movlw	0
  5202  001AAE  6F6F               	movwf	(?___flmul+1)& (0+255),b
  5203  001AB0  0E00               	movlw	0
  5204  001AB2  6F70               	movwf	(?___flmul+2)& (0+255),b
  5205  001AB4  0E00               	movlw	0
  5206  001AB6  6F71               	movwf	(?___flmul+3)& (0+255),b
  5207  001AB8  EFF6  F00E         	goto	l1444
  5208  001ABC                     l3517:
  5209                           
  5210                           ; BSR set to: 0
  5211  001ABC  5174               	movf	(___flmul@a+2)& (0+255),w,b
  5212  001ABE  036E               	mulwf	___flmul@b& (0+255),b
  5213  001AC0  CFF3 F085          	movff	prodl,___flmul@temp
  5214  001AC4  CFF4 F086          	movff	prodh,___flmul@temp+1
  5215  001AC8                     
  5216                           ; BSR set to: 0
  5217  001AC8  5185               	movf	___flmul@temp& (0+255),w,b
  5218  001ACA  6F7B               	movwf	___flmul@grs& (0+255),b
  5219  001ACC  6B7C               	clrf	(___flmul@grs+1)& (0+255),b
  5220  001ACE  6B7D               	clrf	(___flmul@grs+2)& (0+255),b
  5221  001AD0  6B7E               	clrf	(___flmul@grs+3)& (0+255),b
  5222  001AD2                     
  5223                           ; BSR set to: 0
  5224  001AD2  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5225  001AD4  6F81               	movwf	___flmul@prod& (0+255),b
  5226  001AD6  6B82               	clrf	(___flmul@prod+1)& (0+255),b
  5227  001AD8  6B83               	clrf	(___flmul@prod+2)& (0+255),b
  5228  001ADA  6B84               	clrf	(___flmul@prod+3)& (0+255),b
  5229  001ADC  5173               	movf	(___flmul@a+1)& (0+255),w,b
  5230  001ADE  036F               	mulwf	(___flmul@b+1)& (0+255),b
  5231  001AE0  CFF3 F085          	movff	prodl,___flmul@temp
  5232  001AE4  CFF4 F086          	movff	prodh,___flmul@temp+1
  5233  001AE8                     
  5234                           ; BSR set to: 0
  5235  001AE8  5185               	movf	___flmul@temp& (0+255),w,b
  5236  001AEA  277B               	addwf	___flmul@grs& (0+255),f,b
  5237  001AEC  0E00               	movlw	0
  5238  001AEE  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5239  001AF0  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5240  001AF2  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5241  001AF4                     
  5242                           ; BSR set to: 0
  5243  001AF4  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5244  001AF6  2781               	addwf	___flmul@prod& (0+255),f,b
  5245  001AF8  0E00               	movlw	0
  5246  001AFA  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5247  001AFC  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5248  001AFE  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5249  001B00  5172               	movf	___flmul@a& (0+255),w,b
  5250  001B02  0370               	mulwf	(___flmul@b+2)& (0+255),b
  5251  001B04  CFF3 F085          	movff	prodl,___flmul@temp
  5252  001B08  CFF4 F086          	movff	prodh,___flmul@temp+1
  5253  001B0C                     
  5254                           ; BSR set to: 0
  5255  001B0C  5185               	movf	___flmul@temp& (0+255),w,b
  5256  001B0E  277B               	addwf	___flmul@grs& (0+255),f,b
  5257  001B10  0E00               	movlw	0
  5258  001B12  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5259  001B14  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5260  001B16  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5261  001B18                     
  5262                           ; BSR set to: 0
  5263  001B18  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5264  001B1A  2781               	addwf	___flmul@prod& (0+255),f,b
  5265  001B1C  0E00               	movlw	0
  5266  001B1E  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5267  001B20  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5268  001B22  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5269  001B24                     
  5270                           ; BSR set to: 0
  5271  001B24  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
  5272  001B28  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
  5273  001B2C  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
  5274  001B30  6B7B               	clrf	___flmul@grs& (0+255),b
  5275  001B32                     
  5276                           ; BSR set to: 0
  5277  001B32  5172               	movf	___flmul@a& (0+255),w,b
  5278  001B34  036F               	mulwf	(___flmul@b+1)& (0+255),b
  5279  001B36  CFF3 F085          	movff	prodl,___flmul@temp
  5280  001B3A  CFF4 F086          	movff	prodh,___flmul@temp+1
  5281  001B3E                     
  5282                           ; BSR set to: 0
  5283  001B3E  5185               	movf	___flmul@temp& (0+255),w,b
  5284  001B40  277B               	addwf	___flmul@grs& (0+255),f,b
  5285  001B42  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5286  001B44  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5287  001B46  0E00               	movlw	0
  5288  001B48  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5289  001B4A  0E00               	movlw	0
  5290  001B4C  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5291  001B4E                     
  5292                           ; BSR set to: 0
  5293  001B4E  5173               	movf	(___flmul@a+1)& (0+255),w,b
  5294  001B50  036E               	mulwf	___flmul@b& (0+255),b
  5295  001B52  CFF3 F085          	movff	prodl,___flmul@temp
  5296  001B56  CFF4 F086          	movff	prodh,___flmul@temp+1
  5297  001B5A                     
  5298                           ; BSR set to: 0
  5299  001B5A  5185               	movf	___flmul@temp& (0+255),w,b
  5300  001B5C  277B               	addwf	___flmul@grs& (0+255),f,b
  5301  001B5E  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5302  001B60  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5303  001B62  0E00               	movlw	0
  5304  001B64  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5305  001B66  0E00               	movlw	0
  5306  001B68  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5307  001B6A                     
  5308                           ; BSR set to: 0
  5309  001B6A  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
  5310  001B6E  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
  5311  001B72  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
  5312  001B76  6B7B               	clrf	___flmul@grs& (0+255),b
  5313  001B78  5172               	movf	___flmul@a& (0+255),w,b
  5314  001B7A  036E               	mulwf	___flmul@b& (0+255),b
  5315  001B7C  CFF3 F085          	movff	prodl,___flmul@temp
  5316  001B80  CFF4 F086          	movff	prodh,___flmul@temp+1
  5317  001B84                     
  5318                           ; BSR set to: 0
  5319  001B84  5185               	movf	___flmul@temp& (0+255),w,b
  5320  001B86  277B               	addwf	___flmul@grs& (0+255),f,b
  5321  001B88  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5322  001B8A  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5323  001B8C  0E00               	movlw	0
  5324  001B8E  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5325  001B90  0E00               	movlw	0
  5326  001B92  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5327  001B94                     
  5328                           ; BSR set to: 0
  5329  001B94  5174               	movf	(___flmul@a+2)& (0+255),w,b
  5330  001B96  036F               	mulwf	(___flmul@b+1)& (0+255),b
  5331  001B98  CFF3 F085          	movff	prodl,___flmul@temp
  5332  001B9C  CFF4 F086          	movff	prodh,___flmul@temp+1
  5333  001BA0  5185               	movf	___flmul@temp& (0+255),w,b
  5334  001BA2  2781               	addwf	___flmul@prod& (0+255),f,b
  5335  001BA4  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5336  001BA6  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5337  001BA8  0E00               	movlw	0
  5338  001BAA  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5339  001BAC  0E00               	movlw	0
  5340  001BAE  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5341  001BB0                     
  5342                           ; BSR set to: 0
  5343  001BB0  5173               	movf	(___flmul@a+1)& (0+255),w,b
  5344  001BB2  0370               	mulwf	(___flmul@b+2)& (0+255),b
  5345  001BB4  CFF3 F085          	movff	prodl,___flmul@temp
  5346  001BB8  CFF4 F086          	movff	prodh,___flmul@temp+1
  5347  001BBC                     
  5348                           ; BSR set to: 0
  5349  001BBC  5185               	movf	___flmul@temp& (0+255),w,b
  5350  001BBE  2781               	addwf	___flmul@prod& (0+255),f,b
  5351  001BC0  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5352  001BC2  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5353  001BC4  0E00               	movlw	0
  5354  001BC6  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5355  001BC8  0E00               	movlw	0
  5356  001BCA  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5357  001BCC  5174               	movf	(___flmul@a+2)& (0+255),w,b
  5358  001BCE  0370               	mulwf	(___flmul@b+2)& (0+255),b
  5359  001BD0  CFF3 F085          	movff	prodl,___flmul@temp
  5360  001BD4  CFF4 F086          	movff	prodh,___flmul@temp+1
  5361  001BD8                     
  5362                           ; BSR set to: 0
  5363  001BD8  5185               	movf	___flmul@temp& (0+255),w,b
  5364  001BDA  6F76               	movwf	??___flmul& (0+255),b
  5365  001BDC  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5366  001BDE  6F77               	movwf	(??___flmul+1)& (0+255),b
  5367  001BE0  6B78               	clrf	(??___flmul+2)& (0+255),b
  5368  001BE2  6B79               	clrf	(??___flmul+3)& (0+255),b
  5369  001BE4  C078  F079         	movff	??___flmul+2,??___flmul+3
  5370  001BE8  C077  F078         	movff	??___flmul+1,??___flmul+2
  5371  001BEC  C076  F077         	movff	??___flmul,??___flmul+1
  5372  001BF0  6B76               	clrf	??___flmul& (0+255),b
  5373  001BF2  5176               	movf	??___flmul& (0+255),w,b
  5374  001BF4  2781               	addwf	___flmul@prod& (0+255),f,b
  5375  001BF6  5177               	movf	(??___flmul+1)& (0+255),w,b
  5376  001BF8  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5377  001BFA  5178               	movf	(??___flmul+2)& (0+255),w,b
  5378  001BFC  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5379  001BFE  5179               	movf	(??___flmul+3)& (0+255),w,b
  5380  001C00  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5381  001C02                     
  5382                           ; BSR set to: 0
  5383  001C02  C07B  F076         	movff	___flmul@grs,??___flmul
  5384  001C06  C07C  F077         	movff	___flmul@grs+1,??___flmul+1
  5385  001C0A  C07D  F078         	movff	___flmul@grs+2,??___flmul+2
  5386  001C0E  C07E  F079         	movff	___flmul@grs+3,??___flmul+3
  5387  001C12  0E19               	movlw	25
  5388  001C14  EF11  F00E         	goto	u2790
  5389  001C18                     u2795:
  5390  001C18  90D8               	bcf	status,0,c
  5391  001C1A  3379               	rrcf	(??___flmul+3)& (0+255),f,b
  5392  001C1C  3378               	rrcf	(??___flmul+2)& (0+255),f,b
  5393  001C1E  3377               	rrcf	(??___flmul+1)& (0+255),f,b
  5394  001C20  3376               	rrcf	??___flmul& (0+255),f,b
  5395  001C22                     u2790:
  5396  001C22  2EE8               	decfsz	wreg,f,c
  5397  001C24  EF0C  F00E         	goto	u2795
  5398  001C28  5176               	movf	??___flmul& (0+255),w,b
  5399  001C2A  2781               	addwf	___flmul@prod& (0+255),f,b
  5400  001C2C  5177               	movf	(??___flmul+1)& (0+255),w,b
  5401  001C2E  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5402  001C30  5178               	movf	(??___flmul+2)& (0+255),w,b
  5403  001C32  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5404  001C34  5179               	movf	(??___flmul+3)& (0+255),w,b
  5405  001C36  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5406  001C38                     
  5407                           ; BSR set to: 0
  5408  001C38  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
  5409  001C3C  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
  5410  001C40  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
  5411  001C44  6B7B               	clrf	___flmul@grs& (0+255),b
  5412  001C46                     
  5413                           ; BSR set to: 0
  5414  001C46  517F               	movf	___flmul@aexp& (0+255),w,b
  5415  001C48  C080  F076         	movff	___flmul@bexp,??___flmul
  5416  001C4C  6B77               	clrf	(??___flmul+1)& (0+255),b
  5417  001C4E  2776               	addwf	??___flmul& (0+255),f,b
  5418  001C50  0E00               	movlw	0
  5419  001C52  2377               	addwfc	(??___flmul+1)& (0+255),f,b
  5420  001C54  0E82               	movlw	130
  5421  001C56  2576               	addwf	??___flmul& (0+255),w,b
  5422  001C58  6F85               	movwf	___flmul@temp& (0+255),b
  5423  001C5A  0EFF               	movlw	255
  5424  001C5C  2177               	addwfc	(??___flmul+1)& (0+255),w,b
  5425  001C5E  6F86               	movwf	(___flmul@temp+1)& (0+255),b
  5426  001C60  EF47  F00E         	goto	l3565
  5427  001C64                     l3559:
  5428                           
  5429                           ; BSR set to: 0
  5430  001C64  90D8               	bcf	status,0,c
  5431  001C66  3781               	rlcf	___flmul@prod& (0+255),f,b
  5432  001C68  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
  5433  001C6A  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
  5434  001C6C  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
  5435  001C6E                     
  5436                           ; BSR set to: 0
  5437  001C6E  AF7E               	btfss	(___flmul@grs+3)& (0+255),7,b
  5438  001C70  EF3C  F00E         	goto	u2801
  5439  001C74  EF3E  F00E         	goto	u2800
  5440  001C78                     u2801:
  5441  001C78  EF3F  F00E         	goto	l1447
  5442  001C7C                     u2800:
  5443  001C7C                     
  5444                           ; BSR set to: 0
  5445  001C7C  8181               	bsf	___flmul@prod& (0+255),0,b
  5446  001C7E                     l1447:
  5447                           
  5448                           ; BSR set to: 0
  5449  001C7E  90D8               	bcf	status,0,c
  5450  001C80  377B               	rlcf	___flmul@grs& (0+255),f,b
  5451  001C82  377C               	rlcf	(___flmul@grs+1)& (0+255),f,b
  5452  001C84  377D               	rlcf	(___flmul@grs+2)& (0+255),f,b
  5453  001C86  377E               	rlcf	(___flmul@grs+3)& (0+255),f,b
  5454  001C88  0785               	decf	___flmul@temp& (0+255),f,b
  5455  001C8A  A0D8               	btfss	status,0,c
  5456  001C8C  0786               	decf	(___flmul@temp+1)& (0+255),f,b
  5457  001C8E                     l3565:
  5458                           
  5459                           ; BSR set to: 0
  5460  001C8E  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
  5461  001C90  EF4C  F00E         	goto	u2811
  5462  001C94  EF4E  F00E         	goto	u2810
  5463  001C98                     u2811:
  5464  001C98  EF32  F00E         	goto	l3559
  5465  001C9C                     u2810:
  5466  001C9C                     
  5467                           ; BSR set to: 0
  5468  001C9C  0E00               	movlw	0
  5469  001C9E  6F7F               	movwf	___flmul@aexp& (0+255),b
  5470  001CA0                     
  5471                           ; BSR set to: 0
  5472  001CA0  AF7E               	btfss	(___flmul@grs+3)& (0+255),7,b
  5473  001CA2  EF55  F00E         	goto	u2821
  5474  001CA6  EF57  F00E         	goto	u2820
  5475  001CAA                     u2821:
  5476  001CAA  EF7B  F00E         	goto	l1449
  5477  001CAE                     u2820:
  5478  001CAE                     
  5479                           ; BSR set to: 0
  5480  001CAE  0EFF               	movlw	255
  5481  001CB0  157B               	andwf	___flmul@grs& (0+255),w,b
  5482  001CB2  6F76               	movwf	??___flmul& (0+255),b
  5483  001CB4  0EFF               	movlw	255
  5484  001CB6  157C               	andwf	(___flmul@grs+1)& (0+255),w,b
  5485  001CB8  6F77               	movwf	(??___flmul+1)& (0+255),b
  5486  001CBA  0EFF               	movlw	255
  5487  001CBC  157D               	andwf	(___flmul@grs+2)& (0+255),w,b
  5488  001CBE  6F78               	movwf	(??___flmul+2)& (0+255),b
  5489  001CC0  0E7F               	movlw	127
  5490  001CC2  157E               	andwf	(___flmul@grs+3)& (0+255),w,b
  5491  001CC4  6F79               	movwf	(??___flmul+3)& (0+255),b
  5492  001CC6  5176               	movf	??___flmul& (0+255),w,b
  5493  001CC8  1177               	iorwf	(??___flmul+1)& (0+255),w,b
  5494  001CCA  1178               	iorwf	(??___flmul+2)& (0+255),w,b
  5495  001CCC  1179               	iorwf	(??___flmul+3)& (0+255),w,b
  5496  001CCE  B4D8               	btfsc	status,2,c
  5497  001CD0  EF6C  F00E         	goto	u2831
  5498  001CD4  EF6E  F00E         	goto	u2830
  5499  001CD8                     u2831:
  5500  001CD8  EF72  F00E         	goto	l1450
  5501  001CDC                     u2830:
  5502  001CDC                     l3573:
  5503                           
  5504                           ; BSR set to: 0
  5505  001CDC  0E01               	movlw	1
  5506  001CDE  6F7F               	movwf	___flmul@aexp& (0+255),b
  5507  001CE0  EF7B  F00E         	goto	l1449
  5508  001CE4                     l1450:
  5509                           
  5510                           ; BSR set to: 0
  5511  001CE4  A181               	btfss	___flmul@prod& (0+255),0,b
  5512  001CE6  EF77  F00E         	goto	u2841
  5513  001CEA  EF79  F00E         	goto	u2840
  5514  001CEE                     u2841:
  5515  001CEE  EF7B  F00E         	goto	l1449
  5516  001CF2                     u2840:
  5517  001CF2  EF6E  F00E         	goto	l3573
  5518  001CF6                     l1449:
  5519                           
  5520                           ; BSR set to: 0
  5521  001CF6  517F               	movf	___flmul@aexp& (0+255),w,b
  5522  001CF8  B4D8               	btfsc	status,2,c
  5523  001CFA  EF81  F00E         	goto	u2851
  5524  001CFE  EF83  F00E         	goto	u2850
  5525  001D02                     u2851:
  5526  001D02  EFA7  F00E         	goto	l3585
  5527  001D06                     u2850:
  5528  001D06                     
  5529                           ; BSR set to: 0
  5530  001D06  0E01               	movlw	1
  5531  001D08  2781               	addwf	___flmul@prod& (0+255),f,b
  5532  001D0A  0E00               	movlw	0
  5533  001D0C  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5534  001D0E  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5535  001D10  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5536  001D12                     
  5537                           ; BSR set to: 0
  5538  001D12  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
  5539  001D14  EF8E  F00E         	goto	u2861
  5540  001D18  EF90  F00E         	goto	u2860
  5541  001D1C                     u2861:
  5542  001D1C  EFA7  F00E         	goto	l3585
  5543  001D20                     u2860:
  5544  001D20                     
  5545                           ; BSR set to: 0
  5546  001D20  C081  F076         	movff	___flmul@prod,??___flmul
  5547  001D24  C082  F077         	movff	___flmul@prod+1,??___flmul+1
  5548  001D28  C083  F078         	movff	___flmul@prod+2,??___flmul+2
  5549  001D2C  C084  F079         	movff	___flmul@prod+3,??___flmul+3
  5550  001D30  3579               	rlcf	(??___flmul+3)& (0+255),w,b
  5551  001D32  3379               	rrcf	(??___flmul+3)& (0+255),f,b
  5552  001D34  3378               	rrcf	(??___flmul+2)& (0+255),f,b
  5553  001D36  3377               	rrcf	(??___flmul+1)& (0+255),f,b
  5554  001D38  3376               	rrcf	??___flmul& (0+255),f,b
  5555  001D3A  C076  F081         	movff	??___flmul,___flmul@prod
  5556  001D3E  C077  F082         	movff	??___flmul+1,___flmul@prod+1
  5557  001D42  C078  F083         	movff	??___flmul+2,___flmul@prod+2
  5558  001D46  C079  F084         	movff	??___flmul+3,___flmul@prod+3
  5559  001D4A                     
  5560                           ; BSR set to: 0
  5561  001D4A  4B85               	infsnz	___flmul@temp& (0+255),f,b
  5562  001D4C  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
  5563  001D4E                     l3585:
  5564                           
  5565                           ; BSR set to: 0
  5566  001D4E  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5567  001D50  EFB2  F00E         	goto	u2871
  5568  001D54  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5569  001D56  E108               	bnz	u2870
  5570  001D58  2985               	incf	___flmul@temp& (0+255),w,b
  5571  001D5A  A0D8               	btfss	status,0,c
  5572  001D5C  EFB2  F00E         	goto	u2871
  5573  001D60  EFB4  F00E         	goto	u2870
  5574  001D64                     u2871:
  5575  001D64  EFBE  F00E         	goto	l3589
  5576  001D68                     u2870:
  5577  001D68                     
  5578                           ; BSR set to: 0
  5579  001D68  0E00               	movlw	0
  5580  001D6A  6F81               	movwf	___flmul@prod& (0+255),b
  5581  001D6C  0E00               	movlw	0
  5582  001D6E  6F82               	movwf	(___flmul@prod+1)& (0+255),b
  5583  001D70  0E80               	movlw	128
  5584  001D72  6F83               	movwf	(___flmul@prod+2)& (0+255),b
  5585  001D74  0E7F               	movlw	127
  5586  001D76  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  5587  001D78  EFEC  F00E         	goto	l3601
  5588  001D7C                     l3589:
  5589                           
  5590                           ; BSR set to: 0
  5591  001D7C  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5592  001D7E  EFCB  F00E         	goto	u2880
  5593  001D82  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5594  001D84  E106               	bnz	u2881
  5595  001D86  0585               	decf	___flmul@temp& (0+255),w,b
  5596  001D88  B0D8               	btfsc	status,0,c
  5597  001D8A  EFC9  F00E         	goto	u2881
  5598  001D8E  EFCB  F00E         	goto	u2880
  5599  001D92                     u2881:
  5600  001D92  EFD7  F00E         	goto	l1457
  5601  001D96                     u2880:
  5602  001D96                     
  5603                           ; BSR set to: 0
  5604  001D96  0E00               	movlw	0
  5605  001D98  6F81               	movwf	___flmul@prod& (0+255),b
  5606  001D9A  0E00               	movlw	0
  5607  001D9C  6F82               	movwf	(___flmul@prod+1)& (0+255),b
  5608  001D9E  0E00               	movlw	0
  5609  001DA0  6F83               	movwf	(___flmul@prod+2)& (0+255),b
  5610  001DA2  0E00               	movlw	0
  5611  001DA4  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  5612  001DA6  0E00               	movlw	0
  5613  001DA8  6F7A               	movwf	___flmul@sign& (0+255),b
  5614  001DAA  EFEC  F00E         	goto	l3601
  5615  001DAE                     l1457:
  5616                           
  5617                           ; BSR set to: 0
  5618  001DAE  C085  F080         	movff	___flmul@temp,___flmul@bexp
  5619  001DB2                     
  5620                           ; BSR set to: 0
  5621  001DB2  0EFF               	movlw	255
  5622  001DB4  1781               	andwf	___flmul@prod& (0+255),f,b
  5623  001DB6  0EFF               	movlw	255
  5624  001DB8  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
  5625  001DBA  0E7F               	movlw	127
  5626  001DBC  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
  5627  001DBE  0E00               	movlw	0
  5628  001DC0  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
  5629  001DC2                     
  5630                           ; BSR set to: 0
  5631  001DC2  A180               	btfss	___flmul@bexp& (0+255),0,b
  5632  001DC4  EFE6  F00E         	goto	u2891
  5633  001DC8  EFE8  F00E         	goto	u2890
  5634  001DCC                     u2891:
  5635  001DCC  EFE9  F00E         	goto	l3599
  5636  001DD0                     u2890:
  5637  001DD0                     
  5638                           ; BSR set to: 0
  5639  001DD0  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
  5640  001DD2                     l3599:
  5641                           
  5642                           ; BSR set to: 0
  5643  001DD2  90D8               	bcf	status,0,c
  5644  001DD4  3180               	rrcf	___flmul@bexp& (0+255),w,b
  5645  001DD6  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  5646  001DD8                     l3601:
  5647                           
  5648                           ; BSR set to: 0
  5649  001DD8  517A               	movf	___flmul@sign& (0+255),w,b
  5650  001DDA  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
  5651  001DDC                     
  5652                           ; BSR set to: 0
  5653  001DDC  C081  F06E         	movff	___flmul@prod,?___flmul
  5654  001DE0  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
  5655  001DE4  C083  F070         	movff	___flmul@prod+2,?___flmul+2
  5656  001DE8  C084  F071         	movff	___flmul@prod+3,?___flmul+3
  5657  001DEC                     l1444:
  5658                           
  5659                           ; BSR set to: 0
  5660  001DEC  0012               	return		;funcret
  5661  001DEE                     __end_of___flmul:
  5662                           	opt callstack 0
  5663                           
  5664 ;; *************** function ___fleq *****************
  5665 ;; Defined at:
  5666 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  5667 ;; Parameters:    Size  Location     Type
  5668 ;;  ff1             4    0[BANK0 ] unsigned char 
  5669 ;;  ff2             4    4[BANK0 ] unsigned char 
  5670 ;; Auto vars:     Size  Location     Type
  5671 ;;		None
  5672 ;; Return value:  Size  Location     Type
  5673 ;;		None               void
  5674 ;; Registers used:
  5675 ;;		wreg, status,2, status,0
  5676 ;; Tracked objects:
  5677 ;;		On entry : 0/0
  5678 ;;		On exit  : 0/0
  5679 ;;		Unchanged: 0/0
  5680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5681 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5683 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5684 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5685 ;;Total ram usage:       12 bytes
  5686 ;; Hardware stack levels used:    1
  5687 ;; Hardware stack levels required when called:    6
  5688 ;; This function calls:
  5689 ;;		Nothing
  5690 ;; This function is called by:
  5691 ;;		_printTempAndHumid
  5692 ;; This function uses a non-reentrant model
  5693 ;;
  5694                           
  5695                           	psect	text26
  5696  0031EE                     __ptext26:
  5697                           	opt callstack 0
  5698  0031EE                     ___fleq:
  5699                           	opt callstack 21
  5700  0031EE  0E00               	movlw	0
  5701  0031F0  0100               	movlb	0	; () banked
  5702  0031F2  1560               	andwf	___fleq@ff1& (0+255),w,b
  5703  0031F4  6F68               	movwf	??___fleq& (0+255),b
  5704  0031F6  0E00               	movlw	0
  5705  0031F8  1561               	andwf	(___fleq@ff1+1)& (0+255),w,b
  5706  0031FA  6F69               	movwf	(??___fleq+1)& (0+255),b
  5707  0031FC  0E80               	movlw	128
  5708  0031FE  1562               	andwf	(___fleq@ff1+2)& (0+255),w,b
  5709  003200  6F6A               	movwf	(??___fleq+2)& (0+255),b
  5710  003202  0E7F               	movlw	127
  5711  003204  1563               	andwf	(___fleq@ff1+3)& (0+255),w,b
  5712  003206  6F6B               	movwf	(??___fleq+3)& (0+255),b
  5713  003208  5168               	movf	??___fleq& (0+255),w,b
  5714  00320A  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  5715  00320C  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  5716  00320E  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  5717  003210  A4D8               	btfss	status,2,c
  5718  003212  EF0D  F019         	goto	u2961
  5719  003216  EF0F  F019         	goto	u2960
  5720  00321A                     u2961:
  5721  00321A  EF17  F019         	goto	l3661
  5722  00321E                     u2960:
  5723  00321E                     
  5724                           ; BSR set to: 0
  5725  00321E  0E00               	movlw	0
  5726  003220  6F60               	movwf	___fleq@ff1& (0+255),b
  5727  003222  0E00               	movlw	0
  5728  003224  6F61               	movwf	(___fleq@ff1+1)& (0+255),b
  5729  003226  0E00               	movlw	0
  5730  003228  6F62               	movwf	(___fleq@ff1+2)& (0+255),b
  5731  00322A  0E00               	movlw	0
  5732  00322C  6F63               	movwf	(___fleq@ff1+3)& (0+255),b
  5733  00322E                     l3661:
  5734                           
  5735                           ; BSR set to: 0
  5736  00322E  0E00               	movlw	0
  5737  003230  1564               	andwf	___fleq@ff2& (0+255),w,b
  5738  003232  6F68               	movwf	??___fleq& (0+255),b
  5739  003234  0E00               	movlw	0
  5740  003236  1565               	andwf	(___fleq@ff2+1)& (0+255),w,b
  5741  003238  6F69               	movwf	(??___fleq+1)& (0+255),b
  5742  00323A  0E80               	movlw	128
  5743  00323C  1566               	andwf	(___fleq@ff2+2)& (0+255),w,b
  5744  00323E  6F6A               	movwf	(??___fleq+2)& (0+255),b
  5745  003240  0E7F               	movlw	127
  5746  003242  1567               	andwf	(___fleq@ff2+3)& (0+255),w,b
  5747  003244  6F6B               	movwf	(??___fleq+3)& (0+255),b
  5748  003246  5168               	movf	??___fleq& (0+255),w,b
  5749  003248  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  5750  00324A  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  5751  00324C  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  5752  00324E  A4D8               	btfss	status,2,c
  5753  003250  EF2C  F019         	goto	u2971
  5754  003254  EF2E  F019         	goto	u2970
  5755  003258                     u2971:
  5756  003258  EF36  F019         	goto	l3665
  5757  00325C                     u2970:
  5758  00325C                     
  5759                           ; BSR set to: 0
  5760  00325C  0E00               	movlw	0
  5761  00325E  6F64               	movwf	___fleq@ff2& (0+255),b
  5762  003260  0E00               	movlw	0
  5763  003262  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  5764  003264  0E00               	movlw	0
  5765  003266  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  5766  003268  0E00               	movlw	0
  5767  00326A  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  5768  00326C                     l3665:
  5769                           
  5770                           ; BSR set to: 0
  5771  00326C  5164               	movf	___fleq@ff2& (0+255),w,b
  5772  00326E  1960               	xorwf	___fleq@ff1& (0+255),w,b
  5773  003270  E10F               	bnz	u2980
  5774  003272  5165               	movf	(___fleq@ff2+1)& (0+255),w,b
  5775  003274  1961               	xorwf	(___fleq@ff1+1)& (0+255),w,b
  5776  003276  E10C               	bnz	u2980
  5777  003278  5166               	movf	(___fleq@ff2+2)& (0+255),w,b
  5778  00327A  1962               	xorwf	(___fleq@ff1+2)& (0+255),w,b
  5779  00327C  E109               	bnz	u2980
  5780  00327E  5167               	movf	(___fleq@ff2+3)& (0+255),w,b
  5781  003280  1963               	xorwf	(___fleq@ff1+3)& (0+255),w,b
  5782  003282  B4D8               	btfsc	status,2,c
  5783  003284  EF46  F019         	goto	u2981
  5784  003288  EF48  F019         	goto	u2980
  5785  00328C                     u2981:
  5786  00328C  EF4B  F019         	goto	l3669
  5787  003290                     u2980:
  5788  003290                     
  5789                           ; BSR set to: 0
  5790  003290  90D8               	bcf	status,0,c
  5791  003292  EF4C  F019         	goto	l1085
  5792  003296                     l3669:
  5793                           
  5794                           ; BSR set to: 0
  5795  003296  80D8               	bsf	status,0,c
  5796  003298                     l1085:
  5797                           
  5798                           ; BSR set to: 0
  5799  003298  0012               	return		;funcret
  5800  00329A                     __end_of___fleq:
  5801                           	opt callstack 0
  5802                           
  5803 ;; *************** function _handleButton *****************
  5804 ;; Defined at:
  5805 ;;		line 38 in file "buttons.c"
  5806 ;; Parameters:    Size  Location     Type
  5807 ;;  data_ptr        2    2[BANK0 ] PTR void 
  5808 ;;		 -> NULL(0), 
  5809 ;; Auto vars:     Size  Location     Type
  5810 ;;  checkRB0        2    8[BANK0 ] int 
  5811 ;;  checkRA5        2    6[BANK0 ] int 
  5812 ;; Return value:  Size  Location     Type
  5813 ;;                  1    wreg      void 
  5814 ;; Registers used:
  5815 ;;		wreg, status,2, status,0, cstack
  5816 ;; Tracked objects:
  5817 ;;		On entry : 0/0
  5818 ;;		On exit  : 0/0
  5819 ;;		Unchanged: 0/0
  5820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5821 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5822 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5823 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5824 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5825 ;;Total ram usage:        8 bytes
  5826 ;; Hardware stack levels used:    1
  5827 ;; Hardware stack levels required when called:    7
  5828 ;; This function calls:
  5829 ;;		_readButtonRA5
  5830 ;;		_readButtonRB0
  5831 ;; This function is called by:
  5832 ;;		_system_setup
  5833 ;;		_selectReadyTask
  5834 ;; This function uses a non-reentrant model
  5835 ;;
  5836                           
  5837                           	psect	text27
  5838  002D5C                     __ptext27:
  5839                           	opt callstack 0
  5840  002D5C                     _handleButton:
  5841                           	opt callstack 21
  5842  002D5C                     
  5843                           ;buttons.c: 39:     int checkRA5 = readButtonRA5();
  5844  002D5C  EC11  F01C         	call	_readButtonRA5	;wreg free
  5845  002D60  C060  F066         	movff	?_readButtonRA5,handleButton@checkRA5
  5846  002D64  C061  F067         	movff	?_readButtonRA5+1,handleButton@checkRA5+1
  5847                           
  5848                           ;buttons.c: 40:     int checkRB0 = readButtonRB0();
  5849  002D68  ECE8  F01B         	call	_readButtonRB0	;wreg free
  5850  002D6C  C060  F068         	movff	?_readButtonRB0,handleButton@checkRB0
  5851  002D70  C061  F069         	movff	?_readButtonRB0+1,handleButton@checkRB0+1
  5852                           
  5853                           ;buttons.c: 41:     switch(stateRA5) {
  5854  002D74  EFD9  F016         	goto	l3949
  5855  002D78                     l3939:
  5856                           
  5857                           ; BSR set to: 0
  5858                           ;buttons.c: 43:             if(checkRA5 == 2) {
  5859  002D78  0E02               	movlw	2
  5860  002D7A  1966               	xorwf	handleButton@checkRA5& (0+255),w,b
  5861  002D7C  1167               	iorwf	(handleButton@checkRA5+1)& (0+255),w,b
  5862  002D7E  A4D8               	btfss	status,2,c
  5863  002D80  EFC4  F016         	goto	u3381
  5864  002D84  EFC6  F016         	goto	u3380
  5865  002D88                     u3381:
  5866  002D88  EF0C  F017         	goto	l3961
  5867  002D8C                     u3380:
  5868  002D8C                     
  5869                           ; BSR set to: 0
  5870                           ;buttons.c: 44:                 stateRA5 = 1;
  5871  002D8C  0E01               	movlw	1
  5872  002D8E  6FC6               	movwf	_stateRA5& (0+255),b
  5873                           
  5874                           ;buttons.c: 45:                 RA5_pressed = 1;
  5875  002D90  0E01               	movlw	1
  5876  002D92  6FCC               	movwf	_RA5_pressed& (0+255),b
  5877  002D94  EF0C  F017         	goto	l3961
  5878  002D98                     l3943:
  5879                           
  5880                           ; BSR set to: 0
  5881                           ;buttons.c: 49:             if(checkRA5 == 1)
  5882  002D98  0566               	decf	handleButton@checkRA5& (0+255),w,b
  5883  002D9A  1167               	iorwf	(handleButton@checkRA5+1)& (0+255),w,b
  5884  002D9C  A4D8               	btfss	status,2,c
  5885  002D9E  EFD3  F016         	goto	u3391
  5886  002DA2  EFD5  F016         	goto	u3390
  5887  002DA6                     u3391:
  5888  002DA6  EF0C  F017         	goto	l3961
  5889  002DAA                     u3390:
  5890  002DAA                     
  5891                           ; BSR set to: 0
  5892                           ;buttons.c: 50:                 stateRA5 = 0;
  5893  002DAA  0E00               	movlw	0
  5894  002DAC  6FC6               	movwf	_stateRA5& (0+255),b
  5895  002DAE  EF0C  F017         	goto	l3961
  5896  002DB2                     l3949:
  5897  002DB2  0100               	movlb	0	; () banked
  5898  002DB4  51C6               	movf	_stateRA5& (0+255),w,b
  5899  002DB6  6F64               	movwf	??_handleButton& (0+255),b
  5900  002DB8  6B65               	clrf	(??_handleButton+1)& (0+255),b
  5901                           
  5902                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5903                           ; Switch size 1, requested type "simple"
  5904                           ; Number of cases is 1, Range of values is 0 to 0
  5905                           ; switch strategies available:
  5906                           ; Name         Instructions Cycles
  5907                           ; simple_byte            4     3 (average)
  5908                           ;	Chosen strategy is simple_byte
  5909  002DBA  5165               	movf	(??_handleButton+1)& (0+255),w,b
  5910  002DBC  0A00               	xorlw	0	; case 0
  5911  002DBE  B4D8               	btfsc	status,2,c
  5912  002DC0  EFE4  F016         	goto	l4507
  5913  002DC4  EF0C  F017         	goto	l3961
  5914  002DC8                     l4507:
  5915                           
  5916                           ; BSR set to: 0
  5917                           ; Switch size 1, requested type "simple"
  5918                           ; Number of cases is 2, Range of values is 0 to 1
  5919                           ; switch strategies available:
  5920                           ; Name         Instructions Cycles
  5921                           ; simple_byte            7     4 (average)
  5922                           ;	Chosen strategy is simple_byte
  5923  002DC8  5164               	movf	??_handleButton& (0+255),w,b
  5924  002DCA  0A00               	xorlw	0	; case 0
  5925  002DCC  B4D8               	btfsc	status,2,c
  5926  002DCE  EFBC  F016         	goto	l3939
  5927  002DD2  0A01               	xorlw	1	; case 1
  5928  002DD4  B4D8               	btfsc	status,2,c
  5929  002DD6  EFCC  F016         	goto	l3943
  5930  002DDA  EF0C  F017         	goto	l3961
  5931  002DDE                     l3951:
  5932                           
  5933                           ; BSR set to: 0
  5934                           ;buttons.c: 55:             if(checkRB0 == 2) {
  5935  002DDE  0E02               	movlw	2
  5936  002DE0  1968               	xorwf	handleButton@checkRB0& (0+255),w,b
  5937  002DE2  1169               	iorwf	(handleButton@checkRB0+1)& (0+255),w,b
  5938  002DE4  A4D8               	btfss	status,2,c
  5939  002DE6  EFF7  F016         	goto	u3401
  5940  002DEA  EFF9  F016         	goto	u3400
  5941  002DEE                     u3401:
  5942  002DEE  EF21  F017         	goto	l660
  5943  002DF2                     u3400:
  5944  002DF2                     
  5945                           ; BSR set to: 0
  5946                           ;buttons.c: 56:                 stateRB0 = 1;
  5947  002DF2  0E01               	movlw	1
  5948  002DF4  6FC5               	movwf	_stateRB0& (0+255),b
  5949                           
  5950                           ;buttons.c: 57:                 RB0_pressed = 1;
  5951  002DF6  0E01               	movlw	1
  5952  002DF8  6FCB               	movwf	_RB0_pressed& (0+255),b
  5953  002DFA  EF21  F017         	goto	l660
  5954  002DFE                     l3955:
  5955                           
  5956                           ; BSR set to: 0
  5957                           ;buttons.c: 61:             if(checkRB0 == 1)
  5958  002DFE  0568               	decf	handleButton@checkRB0& (0+255),w,b
  5959  002E00  1169               	iorwf	(handleButton@checkRB0+1)& (0+255),w,b
  5960  002E02  A4D8               	btfss	status,2,c
  5961  002E04  EF06  F017         	goto	u3411
  5962  002E08  EF08  F017         	goto	u3410
  5963  002E0C                     u3411:
  5964  002E0C  EF21  F017         	goto	l660
  5965  002E10                     u3410:
  5966  002E10                     
  5967                           ; BSR set to: 0
  5968                           ;buttons.c: 62:                 stateRB0 = 0;
  5969  002E10  0E00               	movlw	0
  5970  002E12  6FC5               	movwf	_stateRB0& (0+255),b
  5971  002E14  EF21  F017         	goto	l660
  5972  002E18                     l3961:
  5973                           
  5974                           ; BSR set to: 0
  5975  002E18  51C5               	movf	_stateRB0& (0+255),w,b
  5976  002E1A  6F64               	movwf	??_handleButton& (0+255),b
  5977  002E1C  6B65               	clrf	(??_handleButton+1)& (0+255),b
  5978                           
  5979                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5980                           ; Switch size 1, requested type "simple"
  5981                           ; Number of cases is 1, Range of values is 0 to 0
  5982                           ; switch strategies available:
  5983                           ; Name         Instructions Cycles
  5984                           ; simple_byte            4     3 (average)
  5985                           ;	Chosen strategy is simple_byte
  5986  002E1E  5165               	movf	(??_handleButton+1)& (0+255),w,b
  5987  002E20  0A00               	xorlw	0	; case 0
  5988  002E22  B4D8               	btfsc	status,2,c
  5989  002E24  EF16  F017         	goto	l4509
  5990  002E28  EF21  F017         	goto	l660
  5991  002E2C                     l4509:
  5992                           
  5993                           ; BSR set to: 0
  5994                           ; Switch size 1, requested type "simple"
  5995                           ; Number of cases is 2, Range of values is 0 to 1
  5996                           ; switch strategies available:
  5997                           ; Name         Instructions Cycles
  5998                           ; simple_byte            7     4 (average)
  5999                           ;	Chosen strategy is simple_byte
  6000  002E2C  5164               	movf	??_handleButton& (0+255),w,b
  6001  002E2E  0A00               	xorlw	0	; case 0
  6002  002E30  B4D8               	btfsc	status,2,c
  6003  002E32  EFEF  F016         	goto	l3951
  6004  002E36  0A01               	xorlw	1	; case 1
  6005  002E38  B4D8               	btfsc	status,2,c
  6006  002E3A  EFFF  F016         	goto	l3955
  6007  002E3E  EF21  F017         	goto	l660
  6008  002E42                     l660:
  6009                           
  6010                           ; BSR set to: 0
  6011  002E42  0012               	return		;funcret
  6012  002E44                     __end_of_handleButton:
  6013                           	opt callstack 0
  6014                           
  6015 ;; *************** function _readButtonRB0 *****************
  6016 ;; Defined at:
  6017 ;;		line 29 in file "buttons.c"
  6018 ;; Parameters:    Size  Location     Type
  6019 ;;		None
  6020 ;; Auto vars:     Size  Location     Type
  6021 ;;		None
  6022 ;; Return value:  Size  Location     Type
  6023 ;;                  2    0[BANK0 ] int 
  6024 ;; Registers used:
  6025 ;;		wreg, status,2, status,0
  6026 ;; Tracked objects:
  6027 ;;		On entry : 0/0
  6028 ;;		On exit  : 0/0
  6029 ;;		Unchanged: 0/0
  6030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6031 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6034 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6035 ;;Total ram usage:        2 bytes
  6036 ;; Hardware stack levels used:    1
  6037 ;; Hardware stack levels required when called:    6
  6038 ;; This function calls:
  6039 ;;		Nothing
  6040 ;; This function is called by:
  6041 ;;		_handleButton
  6042 ;; This function uses a non-reentrant model
  6043 ;;
  6044                           
  6045                           	psect	text28
  6046  0037D0                     __ptext28:
  6047                           	opt callstack 0
  6048  0037D0                     _readButtonRB0:
  6049                           	opt callstack 21
  6050  0037D0                     
  6051                           ;buttons.c: 30:     firstReadRB0 = secondReadRB0;
  6052  0037D0  C0DB  F0DC         	movff	_secondReadRB0,_firstReadRB0
  6053  0037D4                     
  6054                           ;buttons.c: 31:     secondReadRB0 = PORTBbits.RB0;
  6055  0037D4  0E00               	movlw	0
  6056  0037D6  B081               	btfsc	129,0,c	;volatile
  6057  0037D8  0E01               	movlw	1
  6058  0037DA  0100               	movlb	0	; () banked
  6059  0037DC  6FDB               	movwf	_secondReadRB0& (0+255),b
  6060  0037DE                     
  6061                           ; BSR set to: 0
  6062                           ;buttons.c: 32:     if(secondReadRB0 == firstReadRB0) {
  6063  0037DE  51DC               	movf	_firstReadRB0& (0+255),w,b
  6064  0037E0  19DB               	xorwf	_secondReadRB0& (0+255),w,b
  6065  0037E2  A4D8               	btfss	status,2,c
  6066  0037E4  EFF6  F01B         	goto	u2691
  6067  0037E8  EFF8  F01B         	goto	u2690
  6068  0037EC                     u2691:
  6069  0037EC  EF0C  F01C         	goto	l3471
  6070  0037F0                     u2690:
  6071  0037F0                     
  6072                           ; BSR set to: 0
  6073                           ;buttons.c: 33:         return (secondReadRB0 == 0) ? 2 : 1;
  6074  0037F0  51DB               	movf	_secondReadRB0& (0+255),w,b
  6075  0037F2  B4D8               	btfsc	status,2,c
  6076  0037F4  EFFE  F01B         	goto	u2701
  6077  0037F8  EF00  F01C         	goto	u2700
  6078  0037FC                     u2701:
  6079  0037FC  EF06  F01C         	goto	l3467
  6080  003800                     u2700:
  6081  003800                     
  6082                           ; BSR set to: 0
  6083  003800  0E00               	movlw	0
  6084  003802  6F61               	movwf	(?_readButtonRB0+1)& (0+255),b
  6085  003804  0E01               	movlw	1
  6086  003806  6F60               	movwf	?_readButtonRB0& (0+255),b
  6087  003808  EF10  F01C         	goto	l645
  6088  00380C                     l3467:
  6089                           
  6090                           ; BSR set to: 0
  6091  00380C  0E00               	movlw	0
  6092  00380E  6F61               	movwf	(?_readButtonRB0+1)& (0+255),b
  6093  003810  0E02               	movlw	2
  6094  003812  6F60               	movwf	?_readButtonRB0& (0+255),b
  6095  003814  EF10  F01C         	goto	l645
  6096  003818                     l3471:
  6097                           
  6098                           ; BSR set to: 0
  6099                           ;buttons.c: 35:     return 0;
  6100  003818  0E00               	movlw	0
  6101  00381A  6F61               	movwf	(?_readButtonRB0+1)& (0+255),b
  6102  00381C  0E00               	movlw	0
  6103  00381E  6F60               	movwf	?_readButtonRB0& (0+255),b
  6104  003820                     l645:
  6105                           
  6106                           ; BSR set to: 0
  6107  003820  0012               	return		;funcret
  6108  003822                     __end_of_readButtonRB0:
  6109                           	opt callstack 0
  6110                           
  6111 ;; *************** function _readButtonRA5 *****************
  6112 ;; Defined at:
  6113 ;;		line 20 in file "buttons.c"
  6114 ;; Parameters:    Size  Location     Type
  6115 ;;		None
  6116 ;; Auto vars:     Size  Location     Type
  6117 ;;		None
  6118 ;; Return value:  Size  Location     Type
  6119 ;;                  2    0[BANK0 ] int 
  6120 ;; Registers used:
  6121 ;;		wreg, status,2, status,0
  6122 ;; Tracked objects:
  6123 ;;		On entry : 0/0
  6124 ;;		On exit  : 0/0
  6125 ;;		Unchanged: 0/0
  6126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6127 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6130 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6131 ;;Total ram usage:        2 bytes
  6132 ;; Hardware stack levels used:    1
  6133 ;; Hardware stack levels required when called:    6
  6134 ;; This function calls:
  6135 ;;		Nothing
  6136 ;; This function is called by:
  6137 ;;		_handleButton
  6138 ;; This function uses a non-reentrant model
  6139 ;;
  6140                           
  6141                           	psect	text29
  6142  003822                     __ptext29:
  6143                           	opt callstack 0
  6144  003822                     _readButtonRA5:
  6145                           	opt callstack 21
  6146  003822                     
  6147                           ;buttons.c: 21:     firstReadRA5 = secondReadRA5;
  6148  003822  C0DD  F0DE         	movff	_secondReadRA5,_firstReadRA5
  6149  003826                     
  6150                           ;buttons.c: 22:     secondReadRA5 = PORTAbits.RA5;
  6151  003826  0E00               	movlw	0
  6152  003828  BA80               	btfsc	128,5,c	;volatile
  6153  00382A  0E01               	movlw	1
  6154  00382C  0100               	movlb	0	; () banked
  6155  00382E  6FDD               	movwf	_secondReadRA5& (0+255),b
  6156  003830                     
  6157                           ; BSR set to: 0
  6158                           ;buttons.c: 23:     if(secondReadRA5 == firstReadRA5) {
  6159  003830  51DE               	movf	_firstReadRA5& (0+255),w,b
  6160  003832  19DD               	xorwf	_secondReadRA5& (0+255),w,b
  6161  003834  A4D8               	btfss	status,2,c
  6162  003836  EF1F  F01C         	goto	u2671
  6163  00383A  EF21  F01C         	goto	u2670
  6164  00383E                     u2671:
  6165  00383E  EF35  F01C         	goto	l3453
  6166  003842                     u2670:
  6167  003842                     
  6168                           ; BSR set to: 0
  6169                           ;buttons.c: 24:         return (secondReadRA5 == 0) ? 2 : 1;
  6170  003842  51DD               	movf	_secondReadRA5& (0+255),w,b
  6171  003844  B4D8               	btfsc	status,2,c
  6172  003846  EF27  F01C         	goto	u2681
  6173  00384A  EF29  F01C         	goto	u2680
  6174  00384E                     u2681:
  6175  00384E  EF2F  F01C         	goto	l3449
  6176  003852                     u2680:
  6177  003852                     
  6178                           ; BSR set to: 0
  6179  003852  0E00               	movlw	0
  6180  003854  6F61               	movwf	(?_readButtonRA5+1)& (0+255),b
  6181  003856  0E01               	movlw	1
  6182  003858  6F60               	movwf	?_readButtonRA5& (0+255),b
  6183  00385A  EF39  F01C         	goto	l637
  6184  00385E                     l3449:
  6185                           
  6186                           ; BSR set to: 0
  6187  00385E  0E00               	movlw	0
  6188  003860  6F61               	movwf	(?_readButtonRA5+1)& (0+255),b
  6189  003862  0E02               	movlw	2
  6190  003864  6F60               	movwf	?_readButtonRA5& (0+255),b
  6191  003866  EF39  F01C         	goto	l637
  6192  00386A                     l3453:
  6193                           
  6194                           ; BSR set to: 0
  6195                           ;buttons.c: 26:     return 0;
  6196  00386A  0E00               	movlw	0
  6197  00386C  6F61               	movwf	(?_readButtonRA5+1)& (0+255),b
  6198  00386E  0E00               	movlw	0
  6199  003870  6F60               	movwf	?_readButtonRA5& (0+255),b
  6200  003872                     l637:
  6201                           
  6202                           ; BSR set to: 0
  6203  003872  0012               	return		;funcret
  6204  003874                     __end_of_readButtonRA5:
  6205                           	opt callstack 0
  6206                           
  6207 ;; *************** function _dequeue *****************
  6208 ;; Defined at:
  6209 ;;		line 35 in file "ready_queue.c"
  6210 ;; Parameters:    Size  Location     Type
  6211 ;;		None
  6212 ;; Auto vars:     Size  Location     Type
  6213 ;;  temp            5   15[BANK0 ] struct .
  6214 ;;  idx             2   13[BANK0 ] int 
  6215 ;; Return value:  Size  Location     Type
  6216 ;;                  5    8[BANK0 ] struct .
  6217 ;; Registers used:
  6218 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6219 ;; Tracked objects:
  6220 ;;		On entry : 0/0
  6221 ;;		On exit  : 0/0
  6222 ;;		Unchanged: 0/0
  6223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6224 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6225 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6227 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6228 ;;Total ram usage:       12 bytes
  6229 ;; Hardware stack levels used:    1
  6230 ;; Hardware stack levels required when called:    9
  6231 ;; This function calls:
  6232 ;;		___awmod
  6233 ;;		___wmul
  6234 ;;		_isEmptyQueue
  6235 ;; This function is called by:
  6236 ;;		_selectReadyTask
  6237 ;; This function uses a non-reentrant model
  6238 ;;
  6239                           
  6240                           	psect	text30
  6241  0033F0                     __ptext30:
  6242                           	opt callstack 0
  6243  0033F0                     _dequeue:
  6244                           	opt callstack 19
  6245  0033F0                     
  6246                           ;ready_queue.c: 36:     queue_node temp;;ready_queue.c: 37:     temp.func_ptr = ((void*)
      +                          0);
  6247  0033F0  0E00               	movlw	0
  6248  0033F2  0100               	movlb	0	; () banked
  6249  0033F4  6F6F               	movwf	dequeue@temp& (0+255),b
  6250  0033F6  0E00               	movlw	0
  6251  0033F8  6F70               	movwf	(dequeue@temp+1)& (0+255),b
  6252  0033FA  0E00               	movlw	0
  6253  0033FC  6F71               	movwf	(dequeue@temp+2)& (0+255),b
  6254                           
  6255                           ;ready_queue.c: 38:     temp.data_p = ((void*)0);
  6256  0033FE  0E00               	movlw	0
  6257  003400  6F72               	movwf	(dequeue@temp+3)& (0+255),b
  6258  003402  0E00               	movlw	0
  6259  003404  6F73               	movwf	(dequeue@temp+4)& (0+255),b
  6260  003406                     
  6261                           ; BSR set to: 0
  6262                           ;ready_queue.c: 39:     if(isEmptyQueue())
  6263  003406  EC7C  F01D         	call	_isEmptyQueue	;wreg free
  6264  00340A  0900               	iorlw	0
  6265  00340C  B4D8               	btfsc	status,2,c
  6266  00340E  EF0B  F01A         	goto	u3331
  6267  003412  EF0D  F01A         	goto	u3330
  6268  003416                     u3331:
  6269  003416  EF18  F01A         	goto	l586
  6270  00341A                     u3330:
  6271  00341A                     l3921:
  6272                           
  6273                           ;ready_queue.c: 40:         return temp;
  6274  00341A  EE20  F06F         	lfsr	2,dequeue@temp
  6275  00341E  EE00  F068         	lfsr	0,?_dequeue
  6276  003422  0E04               	movlw	4
  6277  003424                     u3341:
  6278  003424  CFDB FFEB          	movff	plusw2,plusw0
  6279  003428  06E8               	decf	wreg,f,c
  6280  00342A  E2FC               	bc	u3341
  6281  00342C  EF48  F01A         	goto	l587
  6282  003430                     l586:
  6283                           
  6284                           ;ready_queue.c: 41:     int idx = front;
  6285  003430  C0D7  F06D         	movff	_front,dequeue@idx
  6286  003434  C0D8  F06E         	movff	_front+1,dequeue@idx+1
  6287  003438                     
  6288                           ;ready_queue.c: 42:     front = (front + 1) % 20;
  6289  003438  0E01               	movlw	1
  6290  00343A  0100               	movlb	0	; () banked
  6291  00343C  25D7               	addwf	_front& (0+255),w,b
  6292  00343E  6F60               	movwf	___awmod@dividend& (0+255),b
  6293  003440  0E00               	movlw	0
  6294  003442  21D8               	addwfc	(_front+1)& (0+255),w,b
  6295  003444  6F61               	movwf	(___awmod@dividend+1)& (0+255),b
  6296  003446  0E00               	movlw	0
  6297  003448  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  6298  00344A  0E14               	movlw	20
  6299  00344C  6F62               	movwf	___awmod@divisor& (0+255),b
  6300  00344E  ECEF  F017         	call	___awmod	;wreg free
  6301  003452  C060  F0D7         	movff	?___awmod,_front
  6302  003456  C061  F0D8         	movff	?___awmod+1,_front+1
  6303  00345A                     
  6304                           ;ready_queue.c: 43:     temp = ready_queue[idx];
  6305  00345A  C06D  F060         	movff	dequeue@idx,___wmul@multiplier
  6306  00345E  C06E  F061         	movff	dequeue@idx+1,___wmul@multiplier+1
  6307  003462  0E00               	movlw	0
  6308  003464  0100               	movlb	0	; () banked
  6309  003466  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6310  003468  0E05               	movlw	5
  6311  00346A  6F62               	movwf	___wmul@multiplicand& (0+255),b
  6312  00346C  ECD9  F01D         	call	___wmul	;wreg free
  6313  003470  0E00               	movlw	low _ready_queue
  6314  003472  0100               	movlb	0	; () banked
  6315  003474  2560               	addwf	?___wmul& (0+255),w,b
  6316  003476  6ED9               	movwf	fsr2l,c
  6317  003478  0E01               	movlw	high _ready_queue
  6318  00347A  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  6319  00347C  6EDA               	movwf	fsr2h,c
  6320  00347E  EE10  F06F         	lfsr	1,dequeue@temp
  6321  003482  0E04               	movlw	4
  6322  003484                     u3351:
  6323  003484  CFDB FFE3          	movff	plusw2,plusw1
  6324  003488  06E8               	decf	wreg,f,c
  6325  00348A  E2FC               	bc	u3351
  6326  00348C  EF0D  F01A         	goto	l3921
  6327  003490                     l587:
  6328  003490  0012               	return		;funcret
  6329  003492                     __end_of_dequeue:
  6330                           	opt callstack 0
  6331                           
  6332 ;; *************** function _isEmptyQueue *****************
  6333 ;; Defined at:
  6334 ;;		line 18 in file "ready_queue.c"
  6335 ;; Parameters:    Size  Location     Type
  6336 ;;		None
  6337 ;; Auto vars:     Size  Location     Type
  6338 ;;		None
  6339 ;; Return value:  Size  Location     Type
  6340 ;;                  1    wreg      unsigned char 
  6341 ;; Registers used:
  6342 ;;		wreg, status,2, status,0, cstack
  6343 ;; Tracked objects:
  6344 ;;		On entry : 0/0
  6345 ;;		On exit  : 0/0
  6346 ;;		Unchanged: 0/0
  6347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6352 ;;Total ram usage:        0 bytes
  6353 ;; Hardware stack levels used:    1
  6354 ;; Hardware stack levels required when called:    8
  6355 ;; This function calls:
  6356 ;;		_getSizeQueue
  6357 ;; This function is called by:
  6358 ;;		_selectReadyTask
  6359 ;;		_dequeue
  6360 ;; This function uses a non-reentrant model
  6361 ;;
  6362                           
  6363                           	psect	text31
  6364  003AF8                     __ptext31:
  6365                           	opt callstack 0
  6366  003AF8                     _isEmptyQueue:
  6367                           	opt callstack 20
  6368  003AF8                     
  6369                           ;ready_queue.c: 19:     if(front == -1)
  6370  003AF8  0100               	movlb	0	; () banked
  6371  003AFA  29D7               	incf	_front& (0+255),w,b
  6372  003AFC  E106               	bnz	u2641
  6373  003AFE  29D8               	incf	(_front+1)& (0+255),w,b
  6374  003B00  A4D8               	btfss	status,2,c
  6375  003B02  EF85  F01D         	goto	u2641
  6376  003B06  EF87  F01D         	goto	u2640
  6377  003B0A                     u2641:
  6378  003B0A  EF8A  F01D         	goto	l3435
  6379  003B0E                     u2640:
  6380  003B0E                     
  6381                           ; BSR set to: 0
  6382                           ;ready_queue.c: 20:         return 0;
  6383  003B0E  0E00               	movlw	0
  6384  003B10  EF96  F01D         	goto	l578
  6385  003B14                     l3435:
  6386                           
  6387                           ; BSR set to: 0
  6388                           ;ready_queue.c: 21:     return getSizeQueue() == 0 ? 1 : 0;
  6389  003B14  ECAE  F01D         	call	_getSizeQueue	;wreg free
  6390  003B18  0900               	iorlw	0
  6391  003B1A  B4D8               	btfsc	status,2,c
  6392  003B1C  EF92  F01D         	goto	u2651
  6393  003B20  EF95  F01D         	goto	u2650
  6394  003B24                     u2651:
  6395  003B24  0E01               	movlw	1
  6396  003B26  EF96  F01D         	goto	u2660
  6397  003B2A                     u2650:
  6398  003B2A  0E00               	movlw	0
  6399  003B2C                     u2660:
  6400  003B2C                     l578:
  6401  003B2C  0012               	return		;funcret
  6402  003B2E                     __end_of_isEmptyQueue:
  6403                           	opt callstack 0
  6404                           
  6405 ;; *************** function _getSizeQueue *****************
  6406 ;; Defined at:
  6407 ;;		line 10 in file "ready_queue.c"
  6408 ;; Parameters:    Size  Location     Type
  6409 ;;		None
  6410 ;; Auto vars:     Size  Location     Type
  6411 ;;		None
  6412 ;; Return value:  Size  Location     Type
  6413 ;;                  1    wreg      unsigned char 
  6414 ;; Registers used:
  6415 ;;		wreg, status,2, status,0, cstack
  6416 ;; Tracked objects:
  6417 ;;		On entry : 0/0
  6418 ;;		On exit  : 0/0
  6419 ;;		Unchanged: 0/0
  6420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6423 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6424 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6425 ;;Total ram usage:        2 bytes
  6426 ;; Hardware stack levels used:    1
  6427 ;; Hardware stack levels required when called:    7
  6428 ;; This function calls:
  6429 ;;		___awmod
  6430 ;; This function is called by:
  6431 ;;		_isEmptyQueue
  6432 ;; This function uses a non-reentrant model
  6433 ;;
  6434                           
  6435                           	psect	text32
  6436  003B5C                     __ptext32:
  6437                           	opt callstack 0
  6438  003B5C                     _getSizeQueue:
  6439                           	opt callstack 20
  6440  003B5C                     
  6441                           ;ready_queue.c: 11:     return (rear - front + 1 + 20) % 20;
  6442  003B5C  0100               	movlb	0	; () banked
  6443  003B5E  51D7               	movf	_front& (0+255),w,b
  6444  003B60  5DD5               	subwf	_rear& (0+255),w,b
  6445  003B62  6F66               	movwf	??_getSizeQueue& (0+255),b
  6446  003B64  51D8               	movf	(_front+1)& (0+255),w,b
  6447  003B66  59D6               	subwfb	(_rear+1)& (0+255),w,b
  6448  003B68  6F67               	movwf	(??_getSizeQueue+1)& (0+255),b
  6449  003B6A  0E15               	movlw	21
  6450  003B6C  2566               	addwf	??_getSizeQueue& (0+255),w,b
  6451  003B6E  6F60               	movwf	___awmod@dividend& (0+255),b
  6452  003B70  0E00               	movlw	0
  6453  003B72  2167               	addwfc	(??_getSizeQueue+1)& (0+255),w,b
  6454  003B74  6F61               	movwf	(___awmod@dividend+1)& (0+255),b
  6455  003B76  0E00               	movlw	0
  6456  003B78  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  6457  003B7A  0E14               	movlw	20
  6458  003B7C  6F62               	movwf	___awmod@divisor& (0+255),b
  6459  003B7E  ECEF  F017         	call	___awmod	;wreg free
  6460  003B82  0100               	movlb	0	; () banked
  6461  003B84  5160               	movf	?___awmod& (0+255),w,b
  6462  003B86                     
  6463                           ; BSR set to: 0
  6464  003B86  0012               	return		;funcret
  6465  003B88                     __end_of_getSizeQueue:
  6466                           	opt callstack 0
  6467                           
  6468 ;; *************** function ___wmul *****************
  6469 ;; Defined at:
  6470 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  6471 ;; Parameters:    Size  Location     Type
  6472 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6473 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6474 ;; Auto vars:     Size  Location     Type
  6475 ;;  product         2    4[BANK0 ] unsigned int 
  6476 ;; Return value:  Size  Location     Type
  6477 ;;                  2    0[BANK0 ] unsigned int 
  6478 ;; Registers used:
  6479 ;;		wreg, status,2, status,0, prodl, prodh
  6480 ;; Tracked objects:
  6481 ;;		On entry : 0/0
  6482 ;;		On exit  : 0/0
  6483 ;;		Unchanged: 0/0
  6484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6485 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6486 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6488 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6489 ;;Total ram usage:        6 bytes
  6490 ;; Hardware stack levels used:    1
  6491 ;; Hardware stack levels required when called:    6
  6492 ;; This function calls:
  6493 ;;		Nothing
  6494 ;; This function is called by:
  6495 ;;		_queueInitialize
  6496 ;;		_dequeue
  6497 ;;		_initializeTaskList
  6498 ;;		_addTask
  6499 ;; This function uses a non-reentrant model
  6500 ;;
  6501                           
  6502                           	psect	text33
  6503  003BB2                     __ptext33:
  6504                           	opt callstack 0
  6505  003BB2                     ___wmul:
  6506                           	opt callstack 21
  6507  003BB2  0100               	movlb	0	; () banked
  6508  003BB4  5160               	movf	___wmul@multiplier& (0+255),w,b
  6509  003BB6  0362               	mulwf	___wmul@multiplicand& (0+255),b
  6510  003BB8  CFF3 F064          	movff	prodl,___wmul@product
  6511  003BBC  CFF4 F065          	movff	prodh,___wmul@product+1
  6512  003BC0  5160               	movf	___wmul@multiplier& (0+255),w,b
  6513  003BC2  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  6514  003BC4  50F3               	movf	243,w,c
  6515  003BC6  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  6516  003BC8  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  6517  003BCA  0362               	mulwf	___wmul@multiplicand& (0+255),b
  6518  003BCC  50F3               	movf	243,w,c
  6519  003BCE  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  6520  003BD0                     
  6521                           ; BSR set to: 0
  6522  003BD0  C064  F060         	movff	___wmul@product,?___wmul
  6523  003BD4  C065  F061         	movff	___wmul@product+1,?___wmul+1
  6524  003BD8                     
  6525                           ; BSR set to: 0
  6526  003BD8  0012               	return		;funcret
  6527  003BDA                     __end_of___wmul:
  6528                           	opt callstack 0
  6529                           
  6530 ;; *************** function _check_humid_to_turn_fan *****************
  6531 ;; Defined at:
  6532 ;;		line 71 in file "FSM.c"
  6533 ;; Parameters:    Size  Location     Type
  6534 ;;		None
  6535 ;; Auto vars:     Size  Location     Type
  6536 ;;  humid           2   15[BANK0 ] int 
  6537 ;; Return value:  Size  Location     Type
  6538 ;;                  1    wreg      void 
  6539 ;; Registers used:
  6540 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6541 ;; Tracked objects:
  6542 ;;		On entry : 0/0
  6543 ;;		On exit  : 0/0
  6544 ;;		Unchanged: 0/0
  6545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6547 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6549 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6550 ;;Total ram usage:        2 bytes
  6551 ;; Hardware stack levels used:    1
  6552 ;; Hardware stack levels required when called:   11
  6553 ;; This function calls:
  6554 ;;		_LCDPrint
  6555 ;;		_LCDPrintChar
  6556 ;;		___awdiv
  6557 ;;		___awmod
  6558 ;;		___fltol
  6559 ;;		_set_speed_fan3
  6560 ;; This function is called by:
  6561 ;;		_system_setup
  6562 ;;		_selectReadyTask
  6563 ;; This function uses a non-reentrant model
  6564 ;;
  6565                           
  6566                           	psect	text34
  6567  003140                     __ptext34:
  6568                           	opt callstack 0
  6569  003140                     _check_humid_to_turn_fan:
  6570                           	opt callstack 17
  6571  003140                     
  6572                           ;FSM.c: 72:     if(state == HEATER || state == HEAT_PUMP) {
  6573  003140  0100               	movlb	0	; () banked
  6574  003142  05CA               	decf	_state& (0+255),w,b	;volatile
  6575  003144  B4D8               	btfsc	status,2,c
  6576  003146  EFA7  F018         	goto	u3441
  6577  00314A  EFA9  F018         	goto	u3440
  6578  00314E                     u3441:
  6579  00314E  EFB2  F018         	goto	l3981
  6580  003152                     u3440:
  6581  003152                     
  6582                           ; BSR set to: 0
  6583  003152  0E02               	movlw	2
  6584  003154  19CA               	xorwf	_state& (0+255),w,b	;volatile
  6585  003156  A4D8               	btfss	status,2,c
  6586  003158  EFB0  F018         	goto	u3451
  6587  00315C  EFB2  F018         	goto	u3450
  6588  003160                     u3451:
  6589  003160  EFF6  F018         	goto	l811
  6590  003164                     u3450:
  6591  003164                     l3981:
  6592                           
  6593                           ; BSR set to: 0
  6594                           ;FSM.c: 73:         int humid = humidity_value;
  6595  003164  C0D1  F060         	movff	_humidity_value,___fltol@f1
  6596  003168  C0D2  F061         	movff	_humidity_value+1,___fltol@f1+1
  6597  00316C  C0D3  F062         	movff	_humidity_value+2,___fltol@f1+2
  6598  003170  C0D4  F063         	movff	_humidity_value+3,___fltol@f1+3
  6599  003174  EC2A  F016         	call	___fltol	;wreg free
  6600  003178  C060  F06F         	movff	?___fltol,check_humid_to_turn_fan@humid
  6601  00317C  C061  F070         	movff	?___fltol+1,check_humid_to_turn_fan@humid+1
  6602  003180                     
  6603                           ;FSM.c: 74:         set_speed_fan3(humid);
  6604  003180  C06F  F060         	movff	check_humid_to_turn_fan@humid,set_speed_fan3@dutyCycle
  6605  003184  C070  F061         	movff	check_humid_to_turn_fan@humid+1,set_speed_fan3@dutyCycle+1
  6606  003188  EC7B  F01E         	call	_set_speed_fan3	;wreg free
  6607  00318C                     
  6608                           ;FSM.c: 75:         LCDPrint(0, 8, "Fan3:");
  6609  00318C  0E08               	movlw	8
  6610  00318E  0100               	movlb	0	; () banked
  6611  003190  6F6B               	movwf	LCDPrint@pos& (0+255),b
  6612  003192  0E3D               	movlw	low STR_12
  6613  003194  6F6C               	movwf	LCDPrint@ptr& (0+255),b
  6614  003196  0E10               	movlw	high STR_12
  6615  003198  6F6D               	movwf	(LCDPrint@ptr+1)& (0+255),b
  6616  00319A  0E00               	movlw	0
  6617  00319C  EC5E  F01C         	call	_LCDPrint
  6618  0031A0                     
  6619                           ;FSM.c: 76:         LCDPrintChar(0, 13, humid / 10);
  6620  0031A0  0E0D               	movlw	13
  6621  0031A2  0100               	movlb	0	; () banked
  6622  0031A4  6F6B               	movwf	LCDPrintChar@pos& (0+255),b
  6623  0031A6  C06F  F060         	movff	check_humid_to_turn_fan@humid,___awdiv@dividend
  6624  0031AA  C070  F061         	movff	check_humid_to_turn_fan@humid+1,___awdiv@dividend+1
  6625  0031AE  0E00               	movlw	0
  6626  0031B0  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  6627  0031B2  0E0A               	movlw	10
  6628  0031B4  6F62               	movwf	___awdiv@divisor& (0+255),b
  6629  0031B6  EC8C  F017         	call	___awdiv	;wreg free
  6630  0031BA  0100               	movlb	0	; () banked
  6631  0031BC  5160               	movf	?___awdiv& (0+255),w,b
  6632  0031BE  6F6C               	movwf	LCDPrintChar@ch& (0+255),b
  6633  0031C0  0E00               	movlw	0
  6634  0031C2  EC21  F01D         	call	_LCDPrintChar
  6635  0031C6                     
  6636                           ;FSM.c: 77:         LCDPrintChar(0, 14, humid % 10);
  6637  0031C6  0E0E               	movlw	14
  6638  0031C8  0100               	movlb	0	; () banked
  6639  0031CA  6F6B               	movwf	LCDPrintChar@pos& (0+255),b
  6640  0031CC  C06F  F060         	movff	check_humid_to_turn_fan@humid,___awmod@dividend
  6641  0031D0  C070  F061         	movff	check_humid_to_turn_fan@humid+1,___awmod@dividend+1
  6642  0031D4  0E00               	movlw	0
  6643  0031D6  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  6644  0031D8  0E0A               	movlw	10
  6645  0031DA  6F62               	movwf	___awmod@divisor& (0+255),b
  6646  0031DC  ECEF  F017         	call	___awmod	;wreg free
  6647  0031E0  0100               	movlb	0	; () banked
  6648  0031E2  5160               	movf	?___awmod& (0+255),w,b
  6649  0031E4  6F6C               	movwf	LCDPrintChar@ch& (0+255),b
  6650  0031E6  0E00               	movlw	0
  6651  0031E8  EC21  F01D         	call	_LCDPrintChar
  6652  0031EC                     l811:
  6653  0031EC  0012               	return		;funcret
  6654  0031EE                     __end_of_check_humid_to_turn_fan:
  6655                           	opt callstack 0
  6656                           
  6657 ;; *************** function _set_speed_fan3 *****************
  6658 ;; Defined at:
  6659 ;;		line 50 in file "LTDtask.c"
  6660 ;; Parameters:    Size  Location     Type
  6661 ;;  dutyCycle       2    0[BANK0 ] int 
  6662 ;; Auto vars:     Size  Location     Type
  6663 ;;		None
  6664 ;; Return value:  Size  Location     Type
  6665 ;;                  1    wreg      void 
  6666 ;; Registers used:
  6667 ;;		wreg, status,2, status,0, prodl, prodh
  6668 ;; Tracked objects:
  6669 ;;		On entry : 0/0
  6670 ;;		On exit  : 0/0
  6671 ;;		Unchanged: 0/0
  6672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6673 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6676 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6677 ;;Total ram usage:        2 bytes
  6678 ;; Hardware stack levels used:    1
  6679 ;; Hardware stack levels required when called:    6
  6680 ;; This function calls:
  6681 ;;		Nothing
  6682 ;; This function is called by:
  6683 ;;		_check_humid_to_turn_fan
  6684 ;;		_force_turn_off
  6685 ;; This function uses a non-reentrant model
  6686 ;;
  6687                           
  6688                           	psect	text35
  6689  003CF6                     __ptext35:
  6690                           	opt callstack 0
  6691  003CF6                     _set_speed_fan3:
  6692                           	opt callstack 21
  6693  003CF6                     
  6694                           ;LTDtask.c: 51:     CCPR4L = 24 * dutyCycle;
  6695  003CF6  0100               	movlb	0	; () banked
  6696  003CF8  5160               	movf	set_speed_fan3@dutyCycle& (0+255),w,b
  6697  003CFA  0D18               	mullw	24
  6698  003CFC  CFF3 FF74          	movff	prodl,3956	;volatile
  6699  003D00                     
  6700                           ; BSR set to: 0
  6701  003D00  0012               	return		;funcret
  6702  003D02                     __end_of_set_speed_fan3:
  6703                           	opt callstack 0
  6704                           
  6705 ;; *************** function ___fltol *****************
  6706 ;; Defined at:
  6707 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  6708 ;; Parameters:    Size  Location     Type
  6709 ;;  f1              4    0[BANK0 ] void 
  6710 ;; Auto vars:     Size  Location     Type
  6711 ;;  exp1            1    9[BANK0 ] unsigned char 
  6712 ;;  sign1           1    8[BANK0 ] unsigned char 
  6713 ;; Return value:  Size  Location     Type
  6714 ;;                  4    0[BANK0 ] long 
  6715 ;; Registers used:
  6716 ;;		wreg, status,2, status,0
  6717 ;; Tracked objects:
  6718 ;;		On entry : 0/0
  6719 ;;		On exit  : 0/0
  6720 ;;		Unchanged: 0/0
  6721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6722 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6723 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6724 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6725 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6726 ;;Total ram usage:       10 bytes
  6727 ;; Hardware stack levels used:    1
  6728 ;; Hardware stack levels required when called:    6
  6729 ;; This function calls:
  6730 ;;		Nothing
  6731 ;; This function is called by:
  6732 ;;		_printTempAndHumid
  6733 ;;		_check_humid_to_turn_fan
  6734 ;; This function uses a non-reentrant model
  6735 ;;
  6736                           
  6737                           	psect	text36
  6738  002C54                     __ptext36:
  6739                           	opt callstack 0
  6740  002C54                     ___fltol:
  6741                           	opt callstack 21
  6742  002C54  0100               	movlb	0	; () banked
  6743  002C56  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
  6744  002C58  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
  6745  002C5A  6F69               	movwf	___fltol@exp1& (0+255),b
  6746  002C5C  5169               	movf	___fltol@exp1& (0+255),w,b
  6747  002C5E  A4D8               	btfss	status,2,c
  6748  002C60  EF34  F016         	goto	u2991
  6749  002C64  EF36  F016         	goto	u2990
  6750  002C68                     u2991:
  6751  002C68  EF40  F016         	goto	l3679
  6752  002C6C                     u2990:
  6753  002C6C                     l3675:
  6754                           
  6755                           ; BSR set to: 0
  6756  002C6C  0E00               	movlw	0
  6757  002C6E  6F60               	movwf	?___fltol& (0+255),b
  6758  002C70  0E00               	movlw	0
  6759  002C72  6F61               	movwf	(?___fltol+1)& (0+255),b
  6760  002C74  0E00               	movlw	0
  6761  002C76  6F62               	movwf	(?___fltol+2)& (0+255),b
  6762  002C78  0E00               	movlw	0
  6763  002C7A  6F63               	movwf	(?___fltol+3)& (0+255),b
  6764  002C7C  EFAD  F016         	goto	l1123
  6765  002C80                     l3679:
  6766                           
  6767                           ; BSR set to: 0
  6768  002C80  C060  F064         	movff	___fltol@f1,??___fltol
  6769  002C84  C061  F065         	movff	___fltol@f1+1,??___fltol+1
  6770  002C88  C062  F066         	movff	___fltol@f1+2,??___fltol+2
  6771  002C8C  C063  F067         	movff	___fltol@f1+3,??___fltol+3
  6772  002C90  0E20               	movlw	32
  6773  002C92  EF50  F016         	goto	u3000
  6774  002C96                     u3005:
  6775  002C96  90D8               	bcf	status,0,c
  6776  002C98  3367               	rrcf	(??___fltol+3)& (0+255),f,b
  6777  002C9A  3366               	rrcf	(??___fltol+2)& (0+255),f,b
  6778  002C9C  3365               	rrcf	(??___fltol+1)& (0+255),f,b
  6779  002C9E  3364               	rrcf	??___fltol& (0+255),f,b
  6780  002CA0                     u3000:
  6781  002CA0  2EE8               	decfsz	wreg,f,c
  6782  002CA2  EF4B  F016         	goto	u3005
  6783  002CA6  5164               	movf	??___fltol& (0+255),w,b
  6784  002CA8  6F68               	movwf	___fltol@sign1& (0+255),b
  6785  002CAA                     
  6786                           ; BSR set to: 0
  6787  002CAA  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
  6788  002CAC                     
  6789                           ; BSR set to: 0
  6790  002CAC  0EFF               	movlw	255
  6791  002CAE  1760               	andwf	___fltol@f1& (0+255),f,b
  6792  002CB0  0EFF               	movlw	255
  6793  002CB2  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
  6794  002CB4  0EFF               	movlw	255
  6795  002CB6  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
  6796  002CB8  0E00               	movlw	0
  6797  002CBA  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
  6798  002CBC                     
  6799                           ; BSR set to: 0
  6800  002CBC  0E96               	movlw	150
  6801  002CBE  5F69               	subwf	___fltol@exp1& (0+255),f,b
  6802  002CC0                     
  6803                           ; BSR set to: 0
  6804  002CC0  BF69               	btfsc	___fltol@exp1& (0+255),7,b
  6805  002CC2  EF67  F016         	goto	u3010
  6806  002CC6  EF65  F016         	goto	u3011
  6807  002CCA                     u3011:
  6808  002CCA  EF7D  F016         	goto	l3699
  6809  002CCE                     u3010:
  6810  002CCE                     
  6811                           ; BSR set to: 0
  6812  002CCE  5169               	movf	___fltol@exp1& (0+255),w,b
  6813  002CD0  0A80               	xorlw	128
  6814  002CD2  0F97               	addlw	151
  6815  002CD4  B0D8               	btfsc	status,0,c
  6816  002CD6  EF6F  F016         	goto	u3021
  6817  002CDA  EF71  F016         	goto	u3020
  6818  002CDE                     u3021:
  6819  002CDE  EF73  F016         	goto	l3695
  6820  002CE2                     u3020:
  6821  002CE2  EF36  F016         	goto	l3675
  6822  002CE6                     l3695:
  6823                           
  6824                           ; BSR set to: 0
  6825  002CE6  90D8               	bcf	status,0,c
  6826  002CE8  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
  6827  002CEA  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
  6828  002CEC  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6829  002CEE  3360               	rrcf	___fltol@f1& (0+255),f,b
  6830  002CF0                     
  6831                           ; BSR set to: 0
  6832  002CF0  3F69               	incfsz	___fltol@exp1& (0+255),f,b
  6833  002CF2  EF73  F016         	goto	l3695
  6834  002CF6  EF95  F016         	goto	l3709
  6835  002CFA                     l3699:
  6836                           
  6837                           ; BSR set to: 0
  6838  002CFA  0E1F               	movlw	31
  6839  002CFC  6569               	cpfsgt	___fltol@exp1& (0+255),b
  6840  002CFE  EF83  F016         	goto	u3031
  6841  002D02  EF85  F016         	goto	u3030
  6842  002D06                     u3031:
  6843  002D06  EF8D  F016         	goto	l3707
  6844  002D0A                     u3030:
  6845  002D0A  EF36  F016         	goto	l3675
  6846  002D0E                     l3705:
  6847                           
  6848                           ; BSR set to: 0
  6849  002D0E  90D8               	bcf	status,0,c
  6850  002D10  3760               	rlcf	___fltol@f1& (0+255),f,b
  6851  002D12  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6852  002D14  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6853  002D16  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6854  002D18  0769               	decf	___fltol@exp1& (0+255),f,b
  6855  002D1A                     l3707:
  6856                           
  6857                           ; BSR set to: 0
  6858  002D1A  5169               	movf	___fltol@exp1& (0+255),w,b
  6859  002D1C  A4D8               	btfss	status,2,c
  6860  002D1E  EF93  F016         	goto	u3041
  6861  002D22  EF95  F016         	goto	u3040
  6862  002D26                     u3041:
  6863  002D26  EF87  F016         	goto	l3705
  6864  002D2A                     u3040:
  6865  002D2A                     l3709:
  6866                           
  6867                           ; BSR set to: 0
  6868  002D2A  5168               	movf	___fltol@sign1& (0+255),w,b
  6869  002D2C  B4D8               	btfsc	status,2,c
  6870  002D2E  EF9B  F016         	goto	u3051
  6871  002D32  EF9D  F016         	goto	u3050
  6872  002D36                     u3051:
  6873  002D36  EFA5  F016         	goto	l3713
  6874  002D3A                     u3050:
  6875  002D3A                     
  6876                           ; BSR set to: 0
  6877  002D3A  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
  6878  002D3C  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
  6879  002D3E  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
  6880  002D40  6D60               	negf	___fltol@f1& (0+255),b
  6881  002D42  0E00               	movlw	0
  6882  002D44  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6883  002D46  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6884  002D48  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6885  002D4A                     l3713:
  6886                           
  6887                           ; BSR set to: 0
  6888  002D4A  C060  F060         	movff	___fltol@f1,?___fltol
  6889  002D4E  C061  F061         	movff	___fltol@f1+1,?___fltol+1
  6890  002D52  C062  F062         	movff	___fltol@f1+2,?___fltol+2
  6891  002D56  C063  F063         	movff	___fltol@f1+3,?___fltol+3
  6892  002D5A                     l1123:
  6893                           
  6894                           ; BSR set to: 0
  6895  002D5A  0012               	return		;funcret
  6896  002D5C                     __end_of___fltol:
  6897                           	opt callstack 0
  6898                           
  6899 ;; *************** function ___awmod *****************
  6900 ;; Defined at:
  6901 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  6902 ;; Parameters:    Size  Location     Type
  6903 ;;  dividend        2    0[BANK0 ] int 
  6904 ;;  divisor         2    2[BANK0 ] int 
  6905 ;; Auto vars:     Size  Location     Type
  6906 ;;  sign            1    5[BANK0 ] unsigned char 
  6907 ;;  counter         1    4[BANK0 ] unsigned char 
  6908 ;; Return value:  Size  Location     Type
  6909 ;;                  2    0[BANK0 ] int 
  6910 ;; Registers used:
  6911 ;;		wreg, status,2, status,0
  6912 ;; Tracked objects:
  6913 ;;		On entry : 0/0
  6914 ;;		On exit  : 0/0
  6915 ;;		Unchanged: 0/0
  6916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6917 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6918 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6920 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6921 ;;Total ram usage:        6 bytes
  6922 ;; Hardware stack levels used:    1
  6923 ;; Hardware stack levels required when called:    6
  6924 ;; This function calls:
  6925 ;;		Nothing
  6926 ;; This function is called by:
  6927 ;;		_printTempAndHumid
  6928 ;;		_getSizeQueue
  6929 ;;		_dequeue
  6930 ;;		_check_humid_to_turn_fan
  6931 ;; This function uses a non-reentrant model
  6932 ;;
  6933                           
  6934                           	psect	text37
  6935  002FDE                     __ptext37:
  6936                           	opt callstack 0
  6937  002FDE                     ___awmod:
  6938                           	opt callstack 21
  6939  002FDE  0E00               	movlw	0
  6940  002FE0  0100               	movlb	0	; () banked
  6941  002FE2  6F65               	movwf	___awmod@sign& (0+255),b
  6942  002FE4                     
  6943                           ; BSR set to: 0
  6944  002FE4  BF61               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  6945  002FE6  EFF9  F017         	goto	u1930
  6946  002FEA  EFF7  F017         	goto	u1931
  6947  002FEE                     u1931:
  6948  002FEE  EFFF  F017         	goto	l3033
  6949  002FF2                     u1930:
  6950  002FF2                     
  6951                           ; BSR set to: 0
  6952  002FF2  6D60               	negf	___awmod@dividend& (0+255),b
  6953  002FF4  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  6954  002FF6  B0D8               	btfsc	status,0,c
  6955  002FF8  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  6956  002FFA                     
  6957                           ; BSR set to: 0
  6958  002FFA  0E01               	movlw	1
  6959  002FFC  6F65               	movwf	___awmod@sign& (0+255),b
  6960  002FFE                     l3033:
  6961                           
  6962                           ; BSR set to: 0
  6963  002FFE  BF63               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  6964  003000  EF06  F018         	goto	u1940
  6965  003004  EF04  F018         	goto	u1941
  6966  003008                     u1941:
  6967  003008  EF0A  F018         	goto	l3037
  6968  00300C                     u1940:
  6969  00300C                     
  6970                           ; BSR set to: 0
  6971  00300C  6D62               	negf	___awmod@divisor& (0+255),b
  6972  00300E  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  6973  003010  B0D8               	btfsc	status,0,c
  6974  003012  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  6975  003014                     l3037:
  6976                           
  6977                           ; BSR set to: 0
  6978  003014  5162               	movf	___awmod@divisor& (0+255),w,b
  6979  003016  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  6980  003018  B4D8               	btfsc	status,2,c
  6981  00301A  EF11  F018         	goto	u1951
  6982  00301E  EF13  F018         	goto	u1950
  6983  003022                     u1951:
  6984  003022  EF37  F018         	goto	l3053
  6985  003026                     u1950:
  6986  003026                     
  6987                           ; BSR set to: 0
  6988  003026  0E01               	movlw	1
  6989  003028  6F64               	movwf	___awmod@counter& (0+255),b
  6990  00302A  EF1B  F018         	goto	l3043
  6991  00302E                     l3041:
  6992                           
  6993                           ; BSR set to: 0
  6994  00302E  90D8               	bcf	status,0,c
  6995  003030  3762               	rlcf	___awmod@divisor& (0+255),f,b
  6996  003032  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  6997  003034  2B64               	incf	___awmod@counter& (0+255),f,b
  6998  003036                     l3043:
  6999                           
  7000                           ; BSR set to: 0
  7001  003036  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7002  003038  EF20  F018         	goto	u1961
  7003  00303C  EF22  F018         	goto	u1960
  7004  003040                     u1961:
  7005  003040  EF17  F018         	goto	l3041
  7006  003044                     u1960:
  7007  003044                     l3045:
  7008                           
  7009                           ; BSR set to: 0
  7010  003044  5162               	movf	___awmod@divisor& (0+255),w,b
  7011  003046  5D60               	subwf	___awmod@dividend& (0+255),w,b
  7012  003048  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  7013  00304A  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  7014  00304C  A0D8               	btfss	status,0,c
  7015  00304E  EF2B  F018         	goto	u1971
  7016  003052  EF2D  F018         	goto	u1970
  7017  003056                     u1971:
  7018  003056  EF31  F018         	goto	l3049
  7019  00305A                     u1970:
  7020  00305A                     
  7021                           ; BSR set to: 0
  7022  00305A  5162               	movf	___awmod@divisor& (0+255),w,b
  7023  00305C  5F60               	subwf	___awmod@dividend& (0+255),f,b
  7024  00305E  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  7025  003060  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  7026  003062                     l3049:
  7027                           
  7028                           ; BSR set to: 0
  7029  003062  90D8               	bcf	status,0,c
  7030  003064  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  7031  003066  3362               	rrcf	___awmod@divisor& (0+255),f,b
  7032  003068                     
  7033                           ; BSR set to: 0
  7034  003068  2F64               	decfsz	___awmod@counter& (0+255),f,b
  7035  00306A  EF22  F018         	goto	l3045
  7036  00306E                     l3053:
  7037                           
  7038                           ; BSR set to: 0
  7039  00306E  5165               	movf	___awmod@sign& (0+255),w,b
  7040  003070  B4D8               	btfsc	status,2,c
  7041  003072  EF3D  F018         	goto	u1981
  7042  003076  EF3F  F018         	goto	u1980
  7043  00307A                     u1981:
  7044  00307A  EF43  F018         	goto	l3057
  7045  00307E                     u1980:
  7046  00307E                     
  7047                           ; BSR set to: 0
  7048  00307E  6D60               	negf	___awmod@dividend& (0+255),b
  7049  003080  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  7050  003082  B0D8               	btfsc	status,0,c
  7051  003084  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  7052  003086                     l3057:
  7053                           
  7054                           ; BSR set to: 0
  7055  003086  C060  F060         	movff	___awmod@dividend,?___awmod
  7056  00308A  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  7057  00308E                     
  7058                           ; BSR set to: 0
  7059  00308E  0012               	return		;funcret
  7060  003090                     __end_of___awmod:
  7061                           	opt callstack 0
  7062                           
  7063 ;; *************** function ___awdiv *****************
  7064 ;; Defined at:
  7065 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  7066 ;; Parameters:    Size  Location     Type
  7067 ;;  dividend        2    0[BANK0 ] int 
  7068 ;;  divisor         2    2[BANK0 ] int 
  7069 ;; Auto vars:     Size  Location     Type
  7070 ;;  quotient        2    6[BANK0 ] int 
  7071 ;;  sign            1    5[BANK0 ] unsigned char 
  7072 ;;  counter         1    4[BANK0 ] unsigned char 
  7073 ;; Return value:  Size  Location     Type
  7074 ;;                  2    0[BANK0 ] int 
  7075 ;; Registers used:
  7076 ;;		wreg, status,2, status,0
  7077 ;; Tracked objects:
  7078 ;;		On entry : 0/0
  7079 ;;		On exit  : 0/0
  7080 ;;		Unchanged: 0/0
  7081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7082 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7083 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7085 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7086 ;;Total ram usage:        8 bytes
  7087 ;; Hardware stack levels used:    1
  7088 ;; Hardware stack levels required when called:    6
  7089 ;; This function calls:
  7090 ;;		Nothing
  7091 ;; This function is called by:
  7092 ;;		_printTempAndHumid
  7093 ;;		_check_humid_to_turn_fan
  7094 ;; This function uses a non-reentrant model
  7095 ;;
  7096                           
  7097                           	psect	text38
  7098  002F18                     __ptext38:
  7099                           	opt callstack 0
  7100  002F18                     ___awdiv:
  7101                           	opt callstack 21
  7102  002F18  0E00               	movlw	0
  7103  002F1A  0100               	movlb	0	; () banked
  7104  002F1C  6F65               	movwf	___awdiv@sign& (0+255),b
  7105  002F1E                     
  7106                           ; BSR set to: 0
  7107  002F1E  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  7108  002F20  EF96  F017         	goto	u2900
  7109  002F24  EF94  F017         	goto	u2901
  7110  002F28                     u2901:
  7111  002F28  EF9C  F017         	goto	l3621
  7112  002F2C                     u2900:
  7113  002F2C                     
  7114                           ; BSR set to: 0
  7115  002F2C  6D62               	negf	___awdiv@divisor& (0+255),b
  7116  002F2E  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7117  002F30  B0D8               	btfsc	status,0,c
  7118  002F32  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7119  002F34                     
  7120                           ; BSR set to: 0
  7121  002F34  0E01               	movlw	1
  7122  002F36  6F65               	movwf	___awdiv@sign& (0+255),b
  7123  002F38                     l3621:
  7124                           
  7125                           ; BSR set to: 0
  7126  002F38  BF61               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  7127  002F3A  EFA3  F017         	goto	u2910
  7128  002F3E  EFA1  F017         	goto	u2911
  7129  002F42                     u2911:
  7130  002F42  EFA9  F017         	goto	l3627
  7131  002F46                     u2910:
  7132  002F46                     
  7133                           ; BSR set to: 0
  7134  002F46  6D60               	negf	___awdiv@dividend& (0+255),b
  7135  002F48  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7136  002F4A  B0D8               	btfsc	status,0,c
  7137  002F4C  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7138  002F4E                     
  7139                           ; BSR set to: 0
  7140  002F4E  0E01               	movlw	1
  7141  002F50  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  7142  002F52                     l3627:
  7143                           
  7144                           ; BSR set to: 0
  7145  002F52  0E00               	movlw	0
  7146  002F54  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  7147  002F56  0E00               	movlw	0
  7148  002F58  6F66               	movwf	___awdiv@quotient& (0+255),b
  7149  002F5A                     
  7150                           ; BSR set to: 0
  7151  002F5A  5162               	movf	___awdiv@divisor& (0+255),w,b
  7152  002F5C  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7153  002F5E  B4D8               	btfsc	status,2,c
  7154  002F60  EFB4  F017         	goto	u2921
  7155  002F64  EFB6  F017         	goto	u2920
  7156  002F68                     u2921:
  7157  002F68  EFDE  F017         	goto	l3649
  7158  002F6C                     u2920:
  7159  002F6C                     
  7160                           ; BSR set to: 0
  7161  002F6C  0E01               	movlw	1
  7162  002F6E  6F64               	movwf	___awdiv@counter& (0+255),b
  7163  002F70  EFBE  F017         	goto	l3635
  7164  002F74                     l3633:
  7165                           
  7166                           ; BSR set to: 0
  7167  002F74  90D8               	bcf	status,0,c
  7168  002F76  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  7169  002F78  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7170  002F7A  2B64               	incf	___awdiv@counter& (0+255),f,b
  7171  002F7C                     l3635:
  7172                           
  7173                           ; BSR set to: 0
  7174  002F7C  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7175  002F7E  EFC3  F017         	goto	u2931
  7176  002F82  EFC5  F017         	goto	u2930
  7177  002F86                     u2931:
  7178  002F86  EFBA  F017         	goto	l3633
  7179  002F8A                     u2930:
  7180  002F8A                     l3637:
  7181                           
  7182                           ; BSR set to: 0
  7183  002F8A  90D8               	bcf	status,0,c
  7184  002F8C  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  7185  002F8E  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7186  002F90                     
  7187                           ; BSR set to: 0
  7188  002F90  5162               	movf	___awdiv@divisor& (0+255),w,b
  7189  002F92  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  7190  002F94  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7191  002F96  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7192  002F98  A0D8               	btfss	status,0,c
  7193  002F9A  EFD1  F017         	goto	u2941
  7194  002F9E  EFD3  F017         	goto	u2940
  7195  002FA2                     u2941:
  7196  002FA2  EFD8  F017         	goto	l3645
  7197  002FA6                     u2940:
  7198  002FA6                     
  7199                           ; BSR set to: 0
  7200  002FA6  5162               	movf	___awdiv@divisor& (0+255),w,b
  7201  002FA8  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  7202  002FAA  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7203  002FAC  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7204  002FAE                     
  7205                           ; BSR set to: 0
  7206  002FAE  8166               	bsf	___awdiv@quotient& (0+255),0,b
  7207  002FB0                     l3645:
  7208                           
  7209                           ; BSR set to: 0
  7210  002FB0  90D8               	bcf	status,0,c
  7211  002FB2  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7212  002FB4  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  7213  002FB6                     
  7214                           ; BSR set to: 0
  7215  002FB6  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  7216  002FB8  EFC5  F017         	goto	l3637
  7217  002FBC                     l3649:
  7218                           
  7219                           ; BSR set to: 0
  7220  002FBC  5165               	movf	___awdiv@sign& (0+255),w,b
  7221  002FBE  B4D8               	btfsc	status,2,c
  7222  002FC0  EFE4  F017         	goto	u2951
  7223  002FC4  EFE6  F017         	goto	u2950
  7224  002FC8                     u2951:
  7225  002FC8  EFEA  F017         	goto	l3653
  7226  002FCC                     u2950:
  7227  002FCC                     
  7228                           ; BSR set to: 0
  7229  002FCC  6D66               	negf	___awdiv@quotient& (0+255),b
  7230  002FCE  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7231  002FD0  B0D8               	btfsc	status,0,c
  7232  002FD2  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7233  002FD4                     l3653:
  7234                           
  7235                           ; BSR set to: 0
  7236  002FD4  C066  F060         	movff	___awdiv@quotient,?___awdiv
  7237  002FD8  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  7238  002FDC                     
  7239                           ; BSR set to: 0
  7240  002FDC  0012               	return		;funcret
  7241  002FDE                     __end_of___awdiv:
  7242                           	opt callstack 0
  7243                           
  7244 ;; *************** function _LCDPrintChar *****************
  7245 ;; Defined at:
  7246 ;;		line 239 in file "lcd.c"
  7247 ;; Parameters:    Size  Location     Type
  7248 ;;  line            1    wreg     unsigned char 
  7249 ;;  pos             1   11[BANK0 ] unsigned char 
  7250 ;;  ch              1   12[BANK0 ] unsigned char 
  7251 ;; Auto vars:     Size  Location     Type
  7252 ;;  line            1   13[BANK0 ] unsigned char 
  7253 ;; Return value:  Size  Location     Type
  7254 ;;                  1    wreg      void 
  7255 ;; Registers used:
  7256 ;;		wreg, status,2, status,0, cstack
  7257 ;; Tracked objects:
  7258 ;;		On entry : 0/0
  7259 ;;		On exit  : 0/0
  7260 ;;		Unchanged: 0/0
  7261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7262 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7263 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7265 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7266 ;;Total ram usage:        3 bytes
  7267 ;; Hardware stack levels used:    1
  7268 ;; Hardware stack levels required when called:   10
  7269 ;; This function calls:
  7270 ;;		_LCDMoveCursor
  7271 ;;		_LCDPutChar
  7272 ;; This function is called by:
  7273 ;;		_printTempAndHumid
  7274 ;;		_check_humid_to_turn_fan
  7275 ;; This function uses a non-reentrant model
  7276 ;;
  7277                           
  7278                           	psect	text39
  7279  003A42                     __ptext39:
  7280                           	opt callstack 0
  7281  003A42                     _LCDPrintChar:
  7282                           	opt callstack 17
  7283                           
  7284                           ; BSR set to: 0
  7285                           ;incstack = 0
  7286                           ;LCDPrintChar@line stored from wreg
  7287  003A42  0100               	movlb	0	; () banked
  7288  003A44  6F6D               	movwf	LCDPrintChar@line& (0+255),b
  7289  003A46                     
  7290                           ;lcd.c: 240:     if(line <0 || line > 2 || pos < 0 || pos > 15)
  7291  003A46  0E03               	movlw	3
  7292  003A48  0100               	movlb	0	; () banked
  7293  003A4A  616D               	cpfslt	LCDPrintChar@line& (0+255),b
  7294  003A4C  EF2A  F01D         	goto	u2541
  7295  003A50  EF2C  F01D         	goto	u2540
  7296  003A54                     u2541:
  7297  003A54  EF3F  F01D         	goto	l277
  7298  003A58                     u2540:
  7299  003A58                     
  7300                           ; BSR set to: 0
  7301  003A58  0E0F               	movlw	15
  7302  003A5A  656B               	cpfsgt	LCDPrintChar@pos& (0+255),b
  7303  003A5C  EF32  F01D         	goto	u2551
  7304  003A60  EF34  F01D         	goto	u2550
  7305  003A64                     u2551:
  7306  003A64  EF36  F01D         	goto	l3375
  7307  003A68                     u2550:
  7308  003A68  EF3F  F01D         	goto	l277
  7309  003A6C                     l3375:
  7310                           
  7311                           ; BSR set to: 0
  7312                           ;lcd.c: 242:     LCDMoveCursor(line, pos);
  7313  003A6C  C06B  F066         	movff	LCDPrintChar@pos,LCDMoveCursor@pos
  7314  003A70  516D               	movf	LCDPrintChar@line& (0+255),w,b
  7315  003A72  EC40  F01D         	call	_LCDMoveCursor
  7316                           
  7317                           ;lcd.c: 243:     LCDPutChar(ch);
  7318  003A76  0100               	movlb	0	; () banked
  7319  003A78  516C               	movf	LCDPrintChar@ch& (0+255),w,b
  7320  003A7A  EC7F  F01C         	call	_LCDPutChar
  7321  003A7E                     l277:
  7322  003A7E  0012               	return		;funcret
  7323  003A80                     __end_of_LCDPrintChar:
  7324                           	opt callstack 0
  7325                           
  7326 ;; *************** function _changeState *****************
  7327 ;; Defined at:
  7328 ;;		line 63 in file "FSM.c"
  7329 ;; Parameters:    Size  Location     Type
  7330 ;;		None
  7331 ;; Auto vars:     Size  Location     Type
  7332 ;;		None
  7333 ;; Return value:  Size  Location     Type
  7334 ;;                  1    wreg      void 
  7335 ;; Registers used:
  7336 ;;		wreg, status,2, status,0
  7337 ;; Tracked objects:
  7338 ;;		On entry : 0/0
  7339 ;;		On exit  : 0/0
  7340 ;;		Unchanged: 0/0
  7341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7346 ;;Total ram usage:        0 bytes
  7347 ;; Hardware stack levels used:    1
  7348 ;; Hardware stack levels required when called:    6
  7349 ;; This function calls:
  7350 ;;		Nothing
  7351 ;; This function is called by:
  7352 ;;		_system_setup
  7353 ;;		_selectReadyTask
  7354 ;; This function uses a non-reentrant model
  7355 ;;
  7356                           
  7357                           	psect	text40
  7358  003B2E                     __ptext40:
  7359                           	opt callstack 0
  7360  003B2E                     _changeState:
  7361                           	opt callstack 22
  7362  003B2E                     
  7363                           ;FSM.c: 64:     if(state != HEATER || state != HEAT_PUMP)
  7364  003B2E  0100               	movlb	0	; () banked
  7365  003B30  05CA               	decf	_state& (0+255),w,b	;volatile
  7366  003B32  A4D8               	btfss	status,2,c
  7367  003B34  EF9E  F01D         	goto	u3421
  7368  003B38  EFA0  F01D         	goto	u3420
  7369  003B3C                     u3421:
  7370  003B3C  EFAD  F01D         	goto	l805
  7371  003B40                     u3420:
  7372  003B40                     
  7373                           ; BSR set to: 0
  7374  003B40  0E02               	movlw	2
  7375  003B42  19CA               	xorwf	_state& (0+255),w,b	;volatile
  7376  003B44  B4D8               	btfsc	status,2,c
  7377  003B46  EFA7  F01D         	goto	u3431
  7378  003B4A  EFA9  F01D         	goto	u3430
  7379  003B4E                     u3431:
  7380  003B4E  EFAB  F01D         	goto	l3975
  7381  003B52                     u3430:
  7382  003B52  EFAD  F01D         	goto	l805
  7383  003B56                     l3975:
  7384                           
  7385                           ; BSR set to: 0
  7386                           ;FSM.c: 68:     flag_switch_state = 1;
  7387  003B56  0E01               	movlw	1
  7388  003B58  6FC7               	movwf	_flag_switch_state& (0+255),b
  7389  003B5A                     l805:
  7390                           
  7391                           ; BSR set to: 0
  7392  003B5A  0012               	return		;funcret
  7393  003B5C                     __end_of_changeState:
  7394                           	opt callstack 0
  7395                           
  7396 ;; *************** function _FSM *****************
  7397 ;; Defined at:
  7398 ;;		line 82 in file "FSM.c"
  7399 ;; Parameters:    Size  Location     Type
  7400 ;;		None
  7401 ;; Auto vars:     Size  Location     Type
  7402 ;;		None
  7403 ;; Return value:  Size  Location     Type
  7404 ;;                  1    wreg      void 
  7405 ;; Registers used:
  7406 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7407 ;; Tracked objects:
  7408 ;;		On entry : 0/0
  7409 ;;		On exit  : 0/0
  7410 ;;		Unchanged: 0/0
  7411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7414 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7415 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7416 ;;Total ram usage:        2 bytes
  7417 ;; Hardware stack levels used:    1
  7418 ;; Hardware stack levels required when called:   11
  7419 ;; This function calls:
  7420 ;;		_LCDPrint
  7421 ;;		_SET_TIMER_state
  7422 ;;		_get_time
  7423 ;;		_turn_off_heat_pump
  7424 ;;		_turn_off_heater
  7425 ;;		_turn_on_fan
  7426 ;;		_turn_on_heat_pump
  7427 ;;		_turn_on_heater
  7428 ;; This function is called by:
  7429 ;;		_main
  7430 ;; This function uses a non-reentrant model
  7431 ;;
  7432                           
  7433                           	psect	text41
  7434  00278C                     __ptext41:
  7435                           	opt callstack 0
  7436  00278C                     _FSM:
  7437                           	opt callstack 19
  7438  00278C                     
  7439                           ;FSM.c: 83:     switch(state) {
  7440  00278C  EF51  F014         	goto	l4219
  7441  002790                     l4171:
  7442                           
  7443                           ; BSR set to: 0
  7444                           ;FSM.c: 85:             if(RA5_pressed) {
  7445  002790  51CC               	movf	_RA5_pressed& (0+255),w,b
  7446  002792  B4D8               	btfsc	status,2,c
  7447  002794  EFCE  F013         	goto	u3581
  7448  002798  EFD0  F013         	goto	u3580
  7449  00279C                     u3581:
  7450  00279C  EF6F  F014         	goto	l823
  7451  0027A0                     u3580:
  7452  0027A0                     
  7453                           ; BSR set to: 0
  7454                           ;FSM.c: 86:                 RA5_pressed = 0;
  7455  0027A0  0E00               	movlw	0
  7456  0027A2  6FCC               	movwf	_RA5_pressed& (0+255),b
  7457                           
  7458                           ;FSM.c: 88:                 state = HEATER;
  7459  0027A4  0E01               	movlw	1
  7460  0027A6  6FCA               	movwf	_state& (0+255),b	;volatile
  7461  0027A8                     
  7462                           ; BSR set to: 0
  7463                           ;FSM.c: 89:                 turn_on_heater();
  7464  0027A8  EC94  F01E         	call	_turn_on_heater	;wreg free
  7465  0027AC                     
  7466                           ;FSM.c: 90:                 turn_on_fan(1);
  7467  0027AC  0E00               	movlw	0
  7468  0027AE  0100               	movlb	0	; () banked
  7469  0027B0  6F61               	movwf	(turn_on_fan@idx+1)& (0+255),b
  7470  0027B2  0E01               	movlw	1
  7471  0027B4  6F60               	movwf	turn_on_fan@idx& (0+255),b
  7472  0027B6  ECE1  F01C         	call	_turn_on_fan	;wreg free
  7473  0027BA                     
  7474                           ;FSM.c: 92:                 LCDPrint(0, 0, "Heater");
  7475  0027BA  0E00               	movlw	0
  7476  0027BC  0100               	movlb	0	; () banked
  7477  0027BE  6F6B               	movwf	LCDPrint@pos& (0+255),b
  7478  0027C0  0E36               	movlw	low STR_7
  7479  0027C2  6F6C               	movwf	LCDPrint@ptr& (0+255),b
  7480  0027C4  0E10               	movlw	high STR_7
  7481  0027C6  6F6D               	movwf	(LCDPrint@ptr+1)& (0+255),b
  7482  0027C8  0E00               	movlw	0
  7483  0027CA  EC5E  F01C         	call	_LCDPrint
  7484  0027CE                     
  7485                           ;FSM.c: 93:                 count_timeout = get_time();
  7486  0027CE  EC72  F01E         	call	_get_time	;wreg free
  7487  0027D2  C060  F0B9         	movff	?_get_time,_count_timeout
  7488  0027D6  C061  F0BA         	movff	?_get_time+1,_count_timeout+1
  7489  0027DA  C062  F0BB         	movff	?_get_time+2,_count_timeout+2
  7490  0027DE  C063  F0BC         	movff	?_get_time+3,_count_timeout+3
  7491  0027E2  EF6F  F014         	goto	l823
  7492  0027E6                     l4183:
  7493                           
  7494                           ; BSR set to: 0
  7495                           ;FSM.c: 97:             if(flag_switch_state) {
  7496  0027E6  51C7               	movf	_flag_switch_state& (0+255),w,b
  7497  0027E8  B4D8               	btfsc	status,2,c
  7498  0027EA  EFF9  F013         	goto	u3591
  7499  0027EE  EFFB  F013         	goto	u3590
  7500  0027F2                     u3591:
  7501  0027F2  EF6F  F014         	goto	l823
  7502  0027F6                     u3590:
  7503  0027F6                     
  7504                           ; BSR set to: 0
  7505                           ;FSM.c: 98:                 flag_switch_state = 0;
  7506  0027F6  0E00               	movlw	0
  7507  0027F8  6FC7               	movwf	_flag_switch_state& (0+255),b
  7508  0027FA                     
  7509                           ; BSR set to: 0
  7510                           ;FSM.c: 101:                 LCDPrint(0, 0, "Heat Pump");
  7511  0027FA  0E00               	movlw	0
  7512  0027FC  6F6B               	movwf	LCDPrint@pos& (0+255),b
  7513  0027FE  0E23               	movlw	low STR_9
  7514  002800  6F6C               	movwf	LCDPrint@ptr& (0+255),b
  7515  002802  0E10               	movlw	high STR_9
  7516  002804  6F6D               	movwf	(LCDPrint@ptr+1)& (0+255),b
  7517  002806  0E00               	movlw	0
  7518  002808  EC5E  F01C         	call	_LCDPrint
  7519  00280C                     
  7520                           ;FSM.c: 102:                 state = HEAT_PUMP;
  7521  00280C  0E02               	movlw	2
  7522  00280E  0100               	movlb	0	; () banked
  7523  002810  6FCA               	movwf	_state& (0+255),b	;volatile
  7524  002812                     
  7525                           ; BSR set to: 0
  7526                           ;FSM.c: 103:                 count_timeout = get_time();
  7527  002812  EC72  F01E         	call	_get_time	;wreg free
  7528  002816  C060  F0B9         	movff	?_get_time,_count_timeout
  7529  00281A  C061  F0BA         	movff	?_get_time+1,_count_timeout+1
  7530  00281E  C062  F0BB         	movff	?_get_time+2,_count_timeout+2
  7531  002822  C063  F0BC         	movff	?_get_time+3,_count_timeout+3
  7532  002826                     
  7533                           ;FSM.c: 104:                 turn_off_heater();
  7534  002826  EC98  F01E         	call	_turn_off_heater	;wreg free
  7535  00282A                     
  7536                           ;FSM.c: 105:                 turn_on_heat_pump();
  7537  00282A  EC96  F01E         	call	_turn_on_heat_pump	;wreg free
  7538  00282E                     
  7539                           ;FSM.c: 106:                 turn_on_fan(2);
  7540  00282E  0E00               	movlw	0
  7541  002830  0100               	movlb	0	; () banked
  7542  002832  6F61               	movwf	(turn_on_fan@idx+1)& (0+255),b
  7543  002834  0E02               	movlw	2
  7544  002836  6F60               	movwf	turn_on_fan@idx& (0+255),b
  7545  002838  ECE1  F01C         	call	_turn_on_fan	;wreg free
  7546  00283C  EF6F  F014         	goto	l823
  7547  002840                     l4199:
  7548                           
  7549                           ; BSR set to: 0
  7550                           ;FSM.c: 110:             if(flag_switch_state) {
  7551  002840  51C7               	movf	_flag_switch_state& (0+255),w,b
  7552  002842  B4D8               	btfsc	status,2,c
  7553  002844  EF26  F014         	goto	u3601
  7554  002848  EF28  F014         	goto	u3600
  7555  00284C                     u3601:
  7556  00284C  EF6F  F014         	goto	l823
  7557  002850                     u3600:
  7558  002850                     
  7559                           ; BSR set to: 0
  7560                           ;FSM.c: 111:                 flag_switch_state = 0;
  7561  002850  0E00               	movlw	0
  7562  002852  6FC7               	movwf	_flag_switch_state& (0+255),b
  7563  002854                     
  7564                           ; BSR set to: 0
  7565                           ;FSM.c: 114:                 LCDPrint(0, 0, "Heater");
  7566  002854  0E00               	movlw	0
  7567  002856  6F6B               	movwf	LCDPrint@pos& (0+255),b
  7568  002858  0E36               	movlw	low STR_7
  7569  00285A  6F6C               	movwf	LCDPrint@ptr& (0+255),b
  7570  00285C  0E10               	movlw	high STR_7
  7571  00285E  6F6D               	movwf	(LCDPrint@ptr+1)& (0+255),b
  7572  002860  0E00               	movlw	0
  7573  002862  EC5E  F01C         	call	_LCDPrint
  7574  002866                     
  7575                           ;FSM.c: 115:                 count_timeout = get_time();
  7576  002866  EC72  F01E         	call	_get_time	;wreg free
  7577  00286A  C060  F0B9         	movff	?_get_time,_count_timeout
  7578  00286E  C061  F0BA         	movff	?_get_time+1,_count_timeout+1
  7579  002872  C062  F0BB         	movff	?_get_time+2,_count_timeout+2
  7580  002876  C063  F0BC         	movff	?_get_time+3,_count_timeout+3
  7581  00287A                     
  7582                           ;FSM.c: 116:                 state = HEATER;
  7583  00287A  0E01               	movlw	1
  7584  00287C  0100               	movlb	0	; () banked
  7585  00287E  6FCA               	movwf	_state& (0+255),b	;volatile
  7586  002880                     
  7587                           ; BSR set to: 0
  7588                           ;FSM.c: 117:                 turn_off_heat_pump();
  7589  002880  EC9A  F01E         	call	_turn_off_heat_pump	;wreg free
  7590  002884                     
  7591                           ;FSM.c: 118:                 turn_on_heater();
  7592  002884  EC94  F01E         	call	_turn_on_heater	;wreg free
  7593  002888                     
  7594                           ;FSM.c: 119:                 turn_on_fan(1);
  7595  002888  0E00               	movlw	0
  7596  00288A  0100               	movlb	0	; () banked
  7597  00288C  6F61               	movwf	(turn_on_fan@idx+1)& (0+255),b
  7598  00288E  0E01               	movlw	1
  7599  002890  6F60               	movwf	turn_on_fan@idx& (0+255),b
  7600  002892  ECE1  F01C         	call	_turn_on_fan	;wreg free
  7601  002896  EF6F  F014         	goto	l823
  7602  00289A                     l4215:
  7603                           
  7604                           ; BSR set to: 0
  7605                           ;FSM.c: 123:             SET_TIMER_state();
  7606  00289A  EC9C  F01E         	call	_SET_TIMER_state	;wreg free
  7607                           
  7608                           ;FSM.c: 124:             break;
  7609  00289E  EF6F  F014         	goto	l823
  7610  0028A2                     l4219:
  7611  0028A2  0100               	movlb	0	; () banked
  7612  0028A4  51CA               	movf	_state& (0+255),w,b	;volatile
  7613  0028A6  6F6F               	movwf	??_FSM& (0+255),b
  7614  0028A8  6B70               	clrf	(??_FSM+1)& (0+255),b
  7615                           
  7616                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7617                           ; Switch size 1, requested type "simple"
  7618                           ; Number of cases is 1, Range of values is 0 to 0
  7619                           ; switch strategies available:
  7620                           ; Name         Instructions Cycles
  7621                           ; simple_byte            4     3 (average)
  7622                           ;	Chosen strategy is simple_byte
  7623  0028AA  5170               	movf	(??_FSM+1)& (0+255),w,b
  7624  0028AC  0A00               	xorlw	0	; case 0
  7625  0028AE  B4D8               	btfsc	status,2,c
  7626  0028B0  EF5C  F014         	goto	l4511
  7627  0028B4  EF6F  F014         	goto	l823
  7628  0028B8                     l4511:
  7629                           
  7630                           ; BSR set to: 0
  7631                           ; Switch size 1, requested type "simple"
  7632                           ; Number of cases is 4, Range of values is 0 to 3
  7633                           ; switch strategies available:
  7634                           ; Name         Instructions Cycles
  7635                           ; simple_byte           13     7 (average)
  7636                           ;	Chosen strategy is simple_byte
  7637  0028B8  516F               	movf	??_FSM& (0+255),w,b
  7638  0028BA  0A00               	xorlw	0	; case 0
  7639  0028BC  B4D8               	btfsc	status,2,c
  7640  0028BE  EFC8  F013         	goto	l4171
  7641  0028C2  0A01               	xorlw	1	; case 1
  7642  0028C4  B4D8               	btfsc	status,2,c
  7643  0028C6  EFF3  F013         	goto	l4183
  7644  0028CA  0A03               	xorlw	3	; case 2
  7645  0028CC  B4D8               	btfsc	status,2,c
  7646  0028CE  EF20  F014         	goto	l4199
  7647  0028D2  0A01               	xorlw	1	; case 3
  7648  0028D4  B4D8               	btfsc	status,2,c
  7649  0028D6  EF4D  F014         	goto	l4215
  7650  0028DA  EF6F  F014         	goto	l823
  7651  0028DE                     l823:
  7652  0028DE  0012               	return		;funcret
  7653  0028E0                     __end_of_FSM:
  7654                           	opt callstack 0
  7655                           
  7656 ;; *************** function _turn_on_heater *****************
  7657 ;; Defined at:
  7658 ;;		line 9 in file "LTDtask.c"
  7659 ;; Parameters:    Size  Location     Type
  7660 ;;		None
  7661 ;; Auto vars:     Size  Location     Type
  7662 ;;		None
  7663 ;; Return value:  Size  Location     Type
  7664 ;;                  1    wreg      void 
  7665 ;; Registers used:
  7666 ;;		None
  7667 ;; Tracked objects:
  7668 ;;		On entry : 0/0
  7669 ;;		On exit  : 0/0
  7670 ;;		Unchanged: 0/0
  7671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7676 ;;Total ram usage:        0 bytes
  7677 ;; Hardware stack levels used:    1
  7678 ;; Hardware stack levels required when called:    6
  7679 ;; This function calls:
  7680 ;;		Nothing
  7681 ;; This function is called by:
  7682 ;;		_FSM
  7683 ;;		_IDLE_state
  7684 ;;		_HEAT_PUMP_state
  7685 ;; This function uses a non-reentrant model
  7686 ;;
  7687                           
  7688                           	psect	text42
  7689  003D28                     __ptext42:
  7690                           	opt callstack 0
  7691  003D28                     _turn_on_heater:
  7692                           	opt callstack 23
  7693  003D28                     
  7694                           ;LTDtask.c: 10:     LATDbits.LATD0 = 1;
  7695  003D28  808C               	bsf	140,0,c	;volatile
  7696  003D2A  0012               	return		;funcret
  7697  003D2C                     __end_of_turn_on_heater:
  7698                           	opt callstack 0
  7699                           
  7700 ;; *************** function _turn_on_heat_pump *****************
  7701 ;; Defined at:
  7702 ;;		line 17 in file "LTDtask.c"
  7703 ;; Parameters:    Size  Location     Type
  7704 ;;		None
  7705 ;; Auto vars:     Size  Location     Type
  7706 ;;		None
  7707 ;; Return value:  Size  Location     Type
  7708 ;;                  1    wreg      void 
  7709 ;; Registers used:
  7710 ;;		None
  7711 ;; Tracked objects:
  7712 ;;		On entry : 0/0
  7713 ;;		On exit  : 0/0
  7714 ;;		Unchanged: 0/0
  7715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7720 ;;Total ram usage:        0 bytes
  7721 ;; Hardware stack levels used:    1
  7722 ;; Hardware stack levels required when called:    6
  7723 ;; This function calls:
  7724 ;;		Nothing
  7725 ;; This function is called by:
  7726 ;;		_FSM
  7727 ;;		_HEATER_state
  7728 ;; This function uses a non-reentrant model
  7729 ;;
  7730                           
  7731                           	psect	text43
  7732  003D2C                     __ptext43:
  7733                           	opt callstack 0
  7734  003D2C                     _turn_on_heat_pump:
  7735                           	opt callstack 23
  7736  003D2C                     
  7737                           ;LTDtask.c: 18:     LATDbits.LATD1 = 1;
  7738  003D2C  828C               	bsf	140,1,c	;volatile
  7739  003D2E  0012               	return		;funcret
  7740  003D30                     __end_of_turn_on_heat_pump:
  7741                           	opt callstack 0
  7742                           
  7743 ;; *************** function _turn_on_fan *****************
  7744 ;; Defined at:
  7745 ;;		line 25 in file "LTDtask.c"
  7746 ;; Parameters:    Size  Location     Type
  7747 ;;  idx             2    0[BANK0 ] int 
  7748 ;; Auto vars:     Size  Location     Type
  7749 ;;		None
  7750 ;; Return value:  Size  Location     Type
  7751 ;;                  1    wreg      void 
  7752 ;; Registers used:
  7753 ;;		wreg, status,2, status,0
  7754 ;; Tracked objects:
  7755 ;;		On entry : 0/0
  7756 ;;		On exit  : 0/0
  7757 ;;		Unchanged: 0/0
  7758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7759 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7761 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7762 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7763 ;;Total ram usage:        4 bytes
  7764 ;; Hardware stack levels used:    1
  7765 ;; Hardware stack levels required when called:    6
  7766 ;; This function calls:
  7767 ;;		Nothing
  7768 ;; This function is called by:
  7769 ;;		_FSM
  7770 ;;		_IDLE_state
  7771 ;;		_HEATER_state
  7772 ;;		_HEAT_PUMP_state
  7773 ;; This function uses a non-reentrant model
  7774 ;;
  7775                           
  7776                           	psect	text44
  7777  0039C2                     __ptext44:
  7778                           	opt callstack 0
  7779  0039C2                     _turn_on_fan:
  7780                           	opt callstack 23
  7781  0039C2                     
  7782                           ;LTDtask.c: 26:     switch (idx) {
  7783  0039C2  EFE9  F01C         	goto	l4135
  7784  0039C6                     l705:
  7785                           
  7786                           ; BSR set to: 0
  7787                           ;LTDtask.c: 28:             LATDbits.LATD7 = 1;
  7788  0039C6  8E8C               	bsf	140,7,c	;volatile
  7789                           
  7790                           ;LTDtask.c: 29:             break;
  7791  0039C8  EF00  F01D         	goto	l708
  7792  0039CC                     l707:
  7793                           
  7794                           ; BSR set to: 0
  7795                           ;LTDtask.c: 31:             LATDbits.LATD6 = 1;
  7796  0039CC  8C8C               	bsf	140,6,c	;volatile
  7797                           
  7798                           ;LTDtask.c: 32:             break;
  7799  0039CE  EF00  F01D         	goto	l708
  7800  0039D2                     l4135:
  7801  0039D2  C060  F062         	movff	turn_on_fan@idx,??_turn_on_fan
  7802  0039D6  C061  F063         	movff	turn_on_fan@idx+1,??_turn_on_fan+1
  7803                           
  7804                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7805                           ; Switch size 1, requested type "simple"
  7806                           ; Number of cases is 1, Range of values is 0 to 0
  7807                           ; switch strategies available:
  7808                           ; Name         Instructions Cycles
  7809                           ; simple_byte            4     3 (average)
  7810                           ;	Chosen strategy is simple_byte
  7811  0039DA  0100               	movlb	0	; () banked
  7812  0039DC  5163               	movf	(??_turn_on_fan+1)& (0+255),w,b
  7813  0039DE  0A00               	xorlw	0	; case 0
  7814  0039E0  B4D8               	btfsc	status,2,c
  7815  0039E2  EFF5  F01C         	goto	l4513
  7816  0039E6  EF00  F01D         	goto	l708
  7817  0039EA                     l4513:
  7818                           
  7819                           ; BSR set to: 0
  7820                           ; Switch size 1, requested type "simple"
  7821                           ; Number of cases is 2, Range of values is 1 to 2
  7822                           ; switch strategies available:
  7823                           ; Name         Instructions Cycles
  7824                           ; simple_byte            7     4 (average)
  7825                           ;	Chosen strategy is simple_byte
  7826  0039EA  5162               	movf	??_turn_on_fan& (0+255),w,b
  7827  0039EC  0A01               	xorlw	1	; case 1
  7828  0039EE  B4D8               	btfsc	status,2,c
  7829  0039F0  EFE3  F01C         	goto	l705
  7830  0039F4  0A03               	xorlw	3	; case 2
  7831  0039F6  B4D8               	btfsc	status,2,c
  7832  0039F8  EFE6  F01C         	goto	l707
  7833  0039FC  EF00  F01D         	goto	l708
  7834  003A00                     l708:
  7835                           
  7836                           ; BSR set to: 0
  7837  003A00  0012               	return		;funcret
  7838  003A02                     __end_of_turn_on_fan:
  7839                           	opt callstack 0
  7840                           
  7841 ;; *************** function _turn_off_heater *****************
  7842 ;; Defined at:
  7843 ;;		line 13 in file "LTDtask.c"
  7844 ;; Parameters:    Size  Location     Type
  7845 ;;		None
  7846 ;; Auto vars:     Size  Location     Type
  7847 ;;		None
  7848 ;; Return value:  Size  Location     Type
  7849 ;;                  1    wreg      void 
  7850 ;; Registers used:
  7851 ;;		None
  7852 ;; Tracked objects:
  7853 ;;		On entry : 0/0
  7854 ;;		On exit  : 0/0
  7855 ;;		Unchanged: 0/0
  7856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7861 ;;Total ram usage:        0 bytes
  7862 ;; Hardware stack levels used:    1
  7863 ;; Hardware stack levels required when called:    6
  7864 ;; This function calls:
  7865 ;;		Nothing
  7866 ;; This function is called by:
  7867 ;;		_FSM
  7868 ;;		_force_turn_off
  7869 ;;		_HEATER_state
  7870 ;; This function uses a non-reentrant model
  7871 ;;
  7872                           
  7873                           	psect	text45
  7874  003D30                     __ptext45:
  7875                           	opt callstack 0
  7876  003D30                     _turn_off_heater:
  7877                           	opt callstack 23
  7878  003D30                     
  7879                           ;LTDtask.c: 14:     LATDbits.LATD0 = 0;
  7880  003D30  908C               	bcf	140,0,c	;volatile
  7881  003D32  0012               	return		;funcret
  7882  003D34                     __end_of_turn_off_heater:
  7883                           	opt callstack 0
  7884                           
  7885 ;; *************** function _turn_off_heat_pump *****************
  7886 ;; Defined at:
  7887 ;;		line 21 in file "LTDtask.c"
  7888 ;; Parameters:    Size  Location     Type
  7889 ;;		None
  7890 ;; Auto vars:     Size  Location     Type
  7891 ;;		None
  7892 ;; Return value:  Size  Location     Type
  7893 ;;                  1    wreg      void 
  7894 ;; Registers used:
  7895 ;;		None
  7896 ;; Tracked objects:
  7897 ;;		On entry : 0/0
  7898 ;;		On exit  : 0/0
  7899 ;;		Unchanged: 0/0
  7900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7905 ;;Total ram usage:        0 bytes
  7906 ;; Hardware stack levels used:    1
  7907 ;; Hardware stack levels required when called:    6
  7908 ;; This function calls:
  7909 ;;		Nothing
  7910 ;; This function is called by:
  7911 ;;		_FSM
  7912 ;;		_force_turn_off
  7913 ;;		_HEAT_PUMP_state
  7914 ;; This function uses a non-reentrant model
  7915 ;;
  7916                           
  7917                           	psect	text46
  7918  003D34                     __ptext46:
  7919                           	opt callstack 0
  7920  003D34                     _turn_off_heat_pump:
  7921                           	opt callstack 23
  7922  003D34                     
  7923                           ;LTDtask.c: 22:     LATDbits.LATD1 = 0;
  7924  003D34  928C               	bcf	140,1,c	;volatile
  7925  003D36  0012               	return		;funcret
  7926  003D38                     __end_of_turn_off_heat_pump:
  7927                           	opt callstack 0
  7928                           
  7929 ;; *************** function _get_time *****************
  7930 ;; Defined at:
  7931 ;;		line 34 in file "clock.c"
  7932 ;; Parameters:    Size  Location     Type
  7933 ;;		None
  7934 ;; Auto vars:     Size  Location     Type
  7935 ;;		None
  7936 ;; Return value:  Size  Location     Type
  7937 ;;                  4    0[BANK0 ] unsigned long 
  7938 ;; Registers used:
  7939 ;;		None
  7940 ;; Tracked objects:
  7941 ;;		On entry : 0/0
  7942 ;;		On exit  : 0/0
  7943 ;;		Unchanged: 0/0
  7944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7945 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7948 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7949 ;;Total ram usage:        4 bytes
  7950 ;; Hardware stack levels used:    1
  7951 ;; Hardware stack levels required when called:    6
  7952 ;; This function calls:
  7953 ;;		Nothing
  7954 ;; This function is called by:
  7955 ;;		_FSM
  7956 ;;		_IDLE_state
  7957 ;;		_HEATER_state
  7958 ;;		_HEAT_PUMP_state
  7959 ;; This function uses a non-reentrant model
  7960 ;;
  7961                           
  7962                           	psect	text47
  7963  003CE4                     __ptext47:
  7964                           	opt callstack 0
  7965  003CE4                     _get_time:
  7966                           	opt callstack 23
  7967  003CE4                     
  7968                           ;clock.c: 35:     return time_ms;
  7969  003CE4  C0BD  F060         	movff	_time_ms,?_get_time
  7970  003CE8  C0BE  F061         	movff	_time_ms+1,?_get_time+1
  7971  003CEC  C0BF  F062         	movff	_time_ms+2,?_get_time+2
  7972  003CF0  C0C0  F063         	movff	_time_ms+3,?_get_time+3
  7973  003CF4  0012               	return		;funcret
  7974  003CF6                     __end_of_get_time:
  7975                           	opt callstack 0
  7976                           
  7977 ;; *************** function _SET_TIMER_state *****************
  7978 ;; Defined at:
  7979 ;;		line 59 in file "FSM.c"
  7980 ;; Parameters:    Size  Location     Type
  7981 ;;		None
  7982 ;; Auto vars:     Size  Location     Type
  7983 ;;		None
  7984 ;; Return value:  Size  Location     Type
  7985 ;;                  1    wreg      void 
  7986 ;; Registers used:
  7987 ;;		None
  7988 ;; Tracked objects:
  7989 ;;		On entry : 0/0
  7990 ;;		On exit  : 0/0
  7991 ;;		Unchanged: 0/0
  7992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7997 ;;Total ram usage:        0 bytes
  7998 ;; Hardware stack levels used:    1
  7999 ;; Hardware stack levels required when called:    6
  8000 ;; This function calls:
  8001 ;;		Nothing
  8002 ;; This function is called by:
  8003 ;;		_FSM
  8004 ;; This function uses a non-reentrant model
  8005 ;;
  8006                           
  8007                           	psect	text48
  8008  003D38                     __ptext48:
  8009                           	opt callstack 0
  8010  003D38                     _SET_TIMER_state:
  8011                           	opt callstack 23
  8012  003D38  0012               	return		;funcret
  8013  003D3A                     __end_of_SET_TIMER_state:
  8014                           	opt callstack 0
  8015                           
  8016 ;; *************** function _LCDPrint *****************
  8017 ;; Defined at:
  8018 ;;		line 232 in file "lcd.c"
  8019 ;; Parameters:    Size  Location     Type
  8020 ;;  line            1    wreg     unsigned char 
  8021 ;;  pos             1   11[BANK0 ] unsigned char 
  8022 ;;  ptr             2   12[BANK0 ] PTR const unsigned char 
  8023 ;;		 -> STR_15(7), STR_14(10), STR_13(7), STR_12(6), 
  8024 ;;		 -> STR_11(7), STR_10(9), STR_9(10), STR_8(9), 
  8025 ;;		 -> STR_7(7), STR_6(17), STR_5(17), STR_2(3), 
  8026 ;;		 -> STR_1(3), 
  8027 ;; Auto vars:     Size  Location     Type
  8028 ;;  line            1   14[BANK0 ] unsigned char 
  8029 ;; Return value:  Size  Location     Type
  8030 ;;                  1    wreg      void 
  8031 ;; Registers used:
  8032 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8033 ;; Tracked objects:
  8034 ;;		On entry : 0/0
  8035 ;;		On exit  : 0/0
  8036 ;;		Unchanged: 0/0
  8037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8038 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8039 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8041 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8042 ;;Total ram usage:        4 bytes
  8043 ;; Hardware stack levels used:    1
  8044 ;; Hardware stack levels required when called:   10
  8045 ;; This function calls:
  8046 ;;		_LCDMoveCursor
  8047 ;;		_LCDPutStr
  8048 ;; This function is called by:
  8049 ;;		_printTempAndHumid
  8050 ;;		_main
  8051 ;;		_check_humid_to_turn_fan
  8052 ;;		_FSM
  8053 ;;		_IDLE_state
  8054 ;;		_HEATER_state
  8055 ;;		_HEAT_PUMP_state
  8056 ;; This function uses a non-reentrant model
  8057 ;;
  8058                           
  8059                           	psect	text49
  8060  0038BC                     __ptext49:
  8061                           	opt callstack 0
  8062  0038BC                     _LCDPrint:
  8063                           	opt callstack 17
  8064                           
  8065                           ;incstack = 0
  8066                           ;LCDPrint@line stored from wreg
  8067  0038BC  0100               	movlb	0	; () banked
  8068  0038BE  6F6E               	movwf	LCDPrint@line& (0+255),b
  8069  0038C0                     
  8070                           ;lcd.c: 233:     if(line < 0 || line > 2 || pos < 0 || pos > 15)
  8071  0038C0  0E03               	movlw	3
  8072  0038C2  0100               	movlb	0	; () banked
  8073  0038C4  616E               	cpfslt	LCDPrint@line& (0+255),b
  8074  0038C6  EF67  F01C         	goto	u2521
  8075  0038CA  EF69  F01C         	goto	u2520
  8076  0038CE                     u2521:
  8077  0038CE  EF7E  F01C         	goto	l271
  8078  0038D2                     u2520:
  8079  0038D2                     
  8080                           ; BSR set to: 0
  8081  0038D2  0E0F               	movlw	15
  8082  0038D4  656B               	cpfsgt	LCDPrint@pos& (0+255),b
  8083  0038D6  EF6F  F01C         	goto	u2531
  8084  0038DA  EF71  F01C         	goto	u2530
  8085  0038DE                     u2531:
  8086  0038DE  EF73  F01C         	goto	l3367
  8087  0038E2                     u2530:
  8088  0038E2  EF7E  F01C         	goto	l271
  8089  0038E6                     l3367:
  8090                           
  8091                           ; BSR set to: 0
  8092                           ;lcd.c: 235:     LCDMoveCursor(line, pos);
  8093  0038E6  C06B  F066         	movff	LCDPrint@pos,LCDMoveCursor@pos
  8094  0038EA  516E               	movf	LCDPrint@line& (0+255),w,b
  8095  0038EC  EC40  F01D         	call	_LCDMoveCursor
  8096  0038F0                     
  8097                           ;lcd.c: 236:     LCDPutStr(ptr);
  8098  0038F0  C06C  F066         	movff	LCDPrint@ptr,LCDPutStr@ptr
  8099  0038F4  C06D  F067         	movff	LCDPrint@ptr+1,LCDPutStr@ptr+1
  8100  0038F8  EC01  F01D         	call	_LCDPutStr	;wreg free
  8101  0038FC                     l271:
  8102  0038FC  0012               	return		;funcret
  8103  0038FE                     __end_of_LCDPrint:
  8104                           	opt callstack 0
  8105                           
  8106 ;; *************** function _LCDPutStr *****************
  8107 ;; Defined at:
  8108 ;;		line 222 in file "lcd.c"
  8109 ;; Parameters:    Size  Location     Type
  8110 ;;  ptr             2    6[BANK0 ] PTR const unsigned char 
  8111 ;;		 -> STR_15(7), STR_14(10), STR_13(7), STR_12(6), 
  8112 ;;		 -> STR_11(7), STR_10(9), STR_9(10), STR_8(9), 
  8113 ;;		 -> STR_7(7), STR_6(17), STR_5(17), STR_2(3), 
  8114 ;;		 -> STR_1(3), 
  8115 ;; Auto vars:     Size  Location     Type
  8116 ;;		None
  8117 ;; Return value:  Size  Location     Type
  8118 ;;                  1    wreg      void 
  8119 ;; Registers used:
  8120 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8121 ;; Tracked objects:
  8122 ;;		On entry : 0/0
  8123 ;;		On exit  : 0/0
  8124 ;;		Unchanged: 0/0
  8125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8126 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8129 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8130 ;;Total ram usage:        2 bytes
  8131 ;; Hardware stack levels used:    1
  8132 ;; Hardware stack levels required when called:    9
  8133 ;; This function calls:
  8134 ;;		_LCDPutChar
  8135 ;; This function is called by:
  8136 ;;		_LCDPrint
  8137 ;; This function uses a non-reentrant model
  8138 ;;
  8139                           
  8140                           	psect	text50
  8141  003A02                     __ptext50:
  8142                           	opt callstack 0
  8143  003A02                     _LCDPutStr:
  8144                           	opt callstack 17
  8145  003A02                     
  8146                           ;lcd.c: 222: void LCDPutStr (const char *ptr);lcd.c: 223: {;lcd.c: 224:     while(*ptr) 
      +                          LCDPutChar(*(ptr++));
  8147  003A02  EF10  F01D         	goto	l3067
  8148  003A06                     l3063:
  8149  003A06  C066  FFF6         	movff	LCDPutStr@ptr,tblptrl
  8150  003A0A  C067  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
  8151  003A0E                     	if	0	;tblptru may be non-zero
  8152  003A0E                     	endif
  8153  003A0E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8154  003A0E  0E00               	movlw	low (__mediumconst shr (0+16))
  8155  003A10  6EF8               	movwf	tblptru,c
  8156  003A12                     	endif
  8157  003A12  0008               	tblrd		*
  8158  003A14  50F5               	movf	tablat,w,c
  8159  003A16  EC7F  F01C         	call	_LCDPutChar
  8160  003A1A  0100               	movlb	0	; () banked
  8161  003A1C  4B66               	infsnz	LCDPutStr@ptr& (0+255),f,b
  8162  003A1E  2B67               	incf	(LCDPutStr@ptr+1)& (0+255),f,b
  8163  003A20                     l3067:
  8164  003A20  C066  FFF6         	movff	LCDPutStr@ptr,tblptrl
  8165  003A24  C067  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
  8166  003A28                     	if	0	;tblptru may be non-zero
  8167  003A28                     	endif
  8168  003A28                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8169  003A28  0E00               	movlw	low (__mediumconst shr (0+16))
  8170  003A2A  6EF8               	movwf	tblptru,c
  8171  003A2C                     	endif
  8172  003A2C  0008               	tblrd		*
  8173  003A2E  50F5               	movf	tablat,w,c
  8174  003A30  0900               	iorlw	0
  8175  003A32  A4D8               	btfss	status,2,c
  8176  003A34  EF1E  F01D         	goto	u1991
  8177  003A38  EF20  F01D         	goto	u1990
  8178  003A3C                     u1991:
  8179  003A3C  EF03  F01D         	goto	l3063
  8180  003A40                     u1990:
  8181  003A40  0012               	return		;funcret
  8182  003A42                     __end_of_LCDPutStr:
  8183                           	opt callstack 0
  8184                           
  8185 ;; *************** function _LCDPutChar *****************
  8186 ;; Defined at:
  8187 ;;		line 172 in file "lcd.c"
  8188 ;; Parameters:    Size  Location     Type
  8189 ;;  ch              1    wreg     unsigned char 
  8190 ;; Auto vars:     Size  Location     Type
  8191 ;;  ch              1    5[BANK0 ] unsigned char 
  8192 ;; Return value:  Size  Location     Type
  8193 ;;                  1    wreg      void 
  8194 ;; Registers used:
  8195 ;;		wreg, status,2, status,0, cstack
  8196 ;; Tracked objects:
  8197 ;;		On entry : 0/0
  8198 ;;		On exit  : 0/0
  8199 ;;		Unchanged: 0/0
  8200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8202 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8204 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8205 ;;Total ram usage:        1 bytes
  8206 ;; Hardware stack levels used:    1
  8207 ;; Hardware stack levels required when called:    8
  8208 ;; This function calls:
  8209 ;;		_WritePort_BBSPI
  8210 ;; This function is called by:
  8211 ;;		_LCDPutStr
  8212 ;;		_LCDPrintChar
  8213 ;; This function uses a non-reentrant model
  8214 ;;
  8215                           
  8216                           	psect	text51
  8217  0038FE                     __ptext51:
  8218                           	opt callstack 0
  8219  0038FE                     _LCDPutChar:
  8220                           	opt callstack 18
  8221                           
  8222                           ;incstack = 0
  8223                           ;LCDPutChar@ch stored from wreg
  8224  0038FE  0100               	movlb	0	; () banked
  8225  003900  6F65               	movwf	LCDPutChar@ch& (0+255),b
  8226  003902                     
  8227                           ;lcd.c: 172: void LCDPutChar (unsigned char ch);lcd.c: 173: {;lcd.c: 174:     _delay((un
      +                          signed long)((10)*(8000000/4000000.0)));
  8228  003902  0E06               	movlw	6
  8229  003904                     u3847:
  8230  003904  2EE8               	decfsz	wreg,f,c
  8231  003906  D7FE               	bra	u3847
  8232  003908  D000               	nop2	
  8233  00390A                     
  8234                           ;lcd.c: 175:     WritePort_BBSPI (0x12, 0x80);
  8235  00390A  0E80               	movlw	128
  8236  00390C  0100               	movlb	0	; () banked
  8237  00390E  6F63               	movwf	WritePort_BBSPI@a& (0+255),b
  8238  003910  0E12               	movlw	18
  8239  003912  EC23  F01E         	call	_WritePort_BBSPI
  8240  003916                     
  8241                           ;lcd.c: 176:     _delay((unsigned long)((1)*(8000000/4000000.0)));
  8242  003916  D000               	nop2		;2 cycle nop
  8243  003918                     
  8244                           ;lcd.c: 177:     WritePort_BBSPI (0x13, ch);
  8245  003918  C065  F063         	movff	LCDPutChar@ch,WritePort_BBSPI@a
  8246  00391C  0E13               	movlw	19
  8247  00391E  EC23  F01E         	call	_WritePort_BBSPI
  8248  003922                     
  8249                           ;lcd.c: 178:     _delay((unsigned long)((1)*(8000000/4000000.0)));
  8250  003922  D000               	nop2		;2 cycle nop
  8251  003924                     
  8252                           ;lcd.c: 179:     WritePort_BBSPI (0x12, 0xC0);
  8253  003924  0EC0               	movlw	192
  8254  003926  0100               	movlb	0	; () banked
  8255  003928  6F63               	movwf	WritePort_BBSPI@a& (0+255),b
  8256  00392A  0E12               	movlw	18
  8257  00392C  EC23  F01E         	call	_WritePort_BBSPI
  8258  003930                     
  8259                           ;lcd.c: 180:     _delay((unsigned long)((1)*(8000000/4000000.0)));
  8260  003930  D000               	nop2		;2 cycle nop
  8261  003932                     
  8262                           ;lcd.c: 181:     WritePort_BBSPI (0x12, 0x00);
  8263  003932  0E00               	movlw	0
  8264  003934  0100               	movlb	0	; () banked
  8265  003936  6F63               	movwf	WritePort_BBSPI@a& (0+255),b
  8266  003938  0E12               	movlw	18
  8267  00393A  EC23  F01E         	call	_WritePort_BBSPI
  8268  00393E  0012               	return		;funcret
  8269  003940                     __end_of_LCDPutChar:
  8270                           	opt callstack 0
  8271                           
  8272 ;; *************** function _LCDMoveCursor *****************
  8273 ;; Defined at:
  8274 ;;		line 227 in file "lcd.c"
  8275 ;; Parameters:    Size  Location     Type
  8276 ;;  line            1    wreg     unsigned char 
  8277 ;;  pos             1    6[BANK0 ] unsigned char 
  8278 ;; Auto vars:     Size  Location     Type
  8279 ;;  line            1    7[BANK0 ] unsigned char 
  8280 ;;  position        1   10[BANK0 ] unsigned char 
  8281 ;; Return value:  Size  Location     Type
  8282 ;;                  1    wreg      void 
  8283 ;; Registers used:
  8284 ;;		wreg, status,2, status,0, cstack
  8285 ;; Tracked objects:
  8286 ;;		On entry : 0/0
  8287 ;;		On exit  : 0/0
  8288 ;;		Unchanged: 0/0
  8289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8290 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8291 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8293 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8294 ;;Total ram usage:        5 bytes
  8295 ;; Hardware stack levels used:    1
  8296 ;; Hardware stack levels required when called:    9
  8297 ;; This function calls:
  8298 ;;		_LCDPutInst
  8299 ;; This function is called by:
  8300 ;;		_LCDPrint
  8301 ;;		_LCDPrintChar
  8302 ;; This function uses a non-reentrant model
  8303 ;;
  8304                           
  8305                           	psect	text52
  8306  003A80                     __ptext52:
  8307                           	opt callstack 0
  8308  003A80                     _LCDMoveCursor:
  8309                           	opt callstack 17
  8310                           
  8311                           ;incstack = 0
  8312                           ;LCDMoveCursor@line stored from wreg
  8313  003A80  0100               	movlb	0	; () banked
  8314  003A82  6F67               	movwf	LCDMoveCursor@line& (0+255),b
  8315  003A84                     
  8316                           ;lcd.c: 228:     unsigned char position = (line == 0) ? (128 + pos) : (192 + pos);
  8317  003A84  0100               	movlb	0	; () banked
  8318  003A86  5167               	movf	LCDMoveCursor@line& (0+255),w,b
  8319  003A88  B4D8               	btfsc	status,2,c
  8320  003A8A  EF49  F01D         	goto	u2001
  8321  003A8E  EF4B  F01D         	goto	u2000
  8322  003A92                     u2001:
  8323  003A92  EF53  F01D         	goto	l3073
  8324  003A96                     u2000:
  8325  003A96                     
  8326                           ; BSR set to: 0
  8327  003A96  0EC0               	movlw	192
  8328  003A98  2566               	addwf	LCDMoveCursor@pos& (0+255),w,b
  8329  003A9A  6F68               	movwf	_LCDMoveCursor$701& (0+255),b
  8330  003A9C  6B69               	clrf	(_LCDMoveCursor$701+1)& (0+255),b
  8331  003A9E  0E00               	movlw	0
  8332  003AA0  2369               	addwfc	(_LCDMoveCursor$701+1)& (0+255),f,b
  8333  003AA2  EF59  F01D         	goto	l3075
  8334  003AA6                     l3073:
  8335                           
  8336                           ; BSR set to: 0
  8337  003AA6  0E80               	movlw	128
  8338  003AA8  2566               	addwf	LCDMoveCursor@pos& (0+255),w,b
  8339  003AAA  6F68               	movwf	_LCDMoveCursor$701& (0+255),b
  8340  003AAC  6B69               	clrf	(_LCDMoveCursor$701+1)& (0+255),b
  8341  003AAE  0E00               	movlw	0
  8342  003AB0  2369               	addwfc	(_LCDMoveCursor$701+1)& (0+255),f,b
  8343  003AB2                     l3075:
  8344                           
  8345                           ; BSR set to: 0
  8346  003AB2  C068  F06A         	movff	_LCDMoveCursor$701,LCDMoveCursor@position
  8347  003AB6                     
  8348                           ; BSR set to: 0
  8349                           ;lcd.c: 229:     LCDPutInst(position);
  8350  003AB6  516A               	movf	LCDMoveCursor@position& (0+255),w,b
  8351  003AB8  ECA0  F01C         	call	_LCDPutInst
  8352  003ABC  0012               	return		;funcret
  8353  003ABE                     __end_of_LCDMoveCursor:
  8354                           	opt callstack 0
  8355                           
  8356 ;; *************** function _LCDPutInst *****************
  8357 ;; Defined at:
  8358 ;;		line 203 in file "lcd.c"
  8359 ;; Parameters:    Size  Location     Type
  8360 ;;  ch              1    wreg     unsigned char 
  8361 ;; Auto vars:     Size  Location     Type
  8362 ;;  ch              1    5[BANK0 ] unsigned char 
  8363 ;; Return value:  Size  Location     Type
  8364 ;;                  1    wreg      void 
  8365 ;; Registers used:
  8366 ;;		wreg, status,2, status,0, cstack
  8367 ;; Tracked objects:
  8368 ;;		On entry : 0/0
  8369 ;;		On exit  : 0/0
  8370 ;;		Unchanged: 0/0
  8371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8373 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8375 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8376 ;;Total ram usage:        1 bytes
  8377 ;; Hardware stack levels used:    1
  8378 ;; Hardware stack levels required when called:    8
  8379 ;; This function calls:
  8380 ;;		_WritePort_BBSPI
  8381 ;; This function is called by:
  8382 ;;		_LCDInit
  8383 ;;		_LCDMoveCursor
  8384 ;;		_IDLE_state
  8385 ;; This function uses a non-reentrant model
  8386 ;;
  8387                           
  8388                           	psect	text53
  8389  003940                     __ptext53:
  8390                           	opt callstack 0
  8391  003940                     _LCDPutInst:
  8392                           	opt callstack 20
  8393                           
  8394                           ;incstack = 0
  8395                           ;LCDPutInst@ch stored from wreg
  8396  003940  0100               	movlb	0	; () banked
  8397  003942  6F65               	movwf	LCDPutInst@ch& (0+255),b
  8398  003944                     
  8399                           ;lcd.c: 203: void LCDPutInst (unsigned char ch);lcd.c: 204: {;lcd.c: 205:     _delay((un
      +                          signed long)((10)*(8000000/4000000.0)));
  8400  003944  0E06               	movlw	6
  8401  003946                     u3857:
  8402  003946  2EE8               	decfsz	wreg,f,c
  8403  003948  D7FE               	bra	u3857
  8404  00394A  D000               	nop2	
  8405  00394C                     
  8406                           ;lcd.c: 206:     WritePort_BBSPI (0x12, 0x00);
  8407  00394C  0E00               	movlw	0
  8408  00394E  0100               	movlb	0	; () banked
  8409  003950  6F63               	movwf	WritePort_BBSPI@a& (0+255),b
  8410  003952  0E12               	movlw	18
  8411  003954  EC23  F01E         	call	_WritePort_BBSPI
  8412  003958                     
  8413                           ;lcd.c: 207:     _delay((unsigned long)((1)*(8000000/4000000.0)));
  8414  003958  D000               	nop2		;2 cycle nop
  8415  00395A                     
  8416                           ;lcd.c: 208:     WritePort_BBSPI (0x13, ch);
  8417  00395A  C065  F063         	movff	LCDPutInst@ch,WritePort_BBSPI@a
  8418  00395E  0E13               	movlw	19
  8419  003960  EC23  F01E         	call	_WritePort_BBSPI
  8420  003964                     
  8421                           ;lcd.c: 209:     _delay((unsigned long)((1)*(8000000/4000000.0)));
  8422  003964  D000               	nop2		;2 cycle nop
  8423  003966                     
  8424                           ;lcd.c: 210:     WritePort_BBSPI (0x12,0x40);
  8425  003966  0E40               	movlw	64
  8426  003968  0100               	movlb	0	; () banked
  8427  00396A  6F63               	movwf	WritePort_BBSPI@a& (0+255),b
  8428  00396C  0E12               	movlw	18
  8429  00396E  EC23  F01E         	call	_WritePort_BBSPI
  8430  003972                     
  8431                           ;lcd.c: 211:     _delay((unsigned long)((1)*(8000000/4000000.0)));
  8432  003972  D000               	nop2		;2 cycle nop
  8433  003974                     
  8434                           ;lcd.c: 212:     WritePort_BBSPI (0x12, 0x00);
  8435  003974  0E00               	movlw	0
  8436  003976  0100               	movlb	0	; () banked
  8437  003978  6F63               	movwf	WritePort_BBSPI@a& (0+255),b
  8438  00397A  0E12               	movlw	18
  8439  00397C  EC23  F01E         	call	_WritePort_BBSPI
  8440  003980  0012               	return		;funcret
  8441  003982                     __end_of_LCDPutInst:
  8442                           	opt callstack 0
  8443                           
  8444 ;; *************** function _WritePort_BBSPI *****************
  8445 ;; Defined at:
  8446 ;;		line 144 in file "lcd.c"
  8447 ;; Parameters:    Size  Location     Type
  8448 ;;  port_add        1    wreg     unsigned char 
  8449 ;;  a               1    3[BANK0 ] unsigned char 
  8450 ;; Auto vars:     Size  Location     Type
  8451 ;;  port_add        1    4[BANK0 ] unsigned char 
  8452 ;; Return value:  Size  Location     Type
  8453 ;;                  1    wreg      void 
  8454 ;; Registers used:
  8455 ;;		wreg, status,2, status,0, cstack
  8456 ;; Tracked objects:
  8457 ;;		On entry : 0/0
  8458 ;;		On exit  : 0/0
  8459 ;;		Unchanged: 0/0
  8460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8461 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8462 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8464 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8465 ;;Total ram usage:        2 bytes
  8466 ;; Hardware stack levels used:    1
  8467 ;; Hardware stack levels required when called:    7
  8468 ;; This function calls:
  8469 ;;		_SendByteBBSPI
  8470 ;; This function is called by:
  8471 ;;		_LCDInit
  8472 ;;		_LCDPutChar
  8473 ;;		_LCDPutInst
  8474 ;; This function uses a non-reentrant model
  8475 ;;
  8476                           
  8477                           	psect	text54
  8478  003C46                     __ptext54:
  8479                           	opt callstack 0
  8480  003C46                     _WritePort_BBSPI:
  8481                           	opt callstack 21
  8482                           
  8483                           ;incstack = 0
  8484                           ;WritePort_BBSPI@port_add stored from wreg
  8485  003C46  0100               	movlb	0	; () banked
  8486  003C48  6F64               	movwf	WritePort_BBSPI@port_add& (0+255),b
  8487  003C4A                     
  8488                           ;lcd.c: 144: void WritePort_BBSPI (unsigned char port_add, unsigned char a);lcd.c: 145: 
      +                          {;lcd.c: 146:     LATAbits.LATA2 = 0;
  8489  003C4A  9489               	bcf	137,2,c	;volatile
  8490  003C4C                     
  8491                           ;lcd.c: 147:     SendByteBBSPI(0x40);
  8492  003C4C  0E40               	movlw	64
  8493  003C4E  EC1E  F01B         	call	_SendByteBBSPI
  8494                           
  8495                           ;lcd.c: 148:     SendByteBBSPI(port_add);
  8496  003C52  0100               	movlb	0	; () banked
  8497  003C54  5164               	movf	WritePort_BBSPI@port_add& (0+255),w,b
  8498  003C56  EC1E  F01B         	call	_SendByteBBSPI
  8499                           
  8500                           ;lcd.c: 149:     SendByteBBSPI(a);
  8501  003C5A  0100               	movlb	0	; () banked
  8502  003C5C  5163               	movf	WritePort_BBSPI@a& (0+255),w,b
  8503  003C5E  EC1E  F01B         	call	_SendByteBBSPI
  8504  003C62                     
  8505                           ;lcd.c: 150:     LATAbits.LATA2 = 1;
  8506  003C62  8489               	bsf	137,2,c	;volatile
  8507  003C64  0012               	return		;funcret
  8508  003C66                     __end_of_WritePort_BBSPI:
  8509                           	opt callstack 0
  8510                           
  8511 ;; *************** function _SendByteBBSPI *****************
  8512 ;; Defined at:
  8513 ;;		line 91 in file "lcd.c"
  8514 ;; Parameters:    Size  Location     Type
  8515 ;;  output          1    wreg     unsigned char 
  8516 ;; Auto vars:     Size  Location     Type
  8517 ;;  output          1    0[BANK0 ] unsigned char 
  8518 ;;  input           1    2[BANK0 ] unsigned char 
  8519 ;;  bitcount        1    1[BANK0 ] unsigned char 
  8520 ;; Return value:  Size  Location     Type
  8521 ;;                  1    wreg      void 
  8522 ;; Registers used:
  8523 ;;		wreg, status,2, status,0
  8524 ;; Tracked objects:
  8525 ;;		On entry : 0/0
  8526 ;;		On exit  : 0/0
  8527 ;;		Unchanged: 0/0
  8528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8530 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8532 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8533 ;;Total ram usage:        3 bytes
  8534 ;; Hardware stack levels used:    1
  8535 ;; Hardware stack levels required when called:    6
  8536 ;; This function calls:
  8537 ;;		Nothing
  8538 ;; This function is called by:
  8539 ;;		_Port_BBSPIInit
  8540 ;;		_WritePort_BBSPI
  8541 ;; This function uses a non-reentrant model
  8542 ;;
  8543                           
  8544                           	psect	text55
  8545  00363C                     __ptext55:
  8546                           	opt callstack 0
  8547  00363C                     _SendByteBBSPI:
  8548                           	opt callstack 21
  8549                           
  8550                           ;incstack = 0
  8551                           ;SendByteBBSPI@output stored from wreg
  8552  00363C  0100               	movlb	0	; () banked
  8553  00363E  6F60               	movwf	SendByteBBSPI@output& (0+255),b
  8554  003640                     
  8555                           ;lcd.c: 91: void SendByteBBSPI (unsigned char output);lcd.c: 92: {;lcd.c: 93:     unsign
      +                          ed char bitcount;;lcd.c: 94:     unsigned char input = output;
  8556  003640  C060  F062         	movff	SendByteBBSPI@output,SendByteBBSPI@input
  8557  003644                     
  8558                           ;lcd.c: 96:     for(bitcount=0;bitcount<8;bitcount++)
  8559  003644  0E00               	movlw	0
  8560  003646  0100               	movlb	0	; () banked
  8561  003648  6F61               	movwf	SendByteBBSPI@bitcount& (0+255),b
  8562  00364A                     l234:
  8563                           
  8564                           ; BSR set to: 0
  8565                           ;lcd.c: 97:     {;lcd.c: 99:         if(output & 0x80)
  8566  00364A  AF60               	btfss	SendByteBBSPI@output& (0+255),7,b
  8567  00364C  EF2A  F01B         	goto	u1901
  8568  003650  EF2C  F01B         	goto	u1900
  8569  003654                     u1901:
  8570  003654  EF2F  F01B         	goto	l236
  8571  003658                     u1900:
  8572  003658                     
  8573                           ; BSR set to: 0
  8574                           ;lcd.c: 100:             LATCbits.LATC5 = 1;
  8575  003658  8A8B               	bsf	139,5,c	;volatile
  8576  00365A  EF30  F01B         	goto	l237
  8577  00365E                     l236:
  8578                           
  8579                           ; BSR set to: 0
  8580                           ;lcd.c: 102:             LATCbits.LATC5 = 0;
  8581  00365E  9A8B               	bcf	139,5,c	;volatile
  8582  003660                     l237:
  8583                           
  8584                           ; BSR set to: 0
  8585                           ;lcd.c: 104:         if (LATCbits.LATC4)
  8586  003660  A88B               	btfss	139,4,c	;volatile
  8587  003662  EF35  F01B         	goto	u1911
  8588  003666  EF37  F01B         	goto	u1910
  8589  00366A                     u1911:
  8590  00366A  EF3B  F01B         	goto	l2965
  8591  00366E                     u1910:
  8592  00366E                     
  8593                           ; BSR set to: 0
  8594                           ;lcd.c: 105:             input = (input << 1) | 0x1;
  8595  00366E  80D8               	bsf	status,0,c
  8596  003670  3762               	rlcf	SendByteBBSPI@input& (0+255),f,b
  8597  003672  EF3E  F01B         	goto	l2967
  8598  003676                     l2965:
  8599                           
  8600                           ; BSR set to: 0
  8601                           ;lcd.c: 107:             input = input << 1;
  8602  003676  5162               	movf	SendByteBBSPI@input& (0+255),w,b
  8603  003678  2562               	addwf	SendByteBBSPI@input& (0+255),w,b
  8604  00367A  6F62               	movwf	SendByteBBSPI@input& (0+255),b
  8605  00367C                     l2967:
  8606                           
  8607                           ; BSR set to: 0
  8608                           ;lcd.c: 108:         LATCbits.LATC3 = 1;
  8609  00367C  868B               	bsf	139,3,c	;volatile
  8610  00367E                     
  8611                           ; BSR set to: 0
  8612                           ;lcd.c: 109:         __nop();__nop();__nop();__nop();__nop();__nop();
  8613  00367E  F000               	nop	
  8614  003680  F000               	nop	
  8615  003682  F000               	nop	
  8616  003684  F000               	nop	
  8617  003686  F000               	nop	
  8618  003688  F000               	nop	
  8619  00368A                     
  8620                           ;lcd.c: 111:         LATCbits.LATC3 = 0;
  8621  00368A  968B               	bcf	139,3,c	;volatile
  8622                           
  8623                           ;lcd.c: 112:         output <<= 1;
  8624  00368C  0100               	movlb	0	; () banked
  8625  00368E  90D8               	bcf	status,0,c
  8626  003690  3760               	rlcf	SendByteBBSPI@output& (0+255),f,b
  8627  003692                     
  8628                           ; BSR set to: 0
  8629                           ;lcd.c: 113:     }
  8630  003692  2B61               	incf	SendByteBBSPI@bitcount& (0+255),f,b
  8631  003694                     
  8632                           ; BSR set to: 0
  8633  003694  0E07               	movlw	7
  8634  003696  6561               	cpfsgt	SendByteBBSPI@bitcount& (0+255),b
  8635  003698  EF50  F01B         	goto	u1921
  8636  00369C  EF52  F01B         	goto	u1920
  8637  0036A0                     u1921:
  8638  0036A0  EF25  F01B         	goto	l234
  8639  0036A4                     u1920:
  8640  0036A4                     
  8641                           ; BSR set to: 0
  8642  0036A4  0012               	return		;funcret
  8643  0036A6                     __end_of_SendByteBBSPI:
  8644                           	opt callstack 0
  8645                           
  8646 ;; *************** function _timer_interrupt *****************
  8647 ;; Defined at:
  8648 ;;		line 55 in file "clock.c"
  8649 ;; Parameters:    Size  Location     Type
  8650 ;;		None
  8651 ;; Auto vars:     Size  Location     Type
  8652 ;;		None
  8653 ;; Return value:  Size  Location     Type
  8654 ;;                  1    wreg      void 
  8655 ;; Registers used:
  8656 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8657 ;; Tracked objects:
  8658 ;;		On entry : 0/0
  8659 ;;		On exit  : 0/0
  8660 ;;		Unchanged: 0/0
  8661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8664 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8665 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8666 ;;Total ram usage:        6 bytes
  8667 ;; Hardware stack levels used:    1
  8668 ;; Hardware stack levels required when called:    5
  8669 ;; This function calls:
  8670 ;;		_handleListHead
  8671 ;; This function is called by:
  8672 ;;		Interrupt level 2
  8673 ;; This function uses a non-reentrant model
  8674 ;;
  8675                           
  8676                           	psect	intcode
  8677  000008                     __pintcode:
  8678                           	opt callstack 0
  8679  000008                     _timer_interrupt:
  8680                           	opt callstack 17
  8681                           
  8682                           ; BSR set to: 0
  8683                           ;incstack = 0
  8684  000008  824C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8685  00000A  ED94  F01A         	call	int_func,f	;refresh shadow registers
  8686                           
  8687                           	psect	intcode_body
  8688  003528                     __pintcode_body:
  8689                           	opt callstack 17
  8690  003528                     int_func:
  8691                           	opt callstack 17
  8692  003528  0006               	pop		; remove dummy address from shadow register refresh
  8693  00352A  CFE1 F02E          	movff	fsr1l,??_timer_interrupt
  8694  00352E  CFE2 F02F          	movff	fsr1h,??_timer_interrupt+1
  8695  003532  CFD9 F030          	movff	fsr2l,??_timer_interrupt+2
  8696  003536  CFDA F031          	movff	fsr2h,??_timer_interrupt+3
  8697  00353A  CFF3 F032          	movff	prodl,??_timer_interrupt+4
  8698  00353E  CFF4 F033          	movff	prodh,??_timer_interrupt+5
  8699  003542                     
  8700                           ;clock.c: 56:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF) {
  8701  003542  AAF2               	btfss	242,5,c	;volatile
  8702  003544  EFA6  F01A         	goto	i2u370_41
  8703  003548  EFA8  F01A         	goto	i2u370_40
  8704  00354C                     i2u370_41:
  8705  00354C  EFB9  F01A         	goto	i2l4305
  8706  003550                     i2u370_40:
  8707  003550  A4F2               	btfss	242,2,c	;volatile
  8708  003552  EFAD  F01A         	goto	i2u371_41
  8709  003556  EFAF  F01A         	goto	i2u371_40
  8710  00355A                     i2u371_41:
  8711  00355A  EFB9  F01A         	goto	i2l4305
  8712  00355E                     i2u371_40:
  8713  00355E                     
  8714                           ;clock.c: 57:         INTCONbits.TMR0IF = 0;
  8715  00355E  94F2               	bcf	242,2,c	;volatile
  8716  003560                     
  8717                           ;clock.c: 58:         TMR0L = 131;
  8718  003560  0E83               	movlw	131
  8719  003562  6ED6               	movwf	214,c	;volatile
  8720  003564                     
  8721                           ;clock.c: 59:         time_ms++;
  8722  003564  0E01               	movlw	1
  8723  003566  0100               	movlb	0	; () banked
  8724  003568  27BD               	addwf	_time_ms& (0+255),f,b
  8725  00356A  0E00               	movlw	0
  8726  00356C  23BE               	addwfc	(_time_ms+1)& (0+255),f,b
  8727  00356E  23BF               	addwfc	(_time_ms+2)& (0+255),f,b
  8728  003570  23C0               	addwfc	(_time_ms+3)& (0+255),f,b
  8729  003572                     i2l4305:
  8730                           
  8731                           ;clock.c: 61:     if(PIE1bits.TMR1IE && PIR1bits.TMR1IF) {
  8732  003572  A09D               	btfss	157,0,c	;volatile
  8733  003574  EFBE  F01A         	goto	i2u372_41
  8734  003578  EFC0  F01A         	goto	i2u372_40
  8735  00357C                     i2u372_41:
  8736  00357C  EFCE  F01A         	goto	i2l430
  8737  003580                     i2u372_40:
  8738  003580  A09E               	btfss	158,0,c	;volatile
  8739  003582  EFC5  F01A         	goto	i2u373_41
  8740  003586  EFC7  F01A         	goto	i2u373_40
  8741  00358A                     i2u373_41:
  8742  00358A  EFCE  F01A         	goto	i2l430
  8743  00358E                     i2u373_40:
  8744  00358E                     
  8745                           ;clock.c: 62:         PIR1bits.TMR1IF = 0;
  8746  00358E  909E               	bcf	158,0,c	;volatile
  8747  003590                     
  8748                           ;clock.c: 63:         TMR1H = 0xB1;
  8749  003590  0EB1               	movlw	177
  8750  003592  6ECF               	movwf	207,c	;volatile
  8751                           
  8752                           ;clock.c: 64:         TMR1L = 0xE0;
  8753  003594  0EE0               	movlw	224
  8754  003596  6ECE               	movwf	206,c	;volatile
  8755  003598                     
  8756                           ;clock.c: 65:         handleListHead();
  8757  003598  EC88  F00A         	call	_handleListHead	;wreg free
  8758  00359C                     i2l430:
  8759  00359C  C033  FFF4         	movff	??_timer_interrupt+5,prodh
  8760  0035A0  C032  FFF3         	movff	??_timer_interrupt+4,prodl
  8761  0035A4  C031  FFDA         	movff	??_timer_interrupt+3,fsr2h
  8762  0035A8  C030  FFD9         	movff	??_timer_interrupt+2,fsr2l
  8763  0035AC  C02F  FFE2         	movff	??_timer_interrupt+1,fsr1h
  8764  0035B0  C02E  FFE1         	movff	??_timer_interrupt,fsr1l
  8765  0035B4  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8766  0035B6  0011               	retfie		f
  8767  0035B8                     __end_of_timer_interrupt:
  8768                           	opt callstack 0
  8769                           
  8770 ;; *************** function _handleListHead *****************
  8771 ;; Defined at:
  8772 ;;		line 86 in file "task.c"
  8773 ;; Parameters:    Size  Location     Type
  8774 ;;		None
  8775 ;; Auto vars:     Size  Location     Type
  8776 ;;  cur             2   41[COMRAM] int 
  8777 ;;  prev            2   37[COMRAM] int 
  8778 ;;  sum             2   39[COMRAM] int 
  8779 ;;  pos             2   43[COMRAM] int 
  8780 ;; Return value:  Size  Location     Type
  8781 ;;                  1    wreg      void 
  8782 ;; Registers used:
  8783 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8784 ;; Tracked objects:
  8785 ;;		On entry : 0/0
  8786 ;;		On exit  : 0/0
  8787 ;;		Unchanged: 0/0
  8788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8790 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8791 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8792 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8793 ;;Total ram usage:       31 bytes
  8794 ;; Hardware stack levels used:    1
  8795 ;; Hardware stack levels required when called:    4
  8796 ;; This function calls:
  8797 ;;		_enqueue
  8798 ;;		_removeTask
  8799 ;;		i2___wmul
  8800 ;; This function is called by:
  8801 ;;		_timer_interrupt
  8802 ;; This function uses a non-reentrant model
  8803 ;;
  8804                           
  8805                           	psect	text57
  8806  001510                     __ptext57:
  8807                           	opt callstack 0
  8808  001510                     _handleListHead:
  8809                           	opt callstack 17
  8810  001510                     
  8811                           ;task.c: 87:     if(head == 105)
  8812  001510  0E69               	movlw	105
  8813  001512  0100               	movlb	0	; () banked
  8814  001514  19C8               	xorwf	_head& (0+255),w,b
  8815  001516  A4D8               	btfss	status,2,c
  8816  001518  EF90  F00A         	goto	i2u361_41
  8817  00151C  EF92  F00A         	goto	i2u361_40
  8818  001520                     i2u361_41:
  8819  001520  EFBE  F00C         	goto	i2l4263
  8820  001524                     i2u361_40:
  8821  001524  EFE0  F00C         	goto	i2l517
  8822  001528                     i2l519:
  8823                           
  8824                           ; BSR set to: 0
  8825                           ;task.c: 90:         int pos = head;
  8826  001528  C0C8  F02C         	movff	_head,handleListHead@pos
  8827  00152C  6A2D               	clrf	(handleListHead@pos+1)^0,c
  8828  00152E                     
  8829                           ; BSR set to: 0
  8830                           ;task.c: 91:         enqueue(task_list[pos].func_ptr, task_list[pos].data_p);
  8831  00152E  C02C  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  8832  001532  C02D  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  8833  001536  0E00               	movlw	0
  8834  001538  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8835  00153A  0E0F               	movlw	15
  8836  00153C  6E03               	movwf	i2___wmul@multiplicand^0,c
  8837  00153E  ECED  F01D         	call	i2___wmul	;wreg free
  8838  001542  0E6C               	movlw	low (_task_list+8)
  8839  001544  2401               	addwf	?i2___wmul^0,w,c
  8840  001546  6ED9               	movwf	fsr2l,c
  8841  001548  0E01               	movlw	high (_task_list+8)
  8842  00154A  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8843  00154C  6EDA               	movwf	fsr2h,c
  8844  00154E  CFDE F01F          	movff	postinc2,_handleListHead$2325
  8845  001552  CFDE F020          	movff	postinc2,_handleListHead$2325+1
  8846  001556  CFDD F021          	movff	postdec2,_handleListHead$2325+2
  8847                           
  8848                           ;task.c: 91:         enqueue(task_list[pos].func_ptr, task_list[pos].data_p);
  8849  00155A  C02C  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  8850  00155E  C02D  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  8851  001562  0E00               	movlw	0
  8852  001564  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8853  001566  0E0F               	movlw	15
  8854  001568  6E03               	movwf	i2___wmul@multiplicand^0,c
  8855  00156A  ECED  F01D         	call	i2___wmul	;wreg free
  8856  00156E  0E71               	movlw	low (_task_list+13)
  8857  001570  2401               	addwf	?i2___wmul^0,w,c
  8858  001572  6ED9               	movwf	fsr2l,c
  8859  001574  0E01               	movlw	high (_task_list+13)
  8860  001576  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8861  001578  6EDA               	movwf	fsr2h,c
  8862  00157A  CFDE F022          	movff	postinc2,_handleListHead$2330
  8863  00157E  CFDD F023          	movff	postdec2,_handleListHead$2330+1
  8864                           
  8865                           ;task.c: 91:         enqueue(task_list[pos].func_ptr, task_list[pos].data_p);
  8866  001582  C01F  F00A         	movff	_handleListHead$2325,enqueue@ptr
  8867  001586  C020  F00B         	movff	_handleListHead$2325+1,enqueue@ptr+1
  8868  00158A  C021  F00C         	movff	_handleListHead$2325+2,enqueue@ptr+2
  8869  00158E  C022  F00D         	movff	_handleListHead$2330,enqueue@data_ptr
  8870  001592  C023  F00E         	movff	_handleListHead$2330+1,enqueue@data_ptr+1
  8871  001596  EC4D  F019         	call	_enqueue	;wreg free
  8872                           
  8873                           ;task.c: 92:         head = task_list[pos].next;
  8874  00159A  C02C  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  8875  00159E  C02D  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  8876  0015A2  0E00               	movlw	0
  8877  0015A4  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8878  0015A6  0E0F               	movlw	15
  8879  0015A8  6E03               	movwf	i2___wmul@multiplicand^0,c
  8880  0015AA  ECED  F01D         	call	i2___wmul	;wreg free
  8881  0015AE  0E6F               	movlw	low (_task_list+11)
  8882  0015B0  2401               	addwf	?i2___wmul^0,w,c
  8883  0015B2  6ED9               	movwf	fsr2l,c
  8884  0015B4  0E01               	movlw	high (_task_list+11)
  8885  0015B6  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8886  0015B8  6EDA               	movwf	fsr2h,c
  8887  0015BA  50DF               	movf	indf2,w,c
  8888  0015BC  0100               	movlb	0	; () banked
  8889  0015BE  6FC8               	movwf	_head& (0+255),b
  8890                           
  8891                           ;task.c: 93:         if(task_list[pos].period_t == 0) {
  8892  0015C0  C02C  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  8893  0015C4  C02D  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  8894  0015C8  0E00               	movlw	0
  8895  0015CA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8896  0015CC  0E0F               	movlw	15
  8897  0015CE  6E03               	movwf	i2___wmul@multiplicand^0,c
  8898  0015D0  ECED  F01D         	call	i2___wmul	;wreg free
  8899  0015D4  0E68               	movlw	low (_task_list+4)
  8900  0015D6  2401               	addwf	?i2___wmul^0,w,c
  8901  0015D8  6ED9               	movwf	fsr2l,c
  8902  0015DA  0E01               	movlw	high (_task_list+4)
  8903  0015DC  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8904  0015DE  6EDA               	movwf	fsr2h,c
  8905  0015E0  50DE               	movf	postinc2,w,c
  8906  0015E2  10DE               	iorwf	postinc2,w,c
  8907  0015E4  10DE               	iorwf	postinc2,w,c
  8908  0015E6  10DE               	iorwf	postinc2,w,c
  8909  0015E8  A4D8               	btfss	status,2,c
  8910  0015EA  EFF9  F00A         	goto	i2u362_41
  8911  0015EE  EFFB  F00A         	goto	i2u362_40
  8912  0015F2                     i2u362_41:
  8913  0015F2  EF00  F00B         	goto	i2l4233
  8914  0015F6                     i2u362_40:
  8915  0015F6                     
  8916                           ;task.c: 94:             removeTask(pos);
  8917  0015F6  502C               	movf	handleListHead@pos^0,w,c
  8918  0015F8  ECF8  F012         	call	_removeTask
  8919                           
  8920                           ;task.c: 95:         }
  8921  0015FC  EFBE  F00C         	goto	i2l4263
  8922  001600                     i2l4233:
  8923                           
  8924                           ;task.c: 97:             task_list[pos].delay_t = task_list[pos].period_t;
  8925  001600  C02C  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  8926  001604  C02D  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  8927  001608  0E00               	movlw	0
  8928  00160A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8929  00160C  0E0F               	movlw	15
  8930  00160E  6E03               	movwf	i2___wmul@multiplicand^0,c
  8931  001610  ECED  F01D         	call	i2___wmul	;wreg free
  8932  001614  0E68               	movlw	low (_task_list+4)
  8933  001616  2401               	addwf	?i2___wmul^0,w,c
  8934  001618  6ED9               	movwf	fsr2l,c
  8935  00161A  0E01               	movlw	high (_task_list+4)
  8936  00161C  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8937  00161E  6EDA               	movwf	fsr2h,c
  8938  001620  C02C  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  8939  001624  C02D  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  8940  001628  0E00               	movlw	0
  8941  00162A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8942  00162C  0E0F               	movlw	15
  8943  00162E  6E03               	movwf	i2___wmul@multiplicand^0,c
  8944  001630  ECED  F01D         	call	i2___wmul	;wreg free
  8945  001634  0E64               	movlw	low _task_list
  8946  001636  2401               	addwf	?i2___wmul^0,w,c
  8947  001638  6EE1               	movwf	fsr1l,c
  8948  00163A  0E01               	movlw	high _task_list
  8949  00163C  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8950  00163E  6EE2               	movwf	fsr1h,c
  8951  001640  CFDE FFE6          	movff	postinc2,postinc1
  8952  001644  CFDE FFE6          	movff	postinc2,postinc1
  8953  001648  CFDE FFE6          	movff	postinc2,postinc1
  8954  00164C  CFDE FFE6          	movff	postinc2,postinc1
  8955  001650                     
  8956                           ;task.c: 98:             int sum = task_list[head].delay_t;
  8957  001650  0100               	movlb	0	; () banked
  8958  001652  51C8               	movf	_head& (0+255),w,b
  8959  001654  0D0F               	mullw	15
  8960  001656  0E64               	movlw	low _task_list
  8961  001658  24F3               	addwf	243,w,c
  8962  00165A  6ED9               	movwf	fsr2l,c
  8963  00165C  0E01               	movlw	high _task_list
  8964  00165E  20F4               	addwfc	prodh,w,c
  8965  001660  6EDA               	movwf	fsr2h,c
  8966  001662  CFDE F028          	movff	postinc2,handleListHead@sum
  8967  001666  CFDD F029          	movff	postdec2,handleListHead@sum+1
  8968  00166A                     
  8969                           ; BSR set to: 0
  8970                           ;task.c: 99:             if(head == 105 || (head != 105 && sum > task_list[pos].delay_t)
      +                          ) {
  8971  00166A  0E69               	movlw	105
  8972  00166C  19C8               	xorwf	_head& (0+255),w,b
  8973  00166E  B4D8               	btfsc	status,2,c
  8974  001670  EF3C  F00B         	goto	i2u363_41
  8975  001674  EF3E  F00B         	goto	i2u363_40
  8976  001678                     i2u363_41:
  8977  001678  EF6F  F00B         	goto	i2l4243
  8978  00167C                     i2u363_40:
  8979  00167C                     
  8980                           ; BSR set to: 0
  8981  00167C  0E69               	movlw	105
  8982  00167E  19C8               	xorwf	_head& (0+255),w,b
  8983  001680  B4D8               	btfsc	status,2,c
  8984  001682  EF45  F00B         	goto	i2u364_41
  8985  001686  EF47  F00B         	goto	i2u364_40
  8986  00168A                     i2u364_41:
  8987  00168A  EF8B  F00B         	goto	i2l4247
  8988  00168E                     i2u364_40:
  8989  00168E                     
  8990                           ; BSR set to: 0
  8991  00168E  C028  F00F         	movff	handleListHead@sum,??_handleListHead
  8992  001692  C029  F010         	movff	handleListHead@sum+1,??_handleListHead+1
  8993  001696  0E00               	movlw	0
  8994  001698  BE10               	btfsc	(??_handleListHead+1)^0,7,c
  8995  00169A  0EFF               	movlw	255
  8996  00169C  6E11               	movwf	(??_handleListHead+2)^0,c
  8997  00169E  6E12               	movwf	(??_handleListHead+3)^0,c
  8998  0016A0  C02C  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  8999  0016A4  C02D  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  9000  0016A8  0E00               	movlw	0
  9001  0016AA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9002  0016AC  0E0F               	movlw	15
  9003  0016AE  6E03               	movwf	i2___wmul@multiplicand^0,c
  9004  0016B0  ECED  F01D         	call	i2___wmul	;wreg free
  9005  0016B4  0E64               	movlw	low _task_list
  9006  0016B6  2401               	addwf	?i2___wmul^0,w,c
  9007  0016B8  6ED9               	movwf	fsr2l,c
  9008  0016BA  0E01               	movlw	high _task_list
  9009  0016BC  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9010  0016BE  6EDA               	movwf	fsr2h,c
  9011  0016C0  500F               	movf	??_handleListHead^0,w,c
  9012  0016C2  5CDE               	subwf	postinc2,w,c
  9013  0016C4  5010               	movf	(??_handleListHead+1)^0,w,c
  9014  0016C6  58DE               	subwfb	postinc2,w,c
  9015  0016C8  5011               	movf	(??_handleListHead+2)^0,w,c
  9016  0016CA  58DE               	subwfb	postinc2,w,c
  9017  0016CC  5012               	movf	(??_handleListHead+3)^0,w,c
  9018  0016CE  58DE               	subwfb	postinc2,w,c
  9019  0016D0  B0D8               	btfsc	status,0,c
  9020  0016D2  EF6D  F00B         	goto	i2u365_41
  9021  0016D6  EF6F  F00B         	goto	i2u365_40
  9022  0016DA                     i2u365_41:
  9023  0016DA  EF8B  F00B         	goto	i2l4247
  9024  0016DE                     i2u365_40:
  9025  0016DE                     i2l4243:
  9026                           
  9027                           ;task.c: 100:                 task_list[pos].next = head;
  9028  0016DE  0100               	movlb	0	; () banked
  9029  0016E0  51C8               	movf	_head& (0+255),w,b
  9030  0016E2  6E0F               	movwf	??_handleListHead^0,c
  9031  0016E4  6A10               	clrf	(??_handleListHead+1)^0,c
  9032  0016E6  C02C  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  9033  0016EA  C02D  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  9034  0016EE  0E00               	movlw	0
  9035  0016F0  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9036  0016F2  0E0F               	movlw	15
  9037  0016F4  6E03               	movwf	i2___wmul@multiplicand^0,c
  9038  0016F6  ECED  F01D         	call	i2___wmul	;wreg free
  9039  0016FA  0E6F               	movlw	low (_task_list+11)
  9040  0016FC  2401               	addwf	?i2___wmul^0,w,c
  9041  0016FE  6ED9               	movwf	fsr2l,c
  9042  001700  0E01               	movlw	high (_task_list+11)
  9043  001702  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9044  001704  6EDA               	movwf	fsr2h,c
  9045  001706  C00F  FFDE         	movff	??_handleListHead,postinc2
  9046  00170A  C010  FFDD         	movff	??_handleListHead+1,postdec2
  9047  00170E                     
  9048                           ;task.c: 101:                 head = pos;
  9049  00170E  C02C  F0C8         	movff	handleListHead@pos,_head
  9050                           
  9051                           ;task.c: 102:             } else {
  9052  001712  EF60  F00C         	goto	i2l525
  9053  001716                     i2l4247:
  9054                           
  9055                           ;task.c: 104:                 int cur = task_list[head].next;
  9056  001716  0100               	movlb	0	; () banked
  9057  001718  51C8               	movf	_head& (0+255),w,b
  9058  00171A  0D0F               	mullw	15
  9059  00171C  0E6F               	movlw	low (_task_list+11)
  9060  00171E  24F3               	addwf	243,w,c
  9061  001720  6ED9               	movwf	fsr2l,c
  9062  001722  0E01               	movlw	high (_task_list+11)
  9063  001724  20F4               	addwfc	prodh,w,c
  9064  001726  6EDA               	movwf	fsr2h,c
  9065  001728  CFDE F02A          	movff	postinc2,handleListHead@cur
  9066  00172C  CFDD F02B          	movff	postdec2,handleListHead@cur+1
  9067  001730                     
  9068                           ; BSR set to: 0
  9069                           ;task.c: 105:                 int prev = head;
  9070  001730  C0C8  F026         	movff	_head,handleListHead@prev
  9071  001734  6A27               	clrf	(handleListHead@prev+1)^0,c
  9072                           
  9073                           ;task.c: 106:                 while(cur != 105 && sum + task_list[cur].delay_t <= task_l
      +                          ist[pos].delay_t) {
  9074  001736  EFC9  F00B         	goto	i2l4255
  9075  00173A                     i2l4251:
  9076                           
  9077                           ;task.c: 108:                     sum+= task_list[cur].delay_t;
  9078  00173A  C02A  F001         	movff	handleListHead@cur,i2___wmul@multiplier
  9079  00173E  C02B  F002         	movff	handleListHead@cur+1,i2___wmul@multiplier+1
  9080  001742  0E00               	movlw	0
  9081  001744  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9082  001746  0E0F               	movlw	15
  9083  001748  6E03               	movwf	i2___wmul@multiplicand^0,c
  9084  00174A  ECED  F01D         	call	i2___wmul	;wreg free
  9085  00174E  0E64               	movlw	low _task_list
  9086  001750  2401               	addwf	?i2___wmul^0,w,c
  9087  001752  6ED9               	movwf	fsr2l,c
  9088  001754  0E01               	movlw	high _task_list
  9089  001756  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9090  001758  6EDA               	movwf	fsr2h,c
  9091  00175A  50DE               	movf	postinc2,w,c
  9092  00175C  2628               	addwf	handleListHead@sum^0,f,c
  9093  00175E  50DD               	movf	postdec2,w,c
  9094  001760  2229               	addwfc	(handleListHead@sum+1)^0,f,c
  9095  001762                     
  9096                           ;task.c: 109:                     prev = cur;
  9097  001762  C02A  F026         	movff	handleListHead@cur,handleListHead@prev
  9098  001766  C02B  F027         	movff	handleListHead@cur+1,handleListHead@prev+1
  9099                           
  9100                           ;task.c: 110:                     cur = task_list[cur].next;
  9101  00176A  C02A  F001         	movff	handleListHead@cur,i2___wmul@multiplier
  9102  00176E  C02B  F002         	movff	handleListHead@cur+1,i2___wmul@multiplier+1
  9103  001772  0E00               	movlw	0
  9104  001774  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9105  001776  0E0F               	movlw	15
  9106  001778  6E03               	movwf	i2___wmul@multiplicand^0,c
  9107  00177A  ECED  F01D         	call	i2___wmul	;wreg free
  9108  00177E  0E6F               	movlw	low (_task_list+11)
  9109  001780  2401               	addwf	?i2___wmul^0,w,c
  9110  001782  6ED9               	movwf	fsr2l,c
  9111  001784  0E01               	movlw	high (_task_list+11)
  9112  001786  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9113  001788  6EDA               	movwf	fsr2h,c
  9114  00178A  CFDE F02A          	movff	postinc2,handleListHead@cur
  9115  00178E  CFDD F02B          	movff	postdec2,handleListHead@cur+1
  9116  001792                     i2l4255:
  9117                           
  9118                           ;task.c: 106:                 while(cur != 105 && sum + task_list[cur].delay_t <= task_l
      +                          ist[pos].delay_t) {
  9119  001792  0E69               	movlw	105
  9120  001794  182A               	xorwf	handleListHead@cur^0,w,c
  9121  001796  102B               	iorwf	(handleListHead@cur+1)^0,w,c
  9122  001798  B4D8               	btfsc	status,2,c
  9123  00179A  EFD1  F00B         	goto	i2u366_41
  9124  00179E  EFD3  F00B         	goto	i2u366_40
  9125  0017A2                     i2u366_41:
  9126  0017A2  EF1F  F00C         	goto	i2l4259
  9127  0017A6                     i2u366_40:
  9128  0017A6  C02A  F001         	movff	handleListHead@cur,i2___wmul@multiplier
  9129  0017AA  C02B  F002         	movff	handleListHead@cur+1,i2___wmul@multiplier+1
  9130  0017AE  0E00               	movlw	0
  9131  0017B0  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9132  0017B2  0E0F               	movlw	15
  9133  0017B4  6E03               	movwf	i2___wmul@multiplicand^0,c
  9134  0017B6  ECED  F01D         	call	i2___wmul	;wreg free
  9135  0017BA  0E64               	movlw	low _task_list
  9136  0017BC  2401               	addwf	?i2___wmul^0,w,c
  9137  0017BE  6ED9               	movwf	fsr2l,c
  9138  0017C0  0E01               	movlw	high _task_list
  9139  0017C2  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9140  0017C4  6EDA               	movwf	fsr2h,c
  9141  0017C6  CFDE F00F          	movff	postinc2,??_handleListHead
  9142  0017CA  CFDE F010          	movff	postinc2,??_handleListHead+1
  9143  0017CE  CFDE F011          	movff	postinc2,??_handleListHead+2
  9144  0017D2  CFDE F012          	movff	postinc2,??_handleListHead+3
  9145  0017D6  C028  F013         	movff	handleListHead@sum,??_handleListHead+4
  9146  0017DA  C029  F014         	movff	handleListHead@sum+1,??_handleListHead+5
  9147  0017DE  0E00               	movlw	0
  9148  0017E0  BE14               	btfsc	(??_handleListHead+5)^0,7,c
  9149  0017E2  0EFF               	movlw	255
  9150  0017E4  6E15               	movwf	(??_handleListHead+6)^0,c
  9151  0017E6  6E16               	movwf	(??_handleListHead+7)^0,c
  9152  0017E8  500F               	movf	??_handleListHead^0,w,c
  9153  0017EA  2413               	addwf	(??_handleListHead+4)^0,w,c
  9154  0017EC  6E17               	movwf	(??_handleListHead+8)^0,c
  9155  0017EE  5010               	movf	(??_handleListHead+1)^0,w,c
  9156  0017F0  2014               	addwfc	(??_handleListHead+5)^0,w,c
  9157  0017F2  6E18               	movwf	(??_handleListHead+9)^0,c
  9158  0017F4  5011               	movf	(??_handleListHead+2)^0,w,c
  9159  0017F6  2015               	addwfc	(??_handleListHead+6)^0,w,c
  9160  0017F8  6E19               	movwf	(??_handleListHead+10)^0,c
  9161  0017FA  5012               	movf	(??_handleListHead+3)^0,w,c
  9162  0017FC  2016               	addwfc	(??_handleListHead+7)^0,w,c
  9163  0017FE  6E1A               	movwf	(??_handleListHead+11)^0,c
  9164  001800  C02C  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  9165  001804  C02D  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  9166  001808  0E00               	movlw	0
  9167  00180A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9168  00180C  0E0F               	movlw	15
  9169  00180E  6E03               	movwf	i2___wmul@multiplicand^0,c
  9170  001810  ECED  F01D         	call	i2___wmul	;wreg free
  9171  001814  0E64               	movlw	low _task_list
  9172  001816  2401               	addwf	?i2___wmul^0,w,c
  9173  001818  6ED9               	movwf	fsr2l,c
  9174  00181A  0E01               	movlw	high _task_list
  9175  00181C  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9176  00181E  6EDA               	movwf	fsr2h,c
  9177  001820  5017               	movf	(??_handleListHead+8)^0,w,c
  9178  001822  5CDE               	subwf	postinc2,w,c
  9179  001824  5018               	movf	(??_handleListHead+9)^0,w,c
  9180  001826  58DE               	subwfb	postinc2,w,c
  9181  001828  5019               	movf	(??_handleListHead+10)^0,w,c
  9182  00182A  58DE               	subwfb	postinc2,w,c
  9183  00182C  501A               	movf	(??_handleListHead+11)^0,w,c
  9184  00182E  58DE               	subwfb	postinc2,w,c
  9185  001830  B0D8               	btfsc	status,0,c
  9186  001832  EF1D  F00C         	goto	i2u367_41
  9187  001836  EF1F  F00C         	goto	i2u367_40
  9188  00183A                     i2u367_41:
  9189  00183A  EF9D  F00B         	goto	i2l4251
  9190  00183E                     i2u367_40:
  9191  00183E                     i2l4259:
  9192                           
  9193                           ;task.c: 112:                 task_list[prev].next = pos;
  9194  00183E  C026  F001         	movff	handleListHead@prev,i2___wmul@multiplier
  9195  001842  C027  F002         	movff	handleListHead@prev+1,i2___wmul@multiplier+1
  9196  001846  0E00               	movlw	0
  9197  001848  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9198  00184A  0E0F               	movlw	15
  9199  00184C  6E03               	movwf	i2___wmul@multiplicand^0,c
  9200  00184E  ECED  F01D         	call	i2___wmul	;wreg free
  9201  001852  0E6F               	movlw	low (_task_list+11)
  9202  001854  2401               	addwf	?i2___wmul^0,w,c
  9203  001856  6ED9               	movwf	fsr2l,c
  9204  001858  0E01               	movlw	high (_task_list+11)
  9205  00185A  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9206  00185C  6EDA               	movwf	fsr2h,c
  9207  00185E  C02C  FFDE         	movff	handleListHead@pos,postinc2
  9208  001862  C02D  FFDD         	movff	handleListHead@pos+1,postdec2
  9209                           
  9210                           ;task.c: 113:                 task_list[pos].next = cur;
  9211  001866  C02C  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  9212  00186A  C02D  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  9213  00186E  0E00               	movlw	0
  9214  001870  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9215  001872  0E0F               	movlw	15
  9216  001874  6E03               	movwf	i2___wmul@multiplicand^0,c
  9217  001876  ECED  F01D         	call	i2___wmul	;wreg free
  9218  00187A  0E6F               	movlw	low (_task_list+11)
  9219  00187C  2401               	addwf	?i2___wmul^0,w,c
  9220  00187E  6ED9               	movwf	fsr2l,c
  9221  001880  0E01               	movlw	high (_task_list+11)
  9222  001882  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9223  001884  6EDA               	movwf	fsr2h,c
  9224  001886  C02A  FFDE         	movff	handleListHead@cur,postinc2
  9225  00188A  C02B  FFDD         	movff	handleListHead@cur+1,postdec2
  9226                           
  9227                           ;task.c: 114:                 task_list[pos].delay_t-= sum;
  9228  00188E  C02C  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  9229  001892  C02D  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  9230  001896  0E00               	movlw	0
  9231  001898  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9232  00189A  0E0F               	movlw	15
  9233  00189C  6E03               	movwf	i2___wmul@multiplicand^0,c
  9234  00189E  ECED  F01D         	call	i2___wmul	;wreg free
  9235  0018A2  0E64               	movlw	low _task_list
  9236  0018A4  2401               	addwf	?i2___wmul^0,w,c
  9237  0018A6  6ED9               	movwf	fsr2l,c
  9238  0018A8  0E01               	movlw	high _task_list
  9239  0018AA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9240  0018AC  6EDA               	movwf	fsr2h,c
  9241  0018AE  5028               	movf	handleListHead@sum^0,w,c
  9242  0018B0  5EDE               	subwf	postinc2,f,c
  9243  0018B2  5029               	movf	(handleListHead@sum+1)^0,w,c
  9244  0018B4  5ADE               	subwfb	postinc2,f,c
  9245  0018B6  0E00               	movlw	0
  9246  0018B8  BE29               	btfsc	(handleListHead@sum+1)^0,7,c
  9247  0018BA  0EFF               	movlw	255
  9248  0018BC  5ADE               	subwfb	postinc2,f,c
  9249  0018BE  5ADE               	subwfb	postinc2,f,c
  9250  0018C0                     i2l525:
  9251                           
  9252                           ;task.c: 116:             if(task_list[pos].next != 105)
  9253  0018C0  C02C  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  9254  0018C4  C02D  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  9255  0018C8  0E00               	movlw	0
  9256  0018CA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9257  0018CC  0E0F               	movlw	15
  9258  0018CE  6E03               	movwf	i2___wmul@multiplicand^0,c
  9259  0018D0  ECED  F01D         	call	i2___wmul	;wreg free
  9260  0018D4  0E6F               	movlw	low (_task_list+11)
  9261  0018D6  2401               	addwf	?i2___wmul^0,w,c
  9262  0018D8  6ED9               	movwf	fsr2l,c
  9263  0018DA  0E01               	movlw	high (_task_list+11)
  9264  0018DC  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9265  0018DE  6EDA               	movwf	fsr2h,c
  9266  0018E0  0E69               	movlw	105
  9267  0018E2  18DE               	xorwf	postinc2,w,c
  9268  0018E4  10DE               	iorwf	postinc2,w,c
  9269  0018E6  B4D8               	btfsc	status,2,c
  9270  0018E8  EF78  F00C         	goto	i2u368_41
  9271  0018EC  EF7A  F00C         	goto	i2u368_40
  9272  0018F0                     i2u368_41:
  9273  0018F0  EFBE  F00C         	goto	i2l4263
  9274  0018F4                     i2u368_40:
  9275  0018F4                     
  9276                           ;task.c: 117:                 task_list[task_list[pos].next].delay_t -= task_list[pos].d
      +                          elay_t;
  9277  0018F4  C02C  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  9278  0018F8  C02D  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  9279  0018FC  0E00               	movlw	0
  9280  0018FE  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9281  001900  0E0F               	movlw	15
  9282  001902  6E03               	movwf	i2___wmul@multiplicand^0,c
  9283  001904  ECED  F01D         	call	i2___wmul	;wreg free
  9284  001908  0E6F               	movlw	low (_task_list+11)
  9285  00190A  2401               	addwf	?i2___wmul^0,w,c
  9286  00190C  6ED9               	movwf	fsr2l,c
  9287  00190E  0E01               	movlw	high (_task_list+11)
  9288  001910  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9289  001912  6EDA               	movwf	fsr2h,c
  9290  001914  CFDE F024          	movff	postinc2,_handleListHead$2331
  9291  001918  CFDD F025          	movff	postdec2,_handleListHead$2331+1
  9292                           
  9293                           ;task.c: 117:                 task_list[task_list[pos].next].delay_t -= task_list[pos].d
      +                          elay_t;
  9294  00191C  C02C  F001         	movff	handleListHead@pos,i2___wmul@multiplier
  9295  001920  C02D  F002         	movff	handleListHead@pos+1,i2___wmul@multiplier+1
  9296  001924  0E00               	movlw	0
  9297  001926  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9298  001928  0E0F               	movlw	15
  9299  00192A  6E03               	movwf	i2___wmul@multiplicand^0,c
  9300  00192C  ECED  F01D         	call	i2___wmul	;wreg free
  9301  001930  0E64               	movlw	low _task_list
  9302  001932  2401               	addwf	?i2___wmul^0,w,c
  9303  001934  6ED9               	movwf	fsr2l,c
  9304  001936  0E01               	movlw	high _task_list
  9305  001938  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9306  00193A  6EDA               	movwf	fsr2h,c
  9307  00193C  CFDE F00F          	movff	postinc2,??_handleListHead
  9308  001940  CFDE F010          	movff	postinc2,??_handleListHead+1
  9309  001944  CFDE F011          	movff	postinc2,??_handleListHead+2
  9310  001948  CFDE F012          	movff	postinc2,??_handleListHead+3
  9311  00194C  C024  F001         	movff	_handleListHead$2331,i2___wmul@multiplier
  9312  001950  C025  F002         	movff	_handleListHead$2331+1,i2___wmul@multiplier+1
  9313  001954  0E00               	movlw	0
  9314  001956  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9315  001958  0E0F               	movlw	15
  9316  00195A  6E03               	movwf	i2___wmul@multiplicand^0,c
  9317  00195C  ECED  F01D         	call	i2___wmul	;wreg free
  9318  001960  0E64               	movlw	low _task_list
  9319  001962  2401               	addwf	?i2___wmul^0,w,c
  9320  001964  6ED9               	movwf	fsr2l,c
  9321  001966  0E01               	movlw	high _task_list
  9322  001968  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9323  00196A  6EDA               	movwf	fsr2h,c
  9324  00196C  500F               	movf	??_handleListHead^0,w,c
  9325  00196E  5EDE               	subwf	postinc2,f,c
  9326  001970  5010               	movf	(??_handleListHead+1)^0,w,c
  9327  001972  5ADE               	subwfb	postinc2,f,c
  9328  001974  5011               	movf	(??_handleListHead+2)^0,w,c
  9329  001976  5ADE               	subwfb	postinc2,f,c
  9330  001978  5012               	movf	(??_handleListHead+3)^0,w,c
  9331  00197A  5ADE               	subwfb	postinc2,f,c
  9332  00197C                     i2l4263:
  9333                           
  9334                           ;task.c: 89:     while(task_list[head].delay_t == 0) {
  9335  00197C  0100               	movlb	0	; () banked
  9336  00197E  51C8               	movf	_head& (0+255),w,b
  9337  001980  0D0F               	mullw	15
  9338  001982  0E64               	movlw	low _task_list
  9339  001984  24F3               	addwf	243,w,c
  9340  001986  6ED9               	movwf	fsr2l,c
  9341  001988  0E01               	movlw	high _task_list
  9342  00198A  20F4               	addwfc	prodh,w,c
  9343  00198C  6EDA               	movwf	fsr2h,c
  9344  00198E  50DE               	movf	postinc2,w,c
  9345  001990  10DE               	iorwf	postinc2,w,c
  9346  001992  10DE               	iorwf	postinc2,w,c
  9347  001994  10DE               	iorwf	postinc2,w,c
  9348  001996  B4D8               	btfsc	status,2,c
  9349  001998  EFD0  F00C         	goto	i2u369_41
  9350  00199C  EFD2  F00C         	goto	i2u369_40
  9351  0019A0                     i2u369_41:
  9352  0019A0  EF94  F00A         	goto	i2l519
  9353  0019A4                     i2u369_40:
  9354  0019A4                     
  9355                           ; BSR set to: 0
  9356                           ;task.c: 120:     task_list[head].delay_t-= 10;
  9357  0019A4  51C8               	movf	_head& (0+255),w,b
  9358  0019A6  0D0F               	mullw	15
  9359  0019A8  0E64               	movlw	low _task_list
  9360  0019AA  24F3               	addwf	243,w,c
  9361  0019AC  6ED9               	movwf	fsr2l,c
  9362  0019AE  0E01               	movlw	high _task_list
  9363  0019B0  20F4               	addwfc	prodh,w,c
  9364  0019B2  6EDA               	movwf	fsr2h,c
  9365  0019B4  0E0A               	movlw	10
  9366  0019B6  5EDE               	subwf	postinc2,f,c
  9367  0019B8  0E00               	movlw	0
  9368  0019BA  5ADE               	subwfb	postinc2,f,c
  9369  0019BC  5ADE               	subwfb	postinc2,f,c
  9370  0019BE  5ADE               	subwfb	postinc2,f,c
  9371  0019C0                     i2l517:
  9372                           
  9373                           ; BSR set to: 0
  9374  0019C0  0012               	return		;funcret
  9375  0019C2                     __end_of_handleListHead:
  9376                           	opt callstack 0
  9377                           
  9378 ;; *************** function _removeTask *****************
  9379 ;; Defined at:
  9380 ;;		line 63 in file "task.c"
  9381 ;; Parameters:    Size  Location     Type
  9382 ;;  idx             1    wreg     unsigned char 
  9383 ;; Auto vars:     Size  Location     Type
  9384 ;;  idx             1    5[COMRAM] unsigned char 
  9385 ;;  pos             1    4[COMRAM] unsigned char 
  9386 ;; Return value:  Size  Location     Type
  9387 ;;                  1    wreg      unsigned char 
  9388 ;; Registers used:
  9389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9390 ;; Tracked objects:
  9391 ;;		On entry : 0/0
  9392 ;;		On exit  : 0/0
  9393 ;;		Unchanged: 0/0
  9394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9396 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9397 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9398 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9399 ;;Total ram usage:        6 bytes
  9400 ;; Hardware stack levels used:    1
  9401 ;; Hardware stack levels required when called:    1
  9402 ;; This function calls:
  9403 ;;		_isEmptyList
  9404 ;; This function is called by:
  9405 ;;		_handleListHead
  9406 ;;		_remove_timer
  9407 ;; This function uses a non-reentrant model
  9408 ;;
  9409                           
  9410                           	psect	text58
  9411  0025F0                     __ptext58:
  9412                           	opt callstack 0
  9413  0025F0                     _removeTask:
  9414                           	opt callstack 19
  9415                           
  9416                           ; BSR set to: 0
  9417                           ;incstack = 0
  9418                           ;removeTask@idx stored from wreg
  9419  0025F0  6E06               	movwf	removeTask@idx^0,c
  9420  0025F2                     
  9421                           ;task.c: 64:     if(isEmptyList() || task_list[idx].func_ptr == ((void*)0))
  9422  0025F2  EC5D  F01E         	call	_isEmptyList	;wreg free
  9423  0025F6  0900               	iorlw	0
  9424  0025F8  A4D8               	btfss	status,2,c
  9425  0025FA  EF01  F013         	goto	i2u347_41
  9426  0025FE  EF03  F013         	goto	i2u347_40
  9427  002602                     i2u347_41:
  9428  002602  EF15  F013         	goto	i2l4073
  9429  002606                     i2u347_40:
  9430  002606  5006               	movf	removeTask@idx^0,w,c
  9431  002608  0D0F               	mullw	15
  9432  00260A  0E6C               	movlw	low (_task_list+8)
  9433  00260C  24F3               	addwf	243,w,c
  9434  00260E  6ED9               	movwf	fsr2l,c
  9435  002610  0E01               	movlw	high (_task_list+8)
  9436  002612  20F4               	addwfc	prodh,w,c
  9437  002614  6EDA               	movwf	fsr2h,c
  9438  002616  50DE               	movf	postinc2,w,c
  9439  002618  10DE               	iorwf	postinc2,w,c
  9440  00261A  10DE               	iorwf	postinc2,w,c
  9441  00261C  A4D8               	btfss	status,2,c
  9442  00261E  EF13  F013         	goto	i2u348_41
  9443  002622  EF15  F013         	goto	i2u348_40
  9444  002626                     i2u348_41:
  9445  002626  EF18  F013         	goto	i2l4077
  9446  00262A                     i2u348_40:
  9447  00262A                     i2l4073:
  9448                           
  9449                           ;task.c: 65:         return 0;
  9450  00262A  0E00               	movlw	0
  9451  00262C  EFC5  F013         	goto	i2l506
  9452  002630                     i2l4077:
  9453                           
  9454                           ;task.c: 66:     task_list[idx].delay_t = 0;
  9455  002630  5006               	movf	removeTask@idx^0,w,c
  9456  002632  0D0F               	mullw	15
  9457  002634  0E64               	movlw	low _task_list
  9458  002636  24F3               	addwf	243,w,c
  9459  002638  6ED9               	movwf	fsr2l,c
  9460  00263A  0E01               	movlw	high _task_list
  9461  00263C  20F4               	addwfc	prodh,w,c
  9462  00263E  6EDA               	movwf	fsr2h,c
  9463  002640  6ADE               	clrf	postinc2,c
  9464  002642  6ADE               	clrf	postinc2,c
  9465  002644  6ADE               	clrf	postinc2,c
  9466  002646  6ADD               	clrf	postdec2,c
  9467                           
  9468                           ;task.c: 67:     task_list[idx].period_t = 0;
  9469  002648  5006               	movf	removeTask@idx^0,w,c
  9470  00264A  0D0F               	mullw	15
  9471  00264C  0E68               	movlw	low (_task_list+4)
  9472  00264E  24F3               	addwf	243,w,c
  9473  002650  6ED9               	movwf	fsr2l,c
  9474  002652  0E01               	movlw	high (_task_list+4)
  9475  002654  20F4               	addwfc	prodh,w,c
  9476  002656  6EDA               	movwf	fsr2h,c
  9477  002658  6ADE               	clrf	postinc2,c
  9478  00265A  6ADE               	clrf	postinc2,c
  9479  00265C  6ADE               	clrf	postinc2,c
  9480  00265E  6ADD               	clrf	postdec2,c
  9481                           
  9482                           ;task.c: 68:     task_list[idx].func_ptr = ((void*)0);
  9483  002660  5006               	movf	removeTask@idx^0,w,c
  9484  002662  0D0F               	mullw	15
  9485  002664  0E6C               	movlw	low (_task_list+8)
  9486  002666  24F3               	addwf	243,w,c
  9487  002668  6ED9               	movwf	fsr2l,c
  9488  00266A  0E01               	movlw	high (_task_list+8)
  9489  00266C  20F4               	addwfc	prodh,w,c
  9490  00266E  6EDA               	movwf	fsr2h,c
  9491  002670  0E00               	movlw	0
  9492  002672  6EDE               	movwf	postinc2,c
  9493  002674  0E00               	movlw	0
  9494  002676  6EDE               	movwf	postinc2,c
  9495  002678  0E00               	movlw	0
  9496  00267A  6EDE               	movwf	postinc2,c
  9497                           
  9498                           ;task.c: 69:     task_list[idx].data_p = ((void*)0);
  9499  00267C  5006               	movf	removeTask@idx^0,w,c
  9500  00267E  0D0F               	mullw	15
  9501  002680  0E71               	movlw	low (_task_list+13)
  9502  002682  24F3               	addwf	243,w,c
  9503  002684  6ED9               	movwf	fsr2l,c
  9504  002686  0E01               	movlw	high (_task_list+13)
  9505  002688  20F4               	addwfc	prodh,w,c
  9506  00268A  6EDA               	movwf	fsr2h,c
  9507  00268C  0E00               	movlw	0
  9508  00268E  6EDE               	movwf	postinc2,c
  9509  002690  0E00               	movlw	0
  9510  002692  6EDD               	movwf	postdec2,c
  9511  002694                     
  9512                           ;task.c: 70:     num_task--;
  9513  002694  0100               	movlb	0	; () banked
  9514  002696  07C9               	decf	_num_task& (0+255),f,b
  9515  002698                     
  9516                           ; BSR set to: 0
  9517                           ;task.c: 71:     if(idx == head) {
  9518  002698  51C8               	movf	_head& (0+255),w,b
  9519  00269A  1806               	xorwf	removeTask@idx^0,w,c
  9520  00269C  A4D8               	btfss	status,2,c
  9521  00269E  EF53  F013         	goto	i2u349_41
  9522  0026A2  EF55  F013         	goto	i2u349_40
  9523  0026A6                     i2u349_41:
  9524  0026A6  EF6D  F013         	goto	i2l507
  9525  0026AA                     i2u349_40:
  9526  0026AA                     
  9527                           ; BSR set to: 0
  9528                           ;task.c: 72:         head = task_list[idx].next;
  9529  0026AA  5006               	movf	removeTask@idx^0,w,c
  9530  0026AC  0D0F               	mullw	15
  9531  0026AE  0E6F               	movlw	low (_task_list+11)
  9532  0026B0  24F3               	addwf	243,w,c
  9533  0026B2  6ED9               	movwf	fsr2l,c
  9534  0026B4  0E01               	movlw	high (_task_list+11)
  9535  0026B6  20F4               	addwfc	prodh,w,c
  9536  0026B8  6EDA               	movwf	fsr2h,c
  9537  0026BA  50DF               	movf	indf2,w,c
  9538  0026BC  6FC8               	movwf	_head& (0+255),b
  9539                           
  9540                           ;task.c: 73:         task_list[idx].next = 105;
  9541  0026BE  5006               	movf	removeTask@idx^0,w,c
  9542  0026C0  0D0F               	mullw	15
  9543  0026C2  0E6F               	movlw	low (_task_list+11)
  9544  0026C4  24F3               	addwf	243,w,c
  9545  0026C6  6ED9               	movwf	fsr2l,c
  9546  0026C8  0E01               	movlw	high (_task_list+11)
  9547  0026CA  20F4               	addwfc	prodh,w,c
  9548  0026CC  6EDA               	movwf	fsr2h,c
  9549  0026CE  0E69               	movlw	105
  9550  0026D0  6EDE               	movwf	postinc2,c
  9551  0026D2  0E00               	movlw	0
  9552  0026D4  6EDD               	movwf	postdec2,c
  9553                           
  9554                           ;task.c: 74:     }
  9555  0026D6  EFC4  F013         	goto	i2l4093
  9556  0026DA                     i2l507:
  9557                           
  9558                           ; BSR set to: 0
  9559                           ;task.c: 76:         char pos = head;
  9560  0026DA  C0C8  F005         	movff	_head,removeTask@pos
  9561                           
  9562                           ;task.c: 77:         while(task_list[pos].next != 105 && task_list[pos].next != idx) {
  9563  0026DE  EF7B  F013         	goto	i2l509
  9564  0026E2                     i2l4085:
  9565                           
  9566                           ;task.c: 78:             pos = task_list[pos].next;
  9567  0026E2  5005               	movf	removeTask@pos^0,w,c
  9568  0026E4  0D0F               	mullw	15
  9569  0026E6  0E6F               	movlw	low (_task_list+11)
  9570  0026E8  24F3               	addwf	243,w,c
  9571  0026EA  6ED9               	movwf	fsr2l,c
  9572  0026EC  0E01               	movlw	high (_task_list+11)
  9573  0026EE  20F4               	addwfc	prodh,w,c
  9574  0026F0  6EDA               	movwf	fsr2h,c
  9575  0026F2  50DF               	movf	indf2,w,c
  9576  0026F4  6E05               	movwf	removeTask@pos^0,c
  9577  0026F6                     i2l509:
  9578                           
  9579                           ;task.c: 77:         while(task_list[pos].next != 105 && task_list[pos].next != idx) {
  9580  0026F6  5005               	movf	removeTask@pos^0,w,c
  9581  0026F8  0D0F               	mullw	15
  9582  0026FA  0E6F               	movlw	low (_task_list+11)
  9583  0026FC  24F3               	addwf	243,w,c
  9584  0026FE  6ED9               	movwf	fsr2l,c
  9585  002700  0E01               	movlw	high (_task_list+11)
  9586  002702  20F4               	addwfc	prodh,w,c
  9587  002704  6EDA               	movwf	fsr2h,c
  9588  002706  0E69               	movlw	105
  9589  002708  18DE               	xorwf	postinc2,w,c
  9590  00270A  10DE               	iorwf	postinc2,w,c
  9591  00270C  B4D8               	btfsc	status,2,c
  9592  00270E  EF8B  F013         	goto	i2u350_41
  9593  002712  EF8D  F013         	goto	i2u350_40
  9594  002716                     i2u350_41:
  9595  002716  EFA4  F013         	goto	i2l4089
  9596  00271A                     i2u350_40:
  9597  00271A  5005               	movf	removeTask@pos^0,w,c
  9598  00271C  0D0F               	mullw	15
  9599  00271E  0E6F               	movlw	low (_task_list+11)
  9600  002720  24F3               	addwf	243,w,c
  9601  002722  6ED9               	movwf	fsr2l,c
  9602  002724  0E01               	movlw	high (_task_list+11)
  9603  002726  20F4               	addwfc	prodh,w,c
  9604  002728  6EDA               	movwf	fsr2h,c
  9605  00272A  5006               	movf	removeTask@idx^0,w,c
  9606  00272C  6E03               	movwf	(??_removeTask+2)^0,c
  9607  00272E  6A04               	clrf	(??_removeTask+3)^0,c
  9608  002730  50DE               	movf	postinc2,w,c
  9609  002732  1803               	xorwf	(??_removeTask+2)^0,w,c
  9610  002734  E107               	bnz	i2u351_41
  9611  002736  50DE               	movf	postinc2,w,c
  9612  002738  1804               	xorwf	(??_removeTask+3)^0,w,c
  9613  00273A  A4D8               	btfss	status,2,c
  9614  00273C  EFA2  F013         	goto	i2u351_41
  9615  002740  EFA4  F013         	goto	i2u351_40
  9616  002744                     i2u351_41:
  9617  002744  EF71  F013         	goto	i2l4085
  9618  002748                     i2u351_40:
  9619  002748                     i2l4089:
  9620                           
  9621                           ;task.c: 80:         task_list[pos].next = task_list[idx].next;
  9622  002748  5006               	movf	removeTask@idx^0,w,c
  9623  00274A  0D0F               	mullw	15
  9624  00274C  0E6F               	movlw	low (_task_list+11)
  9625  00274E  24F3               	addwf	243,w,c
  9626  002750  6ED9               	movwf	fsr2l,c
  9627  002752  0E01               	movlw	high (_task_list+11)
  9628  002754  20F4               	addwfc	prodh,w,c
  9629  002756  6EDA               	movwf	fsr2h,c
  9630  002758  5005               	movf	removeTask@pos^0,w,c
  9631  00275A  0D0F               	mullw	15
  9632  00275C  0E6F               	movlw	low (_task_list+11)
  9633  00275E  24F3               	addwf	243,w,c
  9634  002760  6EE1               	movwf	fsr1l,c
  9635  002762  0E01               	movlw	high (_task_list+11)
  9636  002764  20F4               	addwfc	prodh,w,c
  9637  002766  6EE2               	movwf	fsr1h,c
  9638  002768  CFDE FFE6          	movff	postinc2,postinc1
  9639  00276C  CFDD FFE5          	movff	postdec2,postdec1
  9640  002770                     
  9641                           ;task.c: 81:         task_list[idx].next = 105;
  9642  002770  5006               	movf	removeTask@idx^0,w,c
  9643  002772  0D0F               	mullw	15
  9644  002774  0E6F               	movlw	low (_task_list+11)
  9645  002776  24F3               	addwf	243,w,c
  9646  002778  6ED9               	movwf	fsr2l,c
  9647  00277A  0E01               	movlw	high (_task_list+11)
  9648  00277C  20F4               	addwfc	prodh,w,c
  9649  00277E  6EDA               	movwf	fsr2h,c
  9650  002780  0E69               	movlw	105
  9651  002782  6EDE               	movwf	postinc2,c
  9652  002784  0E00               	movlw	0
  9653  002786  6EDD               	movwf	postdec2,c
  9654  002788                     i2l4093:
  9655                           
  9656                           ;task.c: 83:     return 1;
  9657  002788  0E01               	movlw	1
  9658  00278A                     i2l506:
  9659  00278A  0012               	return		;funcret
  9660  00278C                     __end_of_removeTask:
  9661                           	opt callstack 0
  9662                           
  9663 ;; *************** function _isEmptyList *****************
  9664 ;; Defined at:
  9665 ;;		line 3 in file "task.c"
  9666 ;; Parameters:    Size  Location     Type
  9667 ;;		None
  9668 ;; Auto vars:     Size  Location     Type
  9669 ;;		None
  9670 ;; Return value:  Size  Location     Type
  9671 ;;                  1    wreg      unsigned char 
  9672 ;; Registers used:
  9673 ;;		wreg, status,2
  9674 ;; Tracked objects:
  9675 ;;		On entry : 0/0
  9676 ;;		On exit  : 0/0
  9677 ;;		Unchanged: 0/0
  9678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9683 ;;Total ram usage:        0 bytes
  9684 ;; Hardware stack levels used:    1
  9685 ;; This function calls:
  9686 ;;		Nothing
  9687 ;; This function is called by:
  9688 ;;		_removeTask
  9689 ;; This function uses a non-reentrant model
  9690 ;;
  9691                           
  9692                           	psect	text59
  9693  003CBA                     __ptext59:
  9694                           	opt callstack 0
  9695  003CBA                     _isEmptyList:
  9696                           	opt callstack 19
  9697  003CBA                     
  9698                           ;task.c: 4:     return num_task == 0 ? 1 : 0;
  9699  003CBA  0100               	movlb	0	; () banked
  9700  003CBC  51C9               	movf	_num_task& (0+255),w,b
  9701  003CBE  B4D8               	btfsc	status,2,c
  9702  003CC0  EF64  F01E         	goto	i2u331_41
  9703  003CC4  EF67  F01E         	goto	i2u331_40
  9704  003CC8                     i2u331_41:
  9705  003CC8  0E01               	movlw	1
  9706  003CCA  EF68  F01E         	goto	i2u332_40
  9707  003CCE                     i2u331_40:
  9708  003CCE  0E00               	movlw	0
  9709  003CD0                     i2u332_40:
  9710  003CD0                     
  9711                           ; BSR set to: 0
  9712  003CD0  0012               	return		;funcret
  9713  003CD2                     __end_of_isEmptyList:
  9714                           	opt callstack 0
  9715                           
  9716 ;; *************** function _enqueue *****************
  9717 ;; Defined at:
  9718 ;;		line 24 in file "ready_queue.c"
  9719 ;; Parameters:    Size  Location     Type
  9720 ;;  ptr             3    9[COMRAM] PTR FTN(PTR void ,)void 
  9721 ;;		 -> changeState(1), check_humid_to_turn_fan(1), readTempAndHumid(1), NULL(0), 
  9722 ;;		 -> handleButton(1), printTempAndHumid(1), 
  9723 ;;  data_ptr        2   12[COMRAM] PTR void 
  9724 ;;		 -> NULL(0), 
  9725 ;; Auto vars:     Size  Location     Type
  9726 ;;		None
  9727 ;; Return value:  Size  Location     Type
  9728 ;;                  1    wreg      unsigned char 
  9729 ;; Registers used:
  9730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9731 ;; Tracked objects:
  9732 ;;		On entry : 0/0
  9733 ;;		On exit  : 0/0
  9734 ;;		Unchanged: 0/0
  9735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9736 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9739 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9740 ;;Total ram usage:        5 bytes
  9741 ;; Hardware stack levels used:    1
  9742 ;; Hardware stack levels required when called:    3
  9743 ;; This function calls:
  9744 ;;		_isFullQueue
  9745 ;;		i2___awmod
  9746 ;;		i2___wmul
  9747 ;; This function is called by:
  9748 ;;		_handleListHead
  9749 ;; This function uses a non-reentrant model
  9750 ;;
  9751                           
  9752                           	psect	text60
  9753  00329A                     __ptext60:
  9754                           	opt callstack 0
  9755  00329A                     _enqueue:
  9756                           	opt callstack 17
  9757  00329A                     
  9758                           ;ready_queue.c: 25:     if(isFullQueue())
  9759  00329A  EC42  F01E         	call	_isFullQueue	;wreg free
  9760  00329E  0900               	iorlw	0
  9761  0032A0  B4D8               	btfsc	status,2,c
  9762  0032A2  EF55  F019         	goto	i2u356_41
  9763  0032A6  EF57  F019         	goto	i2u356_40
  9764  0032AA                     i2u356_41:
  9765  0032AA  EF59  F019         	goto	i2l4111
  9766  0032AE                     i2u356_40:
  9767  0032AE  EFA2  F019         	goto	i2l582
  9768  0032B2                     i2l4111:
  9769                           
  9770                           ;ready_queue.c: 27:     if(front == -1)
  9771  0032B2  0100               	movlb	0	; () banked
  9772  0032B4  29D7               	incf	_front& (0+255),w,b
  9773  0032B6  E106               	bnz	i2u357_41
  9774  0032B8  29D8               	incf	(_front+1)& (0+255),w,b
  9775  0032BA  A4D8               	btfss	status,2,c
  9776  0032BC  EF62  F019         	goto	i2u357_41
  9777  0032C0  EF64  F019         	goto	i2u357_40
  9778  0032C4                     i2u357_41:
  9779  0032C4  EF68  F019         	goto	i2l4115
  9780  0032C8                     i2u357_40:
  9781  0032C8                     
  9782                           ; BSR set to: 0
  9783                           ;ready_queue.c: 28:         front = 0;
  9784  0032C8  0E00               	movlw	0
  9785  0032CA  6FD8               	movwf	(_front+1)& (0+255),b
  9786  0032CC  0E00               	movlw	0
  9787  0032CE  6FD7               	movwf	_front& (0+255),b
  9788  0032D0                     i2l4115:
  9789                           
  9790                           ; BSR set to: 0
  9791                           ;ready_queue.c: 29:     rear = (rear + 1) % 20;
  9792  0032D0  0E01               	movlw	1
  9793  0032D2  25D5               	addwf	_rear& (0+255),w,b
  9794  0032D4  6E01               	movwf	i2___awmod@dividend^0,c
  9795  0032D6  0E00               	movlw	0
  9796  0032D8  21D6               	addwfc	(_rear+1)& (0+255),w,b
  9797  0032DA  6E02               	movwf	(i2___awmod@dividend+1)^0,c
  9798  0032DC  0E00               	movlw	0
  9799  0032DE  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  9800  0032E0  0E14               	movlw	20
  9801  0032E2  6E03               	movwf	i2___awmod@divisor^0,c
  9802  0032E4  EC48  F018         	call	i2___awmod	;wreg free
  9803  0032E8  C001  F0D5         	movff	?i2___awmod,_rear
  9804  0032EC  C002  F0D6         	movff	?i2___awmod+1,_rear+1
  9805  0032F0                     
  9806                           ;ready_queue.c: 30:     ready_queue[rear].func_ptr = ptr;
  9807  0032F0  C0D5  F001         	movff	_rear,i2___wmul@multiplier
  9808  0032F4  C0D6  F002         	movff	_rear+1,i2___wmul@multiplier+1
  9809  0032F8  0E00               	movlw	0
  9810  0032FA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9811  0032FC  0E05               	movlw	5
  9812  0032FE  6E03               	movwf	i2___wmul@multiplicand^0,c
  9813  003300  ECED  F01D         	call	i2___wmul	;wreg free
  9814  003304  0E00               	movlw	low _ready_queue
  9815  003306  2401               	addwf	?i2___wmul^0,w,c
  9816  003308  6ED9               	movwf	fsr2l,c
  9817  00330A  0E01               	movlw	high _ready_queue
  9818  00330C  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9819  00330E  6EDA               	movwf	fsr2h,c
  9820  003310  C00A  FFDE         	movff	enqueue@ptr,postinc2
  9821  003314  C00B  FFDE         	movff	enqueue@ptr+1,postinc2
  9822  003318  C00C  FFDE         	movff	enqueue@ptr+2,postinc2
  9823  00331C                     
  9824                           ;ready_queue.c: 31:     ready_queue[rear].data_p = data_ptr;
  9825  00331C  C0D5  F001         	movff	_rear,i2___wmul@multiplier
  9826  003320  C0D6  F002         	movff	_rear+1,i2___wmul@multiplier+1
  9827  003324  0E00               	movlw	0
  9828  003326  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9829  003328  0E05               	movlw	5
  9830  00332A  6E03               	movwf	i2___wmul@multiplicand^0,c
  9831  00332C  ECED  F01D         	call	i2___wmul	;wreg free
  9832  003330  0E03               	movlw	low (_ready_queue+3)
  9833  003332  2401               	addwf	?i2___wmul^0,w,c
  9834  003334  6ED9               	movwf	fsr2l,c
  9835  003336  0E01               	movlw	high (_ready_queue+3)
  9836  003338  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9837  00333A  6EDA               	movwf	fsr2h,c
  9838  00333C  C00D  FFDE         	movff	enqueue@data_ptr,postinc2
  9839  003340  C00E  FFDD         	movff	enqueue@data_ptr+1,postdec2
  9840  003344                     i2l582:
  9841  003344  0012               	return		;funcret
  9842  003346                     __end_of_enqueue:
  9843                           	opt callstack 0
  9844                           
  9845 ;; *************** function i2___wmul *****************
  9846 ;; Defined at:
  9847 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  9848 ;; Parameters:    Size  Location     Type
  9849 ;;  multiplier      2    0[COMRAM] unsigned int 
  9850 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9851 ;; Auto vars:     Size  Location     Type
  9852 ;;  __wmul          2    4[COMRAM] unsigned int 
  9853 ;; Return value:  Size  Location     Type
  9854 ;;                  2    0[COMRAM] unsigned int 
  9855 ;; Registers used:
  9856 ;;		wreg, status,2, status,0, prodl, prodh
  9857 ;; Tracked objects:
  9858 ;;		On entry : 0/0
  9859 ;;		On exit  : 0/0
  9860 ;;		Unchanged: 0/0
  9861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9862 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9863 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9865 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9866 ;;Total ram usage:        6 bytes
  9867 ;; Hardware stack levels used:    1
  9868 ;; This function calls:
  9869 ;;		Nothing
  9870 ;; This function is called by:
  9871 ;;		_enqueue
  9872 ;;		_handleListHead
  9873 ;; This function uses a non-reentrant model
  9874 ;;
  9875                           
  9876                           	psect	text61
  9877  003BDA                     __ptext61:
  9878                           	opt callstack 0
  9879  003BDA                     i2___wmul:
  9880                           	opt callstack 20
  9881  003BDA  5001               	movf	i2___wmul@multiplier^0,w,c
  9882  003BDC  0203               	mulwf	i2___wmul@multiplicand^0,c
  9883  003BDE  CFF3 F005          	movff	prodl,i2___wmul@product
  9884  003BE2  CFF4 F006          	movff	prodh,i2___wmul@product+1
  9885  003BE6  5001               	movf	i2___wmul@multiplier^0,w,c
  9886  003BE8  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
  9887  003BEA  50F3               	movf	243,w,c
  9888  003BEC  2606               	addwf	(i2___wmul@product+1)^0,f,c
  9889  003BEE  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
  9890  003BF0  0203               	mulwf	i2___wmul@multiplicand^0,c
  9891  003BF2  50F3               	movf	243,w,c
  9892  003BF4  2606               	addwf	(i2___wmul@product+1)^0,f,c
  9893  003BF6  C005  F001         	movff	i2___wmul@product,?i2___wmul
  9894  003BFA  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  9895  003BFE  0012               	return		;funcret
  9896  003C00                     __end_ofi2___wmul:
  9897                           	opt callstack 0
  9898                           
  9899 ;; *************** function _isFullQueue *****************
  9900 ;; Defined at:
  9901 ;;		line 14 in file "ready_queue.c"
  9902 ;; Parameters:    Size  Location     Type
  9903 ;;		None
  9904 ;; Auto vars:     Size  Location     Type
  9905 ;;		None
  9906 ;; Return value:  Size  Location     Type
  9907 ;;                  1    wreg      unsigned char 
  9908 ;; Registers used:
  9909 ;;		wreg, status,2, status,0, cstack
  9910 ;; Tracked objects:
  9911 ;;		On entry : 0/0
  9912 ;;		On exit  : 0/0
  9913 ;;		Unchanged: 0/0
  9914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9917 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9918 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9919 ;;Total ram usage:        1 bytes
  9920 ;; Hardware stack levels used:    1
  9921 ;; Hardware stack levels required when called:    2
  9922 ;; This function calls:
  9923 ;;		i2_getSizeQueue
  9924 ;; This function is called by:
  9925 ;;		_enqueue
  9926 ;; This function uses a non-reentrant model
  9927 ;;
  9928                           
  9929                           	psect	text62
  9930  003C84                     __ptext62:
  9931                           	opt callstack 0
  9932  003C84                     _isFullQueue:
  9933                           	opt callstack 17
  9934  003C84                     
  9935                           ;ready_queue.c: 15:     return getSizeQueue() >= 20 ? 1 : 0;
  9936  003C84  ECC4  F01D         	call	i2_getSizeQueue	;wreg free
  9937  003C88  6E09               	movwf	??_isFullQueue^0,c
  9938  003C8A  0E14               	movlw	20
  9939  003C8C  6009               	cpfslt	??_isFullQueue^0,c
  9940  003C8E  EF4B  F01E         	goto	i2u336_41
  9941  003C92  EF4E  F01E         	goto	i2u336_40
  9942  003C96                     i2u336_41:
  9943  003C96  0E01               	movlw	1
  9944  003C98  EF4F  F01E         	goto	i2u337_40
  9945  003C9C                     i2u336_40:
  9946  003C9C  0E00               	movlw	0
  9947  003C9E                     i2u337_40:
  9948  003C9E  0012               	return		;funcret
  9949  003CA0                     __end_of_isFullQueue:
  9950                           	opt callstack 0
  9951                           
  9952 ;; *************** function i2_getSizeQueue *****************
  9953 ;; Defined at:
  9954 ;;		line 10 in file "ready_queue.c"
  9955 ;; Parameters:    Size  Location     Type
  9956 ;;		None
  9957 ;; Auto vars:     Size  Location     Type
  9958 ;;		None
  9959 ;; Return value:  Size  Location     Type
  9960 ;;                  1    wreg      unsigned char 
  9961 ;; Registers used:
  9962 ;;		wreg, status,2, status,0, cstack
  9963 ;; Tracked objects:
  9964 ;;		On entry : 0/0
  9965 ;;		On exit  : 0/0
  9966 ;;		Unchanged: 0/0
  9967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9970 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9971 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9972 ;;Total ram usage:        2 bytes
  9973 ;; Hardware stack levels used:    1
  9974 ;; Hardware stack levels required when called:    1
  9975 ;; This function calls:
  9976 ;;		i2___awmod
  9977 ;; This function is called by:
  9978 ;;		_isFullQueue
  9979 ;; This function uses a non-reentrant model
  9980 ;;
  9981                           
  9982                           	psect	text63
  9983  003B88                     __ptext63:
  9984                           	opt callstack 0
  9985  003B88                     i2_getSizeQueue:
  9986                           	opt callstack 17
  9987  003B88                     
  9988                           ;ready_queue.c: 11:     return (rear - front + 1 + 20) % 20;
  9989  003B88  0100               	movlb	0	; () banked
  9990  003B8A  51D7               	movf	_front& (0+255),w,b
  9991  003B8C  5DD5               	subwf	_rear& (0+255),w,b
  9992  003B8E  6E07               	movwf	??i2_getSizeQueue^0,c
  9993  003B90  51D8               	movf	(_front+1)& (0+255),w,b
  9994  003B92  59D6               	subwfb	(_rear+1)& (0+255),w,b
  9995  003B94  6E08               	movwf	(??i2_getSizeQueue+1)^0,c
  9996  003B96  0E15               	movlw	21
  9997  003B98  2407               	addwf	??i2_getSizeQueue^0,w,c
  9998  003B9A  6E01               	movwf	i2___awmod@dividend^0,c
  9999  003B9C  0E00               	movlw	0
 10000  003B9E  2008               	addwfc	(??i2_getSizeQueue+1)^0,w,c
 10001  003BA0  6E02               	movwf	(i2___awmod@dividend+1)^0,c
 10002  003BA2  0E00               	movlw	0
 10003  003BA4  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 10004  003BA6  0E14               	movlw	20
 10005  003BA8  6E03               	movwf	i2___awmod@divisor^0,c
 10006  003BAA  EC48  F018         	call	i2___awmod	;wreg free
 10007  003BAE  5001               	movf	?i2___awmod^0,w,c
 10008  003BB0  0012               	return		;funcret
 10009  003BB2                     __end_ofi2_getSizeQueue:
 10010                           	opt callstack 0
 10011                           
 10012 ;; *************** function i2___awmod *****************
 10013 ;; Defined at:
 10014 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
 10015 ;; Parameters:    Size  Location     Type
 10016 ;;  dividend        2    0[COMRAM] int 
 10017 ;;  divisor         2    2[COMRAM] int 
 10018 ;; Auto vars:     Size  Location     Type
 10019 ;;  __awmod         1    5[COMRAM] unsigned char 
 10020 ;;  __awmod         1    4[COMRAM] unsigned char 
 10021 ;; Return value:  Size  Location     Type
 10022 ;;                  2    0[COMRAM] int 
 10023 ;; Registers used:
 10024 ;;		wreg, status,2, status,0
 10025 ;; Tracked objects:
 10026 ;;		On entry : 0/0
 10027 ;;		On exit  : 0/0
 10028 ;;		Unchanged: 0/0
 10029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10030 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10031 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10033 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10034 ;;Total ram usage:        6 bytes
 10035 ;; Hardware stack levels used:    1
 10036 ;; This function calls:
 10037 ;;		Nothing
 10038 ;; This function is called by:
 10039 ;;		_enqueue
 10040 ;;		i2_getSizeQueue
 10041 ;; This function uses a non-reentrant model
 10042 ;;
 10043                           
 10044                           	psect	text64
 10045  003090                     __ptext64:
 10046                           	opt callstack 0
 10047  003090                     i2___awmod:
 10048                           	opt callstack 19
 10049  003090  0E00               	movlw	0
 10050  003092  6E06               	movwf	i2___awmod@sign^0,c
 10051  003094  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
 10052  003096  EF51  F018         	goto	i2u246_40
 10053  00309A  EF4F  F018         	goto	i2u246_41
 10054  00309E                     i2u246_41:
 10055  00309E  EF57  F018         	goto	i2l3335
 10056  0030A2                     i2u246_40:
 10057  0030A2  6C01               	negf	i2___awmod@dividend^0,c
 10058  0030A4  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 10059  0030A6  B0D8               	btfsc	status,0,c
 10060  0030A8  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 10061  0030AA  0E01               	movlw	1
 10062  0030AC  6E06               	movwf	i2___awmod@sign^0,c
 10063  0030AE                     i2l3335:
 10064  0030AE  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
 10065  0030B0  EF5E  F018         	goto	i2u247_40
 10066  0030B4  EF5C  F018         	goto	i2u247_41
 10067  0030B8                     i2u247_41:
 10068  0030B8  EF62  F018         	goto	i2l3339
 10069  0030BC                     i2u247_40:
 10070  0030BC  6C03               	negf	i2___awmod@divisor^0,c
 10071  0030BE  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
 10072  0030C0  B0D8               	btfsc	status,0,c
 10073  0030C2  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
 10074  0030C4                     i2l3339:
 10075  0030C4  5003               	movf	i2___awmod@divisor^0,w,c
 10076  0030C6  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
 10077  0030C8  B4D8               	btfsc	status,2,c
 10078  0030CA  EF69  F018         	goto	i2u248_41
 10079  0030CE  EF6B  F018         	goto	i2u248_40
 10080  0030D2                     i2u248_41:
 10081  0030D2  EF8F  F018         	goto	i2l3355
 10082  0030D6                     i2u248_40:
 10083  0030D6  0E01               	movlw	1
 10084  0030D8  6E05               	movwf	i2___awmod@counter^0,c
 10085  0030DA  EF73  F018         	goto	i2l3345
 10086  0030DE                     i2l3343:
 10087  0030DE  90D8               	bcf	status,0,c
 10088  0030E0  3603               	rlcf	i2___awmod@divisor^0,f,c
 10089  0030E2  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
 10090  0030E4  2A05               	incf	i2___awmod@counter^0,f,c
 10091  0030E6                     i2l3345:
 10092  0030E6  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
 10093  0030E8  EF78  F018         	goto	i2u249_41
 10094  0030EC  EF7A  F018         	goto	i2u249_40
 10095  0030F0                     i2u249_41:
 10096  0030F0  EF6F  F018         	goto	i2l3343
 10097  0030F4                     i2u249_40:
 10098  0030F4                     i2l3347:
 10099  0030F4  5003               	movf	i2___awmod@divisor^0,w,c
 10100  0030F6  5C01               	subwf	i2___awmod@dividend^0,w,c
 10101  0030F8  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 10102  0030FA  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
 10103  0030FC  A0D8               	btfss	status,0,c
 10104  0030FE  EF83  F018         	goto	i2u250_41
 10105  003102  EF85  F018         	goto	i2u250_40
 10106  003106                     i2u250_41:
 10107  003106  EF89  F018         	goto	i2l3351
 10108  00310A                     i2u250_40:
 10109  00310A  5003               	movf	i2___awmod@divisor^0,w,c
 10110  00310C  5E01               	subwf	i2___awmod@dividend^0,f,c
 10111  00310E  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 10112  003110  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
 10113  003112                     i2l3351:
 10114  003112  90D8               	bcf	status,0,c
 10115  003114  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
 10116  003116  3203               	rrcf	i2___awmod@divisor^0,f,c
 10117  003118  2E05               	decfsz	i2___awmod@counter^0,f,c
 10118  00311A  EF7A  F018         	goto	i2l3347
 10119  00311E                     i2l3355:
 10120  00311E  5006               	movf	i2___awmod@sign^0,w,c
 10121  003120  B4D8               	btfsc	status,2,c
 10122  003122  EF95  F018         	goto	i2u251_41
 10123  003126  EF97  F018         	goto	i2u251_40
 10124  00312A                     i2u251_41:
 10125  00312A  EF9B  F018         	goto	i2l3359
 10126  00312E                     i2u251_40:
 10127  00312E  6C01               	negf	i2___awmod@dividend^0,c
 10128  003130  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 10129  003132  B0D8               	btfsc	status,0,c
 10130  003134  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 10131  003136                     i2l3359:
 10132  003136  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 10133  00313A  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 10134  00313E  0012               	return		;funcret
 10135  003140                     __end_ofi2___awmod:
 10136                           	opt callstack 0
 10137                           
 10138                           	psect	text65
 10139  000000                     __ptext65:
 10140                           	opt callstack 0
 10141  000000                     
 10142                           	psect	rparam
 10143  0000                     
 10144                           	psect	temp
 10145  00004C                     btemp:
 10146                           	opt callstack 0
 10147  00004C                     	ds	1
 10148  0000                     int$flags	set	btemp
 10149  0000                     wtemp8	set	btemp+1
 10150  0000                     ttemp5	set	btemp+1
 10151  0000                     ttemp6	set	btemp+4
 10152  0000                     ttemp7	set	btemp+8
 10153                           tosu	equ	0xFFF
 10154                           tosh	equ	0xFFE
 10155                           tosl	equ	0xFFD
 10156                           stkptr	equ	0xFFC
 10157                           pclatu	equ	0xFFB
 10158                           pclath	equ	0xFFA
 10159                           pcl	equ	0xFF9
 10160                           tblptru	equ	0xFF8
 10161                           tblptrh	equ	0xFF7
 10162                           tblptrl	equ	0xFF6
 10163                           tablat	equ	0xFF5
 10164                           prodh	equ	0xFF4
 10165                           prodl	equ	0xFF3
 10166                           indf0	equ	0xFEF
 10167                           postinc0	equ	0xFEE
 10168                           postdec0	equ	0xFED
 10169                           preinc0	equ	0xFEC
 10170                           plusw0	equ	0xFEB
 10171                           fsr0h	equ	0xFEA
 10172                           fsr0l	equ	0xFE9
 10173                           wreg	equ	0xFE8
 10174                           indf1	equ	0xFE7
 10175                           postinc1	equ	0xFE6
 10176                           postdec1	equ	0xFE5
 10177                           preinc1	equ	0xFE4
 10178                           plusw1	equ	0xFE3
 10179                           fsr1h	equ	0xFE2
 10180                           fsr1l	equ	0xFE1
 10181                           bsr	equ	0xFE0
 10182                           indf2	equ	0xFDF
 10183                           postinc2	equ	0xFDE
 10184                           postdec2	equ	0xFDD
 10185                           preinc2	equ	0xFDC
 10186                           plusw2	equ	0xFDB
 10187                           fsr2h	equ	0xFDA
 10188                           fsr2l	equ	0xFD9
 10189                           status	equ	0xFD8


Data Sizes:
    Strings     76
    Constant    0
    Data        10
    BSS         472
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     51      75
    BANK0           160     69     127
    BANK1           256      0     100
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    handleListHead$2330	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    handleListHead$2325	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> changeState(), check_humid_to_turn_fan(), readTempAndHumid(), NULL(NULL[0]), 
		 -> handleButton(), printTempAndHumid(), 

    callback$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S38$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ptr$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ptr$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    handleButton@data_ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ?_dequeue.data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ?_dequeue.func_ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> changeState(), check_humid_to_turn_fan(), readTempAndHumid(), NULL(NULL[0]), 
		 -> handleButton(), printTempAndHumid(), 

    S30$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    temp.data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    temp.func_ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> changeState(), check_humid_to_turn_fan(), readTempAndHumid(), NULL(NULL[0]), 
		 -> handleButton(), printTempAndHumid(), 

    enqueue@data_ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    enqueue@ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> changeState(), check_humid_to_turn_fan(), readTempAndHumid(), NULL(NULL[0]), 
		 -> handleButton(), printTempAndHumid(), 

    ready_queue.data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ready_queue.func_ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> changeState(), check_humid_to_turn_fan(), readTempAndHumid(), NULL(NULL[0]), 
		 -> handleButton(), printTempAndHumid(), 

    S30$data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    node.data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S30$func_ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> changeState(), check_humid_to_turn_fan(), readTempAndHumid(), NULL(NULL[0]), 
		 -> handleButton(), printTempAndHumid(), 

    node.func_ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> changeState(), check_humid_to_turn_fan(), readTempAndHumid(), NULL(NULL[0]), 
		 -> handleButton(), printTempAndHumid(), 

    addTask@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    addTask@ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> changeState(), check_humid_to_turn_fan(), readTempAndHumid(), handleButton(), 
		 -> printTempAndHumid(), 

    S38$data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    task_list.data_p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S38$func_ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> changeState(), check_humid_to_turn_fan(), readTempAndHumid(), NULL(NULL[0]), 
		 -> handleButton(), printTempAndHumid(), 

    task_list.func_ptr	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> changeState(), check_humid_to_turn_fan(), readTempAndHumid(), NULL(NULL[0]), 
		 -> handleButton(), printTempAndHumid(), 

    register_timer@data_ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    register_timer@callback	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> changeState(), check_humid_to_turn_fan(), readTempAndHumid(), handleButton(), 
		 -> printTempAndHumid(), 

    LCDPrint@ptr	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_15(CODE[7]), STR_14(CODE[10]), STR_13(CODE[7]), STR_12(CODE[6]), 
		 -> STR_11(CODE[7]), STR_10(CODE[9]), STR_9(CODE[10]), STR_8(CODE[9]), 
		 -> STR_7(CODE[7]), STR_6(CODE[17]), STR_5(CODE[17]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 

    LCDPutStr@ptr	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_15(CODE[7]), STR_14(CODE[10]), STR_13(CODE[7]), STR_12(CODE[6]), 
		 -> STR_11(CODE[7]), STR_10(CODE[9]), STR_9(CODE[10]), STR_8(CODE[9]), 
		 -> STR_7(CODE[7]), STR_6(CODE[17]), STR_5(CODE[17]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _timer_interrupt in COMRAM

    _timer_interrupt->_handleListHead
    _handleListHead->_enqueue
    _enqueue->_isFullQueue
    _isFullQueue->i2_getSizeQueue
    i2_getSizeQueue->i2___awmod

Critical Paths under _main in BANK0

    _system_setup->_register_timer
    _register_timer->_addTask
    _addTask->___wmul
    _system_initialize->_start_timer
    _start_timer->_initializeTaskList
    _initializeTaskList->_queueInitialize
    _queueInitialize->___wmul
    _LCDInit->_LCDPutInst
    _Port_BBSPIInit->_SendByteBBSPI
    _dispatch->_selectReadyTask
    _selectReadyTask->_readTempAndHumid
    _readTempAndHumid->___flsub
    _readDHT->_getByte
    ___flsub->___fladd
    ___fladd->___flmul
    _printTempAndHumid->___flmul
    ___flmul->___xxtofl
    _handleButton->_readButtonRA5
    _handleButton->_readButtonRB0
    _isEmptyQueue->_getSizeQueue
    _getSizeQueue->___awmod
    _check_humid_to_turn_fan->_LCDPrint
    _LCDPrintChar->_LCDMoveCursor
    _FSM->_LCDPrint
    _LCDPrint->_LCDMoveCursor
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_WritePort_BBSPI
    _LCDMoveCursor->_LCDPutInst
    _LCDPutInst->_WritePort_BBSPI
    _WritePort_BBSPI->_SendByteBBSPI

Critical Paths under _timer_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer_interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer_interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer_interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timer_interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timer_interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _timer_interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _timer_interrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _timer_interrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _timer_interrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _timer_interrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _timer_interrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _timer_interrupt in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _timer_interrupt in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _timer_interrupt in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _timer_interrupt in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   54157
                                _FSM
                           _LCDPrint
                           _dispatch
                  _system_initialize
                       _system_setup
 ---------------------------------------------------------------------------------
 (1) _system_setup                                         0     0      0    3563
                     _register_timer
 ---------------------------------------------------------------------------------
 (2) _register_timer                                      13     0     13    3563
                                             38 BANK0     13     0     13
                            _addTask
 ---------------------------------------------------------------------------------
 (3) _addTask                                             32    19     13    1955
                                              6 BANK0     32    19     13
                             ___wmul
                         _isFullList
 ---------------------------------------------------------------------------------
 (4) _isFullList                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_initialize                                    0     0      0    3994
                            _LCDInit
                     _LTD_initialize
               _interrupt_initialize
                     _osc_initialize
                     _pin_initialize
                        _start_timer
 ---------------------------------------------------------------------------------
 (2) _start_timer                                          3     3      0    2080
                                             10 BANK0      3     3      0
                 _initializeTaskList
 ---------------------------------------------------------------------------------
 (3) _initializeTaskList                                   2     2      0    2036
                                              8 BANK0      2     2      0
                             ___wmul
                    _queueInitialize
 ---------------------------------------------------------------------------------
 (4) _queueInitialize                                      2     2      0     985
                                              6 BANK0      2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _pin_initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _osc_initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _interrupt_initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LTD_initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0    1914
                                              6 BANK0      1     1      0
                          _InitBBSPI
                         _LCDPutInst
                     _Port_BBSPIInit
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (3) _Port_BBSPIInit                                       1     1      0     160
                                              3 BANK0      1     1      0
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (3) _InitBBSPI                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dispatch                                             0     0      0   37626
                    _selectReadyTask
 ---------------------------------------------------------------------------------
 (2) _selectReadyTask                                      5     5      0   37626
                                             64 BANK0      5     5      0
                        _changeState *
            _check_humid_to_turn_fan *
                            _dequeue
                       _handleButton *
                       _isEmptyQueue
                  _printTempAndHumid *
                   _readTempAndHumid *
 ---------------------------------------------------------------------------------
 (3) _readTempAndHumid                                     1     1      0    8004
                                             63 BANK0      1     1      0
                            ___fladd
                            ___flmul
                            ___flsub
                           ___xxtofl
                            _readDHT
 ---------------------------------------------------------------------------------
 (4) _readDHT                                              4     4      0     255
                                              4 BANK0      4     4      0
                            _getByte
 ---------------------------------------------------------------------------------
 (5) _getByte                                              4     4      0     184
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     550
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    2737
                                             55 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    2414
                                             39 BANK0     16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _printTempAndHumid                                   12    12      0   13818
                                             39 BANK0     12    12      0
                           _LCDPrint
                       _LCDPrintChar
                            ___awdiv
                            ___awmod
                             ___fleq
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    2048
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fleq                                              12     4      8     646
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) _handleButton                                         8     6      2     143
                                              2 BANK0      8     6      2
                      _readButtonRA5
                      _readButtonRB0
 ---------------------------------------------------------------------------------
 (4) _readButtonRB0                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _readButtonRA5                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _dequeue                                             12     7      5    3300
                                              8 BANK0     12     7      5
                            ___awmod
                             ___wmul
                       _isEmptyQueue
 ---------------------------------------------------------------------------------
 (3) _isEmptyQueue                                         0     0      0    1156
                       _getSizeQueue
 ---------------------------------------------------------------------------------
 (4) _getSizeQueue                                         2     2      0    1156
                                              6 BANK0      2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     895
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _check_humid_to_turn_fan                              2     2      0   11137
                                             15 BANK0      2     2      0
                           _LCDPrint
                       _LCDPrintChar
                            ___awdiv
                            ___awmod
                            ___fltol
                     _set_speed_fan3
 ---------------------------------------------------------------------------------
 (4) _set_speed_fan3                                       2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     457
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1156
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1364
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _LCDPrintChar                                         3     1      2    3671
                                             11 BANK0      3     1      2
                      _LCDMoveCursor
                         _LCDPutChar
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _changeState                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FSM                                                  2     2      0    4726
                                             15 BANK0      2     2      0
                           _LCDPrint
                    _SET_TIMER_state
                           _get_time
                 _turn_off_heat_pump
                    _turn_off_heater
                        _turn_on_fan
                  _turn_on_heat_pump
                     _turn_on_heater
 ---------------------------------------------------------------------------------
 (2) _turn_on_heater                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _turn_on_heat_pump                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _turn_on_fan                                          4     2      2     478
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _turn_off_heater                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _turn_off_heat_pump                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _get_time                                             4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _SET_TIMER_state                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _LCDPrint                                             4     1      3    4248
                                             11 BANK0      4     1      3
                      _LCDMoveCursor
                          _LCDPutStr
 ---------------------------------------------------------------------------------
 (5) _LCDPutStr                                            2     0      2    1009
                                              6 BANK0      2     0      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (5) _LCDPutChar                                           1     1      0     888
                                              5 BANK0      1     1      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (5) _LCDMoveCursor                                        5     4      1    1153
                                              6 BANK0      5     4      1
                         _LCDPutInst
 ---------------------------------------------------------------------------------
 (3) _LCDPutInst                                           1     1      0     888
                                              5 BANK0      1     1      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (3) _WritePort_BBSPI                                      2     1      1     866
                                              3 BANK0      2     1      1
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (4) _SendByteBBSPI                                        3     3      0     138
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _timer_interrupt                                      6     6      0    2774
                                             45 COMRAM     6     6      0
                     _handleListHead
 ---------------------------------------------------------------------------------
 (10) _handleListHead                                     31    31      0    2774
                                             14 COMRAM    31    31      0
                            _enqueue
                         _removeTask
                           i2___wmul
 ---------------------------------------------------------------------------------
 (11) _removeTask                                          6     6      0     332
                                              0 COMRAM     6     6      0
                        _isEmptyList
 ---------------------------------------------------------------------------------
 (12) _isEmptyList                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _enqueue                                             5     0      5    1411
                                              9 COMRAM     5     0      5
                        _isFullQueue
                          i2___awmod
                           i2___wmul
 ---------------------------------------------------------------------------------
 (11) i2___wmul                                            6     2      4     415
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (12) _isFullQueue                                         1     1      0     400
                                              8 COMRAM     1     1      0
                     i2_getSizeQueue
 ---------------------------------------------------------------------------------
 (13) i2_getSizeQueue                                      2     2      0     400
                                              6 COMRAM     2     2      0
                          i2___awmod
 ---------------------------------------------------------------------------------
 (12) i2___awmod                                           6     2      4     400
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FSM
     _LCDPrint
       _LCDMoveCursor
         _LCDPutInst
           _WritePort_BBSPI
             _SendByteBBSPI
       _LCDPutStr
         _LCDPutChar
           _WritePort_BBSPI
             _SendByteBBSPI
     _SET_TIMER_state
     _get_time
     _turn_off_heat_pump
     _turn_off_heater
     _turn_on_fan
     _turn_on_heat_pump
     _turn_on_heater
   _LCDPrint
     _LCDMoveCursor
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
     _LCDPutStr
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
   _dispatch
     _selectReadyTask
       _changeState *
       _check_humid_to_turn_fan *
         _LCDPrint
           _LCDMoveCursor
             _LCDPutInst
               _WritePort_BBSPI
                 _SendByteBBSPI
           _LCDPutStr
             _LCDPutChar
               _WritePort_BBSPI
                 _SendByteBBSPI
         _LCDPrintChar
           _LCDMoveCursor
             _LCDPutInst
               _WritePort_BBSPI
                 _SendByteBBSPI
           _LCDPutChar
             _WritePort_BBSPI
               _SendByteBBSPI
           ___awdiv (ARG)
           ___awmod (ARG)
         ___awdiv
         ___awmod
         ___fltol
         _set_speed_fan3
       _dequeue *
         ___awmod
         ___wmul
         _isEmptyQueue
           _getSizeQueue
             ___awmod
       _handleButton *
         _readButtonRA5
         _readButtonRB0
       _isEmptyQueue *
         _getSizeQueue
           ___awmod
       _printTempAndHumid *
         _LCDPrint
           _LCDMoveCursor
             _LCDPutInst
               _WritePort_BBSPI
                 _SendByteBBSPI
           _LCDPutStr
             _LCDPutChar
               _WritePort_BBSPI
                 _SendByteBBSPI
         _LCDPrintChar
           _LCDMoveCursor
             _LCDPutInst
               _WritePort_BBSPI
                 _SendByteBBSPI
           _LCDPutChar
             _WritePort_BBSPI
               _SendByteBBSPI
           ___awdiv (ARG)
           ___awmod (ARG)
         ___awdiv
         ___awmod
         ___fleq
         ___flmul
           ___xxtofl (ARG)
         ___fltol
       _readTempAndHumid *
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___xxtofl
         _readDHT
           _getByte
   _system_initialize
     _LCDInit
       _InitBBSPI
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
       _Port_BBSPIInit
         _SendByteBBSPI
       _WritePort_BBSPI
         _SendByteBBSPI
     _LTD_initialize
     _interrupt_initialize
     _osc_initialize
     _pin_initialize
     _start_timer
       _initializeTaskList
         ___wmul
         _queueInitialize
           ___wmul
   _system_setup
     _register_timer
       _addTask
         ___wmul
         _isFullList

 _timer_interrupt (ROOT)
   _handleListHead
     _enqueue
       _isFullQueue
         i2_getSizeQueue
           i2___awmod
       i2___awmod
       i2___wmul
     _removeTask
       _isEmptyList
     i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0     12C      37        7.6%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      64       7       39.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     45      7F       5       79.4%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     33      4B       1       79.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12E      32        0.0%
DATA                 0      0     25A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Nov 18 09:54:42 2019

                   _LCDMoveCursor 3A80                  ??i2_getSizeQueue 0007  
                     ?_LCDPutChar 0001                                l73 2436  
                              l76 2B44                    ??_getSizeQueue 0066  
                    ___awdiv@sign 0065           __end_of_SET_TIMER_state 3D3A  
                     ?_LCDPutInst 0001               ___wmul@multiplicand 0062  
           SendByteBBSPI@bitcount 0061                               l310 3350  
                             l231 3CE2                               l240 36A4  
                             l312 3376                               l234 364A  
                             l315 33EE                               l243 3C82  
                             l171 3D1A                               l236 365E  
                             l252 3980                               l324 2E8E  
                             l228 3708                               l180 3D20  
                             l404 3526                               l237 3660  
                             l246 3C64                               l414 3CF4  
                             l318 33C6                               l174 3C22  
                             l406 34AC                               l271 38FC  
                             l327 2F16                               l183 3C44  
                             l328 2E9C                               l265 3ABC  
                             l249 393E                               l329 2EC2  
                             l337 2A14                               l433 3D26  
                             l417 3AF6                               l258 3A40  
                             l701 3D36                               l277 3A7E  
                             l705 39C6                               l482 2C52  
                             l707 39CC                               l811 31EC  
                             l571 3B86                               l539 376C  
                             l708 3A00                               l660 2E42  
                             l805 3B5A                               l637 3872  
                             l645 3820                               l477 3CB8  
                             l486 218C                               l823 28DE  
                             l719 3D00                               l568 363A  
                             l826 3BD8                               l578 3B2C  
                             l586 3430                               l587 3490  
                             l692 3D2A                               l695 3D32  
                             l689 3D14                               l698 3D2E  
                             l799 3D38                               _FSM 278C  
                             _PR2 000FCB                       _start_timer 3492  
                    ___awmod@sign 0065                               prod 000FF3  
                             tosl 000FFD                               wreg 000FE8  
                    ___flmul@aexp 007F                      ___flmul@bexp 0080  
                    ___flmul@sign 007A                      ___flmul@temp 0085  
                    ___flmul@prod 0081                   __end_of_LCDInit 370A  
                    __CFG_LVP$OFF 000000         __size_of_readTempAndHumid 0136  
                            ?_FSM 0001              __end_of_system_setup 2B46  
                    ___fltol@exp1 0069                      __CFG_WDT$OFF 000000  
                            l1123 2D5A                              l1070 308E  
                            l3001 3964                              l1057 2FDC  
                            l3003 3966                              l3011 390A  
                            l3005 3972                              l3021 3930  
                            l3013 3916                              l1085 3298  
                            l3101 33B0                              l3007 3974  
                            l3023 3932                              l3015 3918  
                            l3031 2FFA                              l3111 33EC  
                            l1440 1A88                              l3017 3922  
                            l3009 3902                              l3041 302E  
                            l3033 2FFE                              l3025 2FDE  
                            l3121 3BD0                              l3201 118C  
                            l4001 3D16                              l1450 1CE4  
                            l1354 123E                              l3019 3924  
                            l3051 3068                              l3043 3036  
                            l3035 300C                              l3027 2FE4  
                            l3115 3B5C                              l1371 1358  
                            l1363 150E                              l3211 11EA  
                            l1355 122C                              l3203 1190  
                            l3131 106C                              l3107 33D4  
                            l4011 36A6                              l4003 3C00  
                            l1444 1DEC                              l1380 1428  
                            l1356 11F2                              l3061 3A02  
                            l3045 3044                              l3053 306E  
                            l3037 3014                              l3029 2FF2  
                            l3301 148C                              l1381 1416  
                            l3221 1220                              l3213 1200  
                            l3205 1194                              l3133 107C  
                            l3141 10A6                              l3125 104E  
                            l3109 33DC                              l4101 3720  
                            l4021 36C2                              l4013 36AA  
                            l4005 3C18                              l3071 3A96  
                            l3063 3A06                              l3055 307E  
                            l3047 305A                              l3039 3026  
                            l3119 3BB2                              l1447 1C7E  
                            l3311 14D2                              l3303 148E  
                            l3231 1270                              l3223 122A  
                            l3215 120C                              l3207 11BE  
                            l3151 10D6                              l3143 10B6  
                            l3135 108C                              l3127 105C  
                            l4103 3736                              l4031 36F0  
                            l4023 36C8                              l4015 36AC  
                            l4007 3D1C                              l3073 3AA6  
                            l3065 3A1A                              l4201 2850  
                            l3057 3086                              l3049 3062  
                            l1457 1DAE                              l1449 1CF6  
                            l3321 14FC                              l3313 14E0  
                            l3305 149E                              l3241 12AC  
                            l3233 1280                              l3225 124C  
                            l3217 1210                              l3209 11DA  
                            l3161 1116                              l3153 10E4  
                            l3145 10BC                              l3137 109C  
                            l3129 106A                              l1481 2492  
                            l3401 2ED0                              l4105 3758  
                            l4033 36F6                              l4025 36CE  
                            l4017 36AE                              l4009 3D0C  
                            l3075 3AB2                              l3067 3A20  
                            l4131 39C2                              l4123 3D28  
                            l4211 2884                              l4203 2854  
                            l3323 14FE                              l3315 14E6  
                            l3307 14AE                              l3251 12F2  
                            l3243 12BA                              l3235 128E  
                            l3227 125C                              l3219 121E  
                            l3171 1150                              l3163 1118  
                            l3155 10E6                              l3147 10CE  
                            l3139 109E                              l3091 3384  
                            l3083 3358                              l3403 2EF8  
                            l4035 36FC                              l4027 36DA  
                            l4019 36C0                              l4051 34D4  
                            l4043 34B0                              l1396 38BA  
                            l1484 25EE                              l3077 3AB6  
                            l3069 3A84                              l4125 3D30  
                            l4213 2888                              l4205 2866  
                            l3501 1A42                              l3317 14E8  
                            l3309 14CE                              l3261 136E  
                            l3253 1326                              l3245 12BC  
                            l3237 129C                              l3181 1164  
                            l3173 1154                              l3157 10F6  
                            l3165 1120                              l3149 10D0  
                            l3093 338C                              l3085 335E  
                            l4037 3702                              l4029 36EA  
                            l4053 34D8                              l4045 34CC  
                            l3413 3CA0                              l4135 39D2  
                            l4127 3D2C                              l4215 289A  
                            l4207 287A                              l3431 3B0E  
                            l3511 1A98                              l3503 1A52  
                            l3319 14EE                              l3271 13AA  
                            l3263 137E                              l3255 1328  
                            l3247 12C6                              l3239 12A8  
                            l3191 1178                              l3183 1168  
                            l3175 1158                              l3167 1130  
                            l3159 1106                              l1495 2586  
                            l3095 339A                              l3087 3370  
                            l3079 3346                              l3423 35C2  
                            l4055 34DC                              l4047 34D0  
                            l4039 3496                              l1488 252A  
                            l4129 3D34                              l4209 2880  
                            l3441 3826                              l3601 1DD8  
                            l3521 1AD2                              l3513 1AA8  
                            l3505 1A62                              l3281 13D6  
                            l3273 13AC                              l3257 1338  
                            l3249 12CC                              l3193 117C  
                            l3185 116C                              l3177 115C  
                            l3169 1142                              l3097 33A2  
                            l3409 2F14                              l3425 361A  
                            l3417 35B8                              l4049 34D2  
                            l4161 3C34                              l4153 2A16  
                            l3363 38C0                              l4067 3CE4  
                            l4171 2790                              l4219 28A2  
                            l3371 3A46                              l3435 3B14  
                            l3443 3830                              l3603 1DDC  
                            l3531 1B24                              l3523 1AE8  
                            l3507 1A72                              l3291 140E  
                            l3275 13BA                              l3267 1392  
                            l3283 13D8                              l3259 1348  
                            l3195 1180                              l3187 1170  
                            l3179 1160                              l3099 33AA  
                            l3427 361E                              l4059 34E4  
                            l4163 3C38                              l4155 3C24  
                            l3365 38D2                              l4181 27CE  
                            l4173 27A0                              l3373 3A58  
                            l3621 2F38                              l3613 2F18  
                            l3429 3AF8                              l3445 3842  
                            l3453 386A                              l3461 37DE  
                            l3541 1B6A                              l3533 1B32  
                            l3525 1AF4                              l3517 1ABC  
                            l3509 1A78                              l3277 13C2  
                            l3269 139C                              l3285 13E6  
                            l3197 1184                              l3189 1174  
                            l3381 2E60                              l4165 3C3E  
                            l4157 3C2C                              l3367 38E6  
                            l4511 28B8                              l4191 2812  
                            l4183 27E6                              l4175 27A8  
                            l3375 3A6C                              l3631 2F6C  
                            l3623 2F46                              l3615 2F1E  
                            l3711 2D3A                              l3447 3852  
                            l3439 3822                              l3463 37F0  
                            l3471 3818                              l3551 1BD8  
                            l3543 1B84                              l3535 1B3E  
                            l3527 1B0C                              l3519 1AC8  
                            l3295 1438                              l3287 13EA  
                            l3279 13C6                              l3199 1188  
                            l3607 3874                              l3383 2E68  
                            l4167 3D22                              l4159 3C30  
                            l3369 38F0                              l4513 39EA  
                            l4193 2826                              l4185 27F6  
                            l4177 27AC                              l4169 278C  
                            l3641 2FA6                              l3633 2F74  
                            l3625 2F4E                              l3617 2F2C  
                            l3713 2D4A                              l3705 2D0E  
                            l3449 385E                              l3465 3800  
                            l3457 37D0                              l3561 1C6E  
                            l3553 1C02                              l3545 1B94  
                            l3537 1B4E                              l3529 1B18  
                            l3481 19DE                              l3801 23E6  
                            l3297 1444                              l3289 13F8  
                            l3609 3886                              l3721 245C  
                            l3393 2EA6                              l3385 2E6E  
                            l3377 2E44                              l4097 370A  
                            l4505 34F8                              l4281 39B2  
                            l4195 282A                              l4187 27FA  
                            l4179 27BA                              l3651 2FCC  
                            l3643 2FAE                              l3635 2F7C  
                            l3627 2F52                              l3619 2F34  
                            l3707 2D1A                              l3475 3CF6  
                            l3467 380C                              l3459 37D4  
                            l4507 2DC8                              l3571 1CAE  
                            l3563 1C7C                              l3555 1C38  
                            l3547 1BB0                              l3539 1B5A  
                            l3491 1A16                              l3483 19E0  
                            l3803 240E                              l3299 1452  
                            l3731 24D4                              l3723 24A2  
                            l3395 2EAC                              l3387 2E76  
                            l3379 2E4E                              l4099 370E  
                            l3811 3C80                              l4283 39B6  
                            l4275 3982                              l4197 282E  
                            l4189 280C                              l3653 2FD4  
                            l3645 2FB0                              l3637 2F8A  
                            l3629 2F5A                              l3709 2D2A  
                            l4509 2E2C                              l3661 322E  
                            l3581 1D20                              l3573 1CDC  
                            l3565 1C8E                              l3557 1C46  
                            l3549 1BBC                              l3493 1A26  
                            l3485 19F0                              l3477 19C2  
                            l3741 255C                              l3733 24E0  
                            l3725 24B8                              l3717 243C  
                            l3389 2E88                              l3821 293C  
                            l3813 28E0                              l3805 3CD2  
                            l3901 20A2                              l4277 398A  
                            l4199 2840                              l3647 2FB6  
                            l3639 2F90                              l3663 325C  
                            l3591 1D96                              l3583 1D4A  
                            l3567 1C9C                              l3559 1C64  
                            l3495 1A2C                              l3487 1A00  
                            l3479 19D0                              l3751 259A  
                            l3743 2568                              l3735 2512  
                            l3719 244E                              l3823 294C  
                            l3815 28F4                              l3807 3C6A  
                            l3831 2B4A                              l3903 20BA  
                            l4279 399E                              l2961 3658  
                            l2953 3640                              l3649 2FBC  
                            l3681 2CAA                              l3673 2C54  
                            l3921 341A                              l3665 326C  
                            l3657 31EE                              l3593 1DB2  
                            l3577 1D06                              l3585 1D4E  
                            l3569 1CA0                              l3497 1A32  
                            l3489 1A10                              l3753 25BE  
                            l3745 2576                              l3737 2514  
                            l3729 24CC                              l3825 2980  
                            l3809 3C6C                              l3841 2C2E  
                            l3905 2104                              l2971 3680  
                            l2963 366E                              l2955 3644  
                            l3683 2CAC                              l3675 2C6C  
                            l3667 3290                              l3659 321E  
                            l3595 1DC2                              l3587 1D68  
                            l3579 1D12                              l3499 1A40  
                            l3771 21EC                              l3755 25CE  
                            l3747 2594                              l3739 2520  
                            l3827 29F2                              l3819 291A  
                            l3843 2C4A                              l3907 2128  
                            l3851 1E08                              l2981 368A  
                            l2973 3682                              l2965 3676  
                            l3685 2CBC                              l3925 3438  
                            l3917 33F0                              l3941 2D8C  
                            l3669 3296                              l3597 1DD0  
                            l3589 1D7C                              l3781 22BE  
                            l3773 2224                              l3757 25DC  
                            l3749 2596                              l3837 2B54  
                            l3829 2B46                              l3909 218A  
                            l3861 1E36                              l3845 1DEE  
                            l2983 3692                              l2975 3684  
                            l2967 367C                              l2991 3C62  
                            l3695 2CE6                              l3687 2CC0  
                            l3679 2C80                              l3927 345A  
                            l3919 3406                              l3951 2DDE  
                            l3943 2D98                              l3599 1DD2  
                            l3791 2340                              l3783 22CE  
                            l3775 2234                              l3767 218E  
                            l3759 25DE                              l3839 2C2A  
                            l3871 1E5E                              l3863 1E38  
                            l3847 1E02                              l2985 3694  
                            l2977 3686                              l2969 367E  
                            l2993 3944                              l3697 2CF0  
                            l3689 2CCE                              l3953 2DF2  
                            l3945 2DAA                              l3961 2E18  
                            l3937 2D5C                              l3793 2368  
                            l3785 22EA                              l3777 2250  
                            l3769 21B6                              l3881 1F10  
                            l3873 1ED2                              l3865 1E48  
                            l3857 1E0E                              l2979 3688  
                            l2987 3C4A                              l2995 394C  
                            l3971 3B2E                              l3699 2CFA  
                            l3955 2DFE                              l3939 2D78  
                            l3795 2390                              l3787 2312  
                            l3779 2286                              l3891 1F88  
                            l3883 1F40                              l3875 1ED4  
                            l2989 3C4C                              l2997 3958  
                            l3973 3B40                              l3981 3164  
                            l3957 2E10                              l3949 2DB2  
                            l3797 23B8                              l3789 2330  
                            l3893 1FB2                              l3885 1F5E  
                            l3877 1EEC                              l2999 395A  
                            l3975 3B56                              l3983 3180  
                            l3799 23D6                              l3895 1FE4  
                            l3887 1F66                              l3879 1EFE  
                            l3985 318C                              l3977 3140  
                            l3897 1FF8                              l3889 1F7E  
                            l3987 31A0                              l3979 3152  
                            l3899 2072                              l3989 31C6  
                            l3997 3ABE                              STR_1 1046  
                            STR_2 1043                              STR_3 1049  
                            STR_4 104B                              STR_5 1012  
                            STR_6 1001                              STR_7 1036  
                            STR_8 102D                              STR_9 1023  
                            u2000 3A96                              u2001 3A92  
                            u2010 3370                              u2011 336C  
                            u2100 10CE                              u2020 3384  
                            u2101 10CA                              u2021 3380  
                            u2110 10E4                              u2030 339A  
                            u2111 10E0                              u2031 3396  
                            u3000 2CA0                              u2200 121E  
                            u2120 10F6                              u2040 33C2  
                            u2201 121A                              u2121 10F2  
                            u2041 33BE                              u3010 2CCE  
                            u2210 123E                              u2130 1106  
                            u2050 33D4                              u3011 2CCA  
                            u2211 123A                              u2131 1102  
                            u2051 33D0                              u3020 2CE2  
                            u2300 137E                              u2220 124C  
                            u2140 1142                              u3100 2558  
                            u2060 33EC                              u3021 2CDE  
                            u3005 2C96                              u2301 137A  
                            u2221 1248                              u2141 113E  
                            u3101 2554                              u2061 33E8  
                            _LATA 000F89                              u3030 2D0A  
                            u2310 13AA                              u2230 125C  
                            u2150 1150                              u2070 106A  
                            u3110 2576                              _LATB 000F8A  
                            u3031 2D06                              u2311 13A6  
                            u2231 1258                              u2151 114C  
                            u2071 1066                              u3111 2572  
                            _LATC 000F8B                              u3040 2D2A  
                            u2400 148C                              u2320 13BA  
                            u2240 128E                              u2160 11BE  
                            u2080 107C                              u3120 2586  
                            u3200 2C4A                              _LATD 000F8C  
                            u3041 2D26                              u2401 1488  
                            u2321 13B6                              u2241 128A  
                            u2161 11BA                              u2081 1078  
                            u3121 2582                              u3201 2C46  
                            u3050 2D3A                              u2410 149E  
                            u2330 13D6                              u2250 129C  
                            u2170 11D6                              u2090 108C  
                            u3130 2594                              u3210 1E02  
                            u3051 2D36                              u2411 149A  
                            u2331 13D2                              u2251 1298  
                            u2171 11D0                              u2091 1088  
                            u3131 2590                              u3211 1DFE  
                            u2420 14AE                              u2340 13E6  
                            u2260 12BA                              u2180 11D8  
                            u3140 25CE                              u3060 244E  
                            u3300 2128                              u3220 1E32  
                            u2421 14AA                              u2341 13E2  
                            u2261 12B6                              u3141 25CA  
                            u3061 244A                              u3301 2124  
                            u3221 1E2E                              u2430 14CE  
                            u2350 13F8                              u2270 12F2  
                            u2190 1200                              u3150 25DC  
                            u3070 245C                              u3230 1E48  
                            u2431 14CA                              u2351 13F4  
                            u2271 12EE                              u2191 11FC  
                            u3151 25D8                              u3071 2458  
                            u3231 1E44                              u2520 38D2  
                            u3400 2DF2                              u3160 21EC  
                            u2440 14E0                              u2360 140E  
                            u2280 1338                              u3080 24B8  
                            u2600 2F10                              u3240 1E5A  
                            u2521 38CE                              u3401 2DEE  
                            u3161 21E8                              u2441 14DC  
                            u2361 140A                              u2281 1334  
                            u3081 24B4                              u2601 2F0C  
                            u3241 1E56                              u2530 38E2  
                            u3330 341A                              u3410 2E10  
                            u3170 2286                              u2450 14FC  
                            u2370 1424                              u2290 136E  
                            u3090 250E                              u2610 3CB6  
                            u3250 1EFE                              u2531 38DE  
                            u3331 3416                              u3411 2E0C  
                            u3171 2282                              u2451 14F8  
                            u2371 1420                              u2291 136A  
                            u3091 250A                              u2611 3CB0  
                            u3251 1EFA                              u1900 3658  
                            u3420 3B40                              u2540 3A58  
                            u2700 3800                              u2380 1438  
                            u3180 28F4                              u2620 3CB8  
                            u3260 1F10                              u1901 3654  
                            u3421 3B3C                              u2541 3A54  
                            u3341 3424                              u2701 37FC  
                            u2381 1434                              u3181 28F0  
                            u3261 1F0C                              u1910 366E  
                            u3430 3B52                              u2550 3A68  
                            u2710 19DE                              u2390 1452  
                            u3190 294C                              u2630 363A  
                            u3270 1F40                              u1911 366A  
                            u3431 3B4E                              u2551 3A64  
                            u3351 3484                              u2711 19DA  
                            u2391 144E                              u3191 2948  
                            u2631 3636                              u3271 1F3C  
                            u1920 36A4                              u3600 2850  
                            u3440 3152                              u2640 3B0E  
                            u2800 1C7C                              u2720 19F0  
                            u2560 2E88                              u3280 1FF8  
                            u1921 36A0                              u3601 284C  
                            u3441 314E                              u2641 3B0A  
                            u2801 1C78                              u2721 19EC  
                            u2561 2E84                              u3521 3718  
                            u3281 1FF4                              u1930 2FF2  
                            u3450 3164                              u2650 3B2A  
                            u2810 1C9C                              u2730 1A00  
                            u2570 2E9C                              u3530 3736  
                            u3290 2072                              u1931 2FEE  
                            u3451 3160                              u2651 3B24  
                            u2811 1C98                              u2731 19FC  
                            u2571 2E98                              u3531 3732  
                            u3291 206E                              u2900 2F2C  
                            u1940 300C                              u2660 3B2C  
                            u3380 2D8C                              u2820 1CAE  
                            u2740 1A40                              u2580 2EBE  
                            u3460 34A8                              u2901 2F28  
                            u1941 3008                              u3381 2D88  
                            u2821 1CAA                              u2741 1A3C  
                            u2581 2EBA                              u3461 34A4  
                            u2910 2F46                              u1950 3026  
                            u2670 3842                              u3390 2DAA  
                            u2830 1CDC                              u2750 1A52  
                            u2590 2ED0                              u3550 376C  
                            u2911 2F42                              u1951 3022  
                            u2671 383E                              u3391 2DA6  
                            u2831 1CD8                              u2751 1A4E  
                            u2591 2ECC                              u3551 3768  
                            u2920 2F6C                              u1960 3044  
                            u2680 3852                              u2840 1CF2  
                            u2760 1A62                              u2921 2F68  
                            u1961 3040                              u2681 384E  
                            u2841 1CEE                              u2761 1A5E  
                            u2930 2F8A                              u1970 305A  
                            u2690 37F0                              u2850 1D06  
                            u2770 1A98                              u2931 2F86  
                            u1971 3056                              u2691 37EC  
                            u2851 1D02                              u2771 1A94  
                            u3580 27A0                              u2940 2FA6  
                            u1980 307E                              u2860 1D20  
                            u2780 1AA8                              u3548 3744  
                            u3581 279C                              u2941 2FA2  
                            u1981 307A                              u2861 1D1C  
                            u2781 1AA4                              u3549 3758  
                            u1990 3A40                              u3590 27F6  
                            u2950 2FCC                              u2870 1D68  
                            u2790 1C22                              u1991 3A3C  
                            u3591 27F2                              u2951 2FC8  
                            u2871 1D64                              u3807 36E2  
                            u2960 321E                              u2880 1D96  
                            u2961 321A                              u2881 1D92  
                            u3817 2E56                              u2970 325C  
                            u2890 1DD0                              u2971 3258  
                            u2891 1DCC                              u2795 1C18  
                            u3827 2E64                              u2980 3290  
                            u2981 328C                              u3837 3386  
                            u2990 2C6C                              u3847 3904  
                            u2991 2C68                              u3857 3946  
                            u3797 36B6                              _TMR2 000FCC  
                  ??_isEmptyQueue 0068                     ?_LCDPrintChar 006B  
        __size_of_selectReadyTask 0064                              _head 00C8  
                            _main 3982                              _rear 00D5  
                            fsr1h 000FE2                              fsr2h 000FDA  
                            indf2 000FDF                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 004C  
                ?_WritePort_BBSPI 0063                              prodh 000FF4  
                            prodl 000FF3                 _LCDMoveCursor$701 0068  
                            start 000E                __size_of_LCDPutStr 0040  
                   __CFG_IESO$OFF 000000                     __CFG_MCLRE$ON 000000  
                  ?_LCDMoveCursor 0066                      ___param_bank 000000  
                           ??_FSM 006F           __end_of_queueInitialize 363C  
                __end_of_LCDPrint 38FE                     ___fltol@sign1 0068  
                     LCDPrint@pos 006B                       LCDPrint@ptr 006C  
                 __end_of___fladd 1510                             ?_main 0001  
                 __end_of___awdiv 2FDE                             STR_12 103D  
                           STR_13 1036                             STR_14 1023  
                           STR_15 1036                   __end_of___awmod 3090  
                 __end_of___flmul 1DEE                   __end_of_addTask 218E  
                 __end_of___flsub 38BC                   __end_of___fltol 2D5C  
                           _T0CON 000FD5                   ___awdiv@divisor 0062  
                           _T1CON 000FCD                             _T2CON 000FCA  
                           i2l430 359C                             i2l506 278A  
                           i2l507 26DA                             i2l509 26F6  
                           i2l525 18C0                             i2l517 19C0  
                           i2l519 1528                             i2l474 3CD0  
                           i2l571 3BB0                             i2l574 3C9E  
                           i2l582 3344                             i2l826 3BFE  
                 ___awdiv@counter 0064                             _TMR1H 000FCF  
                           _TMR0L 000FD6                             _TMR1L 000FCE  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                   __CFG_PWRT$OFF 000000                   __end_of_getByte 33F0  
                  __CFG_FCMEN$OFF 000000                       _turn_on_fan 39C2  
                 __end_of_dequeue 3492           __size_of_Port_BBSPIInit 001E  
                 __end_of_readDHT 2F18              __size_of_changeState 002E  
                 __end_of_enqueue 3346                             _count 0048  
                           _front 00D7       __size_of_initializeTaskList 010E  
                           _value 004B                             _state 00CA  
                  ??_LCDPrintChar 006D                    __CFG_BOREN$OFF 000000  
                           pclath 000FFA                             tablat 000FF5  
   __size_of_interrupt_initialize 0006               __size_of_LCDPutChar 0042  
                __end_ofi2___wmul 3C00                             plusw0 000FEB  
                           plusw1 000FE3                             plusw2 000FDB  
             __size_of_LCDPutInst 0042                             ttemp5 004D  
                           ttemp6 0050                             ttemp7 0054  
                           status 000FD8           __size_of_osc_initialize 0006  
                           wtemp8 004D                __size_ofi2___awmod 00B0  
                  turn_on_fan@idx 0060                   __initialization 376E  
                    __end_of_main 39C2              __end_of_handleButton 2E44  
                ?_SET_TIMER_state 0001                    _pin_initialize 3C00  
        __size_of_timer_interrupt 35B0                            ??_main 00A5  
                   __activetblptr 000003            __size_of_readButtonRB0 0052  
          __size_of_readButtonRA5 0052                         ??_LCDInit 0066  
                    LCDPutChar@ch 0065                 __end_of_LCDPutStr 3A42  
                   _count_timeout 00B9                      LCDPrint@line 006E  
                          _ADCON1 000FC1                __size_of_InitBBSPI 0012  
                          _CCPR4L 000F74          __size_of_turn_off_heater 0004  
                ___awdiv@dividend 0060                      LCDPutInst@ch 0065  
               _temperature_dht11 00C3                  ??_turn_on_heater 0060  
                  _register_timer 3ABE                            i2l1070 313E  
                          i2l4111 32B2                            i2l4113 32C8  
                          i2l3331 30A2                            i2l4115 32D0  
                          i2l4107 329A                            i2l3341 30D6  
                          i2l3333 30AA                            i2l4117 32F0  
                          i2l4301 3560                            i2l3351 3112  
                          i2l3343 30DE                            i2l3335 30AE  
                          i2l3327 3090                            i2l4119 331C  
                          i2l4071 2606                            i2l4231 15F6  
                          i2l4311 3590                            i2l4303 3564  
                          i2l3353 3118                            i2l3345 30E6  
                          i2l3337 30BC                            i2l3329 3094  
                          i2l4081 2698                            i2l4073 262A  
                          i2l4241 168E                            i2l4233 1600  
                          i2l4225 1510                            i2l4313 3598  
                          i2l4305 3572                            i2l3347 30F4  
                          i2l3355 311E                            i2l3339 30C4  
                          i2l4091 2770                            i2l4083 26AA  
                          i2l4251 173A                            i2l4243 16DE  
                          i2l4235 1650                            i2l4307 3580  
                          i2l3357 312E                            i2l3349 310A  
                          i2l4085 26E2                            i2l4093 2788  
                          i2l4077 2630                            i2l4069 25F2  
                          i2l4261 18F4                            i2l4253 1762  
                          i2l4245 170E                            i2l4237 166A  
                          i2l4229 152E                            i2l4309 358E  
                          i2l3359 3136                            i2l4087 271A  
                          i2l4079 2694                            i2l4255 1792  
                          i2l4247 1716                            i2l4239 167C  
                          i2l4263 197C                            i2l4089 2748  
                          i2l4265 19A4                            i2l4257 17A6  
                          i2l4249 1730                            i2l4259 183E  
                          i2l4295 3542                            i2l3913 3CBA  
                          i2l4297 3550                            i2l3763 3B88  
                          i2l4299 355E                            i2l3933 3C84  
                          i2l3991 3BDA                            i2l3993 3BF6  
             initializeTaskList@i 0068                 _temperature_value 00CD  
            __end_of_getSizeQueue 3B88                            _OSCCON 000FD3  
         _check_humid_to_turn_fan 3140                      LCDPutStr@ptr 0066  
      fp__check_humid_to_turn_fan 0000                  __end_of___xxtofl 25F0  
                 ??_LCDMoveCursor 0067                    __CFG_XINST$OFF 000000  
            __size_of_isEmptyList 0018                  __end_of_dispatch 3D28  
               ??_selectReadyTask 00A0                  __end_of_get_time 3CF6  
                          ___fleq 31EE                         ??___fladd 008F  
                          ___wmul 3BB2            __end_of_pin_initialize 3C24  
                       ??___awdiv 0064                         ??___awmod 0064  
                       ??___flmul 0076                         ??_addTask 0073  
                       ??___flsub 009F                         ??___fltol 0064  
            __size_of_isFullQueue 001C                  ?_queueInitialize 0001  
                          _ledVal 004A                      addTask@delay 006A  
               _flag_switch_state 00C7                            clear_0 3796  
                          clear_1 37A8                            clear_2 37B4  
                          clear_3 37C0                  ___awdiv@quotient 0066  
                          _period 00D9                   ___awmod@divisor 0062  
                       ??_getByte 0060                   ___awmod@counter 0064  
            __end_of_isEmptyQueue 3B2E                         ??_dequeue 006D  
                       ??_readDHT 0064                         ??_enqueue 000F  
           __size_of_system_setup 0130            Port_BBSPIInit@port_dir 0063  
               __end_ofi2___awmod 3140                  LCDMoveCursor@pos 0066  
                    __mediumconst 0000           __size_of_LTD_initialize 000A  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8            __end_of_register_timer 3AF8  
                  i2___awmod@sign 0006                  _readTempAndHumid 28E0  
                    ___xxtofl@arg 006A                      ___xxtofl@exp 0069  
                    ___xxtofl@val 0060                        ___fleq@ff1 0060  
                      ___fleq@ff2 0064                        __accesstop 0060  
         __end_of__initialization 37C6                         ?_LCDPrint 006B  
                   _readButtonRB0 37D0                     _readButtonRA5 3822  
                   ___rparam_used 000001                        ___fltol@f1 0060  
      __end_of_turn_off_heat_pump 3D38            __size_of_SendByteBBSPI 006A  
                  __pcstackCOMRAM 0001                      __pidataBANK0 3D02  
                 ?_pin_initialize 0001                 __end_of_InitBBSPI 3CE4  
                    _system_setup 2A16                      ??_LCDPutChar 0065  
                    ??_LCDPutInst 0065              __end_of_LCDPrintChar 3A80  
                       ?i2___wmul 0001                      ?_start_timer 0001  
                 __CFG_OSC$INTIO7 000000                    _Port_BBSPIInit 3C66  
               ??_timer_interrupt 002E            printTempAndHumid@humid 0091  
                      addTask@idx 0085                        addTask@cur 0083  
                      addTask@ptr 006E                        addTask@sum 0081  
                 ?_register_timer 0086         ??_check_humid_to_turn_fan 006F  
                      __pbssBANK0 00A5                        __pbssBANK1 0100  
                  _osc_initialize 3D16                    ?_readButtonRB0 0060  
                  ?_readButtonRA5 0060                __end_of_LCDPutChar 3940  
                      ??_LCDPrint 006E                __end_of_LCDPutInst 3982  
               ??_turn_off_heater 0060           __size_of_handleListHead 04B2  
           __size_of_handleButton 00E8                           ?___fleq 0060  
          start_timer@timer_vaddr 006C                           ?___wmul 0060  
                         _CCP4CON 000F73               getByte@byteReceived 0060  
         __size_of_set_speed_fan3 000C                   LCDPrintChar@pos 006B  
                      ??i2___wmul 0005            __end_of_Port_BBSPIInit 3C84  
                         _LCDInit 36A6                     _SendByteBBSPI 363C  
                       ?___xxtofl 0060                      ?_turn_on_fan 0060  
                      _isFullList 3CA0             __size_of_getSizeQueue 002C  
          __end_of_osc_initialize 3D1C                         ?_dispatch 0001  
                       ?_get_time 0060                        _countRB0_1 0034  
                      _countRA5_1 003C                      _handleButton 2D5C  
                WritePort_BBSPI@a 0063             LCDMoveCursor@position 006A  
               _turn_on_heat_pump 3D2C              register_timer@period 0086  
              ?_turn_on_heat_pump 0001                           __Hparam 0000  
                         __Lparam 0000             __size_of_isEmptyQueue 0036  
                 __size_of___fleq 00AC                           ___fladd 104E  
 __end_of_check_humid_to_turn_fan 31EE                           ___awdiv 2F18  
                         ___awmod 2FDE                           ___flmul 19C2  
                         _addTask 1DEE                           ___flsub 3874  
                         ___fltol 2C54                   __size_of___wmul 0028  
        __size_of_WritePort_BBSPI 0020      __end_of_interrupt_initialize 3D22  
                    __psmallconst 1000               ??_turn_on_heat_pump 0060  
                         __pcinit 376E                           __ramtop 1000  
                    _getSizeQueue 3B5C                           _getByte 3346  
                         __ptext0 3982                           __ptext1 2A16  
                         __ptext2 3ABE                           __ptext3 1DEE  
                         __ptext4 3CA0                           __ptext5 3C24  
                         __ptext6 3492                           __ptext7 2B46  
                         __ptext8 35B8                           __ptext9 3C00  
                         _dequeue 33F0                 _printTempAndHumid 218E  
                    __size_of_FSM 0154                           _readDHT 2E44  
                  ?_SendByteBBSPI 0001                   ?_Port_BBSPIInit 0001  
                         _enqueue 329A                         _T2CONbits 000FCA  
                   ??_changeState 0060                        ??___xxtofl 0064  
                  _LTD_initialize 3D0C                  ___awmod@dividend 0060  
         __size_ofi2_getSizeQueue 002A                ?_printTempAndHumid 0001  
                   addTask@period 0066        __end_of_initializeTaskList 2C54  
                         _task_id 00A5                           _time_ms 00BD  
                       _LCDPutStr 3A02                        ??_dispatch 00A5  
                      ??_get_time 0064                    __pintcode_body 3528  
                 ?_osc_initialize 0001              end_of_initialization 37C6  
                 ??_readButtonRB0 0062                   ??_readButtonRA5 0062  
       __end_of_turn_on_heat_pump 3D30               ??_printTempAndHumid 0087  
                 _selectReadyTask 370A               fp__readTempAndHumid 0000  
                         int_func 3528               i2___wmul@multiplier 0001  
                    _isEmptyQueue 3AF8                 LCDMoveCursor@line 0067  
                      _removeTask 25F0             __size_of_LCDPrintChar 003E  
              handleListHead@prev 0026                           postdec1 000FE5  
                         postdec2 000FDD          __end_of_readTempAndHumid 2A16  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE         __end_of_printTempAndHumid 2438  
            handleButton@checkRB0 0068              handleButton@checkRA5 0066  
                       _PORTAbits 000F80                         _PORTBbits 000F81  
                       _PORTCbits 000F82            __end_of_LTD_initialize 3D16  
            handleButton@data_ptr 0062                    getByte@timeOut 0061  
                      dequeue@idx 006D                       ___fladd@grs 0096  
                   ___xxtofl@sign 0068                       ?_isFullList 0001  
                       _TRISAbits 000F92                         _TRISCbits 000F94  
                       _TRISFbits 000F97                         _TRISGbits 000F98  
        __size_of_SET_TIMER_state 0002              __size_of_start_timer 0096  
                      ?_LCDPutStr 0066                         i2___awmod 3090  
             __end_of_changeState 3B5C               SendByteBBSPI@output 0060  
                     ___flmul@grs 007B                      _LCDPrintChar 3A42  
                   ??_isEmptyList 0001                  ??_pin_initialize 0060  
                  _handleListHead 1510                 __size_of_LCDPrint 0042  
                   ??_isFullQueue 0009             __end_of_LCDMoveCursor 3ABE  
                  __end_of___fleq 329A                   _timer_interrupt 0008  
                  __end_of___wmul 3BDA            register_timer@callback 008E  
                    _firstReadRB0 00DC                      _firstReadRA5 00DE  
                  _set_speed_fan3 3CF6                   ??_SendByteBBSPI 0060  
          register_timer@data_ptr 0091                     _secondReadRB0 00DB  
                   _secondReadRA5 00DD                   ?_LTD_initialize 0001  
              _turn_off_heat_pump 3D34                         _InitBBSPI 3CD2  
                ??_register_timer 0093                  i2___wmul@product 0005  
               ??_WritePort_BBSPI 0064          __size_of_queueInitialize 0084  
             start_initialization 376E           __end_of_selectReadyTask 376E  
                     __end_of_FSM 28E0                 __size_ofi2___wmul 0026  
                 _turn_off_heater 3D30               ?_turn_off_heat_pump 0001  
                      ?i2___awmod 0001               selectReadyTask@node 00A0  
            __size_of_turn_on_fan 0040        __size_of_turn_on_heat_pump 0004  
            _interrupt_initialize 3D1C            __end_of_handleListHead 19C2  
                      enqueue@ptr 000A                       ?_removeTask 0001  
         __size_of_turn_on_heater 0004              ??_turn_off_heat_pump 0060  
             __size_of_isFullList 001A                          ??___fleq 0068  
                     addTask@data 0071                          ??___wmul 0064  
          __end_of_set_speed_fan3 3D02               __end_of_isEmptyList 3CD2  
                     addTask@prev 007F                       __pdataBANK0 00D5  
      __size_of_printTempAndHumid 02AA               __end_of_isFullQueue 3CA0  
                      ?_InitBBSPI 0001                         ___fladd@a 008B  
                       ___fladd@b 0087                          ?_LCDInit 0001  
                     __pbssBIGRAM 0164                    i2_getSizeQueue 3B88  
                     _changeState 3B2E                         ___flmul@a 0072  
                       ___flmul@b 006E                       __pbssCOMRAM 0034  
                       ___flsub@a 009B                         ___flsub@b 0097  
                   __pcstackBANK0 0060                 __size_of___xxtofl 01B8  
                     ??_LCDPutStr 0068             ?_interrupt_initialize 0001  
           printTempAndHumid@temp 008F                 ??_SET_TIMER_state 0060  
               __size_of_dispatch 0006                 __size_of_get_time 0012  
                 ?_handleListHead 0001           __end_of_timer_interrupt 35B8  
                   removeTask@idx 0006                     removeTask@pos 0005  
                       __pintcode 0008                          ?___fladd 0087  
                        ?___awdiv 0060                          ?___awmod 0060  
                        ?___flmul 006E                          ?_addTask 0066  
                        ?___flsub 0097                          ?___fltol 0060  
                 ?_set_speed_fan3 0060                    LCDPrintChar@ch 006C  
                ??_Port_BBSPIInit 0063                   enqueue@data_ptr 000D  
                        ?_getByte 0001            __end_ofi2_getSizeQueue 3BB2  
                        ?_dequeue 0068           __end_of_turn_off_heater 3D34  
                        ?_readDHT 0001                       __smallconst 1000  
                        ?_enqueue 000A               register_timer@delay 008A  
                ??_osc_initialize 0060          ?_check_humid_to_turn_fan 0001  
                ?_selectReadyTask 0001               __size_of_removeTask 019C  
                     ??i2___awmod 0005                  LCDPrintChar@line 006D  
               ??_queueInitialize 0066                    ___wmul@product 0064  
                        _LCDPrint 38BC                          _LATAbits 000F89  
                        _LATCbits 000F8B                          _LATDbits 000F8C  
                        _LATFbits 000F8E                _initializeTaskList 2B46  
                        _PIE1bits 000F9D                       _isEmptyList 3CBA  
                        i2u250_40 310A                          i2u250_41 3106  
                        i2u251_40 312E                          i2u331_40 3CCE  
                        i2u251_41 312A                          i2u331_41 3CC8  
                        i2u332_40 3CD0                          i2u246_40 30A2  
                        i2u350_40 271A                          i2u246_41 309E  
                        i2u350_41 2716                          i2u247_40 30BC  
                        i2u351_40 2748                          i2u247_41 30B8  
                        i2u351_41 2744                          i2u248_40 30D6  
                        i2u336_40 3C9C                          i2u248_41 30D2  
                        i2u336_41 3C96                          i2u249_40 30F4  
                        i2u337_40 3C9E                          i2u361_40 1524  
                        i2u249_41 30F0                          i2u361_41 1520  
                        _PIR1bits 000F9E                         _task_list 0164  
                        i2u362_40 15F6                          i2u370_40 3550  
                        i2u362_41 15F2                          i2u370_41 354C  
                        i2u347_40 2606                          i2u363_40 167C  
                        i2u371_40 355E                          i2u347_41 2602  
                        i2u363_41 1678                          i2u371_41 355A  
                        i2u356_40 32AE                          i2u348_40 262A  
                        i2u364_40 168E                          i2u372_40 3580  
                        i2u356_41 32AA                          i2u348_41 2626  
                        i2u364_41 168A                          i2u372_41 357C  
                        i2u357_40 32C8                          i2u349_40 26AA  
                        i2u365_40 16DE                          i2u373_40 358E  
                        i2u357_41 32C4                          i2u349_41 26A6  
                        i2u365_41 16DA                          i2u373_41 358A  
                        i2u366_40 17A6                          i2u366_41 17A2  
                        i2u367_40 183E                          i2u367_41 183A  
                     _isFullQueue 3C84                          i2u368_40 18F4  
                        i2u368_41 18F0                          i2u369_40 19A4  
                        i2u369_41 19A0                 handleListHead@cur 002A  
               handleListHead@pos 002C                 handleListHead@sum 0028  
             ?_initializeTaskList 0001                 ?_readTempAndHumid 0001  
           _printTempAndHumid$131 008B             _printTempAndHumid$129 0087  
              ??_readTempAndHumid 009F                   ?i2_getSizeQueue 0001  
               ___wmul@multiplier 0060                       ??_InitBBSPI 0060  
              SendByteBBSPI@input 0062                          i2___wmul 3BDA  
                __size_of_LCDInit 0064                      ??_isFullList 0060  
               _system_initialize 3C24              ??_initializeTaskList 0068  
          ??_interrupt_initialize 0060                         copy_data0 3782  
              i2___awmod@dividend 0001                ?_system_initialize 0001  
           __end_of_readButtonRB0 3822             __end_of_readButtonRA5 3874  
         set_speed_fan3@dutyCycle 0060               ??_system_initialize 006D  
                ?_timer_interrupt 0001                          __Hrparam 0000  
                  _turn_on_heater 3D28                          __Lrparam 0000  
                     _RB0_pressed 00CB               _handleListHead$2330 0022  
             _handleListHead$2331 0024               _handleListHead$2325 001F  
                 _WritePort_BBSPI 3C46                __end_of_isFullList 3CBA  
                ??_LTD_initialize 0060                     ?_system_setup 0001  
                __size_of___fladd 04C2                  __size_of___awdiv 00C6  
                __size_of___awmod 00B2                  __size_of___flmul 042C  
                __size_of_addTask 03A0                  __size_of___flsub 0048  
                __size_of___fltol 0108             i2___wmul@multiplicand 0003  
                     _RA5_pressed 00CC                  ?_turn_off_heater 0001  
                __size_of_getByte 00AA                  __size_of_dequeue 00A2  
                   ??_start_timer 006A                          ___xxtofl 2438  
                __size_of_readDHT 00D4         __end_of_system_initialize 3C46  
                __size_of_enqueue 00AC                   fp__handleButton 0000  
                        __ptext10 3D16                          __ptext11 3D1C  
                        __ptext20 3346                          __ptext12 3D0C  
                        __ptext21 2438                          __ptext13 36A6  
                        __ptext30 33F0                          __ptext22 3874  
                        __ptext14 3C66                          __ptext31 3AF8  
                        __ptext23 104E                          __ptext15 3CD2  
                        __ptext40 3B2E                          __ptext32 3B5C  
                        __ptext24 218E                          __ptext16 3D22  
                        __ptext41 278C                          __ptext33 3BB2  
                        __ptext25 19C2                          __ptext17 370A  
                        __ptext50 3A02                          __ptext42 3D28  
                        __ptext34 3140                          __ptext26 31EE  
                        __ptext18 28E0                          __ptext51 38FE  
                        __ptext43 3D2C                          __ptext35 3CF6  
                        __ptext27 2D5C                          __ptext19 2E44  
                        __ptext60 329A                          __ptext52 3A80  
                        __ptext44 39C2                          __ptext36 2C54  
                        __ptext28 37D0                          __ptext61 3BDA  
                        __ptext53 3940                          __ptext45 3D30  
                        __ptext37 2FDE                          __ptext29 3822  
                        __ptext62 3C84                          __ptext54 3C46  
                        __ptext46 3D34                          __ptext38 2F18  
                        __ptext63 3B88                          __ptext55 363C  
                        __ptext47 3CE4                          __ptext39 3A42  
                        __ptext64 3090                          __ptext48 3D38  
                        __ptext65 0000                          __ptext57 1510  
                        __ptext49 38BC                          __ptext58 25F0  
                        __ptext59 3CBA                          _dispatch 3D22  
                        _get_time 3CE4                          _countRB0 0038  
                        _countRA5 0040              fp__printTempAndHumid 0000  
                   __size_of_main 0040                    fp__changeState 0000  
          __end_of_turn_on_heater 3D2C                       _ready_queue 0100  
                    ??_removeTask 0001                          getByte@i 0063  
                        _num_task 00C9                    ??_system_setup 0093  
                        _stateRB0 00C5                          int$flags 004C  
                        _stateRA5 00C6                        _LCDPutChar 38FE  
                      _LCDPutInst 3940             __end_of_SendByteBBSPI 36A6  
               i2___awmod@divisor 0003                 i2___awmod@counter 0005  
                      _INTCONbits 000FF2                      ?_changeState 0001  
                 _SET_TIMER_state 3D38                     ??_turn_on_fan 0062  
              __end_of_removeTask 278C                  ??_handleListHead 000F  
          __size_of_LCDMoveCursor 003E               __end_of_start_timer 3528  
                        intlevel2 0000                     ?_handleButton 0062  
         __end_of_WritePort_BBSPI 3C66                   ?_turn_on_heater 0001  
                ??_set_speed_fan3 0062       __size_of_turn_off_heat_pump 0004  
    check_humid_to_turn_fan@humid 006F                   readDHT@checkSum 0065  
                    _prev_time_ms 0044                     ?_getSizeQueue 0001  
         __size_of_pin_initialize 0024                   _queueInitialize 35B8  
         WritePort_BBSPI@port_add 0064        __size_of_system_initialize 0022  
                  _humidity_dht11 00C1                     ___fladd@signs 0093  
                  ??_handleButton 0064                    _humidity_value 00D1  
         __size_of_register_timer 003A               __end_of_turn_on_fan 3A02  
                     dequeue@temp 006F                      ___fladd@aexp 0094  
                    ___fladd@bexp 0095                     ?_isEmptyQueue 0001  
                queueInitialize@i 0066  __size_of_check_humid_to_turn_fan 00AE  
                  readDHT@timeOut 0066                      ?_isEmptyList 0001  
                    ?_isFullQueue 0001  
